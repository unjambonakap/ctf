
# coding: utf-8

# In[1]:


import scapy.all as scapy


# In[12]:


dx = scapy.rdpcap('./pcap.pcap')


# In[44]:


v1 = '192.168.221.105'
v2 = '192.168.221.91'

import binascii
start = binascii.unhexlify('e766e65ae8509d6833d73a37d1ec4ad8189919a5402f801531e936d132e5df42f22f99c8db9ffe673a0352c58d7999c4')
started = False
from collections import defaultdict
data = dict(v2c= bytearray(), c2v=bytearray())

cnta = 0
for pkt in dx:
  ip = pkt[scapy.IP]
  between = set([ip.src, ip.dst])
  if (v1 not in between) or (v2 not in between): continue
  tcp = pkt[scapy.TCP]
  payload = bytes(pkt.payload)
  if not started:
    if len(payload) < len(start): continue
    if payload[-len(start):] != start: continue
    started = True
  
  payload = b'\x00'*0xc + payload
  typ = 'v2c'
  if v2 == ip.src:
    s = payload[0xa8:]
    
    if len(tcp.payload) == 1460:
      if cnta !=0 : s = bytes(tcp.payload)
      cnta += 1
    elif cnta!=0:
      s = bytes(tcp.payload)
      cnta = 0
    if len(s)< 4: continue
    typ = 'c2v'
  else:
    s = payload[0x88:]
  if len(s) != 0x30  and (s[2:4] != b'\x00\x8f' and len(s) < 93): continue
  print(len(s), pkt.time, s[:4], len(payload))
  data[typ] += s
    


# In[45]:


import pickle
pickle.dump(data, open('./conn2.transfer.pickle', 'wb'))

