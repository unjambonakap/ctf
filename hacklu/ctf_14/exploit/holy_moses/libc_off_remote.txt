Gadgets information
============================================================
0x000000000018788d : adc ah, bh ; call rax
0x0000000000190fbe : adc ah, byte ptr [rbx] ; ljmp 0xaf0d1cff, -0x15f4 ; jmp qword ptr [rdx]
0x00000000001ab700 : adc ah, dl ; cmc ; jmp qword ptr [rsi]
0x000000000019384d : adc al, -0x15 ; jmp qword ptr [rdx]
0x0000000000165b81 : adc al, -0x16 ; test rdx, rdx ; je 0x165b91 ; call rdx
0x00000000000cfed6 : adc al, -0x17 ; ret 0xfffa
0x0000000000002b63 : adc al, -0x19 ; ret
0x00000000001a9dd4 : adc al, -0x1f ; hlt ; jmp qword ptr [rdx]
0x0000000000189dec : adc al, -0x23 ; add byte ptr [rax], al ; ret 0xee7d
0x000000000019a78c : adc al, -0x27 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001abca4 : adc al, -0x35 ; add dword ptr [rax], eax ; pop rax ; fdivrp st(5) ; call qword ptr [rax]
0x000000000018e3d8 : adc al, -0x35 ; stc ; call rsp
0x000000000018c004 : adc al, -0x37 ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000037554 : adc al, -0x39 ; setne al ; movzx eax, al ; ret
0x0000000000037574 : adc al, -0x39 ; xor eax, eax ; ret
0x00000000001ab4a4 : adc al, -0x3d ; add dword ptr [rax], eax ; fcom st(2) ; cmc ; jmp qword ptr [rsi]
0x000000000018aa88 : adc al, -0x3e ; out dx, eax ; jmp rsp
0x000000000018ec40 : adc al, -0x41 ; cli ; jmp rsp
0x00000000000840e7 : adc al, -0x48 ; add rax, rdx ; jmp rax
0x0000000000034af2 : adc al, -0x49 ; add rdx, rdi ; jmp rdx
0x0000000000064d6e : adc al, -0x50 ; add rax, rdx ; jmp rax
0x00000000001a89a4 : adc al, -0x68 ; add dword ptr [rax], eax ; clc ; sub dh, ch ; jmp qword ptr [rcx]
0x0000000000054b37 : adc al, -0x68 ; add rax, rdx ; jmp rax
0x00000000000b57fd : adc al, -0x69 ; add rdx, rdi ; jmp rdx
0x0000000000060564 : adc al, -0x6b ; add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x0000000000143861 : adc al, -0x6d ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000006ddd5 : adc al, -0x6f ; add rcx, rdx ; jmp rcx
0x000000000013b970 : adc al, -0x6f ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000013a09e : adc al, -0x6f ; sub eax, edx ; ret
0x00000000001a81a4 : adc al, -0x70 ; add dword ptr [rax], eax ; sbb byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000000b5e9a : adc al, -0x70 ; add rax, rdx ; jmp rax
0x00000000000dc9ea : adc al, -0x73 ; add qword ptr [r8 - 0x7d], rcx ; ret
0x0000000000192c8e : adc al, -0x74 ; ljmp 0x510d1cff, -0x1576 ; jmp qword ptr [rdx]
0x00000000000fe1f8 : adc al, -0x76 ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000075dfe : adc al, -0x76 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000fb1ce : adc al, -0x77 ; ret
0x00000000000ec873 : adc al, -0x77 ; ret 0xdaf7
0x0000000000058353 : adc al, -0x7d ; ret 0x8308
0x00000000000e25d1 : adc al, -0x80 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017a285 : adc al, -0xc ; call rbx
0x00000000001a09c9 : adc al, -0xf ; jmp qword ptr [rax]
0x00000000001a60c1 : adc al, -7 ; call qword ptr [rax]
0x00000000000572e7 : adc al, 0 ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000013a4df : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a549 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001a5688 : adc al, 0 ; add byte ptr [rax], al ; cld ; add dword ptr fs:[rax], eax ; stosb byte ptr [rdi], al ; ret 0xffe7
0x00000000001ab488 : adc al, 0 ; add byte ptr [rax], al ; cld ; ret 1
0x00000000001ab578 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000019b478 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001ab3f8 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x00000000001ab530 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001ab4e8 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001ab3e0 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001ab428 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001ab4d0 : adc al, 0 ; add byte ptr [rax], al ; ret
0x00000000000f1c8e : adc al, 0 ; add byte ptr [rax], al ; sub eax, edx ; ret
0x000000000003060e : adc al, 0 ; movsxd rax, dword ptr [rdx + r12*4] ; add rdx, rax ; jmp rdx
0x0000000000143865 : adc al, 0x13 ; jmp rdx
0x00000000001a07a4 : adc al, 0x16 ; add dword ptr [rax], eax ; clc ; cld ; jmp qword ptr [rbx]
0x00000000000987e5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000005e094 : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x00000000000cc20d : adc al, 0x24 ; add rsp, 0x18 ; mov rax, rdx ; ret
0x00000000000be77e : adc al, 0x24 ; mov rdx, qword ptr [rsp + 0x28] ; call rax
0x0000000000031c9b : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000000a1a23 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000b7ea8 : adc al, 0x31 ; rol byte ptr [rcx - 0x7d], cl ; stc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbf
0x000000000001f573 : adc al, 0x3a ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000018d708 : adc al, 0x3f ; clc ; jmp rsp
0x00000000001a37a4 : adc al, 0x46 ; add dword ptr [rax], eax ; clc ; xchg dl, dh ; jmp qword ptr [rcx]
0x000000000007f980 : adc al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009f160 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000009ffb3 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x0000000000097b8b : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000021eba : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001007c3 : adc al, 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000d21b2 : adc al, 0x74 ; or byte ptr [rax - 0x7d], cl ; ret 0x3901
0x00000000000849d2 : adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000087bb7 : adc al, 0xa ; jmp r10
0x0000000000098953 : adc al, 0xa ; sub eax, edx ; ret
0x00000000001893a0 : adc al, 0xc ; jmp 0x1893a6
0x00000000000b0c52 : adc al, 0xe ; jne 0xb0c4d ; ret
0x000000000013660b : adc al, 0xe ; mov byte ptr [rax + rcx], dl ; ret
0x00000000001381b1 : adc al, 0xe ; sub eax, edx ; ret
0x000000000018d410 : adc al, 0xf ; clc ; call rsp
0x000000000009fb29 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x0000000000164f88 : adc al, 1 ; add byte ptr [rax], al ; ret
0x000000000019f8a4 : adc al, 7 ; add dword ptr [rax], eax ; or byte ptr [rbp - 0x10], bl ; jmp qword ptr [rdx]
0x0000000000097616 : adc al, 7 ; cmp edx, ecx ; je 0x97617 ; ret
0x0000000000097542 : adc al, 7 ; test dl, dl ; jne 0x9753f ; ret
0x000000000013660e : adc al, 8 ; ret
0x00000000001a52f0 : adc al, bh ; jmp qword ptr [rdi]
0x000000000013a687 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a6f1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000c282 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000ed5a : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000004dd41 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, r12 ; jmp rax
0x0000000000005ed4 : adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret 0x10
0x0000000000005034 : adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret 0xf
0x000000000005fe33 : adc al, byte ptr [rbx - 0x111743] ; call qword ptr [rax]
0x000000000009a654 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000001b03dd : adc al, byte ptr [rdx] ; add al, ah ; xchg esi, esi ; jmp qword ptr [rdi]
0x0000000000179c58 : adc al, ch ; jmp rsp
0x00000000000d55a8 : adc al, ch ; ret 0xf49e
0x000000000019b974 : adc bh, ah ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018d449 : adc bh, al ; call rsp
0x000000000017929c : adc bh, al ; std ; call rax
0x0000000000187638 : adc bh, bl ; sti ; push rax ; loopne 0x187641 ; call rax
0x0000000000003aa3 : adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000166136 : adc bh, byte ptr [rbp + 0x25] ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000a42f8 : adc bh, byte ptr [rcx] ; ja 0xa430c ; cmove rax, rcx ; ret
0x000000000019c154 : adc bh, byte ptr [rcx] ; out dx, al ; jmp qword ptr [rdx]
0x000000000018de99 : adc bh, cl ; jmp rsp
0x00000000001165f6 : adc bh, dh ; ret 0x8080
0x000000000019e129 : adc bh, dl ; call qword ptr [rax]
0x00000000001ab550 : adc bl, -0xb ; jmp qword ptr [rsi]
0x0000000000121a2d : adc bl, al ; nop ; mov dword ptr [rsi], 0xb ; ret
0x00000000001ad340 : adc bl, bh ; cmc ; call qword ptr [rax]
0x00000000000366b8 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000187e54 : adc bl, byte ptr [rax - 4] ; call qword ptr [rdx + 0x12fffc57]
0x0000000000187e3c : adc bl, byte ptr [rbx - 4] ; call qword ptr [rdx + 0x12fffc5a]
0x0000000000187e4c : adc bl, byte ptr [rcx - 4] ; call qword ptr [rdx + 0x12fffc58]
0x0000000000187e44 : adc bl, byte ptr [rdx - 4] ; call qword ptr [rdx + 0x12fffc59]
0x000000000008d745 : adc bl, ch ; call 0xffffffffc3d9609a
0x0000000000087895 : adc bl, ch ; call 0xffffffffc40101ea
0x0000000000089095 : adc bl, ch ; call 0xffffffffc40119ea
0x0000000000038a02 : adc bl, ch ; jno 0x38a58 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000359ca : adc bl, ch ; ret 0x1f0f
0x000000000009e746 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009dab6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009db27 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009da87 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000f3dc7 : adc bl, dh ; ret
0x000000000009e745 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009dab5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000e404f : adc byte ptr [r13 + rcx*4 + 0x52], cl ; adc byte ptr [rax + 0x39], cl ; ret 0x930f
0x0000000000108d71 : adc byte ptr [r13 - 0xcf68a40], r8b ; ret
0x00000000000874c2 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x0000000000075491 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000077b13 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000000e2fba : adc byte ptr [r8 + 0x39], cl ; ret
0x00000000000dfdfe : adc byte ptr [r8 + 0x39], cl ; ret 0x574
0x0000000000073232 : adc byte ptr [r8 + 1], cl ; ret 0x3948
0x00000000000bde78 : adc byte ptr [r8 + r9*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x00000000000c49f5 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000079b9d : adc byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x000000000007a4ce : adc byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000a199c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a19be : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a19fc : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a1a7e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000003a9aa : adc byte ptr [rax + 0x39], cl ; ret
0x00000000000fc81f : adc byte ptr [rax + 0x39], cl ; ret 0x1b72
0x00000000000d5699 : adc byte ptr [rax + 0x39], cl ; ret 0x574
0x0000000000080de4 : adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000e4054 : adc byte ptr [rax + 0x39], cl ; ret 0x930f
0x00000000000fc81e : adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x0000000000035fea : adc byte ptr [rax + 0x48d00148], al ; shr eax, 0x3f ; ret
0x00000000000e4036 : adc byte ptr [rax + 0x63], cl ; ret
0x00000000001882c4 : adc byte ptr [rax + 0x7f90fffc], al ; cld ; call qword ptr [rax]
0x0000000000079a08 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000f9c61 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x00000000001247ce : adc byte ptr [rax + 1], bh ; ret
0x00000000000a2a8e : adc byte ptr [rax + 1], cl ; clc ; ret
0x000000000003907e : adc byte ptr [rax + 1], cl ; ret
0x0000000000097b86 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000073233 : adc byte ptr [rax + 1], cl ; ret 0x3948
0x000000000003d337 : adc byte ptr [rax + 1], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x000000000003d336 : adc byte ptr [rax + 1], r9b ; ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x00000000000bde79 : adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x00000000000a1ba4 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a1aa2 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a1a20 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000188a14 : adc byte ptr [rax - 0x6e6f0004], dl ; cld ; call qword ptr [rax]
0x0000000000187394 : adc byte ptr [rax - 0x6e6f0005], dl ; sti ; call qword ptr [rax]
0x00000000000fe1f5 : adc byte ptr [rax - 0x73], cl ; adc al, -0x76 ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000002f7d3 : adc byte ptr [rax - 0x73], cl ; add al, -0x4e ; mov eax, dword ptr [rdi + rax] ; ret
0x0000000000092274 : adc byte ptr [rax - 0x73], cl ; jg 0x92291 ; jne 0x92268 ; ret
0x00000000000a405f : adc byte ptr [rax - 0x73], cl ; lock ; ret
0x00000000000fea23 : adc byte ptr [rax - 0x73], cl ; or al, 0xffffffffffffffb1 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000fe1f4 : adc byte ptr [rax - 0x73], r9b ; adc al, -0x76 ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000021ebd : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000005d268 : adc byte ptr [rax - 0x75], cl ; cmp al, ch ; jmp qword ptr [rcx]
0x000000000009269a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000009d49c : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000074c87 : adc byte ptr [rax - 0x77], cl ; jo 0x74ca5 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000012015b : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x0000000000025144 : adc byte ptr [rax - 0x77], cl ; push rbp ; test al, -0x18 ; ret 0xffa2
0x0000000000070c78 : adc byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000da0d1 : adc byte ptr [rax - 0x77], cl ; ret
0x00000000000813a1 : adc byte ptr [rax - 0x77], cl ; ret 0x58b
0x000000000010bb15 : adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000081d6a : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000001226a8 : adc byte ptr [rax - 0x77], cl ; ret 0xf9e9
0x0000000000157f67 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7b ; call qword ptr [rbx]
0x0000000000157fa3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7b ; ret
0x0000000000099244 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7b ; ret 0x13
0x00000000000421c4 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7c ; ret
0x000000000010641c : adc byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], -0x7c ; ret
0x00000000000c49f6 : adc byte ptr [rax - 0x7d], cl ; ret
0x000000000007e633 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000848ac : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000092b16 : adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000035b95 : adc byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000179584 : adc byte ptr [rax - 0xe], ch ; jmp qword ptr [rax]
0x00000000001792ec : adc byte ptr [rax - 0xe], cl ; jmp qword ptr [rax]
0x00000000000f2de1 : adc byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000001901f5 : adc byte ptr [rax], al ; add al, bh ; pop rax ; std ; jmp qword ptr [rdi]
0x00000000000f30c6 : adc byte ptr [rax], al ; add al, ch ; ret
0x00000000000f126b : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000005d9ec : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000007ad54 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013c901 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a891 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000048857 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; out dx, eax ; ret
0x0000000000079b9e : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x000000000007a4cf : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000109b0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000ec82 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000000e50fc : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000003d17c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000001219ba : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x00000000001200a5 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000a26d9 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000017b62d : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000005e214 : adc byte ptr [rax], al ; add byte ptr [rax], al ; test ecx, ecx ; je 0x5e229 ; ret
0x00000000001092e9 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001ad6f0 : adc byte ptr [rax], al ; idiv bh ; ret 3
0x0000000000103133 : adc byte ptr [rax], al ; je 0x103146 ; xor eax, eax ; ret
0x0000000000136e26 : adc byte ptr [rax], al ; jne 0x136e50 ; add rsp, 0x48 ; ret
0x000000000002bf84 : adc byte ptr [rax], al ; mov rdi, rbx ; call r12
0x000000000006dcc1 : adc byte ptr [rax], al ; movsxd rcx, dword ptr [rsi + rcx*4] ; add rsi, rcx ; jmp rsi
0x000000000006ddd1 : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x0000000000046db6 : adc byte ptr [rax], al ; ret
0x00000000001a0860 : adc byte ptr [rax], cl ; int1 ; jmp rcx
0x00000000000a199d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a19bf : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a19fd : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a1a7f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a1b81 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000001092e8 : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000198676 : adc byte ptr [rbp + rbp*8 + 0x420d1cff], cl ; mov ebp, ebp ; jmp qword ptr [rdx]
0x00000000000a41f7 : adc byte ptr [rbp + rcx*4 + 0x4e], cl ; adc byte ptr [rcx + 0x39], al ; ret
0x00000000000e4050 : adc byte ptr [rbp + rcx*4 + 0x52], cl ; adc byte ptr [rax + 0x39], cl ; ret 0x930f
0x000000000008d208 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x0000000000092278 : adc byte ptr [rbp - 0x1b], dh ; ret
0x000000000011a967 : adc byte ptr [rbp - 0x49f0be01], al ; ret 0x48d
0x0000000000188a60 : adc byte ptr [rbp - 0x696f0004], dl ; cld ; call qword ptr [rax]
0x000000000005fe3a : adc byte ptr [rbp - 0x6bf001bf], cl ; ret 0xd284
0x0000000000188a0c : adc byte ptr [rbp - 0x716f0004], cl ; cld ; call qword ptr [rax]
0x000000000018738c : adc byte ptr [rbp - 0x716f0005], cl ; sti ; call qword ptr [rax]
0x00000000000efdb1 : adc byte ptr [rbp - 0x7b], cl ; dec dword ptr [rbp - 0x7bf0fea8] ; ret 1
0x00000000000f5f07 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], -0x7c ; ret 0
0x00000000000a55c9 : adc byte ptr [rbp - 0xc0d8a2e], al ; ret
0x0000000000108d72 : adc byte ptr [rbp - 0xcf68a40], al ; ret
0x00000000000a43a2 : adc byte ptr [rbp - 0xd], dh ; ret
0x0000000000179434 : adc byte ptr [rbp - 0xe], dl ; jmp qword ptr [rax]
0x000000000019c5fb : adc byte ptr [rbx + 0x1020302], al ; ret
0x00000000000edf2f : adc byte ptr [rbx + 0x1374a1f8], al ; neg eax ; pop rbx ; ret
0x00000000001afdcb : adc byte ptr [rbx + 0x1990302], al ; ret
0x0000000000108e83 : adc byte ptr [rbx + 0x5d], bl ; and eax, 0xc ; pop r12 ; ret
0x000000000006d88c : adc byte ptr [rbx + 0x5d], bl ; mov rax, r12 ; pop r12 ; ret
0x0000000000081e9b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000118623 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000345a3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019d2fb : adc byte ptr [rbx + 0xa440202], al ; ret
0x00000000001913cb : adc byte ptr [rbx + 0xa4c0202], al ; ret
0x00000000001afdd6 : adc byte ptr [rbx + 0xa550202], al ; ret
0x000000000012d0ee : adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x0000000000187374 : adc byte ptr [rbx + rdi*8 - 0x47a6f01], al ; call qword ptr [rax]
0x000000000007d152 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000012eeab : adc byte ptr [rbx - 0x3d], bl ; nop ; ret
0x0000000000071f67 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x71f81 ; ret
0x0000000000188a1c : adc byte ptr [rbx - 0x6b6f0004], dl ; cld ; call qword ptr [rax]
0x000000000018739c : adc byte ptr [rbx - 0x6b6f0005], dl ; sti ; call qword ptr [rax]
0x00000000000a43ef : adc byte ptr [rbx - 0x7cb703ba], cl ; ret
0x00000000001793c0 : adc byte ptr [rbx - 0xe], dl ; jmp qword ptr [rax]
0x0000000000187304 : adc byte ptr [rbx - 5], dl ; push rax ; push rsp ; sti ; call rax
0x00000000000c3916 : adc byte ptr [rbx], al ; add cl, ch ; ret 0xfffe
0x0000000000187a30 : adc byte ptr [rbx], ch ; cld ; call rax
0x00000000001a89c0 : adc byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000385d9 : adc byte ptr [rcx + 0x29], cl ; ret
0x00000000000a41fb : adc byte ptr [rcx + 0x39], al ; ret
0x00000000000a41fa : adc byte ptr [rcx + 0x39], r8b ; ret
0x0000000000112733 : adc byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000a6c8a : adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf983
0x000000000012d246 : adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x000000000006d4c2 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a1b02 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a1ae2 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000004a55a : adc byte ptr [rcx - 0x73], al ; dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000188a40 : adc byte ptr [rcx - 0x756f0004], cl ; cld ; call qword ptr [rax]
0x0000000000165137 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000ada91 : adc byte ptr [rcx - 0x7d], cl ; ret
0x0000000000138233 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000013bdd7 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001882bc : adc byte ptr [rcx - 0x7f6f0004], al ; cld ; call qword ptr [rax]
0x000000000018a4e5 : adc byte ptr [rcx], al ; add byte ptr [rbx], bh ; add bh, ch ; call rsp
0x00000000000afc84 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001a91a0 : adc byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x000000000003cd76 : adc byte ptr [rcx], ch ; ret 0xc269
0x000000000007d155 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000122772 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f1d70 : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], -0x2a ; ja 0xf1d89 ; ret
0x0000000000126a9f : adc byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], -0x3c ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000188a50 : adc byte ptr [rdi - 0x6f6f0004], cl ; cld ; call qword ptr [rax]
0x00000000001889fc : adc byte ptr [rdi - 0x776f0004], al ; cld ; call qword ptr [rax]
0x000000000018737c : adc byte ptr [rdi - 0x776f0005], al ; sti ; call qword ptr [rax]
0x00000000001792b0 : adc byte ptr [rdi - 0xe], al ; jmp qword ptr [rax]
0x0000000000179098 : adc byte ptr [rdi - 0xf], bl ; jmp qword ptr [rax]
0x00000000001882cc : adc byte ptr [rdi - 4], bh ; call qword ptr [rax + 0x10fffc7e]
0x0000000000187818 : adc byte ptr [rdi], al ; cld ; push rax ; or ah, bh ; call rax
0x000000000002fcf5 : adc byte ptr [rdi], cl ; mov bh, -0x40 ; ret
0x000000000010d1f2 : adc byte ptr [rdi], cl ; mov bh, -0xa ; or eax, esi ; bswap eax ; ret
0x00000000000874c3 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x0000000000130449 : adc byte ptr [rdi], cl ; test byte ptr [rax + 0x1000001], al ; ret 0x894c
0x000000000015b048 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x00000000000d4ca4 : adc byte ptr [rdi], cl ; test eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000001630b3 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000139421 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000139511 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000139331 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000140c3b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013f73f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000014093f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014003f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014033f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013fa37 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000139d79 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x00000000001398d1 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000139061 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000139ab1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000139241 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000139c91 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000139ba1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001394e3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001395d3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001393f3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013fce4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001408e4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000140be4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001402e4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013ffe4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000013f9dc : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000139151 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000013d07d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013ce9d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013d875 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013c795 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013d695 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000139303 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000139123 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000139213 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000139033 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000075492 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000003a36d : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000000cf715 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x38b
0x000000000007566e : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000003a36c : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000003901 : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000143d59 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000495c3 : adc byte ptr [rdx + rdx*8 + 0x394ce875], al ; ret
0x0000000000188a58 : adc byte ptr [rdx - 0x6c6f0004], dl ; cld ; call qword ptr [rax]
0x0000000000188a04 : adc byte ptr [rdx - 0x746f0004], cl ; cld ; call qword ptr [rax]
0x0000000000187384 : adc byte ptr [rdx - 0x746f0005], cl ; sti ; call qword ptr [rax]
0x0000000000179394 : adc byte ptr [rdx - 0xe], -1 ; mov al, 0x52 ; jmp rax
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001878f0 : adc byte ptr [rdx], al ; cld ; call rax
0x00000000000ec87b : adc byte ptr [rdx], al ; cmove eax, edx ; jmp 0xec83f
0x00000000001ad253 : adc byte ptr [rdx], al ; ret
0x0000000000187264 : adc byte ptr [rdx], bl ; sti ; jmp rax
0x000000000016179b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000187834 : adc byte ptr [rip + 0x6f0fffc], al ; cld ; call rax
0x000000000016164a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x0000000000160c45 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000087d05 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008dc0b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009dc9b : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009dc9a : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a442c : adc byte ptr [rsi + rdi*8 + 0x438d48ff], cl ; cld ; pop rbx ; ret
0x0000000000191520 : adc byte ptr [rsi - 0x16], cl ; jmp qword ptr [rbx]
0x0000000000188a24 : adc byte ptr [rsi - 0x686f0004], dl ; cld ; call qword ptr [rax]
0x0000000000188a38 : adc byte ptr [rsi - 0x786f0004], al ; cld ; call qword ptr [rax]
0x00000000000fd6e5 : adc byte ptr [rsi - 0x7d], ah ; cli ; push qword ptr [rsi + rax - 0x7d] ; ret 0x6601
0x00000000001a0fb0 : adc byte ptr [rsi - 0xf], al ; call qword ptr [rdx]
0x00000000001882d4 : adc byte ptr [rsi - 4], bh ; call qword ptr [rax + 0x10fffc7d]
0x00000000001a8c30 : adc byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b41a9 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x0000000000199e69 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xedbc
0x00000000001acf09 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf568
0x00000000001b0041 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf5e0
0x0000000000187a68 : adc byte ptr [rsi], dh ; cld ; call qword ptr [rax]
0x000000000003cfca : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x0000000000188a48 : adc byte ptr [rsp + rdi*8 - 0x3726f01], cl ; call qword ptr [rax]
0x00000000001889f4 : adc byte ptr [rsp + rdi*8 - 0x37a6f01], al ; call qword ptr [rax]
0x0000000000187a64 : adc byte ptr [rsp + rdi*8], dh ; call qword ptr [rax]
0x00000000000b131a : adc byte ptr [rsp - 0x10], al ; ret
0x0000000000039d9f : adc byte ptr [rsp - 4], al ; ret
0x0000000000039de5 : adc byte ptr [rsp - 8], al ; ret
0x000000000013fce7 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001901f4 : adc byte ptr fs:[rax], al ; add al, bh ; pop rax ; std ; jmp qword ptr [rdi]
0x000000000018a4e4 : adc byte ptr fs:[rcx], al ; add byte ptr [rbx], bh ; add bh, ch ; call rsp
0x00000000000e53a8 : adc byte ptr gs:[rax - 0x77], cl ; ret
0x000000000010f77c : adc ch, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000187760 : adc cl, ah ; sti ; jmp rax
0x00000000000b207d : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000b2002 : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000bde7d : adc cl, byte ptr [rax + 1] ; ret
0x0000000000038f14 : adc cl, byte ptr [rax + 1] ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000098a8d : adc cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000085c6c : adc cl, byte ptr [rax - 0x77] ; ret 0x348
0x00000000000f3268 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000100544 : adc cl, byte ptr [rax - 0x7d] ; ret
0x0000000000087885 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000028db1 : adc cl, byte ptr [rbp - 0x77] ; ret
0x00000000000ba365 : adc cl, ch ; ret
0x00000000000d4940 : adc cl, ch ; ret 0xfffc
0x000000000008be78 : adc cl, ch ; ret 0xfffd
0x000000000008d124 : adc dh, bh ; ret
0x000000000019ac81 : adc dh, ch ; jmp qword ptr [rcx]
0x000000000019bb25 : adc dh, ch ; jmp qword ptr [rdx]
0x00000000001208de : adc dh, dh ; ret 0x7401
0x00000000000022d3 : adc dh, dl ; ret
0x00000000001a2f10 : adc dl, bh ; int1 ; jmp qword ptr [rcx]
0x0000000000081c82 : adc dword ptr [rax + 0x29], ecx ; ret 0x3948
0x000000000008b9cb : adc dword ptr [rax + 0x39], ecx ; ret
0x000000000007f065 : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x0000000000108f7b : adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp - 0x11], cl ; leave ; ret
0x00000000000874c7 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x00000000000d2711 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4401
0x000000000013e28b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x00000000000a9634 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013a827 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013c799 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000016607b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x0000000000023e5b : adc dword ptr [rax], eax ; mov rdi, r14 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x00000000000237da : adc dword ptr [rax], eax ; mov rdi, rbx ; call r15
0x000000000005f5de : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, r13 ; jmp rax
0x000000000005eabe : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x0000000000064bd9 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x0000000000064d6a : adc dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x000000000003d154 : adc dword ptr [rbp], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001aee76 : adc dword ptr [rbx + 0xd1cfff5], ecx ; lock mov ch, dh ; jmp qword ptr [rdx]
0x00000000001874f4 : adc dword ptr [rbx - 0x44ee0003], edi ; std ; call qword ptr [rcx]
0x0000000000187578 : adc dword ptr [rbx - 0x44ee0003], edi ; std ; call qword ptr [rsi]
0x00000000001874f8 : adc dword ptr [rbx - 0x44ee0003], edi ; std ; call rcx
0x00000000001875f8 : adc dword ptr [rbx - 0x44ee0003], edi ; std ; jmp rax
0x000000000018756c : adc dword ptr [rbx - 0x45610003], edi ; std ; call qword ptr [rcx]
0x00000000001875ac : adc dword ptr [rbx - 0x45780003], edi ; std ; call qword ptr [rcx]
0x00000000001875ec : adc dword ptr [rbx - 0x458f0003], edi ; std ; call qword ptr [rcx]
0x000000000018755c : adc dword ptr [rbx - 0x45ce0003], edi ; std ; call qword ptr [rcx]
0x000000000018759c : adc dword ptr [rbx - 0x45e90003], edi ; std ; call qword ptr [rcx]
0x00000000001875dc : adc dword ptr [rbx - 0x46040003], edi ; std ; call qword ptr [rcx]
0x000000000018761c : adc dword ptr [rbx - 0x461f0003], edi ; std ; call qword ptr [rcx]
0x000000000018754c : adc dword ptr [rbx - 0x464e0003], edi ; std ; call qword ptr [rcx]
0x000000000018758c : adc dword ptr [rbx - 0x46690003], edi ; std ; call qword ptr [rcx]
0x00000000001875cc : adc dword ptr [rbx - 0x46840003], edi ; std ; call qword ptr [rcx]
0x000000000018760c : adc dword ptr [rbx - 0x469f0003], edi ; std ; call qword ptr [rcx]
0x000000000018753c : adc dword ptr [rbx - 0x46ce0003], edi ; std ; call qword ptr [rcx]
0x000000000018757c : adc dword ptr [rbx - 0x46e90003], edi ; std ; call qword ptr [rcx]
0x00000000001875bc : adc dword ptr [rbx - 0x47040003], edi ; std ; call qword ptr [rcx]
0x00000000001875fc : adc dword ptr [rbx - 0x471f0003], edi ; std ; call qword ptr [rcx]
0x00000000001874fc : adc dword ptr [rbx - 0x472e0003], edi ; std ; call qword ptr [rcx]
0x000000000018751c : adc dword ptr [rbx - 0x473f0003], edi ; std ; call qword ptr [rcx]
0x000000000018750c : adc dword ptr [rbx - 0x47590003], edi ; std ; call qword ptr [rcx]
0x000000000018752c : adc dword ptr [rbx - 0x476a0003], edi ; std ; call qword ptr [rcx]
0x000000000011cc16 : adc dword ptr [rbx - 0x75], eax ; adc r8d, dword ptr [rbx + rax*4] ; ret
0x000000000003ca06 : adc dword ptr [rcx], eax ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000046521 : adc dword ptr [rcx], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000009768e : adc dword ptr [rcx], edi ; lock jne 0x97688 ; mov rax, rdi ; ret
0x00000000000360d4 : adc dword ptr [rdi], ecx ; ret
0x000000000003609d : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x0000000000036402 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x00000000001b02e5 : adc dword ptr [rdx], eax ; add al, bh ; test dh, dh ; jmp rdx
0x000000000011bd0c : adc dword ptr [rsi], 2 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000023643 : adc dword ptr [rsi], edx ; cmp al, byte ptr [rax] ; ret
0x000000000013a826 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000a2a8a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x000000000018724d : adc eax, 0x1600fffb ; sti ; call rax
0x00000000001344e7 : adc eax, 0x28c3a4 ; add rsp, 8 ; ret
0x000000000012b7d9 : adc eax, 0x2990a2 ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000121e92 : adc eax, 0x29cce9 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000010b8f9 : adc eax, 0x2b7ec2 ; pop rbp ; ret
0x00000000000f455e : adc eax, 0x2ce0cd ; add rsp, 8 ; ret
0x000000000001fea6 : adc eax, 0x31f63100 ; shr al, -0x58 ; ret 0xc
0x00000000000868c1 : adc eax, 0x33b2ca ; add rsp, 0x18 ; ret
0x000000000002af9d : adc eax, 0x358d4800 ; ret
0x0000000000037b7d : adc eax, 0x38751e ; ret
0x000000000002edf9 : adc eax, 0x391e7f ; ret
0x00000000000a371a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000002a88d : adc eax, 0x3d8d4800 ; ret 0x1565
0x0000000000098727 : adc eax, 0x48ffff49 ; mov eax, ebx ; pop rbx ; ret
0x0000000000021998 : adc eax, 0x5b000001 ; pop rbp ; pop r12 ; ret
0x000000000009e448 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x000000000009fb5c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x00000000000364d9 : adc eax, 0x7e0f6600 ; ret 0xd089
0x000000000013a3b1 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000078a87 : adc eax, 0x89ffffd1 ; ret 0x3f7
0x000000000019652d : adc eax, 0x94b00000 ; in eax, dx ; jmp rsi
0x00000000000a3a1a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000002d029 : adc eax, 0xef394800 ; je 0x2d04f ; call 0x892a9
0x0000000000189588 : adc eax, dword ptr [rax - 0x15] ; call rsp
0x000000000006f6da : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000013dfee : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013c5b9 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000034d57 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x0000000000034aee : adc eax, dword ptr [rax] ; movsxd rdx, dword ptr [rdi + rsi*4] ; add rdx, rdi ; jmp rdx
0x000000000011cc1a : adc eax, dword ptr [rbx + rax*4] ; ret
0x00000000000cc0dd : adc eax, dword ptr [rcx + rcx*8 + 0x63480f75] ; ret 0x8948
0x000000000009a658 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000013f9df : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000038349 : adc eax, eax ; ret
0x0000000000038486 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x0000000000175845 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000001ad43c : adc ebp, dword ptr [rcx - 0xb] ; jmp qword ptr [rdx]
0x00000000001893d9 : adc ebp, ebx ; call rsp
0x00000000001937bd : adc ebp, ebx ; jmp qword ptr [rdx]
0x000000000010c990 : adc ebp, ebx ; ret
0x000000000010a9bd : adc ebp, ebx ; xor dword ptr [rcx], 0xffffffc0 ; ret
0x00000000000744bd : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000001abefc : adc ebx, dword ptr [rcx - 0xb] ; jmp qword ptr [rdx]
0x000000000017a4b4 : adc ebx, dword ptr [rdx - 0x65e2000c] ; hlt ; jmp qword ptr [rdi]
0x0000000000112cd1 : adc ebx, ebp ; sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000003dde0 : adc ecx, dword ptr [rax - 0x73] ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e9efa : adc ecx, dword ptr [rax - 0x77] ; ret
0x000000000007d0fc : adc ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000000a44dc : adc ecx, dword ptr [rax - 0x7d] ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000126e8d : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000111cea : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000317f3 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000499cb : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4c10
0x00000000000a40dc : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x000000000002bc24 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000004bdae : adc ecx, dword ptr [rcx + rax - 0x1e] ; call qword ptr [r11 + rax*8]
0x0000000000061b96 : adc ecx, dword ptr [rcx + rax - 0xe] ; call qword ptr [r11 + rax*8]
0x00000000000a67e1 : adc ecx, dword ptr [rcx - 0x7d] ; ret 0x4104
0x00000000000b7b6b : adc ecx, dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret 0x8941
0x000000000009a824 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x000000000009a844 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x000000000009a864 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x000000000009a6ae : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000a6000 : adc esi, dword ptr [rbp + rcx - 0x77] ; ret 0xc9eb
0x0000000000176d5e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, -0x39 ; ret 0xe71f
0x000000000019f0a9 : adc esi, eax ; jmp rbx
0x000000000010ae4b : adc esi, edi ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x000000000007cc51 : adc esi, esi ; ret 0xf02
0x000000000018bc11 : adc esi, esp ; call rsp
0x00000000001ab8cc : adc esp, dword ptr [rbx + rdi*8] ; jmp qword ptr [rdx]
0x000000000019aa5c : adc esp, ebp ; in eax, dx ; jmp qword ptr [rdx]
0x000000000013fbc2 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018de98 : adc r15b, cl ; jmp rsp
0x000000000013c720 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001b03dc : adc r8b, byte ptr [rdx] ; add al, ah ; xchg esi, esi ; jmp qword ptr [rdi]
0x000000000011cc19 : adc r8d, dword ptr [rbx + rax*4] ; ret
0x0000000000038485 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000008d123 : adc sil, r15b ; ret
0x000000000018788c : adc spl, dil ; call rax
0x000000000018c8df : add ah, ah ; add edi, esi ; jmp rsp
0x00000000001a5b73 : add ah, ah ; imul eax, dword ptr [rcx], 0xf4635800 ; jmp qword ptr [rcx]
0x00000000001b5b73 : add ah, ah ; imul eax, dword ptr [rdx], 0xf79aa800 ; jmp qword ptr [rcx]
0x0000000000188f37 : add ah, ah ; je 0x188f29 ; jmp rsp
0x000000000018b267 : add ah, ah ; mov cl, -0xf ; call rsp
0x000000000018b58f : add ah, ah ; mov dl, dh ; jmp rsp
0x0000000000195993 : add ah, ah ; or dword ptr [rax], eax ; add byte ptr [rax - 0x76], bh ; in eax, dx ; call qword ptr [rax]
0x00000000001a6073 : add ah, ah ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; jae 0x1a6077 ; jmp qword ptr [rcx]
0x0000000000189a7f : add ah, ah ; push rbp ; in eax, dx ; push rsp ; ret 0
0x000000000018aa97 : add ah, ah ; ret 0xffef
0x000000000018bfff : add ah, ah ; ret 0xfff5
0x00000000001ab473 : add ah, ah ; ret 1
0x000000000018d37f : add ah, al ; add al, -8 ; jmp rsp
0x0000000000199973 : add ah, al ; add byte ptr [r8], al ; call 0x23198771
0x0000000000193653 : add ah, al ; add byte ptr [rax], r8b ; test al, 0 ; jmp 0x193663
0x000000000018d53f : add ah, al ; and al, bh ; call rsp
0x000000000018e507 : add ah, al ; cld ; stc ; call rsp
0x000000000018e7ff : add ah, al ; cli ; jmp rsp
0x000000000018e2a7 : add ah, al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; jmp rsp
0x000000000018e3ef : add ah, al ; iretd ; stc ; call rsp
0x00000000001ad353 : add ah, al ; loope 0x1ad360 ; add byte ptr [rax], cl ; sti ; cmc ; call qword ptr [rax]
0x000000000018ba37 : add ah, al ; mov esi, ebx ; call rsp
0x000000000019d953 : add ah, al ; out 0, eax ; add byte ptr [rax], bl ; mov dh, -0x12 ; call qword ptr [rax]
0x000000000019e153 : add ah, al ; out dx, eax ; add byte ptr [rax], al ; fcomp dword ptr [rcx] ; out dx, eax ; call qword ptr [rax]
0x000000000018a7cf : add ah, al ; out dx, eax ; jmp rsp
0x000000000018b657 : add ah, al ; ret
0x000000000018d1c7 : add ah, al ; ret 0xfff7
0x000000000019ef53 : add ah, al ; std ; add byte ptr [rax], al ; mov byte ptr [rdi - 5], al ; call qword ptr [rax]
0x000000000018b1df : add ah, al ; xchg eax, esi ; int1 ; call rsp
0x000000000018e6f7 : add ah, al ; xor edi, edx ; jmp rsp
0x00000000001a378b : add ah, bh ; add dword ptr [r8], r8d ; loopne 0x1a3720 ; jmp qword ptr [rcx]
0x00000000001a568b : add ah, bh ; add dword ptr fs:[rax], eax ; stosb byte ptr [rdi], al ; ret 0xffe7
0x00000000000a264e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000a2671 : add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000001a5b8b : add ah, bh ; imul eax, dword ptr [rcx], 0xf4637000 ; jmp qword ptr [rcx]
0x00000000000a2728 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a262d : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000001ab48b : add ah, bh ; ret 1
0x00000000001a788b : add ah, bh ; xchg byte ptr [rcx], al ; add al, dl ; fdivr st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a898b : add ah, bh ; xchg eax, edi ; add dword ptr [rax], eax ; loopne 0x1a89c4 ; cmc ; jmp qword ptr [rcx]
0x00000000001b396b : add ah, bl ; add r8b, byte ptr [r8] ; and byte ptr [rcx - 9], cl ; jmp qword ptr [rax]
0x00000000001a8b6b : add ah, bl ; cdq ; add dword ptr [rax], eax ; lock sub al, -0xb ; jmp qword ptr [rcx]
0x000000000018dd4f : add ah, bl ; clc ; call rsp
0x00000000001ad36b : add ah, bl ; loope 0x1ad378 ; add byte ptr [rax], al ; sti ; cmc ; call qword ptr [rax]
0x00000000001ad26b : add ah, bl ; loopne 0x1ad278 ; add byte ptr [rax], ah ; cli ; cmc ; call qword ptr [rax]
0x00000000001a5a6b : add ah, bl ; push 0x61600001 ; hlt ; jmp qword ptr [rax]
0x000000000019ed6b : add ah, bl ; sti ; add byte ptr [rax], al ; cwde ; out dx, eax ; jmp rdi
0x0000000000187714 : add ah, bl ; sti ; jmp rax
0x0000000000187c64 : add ah, byte ptr [rax - 4] ; call qword ptr [rdx + 0x22fffc5f]
0x000000000017b120 : add ah, byte ptr [rbx - 0x5d14000b] ; cmc ; call rcx
0x000000000019f19f : add ah, byte ptr [rdi + 0xa] ; ret
0x000000000009a6ab : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x0000000000193a7b : add ah, ch ; add byte ptr [rax], al ; nop ; cmp bh, dl ; jmp qword ptr [rcx]
0x000000000019ac7b : add ah, ch ; mov edx, 0x10200000 ; out dx, al ; jmp qword ptr [rcx]
0x00000000001a827b : add ah, ch ; nop ; add dword ptr [rax], eax ; lock or esi, ebp ; jmp qword ptr [rcx]
0x000000000019b98b : add ah, ch ; ret
0x000000000019b47b : add ah, ch ; ret 0
0x00000000001b0a7b : add ah, ch ; sbb byte ptr [rdx], al ; add al, ah ; mov cl, -0xa ; jmp qword ptr [rcx]
0x00000000001a8d7b : add ah, ch ; wait ; add dword ptr [rax], eax ; loopne 0x1a8db9 ; cmc ; jmp qword ptr [rcx]
0x00000000001a375b : add ah, cl ; add dword ptr [r8], r8d ; mov al, -0x7a ; jmp qword ptr [rcx]
0x00000000001a605b : add ah, cl ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; loopne 0x1a60dd ; hlt ; jmp qword ptr [rcx]
0x00000000001b615b : add ah, cl ; outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rbx + rdi*8], al ; jmp qword ptr [rdx]
0x000000000019b45b : add ah, cl ; ret 0
0x00000000001ab45b : add ah, cl ; ret 1
0x00000000001a0f5b : add ah, cl ; sbb eax, 0x40400001 ; int1 ; call rsi
0x00000000001a7283 : add ah, dh ; add byte ptr [rcx], 0 ; call 0x231a675d
0x000000000019f583 : add ah, dh ; add eax, dword ptr [rcx] ; add al, bh ; lock ; jmp qword ptr [rdi]
0x00000000001a3e83 : add ah, dh ; add qword ptr [rax], r8 ; sub bh, bl ; call qword ptr [rdx]
0x00000000001a2f83 : add ah, dh ; cmp eax, 0xfb280001 ; int1 ; jmp qword ptr [rcx]
0x00000000001a9183 : add ah, dh ; lahf ; add dword ptr [rax], eax ; clc ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001ad283 : add ah, dh ; loopne 0x1ad290 ; add byte ptr [rax], bl ; cli ; cmc ; call qword ptr [rax]
0x000000000018dc2f : add ah, dh ; mov al, -8 ; jmp rsp
0x00000000001a5c83 : add ah, dh ; push 1 ; add byte ptr [rax + 0x64], ch ; hlt ; jmp qword ptr [rcx]
0x000000000018e867 : add ah, dh ; push rbp ; cli ; call rsp
0x000000000018b35f : add ah, dh ; retf ; int1 ; call rsp
0x000000000019ef83 : add ah, dh ; std ; add byte ptr [rax], al ; test al, 0x68 ; sti ; call qword ptr [rax]
0x000000000019f463 : add ah, dl ; add al, byte ptr [rcx] ; add byte ptr [rax], cl ; lock ; jmp rsi
0x000000000018e51f : add ah, dl ; add dl, bh ; jmp rsp
0x000000000018e7e7 : add ah, dl ; cli ; jmp rsp
0x000000000018e757 : add ah, dl ; cmp bh, dl ; jmp rsp
0x00000000001a6263 : add ah, dl ; jo 0x1a6270 ; add al, ch ; js 0x1a6267 ; jmp qword ptr [rcx]
0x000000000019ae63 : add ah, dl ; mov esp, 0x17a80000 ; out dx, al ; call qword ptr [rcx]
0x000000000018e23f : add ah, dl ; popfq ; stc ; call rsp
0x00000000001ab563 : add ah, dl ; ret
0x000000000018e377 : add ah, dl ; ret 0xfff9
0x000000000018ec87 : add ah, dl ; ret 0xfffa
0x00000000001ac563 : add ah, dl ; rol dword ptr [rcx], cl ; add al, ch ; in eax, -0xb ; call qword ptr [rbx]
0x00000000001b0a63 : add ah, dl ; sbb byte ptr [rdx], al ; add al, bl ; mov cl, -0xa ; call qword ptr [rcx]
0x000000000018a4a7 : add ah, dl ; sti ; out dx, al ; jmp rsp
0x000000000019e094 : add al, -0x11 ; add byte ptr [rax], al ; test al, -9 ; out dx, al ; call qword ptr [rax]
0x00000000000e4eb7 : add al, -0x15 ; ret 0xf66
0x0000000000028ddc : add al, -0x17 ; mov esp, 0x89fffffc ; ret 0xe283
0x00000000000383dd : add al, -0x22 ; lea r9, qword ptr [rdx] ; jmp 0x38439
0x0000000000039b6d : add al, -0x22 ; lea r9, qword ptr [rdx] ; jmp 0x39bc9
0x000000000002d06b : add al, -0x28 ; test rax, rax ; je 0x2d07b ; call rax
0x0000000000037597 : add al, -0x29 ; xor eax, eax ; ret
0x00000000000bd693 : add al, -0x30 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000018f048 : add al, -0x30 ; std ; jmp rsp
0x00000000000c8206 : add al, -0x32 ; jmp 0xc81d0
0x00000000001ab594 : add al, -0x3c ; add dword ptr [rax], eax ; or ah, al ; clc ; jmp qword ptr [rsi]
0x00000000000a4313 : add al, -0x3d ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000018e7ac : add al, -0x3e ; add al, byte ptr [rax] ; mov ah, 0x41 ; cli ; call qword ptr [rdx + rax*8 + 2]
0x0000000000121e99 : add al, -0x3e ; jmp rax
0x00000000000a25f9 : add al, -0x42 ; add rsi, rax ; jmp rsi
0x000000000018e338 : add al, -0x46 ; stc ; jmp rsp
0x000000000012f283 : add al, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000002ff58 : add al, -0x48 ; ret
0x000000000002f7d6 : add al, -0x4e ; mov eax, dword ptr [rdi + rax] ; ret
0x00000000000dc7fb : add al, -0x58 ; add dword ptr [rbx + rcx*4 - 0xa], esi ; ret 0x7408
0x0000000000030612 : add al, -0x5e ; add rdx, rax ; jmp rdx
0x00000000001a8494 : add al, -0x6d ; add dword ptr [rax], eax ; cmp byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x000000000004dd45 : add al, -0x70 ; add rax, r12 ; jmp rax
0x000000000005f5e2 : add al, -0x70 ; add rax, r13 ; jmp rax
0x00000000001ab125 : add al, -0x72 ; add ecx, dword ptr [rdi + 0x14b0302] ; ret
0x00000000000d8552 : add al, -0x73 ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000010d319 : add al, -0x73 ; je 0x10d355 ; ror byte ptr [rax - 0x7d], 1 ; ret 0xf01
0x00000000000a55c7 : add al, -0x75 ; adc byte ptr [rbp - 0xc0d8a2e], al ; ret
0x000000000009a704 : add al, -0x75 ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000006dea1 : add al, -0x75 ; cmp byte ptr [rax - 0x77], cl ; ret 0x778d
0x000000000006dd6b : add al, -0x75 ; cmp byte ptr [rax - 0x77], cl ; ret 0xef83
0x00000000000a40e0 : add al, -0x75 ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00000000000537c0 : add al, -0x75 ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000000a27ed : add al, -0x76 ; je 0xa27d5 ; ret
0x0000000000189ed8 : add al, -0x76 ; out dx, al ; call rsp
0x0000000000097387 : add al, -0x77 ; cld ; mov rax, rdi ; ret
0x0000000000037351 : add al, -0x77 ; enter 0xf44, 0x45 ; ret 0x8d48
0x0000000000048c2a : add al, -0x77 ; ret
0x00000000000e57a3 : add al, -0x77 ; ret 0xeeeb
0x000000000015d7b6 : add al, -0x78 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000009a71b : add al, -0x78 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000000b8e15 : add al, -0x79 ; add rax, rdi ; jmp rax
0x0000000000127d56 : add al, -0x79 ; add rdi, rax ; jmp rdi
0x00000000000a40f6 : add al, -0x79 ; test r8d, r8d ; jne 0xa40d0 ; ret
0x00000000001a7794 : add al, -0x7a ; add dword ptr [rax], eax ; cmp dl, bl ; hlt ; call qword ptr [rax]
0x000000000004721e : add al, -0x7a ; add r8, rsi ; cmp ecx, 0x2f ; jmp r8
0x0000000000054a07 : add al, -0x7a ; add rsi, rax ; jmp rsi
0x00000000000a2912 : add al, -0x7b ; leave ; mov dword ptr [rdx], ecx ; jne 0xa2910 ; ret
0x00000000000a439e : add al, -0x7b ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x0000000000034d5b : add al, -0x7d ; add rax, rbx ; jmp rax
0x0000000000028451 : add al, -0x7d ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x0000000000074164 : add al, -0x7d ; loopne 0x7416d ; ret
0x0000000000071e02 : add al, -0x7d ; out 1, al ; mov eax, esi ; ret
0x000000000011cc1b : add al, -0x7d ; ret
0x00000000000d1b6f : add al, -0x7d ; ret 0x4101
0x00000000000373a3 : add al, -0x7d ; rol byte ptr [rcx], -9 ; ret 0
0x000000000009732a : add al, -0x7e ; add r10, rax ; jmp r10
0x000000000002dcde : add al, -0x7e ; add r8, rdx ; jmp r8
0x00000000000229de : add al, -0x7e ; add rdx, rax ; jmp rdx
0x00000000000a27ea : add al, -0x7e ; sub eax, dword ptr [rdx + rcx*4] ; je 0xa27d8 ; ret
0x000000000008fa57 : add al, -0x7e ; sub eax, ecx ; ret
0x00000000000d5040 : add al, -0x7f ; add rcx, rax ; jmp rcx
0x00000000000a2835 : add al, -0x7f ; je 0xa2815 ; ret
0x000000000013a09b : add al, -0x7f ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000a2831 : add al, -0x7f ; sub eax, dword ptr [rcx + r8*4] ; je 0xa2819 ; ret
0x000000000013b973 : add al, -0x7f ; sub eax, edx ; ret
0x000000000006d29c : add al, -0x80 ; add rax, r8 ; jmp rax
0x0000000000037611 : add al, -0xa ; ret 0x7402
0x000000000008d1c9 : add al, -0xa ; ret 0x7408
0x000000000014df83 : add al, -0xd ; movq qword ptr [rdi], mm1 ; ret
0x000000000005e21b : add al, -0xd ; ret
0x00000000001a31b1 : add al, -0xe ; jmp rdx
0x00000000001a0809 : add al, -0xf ; call qword ptr [rax]
0x0000000000071cfa : add al, -1 ; or dh, byte ptr [rbp + 0x3f] ; ret
0x0000000000071df4 : add al, -1 ; or dh, byte ptr [rbp + 0x43] ; mov eax, esi ; ret
0x0000000000072bbf : add al, -1 ; or dh, byte ptr [rbp + 0x60] ; pop rbx ; ret
0x000000000007104f : add al, -1 ; or dh, byte ptr [rbp + 0x63] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005e264 : add al, -1 ; or dh, byte ptr [rbp + 2] ; ret
0x0000000000187855 : add al, -4 ; call rax
0x00000000001b6079 : add al, -5 ; jmp qword ptr [rdx]
0x000000000018d381 : add al, -8 ; jmp rsp
0x00000000000ff645 : add al, 0 ; add al, ch ; ret
0x00000000000703a5 : add al, 0 ; add bl, dh ; ret
0x000000000002722a : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x00000000001270ed : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000048da8 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000005acff : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000114788 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000013896d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013d4b9 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000138991 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000f68ec : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000120caf : add al, 0 ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000a3aa3 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000003a9b6 : add al, 0 ; add byte ptr [rbp - 0x7c], al ; test byte ptr [rdi], -0x7c ; ret
0x0000000000127dc7 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000005d79f : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000111ac6 : add al, 0 ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r12 ; call rax
0x00000000000657c3 : add al, 0 ; add byte ptr [rdi], cl ; ret
0x0000000000042ca9 : add al, 0 ; add byte ptr [rdi], cl ; ret 0xc801
0x00000000001b8679 : add al, 0 ; add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x00000000001b82f1 : add al, 0 ; add byte ptr [rdx + 4], dl ; add byte ptr [rax], al ; ret
0x0000000000102d99 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x00000000000c1586 : add al, 0 ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000137b99 : add al, 0 ; call 0x73e24
0x00000000000974f4 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000097454 : add al, 0 ; mov rax, rdi ; ret
0x00000000001095d9 : add al, 0 ; ret
0x0000000000046db5 : add al, 0x10 ; add bl, dh ; ret
0x0000000000126a30 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x00000000000a26ad : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000b12a2 : add al, 0x16 ; add rsp, 0x18 ; ret
0x00000000000fe1fb : add al, 0x16 ; ret
0x00000000000987e1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000088f4a : add al, 0x17 ; sub eax, ecx ; ret
0x00000000001b0e94 : add al, 0x1d ; add al, byte ptr [rax] ; ret 0xfff6
0x000000000018d500 : add al, 0x1e ; clc ; jmp rsp
0x000000000012db9a : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000010aced : add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x3875
0x0000000000134965 : add al, 0x24 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000125bd5 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f1688 : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000000fe0c4 : add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000fe125 : add al, 0x24 ; add rsp, 0x40 ; ret
0x00000000001210a9 : add al, 0x24 ; call qword ptr [r11]
0x00000000000277b3 : add al, 0x24 ; call qword ptr [rbx]
0x00000000000234a6 : add al, 0x24 ; call rbx
0x00000000000a4153 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000225da : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000fafb3 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x0000000000021ee1 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000036ad1 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000018bee0 : add al, 0x2a ; cmc ; jmp rsp
0x0000000000118a9f : add al, 0x2b ; pop rbx ; pop rbp ; ret
0x000000000018e698 : add al, 0x2e ; cli ; jmp rsp
0x00000000000c0464 : add al, 0x30 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000a1859 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a186b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000008b42e : add al, 0x31 ; ret
0x00000000001143e1 : add al, 0x31 ; ror byte ptr [rax - 0x7d], -0x3c ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000018a6f8 : add al, 0x36 ; out dx, eax ; call rsp
0x000000000008b32a : add al, 0x37 ; ret
0x0000000000075c6f : add al, 0x3a ; ret
0x000000000007df74 : add al, 0x3b ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000a230d : add al, 0x41 ; pop rsp ; ret
0x0000000000122d6b : add al, 0x48 ; add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000e4d44 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000097505 : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000097515 : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009fdfb : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x00000000000974b5 : add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x0000000000118dce : add al, 0x48 ; lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000015d7b9 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000015d7cb : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x00000000000751d3 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000078248 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x000000000007512e : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000014dc1a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000078c7c : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000078e32 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x0000000000074fc4 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000097475 : add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000097415 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000089704 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000021f5a : add al, 0x49 ; lea edi, dword ptr [rsi + rdx] ; call rax
0x0000000000108604 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000001176ba : add al, 0x5b ; ret
0x000000000015d7c7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009a73c : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000001a6294 : add al, 0x71 ; add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xc], bh ; jmp qword ptr [rcx]
0x000000000002f7ed : add al, 0x72 ; or bl, dh ; ret
0x00000000000dc7f9 : add al, 0x74 ; add al, -0x58 ; add dword ptr [rbx + rcx*4 - 0xa], esi ; ret 0x7408
0x0000000000080c69 : add al, 0x74 ; cmp al, -0x77 ; ret 0xb48b
0x00000000000d2a35 : add al, 0x74 ; pop rax ; cmp al, 0x11 ; je 0xd2a49 ; xor eax, eax ; ret
0x00000000000d3324 : add al, 0x75 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d28db : add al, 0x75 ; jb 0xd28d9 ; ret 0x7408
0x000000000002bc22 : add al, 0x77 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000084bb2 : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret
0x00000000000f0942 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000002fcd0 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002fcf0 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002fc30 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002fcb0 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002fbd0 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002fc70 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002fc10 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002fc50 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002fd70 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002fbf0 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002fc90 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002fbb0 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x000000000018bd38 : add al, 0x7d ; hlt ; jmp rsp
0x00000000000d6ebe : add al, 0x7f ; fistp qword ptr [rcx] ; ret 0xc189
0x00000000000fea29 : add al, 0xa ; ret
0x000000000002fbd5 : add al, 0xf ; mov bh, -0x40 ; ret
0x00000000000985f1 : add al, 0xf ; mov dh, 0x46 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001381ad : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000013dc45 : add al, 0xf ; sub rax, rdx ; ret
0x000000000013435c : add al, 0xf ; test byte ptr [rcx - 0x7d000000], bl ; ret 0x8380
0x00000000000a3625 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000009e21b : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000dd489 : add al, 0xf ; xchg dword ptr [rax - 0x76fffff4], esi ; ret 0x8d48
0x00000000000e075e : add al, 0xf ; xchg eax, ebp ; ret 0x2041
0x00000000000b008a : add al, 0xf ; xchg eax, ebp ; ret 0xc7e9
0x00000000000afee6 : add al, 0xf ; xchg eax, ebp ; ret 0xf883
0x000000000011198d : add al, 0xf ; xchg eax, esi ; ret
0x000000000011547b : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000a3658 : add al, 1 ; add byte ptr [rax], al ; ret
0x000000000005e1ba : add al, 1 ; ret
0x000000000005e23a : add al, 1 ; xor eax, eax ; ret
0x0000000000161ea7 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000004b7 : add al, 4 ; ret 0x6080
0x0000000000054ee1 : add al, 6 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000009e368 : add al, 7 ; add byte ptr [rax], al ; ret
0x000000000008791d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000002f7d9 : add al, 7 ; ret
0x00000000000975e6 : add al, 7 ; test r8b, r8b ; jne 0x975d8 ; ret
0x0000000000073a43 : add al, 8 ; add byte ptr [rax], al ; ret
0x000000000019f994 : add al, 8 ; add dword ptr [rax], eax ; sbb byte ptr [rbp - 0x10], bl ; call qword ptr [rdx]
0x000000000009894f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000001a605f : add al, ah ; jae 0x1a605b ; jmp qword ptr [rcx]
0x00000000001b4a5f : add al, ah ; jp 0x1b4a5e ; call qword ptr [rdx]
0x00000000001b0a7f : add al, ah ; mov cl, -0xa ; jmp qword ptr [rcx]
0x000000000019ea1f : add al, ah ; mov ebp, edi ; jmp qword ptr [rax]
0x0000000000196baf : add al, ah ; sahf ; in eax, dx ; call rbx
0x00000000001ab6cf : add al, ah ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001876fc : add al, ah ; sti ; jmp rax
0x00000000001a898f : add al, ah ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000001a378f : add al, ah ; xchg dl, dh ; jmp qword ptr [rcx]
0x00000000001b03df : add al, ah ; xchg esi, esi ; jmp qword ptr [rdi]
0x00000000001a2a4f : add al, al ; in al, -0xf ; jmp rsi
0x00000000001a5f7f : add al, al ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x000000000019834f : add al, al ; mov dh, -0x13 ; jmp qword ptr [rdx]
0x00000000001a824f : add al, al ; or esi, ebp ; jmp qword ptr [rcx]
0x00000000001ab48f : add al, al ; sal ch, cl ; jmp qword ptr [rsi]
0x00000000001b2767 : add al, bh ; add bh, dh ; call qword ptr [rdi]
0x00000000001a07a7 : add al, bh ; cld ; jmp qword ptr [rbx]
0x00000000001a9187 : add al, bh ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001ac537 : add al, bh ; in eax, -0xb ; call qword ptr [rax]
0x00000000001a6077 : add al, bh ; jae 0x1a6073 ; jmp qword ptr [rcx]
0x00000000001920d7 : add al, bh ; jo 0x1920c9 ; jmp rbx
0x000000000019f587 : add al, bh ; lock ; jmp qword ptr [rdi]
0x00000000001b4ed7 : add al, bh ; mov bh, dh ; call qword ptr [rdx]
0x00000000001957f7 : add al, bh ; mov ch, ch ; call qword ptr [rdx]
0x00000000001ac787 : add al, bh ; out -0xb, al ; call qword ptr [rax]
0x00000000001901f7 : add al, bh ; pop rax ; std ; jmp qword ptr [rdi]
0x00000000001a12e7 : add al, bh ; ret
0x00000000001ab6e7 : add al, bh ; sal ebp, cl ; jmp qword ptr [rsi]
0x0000000000197ad7 : add al, bh ; stosd dword ptr [rdi], eax ; in eax, dx ; call qword ptr [rcx]
0x00000000001a89a7 : add al, bh ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000001b02e7 : add al, bh ; test dh, dh ; jmp rdx
0x00000000001a37a7 : add al, bh ; xchg dl, dh ; jmp qword ptr [rcx]
0x00000000001b68f7 : add al, bl ; fcomi st(7) ; jmp qword ptr [rcx]
0x000000000019e0f7 : add al, bl ; fdivr st(1) ; call qword ptr [rax]
0x00000000001a5f97 : add al, bl ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a2cd7 : add al, bl ; lock int1 ; jmp qword ptr [rdx]
0x00000000001b0a67 : add al, bl ; mov cl, -0xa ; call qword ptr [rcx]
0x000000000009e66b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001ab4a7 : add al, bl ; sal ch, cl ; jmp qword ptr [rsi]
0x000000000019e157 : add al, bl ; sbb edi, ebp ; call qword ptr [rax]
0x00000000001a8b57 : add al, bl ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001a8ee7 : add al, bl ; xor dh, ch ; jmp qword ptr [rcx]
0x0000000000140ac2 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000087881 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000018e3d6 : add al, byte ptr [rax] ; adc al, -0x35 ; stc ; call rsp
0x000000000018ec3e : add al, byte ptr [rax] ; adc al, -0x41 ; cli ; jmp rsp
0x000000000018d706 : add al, byte ptr [rax] ; adc al, 0x3f ; clc ; jmp rsp
0x000000000018d40e : add al, byte ptr [rax] ; adc al, 0xf ; clc ; call rsp
0x000000000018de96 : add al, byte ptr [rax] ; adc r15b, cl ; jmp rsp
0x000000000018e336 : add al, byte ptr [rax] ; add al, -0x46 ; stc ; jmp rsp
0x000000000018d4fe : add al, byte ptr [rax] ; add al, 0x1e ; clc ; jmp rsp
0x000000000018e696 : add al, byte ptr [rax] ; add al, 0x2e ; cli ; jmp rsp
0x0000000000080145 : add al, byte ptr [rax] ; add al, ch ; ret
0x000000000002fd27 : add al, byte ptr [rax] ; add bl, dh ; ret
0x0000000000028d04 : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000fafb6 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5f], bl ; call rax
0x000000000008c723 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000042967 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000d8986 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0xe283
0x0000000000086342 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00000000000b4817 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e75f1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x4c6
0x000000000008c3ee : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000034666 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f373a : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000001148a8 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000138b0d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013b731 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000138b31 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000c5126 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000011be00 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001252bf : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000128b8f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001282df : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000133b82 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000012b87d : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000f6d5c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000000f6acf : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000000f699b : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000000f6913 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000012a411 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x000000000012db9c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000fd365 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000a3a83 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000bd957 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018f3c5 : add al, byte ptr [rax] ; add byte ptr [rax], cl ; xor ch, cl ; call qword ptr [rcx]
0x0000000000095ee6 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x894c
0x0000000000072ebf : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000380a9 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001b615e : add al, byte ptr [rax] ; add byte ptr [rbx + rdi*8], al ; jmp qword ptr [rdx]
0x0000000000030e13 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7af0fa08], al ; ret 0xfffa
0x00000000001646b4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000018d896 : add al, byte ptr [rax] ; and al, 0x5e ; clc ; jmp rsp
0x000000000018da3e : add al, byte ptr [rax] ; and bh, byte ptr [rbp - 8] ; call rsp
0x00000000001b396e : add al, byte ptr [rax] ; and byte ptr [rcx - 9], cl ; jmp qword ptr [rax]
0x000000000018e61e : add al, byte ptr [rax] ; and r10, rdi ; call rsp
0x00000000001b2766 : add al, byte ptr [rax] ; clc ; add bh, dh ; call qword ptr [rdi]
0x00000000001b4ed6 : add al, byte ptr [rax] ; clc ; mov bh, dh ; call qword ptr [rdx]
0x00000000001b02e6 : add al, byte ptr [rax] ; clc ; test dh, dh ; jmp rdx
0x00000000001b5ec6 : add al, byte ptr [rax] ; cmp byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x00000000001b1d36 : add al, byte ptr [rax] ; cwde ; fdivr st(6), st(0) ; jmp qword ptr [rcx]
0x000000000018e056 : add al, byte ptr [rax] ; data16 ; stc ; jmp rsp
0x000000000018dd4e : add al, byte ptr [rax] ; fdivr st(3), st(0) ; clc ; call rsp
0x000000000018f0fe : add al, byte ptr [rax] ; fdivr st(5) ; jmp rsp
0x000000000018ceee : add al, byte ptr [rax] ; fisubr dword ptr [rbx - 9] ; call rsp
0x000000000018dc2e : add al, byte ptr [rax] ; hlt ; mov al, -8 ; jmp rsp
0x000000000018e866 : add al, byte ptr [rax] ; hlt ; push rbp ; cli ; call rsp
0x000000000018d326 : add al, byte ptr [rax] ; je 0x18d330 ; clc ; jmp rsp
0x000000000018d6d6 : add al, byte ptr [rax] ; jnp 0x18d71b ; clc ; jmp rsp
0x000000000018ec26 : add al, byte ptr [rax] ; jo 0x18ebed ; cli ; call rsp
0x00000000001b5d2e : add al, byte ptr [rax] ; jo 0x1b5d3e ; sti ; jmp qword ptr [rdx]
0x000000000018dbce : add al, byte ptr [rax] ; js 0x18db78 ; clc ; jmp rsp
0x00000000000974d5 : add al, byte ptr [rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000001b112e : add al, byte ptr [rax] ; lock push rcx ; sti ; call rsi
0x000000000018eb8e : add al, byte ptr [rax] ; mov ah, -0x47 ; cli ; call rsp
0x000000000018eac6 : add al, byte ptr [rax] ; mov ah, -0x67 ; cli ; jmp rsp
0x000000000018dee6 : add al, byte ptr [rax] ; mov ah, 0x31 ; stc ; call rsp
0x000000000018e7ae : add al, byte ptr [rax] ; mov ah, 0x41 ; cli ; call qword ptr [rdx + rax*8 + 2]
0x000000000018d8e6 : add al, byte ptr [rax] ; mov ah, 0x61 ; clc ; jmp rsp
0x000000000018e956 : add al, byte ptr [rax] ; mov ah, 0x65 ; cli ; jmp rsp
0x00000000001b72de : add al, byte ptr [rax] ; mov al, -0xe ; cli ; call rcx
0x0000000000097435 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x000000000018eb66 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; mov cl, -6 ; call rsp
0x0000000000160bbb : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000111d03 : add al, byte ptr [rax] ; pop r12 ; ret
0x00000000001b0ae6 : add al, byte ptr [rax] ; pop rbp ; ret
0x0000000000073f47 : add al, byte ptr [rax] ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000f8b42 : add al, byte ptr [rax] ; pop rbx ; ret
0x00000000001b4cfe : add al, byte ptr [rax] ; push rax ; jg 0x1b4cff ; call qword ptr [rdx]
0x00000000001b1f7e : add al, byte ptr [rax] ; push rax ; jrcxz 0x1b1f7e ; call qword ptr [rdi]
0x00000000001b0e7e : add al, byte ptr [rax] ; push rax ; ret 0xfff6
0x000000000018d586 : add al, byte ptr [rax] ; push rcx ; and edi, eax ; call rsp
0x000000000018d446 : add al, byte ptr [rax] ; push rsp ; adc bh, al ; call rsp
0x000000000018e7ce : add al, byte ptr [rax] ; push rsp ; cli ; inc esp ; ret 2
0x000000000018e37e : add al, byte ptr [rax] ; push rsp ; ret
0x00000000001b0e96 : add al, byte ptr [rax] ; ret 0xfff6
0x00000000001b5dfe : add al, byte ptr [rax] ; rol byte ptr [rsi], 1 ; sti ; jmp qword ptr [rdx]
0x000000000018e676 : add al, byte ptr [rax] ; sub edx, edi ; call rsp
0x000000000018da06 : add al, byte ptr [rax] ; test byte ptr [rbp - 8], dh ; jmp rsp
0x000000000018d5f6 : add al, byte ptr [rax] ; xchg eax, esp ; sub edi, eax ; jmp rsp
0x000000000018defe : add al, byte ptr [rax] ; xchg eax, esp ; xor edi, ecx ; jmp rsp
0x000000000018e786 : add al, byte ptr [rax] ; xor al, 0x3d ; cli ; call rsp
0x000000000018de2e : add al, byte ptr [rax] ; xor al, 2 ; stc ; call rsp
0x00000000001af95e : add al, byte ptr [rax] ; xor byte ptr [rax - 0xa], bl ; call qword ptr [rdi]
0x000000000019c5fd : add al, byte ptr [rbx] ; add al, byte ptr [rcx] ; ret
0x0000000000108cbe : add al, byte ptr [rcx + 0x39] ; ret
0x000000000011e1de : add al, byte ptr [rcx + 0x5c] ; sub eax, 1 ; pop r13 ; ret
0x00000000001987d0 : add al, byte ptr [rcx + 0xa] ; ret
0x0000000000104caf : add al, byte ptr [rcx - 0x77] ; call 0xffffffffc3555c03
0x00000000001057e2 : add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000001154d2 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x000000000019f465 : add al, byte ptr [rcx] ; add byte ptr [rax], cl ; lock ; jmp rsi
0x000000000019c5ff : add al, byte ptr [rcx] ; ret
0x0000000000037342 : add al, byte ptr [rdi + rcx + 0x45] ; ret 0x8944
0x00000000001af445 : add al, byte ptr [rdx] ; add byte ptr [rax], cl ; sub esi, esi ; jmp qword ptr [rcx]
0x000000000018cc0d : add al, byte ptr [rdx] ; add byte ptr [rdx + rsi - 9], dh ; call rsp
0x0000000000118792 : add al, byte ptr [rdx] ; cmp rcx, rax ; sbb eax, eax ; ret
0x0000000000197015 : add al, byte ptr [rdx] ; pushfq ; ret
0x000000000019d535 : add al, byte ptr [rdx] ; ret
0x000000000009e46a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000018d5f5 : add al, byte ptr ds:[rax] ; xchg eax, esp ; sub edi, eax ; jmp rsp
0x00000000000b4816 : add al, byte ptr es:[rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000025385 : add al, ch ; add eax, 0xe9fffff4 ; ret
0x00000000001a9357 : add al, ch ; cmc ; jmp rax
0x0000000000123f64 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; mov ah, -0x11 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000199977 : add al, ch ; in al, dx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ac567 : add al, ch ; in eax, -0xb ; call qword ptr [rbx]
0x00000000001a6267 : add al, ch ; js 0x1a6263 ; jmp qword ptr [rcx]
0x00000000000c037c : add al, ch ; loope 0xc038e ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000197207 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; jmp rbx
0x00000000000c1b25 : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; mov eax, 0x8948fffb ; ret
0x000000000004885b : add al, ch ; out dx, eax ; ret
0x000000000009380c : add al, ch ; outsb dx, byte ptr [rsi] ; mov esp, 0x8948fff8 ; ret
0x000000000004d04c : add al, ch ; outsb dx, byte ptr [rsi] ; ret
0x0000000000103782 : add al, ch ; pop rax ; ret
0x0000000000053d4c : add al, ch ; pop rsi ; ret
0x00000000000465c7 : add al, ch ; ret
0x00000000000e0b58 : add al, ch ; ret 0x15
0x0000000000061258 : add al, ch ; ret 0x439
0x000000000001fa68 : add al, ch ; ret 0x84f
0x0000000000022018 : add al, ch ; ret 0xca7
0x0000000000113f48 : add al, ch ; ret 0xf0b4
0x000000000011c658 : add al, ch ; ret 0xf1f0
0x000000000011c158 : add al, ch ; ret 0xf1f5
0x00000000000f9318 : add al, ch ; ret 0xf367
0x00000000000aab18 : add al, ch ; ret 0xf84f
0x000000000012a038 : add al, ch ; ret 0xffd9
0x0000000000081dd8 : add al, ch ; ret 0xffdb
0x000000000010c8ac : add al, ch ; scasb al, byte ptr [rdi] ; ret
0x0000000000028e19 : add al, ch ; shr dword ptr [rax + rax], -0x77 ; ret 0xe283
0x000000000008b78f : add al, ch ; stosd dword ptr [rdi], eax ; ret
0x00000000001a8847 : add al, ch ; sub ch, dh ; call qword ptr [rax]
0x00000000000b3cb4 : add al, ch ; test byte ptr [rsi], -4 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000117e01 : add al, ch ; test eax, 0x8900006a ; ret 0x8b48
0x00000000000c0901 : add al, ch ; test eax, 0x890005df ; ret 0x8b48
0x000000000008b7af : add al, ch ; wait ; ret
0x0000000000120178 : add al, ch ; xchg eax, edx ; ret 0
0x00000000000c1b56 : add al, ch ; xchg eax, esp ; mov eax, 0x8948fffb ; ret
0x000000000019f047 : add al, cl ; in eax, -0x11 ; jmp qword ptr [rbx]
0x00000000001b4607 : add al, cl ; jno 0x1b4606 ; call qword ptr [rbx]
0x00000000001a5e87 : add al, cl ; push -0xc ; jmp qword ptr [rcx]
0x00000000001b6177 : add al, cl ; ret 0xfff7
0x00000000001a6a27 : add al, cl ; scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a8817 : add al, cl ; sub ch, dh ; jmp qword ptr [rcx]
0x00000000001a3777 : add al, cl ; xchg dl, dh ; jmp qword ptr [rcx]
0x00000000001a60bf : add al, dh ; adc al, -7 ; call qword ptr [rax]
0x000000000001958f : add al, dh ; call qword ptr [rdi]
0x00000000001aba9f : add al, dh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rsi]
0x00000000001ac54f : add al, dh ; in eax, -0xb ; call qword ptr [rax]
0x000000000019ea4f : add al, dh ; mov ebp, edi ; jmp qword ptr [rdx]
0x00000000001a095f : add al, dh ; or ecx, esi ; call qword ptr [rcx]
0x00000000001a08df : add al, dh ; or ecx, esi ; jmp qword ptr [rcx]
0x00000000001a827f : add al, dh ; or esi, ebp ; jmp qword ptr [rcx]
0x0000000000189c27 : add al, dh ; pop rdi ; out dx, al ; call rsp
0x00000000001b112f : add al, dh ; push rcx ; sti ; call rsi
0x00000000001ab4bf : add al, dh ; sal ch, cl ; jmp qword ptr [rsi]
0x00000000001a549f : add al, dh ; sti ; call qword ptr [rsi]
0x00000000001a8b6f : add al, dh ; sub al, -0xb ; jmp qword ptr [rcx]
0x0000000000195e3f : add al, dh ; xchg eax, ecx ; in eax, dx ; call qword ptr [rax]
0x00000000001a8eff : add al, dh ; xor dh, ch ; jmp qword ptr [rcx]
0x00000000001a8cbf : add al, dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a788f : add al, dl ; fdivr st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a1a3f : add al, dl ; iretd ; int1 ; call rsi
0x000000000017919f : add al, dl ; jl 0x1791a7 ; push rax ; jge 0x1791ab ; call qword ptr [rax]
0x00000000001878d1 : add bh, ah ; call qword ptr [rax]
0x00000000001878f1 : add bh, ah ; call rax
0x00000000001ac7d0 : add bh, ah ; cmc ; call qword ptr [rax]
0x00000000001b0d9f : add bh, ah ; ret 0xfff6
0x0000000000166b9f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001b7597 : add bh, bh ; inc dword ptr [rcx] ; or ebp, edx ; add dword ptr [rbx], eax ; ret
0x000000000012470c : add bh, bh ; loope 0x1246a5 ; ret
0x00000000000b0bf5 : add bh, bh ; ret
0x000000000007af2d : add bh, bh ; xchg eax, ecx ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000189897 : add bh, bl ; or ah, ch ; jmp rsp
0x0000000000187658 : add bh, bl ; sti ; jmp rax
0x00000000000e59e2 : add bh, byte ptr [rax + 0x16] ; jbe 0xe59f9 ; ret
0x0000000000039d34 : add bh, byte ptr [rax + 1] ; ret
0x00000000000ec7c3 : add bh, byte ptr [rax - 1] ; ret
0x0000000000164a82 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000018a4e9 : add bh, ch ; call rsp
0x000000000018de31 : add bh, cl ; call rsp
0x00000000001b2769 : add bh, dh ; call qword ptr [rdi]
0x00000000000f165f : add bh, dh ; fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, 0xffffffff ; ret
0x00000000000c41ed : add bh, dh ; ret
0x00000000000363f7 : add bh, dh ; shl byte ptr [rcx], cl ; ret 0xf66
0x000000000000ec80 : add bh, dl ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000000a37a0 : add bl, al ; lea rax, qword ptr [rip + 0xbcd77] ; ret
0x00000000000a4364 : add bl, al ; lea rax, qword ptr [rip + 0xc0733] ; ret
0x000000000008ca14 : add bl, al ; lea rax, qword ptr [rip + 0xd6913] ; ret
0x00000000000d168e : add bl, al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000001154c8 : add bl, al ; mov eax, 0x100 ; nop ; ret
0x00000000000c412c : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000985a1 : add bl, al ; mov r10, r8 ; jmp 0x9859d
0x00000000000c307c : add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00000000000f126d : add bl, al ; nop ; xor eax, eax ; ret
0x0000000000124919 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000136b7a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000a55a5 : add bl, al ; ret
0x000000000012845e : add bl, al ; xor eax, eax ; ret
0x00000000001ad370 : add bl, bh ; cmc ; call qword ptr [rax]
0x000000000017abb7 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x0000000000019577 : add bl, bl ; call qword ptr [rdi]
0x0000000000036798 : add bl, bl ; insb byte ptr [rdi], dx ; and al, 0xffffffffffffffe8 ; ret
0x00000000000c6efb : add bl, byte ptr [r11 + 0x5d] ; ret
0x00000000001ab325 : add bl, byte ptr [rbp + 0xa] ; ret
0x00000000000c6efc : add bl, byte ptr [rbx + 0x5d] ; ret
0x00000000000c7ec2 : add bl, byte ptr [rcx - 0x7c0608bf] ; ret 0x8d01
0x0000000000193659 : add bl, ch ; jmp rax
0x0000000000117cef : add bl, ch ; or eax, 0x4735b10f ; ret
0x0000000000117d9b : add bl, ch ; or eax, 0x9b35b10f ; ret 0x2a
0x0000000000083484 : add bl, ch ; or eax, 0xd235b10f ; ret 0x33
0x0000000000021874 : add bl, ch ; or ecx, dword ptr [rax - 1] ; ret 0x9539
0x0000000000046de4 : add bl, ch ; ret
0x00000000000bacb6 : add bl, ch ; ret 0x1f0f
0x0000000000026425 : add bl, ch ; ret 0x8b48
0x0000000000044fdb : add bl, ch ; ret 0x9066
0x0000000000134b69 : add bl, ch ; ror dword ptr [rdi], 0x1f ; add bl, sil ; ret
0x000000000018ab47 : add bl, cl ; retf ; out dx, eax ; call rsp
0x000000000009ea1f : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009ea2f : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000021c02 : add bl, dh ; ret
0x0000000000080c34 : add bl, dl ; loopne 0x80bc5 ; rol byte ptr [rcx + 0xf], -0x6c ; ret
0x0000000000098556 : add bl, sil ; ret
0x00000000000c3217 : add byte ptr [r13 + rbp - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000be51e : add byte ptr [r13 - 0x77], 0x64 ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000005b618 : add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000011b2e3 : add byte ptr [r8 - 0x7d], r9b ; ret 0x3108
0x0000000000029d09 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x0000000000005ed1 : add byte ptr [r8], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret 0x10
0x0000000000193d3d : add byte ptr [r8], al ; add byte ptr [rbx - 0x15], cl ; jmp qword ptr [rsi]
0x0000000000199975 : add byte ptr [r8], al ; call 0x2319876f
0x0000000000193aad : add byte ptr [r8], al ; jo 0x193ae9 ; jmp 0x193ab9
0x0000000000193cf5 : add byte ptr [r8], al ; js 0x193d4a ; jmp 0x193d01
0x0000000000194135 : add byte ptr [r8], r8b ; mov byte ptr [rsi - 0x15], dl ; jmp qword ptr [rbx]
0x00000000000e4242 : add byte ptr [r9], r15b ; ret 0x870f
0x00000000001154ce : add byte ptr [rax + 0x102b8c3], dl ; add byte ptr [rax], al ; ret
0x000000000019e127 : add byte ptr [rax + 0x12], ch ; cli ; call qword ptr [rax]
0x00000000001a09c7 : add byte ptr [rax + 0x14], bl ; int1 ; jmp qword ptr [rax]
0x00000000001a0a27 : add byte ptr [rax + 0x15], bh ; int1 ; jmp qword ptr [rcx]
0x000000000003638b : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000000c313f : add byte ptr [rax + 0x20], bh ; ret
0x000000000019b447 : add byte ptr [rax + 0x27], bh ; out dx, al ; call qword ptr [rdx]
0x0000000000028cf4 : add byte ptr [rax + 0x29], cl ; ret
0x00000000000d4bf2 : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000b6185 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000051482 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000002722c : add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x000000000007e065 : add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x00000000001a89ef : add byte ptr [rax + 0x2b], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a07 : add byte ptr [rax + 0x2b], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a1f : add byte ptr [rax + 0x2b], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a8adf : add byte ptr [rax + 0x2c], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a8af7 : add byte ptr [rax + 0x2c], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a8ac7 : add byte ptr [rax + 0x2c], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8d07 : add byte ptr [rax + 0x2f], cl ; cmc ; jmp qword ptr [rcx]
0x000000000019c90f : add byte ptr [rax + 0x2f], dh ; out dx, al ; call qword ptr [rsi]
0x00000000001a8daf : add byte ptr [rax + 0x30], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a8dc7 : add byte ptr [rax + 0x30], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000193aaf : add byte ptr [rax + 0x31], dh ; jmp 0x193ab7
0x0000000000193c0f : add byte ptr [rax + 0x35], ah ; jmp 0x193c17
0x00000000001a90f7 : add byte ptr [rax + 0x38], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a91cf : add byte ptr [rax + 0x39], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a91e7 : add byte ptr [rax + 0x39], bl ; cmc ; jmp rbx
0x0000000000077ae9 : add byte ptr [rax + 0x39], cl ; fmul dword ptr [rax + 0xf] ; ret
0x000000000002d02a : add byte ptr [rax + 0x39], cl ; out dx, eax ; je 0x2d04e ; call 0x892a8
0x00000000000272fb : add byte ptr [rax + 0x39], cl ; ret
0x000000000002c0a4 : add byte ptr [rax + 0x39], cl ; ret 0x7773
0x000000000007ee3c : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000794ef : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000000e5f7a : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000007e4ee : add byte ptr [rax + 0x39], cl ; ret 0xb76
0x0000000000108e50 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x0000000000080b57 : add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x00000000001a0ed7 : add byte ptr [rax + 0x3f], cl ; int1 ; jmp qword ptr [rcx]
0x00000000001a0f5f : add byte ptr [rax + 0x40], al ; int1 ; call rsi
0x00000000000c318f : add byte ptr [rax + 0x40], bh ; ret
0x00000000001a9307 : add byte ptr [rax + 0x41], cl ; cmc ; jmp rdi
0x000000000018711d : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x0000000000193cf7 : add byte ptr [rax + 0x4a], bh ; jmp 0x193cff
0x0000000000193daf : add byte ptr [rax + 0x4b], dl ; jmp 0x193db7
0x00000000001a4a3f : add byte ptr [rax + 0x4d], al ; jmp qword ptr [rbx]
0x000000000001f575 : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000000ec00f : add byte ptr [rax + 0x5f], bh ; syscall ; ret
0x00000000000fafb8 : add byte ptr [rax + 0x5f], bl ; call rax
0x00000000001a5a6f : add byte ptr [rax + 0x61], ah ; hlt ; jmp qword ptr [rax]
0x00000000001a5b77 : add byte ptr [rax + 0x63], bl ; hlt ; jmp qword ptr [rcx]
0x00000000000840e4 : add byte ptr [rax + 0x63], cl ; adc al, -0x48 ; add rax, rdx ; jmp rax
0x0000000000034aef : add byte ptr [rax + 0x63], cl ; adc al, -0x49 ; add rdx, rdi ; jmp rdx
0x00000000000c3792 : add byte ptr [rax + 0x63], cl ; adc al, -0x68 ; add rax, rdx ; jmp rax
0x000000000006ddd2 : add byte ptr [rax + 0x63], cl ; adc al, -0x6f ; add rcx, rdx ; jmp rcx
0x00000000000b5e97 : add byte ptr [rax + 0x63], cl ; adc al, -0x70 ; add rax, rdx ; jmp rax
0x00000000000a25f6 : add byte ptr [rax + 0x63], cl ; add al, -0x42 ; add rsi, rax ; jmp rsi
0x000000000004dd42 : add byte ptr [rax + 0x63], cl ; add al, -0x70 ; add rax, r12 ; jmp rax
0x000000000005f5df : add byte ptr [rax + 0x63], cl ; add al, -0x70 ; add rax, r13 ; jmp rax
0x00000000000c7022 : add byte ptr [rax + 0x63], cl ; add al, -0x79 ; add rax, rdi ; jmp rax
0x0000000000127d53 : add byte ptr [rax + 0x63], cl ; add al, -0x79 ; add rdi, rax ; jmp rdi
0x0000000000064bda : add byte ptr [rax + 0x63], cl ; add al, -0x7a ; add rsi, rax ; jmp rsi
0x0000000000034d58 : add byte ptr [rax + 0x63], cl ; add al, -0x7d ; add rax, rbx ; jmp rax
0x000000000005eabf : add byte ptr [rax + 0x63], cl ; add al, -0x7e ; add rdx, rax ; jmp rdx
0x00000000000aa074 : add byte ptr [rax + 0x63], cl ; imul al ; ret
0x000000000006dcc2 : add byte ptr [rax + 0x63], cl ; or al, 0xffffffffffffff8e ; add rsi, rcx ; jmp rsi
0x0000000000034a87 : add byte ptr [rax + 0x63], cl ; ret
0x00000000001315e7 : add byte ptr [rax + 0x63], cl ; ret 0x14c
0x000000000005ebba : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000000d285f : add byte ptr [rax + 0x63], cl ; ret 0x8941
0x0000000000021052 : add byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000d6ee6 : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000000448e6 : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000000000c9754 : add byte ptr [rax + 0x63], cl ; ret 0xb60f
0x000000000013da83 : add byte ptr [rax + 0x63], cl ; ret 0xf66
0x0000000000047cdd : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000001a5b8f : add byte ptr [rax + 0x63], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001a5c87 : add byte ptr [rax + 0x64], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a5d9f : add byte ptr [rax + 0x66], ah ; hlt ; jmp qword ptr [rcx]
0x00000000000c28df : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x00000000000c28ff : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x00000000000c28ef : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000001a5f4f : add byte ptr [rax + 0x6c], ah ; hlt ; jmp qword ptr [rcx]
0x000000000019cd2f : add byte ptr [rax + 0x6c], al ; out dx, al ; call qword ptr [rsi]
0x00000000000c290f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000001a5f37 : add byte ptr [rax + 0x6c], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001672bf : add byte ptr [rax + 0x6c], dh ; in al, dx ; inc dword ptr [rax + 0x6c] ; in al, dx ; call qword ptr [rax]
0x00000000000c28cf : add byte ptr [rax + 0x6e], bh ; syscall ; ret
0x00000000000c2b0f : add byte ptr [rax + 0x6f], bh ; syscall ; ret
0x00000000001b47d7 : add byte ptr [rax + 0x74], ch ; idiv edi ; ret 0
0x000000000008787f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000046f97 : add byte ptr [rax + 0x752fff78], al ; xor cl, byte ptr [rax - 0x77] ; ret 0x8d48
0x000000000009ef6f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000001a62c7 : add byte ptr [rax + 0x79], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a102f : add byte ptr [rax + 0x7c], al ; int1 ; call qword ptr [rax]
0x00000000000c3077 : add byte ptr [rax + 0x7e], bh ; ret
0x00000000000c2fca : add byte ptr [rax + 0x7f], bh ; ret
0x00000000001a8117 : add byte ptr [rax + 0xa], bh ; cmc ; call rsp
0x00000000001a8207 : add byte ptr [rax + 0xb], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000fb42f : add byte ptr [rax + 0xe4], bh ; syscall ; ret
0x00000000001913c8 : add byte ptr [rax + 0xe], dl ; adc byte ptr [rbx + 0xa4c0202], al ; ret
0x000000000002fc74 : add byte ptr [rax + 0xf], al ; mov bh, -0x40 ; ret
0x000000000007b2a3 : add byte ptr [rax + 0xf], al ; mov dh, -0x3b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b295 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000079ba2 : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000087387 : add byte ptr [rax + 0xf], cl ; ret 0x4b80
0x000000000008cfe2 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000004fd44 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000b3754 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x000000000011ad32 : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000c308f : add byte ptr [rax + 0xfc17], bh ; ret
0x000000000002bebf : add byte ptr [rax + 1], bh ; ret
0x000000000008c725 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000003dfee : add byte ptr [rax + 1], cl ; ret
0x00000000000a607f : add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000009682f : add byte ptr [rax + 1], cl ; ret 0x8348
0x00000000000b1017 : add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000dfc49 : add byte ptr [rax + 1], cl ; ret 0x8d4c
0x00000000001a5203 : add byte ptr [rax + 1], dh ; add byte ptr [rax - 0xa], bl ; jmp qword ptr [rax]
0x000000000000668f : add byte ptr [rax + 1], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000001a91e3 : add byte ptr [rax + 1], dl ; add byte ptr [rax + 0x39], bl ; cmc ; jmp rbx
0x000000000012210f : add byte ptr [rax + 2], bh ; ret
0x0000000000046ddf : add byte ptr [rax + 3], bh ; jmp 0x46db1
0x00000000001a0807 : add byte ptr [rax + 4], bl ; int1 ; call qword ptr [rax]
0x000000000000e09f : add byte ptr [rax + 5], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001b5d2f : add byte ptr [rax + 7], dh ; sti ; jmp qword ptr [rdx]
0x00000000001a31ab : add byte ptr [rax + rax*2], bl ; add dword ptr [rax], eax ; and byte ptr [rdx + rsi*8], al ; jmp rdx
0x00000000001acfbb : add byte ptr [rax + rax*4], cl ; add dword ptr [rax], eax ; add dh, dh ; cmc ; call qword ptr [rcx]
0x0000000000197203 : add byte ptr [rax + rax*4], dh ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; jmp rbx
0x00000000000317ef : add byte ptr [rax + rax*8 - 0x7cb7ec8c], al ; ret 0x4901
0x00000000000c0f47 : add byte ptr [rax + rax*8 - 0x7cb7f48c], al ; ret
0x000000000009e5ec : add byte ptr [rax + rax], 0 ; ret
0x00000000001ab897 : add byte ptr [rax + rax], al ; add ah, bh ; ret 1
0x000000000019b987 : add byte ptr [rax + rax], al ; add ah, ch ; ret
0x000000000019b867 : add byte ptr [rax + rax], al ; add ah, cl ; ret 0
0x00000000000ff644 : add byte ptr [rax + rax], al ; add al, ch ; ret
0x000000000005d79e : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000657c2 : add byte ptr [rax + rax], al ; add byte ptr [rdi], cl ; ret
0x000000000019b3df : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push rsp ; ret 0
0x0000000000081cf1 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000081eb1 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000005ed5 : add byte ptr [rax + rax], cl ; push rax ; ret 0x10
0x0000000000005035 : add byte ptr [rax + rax], cl ; push rax ; ret 0xf
0x0000000000006f3d : add byte ptr [rax + rax], cl ; ret
0x00000000001ab487 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; ret 1
0x00000000001ab577 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000019b477 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001ab3f7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x00000000001ab52f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001ab4e7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001ab3df : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001ab427 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001ab4cf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret
0x00000000001a1a3b : add byte ptr [rax + rbp - 0x302fffff], ch ; int1 ; call rsi
0x00000000000a4035 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000001a0a23 : add byte ptr [rax + rbx + 0x15780001], dl ; int1 ; jmp qword ptr [rcx]
0x00000000001a4a3b : add byte ptr [rax + rbx*2 + 0x4d400001], ch ; jmp qword ptr [rbx]
0x00000000001a8a1b : add byte ptr [rax + rbx*4 + 0x2b700001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a33 : add byte ptr [rax + rbx*4 + 0x2b880001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a89d3 : add byte ptr [rax + rbx*4 + 1], al ; add byte ptr [rax], ch ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a89eb : add byte ptr [rax + rbx*4 + 1], bl ; add byte ptr [rax + 0x2b], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a03 : add byte ptr [rax + rbx*4 + 1], dh ; add byte ptr [rax + 0x2b], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a89bb : add byte ptr [rax + rbx*4], ch ; add dword ptr [rax], eax ; adc byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a89a3 : add byte ptr [rax + rbx*4], dl ; add dword ptr [rax], eax ; clc ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000001ac9d3 : add byte ptr [rax + rbx*8 + 1], al ; add byte ptr [rax], bh ; in eax, dx ; cmc ; call qword ptr [rdi]
0x00000000001aca1b : add byte ptr [rax + rbx*8 - 0x12afffff], cl ; cmc ; call qword ptr [rax]
0x000000000018f0ff : add byte ptr [rax + rbx*8 - 3], ah ; jmp rsp
0x00000000001a09c3 : add byte ptr [rax + rbx], dh ; add dword ptr [rax], eax ; pop rax ; adc al, -0xf ; jmp qword ptr [rax]
0x000000000010078d : add byte ptr [rax + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000000c46fa : add byte ptr [rax + rcx + 0xf], dh ; mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000f490d : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x0000000000047536 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000001a3a3b : add byte ptr [rax + rcx*2 - 0x766fffff], ch ; call qword ptr [rdx]
0x00000000001a79ab : add byte ptr [rax + rcx*4], bl ; add dword ptr [rax], eax ; rcr ch ; hlt ; call rbx
0x000000000019f993 : add byte ptr [rax + rcx], al ; add dword ptr [rax], eax ; sbb byte ptr [rbp - 0x10], bl ; call qword ptr [rdx]
0x00000000001a2a4b : add byte ptr [rax + rdi - 0x1b3fffff], bh ; int1 ; jmp rsi
0x00000000001a6a23 : add byte ptr [rax + rdi*2 - 0x5137ffff], dl ; hlt ; jmp qword ptr [rcx]
0x000000000019ea4b : add byte ptr [rax + rdi*8 - 0x74100000], bh ; out dx, eax ; jmp qword ptr [rdx]
0x000000000019ea1b : add byte ptr [rax + rdi*8 - 0x74200000], cl ; out dx, eax ; jmp qword ptr [rax]
0x00000000001a8233 : add byte ptr [rax + rdx*4 + 0xba80001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a824b : add byte ptr [rax + rdx*4 + 0xbc00001], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a8203 : add byte ptr [rax + rdx*4 + 1], dh ; add byte ptr [rax + 0xb], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a81bb : add byte ptr [rax + rdx*4], ch ; add dword ptr [rax], eax ; xor byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a81a3 : add byte ptr [rax + rdx*4], dl ; add dword ptr [rax], eax ; sbb byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018f047 : add byte ptr [rax + rdx*8], al ; std ; jmp rsp
0x00000000001901f3 : add byte ptr [rax + rdx], ah ; add al, bh ; pop rax ; std ; jmp qword ptr [rdi]
0x000000000018cbbf : add byte ptr [rax + rsi - 9], dh ; jmp rsp
0x00000000001a6233 : add byte ptr [rax + rsi*2 + 0x78b80001], ah ; hlt ; jmp qword ptr [rcx]
0x000000000019a20b : add byte ptr [rax + rsi*4], bh ; add byte ptr [rax - 3], ah ; in eax, dx ; jmp rax
0x000000000019e223 : add byte ptr [rax + rsi*8 + 0x45880000], dl ; out dx, eax ; jmp qword ptr [rsi]
0x000000000018acef : add byte ptr [rax - 0x11], ah ; jmp rsp
0x00000000001aca1f : add byte ptr [rax - 0x13], dl ; cmc ; call qword ptr [rax]
0x0000000000126e9d : add byte ptr [rax - 0x168b7f80], -0x77 ; ret 0x48bf
0x0000000000112fbc : add byte ptr [rax - 0x168b7f80], -0x77 ; ret 0x894c
0x0000000000031b3e : add byte ptr [rax - 0x178b7f80], -0x77 ; ret 0x8b4c
0x00000000000e7633 : add byte ptr [rax - 0x188b7f80], -0x77 ; ret 0x8b49
0x00000000001ac337 : add byte ptr [rax - 0x1d], ch ; cmc ; jmp rbx
0x00000000001ac31f : add byte ptr [rax - 0x1d], dh ; cmc ; call qword ptr [rax]
0x00000000001ac1cf : add byte ptr [rax - 0x1f], dl ; cmc ; call qword ptr [rcx]
0x00000000001abc8f : add byte ptr [rax - 0x22], ah ; cmc ; call qword ptr [rax]
0x00000000001abca7 : add byte ptr [rax - 0x22], bl ; cmc ; call qword ptr [rax]
0x00000000001a7907 : add byte ptr [rax - 0x23], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a78d7 : add byte ptr [rax - 0x23], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001ab72f : add byte ptr [rax - 0x2c], al ; cmc ; jmp qword ptr [rsi]
0x00000000001ab747 : add byte ptr [rax - 0x2c], bl ; cmc ; jmp qword ptr [rsi]
0x00000000001ab75f : add byte ptr [rax - 0x2c], dh ; cmc ; jmp qword ptr [rsi]
0x00000000001ab537 : add byte ptr [rax - 0x2d], ch ; cmc ; jmp qword ptr [rsi]
0x0000000000037731 : add byte ptr [rax - 0x2d], cl ; loopne 0x37787 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001ab51f : add byte ptr [rax - 0x2d], dl ; cmc ; jmp qword ptr [rsi]
0x00000000001ab42f : add byte ptr [rax - 0x2e], ah ; cmc ; jmp qword ptr [rsi]
0x00000000001ab447 : add byte ptr [rax - 0x2e], bh ; cmc ; jmp qword ptr [rsi]
0x0000000000198de7 : add byte ptr [rax - 0x2f], bh ; in eax, dx ; call rcx
0x00000000001a1db7 : add byte ptr [rax - 0x2f], bh ; int1 ; jmp qword ptr [rbx]
0x00000000001a72ff : add byte ptr [rax - 0x36], dl ; hlt ; jmp qword ptr [rcx]
0x000000000003fab5 : add byte ptr [rax - 0x39], cl ; ret
0x00000000000b1f64 : add byte ptr [rax - 0x39], cl ; ret 0
0x00000000000b1eb4 : add byte ptr [rax - 0x39], cl ; ret 0x400
0x0000000000070cd6 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000a3a8f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000a3a6f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000a3acf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000a3a7f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000a3abf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000036695 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x00000000000365ee : add byte ptr [rax - 0x3f28f09a], dl ; and eax, 8 ; ret
0x00000000000f3986 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000363ea : add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000002bf9d : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000bf71f : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000001a6fb7 : add byte ptr [rax - 0x42], bl ; hlt ; jmp qword ptr [rcx]
0x000000000018ec27 : add byte ptr [rax - 0x42], dh ; cli ; call rsp
0x00000000001a6fcf : add byte ptr [rax - 0x42], dh ; hlt ; jmp qword ptr [rcx]
0x000000000000ed57 : add byte ptr [rax - 0x44], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000001a6ea7 : add byte ptr [rax - 0x45], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001a6ebf : add byte ptr [rax - 0x45], dh ; hlt ; jmp qword ptr [rcx]
0x00000000000b5d24 : add byte ptr [rax - 0x46], cl ; ret
0x000000000003e7c4 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000001a67ff : add byte ptr [rax - 0x56], ah ; hlt ; call qword ptr [rbx]
0x0000000000197277 : add byte ptr [rax - 0x5b], ch ; in eax, dx ; call rcx
0x000000000018dbcf : add byte ptr [rax - 0x5f], bh ; clc ; jmp rsp
0x0000000000195527 : add byte ptr [rax - 0x66], ch ; in al, dx ; call rdx
0x000000000019ed6f : add byte ptr [rax - 0x68], al ; out dx, eax ; jmp rdi
0x00000000001ab10f : add byte ptr [rax - 0x69], ah ; cmc ; call rsp
0x00000000000c4eb8 : add byte ptr [rax - 0x6bf08406], al ; ret 0xb60f
0x00000000001797ff : add byte ptr [rax - 0x72], cl ; lcall ptr [rax - 0x72] ; call qword ptr [rdi]
0x00000000000c8203 : add byte ptr [rax - 0x73], cl ; add al, -0x32 ; jmp 0xc81d3
0x0000000000021faf : add byte ptr [rax - 0x73], cl ; add eax, 0x15b12c ; ret
0x0000000000021fbf : add byte ptr [rax - 0x73], cl ; add eax, 0x15d103 ; ret
0x00000000000fa18e : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8622 ; ret
0x00000000000f9fce : add byte ptr [rax - 0x73], cl ; add eax, 0x2c87e2 ; ret
0x000000000007efea : add byte ptr [rax - 0x73], cl ; add eax, 0x34076e ; ret
0x0000000000022eb2 : add byte ptr [rax - 0x73], cl ; and qword ptr [rax - 0x77], rcx ; ret 0x8948
0x00000000000a407f : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000a408f : add byte ptr [rax - 0x73], cl ; cld ; ret
0x0000000000112d4f : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2b1229 ; call rax
0x00000000000a406f : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x0000000000083fdf : add byte ptr [rax - 0x73], cl ; lock ; add rsp, 8 ; ret
0x00000000000a3f0c : add byte ptr [rax - 0x73], cl ; lock ; ret
0x000000000003b86c : add byte ptr [rax - 0x73], cl ; lock pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000f608f : add byte ptr [rax - 0x73], cl ; push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000462d3 : add byte ptr [rax - 0x73], cl ; xor eax, 0x195 ; call rax
0x0000000000070338 : add byte ptr [rax - 0x73], cl ; xor eax, 0x30 ; call rax
0x000000000007d008 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe480 ; call rax
0x000000000007cc08 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe880 ; call rax
0x000000000007b958 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffb30 ; call rax
0x0000000000070694 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcd4 ; call rax
0x000000000007b6f0 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd98 ; call rax
0x000000000019d50f : add byte ptr [rax - 0x75], ah ; cld ; call qword ptr [rdx]
0x00000000000e2fb7 : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x39], cl ; ret
0x000000000007e62f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000121e96 : add byte ptr [rax - 0x75], cl ; add al, -0x3e ; jmp rax
0x00000000000e5f77 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000048741 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000b3b77 : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000013463f : add byte ptr [rax - 0x75], cl ; add eax, 0x2884b9 ; jmp rax
0x0000000000136160 : add byte ptr [rax - 0x75], cl ; add eax, 0x28a728 ; call qword ptr [rax]
0x00000000001346a0 : add byte ptr [rax - 0x75], cl ; add eax, 0x28c1e8 ; call qword ptr [rax]
0x000000000007d3cf : add byte ptr [rax - 0x75], cl ; add eax, 0x342dc9 ; ret
0x000000000002bfcf : add byte ptr [rax - 0x75], cl ; add eax, 0x394ae9 ; ret
0x000000000002364f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a15f1 ; ret
0x000000000002363f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a1611 ; ret
0x00000000000f309e : add byte ptr [rax - 0x75], cl ; and al, 0xffffff98 ; ret
0x0000000000076b60 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000235d8 : add byte ptr [rax - 0x75], cl ; jnp 0x235fa ; call rax
0x0000000000075ef6 : add byte ptr [rax - 0x75], cl ; js 0x75f41 ; jmp 0x75ec6
0x00000000000f8f2f : add byte ptr [rax - 0x75], cl ; or al, 0 ; add byte ptr [rax], al ; ret
0x00000000000d8988 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0xe283
0x0000000000136c96 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x00000000000f8f27 : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x0000000000080a77 : add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x000000000014518f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000fd6fe : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000066019 : add byte ptr [rax - 0x75], cl ; xor eax, 0x358f3f ; call rax
0x0000000000064731 : add byte ptr [rax - 0x75], cl ; xor eax, 0x35a827 ; call rax
0x000000000005f2b5 : add byte ptr [rax - 0x75], cl ; xor eax, 0x35fca3 ; call rax
0x0000000000055f43 : add byte ptr [rax - 0x75], cl ; xor eax, 0x369015 ; call rax
0x000000000004ef71 : add byte ptr [rax - 0x75], cl ; xor eax, 0x36ffe7 ; call rax
0x0000000000049e2d : add byte ptr [rax - 0x75], cl ; xor eax, 0x37512b ; call rax
0x0000000000195997 : add byte ptr [rax - 0x76], bh ; in eax, dx ; call qword ptr [rax]
0x00000000000f3fea : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x0000000000070e7f : add byte ptr [rax - 0x76b80000], al ; ret 0x2d75
0x000000000006f3c1 : add byte ptr [rax - 0x76b80000], al ; ret 0x3675
0x000000000010acef : add byte ptr [rax - 0x76b80000], al ; ret 0x3875
0x00000000000f41df : add byte ptr [rax - 0x76b80000], al ; ret 0x5e9
0x00000000001210a6 : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [r11]
0x000000000008b610 : add byte ptr [rax - 0x77], cl ; add eax, 0x336658 ; ret
0x000000000008734e : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x000000000010cbff : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x000000000003c87f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x0000000000078538 : add byte ptr [rax - 0x77], cl ; clc ; jmp 0x78505
0x00000000000f3eb8 : add byte ptr [rax - 0x77], cl ; clc ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000109a5f : add byte ptr [rax - 0x77], cl ; clc ; pop rbx ; ret
0x000000000007d3ff : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000003999c : add byte ptr [rax - 0x77], cl ; dec byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000a5597 : add byte ptr [rax - 0x77], cl ; enter 0x31c3, -0x40 ; nop ; ret
0x000000000007a8c7 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000005d9ee : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000083641 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000007a323 : add byte ptr [rax - 0x77], cl ; fild word ptr [rbp + 0x4f0f48c9] ; ret 0x8948
0x000000000007e4be : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000055ad4 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rcx - 0x77] ; ret 0x8b44
0x00000000000e46b0 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0x11e8
0x0000000000075396 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000007519b : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000000d95a7 : add byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000000c8db7 : add byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x7d] ; ret
0x0000000000136751 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x0000000000121659 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 8 ; call rcx
0x0000000000086344 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x000000000004dfd4 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000011479b : add byte ptr [rax - 0x77], cl ; inc byte ptr [rbx + 0x394101c0] ; ret 0xd975
0x00000000000814e7 : add byte ptr [rax - 0x77], cl ; iretd ; mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x000000000007142f : add byte ptr [rax - 0x77], cl ; jmp 0x48f59d88
0x00000000000b7be3 : add byte ptr [rax - 0x77], cl ; jmp 0x49ce0539
0x00000000000b8058 : add byte ptr [rax - 0x77], cl ; jmp 0x49ce09ae
0x000000000006eea5 : add byte ptr [rax - 0x77], cl ; mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x00000000000793d3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x140 ; pop rbx ; ret
0x0000000000086ebb : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x0000000000120cb2 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x00000000001223c8 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000000f6d6b : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000108276 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r14 ; call rax
0x000000000012ef62 : add byte ptr [rax - 0x77], cl ; push rdi ; sbb bl, dh ; ret
0x0000000000083759 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000262e3 : add byte ptr [rax - 0x77], cl ; ret
0x000000000011c644 : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000000a7d1f : add byte ptr [rax - 0x77], cl ; ret 0x2944
0x0000000000048daa : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000001067a4 : add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000070e82 : add byte ptr [rax - 0x77], cl ; ret 0x2d75
0x000000000007ed95 : add byte ptr [rax - 0x77], cl ; ret 0x2fe9
0x000000000006f3c4 : add byte ptr [rax - 0x77], cl ; ret 0x3675
0x000000000010acf2 : add byte ptr [rax - 0x77], cl ; ret 0x3875
0x000000000006f6dc : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000046e44 : add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x00000000000e75f3 : add byte ptr [rax - 0x77], cl ; ret 0x4c6
0x00000000000f41e2 : add byte ptr [rax - 0x77], cl ; ret 0x5e9
0x00000000000c5f09 : add byte ptr [rax - 0x77], cl ; ret 0x775
0x0000000000033daf : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000eb0e6 : add byte ptr [rax - 0x77], cl ; ret 0x8845
0x000000000005ea9c : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000502bd : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002e85f : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000070218 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000b59ef : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000f316a : add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00000000000f9eb5 : add byte ptr [rax - 0x77], cl ; ret 0xb6e9
0x000000000006084d : add byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000001011f2 : add byte ptr [rax - 0x77], cl ; ret 0xb9
0x000000000005a76d : add byte ptr [rax - 0x77], cl ; ret 0xbae8
0x00000000000c00fe : add byte ptr [rax - 0x77], cl ; ret 0xbae9
0x000000000008c3f0 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000fd413 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000e8892 : add byte ptr [rax - 0x77], cl ; ret 0xc641
0x00000000000f457b : add byte ptr [rax - 0x77], cl ; ret 0xcfeb
0x00000000000bcfd8 : add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x000000000004753a : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000000be312 : add byte ptr [rax - 0x77], cl ; ret 0xe6e9
0x00000000000933db : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000d25f9 : add byte ptr [rax - 0x77], cl ; ret 0xf7e9
0x0000000000087292 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000004870e : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000e2f65 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x00000000000572e9 : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000002ab89 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; fimul word ptr [rax - 0x77] ; ret 0x8948
0x0000000000097752 : add byte ptr [rax - 0x77], cl ; stc ; mov qword ptr [rdx], rcx ; ret
0x000000000004dcce : add byte ptr [rax - 0x77], cl ; test dword ptr [rax - 0x16000006], ebx ; ret
0x00000000001283ac : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1283c4 ; ret
0x00000000001283c4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1283dc ; ret
0x0000000000128c0c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x128c24 ; ret
0x0000000000128c24 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x128c3c ; ret
0x0000000000128c54 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x128c6c ; ret
0x000000000010d0f7 : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000000e2964 : add byte ptr [rax - 0x78], al ; mov ah, 0x24 ; ret 0
0x00000000001a3717 : add byte ptr [rax - 0x7a], bh ; jmp qword ptr [rax]
0x00000000000759ea : add byte ptr [rax - 0x7b], cl ; push qword ptr [rsi + rsi*4 - 0xa] ; ret 0x7508
0x000000000011deb5 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8b4c
0x000000000009af13 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7b ; ret
0x00000000000658ea : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7c ; ret
0x00000000000de9df : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7c ; ret 0
0x000000000012c523 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], cl ; pop rbx ; ret
0x00000000000302cc : add byte ptr [rax - 0x7bf0ffc1], al ; ret 0
0x000000000015f377 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000008366c : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000002fa33 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000081661 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000004e170 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000004b97f : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x850f
0x00000000000608be : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000085b0f : add byte ptr [rax - 0x7d], cl ; in al, dx ; or al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 6
0x0000000000116ebf : add byte ptr [rax - 0x7d], cl ; in al, dx ; xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x00000000001662f6 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x166307 ; ret
0x0000000000023107 : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000080d4f : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000011b2e4 : add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x00000000000a1d8f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000f3623 : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000026791 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000011478a : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000070414 : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x00000000000234be : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e7aec : add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000068807 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000038f87 : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000016666f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000fcc3a : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000097a4f : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x0000000000029d0a : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000000b4a7f : add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x000000000013822f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002910f : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000006859f : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000007e00c : add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x000000000008c91f : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008c8af : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000042c2f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000a7d57 : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x0000000000025204 : add byte ptr [rax - 0x7d], cl ; ret 0x8801
0x0000000000117a30 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x000000000008bcd2 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000013a213 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001187af : add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x0000000000058dcf : add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000000000138253 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000054997 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000754bc : add byte ptr [rax - 0x7d], cl ; ret 0xf301
0x000000000009888f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], -0x7d ; ret 0x4840
0x000000000002bb46 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000001025df : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], -0x3a ; jmp qword ptr [rax]
0x000000000002d12f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], -0x7d ; ret 0x8301
0x000000000004724f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret 0xb87f
0x00000000000aa037 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], -0x7d ; ret 0x4801
0x0000000000096958 : add byte ptr [rax - 0x7d], cl ; stc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000000b201c : add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x00000000000465c0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000007485d : add byte ptr [rax - 0x7f], cl ; ret
0x0000000000030034 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000014b7ab : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000019eb77 : add byte ptr [rax - 0x80], cl ; cld ; jmp qword ptr [rax]
0x00000000001352c2 : add byte ptr [rax - 0x9ffffff], al ; ret
0x00000000001a5207 : add byte ptr [rax - 0xa], bl ; jmp qword ptr [rax]
0x000000000019dfa7 : add byte ptr [rax - 0xa], ch ; out dx, al ; call qword ptr [rcx]
0x0000000000179580 : add byte ptr [rax - 0xe], ch ; call qword ptr [rax]
0x00000000001792e8 : add byte ptr [rax - 0xe], cl ; call qword ptr [rax]
0x0000000000133b6a : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000003566d : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000036c0d : add byte ptr [rax - 1], bh ; ret
0x000000000007d77e : add byte ptr [rax - 1], dil ; ret
0x000000000019a20f : add byte ptr [rax - 3], ah ; in eax, dx ; jmp rax
0x00000000001a2f9f : add byte ptr [rax - 5], al ; int1 ; jmp qword ptr [rcx]
0x00000000001a3017 : add byte ptr [rax - 5], bl ; int1 ; jmp qword ptr [rcx]
0x00000000001a302f : add byte ptr [rax - 5], dh ; int1 ; jmp qword ptr [rcx]
0x00000000001ab6cb : add byte ptr [rax*8 - 0x2c1fffff], bh ; cmc ; jmp qword ptr [rsi]
0x00000000001ab69b : add byte ptr [rax*8 - 0x2c4fffff], cl ; cmc ; jmp qword ptr [rsi]
0x00000000000465c4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000010c8a9 : add byte ptr [rax], 0 ; add al, ch ; scasb al, byte ptr [rdi] ; ret
0x00000000000c9be5 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000aa071 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; imul al ; ret
0x00000000000d76d4 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000dfc46 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d4c
0x00000000000dcfe2 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007af30 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000166b9b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000012f29b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000014df8b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000f8f23 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000a4303 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000f76fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000713a3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000002dbd3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00000000000edf3b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000009452b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000e1bd5 : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x3978244c], cl ; ret 0x1472
0x00000000000e0116 : add byte ptr [rax], 0 ; add byte ptr [rbx - 0x7bf0f008], al ; ret 0x16
0x0000000000060566 : add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x0000000000160ec1 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000031d8d : add byte ptr [rax], 0 ; add cl, ch ; ret
0x0000000000197205 : add byte ptr [rax], 0 ; call 0xffffffffe4195fb7
0x000000000003693f : add byte ptr [rax], 0 ; ret
0x000000000019ac7f : add byte ptr [rax], ah ; adc dh, ch ; jmp qword ptr [rcx]
0x00000000001a31af : add byte ptr [rax], ah ; add al, -0xe ; jmp rdx
0x000000000018f1af : add byte ptr [rax], ah ; add ch, cl ; call rax
0x00000000001a91b3 : add byte ptr [rax], ah ; add dword ptr [rax], eax ; sub byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001ad26f : add byte ptr [rax], ah ; cli ; cmc ; call qword ptr [rax]
0x000000000002fcb4 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x00000000001b2baf : add byte ptr [rax], ah ; or dh, bh ; call qword ptr [rsi]
0x00000000001ac5ef : add byte ptr [rax], ah ; out -0xb, al ; call qword ptr [rax]
0x0000000000008337 : add byte ptr [rax], ah ; ret
0x000000000000f777 : add byte ptr [rax], ah ; ret 0x12
0x000000000000f327 : add byte ptr [rax], ah ; ret 0xe
0x0000000000006e67 : add byte ptr [rax], ah ; ret 0xf
0x00000000001ab4ef : add byte ptr [rax], ah ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001a45af : add byte ptr [rax], ah ; sub esi, ebx ; jmp rdx
0x00000000001abca2 : add byte ptr [rax], al ; adc al, -0x35 ; add dword ptr [rax], eax ; pop rax ; fdivrp st(5) ; call qword ptr [rax]
0x00000000001ab4a2 : add byte ptr [rax], al ; adc al, -0x3d ; add dword ptr [rax], eax ; fcom st(2) ; cmc ; jmp qword ptr [rsi]
0x00000000001a89a2 : add byte ptr [rax], al ; adc al, -0x68 ; add dword ptr [rax], eax ; clc ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000001a81a2 : add byte ptr [rax], al ; adc al, -0x70 ; add dword ptr [rax], eax ; sbb byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001ab486 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; ret 1
0x00000000001ab576 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000019b476 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001ab3f6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x00000000001ab52e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001ab4e6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001ab3de : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001ab426 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001ab4ce : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret
0x00000000001a07a2 : add byte ptr [rax], al ; adc al, 0x16 ; add dword ptr [rax], eax ; clc ; cld ; jmp qword ptr [rbx]
0x00000000001a37a2 : add byte ptr [rax], al ; adc al, 0x46 ; add dword ptr [rax], eax ; clc ; xchg dl, dh ; jmp qword ptr [rcx]
0x000000000018939e : add byte ptr [rax], al ; adc al, 0xc ; jmp 0x1893a8
0x000000000019f8a2 : add byte ptr [rax], al ; adc al, 7 ; add dword ptr [rax], eax ; or byte ptr [rbp - 0x10], bl ; jmp qword ptr [rdx]
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000005ed2 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret 0x10
0x0000000000005032 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret 0xf
0x000000000019151e : add byte ptr [rax], al ; adc byte ptr [rsi - 0x16], cl ; jmp qword ptr [rbx]
0x00000000001901f2 : add byte ptr [rax], al ; adc byte ptr fs:[rax], al ; add al, bh ; pop rax ; std ; jmp qword ptr [rdi]
0x0000000000189586 : add byte ptr [rax], al ; adc eax, dword ptr [rax - 0x15] ; call rsp
0x00000000001b03da : add byte ptr [rax], al ; adc r8b, byte ptr [rdx] ; add al, ah ; xchg esi, esi ; jmp qword ptr [rdi]
0x00000000001ab471 : add byte ptr [rax], al ; add ah, ah ; ret 1
0x00000000001a5689 : add byte ptr [rax], al ; add ah, bh ; add dword ptr fs:[rax], eax ; stosb byte ptr [rdi], al ; ret 0xffe7
0x00000000001ab489 : add byte ptr [rax], al ; add ah, bh ; ret 1
0x000000000019b989 : add byte ptr [rax], al ; add ah, ch ; ret
0x000000000019b479 : add byte ptr [rax], al ; add ah, ch ; ret 0
0x000000000019b459 : add byte ptr [rax], al ; add ah, cl ; ret 0
0x00000000001ab459 : add byte ptr [rax], al ; add ah, cl ; ret 1
0x00000000001ab561 : add byte ptr [rax], al ; add ah, dl ; ret
0x000000000019e092 : add byte ptr [rax], al ; add al, -0x11 ; add byte ptr [rax], al ; test al, -9 ; out dx, al ; call qword ptr [rax]
0x000000000018f046 : add byte ptr [rax], al ; add al, -0x30 ; std ; jmp rsp
0x00000000001ab592 : add byte ptr [rax], al ; add al, -0x3c ; add dword ptr [rax], eax ; or ah, al ; clc ; jmp qword ptr [rsi]
0x00000000001a8492 : add byte ptr [rax], al ; add al, -0x6d ; add dword ptr [rax], eax ; cmp byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x0000000000189ed6 : add byte ptr [rax], al ; add al, -0x76 ; out dx, al ; call rsp
0x00000000001a7792 : add byte ptr [rax], al ; add al, -0x7a ; add dword ptr [rax], eax ; cmp dl, bl ; hlt ; call qword ptr [rax]
0x00000000001b615f : add byte ptr [rax], al ; add al, -5 ; jmp qword ptr [rdx]
0x00000000000ff643 : add byte ptr [rax], al ; add al, 0 ; add al, ch ; ret
0x00000000001b0e92 : add byte ptr [rax], al ; add al, 0x1d ; add al, byte ptr [rax] ; ret 0xfff6
0x00000000001a6292 : add byte ptr [rax], al ; add al, 0x71 ; add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xc], bh ; jmp qword ptr [rcx]
0x000000000019f992 : add byte ptr [rax], al ; add al, 8 ; add dword ptr [rax], eax ; sbb byte ptr [rbp - 0x10], bl ; call qword ptr [rdx]
0x00000000001057e0 : add byte ptr [rax], al ; add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000048859 : add byte ptr [rax], al ; add al, ch ; out dx, eax ; ret
0x00000000000465c5 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000061256 : add byte ptr [rax], al ; add al, ch ; ret 0x439
0x000000000001fa66 : add byte ptr [rax], al ; add al, ch ; ret 0x84f
0x0000000000022016 : add byte ptr [rax], al ; add al, ch ; ret 0xca7
0x0000000000113f46 : add byte ptr [rax], al ; add al, ch ; ret 0xf0b4
0x00000000000f9316 : add byte ptr [rax], al ; add al, ch ; ret 0xf367
0x0000000000081dd6 : add byte ptr [rax], al ; add al, ch ; ret 0xffdb
0x000000000010c8aa : add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; ret
0x0000000000117dff : add byte ptr [rax], al ; add al, ch ; test eax, 0x8900006a ; ret 0x8b48
0x00000000000c08ff : add byte ptr [rax], al ; add al, ch ; test eax, 0x890005df ; ret 0x8b48
0x000000000008b7ad : add byte ptr [rax], al ; add al, ch ; wait ; ret
0x0000000000120176 : add byte ptr [rax], al ; add al, ch ; xchg eax, edx ; ret 0
0x000000000001958d : add byte ptr [rax], al ; add al, dh ; call qword ptr [rdi]
0x0000000000166b9d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000012470a : add byte ptr [rax], al ; add bh, bh ; loope 0x1246a7 ; ret
0x00000000000d28b7 : add byte ptr [rax], al ; add bh, dh ; ret
0x00000000000363f5 : add byte ptr [rax], al ; add bh, dh ; shl byte ptr [rcx], cl ; ret 0xf66
0x00000000000c412a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x0000000000128d1b : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000a55a3 : add byte ptr [rax], al ; add bl, al ; ret
0x000000000012845c : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x0000000000019575 : add byte ptr [rax], al ; add bl, bl ; call qword ptr [rdi]
0x0000000000036796 : add byte ptr [rax], al ; add bl, bl ; insb byte ptr [rdi], dx ; and al, 0xffffffffffffffe8 ; ret
0x0000000000046de2 : add byte ptr [rax], al ; add bl, ch ; ret
0x00000000000bacb4 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x0000000000026423 : add byte ptr [rax], al ; add bl, ch ; ret 0x8b48
0x0000000000044fd9 : add byte ptr [rax], al ; add bl, ch ; ret 0x9066
0x000000000009ea1d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009ea2d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002dbd5 : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000096723 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000d4bf0 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000b6183 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000051480 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000007e063 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x0000000000077ae7 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; fmul dword ptr [rax + 0xf] ; ret
0x00000000000272f9 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000794ed : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000018711b : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00000000000aa072 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; imul al ; ret
0x00000000001315e5 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x14c
0x00000000000d285d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8941
0x0000000000021050 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000dc577 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000000db661 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000009ef6d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000c2fc8 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x0000000000079ba0 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x00000000001360b2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000007a4d1 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000011ad30 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000c308d : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x000000000002bebd : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000a29c0 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000003dfec : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000a607d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000009682d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8348
0x00000000000d76d5 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000dfc47 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d4c
0x000000000012210d : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x0000000000046ddd : add byte ptr [rax], al ; add byte ptr [rax + 3], bh ; jmp 0x46db3
0x00000000000317ed : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x7cb7ec8c], al ; ret 0x4901
0x00000000000c0f45 : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x7cb7f48c], al ; ret
0x00000000001ab895 : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add ah, bh ; ret 1
0x000000000019b985 : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add ah, ch ; ret
0x000000000019b865 : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add ah, cl ; ret 0
0x000000000019b3dd : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push rsp ; ret 0
0x00000000001ab485 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; ret 1
0x00000000001ab575 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000019b475 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001ab3f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x00000000001ab52d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001ab4e5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001ab3dd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001ab425 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001ab4cd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret
0x00000000000a4033 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000010078b : add byte ptr [rax], al ; add byte ptr [rax + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000000f1e1d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000363e8 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000002bf9b : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000bf71d : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000c50e6 : add byte ptr [rax], al ; add byte ptr [rax - 0x6bf08406], al ; ret 0xb60f
0x00000000000a407d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000a408d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000a406d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000a3faf : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; lock ; ret
0x000000000007e62d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f309c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xffffff98 ; ret
0x0000000000075ef4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x75f43 ; jmp 0x75ec8
0x00000000000f8f25 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x0000000000080a75 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x00000000001210a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [r11]
0x0000000000078536 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; jmp 0x78507
0x000000000007d3fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000007e4bc : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000000d95a5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; ret
0x000000000004dfd2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000086eb9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x0000000000120cb0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x00000000001223c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000000f6d69 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000012ef60 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rdi ; sbb bl, dh ; ret
0x000000000003fef6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a7d1d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00000000000cfd3d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000cd663 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000070216 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000b59ed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000005a76b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbae8
0x00000000000bcfd6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x00000000000d25f7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf7e9
0x000000000007af31 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000e2962 : add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; mov ah, 0x24 ; ret 0
0x00000000000658e8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7c ; ret
0x000000000012c521 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], cl ; pop rbx ; ret
0x00000000000302ca : add byte ptr [rax], al ; add byte ptr [rax - 0x7bf0ffc1], al ; ret 0
0x000000000002e98d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000080d4d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x110
0x00000000000a1d8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000268bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000070412 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x00000000000234bc : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e7aea : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000004394d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000016666d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000fcc38 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x00000000000b4a7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x0000000000139d53 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002910d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000008c91d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008c8ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000042c2d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000013b8d1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000058dcd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000000000139d7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000009888d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], -0x7d ; ret 0x4840
0x000000000002d12d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], -0x7d ; ret 0x8301
0x000000000004724d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret 0xb87f
0x000000000014cfa4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000003566b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000036c0b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000018f1ad : add byte ptr [rax], al ; add byte ptr [rax], ah ; add ch, cl ; call rax
0x00000000001ab484 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; ret 1
0x00000000001ab574 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000019b474 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001ab3f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x00000000001ab52c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001ab4e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001ab3dc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001ab424 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001ab4cc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret
0x00000000000d9803 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000008b7ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; wait ; ret
0x000000000001958b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; call qword ptr [rdi]
0x0000000000019573 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, bl ; call qword ptr [rdi]
0x000000000009ea2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000071d0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000794eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000000d285b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8941
0x0000000000132feb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000a407b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000a408b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000a406b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007d3fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000e30eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000cfd3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000dfdcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000b59eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000005a769 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbae8
0x000000000002e98b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000080d4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x110
0x00000000000a1d8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000268bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000004394b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000016666b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000b4a7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x000000000008c91b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008c8ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000042c2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000058dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x00000000000d9801 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000019589 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; call qword ptr [rdi]
0x0000000000019571 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, bl ; call qword ptr [rdi]
0x0000000000177d5c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xfffd
0x00000000001b9a5c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000001c0f1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 7
0x000000000017942a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; call qword ptr [rax]
0x00000000000195a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, dh ; call qword ptr [rdi]
0x00000000000eb84a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000019541 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, cl ; call qword ptr [rdi]
0x0000000000019559 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dl ; call qword ptr [rdi]
0x0000000000006692 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000195a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmc ; call qword ptr [rdi]
0x000000000000d052 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rsi]
0x0000000000019542 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; call qword ptr [rdi]
0x000000000018690a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000017942b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rbp ; call qword ptr [rax]
0x0000000000004052 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000009782 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x10
0x000000000000a30a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000000b8e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1a
0x0000000000007292 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x21
0x000000000000e86a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x000000000016fd42 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000000548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000005b52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2f
0x0000000000170232 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000007232 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3a
0x0000000000010a72 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x0000000000177d5e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xfffd
0x00000000001b9622 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001b9a5e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000001b8f02 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000001955a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; salc ; call qword ptr [rdi]
0x000000000001952a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; call qword ptr [rdi]
0x00000000000194fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esp ; call qword ptr [rdi]
0x00000000000a17eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001c0f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 7
0x00000000001ab894 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, bh ; ret 1
0x000000000019b984 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, ch ; ret
0x000000000019b864 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, cl ; ret 0
0x0000000000047e8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x00000000000849fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x000000000017942c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; call qword ptr [rax]
0x000000000006ed9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000488a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000fa3fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000a1fcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000007f3db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000013820b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000087cbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000018690b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00000000000bdea9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; ret
0x00000000000195a3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, dh ; call qword ptr [rdi]
0x00000000000eb84c : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000019543 : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, cl ; call qword ptr [rdi]
0x000000000001955b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dl ; call qword ptr [rdi]
0x00000000000a3a4c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000bd5ac : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f45c9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000012f664 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x12b926
0x000000000012061e : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000166b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000171d6c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000170f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000000195a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmc ; call qword ptr [rdi]
0x000000000001939c : add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x3b
0x0000000000036795 : add byte ptr [rax], al ; add byte ptr [rax], al ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000686a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x64997
0x000000000000d054 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rsi]
0x000000000004ec1a : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000001632dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000001632ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000001632fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016330c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016331c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016325c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016326c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016327c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016328c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016329c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000001632ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000001632bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000001632cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a406c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000a408c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000a407c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016324c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000019544 : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; call qword ptr [rdi]
0x00000000001b8828 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ah, 5 ; add byte ptr [rax], al ; ret
0x000000000015b3fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000375e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x000000000009ef6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000009d96c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009e93c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000009e63c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015b43c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000015b45c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000015b42c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000e50bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009e95c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009e97c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009e96c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000c308c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000007d37c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002bebc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012210c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000012f29c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000010d16c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edi ; bswap eax ; ret
0x000000000010c98b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x10c95d
0x000000000014df8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000015b46c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000012f638 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009e99c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000009e9ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000121a9a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f8f24 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000007d3ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000009866c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000078535 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; jmp 0x78508
0x000000000007d3fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000120ba6 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [rax]
0x000000000015b40c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009e94c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000009ea1c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009ea2c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000014e0dc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000bdeaa : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; ret
0x0000000000021c0b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000019384 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x3b
0x00000000000193b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x00000000000fd3b7 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000488aa : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000006ed9c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002c97a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000018690c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000018711a : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000017942d : add byte ptr [rax], al ; add byte ptr [rax], al ; push rbp ; call qword ptr [rax]
0x0000000000004054 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000ed5c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000009784 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x10
0x000000000000a30c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000000b8e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1a
0x0000000000170d3c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000001714d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x0000000000007294 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x21
0x000000000000e86c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x000000000016fd44 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x000000000000054a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000005b54 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2f
0x0000000000170234 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000007234 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3a
0x0000000000010a74 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x0000000000177d60 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xfffd
0x0000000000009554 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001b9a60 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000000ec84 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001b8f04 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000001955c : add byte ptr [rax], al ; add byte ptr [rax], al ; salc ; call qword ptr [rdi]
0x000000000019b3dc : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; ret 0
0x000000000001952c : add byte ptr [rax], al ; add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; call qword ptr [rdi]
0x00000000000194fc : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esp ; call qword ptr [rdi]
0x00000000000a17ec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000487b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000046cdc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009452c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000a17ed : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001c0f5 : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 7
0x00000000001ab896 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, bh ; ret 1
0x000000000019b986 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, ch ; ret
0x000000000019b866 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, cl ; ret 0
0x0000000000079410 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000b8d40 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000047e8d : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x000000000012f5a4 : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; ret
0x0000000000125d96 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x48 ; ret
0x00000000000a4af7 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x28 ; call rbx
0x00000000000f8c7c : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x0000000000095f96 : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], cl ; dec dword ptr [r13 - 0x77] ; ret
0x00000000000849fd : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x00000000000651bd : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb764fc], cl ; ret 0x4104
0x00000000000d1acd : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000005e215 : add byte ptr [rax], al ; add byte ptr [rbp - 0xcfb8b37], al ; ret
0x000000000017942e : add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; call qword ptr [rax]
0x00000000000a266c : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000e1bd6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3978244c], cl ; ret 0x1472
0x000000000010b876 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000014d86d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000037ec0 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000002c0dd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000001f50f : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000007aecd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x000000000004ef04 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7501046a], al ; ret
0x00000000000a5ffb : add byte ptr [rax], al ; add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa5fd9
0x00000000000a883b : add byte ptr [rax], al ; add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa8819
0x00000000000aaeeb : add byte ptr [rax], al ; add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xaaec9
0x0000000000162ff8 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x0000000000130bf0 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x4d], al ; mov byte ptr [rax + 1], cl ; ret
0x000000000005fecc : add byte ptr [rax], al ; add byte ptr [rbx - 0x111743], al ; call qword ptr [rax]
0x00000000000601e0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x116b43], al ; call qword ptr [rax]
0x0000000000193d3e : add byte ptr [rax], al ; add byte ptr [rbx - 0x15], cl ; jmp qword ptr [rsi]
0x00000000000b7b66 : add byte ptr [rax], al ; add byte ptr [rbx - 0x50f0ec18], al ; ret 0x8941
0x00000000000488ab : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000020560 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76ff4783], al ; ret
0x00000000000709c2 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; call 0xffffffffc3634b32
0x00000000000e0117 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0f008], al ; ret 0x16
0x00000000000bad75 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fb8d], cl ; ret
0x00000000000d199d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x000000000011481d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3904
0x00000000000fa3fd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000cd1e6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x9f43], al ; jmp qword ptr [rdx]
0x0000000000042fe6 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x000000000015b45d : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x0000000000115095 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x840f
0x00000000000492ec : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000f53ff : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000015b43d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x000000000009e97d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x0000000000074542 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x000000000005381f : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; ret
0x0000000000053751 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; ret
0x00000000000e1b7a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 4 ; or byte ptr [rcx], bh ; ret 0x1472
0x00000000000a1fcd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000060567 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x00000000001a12e1 : add byte ptr [rax], al ; add byte ptr [rcx + 1], dl ; add al, bh ; ret
0x0000000000120ba7 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [rax]
0x00000000000f7335 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000000a4d26 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000a5321 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x000000000011b615 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x878d8
0x00000000000f6adf : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000007920e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x3e], al ; jmp 0x791b0
0x00000000000770ce : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbx ; call rax
0x00000000000757f2 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x71a78
0x000000000012099f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rax]
0x00000000000f6914 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000010656e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0x102868
0x00000000000f6923 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000000e50bd : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x0000000000045f0a : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], cl ; cmp al, -0x11 ; call 0x92209
0x00000000000e423d : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; add byte ptr [r9], r15b ; ret 0x870f
0x00000000000737c0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; jl 0x737f4 ; jo 0x737ba ; ret
0x00000000000e336d : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x000000000010617e : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x0000000000047754 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x000000000002105b : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000003feaa : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x000000000004b6dc : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b44
0x00000000000626a5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000008c011 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x000000000004563f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x0000000000095e77 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000007f3dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000000d4ca8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000013820d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000087cbd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000ea715 : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x000000000018690d : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000008ca40 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000008ca66 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000004858c : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xd7e9
0x00000000000d1863 : add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd17f4
0x00000000000fdac7 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000e2a70 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x000000000008b797 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000cf54a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x850f
0x00000000000b9b54 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8944
0x00000000000b9bee : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000b84b7 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; rol byte ptr [rcx + 0x29], 1 ; ret
0x00000000000f1c8f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00000000000a6021 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa5fd6
0x00000000000a8861 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa8816
0x00000000000aaf11 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xaaec6
0x000000000003c39a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000089454 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x0000000000026006 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x00000000001374ed : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], -0x3c ; ret
0x00000000000c1a8b : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x7f], cl ; ret 0x2d0
0x00000000000a3762 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001650a2 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000019b3ce : add byte ptr [rax], al ; add byte ptr [rdi], ah ; out dx, al ; call qword ptr [rsi]
0x000000000014e06d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000014e0dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000027861 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; dec dword ptr [rcx - 0x7d] ; ret
0x00000000000278ab : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x000000000006dffd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xfffffffffffffff6 ; ret 0xf04
0x000000000008c95d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000a25c5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x00000000000480e5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x2ce9
0x000000000010b9cd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8348
0x00000000000cc6de : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x84e9
0x0000000000047a31 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000133d64 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc389
0x00000000000d82ff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc931
0x00000000000b9a4c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8d44
0x00000000000ce53c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000e3920 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe2c1
0x00000000000c656a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x45e9
0x00000000000c5ab4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000160ec2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008c872 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000f68ed : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x00000000000e59e5 : add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x00000000000bdeab : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; ret
0x00000000000e5097 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x0000000000193cf2 : add byte ptr [rax], al ; add byte ptr fs:[r8], al ; js 0x193d4d ; jmp 0x193d04
0x00000000001957f2 : add byte ptr [rax], al ; add byte ptr fs:[rax], al ; clc ; mov ch, ch ; call qword ptr [rdx]
0x00000000000195a5 : add byte ptr [rax], al ; add ch, dh ; call qword ptr [rdi]
0x000000000005970f : add byte ptr [rax], al ; add cl, ch ; jmp rax
0x000000000002c1b2 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000006100d : add byte ptr [rax], al ; add cl, ch ; ret 0xffec
0x00000000000b8a2f : add byte ptr [rax], al ; add cl, ch ; ret 0xfff3
0x00000000000eb84e : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000019545 : add byte ptr [rax], al ; add cl, cl ; call qword ptr [rdi]
0x0000000000082974 : add byte ptr [rax], al ; add dh, dh ; ret
0x00000000001365f0 : add byte ptr [rax], al ; add dh, dh ; ret 0x7402
0x0000000000164511 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000073a14 : add byte ptr [rax], al ; add dh, dh ; ret 0x7508
0x00000000000ec31d : add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x00000000000e03df : add byte ptr [rax], al ; add dh, dh ; ret 0xf10
0x0000000000098ef0 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x0000000000098ef9 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x000000000001955d : add byte ptr [rax], al ; add dh, dl ; call qword ptr [rdi]
0x00000000000d1864 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000000d5a94 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0xee9
0x0000000000026e67 : add byte ptr [rax], al ; add qword ptr [rdi], 1 ; jmp 0x26e39
0x00000000001b72da : add byte ptr [rax], al ; add qword ptr [rdx], -0x50d5000 ; call rcx
0x00000000000a3a4e : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000008c724 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x00000000001252c1 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000128b91 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001282e1 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000124704 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x00000000000bd5ae : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000bd5d6 : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000003713a : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x0000000000036b58 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x000000000012e104 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e50de : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000fc670 : add byte ptr [rax], al ; add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x000000000003691a : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000000000010d0eb : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000000000ec839 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbx ; ret
0x0000000000036e26 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x0000000000047541 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000008b69a : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x00000000000236a7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000036312 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001893d6 : add byte ptr [rax], al ; and al, 0x13 ; jmp 0x1893e0
0x0000000000197ad2 : add byte ptr [rax], al ; and al, 0x2b ; add byte ptr [rax], al ; clc ; stosd dword ptr [rdi], eax ; in eax, dx ; call qword ptr [rcx]
0x00000000001a1db2 : add byte ptr [rax], al ; and al, 0x2c ; add dword ptr [rax], eax ; js 0x1a1d94 ; int1 ; jmp qword ptr [rbx]
0x00000000001a91b2 : add byte ptr [rax], al ; and al, 0xffffffffffffffa0 ; add dword ptr [rax], eax ; sub byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001ac5b2 : add byte ptr [rax], al ; and al, 0xffffffffffffffd4 ; add dword ptr [rax], eax ; sbb dh, ah ; cmc ; call qword ptr [rax]
0x00000000001ac7b2 : add byte ptr [rax], al ; and al, 0xffffffffffffffd6 ; add dword ptr [rax], eax ; or bh, ah ; cmc ; call qword ptr [rax]
0x000000000019dbb2 : add byte ptr [rax], al ; and al, 0xffffffffffffffea ; add byte ptr [rax], al ; mov dh, dl ; out dx, al ; jmp rdx
0x000000000018937e : add byte ptr [rax], al ; and al, 5 ; jmp 0x189388
0x0000000000006f3a : add byte ptr [rax], al ; and al, byte ptr [rax] ; or al, 0 ; ret
0x000000000019ac7e : add byte ptr [rax], al ; and byte ptr [rax], dl ; out dx, al ; jmp qword ptr [rcx]
0x000000000019b47e : add byte ptr [rax], al ; and byte ptr [rdi], 0xee ; call qword ptr [rdx]
0x000000000019c74e : add byte ptr [rax], al ; and byte ptr [rdx], 0xee ; jmp rcx
0x00000000000fb11f : add byte ptr [rax], al ; and eax, 0xfffff000 ; or eax, edi ; ret
0x000000000002ff8b : add byte ptr [rax], al ; and eax, esi ; ret
0x000000000008c95e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000000897a7 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008b294 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x000000000019e036 : add byte ptr [rax], al ; call 0x1119d9ff
0x000000000012f666 : add byte ptr [rax], al ; call 0x12b924
0x0000000000120177 : add byte ptr [rax], al ; call 0x12c414
0x00000000001909e6 : add byte ptr [rax], al ; call 0x1318f3e6
0x00000000000b1eae : add byte ptr [rax], al ; call 0x137469
0x00000000000f3153 : add byte ptr [rax], al ; call 0x1f414
0x0000000000199976 : add byte ptr [rax], al ; call 0x2319876e
0x000000000013548a : add byte ptr [rax], al ; call 0xc1754
0x00000000000efaa8 : add byte ptr [rax], al ; call 0xebd24
0x0000000000197206 : add byte ptr [rax], al ; call 0xffffffffe4195fb6
0x0000000000120620 : add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000166b9e : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000016f202 : add byte ptr [rax], al ; call qword ptr [rcx]
0x0000000000021ee5 : add byte ptr [rax], al ; call rax
0x00000000000f68f3 : add byte ptr [rax], al ; call rbx
0x0000000000171d6e : add byte ptr [rax], al ; call rdi
0x0000000000031c9f : add byte ptr [rax], al ; call rdx
0x0000000000170f1e : add byte ptr [rax], al ; call rsp
0x00000000001a8af2 : add byte ptr [rax], al ; cdq ; add dword ptr [rax], eax ; js 0x1a8b2f ; cmc ; jmp qword ptr [rcx]
0x00000000001920d6 : add byte ptr [rax], al ; clc ; jo 0x1920ca ; jmp rbx
0x00000000001957f6 : add byte ptr [rax], al ; clc ; mov ch, ch ; call qword ptr [rdx]
0x00000000001901f6 : add byte ptr [rax], al ; clc ; pop rax ; std ; jmp qword ptr [rdi]
0x0000000000197ad6 : add byte ptr [rax], al ; clc ; stosd dword ptr [rdi], eax ; in eax, dx ; call qword ptr [rcx]
0x00000000001a378a : add byte ptr [rax], al ; cld ; add dword ptr [r8], r8d ; loopne 0x1a3721 ; jmp qword ptr [rcx]
0x00000000001a568a : add byte ptr [rax], al ; cld ; add dword ptr fs:[rax], eax ; stosb byte ptr [rdi], al ; ret 0xffe7
0x00000000001a5b8a : add byte ptr [rax], al ; cld ; imul eax, dword ptr [rcx], 0xf4637000 ; jmp qword ptr [rcx]
0x00000000001ab48a : add byte ptr [rax], al ; cld ; ret 1
0x00000000001a788a : add byte ptr [rax], al ; cld ; xchg byte ptr [rcx], al ; add al, dl ; fdivr st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a898a : add byte ptr [rax], al ; cld ; xchg eax, edi ; add dword ptr [rax], eax ; loopne 0x1a89c5 ; cmc ; jmp qword ptr [rcx]
0x0000000000189b1e : add byte ptr [rax], al ; cli ; pop rsp ; in eax, dx ; call rsp
0x00000000000195a6 : add byte ptr [rax], al ; cmc ; call qword ptr [rdi]
0x000000000011545f : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000001ac7ca : add byte ptr [rax], al ; cmp al, -0x2a ; add dword ptr [rax], eax ; add bh, ah ; cmc ; call qword ptr [rax]
0x00000000001ab6ca : add byte ptr [rax], al ; cmp al, -0x3b ; add dword ptr [rax], eax ; loopne 0x1ab6ae ; cmc ; jmp qword ptr [rsi]
0x000000000019b3ca : add byte ptr [rax], al ; cmp al, -0x3e ; add byte ptr [rax], al ; add byte ptr [rdi], ah ; out dx, al ; call qword ptr [rsi]
0x00000000001a91ca : add byte ptr [rax], al ; cmp al, -0x60 ; add dword ptr [rax], eax ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000001a87ca : add byte ptr [rax], al ; cmp al, -0x6a ; add dword ptr [rax], eax ; sub byte ptr [rax], -0xb ; jmp qword ptr [rcx]
0x00000000001a6fca : add byte ptr [rax], al ; cmp al, 0x7e ; add dword ptr [rax], eax ; jo 0x1a6f99 ; hlt ; jmp qword ptr [rcx]
0x000000000019cf36 : add byte ptr [rax], al ; cmp byte ptr [rax - 0x12], bh ; jmp qword ptr [rcx]
0x000000000015f376 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000191566 : add byte ptr [rax], al ; cmp byte ptr [rsi - 0x16], cl ; call qword ptr [rdx]
0x0000000000077537 : add byte ptr [rax], al ; cmp eax, -1 ; jne 0x77548 ; pop rbx ; ret
0x00000000000a5ffc : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xa6018 ; mov edx, eax ; jmp 0xa5fd8
0x00000000000a883c : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xa8858 ; mov edx, eax ; jmp 0xa8818
0x00000000000aaeec : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xaaf08 ; mov edx, eax ; jmp 0xaaec8
0x00000000000c1d30 : add byte ptr [rax], al ; cmp eax, 0xfffff001 ; jae 0xc1d43 ; ret
0x00000000000bab2e : add byte ptr [rax], al ; cmp esi, 1 ; je 0xbab49 ; xor eax, eax ; ret
0x00000000001a2cd2 : add byte ptr [rax], al ; cmp r8d, dword ptr [rcx] ; add al, bl ; lock int1 ; jmp qword ptr [rdx]
0x00000000000c3108 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xc3148 ; ret
0x00000000001a89d2 : add byte ptr [rax], al ; cwde ; add dword ptr [rax], eax ; sub byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x000000000019d9d6 : add byte ptr [rax], al ; cwde ; mov bh, -0x12 ; jmp qword ptr [rdx]
0x000000000019ed6e : add byte ptr [rax], al ; cwde ; out dx, eax ; jmp rdi
0x000000000001939e : add byte ptr [rax], al ; cwde ; ret 0x3b
0x00000000001acfbf : add byte ptr [rax], al ; div ch ; call qword ptr [rcx]
0x00000000001ac9d2 : add byte ptr [rax], al ; fadd dword ptr [rcx] ; add byte ptr [rax], bh ; in eax, dx ; cmc ; call qword ptr [rdi]
0x00000000001ab66a : add byte ptr [rax], al ; fadd st(4), st(0) ; add dword ptr [rax], eax ; mov al, -0x2d ; cmc ; jmp qword ptr [rsi]
0x000000000019096a : add byte ptr [rax], al ; fcom qword ptr [rdi] ; add byte ptr [rax], al ; sal ah, -0x17 ; call qword ptr [rdx]
0x000000000019e156 : add byte ptr [rax], al ; fcomp dword ptr [rcx] ; out dx, eax ; call qword ptr [rax]
0x00000000001a8b6a : add byte ptr [rax], al ; fcomp qword ptr [rcx + 0x2cf00001] ; cmc ; jmp qword ptr [rcx]
0x000000000019e0f6 : add byte ptr [rax], al ; fcomp st(0) ; stc ; call qword ptr [rax]
0x000000000019ed6a : add byte ptr [rax], al ; fdiv st(3), st(0) ; add byte ptr [rax], al ; cwde ; out dx, eax ; jmp rdi
0x0000000000189896 : add byte ptr [rax], al ; fisttp word ptr [rax] ; in al, dx ; jmp rsp
0x00000000001b792a : add byte ptr [rax], al ; fld dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000036797 : add byte ptr [rax], al ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000368ce : add byte ptr [rax], al ; fstp st(1) ; add rsp, 0x20 ; pop rbx ; ret
0x000000000003687e : add byte ptr [rax], al ; fstp st(1) ; ret
0x00000000001a5a6a : add byte ptr [rax], al ; fsubr qword ptr [rax + 1] ; add byte ptr [rax + 0x61], ah ; hlt ; jmp qword ptr [rax]
0x00000000001ad26a : add byte ptr [rax], al ; fsubr st(0), st(0) ; add dword ptr [rax], eax ; and dl, bh ; cmc ; call qword ptr [rax]
0x00000000001ad36a : add byte ptr [rax], al ; fsubr st(1), st(0) ; add dword ptr [rax], eax ; add bl, bh ; cmc ; call qword ptr [rax]
0x0000000000189786 : add byte ptr [rax], al ; fucomi st(3) ; call rsp
0x00000000001a7282 : add byte ptr [rax], al ; hlt ; add byte ptr [rcx], 0 ; call 0x231a675e
0x000000000019f582 : add byte ptr [rax], al ; hlt ; add eax, dword ptr [rcx] ; add al, bh ; lock ; jmp qword ptr [rdi]
0x00000000001a3e82 : add byte ptr [rax], al ; hlt ; add qword ptr [rax], r8 ; sub bh, bl ; call qword ptr [rdx]
0x00000000001a2f82 : add byte ptr [rax], al ; hlt ; cmp eax, 0xfb280001 ; int1 ; jmp qword ptr [rcx]
0x00000000001a9182 : add byte ptr [rax], al ; hlt ; lahf ; add dword ptr [rax], eax ; clc ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001ad282 : add byte ptr [rax], al ; hlt ; loopne 0x1ad291 ; add byte ptr [rax], bl ; cli ; cmc ; call qword ptr [rax]
0x00000000001a5c82 : add byte ptr [rax], al ; hlt ; push 1 ; add byte ptr [rax + 0x64], ch ; hlt ; jmp qword ptr [rcx]
0x000000000019ef82 : add byte ptr [rax], al ; hlt ; std ; add byte ptr [rax], al ; test al, 0x68 ; sti ; call qword ptr [rax]
0x00000000001ab772 : add byte ptr [rax], al ; in al, -0x3b ; add dword ptr [rax], eax ; mov ah, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001ab472 : add byte ptr [rax], al ; in al, -0x3e ; add dword ptr [rax], eax ; test al, -0x2e ; cmc ; jmp qword ptr [rsi]
0x00000000001a8c72 : add byte ptr [rax], al ; in al, -0x66 ; add dword ptr [rax], eax ; mov byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000189f3e : add byte ptr [rax], al ; in al, -0x71 ; out dx, al ; jmp rsp
0x0000000000189a7e : add byte ptr [rax], al ; in al, 0x55 ; in eax, dx ; push rsp ; ret 0
0x00000000001a6072 : add byte ptr [rax], al ; in al, 0x6e ; add dword ptr [rax], eax ; clc ; jae 0x1a6078 ; jmp qword ptr [rcx]
0x0000000000195992 : add byte ptr [rax], al ; in al, 9 ; add byte ptr [rax], al ; js 0x19592d ; in eax, dx ; call qword ptr [rax]
0x0000000000193a7a : add byte ptr [rax], al ; in al, dx ; add byte ptr [rax], al ; nop ; cmp bh, dl ; jmp qword ptr [rcx]
0x000000000019ac7a : add byte ptr [rax], al ; in al, dx ; mov edx, 0x10200000 ; out dx, al ; jmp qword ptr [rcx]
0x00000000001a827a : add byte ptr [rax], al ; in al, dx ; nop ; add dword ptr [rax], eax ; lock or esi, ebp ; jmp qword ptr [rcx]
0x000000000019b98a : add byte ptr [rax], al ; in al, dx ; ret
0x000000000019b47a : add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001b0a7a : add byte ptr [rax], al ; in al, dx ; sbb byte ptr [rdx], al ; add al, ah ; mov cl, -0xa ; jmp qword ptr [rcx]
0x00000000001a8d7a : add byte ptr [rax], al ; in al, dx ; wait ; add dword ptr [rax], eax ; loopne 0x1a8dba ; cmc ; jmp qword ptr [rcx]
0x00000000001a72fa : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr [rcx], 0xf4ca5000 ; jmp qword ptr [rcx]
0x00000000001a2ffa : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr ds:[rax], eax ; sti ; int1 ; jmp qword ptr [rcx]
0x00000000001a5eef : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b5dfa : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; rol byte ptr [rsi], 1 ; sti ; jmp qword ptr [rdx]
0x00000000001a67fa : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jbe 0x1a6809 ; add byte ptr [rax - 0x56], ah ; hlt ; call qword ptr [rbx]
0x000000000019cd2e : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; out dx, al ; call qword ptr [rsi]
0x00000000001b4cfa : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; pop rbx ; add al, byte ptr [rax] ; push rax ; jg 0x1b4d03 ; call qword ptr [rdx]
0x00000000001a8efa : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; popfq ; add dword ptr [rax], eax ; lock xor dh, ch ; jmp qword ptr [rcx]
0x00000000001ab3fa : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x00000000001a86fa : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xchg eax, ebp ; add dword ptr [rax], eax ; shl byte ptr [rdi], -0xb ; jmp qword ptr [rcx]
0x00000000001a87fa : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xchg eax, esi ; add dword ptr [rax], eax ; mov al, 0x28 ; cmc ; jmp qword ptr [rcx]
0x0000000000177afe : add byte ptr [rax], al ; insd dword ptr [rdi], dx ; sar bh, 1 ; jmp qword ptr [rdi]
0x00000000001b68f2 : add byte ptr [rax], al ; ja 0x1b6902 ; add al, bl ; fcomi st(7) ; jmp qword ptr [rcx]
0x00000000001894f6 : add byte ptr [rax], al ; jae 0x189538 ; jmp 0x189500
0x00000000000e59e6 : add byte ptr [rax], al ; jbe 0xe59f5 ; ret
0x000000000010078c : add byte ptr [rax], al ; je 0x1007a0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000125d97 : add byte ptr [rax], al ; je 0x125da8 ; add rsp, 0x48 ; ret
0x0000000000189566 : add byte ptr [rax], al ; je 0x1895ad ; jmp 0x189570
0x0000000000197202 : add byte ptr [rax], al ; je 0x19718f ; add byte ptr [rax], al ; call 0xffffffffe4195fba
0x000000000019f902 : add byte ptr [rax], al ; je 0x19f916 ; add dword ptr [rax], eax ; sbb byte ptr [rbp - 0x10], bl ; call qword ptr [rdx]
0x00000000001a0802 : add byte ptr [rax], al ; je 0x1a0825 ; add dword ptr [rax], eax ; pop rax ; add al, -0xf ; call qword ptr [rax]
0x00000000001a3102 : add byte ptr [rax], al ; je 0x1a314e ; add dword ptr [rax], eax ; cwde ; add edx, esi ; call rdi
0x00000000001a5202 : add byte ptr [rax], al ; je 0x1a526f ; add dword ptr [rax], eax ; pop rax ; div bl ; jmp qword ptr [rax]
0x00000000001a6202 : add byte ptr [rax], al ; je 0x1a627f ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001a7902 : add byte ptr [rax], al ; je 0x1a7896 ; add dword ptr [rax], eax ; js 0x1a78f0 ; hlt ; jmp qword ptr [rcx]
0x00000000001a8202 : add byte ptr [rax], al ; je 0x1a819f ; add dword ptr [rax], eax ; js 0x1a821e ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a02 : add byte ptr [rax], al ; je 0x1a89a7 ; add dword ptr [rax], eax ; pop rax ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001ab502 : add byte ptr [rax], al ; je 0x1ab4d2 ; add dword ptr [rax], eax ; cmp bl, dl ; cmc ; jmp qword ptr [rsi]
0x000000000008532a : add byte ptr [rax], al ; je 0x85334 ; ret
0x0000000000086f86 : add byte ptr [rax], al ; je 0x86f94 ; ret
0x0000000000094a72 : add byte ptr [rax], al ; je 0x94a88 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a4034 : add byte ptr [rax], al ; je 0xa40a8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000e5098 : add byte ptr [rax], al ; je 0xe50a5 ; ret
0x00000000001650a3 : add byte ptr [rax], al ; jg 0x1650b6 ; neg eax ; ret
0x00000000000a3763 : add byte ptr [rax], al ; jg 0xa376f ; neg eax ; ret
0x0000000000162ff9 : add byte ptr [rax], al ; jl 0x163006 ; neg eax ; ret
0x000000000019652a : add byte ptr [rax], al ; jl 0x19654c ; add byte ptr [rax], al ; mov al, -0x6c ; in eax, dx ; jmp rsi
0x000000000019c31a : add byte ptr [rax], al ; jl 0x19c2f1 ; add byte ptr [rax], al ; ret
0x000000000019c90a : add byte ptr [rax], al ; jl 0x19c8ee ; add byte ptr [rax], al ; jo 0x19c94a ; out dx, al ; call qword ptr [rsi]
0x00000000001a170a : add byte ptr [rax], al ; jl 0x1a173c ; add dword ptr [rax], eax ; mov al, -0x3a ; int1 ; call qword ptr [rsi]
0x00000000001a2f0a : add byte ptr [rax], al ; jl 0x1a2f54 ; add dword ptr [rax], eax ; adc dl, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a6a0a : add byte ptr [rax], al ; jl 0x1a6a8f ; add dword ptr [rax], eax ; mov al, -0x52 ; hlt ; jmp qword ptr [rcx]
0x00000000001a8b0a : add byte ptr [rax], al ; jl 0x1a8ab0 ; add dword ptr [rax], eax ; nop ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001a910a : add byte ptr [rax], al ; jl 0x1a90b6 ; add dword ptr [rax], eax ; cmp byte ptr [rax], -0xb ; jmp qword ptr [rcx]
0x00000000001ab60a : add byte ptr [rax], al ; jl 0x1ab5db ; add dword ptr [rax], eax ; mov al, -0x2d ; cmc ; jmp qword ptr [rsi]
0x00000000001ad20a : add byte ptr [rax], al ; jl 0x1ad1f7 ; add dword ptr [rax], eax ; mov al, -8 ; cmc ; call qword ptr [rax]
0x0000000000117c9a : add byte ptr [rax], al ; jmp 0x117cb1
0x0000000000117cee : add byte ptr [rax], al ; jmp 0x117d07
0x0000000000193d3f : add byte ptr [rax], al ; jmp 0x193d47
0x0000000000026424 : add byte ptr [rax], al ; jmp 0x263ed
0x0000000000046de3 : add byte ptr [rax], al ; jmp 0x46dad
0x000000000004df32 : add byte ptr [rax], al ; jmp 0x4a157
0x00000000000686a3 : add byte ptr [rax], al ; jmp 0x64995
0x0000000000070257 : add byte ptr [rax], al ; jmp 0x7026d
0x000000000009802c : add byte ptr [rax], al ; jmp 0x97ff6
0x00000000000b3513 : add byte ptr [rax], al ; jmp 0xb3529
0x00000000000bacb5 : add byte ptr [rax], al ; jmp 0xbac7e
0x00000000000c5929 : add byte ptr [rax], al ; jmp 0xc4cc8
0x00000000000d533d : add byte ptr [rax], al ; jmp 0xd4fae
0x000000000000d056 : add byte ptr [rax], al ; jmp qword ptr [rsi]
0x0000000000036ad5 : add byte ptr [rax], al ; jmp rax
0x000000000012470b : add byte ptr [rax], al ; jmp rcx
0x0000000000110756 : add byte ptr [rax], al ; jne 0x11071f ; jmp 0x110717
0x000000000012f5a5 : add byte ptr [rax], al ; jne 0x12f5b4 ; ret
0x000000000012f5e5 : add byte ptr [rax], al ; jne 0x12f5f4 ; ret
0x00000000001672be : add byte ptr [rax], al ; jo 0x167337 ; in al, dx ; inc dword ptr [rax + 0x6c] ; in al, dx ; call qword ptr [rax]
0x0000000000193aae : add byte ptr [rax], al ; jo 0x193ae8 ; jmp 0x193ab8
0x000000000019c90e : add byte ptr [rax], al ; jo 0x19c946 ; out dx, al ; call qword ptr [rsi]
0x0000000000193cf6 : add byte ptr [rax], al ; js 0x193d49 ; jmp 0x193d00
0x0000000000195996 : add byte ptr [rax], al ; js 0x195929 ; in eax, dx ; call qword ptr [rax]
0x0000000000198de6 : add byte ptr [rax], al ; js 0x198dc0 ; in eax, dx ; call rcx
0x000000000019b446 : add byte ptr [rax], al ; js 0x19b476 ; out dx, al ; call qword ptr [rdx]
0x0000000000188ae6 : add byte ptr [rax], al ; lahf ; jno 0x188ad9 ; jmp rsp
0x000000000018a056 : add byte ptr [rax], al ; lahf ; out dx, al ; jmp rsp
0x00000000000a4af8 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x28] ; call rbx
0x00000000001632de : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000001632ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000001632fe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016330e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016331e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016323d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000016325e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016326e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016327e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016328e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016329e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000001632ae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000001631ea : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001632be : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000001632ce : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a3f0b : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a406e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000a408e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000a407e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016324e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000021fae : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x15b12c] ; ret
0x0000000000021fbe : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x15d103] ; ret
0x000000000007efe9 : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x34076e] ; ret
0x00000000000c8202 : add byte ptr [rax], al ; lea rax, qword ptr [rsi + rcx*8] ; jmp 0xc81d4
0x0000000000045f0b : add byte ptr [rax], al ; lea rdi, qword ptr [r15 + rbp*8] ; call 0x92208
0x0000000000112d4e : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2b1229] ; call rax
0x00000000000462d2 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x195] ; call rax
0x0000000000070337 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007cc07 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1780] ; call rax
0x000000000007d007 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1b80] ; call rax
0x000000000007b6ef : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x268] ; call rax
0x0000000000070693 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x32c] ; call rax
0x000000000007b957 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x4d0] ; call rax
0x0000000000019546 : add byte ptr [rax], al ; leave ; call qword ptr [rdi]
0x000000000019ea4e : add byte ptr [rax], al ; lock mov ebp, edi ; jmp qword ptr [rdx]
0x0000000000189c26 : add byte ptr [rax], al ; lock pop rdi ; out dx, al ; call rsp
0x0000000000195e3e : add byte ptr [rax], al ; lock xchg eax, ecx ; in eax, dx ; call qword ptr [rax]
0x0000000000193d3a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [r8], al ; add byte ptr [rbx - 0x15], cl ; jmp qword ptr [rsi]
0x00000000001a3a3a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [rax], rax ; nop ; mov edx, esi ; call qword ptr [rdx]
0x00000000001a173a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; and eax, 0xc6c00001 ; int1 ; call qword ptr [rbx]
0x0000000000195e3a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; lock xchg eax, ecx ; in eax, dx ; call qword ptr [rax]
0x00000000001a913a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; lahf ; add dword ptr [rax], eax ; mov al, 0x38 ; cmc ; jmp qword ptr [rcx]
0x00000000001ad33a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; loope 0x1ad349 ; add byte ptr [rax], dl ; sti ; cmc ; call qword ptr [rax]
0x000000000019d83a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; out 0, al ; add byte ptr [rax], dh ; sahf ; out dx, al ; jmp qword ptr [rcx]
0x00000000001a1a3a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sub byte ptr [rcx], al ; add al, dl ; iretd ; int1 ; call rsi
0x0000000000189c46 : add byte ptr [rax], al ; loopne 0x189cb0 ; out dx, al ; call rsp
0x0000000000196bae : add byte ptr [rax], al ; loopne 0x196b55 ; in eax, dx ; call rbx
0x000000000019ea1e : add byte ptr [rax], al ; loopne 0x19e9b2 ; out dx, eax ; jmp qword ptr [rax]
0x000000000019f05e : add byte ptr [rax], al ; loopne 0x19f052 ; out dx, eax ; call rsp
0x000000000019b442 : add byte ptr [rax], al ; mov ah, -0x3e ; add byte ptr [rax], al ; js 0x19b47a ; out dx, al ; call qword ptr [rdx]
0x00000000001ab442 : add byte ptr [rax], al ; mov ah, -0x3e ; add dword ptr [rax], eax ; js 0x1ab425 ; cmc ; jmp qword ptr [rsi]
0x000000000018a166 : add byte ptr [rax], al ; mov ah, -0x51 ; out dx, al ; call rsp
0x00000000001a8c42 : add byte ptr [rax], al ; mov ah, -0x66 ; add dword ptr [rax], eax ; sub byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000198a42 : add byte ptr [rax], al ; mov ah, -0x68 ; add byte ptr [rax], al ; pop rax ; ret 0xffed
0x00000000001a8842 : add byte ptr [rax], al ; mov ah, -0x6a ; add dword ptr [rax], eax ; call 0x111a7d7e
0x00000000001a3042 : add byte ptr [rax], al ; mov ah, 0x3e ; add dword ptr [rax], eax ; mov bl, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a3742 : add byte ptr [rax], al ; mov ah, 0x45 ; add dword ptr [rax], eax ; cwde ; xchg dl, dh ; jmp qword ptr [rcx]
0x0000000000189666 : add byte ptr [rax], al ; mov ah, 0x47 ; jmp 0x189670
0x00000000001b882a : add byte ptr [rax], al ; mov ah, 5 ; add byte ptr [rax], al ; ret
0x000000000019652e : add byte ptr [rax], al ; mov al, -0x6c ; in eax, dx ; jmp rsi
0x000000000015d75e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000015942e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000019e226 : add byte ptr [rax], al ; mov byte ptr [rbp - 0x11], al ; jmp qword ptr [rsi]
0x0000000000191916 : add byte ptr [rax], al ; mov byte ptr [rbp - 0x16], dl ; jmp qword ptr [rcx]
0x000000000015b3fe : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x000000000018fad6 : add byte ptr [rax], al ; mov byte ptr [rdi - 3], bl ; jmp qword ptr [rdx]
0x000000000019ef56 : add byte ptr [rax], al ; mov byte ptr [rdi - 5], al ; call qword ptr [rax]
0x00000000000973fe : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000375e6 : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x000000000009ef6e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000009d96e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009e93e : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000011adc6 : add byte ptr [rax], al ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x0000000000194136 : add byte ptr [rax], al ; mov byte ptr [rsi - 0x15], dl ; jmp qword ptr [rbx]
0x0000000000177dde : add byte ptr [rax], al ; mov dh, 0xb ; add byte ptr [rax], al ; ret 0xfffd
0x000000000019dbb6 : add byte ptr [rax], al ; mov dh, dl ; out dx, al ; jmp rdx
0x000000000009e63e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000020bee : add byte ptr [rax], al ; mov dword ptr [r9 + rcx*4], esi ; inc dword ptr [rdi + 4] ; ret
0x00000000001a8a1a : add byte ptr [rax], al ; mov dword ptr [rax + 0x2b700001], ds ; cmc ; jmp qword ptr [rcx]
0x00000000001a5f1a : add byte ptr [rax], al ; mov dword ptr [rbp + 1], gs ; add byte ptr [rax], dh ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x000000000019151a : add byte ptr [rax], al ; mov dword ptr [rbx], fs ; add byte ptr [rax], al ; adc byte ptr [rsi - 0x16], cl ; jmp qword ptr [rbx]
0x000000000015b43e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000015b45e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000015b44e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000015b42e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000e50be : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000001a791a : add byte ptr [rax], al ; mov dword ptr [rdi - 0x226fffff], es ; hlt ; jmp qword ptr [rcx]
0x000000000009e95e : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009743e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000009e97e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009e98e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009e96e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x000000000019f91a : add byte ptr [rax], al ; mov dword ptr [rdi], es ; add dword ptr [rax], eax ; and byte ptr [rbp - 0x10], bl ; call qword ptr [rax]
0x0000000000054255 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000039c84 : add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x0000000000121a3e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x0000000000121a7e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x0000000000121a6e : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000e5904 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fb336 : add byte ptr [rax], al ; mov dword ptr fs:[rsi], 0x16 ; ret
0x000000000009d97e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000c313e : add byte ptr [rax], al ; mov eax, 0x20 ; ret
0x00000000000ec00e : add byte ptr [rax], al ; mov eax, 0x5f ; syscall ; ret
0x00000000000c28de : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00000000000c28fe : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00000000000c28ee : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00000000000c290e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000000c2b0e : add byte ptr [rax], al ; mov eax, 0x6f ; syscall ; ret
0x00000000000c2fc9 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x00000000000fb42e : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall ; ret
0x00000000000c308e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x0000000000133b69 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000003566c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000036c0c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002bebe : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012210e : add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000046dde : add byte ptr [rax], al ; mov eax, 3 ; jmp 0x46db2
0x00000000001aca1a : add byte ptr [rax], al ; mov eax, ds ; add dword ptr [rax], eax ; push rax ; in eax, dx ; cmc ; call qword ptr [rax]
0x0000000000160b4e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007d11e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000001219ac : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x000000000012f29e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000e50ae : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000073a6e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000075f3e : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x0000000000037b4e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x38753a] ; ret
0x00000000000f5400 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008692a : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000010d16e : add byte ptr [rax], al ; mov eax, edi ; bswap eax ; ret
0x0000000000022b2a : add byte ptr [rax], al ; mov eax, edi ; ret
0x0000000000104b6e : add byte ptr [rax], al ; mov eax, edi ; sub eax, esi ; ret
0x0000000000100d83 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x00000000000492ed : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005e3d9 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000005e71e : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000010a0f0 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000c28c8 : add byte ptr [rax], al ; mov eax, esi ; ret
0x00000000001ab51a : add byte ptr [rax], al ; mov ebx, es ; add dword ptr [rax], eax ; push rax ; sal ebp, cl ; jmp qword ptr [rsi]
0x000000000009d9ae : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000001ac31a : add byte ptr [rax], al ; mov ecx, ss ; add dword ptr [rax], eax ; jo 0x1ac30e ; cmc ; call qword ptr [rax]
0x000000000010c98d : add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x10c95b
0x000000000014d86e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009d99e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000715dc : add byte ptr [rax], al ; mov edx, eax ; jmp 0x7159d
0x0000000000072047 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x7200b
0x000000000007262c : add byte ptr [rax], al ; mov edx, eax ; jmp 0x725f4
0x0000000000072798 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x72756
0x0000000000072a87 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x72a4b
0x000000000007920f : add byte ptr [rax], al ; mov edx, r8d ; jmp 0x791af
0x00000000000f68ee : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000001a5f4a : add byte ptr [rax], al ; mov esp, 0x6000016d ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x000000000019c74a : add byte ptr [rax], al ; mov esp, 0x800000d5 ; and ch, dh ; jmp rcx
0x00000000001ab54a : add byte ptr [rax], al ; mov esp, 0x800001c3 ; sal ebp, cl ; jmp qword ptr [rsi]
0x000000000019834a : add byte ptr [rax], al ; mov esp, 0xc0000091 ; mov dh, -0x13 ; jmp qword ptr [rdx]
0x00000000001a2a4a : add byte ptr [rax], al ; mov esp, 0xc0000138 ; in al, -0xf ; jmp rsi
0x00000000001a824a : add byte ptr [rax], al ; mov esp, 0xc0000190 ; or esi, ebp ; jmp qword ptr [rcx]
0x000000000019ea4a : add byte ptr [rax], al ; mov esp, 0xf00000f8 ; mov ebp, edi ; jmp qword ptr [rdx]
0x00000000001ac54a : add byte ptr [rax], al ; mov esp, 0xf00001d3 ; in eax, -0xb ; call qword ptr [rax]
0x000000000019ee4a : add byte ptr [rax], al ; mov esp, 0xfc ; pushfq ; out dx, eax ; call qword ptr [rdi]
0x0000000000108275 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r14 ; call rax
0x000000000015b47e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000015b49e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000015b4ae : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000015b4be : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000015b4ce : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000015b4de : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000015b4ee : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000015b48e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000015b46e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000012ef61 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rdx ; ret
0x00000000000929e6 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000012f63a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009e99e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000009e9be : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009e9de : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009e9ee : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009e9fe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009ea0e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009e9ce : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000009e9ae : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007285c : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000001283ab : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001219ec : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003d273 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000e4fdc : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000001219bc : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000007e088 : add byte ptr [rax], al ; mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x000000000010d0f6 : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000001210a5 : add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call qword ptr [r11]
0x000000000003003a : add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012b87f : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000bacaf : add byte ptr [rax], al ; mov r11d, 1 ; jmp 0xbac84
0x0000000000036b74 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000a3a6e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000000a3a7e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000a3a8e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000a3a9e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000a3aae : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000a3abe : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000a3ace : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000007bcb9 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000077550 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007c205 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000000f8f26 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000048740 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000bddae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000716de : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007d3ee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000013615f : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x28a728] ; call qword ptr [rax]
0x000000000013469f : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x28c1e8] ; call qword ptr [rax]
0x000000000007d3ce : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x342dc9] ; ret
0x000000000002364e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a15f1] ; ret
0x000000000002363e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a1611] ; ret
0x00000000000f309d : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x68] ; ret
0x0000000000115856 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a8c6 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005d9ed : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003ca08 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000000355fc : add byte ptr [rax], al ; mov rax, rcx ; pop rbx ; ret
0x0000000000035606 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000010cbfe : add byte ptr [rax], al ; mov rax, rdi ; add rsp, 8 ; ret
0x0000000000078537 : add byte ptr [rax], al ; mov rax, rdi ; jmp 0x78506
0x000000000007d3fe : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000001347c6 : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000083758 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f733 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000000a5322 : add byte ptr [rax], al ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x0000000000075ef5 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x40] ; jmp 0x75ec7
0x00000000000235d7 : add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x000000000011b616 : add byte ptr [rax], al ; mov rdi, r12 ; call 0x878d7
0x00000000000f6ae0 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000120ba8 : add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [rax]
0x00000000000f7336 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x000000000010656f : add byte ptr [rax], al ; mov rdi, r14 ; call 0x102867
0x00000000000f6924 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000000757f3 : add byte ptr [rax], al ; mov rdi, r15 ; call 0x71a77
0x00000000001209a0 : add byte ptr [rax], al ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000f6915 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000012a254 : add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x0000000000120cb1 : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rax]
0x00000000001223c7 : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x00000000000f6d6a : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000006e2ad : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006d932 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000086343 : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r15 ; call rax
0x000000000012db9e : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000009d9de : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000860a0 : add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x00000000000a4d27 : add byte ptr [rax], al ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000770cf : add byte ptr [rax], al ; mov rdx, r14 ; mov rdi, rbx ; call rax
0x0000000000111ac7 : add byte ptr [rax], al ; mov rdx, r15 ; mov rdi, r12 ; call rax
0x0000000000066018 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x358f3f] ; call rax
0x0000000000064730 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x35a827] ; call rax
0x000000000005f2b4 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x35fca3] ; call rax
0x0000000000055f42 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x369015] ; call rax
0x000000000004ef70 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x36ffe7] ; call rax
0x0000000000049e2c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x37512b] ; call rax
0x0000000000085e90 : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x0000000000085c22 : add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x0000000000086eba : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000015b41e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000015b40e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009e94e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000974be : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009741e : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000003d2bd : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003d304 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x000000000009ea1e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009ea2e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000194132 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; mov byte ptr [rsi - 0x15], dl ; jmp qword ptr [rbx]
0x0000000000195732 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr gs:[rax], al ; or byte ptr [rbx - 0x13], bh ; jmp rcx
0x00000000001a8a32 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cwde ; add dword ptr [rax], eax ; mov byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x000000000019cf32 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fld qword ptr [rax] ; add byte ptr [rax], bh ; js 0x19cf32 ; jmp qword ptr [rcx]
0x00000000001a5f32 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x000000000019ae32 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov esp, 0x16b80000 ; out dx, al ; call qword ptr [rdi]
0x00000000001a8232 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; nop ; add dword ptr [rax], eax ; test al, 0xb ; cmc ; jmp qword ptr [rcx]
0x000000000019e032 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; add byte ptr [rax], al ; call 0x1119da03
0x000000000019b942 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000018a2b6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffee
0x00000000001ac332 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; rol dword ptr [rcx], 1 ; add byte ptr [rax - 0x1d], ch ; cmc ; jmp rbx
0x00000000001ac532 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; rol dword ptr [rcx], cl ; add al, bh ; in eax, -0xb ; call qword ptr [rax]
0x000000000006dbf6 : add byte ptr [rax], al ; movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0x000000000014d9fe : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000014e0de : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000014e06e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000193a7e : add byte ptr [rax], al ; nop ; cmp bh, dl ; jmp qword ptr [rcx]
0x00000000000bdeac : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; ret
0x000000000010d17d : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x0000000000021c0d : add byte ptr [rax], al ; nop ; ret
0x0000000000019386 : add byte ptr [rax], al ; nop ; ret 0x3b
0x0000000000100a59 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000001a2f9a : add byte ptr [rax], al ; or al, 0x3e ; add dword ptr [rax], eax ; sti ; int1 ; jmp qword ptr [rcx]
0x00000000001a549a : add byte ptr [rax], al ; or al, 0x63 ; add dword ptr [rax], eax ; lock sti ; call qword ptr [rsi]
0x00000000001a6b9a : add byte ptr [rax], al ; or al, 0x7a ; add dword ptr [rax], eax ; mov al, -0x4e ; hlt ; call qword ptr [rsi]
0x00000000001acfba : add byte ptr [rax], al ; or al, 0xffffffffffffff80 ; add dword ptr [rax], eax ; add dh, dh ; cmc ; call qword ptr [rcx]
0x00000000001a7d9a : add byte ptr [rax], al ; or al, 0xffffffffffffff8c ; add dword ptr [rax], eax ; nop ; cld ; hlt ; jmp rax
0x00000000001a919a : add byte ptr [rax], al ; or al, 0xffffffffffffffa0 ; add dword ptr [rax], eax ; adc byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x000000000019baaa : add byte ptr [rax], al ; or al, 0xffffffffffffffc5 ; add byte ptr [rax], al ; ret
0x00000000001ab69a : add byte ptr [rax], al ; or al, 0xffffffffffffffc5 ; add dword ptr [rax], eax ; mov al, -0x2d ; cmc ; jmp qword ptr [rsi]
0x00000000001aba9a : add byte ptr [rax], al ; or al, 0xffffffffffffffc9 ; add dword ptr [rax], eax ; lock cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rsi]
0x0000000000195736 : add byte ptr [rax], al ; or byte ptr [rbx - 0x13], bh ; jmp rcx
0x000000000019841e : add byte ptr [rax], al ; or byte ptr [rdx - 0x18], bh ; call rdx
0x00000000000f1546 : add byte ptr [rax], al ; or byte ptr [rip - 0x80000000], 0x39 ; ret 0x9e75
0x000000000007b19e : add byte ptr [rax], al ; or eax, 0x20 ; jmp 0x7b16d
0x0000000000036e69 : add byte ptr [rax], al ; or eax, 0xffffffff ; ret
0x00000000001ac7cf : add byte ptr [rax], al ; out -0xb, eax ; call qword ptr [rax]
0x000000000019e0f2 : add byte ptr [rax], al ; out dx, eax ; add byte ptr [rax], al ; fcomp st(0) ; stc ; call qword ptr [rax]
0x0000000000074543 : add byte ptr [rax], al ; pop r12 ; ret
0x0000000000053820 : add byte ptr [rax], al ; pop r13 ; ret
0x0000000000053752 : add byte ptr [rax], al ; pop r14 ; ret
0x00000000000fafb7 : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000193b6 : add byte ptr [rax], al ; pop rax ; ret
0x0000000000198a46 : add byte ptr [rax], al ; pop rax ; ret 0xffed
0x00000000001b4ed2 : add byte ptr [rax], al ; pop rbp ; add al, byte ptr [rax] ; clc ; mov bh, dh ; call qword ptr [rdx]
0x00000000000a235a : add byte ptr [rax], al ; pop rbp ; lea rax, qword ptr [r9 + 1] ; pop r12 ; ret
0x00000000000fd367 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000000a266d : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x00000000000488ac : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000709c3 : add byte ptr [rax], al ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000006ffdf : add byte ptr [rax], al ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000010b877 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000711b5 : add byte ptr [rax], al ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000f141d : add byte ptr [rax], al ; pop rbx ; pop rbp ; mov eax, r9d ; pop r12 ; ret
0x000000000001fef1 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002199a : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001f510 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000007aece : add byte ptr [rax], al ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000002c97c : add byte ptr [rax], al ; pop rbx ; ret
0x000000000018690e : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000001a3eea : add byte ptr [rax], al ; pop rsp ; add qword ptr [r8], r8 ; sub al, -0xe ; jmp rdx
0x00000000001a89ea : add byte ptr [rax], al ; pop rsp ; cwde ; add dword ptr [rax], eax ; sub esi, ebp ; jmp qword ptr [rcx]
0x000000000019b8fa : add byte ptr [rax], al ; pop rsp ; ret
0x0000000000193dae : add byte ptr [rax], al ; push rax ; jmp 0x193db8
0x000000000018711c : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000017942f : add byte ptr [rax], al ; push rbp ; call qword ptr [rax]
0x000000000012f64e : add byte ptr [rax], al ; push rbx ; call 0x12b8f5
0x0000000000189a8e : add byte ptr [rax], al ; push rsi ; in eax, dx ; jmp qword ptr [rbx + rax*8]
0x00000000001b02e2 : add byte ptr [rax], al ; push rsp ; adc dword ptr [rdx], eax ; add al, bh ; test dh, dh ; jmp rdx
0x00000000001a72e2 : add byte ptr [rax], al ; push rsp ; add dword ptr [rcx], 0xf4ca3800 ; jmp qword ptr [rcx]
0x00000000001a12e2 : add byte ptr [rax], al ; push rsp ; and dword ptr [rcx], eax ; add al, bh ; ret
0x000000000018914e : add byte ptr [rax], al ; push rsp ; fucomp st(2) ; jmp rsp
0x0000000000188e86 : add byte ptr [rax], al ; push rsp ; jb 0x188e7a ; call rsp
0x00000000001a8ee2 : add byte ptr [rax], al ; push rsp ; popfq ; add dword ptr [rax], eax ; fdiv dword ptr [rdx] ; cmc ; jmp qword ptr [rcx]
0x0000000000189ab6 : add byte ptr [rax], al ; push rsp ; push rdi ; in eax, dx ; call rsp
0x0000000000198de2 : add byte ptr [rax], al ; push rsp ; pushfq ; add byte ptr [rax], al ; js 0x198dc4 ; in eax, dx ; call rcx
0x000000000019b3e2 : add byte ptr [rax], al ; push rsp ; ret 0
0x00000000001ab3e2 : add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001ac7e2 : add byte ptr [rax], al ; push rsp ; salc ; add dword ptr [rax], eax ; clc ; out -0xb, al ; call qword ptr [rax]
0x00000000001a86e2 : add byte ptr [rax], al ; push rsp ; xchg eax, ebp ; add dword ptr [rax], eax ; test al, 0x27 ; cmc ; jmp qword ptr [rcx]
0x00000000001a87e2 : add byte ptr [rax], al ; push rsp ; xchg eax, esi ; add dword ptr [rax], eax ; cwde ; sub ch, dh ; jmp qword ptr [rcx]
0x00000000001a8df2 : add byte ptr [rax], al ; pushfq ; add dword ptr [rax], eax ; mov byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a302a : add byte ptr [rax], al ; pushfq ; add dword ptr ds:[rax], eax ; jo 0x1a3036 ; int1 ; jmp qword ptr [rcx]
0x000000000019cd2a : add byte ptr [rax], al ; pushfq ; fild dword ptr [rax] ; add byte ptr [rax + 0x6c], al ; out dx, al ; call qword ptr [rsi]
0x00000000001b5d2a : add byte ptr [rax], al ; pushfq ; imul eax, dword ptr [rdx], 0 ; jo 0x1b5d42 ; sti ; jmp qword ptr [rdx]
0x00000000001b5b2a : add byte ptr [rax], al ; pushfq ; imul eax, dword ptr [rdx], 0xf79a5000 ; call qword ptr [rdx]
0x000000000019ee4f : add byte ptr [rax], al ; pushfq ; out dx, eax ; call qword ptr [rdi]
0x00000000001ab42a : add byte ptr [rax], al ; pushfq ; ret 1
0x000000000019c5ee : add byte ptr [rax], al ; rcl byte ptr [rdi] ; out dx, al ; call qword ptr [rbx]
0x000000000018fbfe : add byte ptr [rax], al ; rcr byte ptr [rdx - 0x17] ; call qword ptr [rax]
0x0000000000000977 : add byte ptr [rax], al ; ret
0x000000000000ed5e : add byte ptr [rax], al ; ret 0
0x0000000000009786 : add byte ptr [rax], al ; ret 0x10
0x000000000016f306 : add byte ptr [rax], al ; ret 0x12
0x000000000000a30e : add byte ptr [rax], al ; ret 0x16
0x000000000000b8e6 : add byte ptr [rax], al ; ret 0x1a
0x0000000000170d3e : add byte ptr [rax], al ; ret 0x1d4
0x00000000001714d6 : add byte ptr [rax], al ; ret 0x1d5
0x0000000000007296 : add byte ptr [rax], al ; ret 0x21
0x000000000000e86e : add byte ptr [rax], al ; ret 0x23
0x000000000016fd46 : add byte ptr [rax], al ; ret 0x24
0x000000000000054c : add byte ptr [rax], al ; ret 0x2800
0x0000000000005b56 : add byte ptr [rax], al ; ret 0x2f
0x0000000000170236 : add byte ptr [rax], al ; ret 0x33
0x0000000000007236 : add byte ptr [rax], al ; ret 0x3a
0x0000000000000886 : add byte ptr [rax], al ; ret 0x440c
0x0000000000010a76 : add byte ptr [rax], al ; ret 0x51
0x000000000016eb06 : add byte ptr [rax], al ; ret 0xc
0x0000000000189dee : add byte ptr [rax], al ; ret 0xee7d
0x000000000016ef06 : add byte ptr [rax], al ; ret 0xf
0x0000000000177d62 : add byte ptr [rax], al ; ret 0xfffd
0x0000000000000e1e : add byte ptr [rax], al ; ret 1
0x000000000000100e : add byte ptr [rax], al ; ret 2
0x000000000000ec86 : add byte ptr [rax], al ; ret 3
0x0000000000172702 : add byte ptr [rax], al ; ret 4
0x000000000016e32e : add byte ptr [rax], al ; ret 5
0x0000000000172b02 : add byte ptr [rax], al ; ret 6
0x00000000000018ea : add byte ptr [rax], al ; ret 7
0x0000000000172f02 : add byte ptr [rax], al ; ret 8
0x000000000016e706 : add byte ptr [rax], al ; ret 9
0x00000000001726fe : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000001b7c7e : add byte ptr [rax], al ; rol byte ptr [rdx], cl ; add byte ptr [rax], al ; ret 6
0x000000000019096e : add byte ptr [rax], al ; sal ah, -0x17 ; call qword ptr [rdx]
0x000000000001955e : add byte ptr [rax], al ; salc ; call qword ptr [rdi]
0x000000000017919e : add byte ptr [rax], al ; sar byte ptr [rsp + rdi*8 - 1], 1 ; lock jge 0x1791ac ; call qword ptr [rax]
0x00000000001ab5aa : add byte ptr [rax], al ; sbb al, -0x3c ; add dword ptr [rax], eax ; mov al, -0x2d ; cmc ; jmp qword ptr [rsi]
0x00000000001a8daa : add byte ptr [rax], al ; sbb al, -0x64 ; add dword ptr [rax], eax ; xor bpl, sil ; jmp qword ptr [rcx]
0x00000000001a79aa : add byte ptr [rax], al ; sbb al, -0x78 ; add dword ptr [rax], eax ; rcr ch ; hlt ; call rbx
0x000000000019b3de : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; ret 0
0x00000000001a0faa : add byte ptr [rax], al ; sbb al, 0x1e ; add dword ptr [rax], eax ; adc byte ptr [rsi - 0xf], al ; call qword ptr [rdx]
0x00000000001a31aa : add byte ptr [rax], al ; sbb al, 0x40 ; add dword ptr [rax], eax ; and byte ptr [rdx + rsi*8], al ; jmp rdx
0x0000000000193aaa : add byte ptr [rax], al ; sbb al, 0x49 ; add byte ptr [rax], al ; jo 0x193aec ; jmp 0x193abc
0x0000000000193daa : add byte ptr [rax], al ; sbb al, 0x4c ; add byte ptr [rax], al ; push rax ; jmp 0x193dbc
0x00000000001a45aa : add byte ptr [rax], al ; sbb al, 0x54 ; add dword ptr [rax], eax ; and byte ptr [rbx], ch ; jmp rdx
0x00000000001ac1ca : add byte ptr [rax], al ; sbb al, 0x72 ; add dword ptr [rax], eax ; push rax ; loope 0x1ac1d1 ; call qword ptr [rcx]
0x0000000000196baa : add byte ptr [rax], al ; sbb al, 0x7a ; add byte ptr [rax], al ; loopne 0x196b59 ; in eax, dx ; call rbx
0x0000000000195616 : add byte ptr [rax], al ; sbb bh, ch ; in al, dx ; call qword ptr [rax]
0x000000000003733e : add byte ptr [rax], al ; sbb byte ptr [rax + 0x450f4402], ch ; ret 0x8944
0x000000000019a116 : add byte ptr [rax], al ; sbb cl, bh ; in eax, dx ; call qword ptr [rax]
0x00000000001a0ed2 : add byte ptr [rax], al ; sbb eax, 0x3f480001 ; int1 ; jmp qword ptr [rcx]
0x000000000001952e : add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; call qword ptr [rdi]
0x0000000000189bee : add byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; pop rbx ; out dx, al ; jmp rsp
0x00000000001ad36f : add byte ptr [rax], al ; sti ; cmc ; call qword ptr [rax]
0x00000000001ab4ba : add byte ptr [rax], al ; sub al, -0x3d ; add dword ptr [rax], eax ; lock sal ch, cl ; jmp qword ptr [rsi]
0x00000000001a8cba : add byte ptr [rax], al ; sub al, -0x65 ; add dword ptr [rax], eax ; shr byte ptr [rsi], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001a89ba : add byte ptr [rax], al ; sub al, -0x68 ; add dword ptr [rax], eax ; adc byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a81ba : add byte ptr [rax], al ; sub al, -0x70 ; add dword ptr [rax], eax ; xor byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a78ba : add byte ptr [rax], al ; sub al, -0x79 ; add dword ptr [rax], eax ; xor ch, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001a8a7f : add byte ptr [rax], al ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001a0eba : add byte ptr [rax], al ; sub al, 0x1d ; add dword ptr [rax], eax ; xor byte ptr [rdi], bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a60ba : add byte ptr [rax], al ; sub al, 0x6f ; add dword ptr [rax], eax ; lock adc al, -7 ; call qword ptr [rax]
0x00000000001a6eba : add byte ptr [rax], al ; sub al, 0x7d ; add dword ptr [rax], eax ; jo 0x1a6e86 ; hlt ; jmp qword ptr [rcx]
0x000000000019f8ba : add byte ptr [rax], al ; sub al, 7 ; add dword ptr [rax], eax ; and byte ptr [rbp - 0x10], bl ; call qword ptr [rax]
0x0000000000191966 : add byte ptr [rax], al ; sub byte ptr [rsi - 0x16], dl ; jmp qword ptr [rdi]
0x000000000016190c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000000f1c90 : add byte ptr [rax], al ; sub eax, edx ; ret
0x000000000003667d : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x000000000010491a : add byte ptr [rax], al ; sub ecx, eax ; mov eax, ecx ; ret
0x000000000007c986 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000001049ae : add byte ptr [rax], al ; sub r8d, eax ; mov eax, r8d ; ret
0x0000000000089161 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000116ebe : add byte ptr [rax], al ; sub rsp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x0000000000085b0e : add byte ptr [rax], al ; sub rsp, 8 ; call 0xf1dc8
0x00000000000cc1db : add byte ptr [rax], al ; syscall ; neg eax ; ret
0x0000000000108ca5 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000000c28d3 : add byte ptr [rax], al ; syscall ; ret
0x00000000001897de : add byte ptr [rax], al ; test ah, ch ; jmp 0x1897e8
0x0000000000195dc6 : add byte ptr [rax], al ; test al, -0x6f ; in eax, dx ; jmp qword ptr [rax]
0x000000000019e096 : add byte ptr [rax], al ; test al, -9 ; out dx, al ; call qword ptr [rax]
0x0000000000193656 : add byte ptr [rax], al ; test al, 0 ; jmp 0x193660
0x000000000019ae66 : add byte ptr [rax], al ; test al, 0x17 ; out dx, al ; call qword ptr [rcx]
0x000000000019ef86 : add byte ptr [rax], al ; test al, 0x68 ; sti ; call qword ptr [rax]
0x00000000001ab712 : add byte ptr [rax], al ; test al, ch ; add dword ptr [rax], eax ; sub ah, dl ; cmc ; jmp qword ptr [rsi]
0x0000000000195612 : add byte ptr [rax], al ; test byte ptr [rax + rax], ah ; sbb bh, ch ; in al, dx ; call qword ptr [rax]
0x00000000001a3712 : add byte ptr [rax], al ; test byte ptr [rbp + 1], al ; add byte ptr [rax - 0x7a], bh ; jmp qword ptr [rax]
0x0000000000188dce : add byte ptr [rax], al ; test byte ptr [rbx - 0x16], ah ; jmp rsp
0x00000000001a8112 : add byte ptr [rax], al ; test byte ptr [rdi + 0xa780001], cl ; cmc ; call rsp
0x000000000019a112 : add byte ptr [rax], al ; test byte ptr [rdi - 0x6e80000], ch ; in eax, dx ; call qword ptr [rax]
0x0000000000191912 : add byte ptr [rax], al ; test byte ptr [rdi], ah ; add byte ptr [rax], al ; mov byte ptr [rbp - 0x16], dl ; jmp qword ptr [rcx]
0x00000000001a4c12 : add byte ptr [rax], al ; test byte ptr [rdx + 1], bl ; add byte ptr [rax], bl ; outsd dx, dword ptr [rsi] ; jmp rax
0x00000000001a8812 : add byte ptr [rax], al ; test byte ptr [rsi + 0x28c80001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a3012 : add byte ptr [rax], al ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; pop rax ; sti ; int1 ; jmp qword ptr [rcx]
0x00000000000a8f5c : add byte ptr [rax], al ; test ebp, ebp ; mov rbx, r15 ; setne dl ; jmp 0xa8f80
0x000000000005e216 : add byte ptr [rax], al ; test ecx, ecx ; je 0x5e227 ; ret
0x00000000000f8c7d : add byte ptr [rax], al ; test edx, edx ; cmovne eax, edx ; ret
0x000000000012c522 : add byte ptr [rax], al ; test rdx, rdx ; jne 0x12c518 ; pop rbx ; ret
0x00000000001a78d2 : add byte ptr [rax], al ; xchg dword ptr [rcx], r8d ; add byte ptr [rax - 0x23], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a5722 : add byte ptr [rax], al ; xchg eax, esp ; add dword ptr gs:[rax], eax ; cmp byte ptr [rsi], al ; hlt ; jmp rdx
0x00000000001a1722 : add byte ptr [rax], al ; xchg eax, esp ; and eax, 0xc6b80001 ; int1 ; call qword ptr [rbx]
0x00000000000194fe : add byte ptr [rax], al ; xchg eax, esp ; call qword ptr [rdi]
0x00000000001a6a22 : add byte ptr [rax], al ; xchg eax, esp ; js 0x1a6a31 ; add al, cl ; scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a9122 : add byte ptr [rax], al ; xchg eax, esp ; lahf ; add dword ptr [rax], eax ; cwde ; cmp ch, dh ; jmp qword ptr [rcx]
0x000000000019e222 : add byte ptr [rax], al ; xchg eax, esp ; lock add byte ptr [rax], al ; mov byte ptr [rbp - 0x11], al ; jmp qword ptr [rsi]
0x00000000001ad322 : add byte ptr [rax], al ; xchg eax, esp ; loope 0x1ad331 ; add byte ptr [rax], bl ; sti ; cmc ; call qword ptr [rax]
0x00000000001ae432 : add byte ptr [rax], al ; xchg eax, esp ; out dx, al ; add dword ptr [rax], eax ; ret 0xf619
0x00000000001a0a22 : add byte ptr [rax], al ; xchg eax, esp ; sbb byte ptr [rcx], al ; add byte ptr [rax + 0x15], bh ; int1 ; jmp qword ptr [rcx]
0x00000000001ac922 : add byte ptr [rax], al ; xchg eax, esp ; xlatb ; add dword ptr [rax], eax ; fsubr st(2) ; cmc ; jmp qword ptr [rax]
0x000000000000ec7f : add byte ptr [rax], al ; xlatb ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001a09c2 : add byte ptr [rax], al ; xor al, 0x18 ; add dword ptr [rax], eax ; pop rax ; adc al, -0xf ; jmp qword ptr [rax]
0x0000000000189a36 : add byte ptr [rax], al ; xor al, 0x4d ; in eax, dx ; jmp rsp
0x0000000000195dc2 : add byte ptr [rax], al ; xor al, 0x6c ; add byte ptr [rax], al ; test al, -0x6f ; in eax, dx ; jmp qword ptr [rax]
0x00000000001b5ec2 : add byte ptr [rax], al ; xor al, 0x6d ; add al, byte ptr [rax] ; cmp byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x00000000001a62c2 : add byte ptr [rax], al ; xor al, 0x71 ; add dword ptr [rax], eax ; jns 0x1a62c8 ; jmp qword ptr [rcx]
0x00000000001a8ac2 : add byte ptr [rax], al ; xor al, 0xffffffffffffff99 ; add dword ptr [rax], eax ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001a8dc2 : add byte ptr [rax], al ; xor al, 0xffffffffffffff9c ; add dword ptr [rax], eax ; pop rax ; xor ch, dh ; jmp qword ptr [rcx]
0x00000000001ab5c2 : add byte ptr [rax], al ; xor al, 0xffffffffffffffc4 ; add dword ptr [rax], eax ; or ah, al ; clc ; jmp qword ptr [rsi]
0x00000000001abbc2 : add byte ptr [rax], al ; xor al, 0xffffffffffffffca ; add dword ptr [rax], eax ; sbb dl, bl ; cmc ; call qword ptr [rax]
0x00000000000e59f4 : add byte ptr [rax], al ; xor al, al ; ret
0x00000000000f130a : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x000000000019154e : add byte ptr [rax], al ; xor byte ptr [rsi - 0x16], cl ; call qword ptr [rdx]
0x00000000000a17ee : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000084d4c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000000001374ee : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000083fee : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x00000000001221be : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x0000000000122177 : add byte ptr [rax], al ; xor eax, eax ; pop rbp ; jmp rcx
0x000000000003c39b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013607f : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000003bf3a : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000384c6 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000003cfab : add byte ptr [rax], al ; xor eax, edx ; ret
0x00000000000a6022 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa5fd5
0x00000000000a8862 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa8815
0x00000000000aaf12 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xaaec5
0x000000000008b5f1 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000000f6860 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000000f6885 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000f68a9 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000000f68c9 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000f683b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, rbp ; call rbx
0x000000000008c90d : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001a91cb : add byte ptr [rax], bh ; add dword ptr [rax], eax ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000001ac9d7 : add byte ptr [rax], bh ; in eax, dx ; cmc ; call qword ptr [rdi]
0x000000000019cf37 : add byte ptr [rax], bh ; js 0x19cf2d ; jmp qword ptr [rcx]
0x00000000001a6c47 : add byte ptr [rax], bh ; mov ch, -0xc ; call rdi
0x00000000001a38b7 : add byte ptr [rax], bh ; mov edx, esi ; jmp qword ptr [rdi]
0x00000000001ab387 : add byte ptr [rax], bh ; ret
0x00000000001ab507 : add byte ptr [rax], bh ; sal ebp, cl ; jmp qword ptr [rsi]
0x0000000000194dd7 : add byte ptr [rax], bh ; xchg eax, ebx ; in al, dx ; jmp qword ptr [rcx]
0x0000000000195e87 : add byte ptr [rax], bh ; xchg eax, edx ; in eax, dx ; jmp rsp
0x00000000001ad287 : add byte ptr [rax], bl ; cli ; cmc ; call qword ptr [rax]
0x00000000001a5f07 : add byte ptr [rax], bl ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a6297 : add byte ptr [rax], bl ; jns 0x1a6293 ; jmp qword ptr [rcx]
0x000000000019d957 : add byte ptr [rax], bl ; mov dh, -0x12 ; call qword ptr [rax]
0x00000000001a81a7 : add byte ptr [rax], bl ; or esi, ebp ; jmp qword ptr [rcx]
0x00000000001ac5b7 : add byte ptr [rax], bl ; out -0xb, al ; call qword ptr [rax]
0x0000000000195617 : add byte ptr [rax], bl ; out dx, eax ; in al, dx ; call qword ptr [rax]
0x00000000001a4c17 : add byte ptr [rax], bl ; outsd dx, dword ptr [rsi] ; jmp rax
0x00000000001ab7a7 : add byte ptr [rax], bl ; ret
0x0000000000190157 : add byte ptr [rax], bl ; ret 0xffe9
0x000000000019a117 : add byte ptr [rax], bl ; stc ; in eax, dx ; call qword ptr [rax]
0x00000000001ad327 : add byte ptr [rax], bl ; sti ; cmc ; call qword ptr [rax]
0x00000000001a8c47 : add byte ptr [rax], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a91b7 : add byte ptr [rax], ch ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000001a3e87 : add byte ptr [rax], ch ; fcompi st(2) ; call qword ptr [rdx]
0x00000000001a2f87 : add byte ptr [rax], ch ; sti ; int1 ; jmp qword ptr [rcx]
0x00000000001a89d7 : add byte ptr [rax], ch ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a37d7 : add byte ptr [rax], ch ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001a919b : add byte ptr [rax], cl ; add dword ptr [rax], eax ; adc byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000195737 : add byte ptr [rax], cl ; jnp 0x19572c ; jmp rcx
0x000000000019841f : add byte ptr [rax], cl ; jp 0x19840f ; call rdx
0x000000000019f467 : add byte ptr [rax], cl ; lock ; jmp rsi
0x000000000002fc14 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000001ac7b7 : add byte ptr [rax], cl ; out -0xb, eax ; call qword ptr [rax]
0x0000000000198a17 : add byte ptr [rax], cl ; ret 0xffed
0x00000000001ab4d7 : add byte ptr [rax], cl ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001ad357 : add byte ptr [rax], cl ; sti ; cmc ; call qword ptr [rax]
0x00000000001af447 : add byte ptr [rax], cl ; sub esi, esi ; jmp qword ptr [rcx]
0x000000000018f3c7 : add byte ptr [rax], cl ; xor ch, cl ; call qword ptr [rcx]
0x00000000001b1fbf : add byte ptr [rax], dh ; in al, -0xa ; jmp rdx
0x00000000000a17ef : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000001a5f1f : add byte ptr [rax], dh ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a392f : add byte ptr [rax], dh ; mov dh, dl ; call qword ptr [rcx]
0x00000000001a81bf : add byte ptr [rax], dh ; or esi, ebp ; jmp qword ptr [rcx]
0x0000000000198a2f : add byte ptr [rax], dh ; ret 0xffed
0x000000000019d83f : add byte ptr [rax], dh ; sahf ; out dx, al ; jmp qword ptr [rcx]
0x00000000001a8aaf : add byte ptr [rax], dh ; sub al, -0xb ; jmp qword ptr [rcx]
0x000000000000977f : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x10
0x000000000000a307 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x00000000000f3151 : add byte ptr [rax], dl ; add byte ptr [rax], al ; call 0x1f416
0x000000000005db35 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000005db43 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000001a52ef : add byte ptr [rax], dl ; clc ; jmp qword ptr [rdi]
0x00000000001a2f0f : add byte ptr [rax], dl ; cli ; int1 ; jmp qword ptr [rcx]
0x00000000001a8c2f : add byte ptr [rax], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a919f : add byte ptr [rax], dl ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000001b1c9f : add byte ptr [rax], dl ; fdivr st(6), st(0) ; jmp qword ptr [rbx]
0x00000000001a0faf : add byte ptr [rax], dl ; int1 ; call qword ptr [rdx]
0x00000000001a608f : add byte ptr [rax], dl ; je 0x1a608b ; jmp qword ptr [rcx]
0x00000000001a6ccf : add byte ptr [rax], dl ; mov bh, -0xc ; call rdi
0x00000000001b0c1f : add byte ptr [rax], dl ; mov ch, -0xa ; call qword ptr [rdi]
0x000000000002fcf4 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x00000000001a085f : add byte ptr [rax], dl ; or cl, dh ; jmp rcx
0x0000000000008c4f : add byte ptr [rax], dl ; ret 7
0x00000000001ad33f : add byte ptr [rax], dl ; sti ; cmc ; call qword ptr [rax]
0x00000000001a89bf : add byte ptr [rax], dl ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a37bf : add byte ptr [rax], dl ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001ab898 : add byte ptr [rax], r8b ; add ah, bh ; ret 1
0x000000000019b988 : add byte ptr [rax], r8b ; add ah, ch ; ret
0x000000000019b868 : add byte ptr [rax], r8b ; add ah, cl ; ret 0
0x000000000003687d : add byte ptr [rax], r8b ; fstp st(1) ; ret
0x000000000011adc5 : add byte ptr [rax], r8b ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000009743d : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000c313d : add byte ptr [rax], r8b ; mov eax, 0x20 ; ret
0x00000000000750a5 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000037b85 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000c4125 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000012c52d : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x0000000000075f3d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdx] ; ret
0x00000000000713ad : add byte ptr [rax], r8b ; mov eax, edi ; ret
0x0000000000104b6d : add byte ptr [rax], r8b ; mov eax, edi ; sub eax, esi ; ret
0x000000000009d99d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000929e5 : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000010d0f5 : add byte ptr [rax], r8b ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000bddad : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000046fc5 : add byte ptr [rax], r8b ; mov rax, rbx ; pop rbx ; ret
0x0000000000035605 : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x00000000000921a5 : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x000000000009d9dd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000009741d : add byte ptr [rax], r8b ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000007b19d : add byte ptr [rax], r8b ; or eax, 0x20 ; jmp 0x7b16e
0x00000000000d320d : add byte ptr [rax], r8b ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000046fbd : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000193dad : add byte ptr [rax], r8b ; push rax ; jmp 0x193db9
0x000000000012f64d : add byte ptr [rax], r8b ; push rbx ; call 0x12b8f6
0x000000000002ee45 : add byte ptr [rax], r8b ; ret
0x00000000001049ad : add byte ptr [rax], r8b ; sub r8d, eax ; mov eax, r8d ; ret
0x0000000000085b0d : add byte ptr [rax], r8b ; sub rsp, 8 ; call 0xf1dc9
0x0000000000193655 : add byte ptr [rax], r8b ; test al, 0 ; jmp 0x193661
0x00000000000e3d3d : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000d2f0d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000487dd : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x00000000000384c5 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000a376d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x0000000000136e27 : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x48 ; ret
0x0000000000166b3b : add byte ptr [rbp + 0x1e], dh ; ret
0x0000000000134a87 : add byte ptr [rbp + 0x23], dh ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000136cf9 : add byte ptr [rbp + 0x24], dh ; xor eax, eax ; add rsp, 0x58 ; ret
0x0000000000079412 : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000b8d42 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000004787e : add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x000000000008b66e : add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x000000000005dace : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x00000000000a235b : add byte ptr [rbp + 0x49], bl ; lea eax, dword ptr [rcx + 1] ; pop r12 ; ret
0x00000000000538e5 : add byte ptr [rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x00000000001a5723 : add byte ptr [rbp + 0x6380001], dl ; hlt ; jmp rdx
0x0000000000118d17 : add byte ptr [rbp + 0x63], cl ; ret
0x00000000001195b5 : add byte ptr [rbp + 0x6f], dh ; add rsp, 8 ; ret
0x0000000000195733 : add byte ptr [rbp + 0x7b080000], ah ; in eax, dx ; jmp rcx
0x0000000000125b5d : add byte ptr [rbp + 0x7e], dh ; jmp 0x125b73
0x0000000000136db3 : add byte ptr [rbp + 0xa], dh ; xor eax, eax ; add rsp, 0x58 ; ret
0x0000000000038b6f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000038a5f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000000486ea : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x0000000000106a0d : add byte ptr [rbp + 7], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012f5a6 : add byte ptr [rbp + 7], dh ; ret
0x0000000000125d98 : add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x48 ; ret
0x00000000001a3743 : add byte ptr [rbp + rax*2 - 0x7967ffff], dh ; jmp qword ptr [rcx]
0x00000000001a372b : add byte ptr [rbp + rax*2 - 0x797fffff], bl ; jmp qword ptr [rcx]
0x00000000001a3713 : add byte ptr [rbp + rax*2 - 0x7987ffff], al ; jmp qword ptr [rax]
0x00000000001ab6e3 : add byte ptr [rbp + rax*8 + 1], dl ; add al, bh ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001ab743 : add byte ptr [rbp + rax*8 - 0x2ba7ffff], dh ; cmc ; jmp qword ptr [rsi]
0x00000000001ab72b : add byte ptr [rbp + rax*8 - 0x2bbfffff], bl ; cmc ; jmp qword ptr [rsi]
0x00000000001ab713 : add byte ptr [rbp + rax*8 - 0x2bd7ffff], al ; cmc ; jmp qword ptr [rsi]
0x00000000000c3218 : add byte ptr [rbp + rbp - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000018d637 : add byte ptr [rbp + rbp - 8], ah ; jmp rsp
0x00000000001a5f1b : add byte ptr [rbp + rbp*2 + 0x6c300001], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a5f33 : add byte ptr [rbp + rbp*2 + 0x6c480001], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001a5f4b : add byte ptr [rbp + rbp*2 + 0x6c600001], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a5eeb : add byte ptr [rbp + rbp*2 + 1], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a5f03 : add byte ptr [rbp + rbp*2 + 1], dh ; add byte ptr [rax], bl ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a0ed3 : add byte ptr [rbp + rbx + 1], al ; add byte ptr [rax + 0x3f], cl ; int1 ; jmp qword ptr [rcx]
0x00000000001b4ed3 : add byte ptr [rbp + rbx*2 + 2], al ; add al, bh ; mov bh, dh ; call qword ptr [rdx]
0x00000000001a8efb : add byte ptr [rbp + rbx*4 + 1], ch ; add al, dh ; xor dh, ch ; jmp qword ptr [rcx]
0x00000000001a8ee3 : add byte ptr [rbp + rbx*4 + 1], dl ; add al, bl ; xor dh, ch ; jmp qword ptr [rcx]
0x000000000019cf33 : add byte ptr [rbp + rbx*8 + 0x78380000], ah ; out dx, al ; jmp qword ptr [rcx]
0x000000000018914f : add byte ptr [rbp + rbx*8 - 0x16], dl ; jmp rsp
0x00000000000eb071 : add byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8b49
0x00000000000a4af9 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x28 ; call rbx
0x00000000000d55f7 : add byte ptr [rbp + rcx*4 + 0x65], cl ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000117cfe : add byte ptr [rbp + rcx*4 + 5], cl ; push rdx ; ret
0x0000000000117daa : add byte ptr [rbp + rcx*4 + 5], cl ; sahf ; ret 0x2a
0x0000000000189f27 : add byte ptr [rbp + rcx*4 - 0x12], dl ; jmp rsp
0x00000000001a2f0b : add byte ptr [rbp + rdi + 1], bh ; add byte ptr [rax], dl ; cli ; int1 ; jmp qword ptr [rcx]
0x00000000001a6f1b : add byte ptr [rbp + rdi*2 - 0x43cfffff], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001874b4 : add byte ptr [rbp + rdi*8 - 0x25b2f01], ah ; call rax
0x000000000019c74b : add byte ptr [rbp + rdx*8 + 0x22800000], bh ; out dx, al ; jmp rcx
0x00000000001a173b : add byte ptr [rbp - 0x393fffff], ch ; int1 ; call qword ptr [rbx]
0x00000000001a1723 : add byte ptr [rbp - 0x3947ffff], dl ; int1 ; call qword ptr [rbx]
0x0000000000166058 : add byte ptr [rbp - 0x3b], dh ; add rsp, 8 ; ret
0x00000000000f8c7e : add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x0000000000110757 : add byte ptr [rbp - 0x3e], dh ; jmp 0x110716
0x00000000000a8f5d : add byte ptr [rbp - 0x476b313], al ; setne dl ; jmp 0xa8f7f
0x000000000018859c : add byte ptr [rbp - 0x536f0004], ch ; cld ; jmp qword ptr [rax]
0x00000000001791f0 : add byte ptr [rbp - 0x698f0004], dl ; cld ; jmp rax
0x0000000000095f98 : add byte ptr [rbp - 0x73], cl ; dec dword ptr [r13 - 0x77] ; ret
0x00000000000be51f : add byte ptr [rbp - 0x77], 0x64 ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000047300 : add byte ptr [rbp - 0x77], cl ; ret
0x0000000000095ee8 : add byte ptr [rbp - 0x77], cl ; ret 0x894c
0x0000000000049517 : add byte ptr [rbp - 0x77], cl ; ret 0xf41
0x000000000012f69b : add byte ptr [rbp - 0x7b], al ; div byte ptr [rbp + 0xf] ; call 0x12b8f8
0x00000000000a6780 : add byte ptr [rbp - 0x7b], al ; in al, 0x4d ; mov ebp, esi ; setne dl ; jmp 0xa67a1
0x00000000000ab630 : add byte ptr [rbp - 0x7b], al ; in al, 0x4d ; mov ebp, esi ; setne dl ; jmp 0xab651
0x000000000007956f : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], -0x6b ; ret 0x8445
0x00000000000e939b : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], -0x7b ; ret
0x000000000003a9b8 : add byte ptr [rbp - 0x7c], al ; test byte ptr [rdi], -0x7c ; ret
0x00000000000651bf : add byte ptr [rbp - 0x7cb764fc], cl ; ret 0x4104
0x0000000000064b6f : add byte ptr [rbp - 0x7cb77ffc], cl ; ret 0x4104
0x00000000000d1acf : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000084655 : add byte ptr [rbp - 0xcf98740], al ; ret
0x0000000000036ab5 : add byte ptr [rbp - 0xcf98a40], al ; ret
0x000000000005e217 : add byte ptr [rbp - 0xcfb8b37], al ; ret
0x0000000000179430 : add byte ptr [rbp - 0xe], dl ; call qword ptr [rax]
0x0000000000179094 : add byte ptr [rbp - 0xf], bl ; call qword ptr [rax]
0x0000000000187b78 : add byte ptr [rbp - 4], ah ; call qword ptr [rax + 0x20fffc64]
0x000000000018e047 : add byte ptr [rbp - 7], al ; call rsp
0x000000000018ce87 : add byte ptr [rbp - 9], ah ; call rsp
0x00000000001b5ec3 : add byte ptr [rbp*2 + 0x6380002], dh ; sti ; jmp qword ptr [rdx]
0x0000000000010a6f : add byte ptr [rbp], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x000000000013a099 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000073a6f : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x000000000018e61f : add byte ptr [rbx + 0x21], cl ; cli ; call rsp
0x00000000000a266e : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000077538 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x00000000000fd40d : add byte ptr [rbx + 0x2c558c0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000007d455 : add byte ptr [rbx + 0x34456705], al ; add byte ptr [rcx], al ; ret
0x0000000000032016 : add byte ptr [rbx + 0x3930530d], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000031c48 : add byte ptr [rbx + 0x3934213d], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d4af3 : add byte ptr [rbx + 0x394104c0], al ; ret 0x697e
0x00000000000e1bd8 : add byte ptr [rbx + 0x3978244c], cl ; ret 0x1472
0x00000000001894f7 : add byte ptr [rbx + 0x39], dh ; jmp 0x1894ff
0x000000000018d6d7 : add byte ptr [rbx + 0x3c], bh ; clc ; jmp rsp
0x00000000001a0ebb : add byte ptr [rbx + 0x3f300001], ch ; int1 ; jmp qword ptr [rcx]
0x00000000000c2aa0 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000010b878 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000009d9af : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000015d79f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x0000000000160b4f : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x0000000000036f65 : add byte ptr [rbx + 0x48082444], cl ; add esp, 0x18 ; ret
0x00000000000c1723 : add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x28 ; ret
0x000000000009fdcf : add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x000000000006ffe0 : add byte ptr [rbx + 0x48], bl ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000014d86f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000001176b6 : add byte ptr [rbx + 0x5b04d044], cl ; ret
0x00000000000711b6 : add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x00000000000f141e : add byte ptr [rbx + 0x5d], bl ; mov eax, r9d ; pop r12 ; ret
0x00000000000246ed : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fef2 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000002199b : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000001f511 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000007aecf : add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x000000000007416f : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x000000000012450e : add byte ptr [rbx + 0x634801ea], al ; ret 0xd285
0x000000000009e099 : add byte ptr [rbx + 0x63], cl ; or al, 0xffffffffffffff83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000e50af : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x000000000004ef06 : add byte ptr [rbx + 0x7501046a], al ; ret
0x0000000000073a3f : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x00000000000bab2f : add byte ptr [rbx + 0xb7401fe], al ; xor eax, eax ; ret
0x00000000000a5ffd : add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa5fd7
0x00000000000a883d : add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa8817
0x00000000000aaeed : add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xaaec7
0x000000000019d2f8 : add byte ptr [rbx + 0xe], cl ; adc byte ptr [rbx + 0xa440202], al ; ret
0x00000000001afdc8 : add byte ptr [rbx + 0xe], dl ; adc byte ptr [rbx + 0x1990302], al ; ret
0x00000000000007bc : add byte ptr [rbx + 1], al ; ret 0x102
0x000000000000b27f : add byte ptr [rbx + 1], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001b7c7b : add byte ptr [rbx + 2], cl ; add byte ptr [rax], al ; rol byte ptr [rdx], cl ; add byte ptr [rax], al ; ret 6
0x0000000000162ffa : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00000000001ab4d3 : add byte ptr [rbx + rax*8 + 1], al ; add byte ptr [rax], cl ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001ab4eb : add byte ptr [rbx + rax*8 + 1], bl ; add byte ptr [rax], ah ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001ab503 : add byte ptr [rbx + rax*8 + 1], dh ; add byte ptr [rax], bh ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001ab54b : add byte ptr [rbx + rax*8 - 0x2c7fffff], bh ; cmc ; jmp qword ptr [rsi]
0x00000000001ab533 : add byte ptr [rbx + rax*8 - 0x2c97ffff], ah ; cmc ; jmp qword ptr [rsi]
0x00000000001ab51b : add byte ptr [rbx + rax*8 - 0x2cafffff], cl ; cmc ; jmp qword ptr [rsi]
0x00000000001ab4bb : add byte ptr [rbx + rax*8], ch ; add dword ptr [rax], eax ; lock sal ch, cl ; jmp qword ptr [rsi]
0x00000000001ab4a3 : add byte ptr [rbx + rax*8], dl ; add dword ptr [rax], eax ; fcom st(2) ; cmc ; jmp qword ptr [rsi]
0x00000000001b5d2b : add byte ptr [rbx + rbp*2 + 0x7700002], bl ; sti ; jmp qword ptr [rdx]
0x0000000000197ad3 : add byte ptr [rbx + rbp], ah ; add byte ptr [rax], al ; clc ; stosd dword ptr [rdi], eax ; in eax, dx ; call qword ptr [rcx]
0x00000000001a8d4b : add byte ptr [rbx + rbx*4 + 0x2f900001], bh ; cmc ; call qword ptr [rsi]
0x00000000001a8d03 : add byte ptr [rbx + rbx*4 + 1], dh ; add byte ptr [rax + 0x2f], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8cbb : add byte ptr [rbx + rbx*4], ch ; add dword ptr [rax], eax ; shr byte ptr [rsi], 1 ; cmc ; jmp qword ptr [rcx]
0x000000000019cd2b : add byte ptr [rbx + rbx*8 + 0x6c400000], bl ; out dx, al ; call qword ptr [rsi]
0x0000000000075982 : add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000193d3b : add byte ptr [rbx + rcx*2 + 0x4b000000], ch ; jmp 0x193d4b
0x000000000018af17 : add byte ptr [rbx + rcx*2 - 0x10], ah ; jmp rsp
0x0000000000193cf3 : add byte ptr [rbx + rcx*2], ah ; add byte ptr [rax + 0x4a], bh ; jmp 0x193d03
0x0000000000111115 : add byte ptr [rbx + rcx*4 + 0x2d], cl ; ret
0x0000000000130bf2 : add byte ptr [rbx + rcx*4 + 0x4d], al ; mov byte ptr [rax + 1], cl ; ret
0x0000000000039c07 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000038477 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000dad3f : add byte ptr [rbx + rcx*4 + 0x78], cl ; or byte ptr [rax + 0x63], cl ; ret 0xc148
0x00000000001abca3 : add byte ptr [rbx + rcx*8], dl ; add dword ptr [rax], eax ; pop rax ; fdivrp st(5) ; call qword ptr [rax]
0x000000000018e3d7 : add byte ptr [rbx + rcx*8], dl ; stc ; call rsp
0x00000000001a2cd3 : add byte ptr [rbx + rdi + 1], al ; add al, bl ; lock int1 ; jmp qword ptr [rdx]
0x00000000001b6160 : add byte ptr [rbx + rdi*8], al ; jmp qword ptr [rdx]
0x000000000018bc0f : add byte ptr [rbx + rdx - 0xc], dh ; call rsp
0x00000000001a8493 : add byte ptr [rbx + rdx*4], al ; add dword ptr [rax], eax ; cmp byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x00000000001ac533 : add byte ptr [rbx + rdx*8 - 0x1a07ffff], ah ; cmc ; call qword ptr [rax]
0x00000000001ac54b : add byte ptr [rbx + rdx*8 - 0x1a0fffff], bh ; cmc ; call qword ptr [rax]
0x00000000001893d7 : add byte ptr [rbx + rdx], ah ; jmp 0x1893df
0x000000000005fece : add byte ptr [rbx - 0x111743], al ; call qword ptr [rax]
0x00000000000601e2 : add byte ptr [rbx - 0x116b43], al ; call qword ptr [rax]
0x0000000000193d40 : add byte ptr [rbx - 0x15], cl ; jmp qword ptr [rsi]
0x00000000000c2897 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0xc28aa ; ret
0x000000000002e8ef : add byte ptr [rbx - 0x387cfe40], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x8310
0x00000000000774b7 : add byte ptr [rbx - 0x3b7cb7fe], cl ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a26f8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000a26f1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000a26ea : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000a26e3 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000a26dc : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x00000000000a26ff : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000002c97d : add byte ptr [rbx - 0x3d], bl ; test esi, esi ; je 0x2c951 ; pop rbx ; ret
0x000000000011cdf6 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x11ce08 ; ret
0x0000000000108d6f : add byte ptr [rbx - 0x3f7aefb9], cl ; jne 0x108d89 ; ret
0x00000000000b7b68 : add byte ptr [rbx - 0x50f0ec18], al ; ret 0x8941
0x00000000000f06e9 : add byte ptr [rbx - 0x6117c385], cl ; ret
0x0000000000195523 : add byte ptr [rbx - 0x65980000], dl ; in al, dx ; call rdx
0x000000000019d543 : add byte ptr [rbx - 0x6b780000], dh ; out dx, al ; call qword ptr [rdx]
0x000000000011a1b0 : add byte ptr [rbx - 0x71f0f905], al ; ret 1
0x0000000000047daf : add byte ptr [rbx - 0x73], al ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000048744 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000fb1ca : add byte ptr [rbx - 0x76ebdbb4], cl ; ret
0x0000000000020562 : add byte ptr [rbx - 0x76ff4783], al ; ret
0x000000000011d4b7 : add byte ptr [rbx - 0x77], al ; scasd eax, dword ptr [rdi] ; or bl, ch ; ret 0x4890
0x00000000000709c4 : add byte ptr [rbx - 0x77], bl ; call 0xffffffffc3634b30
0x0000000000021dff : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], -0x6c ; ret 0x8d48
0x00000000000ef6ba : add byte ptr [rbx - 0x7acfdb84], cl ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x7c83
0x0000000000030e15 : add byte ptr [rbx - 0x7af0fa08], al ; ret 0xfffa
0x00000000000768d0 : add byte ptr [rbx - 0x7af0fe08], al ; ret
0x000000000004da54 : add byte ptr [rbx - 0x7af0fe40], al ; ret 0xfffc
0x00000000000ee133 : add byte ptr [rbx - 0x7bf0cfbd], cl ; ret
0x00000000001646b6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000e0119 : add byte ptr [rbx - 0x7bf0f008], al ; ret 0x16
0x00000000001164c0 : add byte ptr [rbx - 0x7cb7db84], cl ; call qword ptr [rax]
0x00000000000bad77 : add byte ptr [rbx - 0x7cb7fb8d], cl ; ret
0x00000000000d199f : add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x000000000007ab5f : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0xc601
0x000000000011481f : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3904
0x00000000000cae37 : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4408
0x00000000000226bf : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0xc601
0x0000000000080f68 : add byte ptr [rbx - 0x7d], cl ; cmp al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000080e7f : add byte ptr [rbx - 0x7d], cl ; sub al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000fa3ff : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000cd1e8 : add byte ptr [rbx - 0x9f43], al ; jmp qword ptr [rdx]
0x00000000001795f0 : add byte ptr [rbx - 0xe], ch ; jmp qword ptr [rax]
0x00000000001793bc : add byte ptr [rbx - 0xe], dl ; call qword ptr [rax]
0x00000000001884e8 : add byte ptr [rbx - 4], bh ; push qword ptr [rax + 0x7a] ; cld ; call qword ptr [rax]
0x000000000018a4e7 : add byte ptr [rbx], bh ; add bh, ch ; call rsp
0x000000000019d50b : add byte ptr [rbx], bh ; add byte ptr [rax - 0x75], ah ; cld ; call qword ptr [rdx]
0x00000000001a549b : add byte ptr [rbx], cl ; add dword ptr [rax], eax ; lock sti ; call qword ptr [rsi]
0x0000000000189587 : add byte ptr [rbx], dl ; jmp 0x18958f
0x0000000000054256 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x000000000018d587 : add byte ptr [rcx + 0x23], dl ; clc ; call rsp
0x0000000000042fe8 : add byte ptr [rcx + 0x29], cl ; ret
0x000000000015b45f : add byte ptr [rcx + 0x3518911], cl ; ret
0x0000000000114882 : add byte ptr [rcx + 0x39], al ; ret
0x0000000000115097 : add byte ptr [rcx + 0x39], al ; ret 0x840f
0x000000000008d306 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00000000000646ac : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00000000000492ee : add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000f5401 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000071472 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000015b43f : add byte ptr [rcx + 0x4518811], cl ; ret
0x000000000009e97f : add byte ptr [rcx + 0x4578817], cl ; ret
0x000000000007c616 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x000000000018a8d7 : add byte ptr [rcx + 0x4c], bl ; out dx, eax ; jmp rsp
0x0000000000080c1c : add byte ptr [rcx + 0x548d48cf], cl ; ret
0x00000000000e25b5 : add byte ptr [rcx + 0x5bc03128], cl ; pop rbp ; pop r12 ; ret
0x0000000000134596 : add byte ptr [rcx + 0x5c], al ; jmp rax
0x0000000000021aa0 : add byte ptr [rcx + 0x5c], al ; ret
0x0000000000053821 : add byte ptr [rcx + 0x5d], al ; ret
0x0000000000053753 : add byte ptr [rcx + 0x5e], al ; ret
0x000000000014385e : add byte ptr [rcx + 0x63], cl ; adc al, -0x6d ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000006dbf7 : add byte ptr [rcx + 0x63], cl ; add al, -0x80 ; add rax, r8 ; jmp rax
0x0000000000160bbc : add byte ptr [rcx + 0x63], cl ; or al, 0xffffffffffffff93 ; add rcx, r11 ; jmp rcx
0x000000000009d828 : add byte ptr [rcx + 0x63], cl ; or al, 0xffffffffffffff93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000c80ff : add byte ptr [rcx + 0x63], cl ; ret
0x000000000002fdbf : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x00000000000e1b7c : add byte ptr [rcx + 0xf], al ; mov dh, 4 ; or byte ptr [rcx], bh ; ret 0x1472
0x0000000000048fc2 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8348
0x00000000000cfec5 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8d47
0x000000000007e0bd : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x8348
0x00000000000b27a3 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x894c
0x00000000001a52eb : add byte ptr [rcx + 1], bl ; add byte ptr [rax], dl ; clc ; jmp qword ptr [rdi]
0x00000000000a1fcf : add byte ptr [rcx + 1], cl ; ret
0x0000000000060569 : add byte ptr [rcx + 1], cl ; ret 0x3145
0x00000000001a9303 : add byte ptr [rcx + 1], dh ; add byte ptr [rax + 0x41], cl ; cmc ; jmp rdi
0x00000000001a12e3 : add byte ptr [rcx + 1], dl ; add al, bh ; ret
0x0000000000000881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x0000000000084433 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x000000000018d327 : add byte ptr [rcx + rax - 8], dh ; jmp rsp
0x000000000018c25f : add byte ptr [rcx + rax*2 - 0xa], dl ; call rsp
0x00000000001a72fb : add byte ptr [rcx + rax*4 + 1], ch ; add byte ptr [rax - 0x36], dl ; hlt ; jmp qword ptr [rcx]
0x00000000000a3c0f : add byte ptr [rcx + rbp - 0x40], al ; ret
0x000000000018e677 : add byte ptr [rcx + rbp - 6], ah ; call rsp
0x000000000018b5ef : add byte ptr [rcx + rbp*4], ah ; call rsp
0x000000000019db23 : add byte ptr [rcx + rbp*8 - 0x44280000], dl ; out dx, al ; jmp qword ptr [rax]
0x00000000001a8af3 : add byte ptr [rcx + rbx*4 + 1], ah ; add byte ptr [rax + 0x2c], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a8adb : add byte ptr [rcx + rbx*4 + 1], cl ; add byte ptr [rax + 0x2c], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a8ac3 : add byte ptr [rcx + rbx*4], dh ; add dword ptr [rax], eax ; sub al, -0xb ; jmp qword ptr [rcx]
0x000000000016e6ff : add byte ptr [rcx + rcx + 0x9bf0000], bh ; add byte ptr [rax], al ; ret 9
0x000000000010862c : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x0000000000193aab : add byte ptr [rcx + rcx*2], bl ; add byte ptr [rax], al ; jo 0x193aeb ; jmp 0x193abb
0x00000000000bf250 : add byte ptr [rcx + rcx*4 + 0x10], ah ; add rsp, 0x18 ; ret
0x00000000000bf2fe : add byte ptr [rcx + rcx*4 + 0x10], ah ; add rsp, 8 ; ret
0x00000000000929e7 : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x0000000000081397 : add byte ptr [rcx + rcx*4 + 0x74], cl ; and al, 0x28 ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000022486 : add byte ptr [rcx + rcx*4 + 0xd], al ; jb 0x224bc ; cmp al, byte ptr [rax] ; pop rbx ; ret
0x0000000000120ba9 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [rax]
0x00000000000f7337 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000000a4d28 : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000a5323 : add byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x000000000011b617 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x878d6
0x00000000000f6ae1 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000eb6c7 : add byte ptr [rcx + rcx*4 - 0x1a], al ; call 0x878d6
0x0000000000085e91 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x00000000000860a1 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00000000000f14f4 : add byte ptr [rcx + rcx*4 - 0x38], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079210 : add byte ptr [rcx + rcx*4 - 0x3e], al ; jmp 0x791ae
0x0000000000085c23 : add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00000000000770d0 : add byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbx ; call rax
0x00000000000757f4 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x71a76
0x00000000001209a1 : add byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rax]
0x00000000000f6916 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000111ac8 : add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r12 ; call rax
0x0000000000106570 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0x102866
0x00000000000f6925 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000023e5c : add byte ptr [rcx + rcx*4 - 9], cl ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x00000000000f447f : add byte ptr [rcx + rcx*8 - 0x7cb78e8c], al ; ret
0x00000000001aba9b : add byte ptr [rcx + rcx*8], cl ; add dword ptr [rax], eax ; lock cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rsi]
0x0000000000086c14 : add byte ptr [rcx + rdi*2 + 0x48], dh ; mov esi, ebx ; mov rdi, r13 ; call rdx
0x00000000001b02e3 : add byte ptr [rcx + rdx + 2], dl ; add al, bh ; test dh, dh ; jmp rdx
0x000000000019834b : add byte ptr [rcx + rdx*4 - 0x49400000], bh ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ac31b : add byte ptr [rcx + rdx*8 - 0x1c8fffff], cl ; cmc ; call qword ptr [rax]
0x00000000001ac333 : add byte ptr [rcx + rdx*8 - 0x1c97ffff], ah ; cmc ; jmp rbx
0x00000000001a6293 : add byte ptr [rcx + rsi*2], al ; add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001a62c3 : add byte ptr [rcx + rsi*2], dh ; add dword ptr [rax], eax ; jns 0x1a62c7 ; jmp qword ptr [rcx]
0x000000000000245f : add byte ptr [rcx - 0x23], al ; out -0x57, al ; ret 0xbd07
0x00000000001a134b : add byte ptr [rcx - 0x3b4fffff], bh ; int1 ; call qword ptr [rdx]
0x00000000000e50bf : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x0000000000044f5d : add byte ptr [rcx - 0x43], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000bacb0 : add byte ptr [rcx - 0x45], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbac83
0x0000000000098027 : add byte ptr [rcx - 0x48], al ; cmp eax, 0xeb000000 ; ret
0x00000000001ad323 : add byte ptr [rcx - 0x4e7ffff], dl ; cmc ; call qword ptr [rax]
0x00000000001ad33b : add byte ptr [rcx - 0x4efffff], ch ; cmc ; call qword ptr [rax]
0x0000000000188774 : add byte ptr [rcx - 0x4f6f0004], dh ; cld ; jmp qword ptr [rax]
0x00000000000341a5 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x0000000000045f0c : add byte ptr [rcx - 0x73], cl ; cmp al, -0x11 ; call 0x92207
0x00000000000e423f : add byte ptr [rcx - 0x75], al ; add byte ptr [r9], r15b ; ret 0x870f
0x00000000000737c2 : add byte ptr [rcx - 0x75], al ; jl 0x737f2 ; jo 0x737b8 ; ret
0x00000000000e336f : add byte ptr [rcx - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000106180 : add byte ptr [rcx - 0x75], cl ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x0000000000131f1f : add byte ptr [rcx - 0x75], cl ; push rdi ; or byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x00000000001304a7 : add byte ptr [rcx - 0x75], cl ; push rsi ; sbb byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000047756 : add byte ptr [rcx - 0x75], cl ; ret
0x00000000000b420a : add byte ptr [rcx - 0x76dbdbbc], cl ; ret
0x000000000009743f : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x00000000000c700b : add byte ptr [rcx - 0x77], al ; ret
0x0000000000020bef : add byte ptr [rcx - 0x77], al ; xor al, 0xffffffffffffff89 ; inc dword ptr [rdi + 4] ; ret
0x000000000004bedf : add byte ptr [rcx - 0x77], cl ; add bl, ch ; ret
0x000000000002105d : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000047204 : add byte ptr [rcx - 0x77], cl ; ret 0x18b9
0x000000000005ae97 : add byte ptr [rcx - 0x77], cl ; ret 0x32e9
0x0000000000033bf5 : add byte ptr [rcx - 0x77], cl ; ret 0x65e9
0x000000000003feac : add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x000000000004b6de : add byte ptr [rcx - 0x77], cl ; ret 0x8b44
0x00000000000626a7 : add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000008c013 : add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000035c0b : add byte ptr [rcx - 0x77], cl ; ret 0xf41
0x0000000000066584 : add byte ptr [rcx - 0x7d], al ; in eax, dx ; add dword ptr [rax + 1], ecx ; ret
0x0000000000045641 : add byte ptr [rcx - 0x7d], al ; ret
0x0000000000022807 : add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x00000000000248be : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000006703d : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000d2b7f : add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x000000000007f3df : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000000d4caa : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000013820f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000064e94 : add byte ptr [rcx - 0x7d], cl ; ret 0x8501
0x0000000000087cbf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000080d8d : add byte ptr [rcx - 0x7d], cl ; sub al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000ea7a7 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00000000000ea717 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x000000000008105c : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000c289a : add byte ptr [rcx - 0xcfd8130], cl ; ret
0x000000000018690f : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000017930c : add byte ptr [rcx - 0xe], cl ; jmp qword ptr [rax]
0x000000000008ca42 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000008ca68 : add byte ptr [rcx - 9], cl ; ret 2
0x0000000000005ed0 : add byte ptr [rcx], 0 ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret 0x10
0x0000000000094e94 : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000013044c : add byte ptr [rcx], 0 ; add byte ptr [rcx], al ; ret 0x894c
0x00000000001acfbd : add byte ptr [rcx], 0 ; add dh, dh ; cmc ; call qword ptr [rcx]
0x00000000001352c3 : add byte ptr [rcx], 0 ; add dh, dh ; ret
0x00000000001a7285 : add byte ptr [rcx], 0 ; call 0x231a675b
0x00000000001b41a6 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x0000000000199e66 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xedbc
0x00000000001acf06 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf568
0x00000000001b003e : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf5e0
0x0000000000187280 : add byte ptr [rcx], ah ; sti ; push rax ; and ebx, edi ; jmp rax
0x000000000017b62b : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000000722f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3a
0x000000000008665f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x000000000002c1b0 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000002ff89 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x00000000001154cb : add byte ptr [rcx], al ; add byte ptr [rax], al ; nop ; ret
0x000000000012ad03 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008c571 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000008915f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000010e260 : add byte ptr [rcx], al ; jmp 0x10e033
0x000000000010e618 : add byte ptr [rcx], al ; jmp 0x10e403
0x000000000002fcd4 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000007dece : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000012f28f : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000007d45b : add byte ptr [rcx], al ; ret
0x0000000000132e05 : add byte ptr [rcx], al ; ret 0x59e9
0x000000000013044f : add byte ptr [rcx], al ; ret 0x894c
0x000000000004858e : add byte ptr [rcx], al ; ret 0xd7e9
0x00000000000d1865 : add byte ptr [rcx], al ; setg dl ; jmp 0xd17f2
0x00000000000fdac9 : add byte ptr [rcx], bh ; ret
0x00000000000e4243 : add byte ptr [rcx], bh ; ret 0x870f
0x00000000000e2a72 : add byte ptr [rcx], bh ; ret 0x8f0f
0x0000000000081751 : add byte ptr [rcx], bh ; ret 0xa7e
0x00000000000b3055 : add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000008945d : add byte ptr [rcx], ch ; ret
0x00000000000b2ea0 : add byte ptr [rcx], ch ; ret 0x428d
0x00000000000cf54c : add byte ptr [rcx], ch ; ret 0x850f
0x00000000000b9b56 : add byte ptr [rcx], ch ; ret 0x8944
0x00000000000b9bf0 : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000b84b9 : add byte ptr [rcx], ch ; rol byte ptr [rcx + 0x29], 1 ; ret
0x00000000000f1c91 : add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00000000001877fc : add byte ptr [rcx], cl ; cld ; jmp rax
0x000000000010d208 : add byte ptr [rcx], cl ; lock bswap eax ; ret
0x0000000000045b6a : add byte ptr [rcx], cl ; ret 0x840f
0x000000000003662c : add byte ptr [rcx], cl ; ret 0xd089
0x00000000001879dc : add byte ptr [rcx], dh ; cld ; jmp rax
0x00000000000b348d : add byte ptr [rcx], dh ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000007ea6f : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; and al, 8 ; call qword ptr [rax]
0x000000000007ea1e : add byte ptr [rcx], dh ; dec dword ptr [rcx - 0x77] ; salc ; call qword ptr [rax]
0x000000000001fea7 : add byte ptr [rcx], dh ; div byte ptr [rcx] ; shr al, -0x58 ; ret 0xc
0x0000000000112ab5 : add byte ptr [rcx], dh ; fild dword ptr [rcx - 0x7d] ; std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000000000a6023 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa5fd4
0x00000000000a8863 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa8814
0x00000000000aaf13 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xaaec4
0x000000000012b136 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000003c39c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000089456 : add byte ptr [rcx], dh ; ret
0x0000000000064e3a : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000002fdcf : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], -0x40 ; ret
0x0000000000026008 : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x00000000000a6097 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000003c1db : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001374ef : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], -0x3c ; ret
0x000000000013573a : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], -0x3c ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000008b5f2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00000000001183a2 : add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000000c1a8d : add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x7f], cl ; ret 0x2d0
0x00000000000d294f : add byte ptr [rcx], dh ; sal dh, -0x3f ; add dword ptr [rbp - 0x79], esi ; pop rbx ; ret
0x000000000018f177 : add byte ptr [rcx], dh ; std ; jmp rsp
0x00000000000f683c : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], -0x11 ; call rbx
0x00000000000f314f : add byte ptr [rdi + 0x1000], bh ; call 0x1f418
0x000000000018a847 : add byte ptr [rdi + 0x4a], cl ; out dx, eax ; call rsp
0x000000000014b6ba : add byte ptr [rdi + 0x63], cl ; or al, 0xffffffffffffff8b ; add r9, r11 ; jmp r9
0x000000000019c5f8 : add byte ptr [rdi + 0xe], cl ; adc byte ptr [rbx + 0x1020302], al ; ret
0x00000000000a3764 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001650a4 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00000000001a392b : add byte ptr [rdi + rax*2 - 0x75cfffff], bl ; call qword ptr [rcx]
0x00000000001a78d3 : add byte ptr [rdi + rax*4 + 1], al ; add byte ptr [rax - 0x23], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a7903 : add byte ptr [rdi + rax*4 + 1], dh ; add byte ptr [rax - 0x23], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a794b : add byte ptr [rdi + rax*4 - 0x223fffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a7933 : add byte ptr [rdi + rax*4 - 0x2257ffff], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001a791b : add byte ptr [rdi + rax*4 - 0x226fffff], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a78bb : add byte ptr [rdi + rax*4], ch ; add dword ptr [rax], eax ; xor ch, bl ; hlt ; jmp qword ptr [rcx]
0x000000000019f8bb : add byte ptr [rdi + rax], ch ; add dword ptr [rax], eax ; and byte ptr [rbp - 0x10], bl ; call qword ptr [rax]
0x000000000019f8a3 : add byte ptr [rdi + rax], dl ; add dword ptr [rax], eax ; or byte ptr [rbp - 0x10], bl ; jmp qword ptr [rdx]
0x00000000001a60bb : add byte ptr [rdi + rbp*2], ch ; add dword ptr [rax], eax ; lock adc al, -7 ; call qword ptr [rax]
0x000000000019a113 : add byte ptr [rdi + rbp*4 - 0x6e80000], al ; in eax, dx ; call qword ptr [rax]
0x000000000019e123 : add byte ptr [rdi + rbp*8 + 0x12680000], dl ; cli ; call qword ptr [rax]
0x000000000019e0f3 : add byte ptr [rdi + rbp*8], ah ; add al, bl ; fdivr st(1) ; call qword ptr [rax]
0x000000000019e093 : add byte ptr [rdi + rbp*8], al ; add byte ptr [rax], al ; test al, -9 ; out dx, al ; call qword ptr [rax]
0x00000000001920d3 : add byte ptr [rdi + rbp], al ; add al, bh ; jo 0x1920cd ; jmp rbx
0x00000000001b112b : add byte ptr [rdi + rbx + 0x51f00002], bl ; sti ; call rsi
0x00000000001a9123 : add byte ptr [rdi + rbx*4 + 0x38980001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a913b : add byte ptr [rdi + rbx*4 + 0x38b00001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a90f3 : add byte ptr [rdi + rbx*4 + 1], ah ; add byte ptr [rax + 0x38], ch ; cmc ; jmp qword ptr [rcx]
0x000000000018a057 : add byte ptr [rdi + rbx*4 - 0x12], al ; jmp rsp
0x000000000004f54e : add byte ptr [rdi + rcx + 0x44], cl ; jmp 0xffffffffc24904ab
0x000000000016eeff : add byte ptr [rdi + rcx + 0xfbf0000], bh ; add byte ptr [rax], al ; ret 0xf
0x00000000000c56ec : add byte ptr [rdi + rcx - 0x7b], bl ; xor ah, 0xff ; push rsi ; ret
0x000000000019411b : add byte ptr [rdi + rcx*2 + 0x56800000], cl ; jmp 0x19412b
0x0000000000194133 : add byte ptr [rdi + rcx*2 + 0x56880000], ah ; jmp 0x194143
0x00000000001a8113 : add byte ptr [rdi + rcx*4 + 0xa780001], al ; cmc ; call rsp
0x000000000018ba6f : add byte ptr [rdi + rcx*4 - 0xd], ah ; call rsp
0x000000000002fbd4 : add byte ptr [rdi + rcx], al ; mov bh, -0x40 ; ret
0x000000000018d40f : add byte ptr [rdi + rcx], dl ; clc ; call rsp
0x00000000001ab10b : add byte ptr [rdi + rdi*4 + 1], bh ; add byte ptr [rax - 0x69], ah ; cmc ; call rsp
0x000000000018ec3f : add byte ptr [rdi + rdi*4], dl ; cli ; jmp rsp
0x000000000018d707 : add byte ptr [rdi + rdi], dl ; clc ; jmp rsp
0x00000000001a08db : add byte ptr [rdi + rdx + 1], cl ; add al, dh ; or ecx, esi ; jmp qword ptr [rcx]
0x0000000000189ab7 : add byte ptr [rdi + rdx*2 - 0x13], dl ; call rsp
0x00000000001a892b : add byte ptr [rdi + rdx*4 + 0x2aa00001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8943 : add byte ptr [rdi + rdx*4 + 0x2ab80001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001ac923 : add byte ptr [rdi + rdx*8 - 0x1527ffff], dl ; cmc ; jmp qword ptr [rax]
0x000000000018f0d7 : add byte ptr [rdi + rdx*8 - 3], al ; jmp rsp
0x000000000019c90b : add byte ptr [rdi + rdx*8], bh ; add byte ptr [rax + 0x2f], dh ; out dx, al ; call qword ptr [rsi]
0x000000000018be4f : add byte ptr [rdi + rdx*8], dh ; hlt ; jmp rsp
0x00000000001b68f3 : add byte ptr [rdi + rsi*2 + 2], ah ; add al, bl ; fcomi st(7) ; jmp qword ptr [rcx]
0x00000000001792ac : add byte ptr [rdi - 0xe], al ; call qword ptr [rax]
0x00000000001a6ebb : add byte ptr [rdi*2 - 0x448fffff], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a6ea3 : add byte ptr [rdi*2 - 0x44a7ffff], dl ; hlt ; jmp qword ptr [rcx]
0x0000000000189ebf : add byte ptr [rdi], ah ; mov esi, ebp ; jmp rsp
0x000000000019b3d0 : add byte ptr [rdi], ah ; out dx, al ; call qword ptr [rsi]
0x000000000003656e : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000177afb : add byte ptr [rdi], bl ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; sar bh, 1 ; jmp qword ptr [rdi]
0x00000000001879f8 : add byte ptr [rdi], ch ; cld ; jmp rax
0x000000000014d036 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000fc7f1 : add byte ptr [rdi], cl ; mov bh, -1 ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000014e06f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000002fd6d : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2fcfe ; loopne 0x2fd7e ; ret
0x00000000000fe42c : add byte ptr [rdi], cl ; mov bh, 4 ; js 0xfe3bd ; loopne 0xfe43d ; ret
0x00000000000b7fe4 : add byte ptr [rdi], cl ; mov bh, 5 ; ret 0xc1b
0x000000000007bd57 : add byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000014e0df : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000c505a : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000027863 : add byte ptr [rdi], cl ; mov dh, 0x48 ; dec dword ptr [rcx - 0x7d] ; ret
0x00000000000278ad : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x0000000000033970 : add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000006dfff : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xfffffffffffffff6 ; ret 0xf04
0x0000000000088f5f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000160bcf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008caef : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000097b0f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000097b1f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x0000000000097aff : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000944ef : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008c97f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008c96f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008c95f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000a25c7 : add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x00000000000363a7 : add byte ptr [rdi], cl ; push rsp ; ret
0x00000000000657c5 : add byte ptr [rdi], cl ; ret
0x00000000000480e7 : add byte ptr [rdi], cl ; ret 0x2ce9
0x000000000010b9cf : add byte ptr [rdi], cl ; ret 0x8348
0x00000000000cc6e0 : add byte ptr [rdi], cl ; ret 0x84e9
0x0000000000047a33 : add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000031b5b : add byte ptr [rdi], cl ; ret 0x8d49
0x0000000000133d66 : add byte ptr [rdi], cl ; ret 0xc389
0x0000000000042cab : add byte ptr [rdi], cl ; ret 0xc801
0x00000000000d8301 : add byte ptr [rdi], cl ; ret 0xc931
0x0000000000115460 : add byte ptr [rdi], cl ; ret 0xfc3
0x000000000011549b : add byte ptr [rdi], cl ; ret 0xff83
0x00000000000a2432 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x00000000000b9a4e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8d44
0x000000000011ba11 : add byte ptr [rdi], cl ; shr r9b, 1 ; ret 0xfffe
0x00000000000a57ee : add byte ptr [rdi], cl ; test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a5c8e : add byte ptr [rdi], cl ; test byte ptr [rbx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c5165 : add byte ptr [rdi], cl ; test byte ptr [rdi*8 - 0x7cb70001], al ; ret 0xeb02
0x000000000007d491 : add byte ptr [rdi], cl ; test dword ptr [rdx + rax], ebp ; add bl, dh ; ret
0x00000000000703a1 : add byte ptr [rdi], cl ; test dword ptr [rsi - 0xcfffffc], esp ; ret
0x000000000007e9c5 : add byte ptr [rdi], cl ; test dword ptr [rsi], ebp ; imul eax, dword ptr [rax], 0 ; ret
0x00000000000ce53e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000b23ef : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3145
0x0000000000048fcc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x0000000000113239 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd120
0x00000000000e3922 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe2c1
0x00000000000b2777 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf749
0x0000000000058b75 : add byte ptr [rdi], cl ; xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008922a : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x144
0x000000000001f4c1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000e03ef : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d
0x00000000000c656d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x45e9
0x00000000000c5ab7 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000000594ec : add byte ptr [rdi], cl ; xchg ebp, eax ; add eax, 0x83480000 ; ret
0x000000000005351c : add byte ptr [rdi], cl ; xchg ebp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015d75f : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x000000000015942f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000009fd8f : add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x000000000007a066 : add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x0000000000064d6b : add byte ptr [rdx + 0x63], cl ; adc al, -0x50 ; add rax, rdx ; jmp rax
0x00000000000e7c68 : add byte ptr [rdx + 0x63], cl ; adc al, -0x70 ; add rax, rdx ; jmp rax
0x000000000003060f : add byte ptr [rdx + 0x63], cl ; add al, -0x5e ; add rdx, rax ; jmp rdx
0x00000000001b867b : add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x000000000000e567 : add byte ptr [rdx + 3], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001b82f3 : add byte ptr [rdx + 4], dl ; add byte ptr [rax], al ; ret
0x00000000000f5792 : add byte ptr [rdx + rax + 0x5b], dh ; ret
0x000000000018e7cf : add byte ptr [rdx + rax*2 - 6], dl ; inc esp ; ret 2
0x000000000019b443 : add byte ptr [rdx + rax*8 + 0x27780000], dh ; out dx, al ; call qword ptr [rdx]
0x00000000001ab443 : add byte ptr [rdx + rax*8 - 0x2d87ffff], dh ; cmc ; jmp qword ptr [rsi]
0x00000000001ab42b : add byte ptr [rdx + rax*8 - 0x2d9fffff], bl ; cmc ; jmp qword ptr [rsi]
0x000000000019b3cb : add byte ptr [rdx + rax*8], bh ; add byte ptr [rax], al ; add byte ptr [rdi], ah ; out dx, al ; call qword ptr [rsi]
0x000000000018aa87 : add byte ptr [rdx + rax*8], dl ; out dx, eax ; jmp rsp
0x000000000018de2f : add byte ptr [rdx + rax], dh ; stc ; call rsp
0x00000000001a5c3b : add byte ptr [rdx + rbp*2 + 0x63e00001], ch ; hlt ; jmp qword ptr [rcx]
0x000000000019dbb3 : add byte ptr [rdx + rbp*8], ah ; add byte ptr [rax], al ; mov dh, dl ; out dx, al ; jmp rdx
0x000000000018bedf : add byte ptr [rdx + rbp], al ; cmc ; jmp rsp
0x00000000001a4c13 : add byte ptr [rdx + rbx*2 + 0x6f180001], al ; jmp rax
0x00000000001a8c2b : add byte ptr [rdx + rbx*4 + 0x2e100001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8c43 : add byte ptr [rdx + rbx*4 + 0x2e280001], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000094a73 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000193c0b : add byte ptr [rdx + rcx*2], bh ; add byte ptr [rax + 0x35], ah ; jmp 0x193c1b
0x0000000000189ed7 : add byte ptr [rdx + rcx*4], al ; out dx, al ; call rsp
0x00000000001abbc3 : add byte ptr [rdx + rcx*8], dh ; add dword ptr [rax], eax ; sbb dl, bl ; cmc ; call qword ptr [rax]
0x00000000001a6c43 : add byte ptr [rdx + rdi*2 - 0x4ac7ffff], dh ; hlt ; call rdi
0x0000000000196bab : add byte ptr [rdx + rdi*2], bl ; add byte ptr [rax], al ; loopne 0x196b58 ; in eax, dx ; call rbx
0x00000000001a6b9b : add byte ptr [rdx + rdi*2], cl ; add dword ptr [rax], eax ; mov al, -0x4e ; hlt ; call qword ptr [rsi]
0x000000000018e337 : add byte ptr [rdx + rdi*4], al ; stc ; jmp rsp
0x000000000016f2ff : add byte ptr [rdx + rdx + 0x12bf0000], bh ; add byte ptr [rax], al ; ret 0x12
0x00000000001b03db : add byte ptr [rdx + rdx + 2], cl ; add al, ah ; xchg esi, esi ; jmp qword ptr [rdi]
0x000000000018de97 : add byte ptr [rdx + rdx - 7], al ; jmp rsp
0x000000000018d447 : add byte ptr [rdx + rdx - 8], dl ; call rsp
0x000000000018cc0f : add byte ptr [rdx + rsi - 9], dh ; call rsp
0x0000000000188e87 : add byte ptr [rdx + rsi*2 - 0x16], dl ; call rsp
0x00000000001ac1cb : add byte ptr [rdx + rsi*2], bl ; add dword ptr [rax], eax ; push rax ; loope 0x1ac1d0 ; call qword ptr [rcx]
0x000000000018b8f7 : add byte ptr [rdx + rsi*2], dh ; jmp rsp
0x0000000000178e78 : add byte ptr [rdx - 0x11], dl ; call qword ptr [rax]
0x000000000018827c : add byte ptr [rdx - 0x766f0004], cl ; cld ; jmp qword ptr [rax]
0x00000000001ad894 : add byte ptr [rdx - 0xb], dh ; jmp qword ptr [rdx]
0x00000000001795d0 : add byte ptr [rdx - 0xe], ch ; jmp qword ptr [rax]
0x0000000000100d8f : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x0000000000100d8e : add byte ptr [rdx - 1], dil ; mov eax, edx ; ret
0x0000000000187d90 : add byte ptr [rdx - 4], ah ; call qword ptr [rax + 0x20fffc61]
0x000000000018defd : add byte ptr [rdx], 0 ; xchg eax, esp ; xor edi, ecx ; jmp rsp
0x00000000001b8677 : add byte ptr [rdx], ah ; add al, 0 ; add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x0000000000006f3b : add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; ret
0x000000000018da3f : add byte ptr [rdx], ah ; jge 0x18da3f ; call rsp
0x0000000000030038 : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000002fd26 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000011c976 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x0000000000102d9b : add byte ptr [rdx], al ; call rax
0x000000000002fc34 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x000000000000258f : add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x000000000000404f : add byte ptr [rdx], bh ; add eax, 0 ; add byte ptr [rax], al ; ret
0x00000000000f7a0f : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000187a80 : add byte ptr [rdx], dh ; cld ; call rax
0x000000000017406c : add byte ptr [rdx], dh ; in eax, dx ; call rax
0x0000000000005ed3 : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret 0x10
0x0000000000005033 : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret 0xf
0x000000000006f730 : add byte ptr [rip + 0x48000000], al ; mov eax, edx ; pop rbx ; ret
0x0000000000000450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x00000000001aa2c2 : add byte ptr [rip + 0xe01fa03], 0x20 ; ret
0x00000000000fb120 : add byte ptr [rip - 0x1000], ah ; or eax, edi ; ret
0x00000000000c1d31 : add byte ptr [rip - 0xfff], bh ; jae 0xc1d42 ; ret
0x000000000012b327 : add byte ptr [rsi + 0xe], bh ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000160ec4 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000fa756 : add byte ptr [rsi + 0xf], ah ; ret
0x0000000000097a1c : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008c874 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000f68ef : add byte ptr [rsi + 1], bh ; call rbx
0x00000000000f6adc : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x00000000000f69a8 : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x00000000000f6920 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00000000000f6d5a : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x00000000000f6acd : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x00000000000f6999 : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x00000000000f6911 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x0000000000120cad : add byte ptr [rsi + 4], bh ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000e59e7 : add byte ptr [rsi + 6], dh ; ret
0x00000000001a37d3 : add byte ptr [rsi + rax*2 + 1], al ; add byte ptr [rax], ch ; xchg edx, esi ; jmp qword ptr [rcx]
0x000000000018962f : add byte ptr [rsi + rax*2 - 0x15], al ; jmp rsp
0x00000000001a37a3 : add byte ptr [rsi + rax*2], dl ; add dword ptr [rax], eax ; clc ; xchg dl, dh ; jmp qword ptr [rcx]
0x00000000001a7793 : add byte ptr [rsi + rax*4], al ; add dword ptr [rax], eax ; cmp dl, bl ; hlt ; call qword ptr [rax]
0x00000000001b8507 : add byte ptr [rsi + rax], ch ; add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000019e033 : add byte ptr [rsi + rbp*8 - 0x42180000], ah ; stc ; call qword ptr [rax]
0x000000000018e697 : add byte ptr [rsi + rbp], al ; cli ; jmp rsp
0x00000000001a102b : add byte ptr [rsi + rbx + 0x7c400001], bl ; int1 ; call qword ptr [rax]
0x000000000018d897 : add byte ptr [rsi + rbx*2], ah ; clc ; jmp rsp
0x000000000018d4ff : add byte ptr [rsi + rbx], al ; clc ; jmp rsp
0x00000000001a0fab : add byte ptr [rsi + rbx], bl ; add dword ptr [rax], eax ; adc byte ptr [rsi - 0xf], al ; call qword ptr [rdx]
0x00000000001a2ffb : add byte ptr [rsi + rdi + 1], ch ; add byte ptr [rax - 5], al ; int1 ; jmp qword ptr [rcx]
0x0000000000189567 : add byte ptr [rsi + rdi - 0x15], dh ; jmp rsp
0x00000000001a3043 : add byte ptr [rsi + rdi - 0x477ffff], dh ; int1 ; jmp qword ptr [rcx]
0x00000000001a302b : add byte ptr [rsi + rdi - 0x48fffff], bl ; int1 ; jmp qword ptr [rcx]
0x00000000001a3013 : add byte ptr [rsi + rdi - 0x4a7ffff], al ; int1 ; jmp qword ptr [rcx]
0x00000000001a6fcb : add byte ptr [rsi + rdi*2], bh ; add dword ptr [rax], eax ; jo 0x1a6f98 ; hlt ; jmp qword ptr [rcx]
0x000000000019f043 : add byte ptr [rsi + rdi*8 - 0x1a380000], dh ; out dx, eax ; jmp qword ptr [rbx]
0x000000000018d2a7 : add byte ptr [rsi + rdi*8 - 9], dh ; call rsp
0x00000000001a2f9b : add byte ptr [rsi + rdi], cl ; add dword ptr [rax], eax ; sti ; int1 ; jmp qword ptr [rcx]
0x00000000001a0803 : add byte ptr [rsi + rdx + 1], dh ; add byte ptr [rax + 4], bl ; int1 ; call qword ptr [rax]
0x00000000001b47d3 : add byte ptr [rsi + rdx*2 + 2], al ; add byte ptr [rax + 0x74], ch ; idiv edi ; ret 0
0x0000000000189a8f : add byte ptr [rsi + rdx*2 - 0x13], al ; jmp qword ptr [rbx + rax*8]
0x00000000001a8813 : add byte ptr [rsi + rdx*4 + 0x28c80001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a8843 : add byte ptr [rsi + rdx*4 + 0x28e80001], dh ; cmc ; call qword ptr [rax]
0x00000000001a87cb : add byte ptr [rsi + rdx*4], bh ; add dword ptr [rax], eax ; sub byte ptr [rax], -0xb ; jmp qword ptr [rcx]
0x00000000000e4703 : add byte ptr [rsi + rdx*8 + 0x5b], dh ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000001ac7e3 : add byte ptr [rsi + rdx*8 + 1], dl ; add al, bh ; out -0xb, al ; call qword ptr [rax]
0x000000000018ef67 : add byte ptr [rsi + rdx*8 - 5], al ; call rsp
0x00000000001ac7b3 : add byte ptr [rsi + rdx*8], ah ; add dword ptr [rax], eax ; or bh, ah ; cmc ; call qword ptr [rax]
0x00000000001ac7cb : add byte ptr [rsi + rdx*8], bh ; add dword ptr [rax], eax ; add bh, ah ; cmc ; call qword ptr [rax]
0x00000000001a07a3 : add byte ptr [rsi + rdx], dl ; add dword ptr [rax], eax ; clc ; cld ; jmp qword ptr [rbx]
0x00000000001a67fb : add byte ptr [rsi + rsi*2 + 1], ch ; add byte ptr [rax - 0x56], ah ; hlt ; call qword ptr [rbx]
0x000000000018a6f7 : add byte ptr [rsi + rsi], al ; out dx, eax ; call rsp
0x0000000000195a94 : add byte ptr [rsi - 0x13], ch ; jmp qword ptr [rdx]
0x000000000018ac47 : add byte ptr [rsi - 0x31], dh ; out dx, eax ; call rsp
0x000000000019d83b : add byte ptr [rsi - 0x61d00000], ch ; out dx, al ; jmp qword ptr [rcx]
0x000000000002362d : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007526d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000bdead : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; ret
0x0000000000037b3d : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rip + 0x38755a] ; ret
0x00000000001880a4 : add byte ptr [rsi - 0x7a6f0004], al ; cld ; jmp qword ptr [rax]
0x000000000018e057 : add byte ptr [rsi - 7], al ; jmp rsp
0x00000000001b41ab : add byte ptr [rsi], 0xd ; ret
0x0000000000199e6b : add byte ptr [rsi], 0xd ; ret 0xedbc
0x00000000001acf0b : add byte ptr [rsi], 0xd ; ret 0xf568
0x00000000001b0043 : add byte ptr [rsi], 0xd ; ret 0xf5e0
0x00000000001957f3 : add byte ptr [rsi], ah ; add al, bh ; mov ch, ch ; call qword ptr [rdx]
0x0000000000187a98 : add byte ptr [rsi], ch ; cld ; jmp rax
0x0000000000189787 : add byte ptr [rsi], ch ; fucomi st(3) ; call rsp
0x000000000000d04f : add byte ptr [rsi], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rsi]
0x000000000006100b : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add cl, ch ; ret 0xffec
0x0000000000187250 : add byte ptr [rsi], dl ; sti ; call rax
0x00000000000e57a1 : add byte ptr [rsp + rax - 0x77], dh ; ret 0xeeeb
0x00000000000e5099 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x0000000000059c5c : add byte ptr [rsp + rax*2 - 0x75], ah ; and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x00000000001ab63b : add byte ptr [rsp + rax*8 - 0x2c4fffff], ch ; cmc ; jmp qword ptr [rsi]
0x00000000001ab623 : add byte ptr [rsp + rax*8 - 0x3bf7ffff], dl ; clc ; jmp qword ptr [rsi]
0x000000000018ec8f : add byte ptr [rsp + rax*8 - 6], dl ; jmp rsp
0x00000000001ab593 : add byte ptr [rsp + rax*8], al ; add dword ptr [rax], eax ; or ah, al ; clc ; jmp qword ptr [rsi]
0x00000000001ab5ab : add byte ptr [rsp + rax*8], bl ; add dword ptr [rax], eax ; mov al, -0x2d ; cmc ; jmp qword ptr [rsi]
0x00000000001ab5c3 : add byte ptr [rsp + rax*8], dh ; add dword ptr [rax], eax ; or ah, al ; clc ; jmp qword ptr [rsi]
0x0000000000195e3b : add byte ptr [rsp + rbp*2 - 0x6e100000], ch ; in eax, dx ; call qword ptr [rax]
0x0000000000195dc3 : add byte ptr [rsp + rbp*2], dh ; add byte ptr [rax], al ; test al, -0x6f ; in eax, dx ; jmp qword ptr [rax]
0x000000000018a3bf : add byte ptr [rsp + rbp*8], ah ; out dx, al ; call rsp
0x00000000001a1db3 : add byte ptr [rsp + rbp], ah ; add dword ptr [rax], eax ; js 0x1a1d93 ; int1 ; jmp qword ptr [rbx]
0x0000000000194dd3 : add byte ptr [rsp + rbx*2], al ; add byte ptr [rax], bh ; xchg eax, ebx ; in al, dx ; jmp qword ptr [rcx]
0x00000000001a8dab : add byte ptr [rsp + rbx*4], bl ; add dword ptr [rax], eax ; xor bpl, sil ; jmp qword ptr [rcx]
0x00000000001a8dc3 : add byte ptr [rsp + rbx*4], dh ; add dword ptr [rax], eax ; pop rax ; xor ch, dh ; jmp qword ptr [rcx]
0x0000000000198de3 : add byte ptr [rsp + rbx*4], dl ; add byte ptr [rax - 0x2f], bh ; in eax, dx ; call rcx
0x000000000016eaff : add byte ptr [rsp + rcx + 0xcbf0000], bh ; add byte ptr [rax], al ; ret 0xc
0x0000000000193dab : add byte ptr [rsp + rcx*2], bl ; add byte ptr [rax], al ; push rax ; jmp 0x193dbb
0x00000000001a7d9b : add byte ptr [rsp + rcx*4], cl ; add dword ptr [rax], eax ; nop ; cld ; hlt ; jmp rax
0x000000000018939f : add byte ptr [rsp + rcx], dl ; jmp 0x1893a7
0x00000000001a6e43 : add byte ptr [rsp + rdi*2 - 0x45c7ffff], dh ; hlt ; jmp qword ptr [rcx]
0x000000000019ae33 : add byte ptr [rsp + rdi*4 + 0x16b80000], ah ; out dx, al ; call qword ptr [rdi]
0x000000000019ee4b : add byte ptr [rsp + rdi*8 - 0x64000000], bh ; out dx, eax ; call qword ptr [rdi]
0x00000000001882e4 : add byte ptr [rsp + rdi*8 - 1], bh ; jo 0x18836c ; cld ; jmp rax
0x00000000001b4603 : add byte ptr [rsp + rdx*2 + 2], dh ; add al, cl ; jno 0x1b460a ; call qword ptr [rbx]
0x00000000001a45ab : add byte ptr [rsp + rdx*2], bl ; add dword ptr [rax], eax ; and byte ptr [rbx], ch ; jmp rdx
0x00000000001ac5eb : add byte ptr [rsp + rdx*8 + 1], bl ; add byte ptr [rax], ah ; out -0xb, al ; call qword ptr [rax]
0x00000000001ac5b3 : add byte ptr [rsp + rdx*8], ah ; add dword ptr [rax], eax ; sbb dh, ah ; cmc ; call qword ptr [rax]
0x000000000018c15f : add byte ptr [rsp + rsi - 0xa], al ; jmp rsp
0x0000000000195613 : add byte ptr [rsp - 0x10e80000], al ; in al, dx ; call qword ptr [rax]
0x00000000000f5791 : add byte ptr ds:[rdx + rax + 0x5b], dh ; ret
0x00000000000377ea : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000193cf4 : add byte ptr fs:[r8], al ; js 0x193d4b ; jmp 0x193d02
0x0000000000056744 : add byte ptr fs:[rax], al ; add al, ch ; ret
0x00000000000f8c7b : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x00000000000b7b65 : add byte ptr fs:[rax], al ; add byte ptr [rbx - 0x50f0ec18], al ; ret 0x8941
0x00000000001957f4 : add byte ptr fs:[rax], al ; clc ; mov ch, ch ; call qword ptr [rdx]
0x0000000000195615 : add byte ptr fs:[rax], al ; sbb bh, ch ; in al, dx ; call qword ptr [rax]
0x000000000007aeb0 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000cf55b : add byte ptr gs:[rax], al ; add byte ptr [rcx], ch ; ret 0x850f
0x0000000000195735 : add byte ptr gs:[rax], al ; or byte ptr [rbx - 0x13], bh ; jmp rcx
0x0000000000114013 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f14f3 : add byte ptr gs:[rcx + rcx*4 - 0x38], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000538e4 : add byte ptr ss:[rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x000000000005da97 : add byte ptr ss:[rbx + 0x5d], bl ; ret
0x0000000000059c5b : add byte ptr ss:[rsp + rax*2 - 0x75], ah ; and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x00000000001b83f7 : add ch, al ; add eax, 0x29f0000 ; add byte ptr [rax], al ; ret
0x0000000000118a59 : add ch, al ; loope 0x118aab ; idiv edi ; mov eax, ebx ; pop rbx ; ret
0x00000000000d3138 : add ch, al ; ret 0xf4c2
0x00000000000c6d02 : add ch, bl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000003687f : add ch, bl ; fpatan ; ret
0x0000000000187674 : add ch, bl ; sti ; jmp rax
0x00000000000c6c42 : add ch, bl ; xchg eax, esi ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000017789c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000001ace44 : add ch, byte ptr [rax - 0xb] ; jmp qword ptr [rdx]
0x000000000017789d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x0000000000110754 : add ch, byte ptr [rbx] ; add byte ptr [rax], al ; jne 0x110721 ; jmp 0x110719
0x00000000000b2e8a : add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000075d9a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000188648 : add ch, byte ptr [rdi - 0x516d0004] ; cld ; jmp qword ptr [rdx]
0x000000000018f1b1 : add ch, cl ; call rax
0x00000000001aa41c : add ch, cl ; hlt ; jmp qword ptr [rdx]
0x000000000005a42a : add ch, cl ; sar dil, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000000c55aa : add ch, cl ; xchg eax, edx ; idiv edi ; push rsi ; ret
0x00000000000195a7 : add ch, dh ; call qword ptr [rdi]
0x0000000000071dff : add cl, al ; out dx, al ; add al, -0x7d ; out 1, al ; mov eax, esi ; ret
0x00000000000fab27 : add cl, bl ; ret 0xcad9
0x00000000000f8b35 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x000000000009a6ec : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x00000000000a44a5 : add cl, byte ptr [rax + 0x29] ; ret 0x6fe9
0x00000000000a4419 : add cl, byte ptr [rax + 0x29] ; ret 0x8548
0x00000000000b0eb1 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000a448d : add cl, byte ptr [rax + 0x29] ; ret 0x8aeb
0x000000000003e81f : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000118793 : add cl, byte ptr [rax + 0x39] ; rcr dword ptr [rcx], -0x40 ; ret
0x0000000000077c0d : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000074a0a : add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x0000000000086026 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000061f19 : add cl, byte ptr [rax + 0x39] ; ret 0x8f0f
0x00000000000f8b36 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x000000000002c567 : add cl, byte ptr [rax + 1] ; ret 0x3b48
0x00000000000503e4 : add cl, byte ptr [rax + 1] ; ret 0x8348
0x00000000000809e1 : add cl, byte ptr [rax - 0x73] ; push rsp ; ret
0x000000000009a6ed : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000097367 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000188150 : add cl, byte ptr [rax - 0x786d0004] ; cld ; jmp qword ptr [rdx]
0x000000000007d102 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], -0xd ; ret
0x00000000000f4552 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], -0x7d ; ret 0x4808
0x0000000000027b4b : add cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000087810 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000000aef9d : add cl, byte ptr [rax - 0x7d] ; ret 0x491e
0x00000000000c4700 : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x000000000001fbeb : add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x00000000000c41dd : add cl, byte ptr [rax - 0x7d] ; ret 0x8401
0x000000000012ef59 : add cl, byte ptr [rax - 0x7d] ; ret 0xb804
0x000000000006d7e9 : add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x0000000000087873 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000012ef85 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x0000000000123f7b : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx - 0x7bf0fc1e] ; ret 1
0x000000000004971c : add cl, byte ptr [rbp + 0x39] ; ret
0x000000000014deb2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000003e7f9 : add cl, byte ptr [rcx + 0x29] ; ret
0x00000000000a6ecc : add cl, byte ptr [rcx + 0x39] ; ret
0x0000000000049478 : add cl, byte ptr [rcx + rcx*4 - 0x3e] ; jmp 0x49494
0x0000000000125fa2 : add cl, byte ptr [rcx - 0x77] ; ret 0xc148
0x00000000000d87ba : add cl, byte ptr [rcx - 0x7d] ; ret 0x4510
0x0000000000047ea0 : add cl, byte ptr [rcx - 0x7d] ; ret 0xe901
0x0000000000047599 : add cl, byte ptr [rcx - 0x7d] ; ret 0xf01
0x000000000002fbf4 : add cl, byte ptr [rdi] ; mov bh, -0x40 ; ret
0x00000000000ec87c : add cl, byte ptr [rdi] ; ret 0xb9eb
0x00000000001154b5 : add cl, byte ptr [rdi] ; ret 0xf3c3
0x00000000000ec76c : add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000ce4ef : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x000000000006e1e7 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000013d9eb : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], -0x6c ; ret 0xc085
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000503e3 : add cl, byte ptr es:[rax + 1] ; ret 0x8348
0x00000000000b4d4f : add cl, ch ; int 0xfa
0x0000000000059711 : add cl, ch ; jmp rax
0x000000000002c1b4 : add cl, ch ; ret
0x0000000000045e48 : add cl, ch ; ret 0xffe1
0x000000000006100f : add cl, ch ; ret 0xffec
0x00000000000b8a31 : add cl, ch ; ret 0xfff3
0x00000000000eb850 : add cl, ch ; ret 0xfffd
0x00000000000c3918 : add cl, ch ; ret 0xfffe
0x0000000000019547 : add cl, cl ; call qword ptr [rdi]
0x0000000000046db3 : add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x000000000011adc7 : add dh, al ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000010e25a : add dh, al ; add eax, 0x2b56ce ; add ecx, ebp ; ret
0x000000000017abbb : add dh, bh ; jmp rdi
0x0000000000171d67 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000014e063 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000036e87 : add dh, bl ; ret
0x00000000000a182b : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000001274f2 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001940fd : add dh, byte ptr [rcx + 0xa] ; ret
0x00000000001a1406 : add dh, byte ptr [rcx + rsi*8 - 1] ; sbb al, 0xd ; push rsp ; jae 0x1a1409 ; jmp qword ptr [rdx]
0x00000000000dc6bd : add dh, byte ptr [rcx] ; imul al ; jnp 0xdc6d3 ; sti ; call rcx
0x00000000001274f1 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000188b3f : add dh, cl ; mov gs, ecx ; call rsp
0x00000000001acfc0 : add dh, dh ; cmc ; call qword ptr [rcx]
0x000000000008256c : add dh, dh ; ret
0x00000000001365f2 : add dh, dh ; ret 0x7402
0x000000000008d1b8 : add dh, dh ; ret 0x7404
0x000000000006eda7 : add dh, dh ; ret 0x7420
0x00000000001630e7 : add dh, dh ; ret 0x7501
0x00000000001630f4 : add dh, dh ; ret 0x7502
0x0000000000163101 : add dh, dh ; ret 0x7504
0x0000000000073a16 : add dh, dh ; ret 0x7508
0x00000000001630b9 : add dh, dh ; ret 0x7510
0x00000000001630c6 : add dh, dh ; ret 0x7520
0x00000000000ec2ff : add dh, dh ; ret 0x7540
0x00000000000e03e1 : add dh, dh ; ret 0xf10
0x0000000000098ef2 : add dh, dh ; ret 0xf20
0x000000000004f625 : add dh, dh ; ret 0xf3f
0x0000000000098efb : add dh, dh ; ret 0xf40
0x000000000001955f : add dh, dl ; call qword ptr [rdi]
0x00000000000b0bf4 : add dil, r15b ; ret
0x000000000018e521 : add dl, bh ; jmp rsp
0x0000000000189b1f : add dl, bh ; pop rsp ; in eax, dx ; call rsp
0x00000000001a0871 : add dl, byte ptr [rax + 0x41100e0a] ; ret
0x00000000001afdd9 : add dl, byte ptr [rbp + 0xa] ; ret
0x00000000001b0cde : add dl, byte ptr [rsi + 0x41380e0a] ; ret
0x0000000000187e64 : add dl, byte ptr [rsi - 4] ; push qword ptr [rdx + 0x55] ; cld ; jmp rdx
0x00000000001b82ef : add dl, ch ; add al, 0 ; add byte ptr [rdx + 4], dl ; add byte ptr [rax], al ; ret
0x0000000000190d25 : add dl, ch ; jmp qword ptr [rdx]
0x00000000001a1980 : add dl, cl ; int1 ; jmp qword ptr [rax]
0x00000000001a5647 : add dl, dl ; ret 0xffe7
0x000000000019e1e4 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000047dde : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000257e0 : add dword ptr [r8 - 0x7d], r9d ; ret 0x4d02
0x000000000005d2c3 : add dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000109acf : add dword ptr [r8], eax ; mov rax, rdi ; pop rbx ; ret
0x000000000018aa0d : add dword ptr [r8], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; test al, -0x11 ; jmp rsp
0x00000000001a3745 : add dword ptr [r8], r8d ; cwde ; xchg dl, dh ; jmp qword ptr [rcx]
0x00000000001a3715 : add dword ptr [r8], r8d ; js 0x1a36a6 ; jmp qword ptr [rax]
0x00000000001a378d : add dword ptr [r8], r8d ; loopne 0x1a371e ; jmp qword ptr [rcx]
0x00000000001a375d : add dword ptr [r8], r8d ; mov al, -0x7a ; jmp qword ptr [rcx]
0x000000000018acbd : add dword ptr [r8], r8d ; xchg eax, esp ; fucomi st(7) ; jmp rsp
0x00000000000d2b54 : add dword ptr [r9 + 0x39], r8d ; ret
0x00000000000a235f : add dword ptr [r9 + 0x5c], eax ; ret
0x0000000000028454 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x00000000000d1738 : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x000000000015d761 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000004fcf3 : add dword ptr [rax + 0x29], ecx ; ret 0x8944
0x0000000000046ff9 : add dword ptr [rax + 0x39], ecx ; fdiv dword ptr [rbp - 0xf] ; pop rbx ; ret
0x00000000000282ee : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000097161 : add dword ptr [rax + 0x39], ecx ; ret 0x1a75
0x0000000000093eee : add dword ptr [rax + 0x39], ecx ; ret 0x860f
0x0000000000093d2d : add dword ptr [rax + 0x39], ecx ; ret 0x870f
0x000000000003947d : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x00000000000af4f2 : add dword ptr [rax + 0x39], ecx ; ret 0xe877
0x000000000003d7cf : add dword ptr [rax + 0x39], ecx ; ret 0xeb75
0x00000000000addd5 : add dword ptr [rax + 0x39], ecx ; ret 0xed77
0x0000000000098bf0 : add dword ptr [rax + 0x39], ecx ; ret 0xf077
0x000000000003816b : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x0000000000124511 : add dword ptr [rax + 0x63], ecx ; ret 0xd285
0x0000000000102be7 : add dword ptr [rax + 0xf], eax ; ret 0xc3f3
0x00000000000a6ec4 : add dword ptr [rax + 0xf], ecx ; ret 0xc148
0x0000000000055d13 : add dword ptr [rax + 1], ecx ; ret
0x000000000005a90e : add dword ptr [rax + 1], ecx ; ret 0x148
0x0000000000035316 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000d16b3 : add dword ptr [rax + 1], edi ; ret
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000030fc3 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x00000000000f8b32 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x000000000009a6c6 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x00000000001593c2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000e9834 : add dword ptr [rax - 0x77], ecx ; add eax, ebp ; ret
0x00000000000e8435 : add dword ptr [rax - 0x77], ecx ; add eax, ebp ; ret 0xf36f
0x000000000009733e : add dword ptr [rax - 0x77], ecx ; clc ; ret
0x00000000000bac5b : add dword ptr [rax - 0x77], ecx ; fmul dword ptr [rbx - 0x7cb7fbc0] ; ret
0x000000000007beab : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00000000000741bd : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000089301 : add dword ptr [rax - 0x77], ecx ; ret
0x00000000000e6090 : add dword ptr [rax - 0x77], ecx ; ret 0x348
0x00000000000c5090 : add dword ptr [rax - 0x77], ecx ; ret 0x97e9
0x00000000000c5300 : add dword ptr [rax - 0x77], ecx ; ret 0x9aeb
0x000000000002c406 : add dword ptr [rax - 0x77], ecx ; ret 0xf41
0x00000000001188f0 : add dword ptr [rax - 0x78], eax ; ja 0x1188fb ; ret
0x000000000008391e : add dword ptr [rax - 0x7b], ecx ; ret 0x2c75
0x00000000000830a2 : add dword ptr [rax - 0x7b], ecx ; ret 0x7075
0x000000000007ff90 : add dword ptr [rax - 0x7b], ecx ; ret 0x850f
0x00000000000d274d : add dword ptr [rax - 0x7cb7e9f4], ecx ; ret 0x4401
0x0000000000111989 : add dword ptr [rax - 0x7d], ecx ; cli ; add al, 0xf ; xchg eax, esi ; ret
0x000000000015f37a : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x00000000000e579c : add dword ptr [rax - 0x7d], ecx ; jns 0xe57a2 ; add byte ptr [rsp + rax - 0x77], dh ; ret 0xeeeb
0x0000000000097f08 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x0000000000022e4a : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000114822 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x000000000004790c : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000cae3a : add dword ptr [rax - 0x7d], ecx ; ret 0x4408
0x000000000003a969 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000009423b : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x000000000003ae9f : add dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x00000000000bd569 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c48
0x00000000000257e1 : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x00000000000a6f77 : add dword ptr [rax - 0x7d], ecx ; ret 0x7901
0x00000000000dd8bf : add dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000002e8f5 : add dword ptr [rax - 0x7d], ecx ; ret 0x8310
0x00000000000c436c : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000006d6fc : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x000000000006e0fb : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x00000000000226a2 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000000226c2 : add dword ptr [rax - 0x7d], ecx ; ret 0xc601
0x00000000000f04fe : add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x0000000000054ee3 : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000d4844 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], -0x7d ; ret 0x4001
0x00000000000da5f5 : add dword ptr [rax - 0x7d], r9d ; ret
0x00000000000e7ae9 : add dword ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000188fb5 : add dword ptr [rax], 0xea928e00 ; call rsp
0x00000000000fd704 : add dword ptr [rax], 1 ; ret
0x00000000001ab6fe : add dword ptr [rax], eax ; adc ah, dl ; cmc ; jmp qword ptr [rsi]
0x000000000018aa86 : add dword ptr [rax], eax ; adc al, -0x3e ; out dx, eax ; jmp rsp
0x00000000001a52ee : add dword ptr [rax], eax ; adc al, bh ; jmp qword ptr [rdi]
0x00000000001ab54e : add dword ptr [rax], eax ; adc bl, -0xb ; jmp qword ptr [rsi]
0x00000000001ad33e : add dword ptr [rax], eax ; adc bl, bh ; cmc ; call qword ptr [rax]
0x00000000001ad6ee : add dword ptr [rax], eax ; adc byte ptr [rax], al ; idiv bh ; ret 3
0x00000000001a085e : add dword ptr [rax], eax ; adc byte ptr [rax], cl ; int1 ; jmp rcx
0x00000000001a89be : add dword ptr [rax], eax ; adc byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a919e : add dword ptr [rax], eax ; adc byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a0fae : add dword ptr [rax], eax ; adc byte ptr [rsi - 0xf], al ; call qword ptr [rdx]
0x00000000001a8c2e : add dword ptr [rax], eax ; adc byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a2f0e : add dword ptr [rax], eax ; adc dl, bh ; int1 ; jmp qword ptr [rcx]
0x000000000018bede : add dword ptr [rax], eax ; add al, 0x2a ; cmc ; jmp rsp
0x000000000018a6f6 : add dword ptr [rax], eax ; add al, 0x36 ; out dx, eax ; call rsp
0x000000000018bd36 : add dword ptr [rax], eax ; add al, 0x7d ; hlt ; jmp rsp
0x0000000000103780 : add dword ptr [rax], eax ; add al, ch ; pop rax ; ret
0x0000000000053d4a : add dword ptr [rax], eax ; add al, ch ; pop rsi ; ret
0x00000000000aed15 : add dword ptr [rax], eax ; add al, ch ; ret
0x00000000001ac7ce : add dword ptr [rax], eax ; add bh, ah ; cmc ; call qword ptr [rax]
0x00000000000c41eb : add dword ptr [rax], eax ; add bh, dh ; ret
0x00000000001154be : add dword ptr [rax], eax ; add bl, al ; ret
0x00000000001ad36e : add dword ptr [rax], eax ; add bl, bh ; cmc ; call qword ptr [rax]
0x0000000000117ced : add dword ptr [rax], eax ; add bl, ch ; or eax, 0x4735b10f ; ret
0x0000000000117d99 : add dword ptr [rax], eax ; add bl, ch ; or eax, 0x9b35b10f ; ret 0x2a
0x000000000006eeaa : add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000b1b9c : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000045ca8 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000005ebb8 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000000d6ee4 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000000a7c56 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000000000012feb8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000c4eb6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x6bf08406], al ; ret 0xb60f
0x00000000000c8201 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add al, -0x32 ; jmp 0xc81d5
0x00000000000a3f0a : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; lock ; ret
0x00000000000e2fb5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x39], cl ; ret
0x00000000000d8bfa : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0xe283
0x00000000000bd3b7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000094e95 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002e85d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000000933d9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000e2f63 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x00000000000759e8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rsi + rsi*4 - 0xa] ; ret 0x7508
0x000000000008366a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000005c035 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f3621 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000002678f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000001091dd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d49a0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000138cad : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000007e00a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x000000000008bcd0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000013f14f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000138c01 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000002bb44 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000096956 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; stc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000007485b : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000171d6a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000170f1a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000170d42 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000170d3a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000001714d2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000000f9cca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f32bf : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000120175 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x12c416
0x00000000000efaa6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0xebd26
0x00000000000f68f1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x00000000001650a1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x1650b8 ; neg eax ; ret
0x00000000000a3761 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xa3771 ; neg eax ; ret
0x0000000000162ff7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x163008 ; neg eax ; ret
0x00000000000bacb3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbac80
0x000000000004ba5d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000012f5a3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x12f5b6 ; ret
0x000000000012f5e3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x12f5f6 ; ret
0x00000000000a4af6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x28] ; call rbx
0x0000000000039c82 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x000000000012488b : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000086928 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000012ef5f : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rdx ; ret
0x00000000001219ea : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f6ade : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000000f69aa : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x000000000010656d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call 0x102869
0x00000000000f6922 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000000757f1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call 0x71a79
0x000000000012099e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call qword ptr [rax]
0x000000000012a252 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000000f6d68 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000006e2ab : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006d930 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000074541 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r12 ; ret
0x000000000005381e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r13 ; ret
0x0000000000053750 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r14 ; ret
0x0000000000075a7c : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010287e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000f9c63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000002bec1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000005e22e : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a6020 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa5fd7
0x00000000000a8860 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa8817
0x00000000000aaf10 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xaaec7
0x00000000000eb06f : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8b49
0x0000000000117cfc : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; push rdx ; ret
0x0000000000117da8 : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; sahf ; ret 0x2a
0x00000000000da456 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000711b4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x00000000000ebf84 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000021999 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000dad3d : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x78], cl ; or byte ptr [rax + 0x63], cl ; ret 0xc148
0x00000000000f06e7 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x6117c385], cl ; ret
0x00000000000768ce : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fe08], al ; ret
0x0000000000085e8f : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x000000000008609f : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x0000000000085c21 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x0000000000095214 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000248bc : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000013044d : add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret 0x894c
0x00000000000b3053 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000b7d1e : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000000e2488 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011545e : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x0000000000115499 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xff83
0x00000000000e03ed : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d
0x0000000000097a1a : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000065c28 : add dword ptr [rax], eax ; add cl, ch ; ret
0x000000000013515b : add dword ptr [rax], eax ; add cl, ch ; ret 0xfffe
0x00000000001acfbe : add dword ptr [rax], eax ; add dh, dh ; cmc ; call qword ptr [rcx]
0x00000000001352c4 : add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000001630e5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00000000001630f2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x00000000001630ff : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000001630b7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000001630c4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000001630d1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000001a197e : add dword ptr [rax], eax ; add dl, cl ; int1 ; jmp qword ptr [rax]
0x00000000000f1734 : add dword ptr [rax], eax ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000f1231 : add dword ptr [rax], eax ; add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000054420 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x000000000018b5ee : add dword ptr [rax], eax ; and al, 0xffffffffffffffa9 ; call rsp
0x000000000018a3be : add dword ptr [rax], eax ; and al, 0xffffffffffffffec ; out dx, al ; call rsp
0x00000000001ab4ee : add dword ptr [rax], eax ; and bl, dl ; cmc ; jmp qword ptr [rsi]
0x000000000019f8be : add dword ptr [rax], eax ; and byte ptr [rbp - 0x10], bl ; call qword ptr [rax]
0x00000000001a45ae : add dword ptr [rax], eax ; and byte ptr [rbx], ch ; jmp rdx
0x00000000001a31ae : add dword ptr [rax], eax ; and byte ptr [rdx + rsi*8], al ; jmp rdx
0x00000000001a718e : add dword ptr [rax], eax ; and cl, al ; hlt ; jmp qword ptr [rsi]
0x00000000001ac5ee : add dword ptr [rax], eax ; and dh, ah ; cmc ; call qword ptr [rax]
0x00000000001ad26e : add dword ptr [rax], eax ; and dl, bh ; cmc ; call qword ptr [rax]
0x00000000001a8846 : add dword ptr [rax], eax ; call 0x111a7d7a
0x00000000001a2b66 : add dword ptr [rax], eax ; call 0x131a1d5c
0x00000000001ac566 : add dword ptr [rax], eax ; call 0x141abb57
0x00000000001a6266 : add dword ptr [rax], eax ; call 0x221a56ea
0x00000000001a6df6 : add dword ptr [rax], eax ; call 0x221a62bb
0x00000000001a7286 : add dword ptr [rax], eax ; call 0x231a675a
0x00000000001a9356 : add dword ptr [rax], eax ; call 0xffffffffe11a88a4
0x000000000018a506 : add dword ptr [rax], eax ; cdq ; add edi, ebp ; call rsp
0x00000000001a07a6 : add dword ptr [rax], eax ; clc ; cld ; jmp qword ptr [rbx]
0x00000000001a9186 : add dword ptr [rax], eax ; clc ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001ac536 : add dword ptr [rax], eax ; clc ; in eax, -0xb ; call qword ptr [rax]
0x00000000001a6076 : add dword ptr [rax], eax ; clc ; jae 0x1a6074 ; jmp qword ptr [rcx]
0x000000000019f586 : add dword ptr [rax], eax ; clc ; lock ; jmp qword ptr [rdi]
0x00000000001ac786 : add dword ptr [rax], eax ; clc ; out -0xb, al ; call qword ptr [rax]
0x00000000001a12e6 : add dword ptr [rax], eax ; clc ; ret
0x00000000001ab6e6 : add dword ptr [rax], eax ; clc ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001a89a6 : add dword ptr [rax], eax ; clc ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000001a37a6 : add dword ptr [rax], eax ; clc ; xchg dl, dh ; jmp qword ptr [rcx]
0x00000000001ab506 : add dword ptr [rax], eax ; cmp bl, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001a910e : add dword ptr [rax], eax ; cmp byte ptr [rax], -0xb ; jmp qword ptr [rcx]
0x000000000019f686 : add dword ptr [rax], eax ; cmp byte ptr [rcx - 0x10], dl ; call qword ptr [rsi]
0x00000000001a8496 : add dword ptr [rax], eax ; cmp byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x00000000001a5726 : add dword ptr [rax], eax ; cmp byte ptr [rsi], al ; hlt ; jmp rdx
0x00000000001ac9d6 : add dword ptr [rax], eax ; cmp ch, ch ; cmc ; call qword ptr [rdi]
0x00000000001a7796 : add dword ptr [rax], eax ; cmp dl, bl ; hlt ; call qword ptr [rax]
0x00000000001a72e6 : add dword ptr [rax], eax ; cmp dl, cl ; hlt ; jmp qword ptr [rcx]
0x000000000018aad6 : add dword ptr [rax], eax ; cmp dl, cl ; out dx, eax ; jmp rsp
0x000000000018a4e6 : add dword ptr [rax], eax ; cmp eax, dword ptr [rax] ; out dx, eax ; call rsp
0x00000000001a91ce : add dword ptr [rax], eax ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000001a3106 : add dword ptr [rax], eax ; cwde ; add edx, esi ; call rdi
0x00000000001a9126 : add dword ptr [rax], eax ; cwde ; cmp ch, dh ; jmp qword ptr [rcx]
0x000000000018b90e : add dword ptr [rax], eax ; cwde ; je 0x18b90b ; call rsp
0x00000000001ab566 : add dword ptr [rax], eax ; cwde ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001a69f6 : add dword ptr [rax], eax ; cwde ; scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a87e6 : add dword ptr [rax], eax ; cwde ; sub ch, dh ; jmp qword ptr [rcx]
0x00000000001a3746 : add dword ptr [rax], eax ; cwde ; xchg dl, dh ; jmp qword ptr [rcx]
0x00000000001ab4a6 : add dword ptr [rax], eax ; fcom st(2) ; cmc ; jmp qword ptr [rsi]
0x00000000001a77f6 : add dword ptr [rax], eax ; fcomp st(2) ; hlt ; call qword ptr [rdx]
0x00000000001a8ee6 : add dword ptr [rax], eax ; fdiv dword ptr [rdx] ; cmc ; jmp qword ptr [rcx]
0x00000000001a2cd6 : add dword ptr [rax], eax ; fdiv st(0) ; int1 ; jmp qword ptr [rdx]
0x00000000001ac926 : add dword ptr [rax], eax ; fsubr st(2) ; cmc ; jmp qword ptr [rax]
0x000000000018b35e : add dword ptr [rax], eax ; hlt ; retf ; int1 ; call rsp
0x000000000018b266 : add dword ptr [rax], eax ; in al, -0x4f ; int1 ; call rsp
0x000000000018bb66 : add dword ptr [rax], eax ; in al, -0x5f ; jmp rsp
0x000000000018b58e : add dword ptr [rax], eax ; in al, -0x78 ; jmp rsp
0x000000000018abd6 : add dword ptr [rax], eax ; in eax, -0x33 ; out dx, eax ; jmp rsp
0x00000000001a5f36 : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x000000000018ac46 : add dword ptr [rax], eax ; jbe 0x18ac1e ; out dx, eax ; call rsp
0x000000000018bc0e : add dword ptr [rax], eax ; je 0x18bc2a ; hlt ; call rsp
0x00000000001a102e : add dword ptr [rax], eax ; jl 0x1a1029 ; call qword ptr [rax]
0x00000000001a62c6 : add dword ptr [rax], eax ; jns 0x1a62c4 ; jmp qword ptr [rcx]
0x00000000001a302e : add dword ptr [rax], eax ; jo 0x1a3032 ; int1 ; jmp qword ptr [rcx]
0x00000000001a5b8e : add dword ptr [rax], eax ; jo 0x1a5bfa ; hlt ; jmp qword ptr [rcx]
0x00000000001a6ebe : add dword ptr [rax], eax ; jo 0x1a6e82 ; hlt ; jmp qword ptr [rcx]
0x00000000001a6fce : add dword ptr [rax], eax ; jo 0x1a6f95 ; hlt ; jmp qword ptr [rcx]
0x00000000001a8a1e : add dword ptr [rax], eax ; jo 0x1a8a52 ; cmc ; jmp qword ptr [rcx]
0x00000000001ab75e : add dword ptr [rax], eax ; jo 0x1ab73b ; cmc ; jmp qword ptr [rsi]
0x00000000001ac31e : add dword ptr [rax], eax ; jo 0x1ac30a ; cmc ; call qword ptr [rax]
0x00000000001a0a26 : add dword ptr [rax], eax ; js 0x1a0a44 ; int1 ; jmp qword ptr [rcx]
0x00000000001a1db6 : add dword ptr [rax], eax ; js 0x1a1d90 ; int1 ; jmp qword ptr [rbx]
0x00000000001a3716 : add dword ptr [rax], eax ; js 0x1a36a5 ; jmp qword ptr [rax]
0x00000000001a7906 : add dword ptr [rax], eax ; js 0x1a78ec ; hlt ; jmp qword ptr [rcx]
0x00000000001a8116 : add dword ptr [rax], eax ; js 0x1a8129 ; cmc ; call rsp
0x00000000001a8206 : add dword ptr [rax], eax ; js 0x1a821a ; cmc ; jmp qword ptr [rcx]
0x00000000001a8af6 : add dword ptr [rax], eax ; js 0x1a8b2b ; cmc ; jmp qword ptr [rcx]
0x00000000001ab446 : add dword ptr [rax], eax ; js 0x1ab421 ; cmc ; jmp qword ptr [rsi]
0x000000000018af16 : add dword ptr [rax], eax ; lock ; jmp rsp
0x00000000001a60be : add dword ptr [rax], eax ; lock adc al, -7 ; call qword ptr [rax]
0x00000000001aba9e : add dword ptr [rax], eax ; lock cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rsi]
0x00000000001ac54e : add dword ptr [rax], eax ; lock in eax, -0xb ; call qword ptr [rax]
0x00000000001a095e : add dword ptr [rax], eax ; lock or ecx, esi ; call qword ptr [rcx]
0x00000000001a08de : add dword ptr [rax], eax ; lock or ecx, esi ; jmp qword ptr [rcx]
0x00000000001a827e : add dword ptr [rax], eax ; lock or esi, ebp ; jmp qword ptr [rcx]
0x00000000001ab4be : add dword ptr [rax], eax ; lock sal ch, cl ; jmp qword ptr [rsi]
0x00000000001a549e : add dword ptr [rax], eax ; lock sti ; call qword ptr [rsi]
0x00000000001a8b6e : add dword ptr [rax], eax ; lock sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001a8efe : add dword ptr [rax], eax ; lock xor dh, ch ; jmp qword ptr [rcx]
0x000000000018acee : add dword ptr [rax], eax ; loopne 0x18ace7 ; jmp rsp
0x00000000001a378e : add dword ptr [rax], eax ; loopne 0x1a371d ; jmp qword ptr [rcx]
0x00000000001a5c3e : add dword ptr [rax], eax ; loopne 0x1a5caa ; hlt ; jmp qword ptr [rcx]
0x00000000001a605e : add dword ptr [rax], eax ; loopne 0x1a60da ; hlt ; jmp qword ptr [rcx]
0x00000000001a898e : add dword ptr [rax], eax ; loopne 0x1a89c1 ; cmc ; jmp qword ptr [rcx]
0x00000000001a8d7e : add dword ptr [rax], eax ; loopne 0x1a8db6 ; cmc ; jmp qword ptr [rcx]
0x00000000001ab6ce : add dword ptr [rax], eax ; loopne 0x1ab6aa ; cmc ; jmp qword ptr [rsi]
0x000000000018a35e : add dword ptr [rax], eax ; mov ah, -0x2a ; out dx, al ; call rsp
0x000000000018bc7e : add dword ptr [rax], eax ; mov ah, 0x33 ; hlt ; jmp rsp
0x00000000001ab776 : add dword ptr [rax], eax ; mov ah, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001ab57e : add dword ptr [rax], eax ; mov al, -0x2d ; cmc ; jmp qword ptr [rsi]
0x00000000001a170e : add dword ptr [rax], eax ; mov al, -0x3a ; int1 ; call qword ptr [rsi]
0x00000000001a134e : add dword ptr [rax], eax ; mov al, -0x3c ; int1 ; call qword ptr [rdx]
0x00000000001a6b9e : add dword ptr [rax], eax ; mov al, -0x4e ; hlt ; call qword ptr [rsi]
0x00000000001a6afe : add dword ptr [rax], eax ; mov al, -0x4f ; hlt ; jmp qword ptr [rcx]
0x00000000001a6a0e : add dword ptr [rax], eax ; mov al, -0x52 ; hlt ; jmp qword ptr [rcx]
0x00000000001a375e : add dword ptr [rax], eax ; mov al, -0x7a ; jmp qword ptr [rcx]
0x00000000001ad20e : add dword ptr [rax], eax ; mov al, -8 ; cmc ; call qword ptr [rax]
0x00000000001a87fe : add dword ptr [rax], eax ; mov al, 0x28 ; cmc ; jmp qword ptr [rcx]
0x00000000001a8bfe : add dword ptr [rax], eax ; mov al, 0x2d ; cmc ; jmp qword ptr [rcx]
0x00000000001a913e : add dword ptr [rax], eax ; mov al, 0x38 ; cmc ; jmp qword ptr [rcx]
0x00000000001a3046 : add dword ptr [rax], eax ; mov bl, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a6206 : add dword ptr [rax], eax ; mov byte ptr [rax - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001a8df6 : add dword ptr [rax], eax ; mov byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a36 : add dword ptr [rax], eax ; mov byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a8c76 : add dword ptr [rax], eax ; mov byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001ad456 : add dword ptr [rax], eax ; mov dl, bh ; cmc ; jmp rsp
0x0000000000097825 : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x0000000000109ad0 : add dword ptr [rax], eax ; mov rax, rdi ; pop rbx ; ret
0x0000000000097751 : add dword ptr [rax], eax ; mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x000000000018bf1e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; cmc ; inc esp ; ret
0x000000000018c006 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000018aa0e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; test al, -0x11 ; jmp rsp
0x00000000001a7d9e : add dword ptr [rax], eax ; nop ; cld ; hlt ; jmp rax
0x00000000001a3a3e : add dword ptr [rax], eax ; nop ; mov edx, esi ; call qword ptr [rdx]
0x00000000001ab45e : add dword ptr [rax], eax ; nop ; sal ch, cl ; jmp qword ptr [rsi]
0x00000000001a8b0e : add dword ptr [rax], eax ; nop ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001ab596 : add dword ptr [rax], eax ; or ah, al ; clc ; jmp qword ptr [rsi]
0x00000000001ac7b6 : add dword ptr [rax], eax ; or bh, ah ; cmc ; call qword ptr [rax]
0x00000000001ad356 : add dword ptr [rax], eax ; or bl, bh ; cmc ; call qword ptr [rax]
0x00000000001ab4d6 : add dword ptr [rax], eax ; or bl, dl ; cmc ; jmp qword ptr [rsi]
0x000000000019f466 : add dword ptr [rax], eax ; or byte ptr [rax - 0x10], cl ; jmp rsi
0x000000000019f8a6 : add dword ptr [rax], eax ; or byte ptr [rbp - 0x10], bl ; jmp qword ptr [rdx]
0x00000000001a09c6 : add dword ptr [rax], eax ; pop rax ; adc al, -0xf ; jmp qword ptr [rax]
0x00000000001a0806 : add dword ptr [rax], eax ; pop rax ; add al, -0xf ; call qword ptr [rax]
0x00000000001a91e6 : add dword ptr [rax], eax ; pop rax ; cmp ebp, esi ; jmp rbx
0x00000000001a5206 : add dword ptr [rax], eax ; pop rax ; div bl ; jmp qword ptr [rax]
0x00000000001abca6 : add dword ptr [rax], eax ; pop rax ; fdivrp st(5) ; call qword ptr [rax]
0x00000000001a3016 : add dword ptr [rax], eax ; pop rax ; sti ; int1 ; jmp qword ptr [rcx]
0x00000000001a8a06 : add dword ptr [rax], eax ; pop rax ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a8dc6 : add dword ptr [rax], eax ; pop rax ; xor ch, dh ; jmp qword ptr [rcx]
0x000000000018a8d6 : add dword ptr [rax], eax ; pop rcx ; out dx, eax ; jmp rsp
0x00000000001aca1e : add dword ptr [rax], eax ; push rax ; in eax, dx ; cmc ; call qword ptr [rax]
0x00000000001ac1ce : add dword ptr [rax], eax ; push rax ; loope 0x1ac1cd ; call qword ptr [rcx]
0x00000000001ab51e : add dword ptr [rax], eax ; push rax ; sal ebp, cl ; jmp qword ptr [rsi]
0x000000000018b9fe : add dword ptr [rax], eax ; pushfq ; mov ebx, esi ; jmp rsp
0x00000000001ab48e : add dword ptr [rax], eax ; rcl dl, -0xb ; jmp qword ptr [rsi]
0x00000000001a788e : add dword ptr [rax], eax ; rcr ah ; hlt ; jmp qword ptr [rcx]
0x00000000001a79ae : add dword ptr [rax], eax ; rcr ch ; hlt ; call rbx
0x00000000001a794e : add dword ptr [rax], eax ; rcr ch, -0xc ; jmp qword ptr [rcx]
0x00000000000876d9 : add dword ptr [rax], eax ; ret
0x000000000018a41e : add dword ptr [rax], eax ; ret 0xeef5
0x00000000001ae436 : add dword ptr [rax], eax ; ret 0xf619
0x000000000018aa8e : add dword ptr [rax], eax ; ret 0xffef
0x000000000018bff6 : add dword ptr [rax], eax ; ret 0xfff5
0x00000000001a173e : add dword ptr [rax], eax ; rol dh, -0xf ; call qword ptr [rbx]
0x00000000001a1a3e : add dword ptr [rax], eax ; ror bh, 1 ; int1 ; call rsi
0x00000000001a824e : add dword ptr [rax], eax ; ror byte ptr [rbx], -0xb ; jmp qword ptr [rcx]
0x000000000018ef66 : add dword ptr [rax], eax ; salc ; sti ; call rsp
0x00000000001ad326 : add dword ptr [rax], eax ; sbb bl, bh ; cmc ; call qword ptr [rax]
0x000000000019f8d6 : add dword ptr [rax], eax ; sbb byte ptr [rbp - 0x10], bl ; call qword ptr [rdx]
0x00000000001a81a6 : add dword ptr [rax], eax ; sbb byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a6296 : add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001a4c16 : add dword ptr [rax], eax ; sbb byte ptr [rdi - 0xd], ch ; jmp rax
0x00000000001ac5b6 : add dword ptr [rax], eax ; sbb dh, ah ; cmc ; call qword ptr [rax]
0x00000000001ad286 : add dword ptr [rax], eax ; sbb dl, bh ; cmc ; call qword ptr [rax]
0x00000000001abbc6 : add dword ptr [rax], eax ; sbb dl, bl ; cmc ; call qword ptr [rax]
0x00000000001a2a4e : add dword ptr [rax], eax ; shl ah, -0xf ; jmp rsi
0x00000000001a86fe : add dword ptr [rax], eax ; shl byte ptr [rdi], -0xb ; jmp qword ptr [rcx]
0x00000000001a8cbe : add dword ptr [rax], eax ; shr byte ptr [rsi], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001a2f9e : add dword ptr [rax], eax ; sti ; int1 ; jmp qword ptr [rcx]
0x00000000001a568e : add dword ptr [rax], eax ; stosb byte ptr [rdi], al ; ret 0xffe7
0x00000000001ab716 : add dword ptr [rax], eax ; sub ah, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001a8ac6 : add dword ptr [rax], eax ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001a3eee : add dword ptr [rax], eax ; sub al, -0xe ; jmp rdx
0x00000000001a3e86 : add dword ptr [rax], eax ; sub bh, bl ; call qword ptr [rdx]
0x00000000001a2f86 : add dword ptr [rax], eax ; sub bl, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a87ce : add dword ptr [rax], eax ; sub byte ptr [rax], -0xb ; jmp qword ptr [rcx]
0x00000000001a89d6 : add dword ptr [rax], eax ; sub byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a91b6 : add dword ptr [rax], eax ; sub byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a8c46 : add dword ptr [rax], eax ; sub byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a89ee : add dword ptr [rax], eax ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a7936 : add dword ptr [rax], eax ; test al, -0x23 ; hlt ; jmp qword ptr [rcx]
0x00000000001ab476 : add dword ptr [rax], eax ; test al, -0x2e ; cmc ; jmp qword ptr [rsi]
0x00000000001a86e6 : add dword ptr [rax], eax ; test al, 0x27 ; cmc ; jmp qword ptr [rcx]
0x00000000001a8236 : add dword ptr [rax], eax ; test al, 0xb ; cmc ; jmp qword ptr [rcx]
0x000000000018a726 : add dword ptr [rax], eax ; test byte ptr [rbx], bh ; out dx, eax ; call rsp
0x000000000018bef6 : add dword ptr [rax], eax ; test byte ptr [rdx], bh ; cmc ; call rsp
0x000000000018acbe : add dword ptr [rax], eax ; xchg eax, esp ; fucomi st(7) ; jmp rsp
0x000000000018ef26 : add dword ptr [rax], eax ; xchg eax, esp ; push rdx ; sti ; call rsp
0x000000000018b64e : add dword ptr [rax], eax ; xchg eax, esp ; ret
0x000000000018cb0e : add dword ptr [rax], eax ; xchg eax, esp ; sub esi, edi ; call rsp
0x000000000018f0d6 : add dword ptr [rax], eax ; xlatb ; std ; jmp rsp
0x000000000018b8f6 : add dword ptr [rax], eax ; xor al, 0x72 ; jmp rsp
0x000000000018c15e : add dword ptr [rax], eax ; xor al, 0xfffffff6 ; jmp rsp
0x000000000018be4e : add dword ptr [rax], eax ; xor al, 0xffffffffffffffd7 ; hlt ; jmp rsp
0x000000000018f176 : add dword ptr [rax], eax ; xor al, 0xffffffffffffffe1 ; std ; jmp rsp
0x00000000001a8dae : add dword ptr [rax], eax ; xor bpl, sil ; jmp qword ptr [rcx]
0x00000000001a81be : add dword ptr [rax], eax ; xor byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a0ebe : add dword ptr [rax], eax ; xor byte ptr [rdi], bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a78be : add dword ptr [rax], eax ; xor ch, bl ; hlt ; jmp qword ptr [rcx]
0x0000000000092193 : add dword ptr [rax], edi ; ret 0x4788
0x000000000018aa85 : add dword ptr [rax], r8d ; adc al, -0x3e ; out dx, eax ; jmp rsp
0x000000000008c215 : add dword ptr [rax], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001a37a5 : add dword ptr [rax], r8d ; clc ; xchg dl, dh ; jmp qword ptr [rcx]
0x000000000018aa8d : add dword ptr [rax], r8d ; ret 0xffef
0x00000000000c926b : add dword ptr [rbp + 0x1441204], ecx ; ret 0xc8d
0x0000000000096deb : add dword ptr [rbp + 0x19], eax ; rol byte ptr [rcx - 0x7d], cl ; ret 0x8305
0x00000000000d8d33 : add dword ptr [rbp + 0x39], eax ; ret 0x677e
0x00000000000d4803 : add dword ptr [rbp + 0x39], eax ; ret 0x8e0f
0x00000000001345f3 : add dword ptr [rbp + 0x5c410028], eax ; jmp rax
0x00000000000c8f71 : add dword ptr [rbp + 0x75], ebx ; jmp 0xc8fc4
0x00000000000375da : add dword ptr [rbp + 0xb], esi ; xor eax, eax ; nop ; ret
0x0000000000109aac : add dword ptr [rbp + 0xf], eax ; mov dh, 0x42 ; dec dword ptr [rcx - 0x7d] ; ret
0x00000000000b9a0f : add dword ptr [rbp + 1], ecx ; ret
0x00000000000a3d37 : add dword ptr [rbp - 0x1a], esi ; mov rax, rbx ; pop rbx ; ret
0x0000000000098758 : add dword ptr [rbp - 0x1b], esi ; mov rax, rbx ; pop rbx ; ret
0x0000000000038194 : add dword ptr [rbp - 0x1f], esi ; mov eax, 1 ; ret
0x0000000000098551 : add dword ptr [rbp - 0x3c], esi ; nop dword ptr [rax] ; ret
0x000000000007e13f : add dword ptr [rbp - 0x77], ecx ; ret
0x00000000000d2954 : add dword ptr [rbp - 0x79], esi ; pop rbx ; ret
0x000000000010ca09 : add dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x17], -0xd ; ret
0x00000000000980bc : add dword ptr [rbp - 0xf], esi ; ret
0x0000000000097f0c : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x000000000014df22 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000096836 : add dword ptr [rbx + 0x294803e0], eax ; ret
0x00000000000026fe : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x000000000008174b : add dword ptr [rbx + 0x33da7e05], ecx ; add byte ptr [rcx], bh ; ret 0xa7e
0x0000000000034523 : add dword ptr [rbx + 0xf450afa], eax ; ret 0x8348
0x00000000000dc7fd : add dword ptr [rbx + rcx*4 - 0xa], esi ; ret 0x7408
0x00000000001138e1 : add dword ptr [rbx - 0x2037b], ecx ; dec dword ptr [rax + 0x39] ; ret 0x870f
0x000000000002e8f2 : add dword ptr [rbx - 0x7cb7fe39], eax ; ret 0x8310
0x00000000000d19d8 : add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x00000000000d3fbd : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x000000000007decf : add dword ptr [rbx - 0xd], ebx ; ret
0x00000000001b1e5a : add dword ptr [rbx], eax ; ret
0x00000000001283d1 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x00000000000a422f : add dword ptr [rcx + 0x39], eax ; ret
0x00000000000da05e : add dword ptr [rcx + 0x39], eax ; ret 0x267e
0x00000000001147a1 : add dword ptr [rcx + 0x39], eax ; ret 0xd975
0x00000000000da084 : add dword ptr [rcx + 0x39], eax ; ret 0xda7f
0x0000000000092d18 : add dword ptr [rcx + 0x39], ecx ; ret
0x000000000012dd3c : add dword ptr [rcx + 0x48], esi ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000a2360 : add dword ptr [rcx + 0x5c], eax ; ret
0x000000000011e1e3 : add dword ptr [rcx + 0x5d], eax ; ret
0x0000000000098583 : add dword ptr [rcx + 0xf], eax ; mov dh, 0x49 ; dec dword ptr [rcx - 0x7d] ; ret 0x8401
0x000000000004090c : add dword ptr [rcx + 1], ecx ; ret
0x0000000000028ce5 : add dword ptr [rcx + rcx*4 + 0x55], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x000000000011b6ba : add dword ptr [rcx + rcx*4 - 0x5c], ecx ; ret
0x00000000000478a4 : add dword ptr [rcx - 0x3a], eax ; jmp qword ptr [r8]
0x00000000000b2e4d : add dword ptr [rcx - 0x73], eax ; push rax ; add eax, dword ptr [rdi + rcx + 0x48] ; ret 0x93ba
0x000000000002a65b : add dword ptr [rcx - 0x75], eax ; or ecx, dword ptr [rax - 0x77] ; ret 0xc889
0x000000000009a706 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000124879 : add dword ptr [rcx - 0x77], eax ; add byte ptr [rax + 1], bh ; ret
0x000000000005af53 : add dword ptr [rcx - 0x77], ecx ; ret 0x76e9
0x0000000000047596 : add dword ptr [rcx - 0x78], eax ; add cl, byte ptr [rcx - 0x7d] ; ret 0xf01
0x00000000000a9743 : add dword ptr [rcx - 0x7d], ecx ; jmp 0xffffffffc28ddf53
0x000000000002a855 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000118b0f : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000a86f5 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4104
0x00000000000d93af : add dword ptr [rcx - 0x7d], ecx ; ret 0x4504
0x000000000018b645 : add dword ptr [rcx], 0 ; ret
0x00000000001a72e5 : add dword ptr [rcx], 0xf4ca3800 ; jmp qword ptr [rcx]
0x00000000001a72fd : add dword ptr [rcx], 0xf4ca5000 ; jmp qword ptr [rcx]
0x00000000000a3f6b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000001154c5 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x0000000000065b9a : add dword ptr [rcx], ebp ; ret
0x00000000000fda3b : add dword ptr [rcx], edi ; fmul dword ptr [rdi] ; ret
0x00000000000e40fb : add dword ptr [rcx], edi ; ret
0x00000000000e3eec : add dword ptr [rcx], edi ; ret 0x8c0f
0x0000000000047253 : add dword ptr [rcx], edi ; ret 0xb87f
0x00000000000d8290 : add dword ptr [rcx], edi ; ret 0xd675
0x00000000000dd15b : add dword ptr [rcx], edi ; ror byte ptr [rdi], 1 ; ret 0xc339
0x0000000000066821 : add dword ptr [rcx], esi ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000012f280 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000012f290 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00000000001662fa : add dword ptr [rdi + 3], esi ; ret
0x00000000000359c6 : add dword ptr [rdi + rbx*2], edi ; je 0x359e1 ; jmp 0x35995
0x0000000000093767 : add dword ptr [rdi - 0x1a], edi ; ret
0x0000000000094c3c : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026e6a : add dword ptr [rdi], 1 ; jmp 0x26e36
0x00000000001ab161 : add dword ptr [rdi], 3 ; add dword ptr [rdx], r9d ; ret
0x0000000000195704 : add dword ptr [rdi], 3 ; ret
0x0000000000119c60 : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000000d1866 : add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000000d5a96 : add dword ptr [rdi], ecx ; lahf ; ret 0xee9
0x000000000002fcd5 : add dword ptr [rdi], ecx ; mov bh, -0x40 ; ret
0x0000000000049b0b : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000011b2e0 : add dword ptr [rdi], ecx ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x0000000000098650 : add dword ptr [rdi], ecx ; mov dh, 0x46 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000b7eae : add dword ptr [rdi], ecx ; sahf ; ret 0x1fbf
0x000000000015b23e : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000c4c0f : add dword ptr [rdi], ecx ; xchg byte ptr [rdi - 0xa000000], bh ; ret
0x0000000000112abb : add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000000000047b11 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000019bfa4 : add dword ptr [rdi], esi ; out dx, al ; jmp qword ptr [rdx]
0x000000000012b8e3 : add dword ptr [rdi], esi ; sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000000a2832 : add dword ptr [rdx + 0x2b], 0xd7748104 ; ret
0x000000000009a6c4 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x000000000005e1b8 : add dword ptr [rdx + 4], 1 ; ret
0x000000000005e238 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000fd44b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000001913dd : add dword ptr [rdx], 0x44 ; ret
0x00000000001a13cc : add dword ptr [rdx], 0x4a ; ret
0x000000000019d0b4 : add dword ptr [rdx], 0x51 ; ret
0x00000000001ab985 : add dword ptr [rdx], 0x57 ; ret
0x0000000000193fa4 : add dword ptr [rdx], 0x63 ; ret
0x000000000019d0bd : add dword ptr [rdx], 0x65 ; ret
0x00000000001b72c5 : add dword ptr [rdx], 0xf7f9c800 ; call qword ptr [rax]
0x00000000001b72dd : add dword ptr [rdx], 0xfaf2b000 ; call rcx
0x0000000000197014 : add dword ptr [rdx], 2 ; pushfq ; ret
0x000000000019d534 : add dword ptr [rdx], 2 ; ret
0x000000000019c5fc : add dword ptr [rdx], 3 ; add al, byte ptr [rcx] ; ret
0x000000000018cbbd : add dword ptr [rdx], eax ; add byte ptr [rax + rsi - 9], dh ; jmp rsp
0x000000000018f3b8 : add dword ptr [rdx], ecx ; ret
0x00000000001ab164 : add dword ptr [rdx], r9d ; ret
0x000000000007dec9 : add dword ptr [rip + 0x343bb0], 1 ; pop rbx ; ret
0x000000000007d456 : add dword ptr [rip + 0x344567], 1 ; ret
0x00000000000d3dc4 : add dword ptr [rip + 0x438d0000], eax ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000abc0e : add dword ptr [rip - 0x47b80000], eax ; ret 0xffff
0x000000000009a655 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000013dcc9 : add dword ptr [rsi + 0xf], esp ; cmp byte ptr [rax], al ; ret 0xf66
0x000000000009a6d7 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000019ca70 : add dword ptr [rsi], 2 ; out 0xa, al ; ret
0x000000000019d1b8 : add dword ptr [rsi], 2 ; ret
0x000000000019e1e5 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00000000001b41a7 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x0000000000199e67 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xedbc
0x00000000001acf07 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf568
0x00000000001b003f : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf5e0
0x00000000001a302d : add dword ptr ds:[rax], eax ; jo 0x1a3033 ; int1 ; jmp qword ptr [rcx]
0x00000000001a3045 : add dword ptr ds:[rax], eax ; mov bl, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a3015 : add dword ptr ds:[rax], eax ; pop rax ; sti ; int1 ; jmp qword ptr [rcx]
0x00000000001a2f9d : add dword ptr ds:[rax], eax ; sti ; int1 ; jmp qword ptr [rcx]
0x0000000000140be7 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a568d : add dword ptr fs:[rax], eax ; stosb byte ptr [rdi], al ; ret 0xffe7
0x00000000001a5725 : add dword ptr gs:[rax], eax ; cmp byte ptr [rsi], al ; hlt ; jmp rdx
0x00000000000a7c55 : add dword ptr ss:[rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000000000007920c : add eax, 0 ; add byte ptr [rax], al ; mov edx, r8d ; jmp 0x791b2
0x0000000000004051 : add eax, 0 ; add byte ptr [rax], al ; ret
0x0000000000118386 : add eax, 0x10 ; ret
0x0000000000089956 : add eax, 0x10f35 ; ret
0x00000000000876d6 : add eax, 0x11595 ; ret
0x0000000000021fb2 : add eax, 0x15b12c ; ret
0x0000000000048489 : add eax, 0x15b8 ; add byte ptr [rcx - 0x75], cl ; ret
0x0000000000021fc2 : add eax, 0x15d103 ; ret
0x00000000000b4ee7 : add eax, 0x16e ; ret
0x000000000008c9fc : add eax, 0x1f ; ret
0x0000000000192874 : add eax, 0x2300e44 ; ret
0x0000000000134642 : add eax, 0x2884b9 ; jmp rax
0x00000000001345f2 : add eax, 0x288501 ; pop r12 ; jmp rax
0x0000000000134592 : add eax, 0x288559 ; pop r12 ; jmp rax
0x0000000000136163 : add eax, 0x28a728 ; call qword ptr [rax]
0x00000000001346a3 : add eax, 0x28c1e8 ; call qword ptr [rax]
0x000000000008b796 : add eax, 0x29000000 ; ret
0x00000000000b83b7 : add eax, 0x2907fbc1 ; ret 0x8944
0x000000000012b942 : add eax, 0x293541 ; add rsp, 8 ; ret
0x000000000012b912 : add eax, 0x2935d9 ; add rsp, 8 ; ret
0x000000000012b8b2 : add eax, 0x2936c1 ; add rsp, 8 ; ret
0x000000000012b8e2 : add eax, 0x293701 ; add rsp, 8 ; ret
0x00000000000b84f5 : add eax, 0x2941c229 ; ret
0x000000000002a107 : add eax, 0x29480000 ; ret 0x8b49
0x00000000001b83f9 : add eax, 0x29f0000 ; add byte ptr [rax], al ; ret
0x000000000011d0d2 : add eax, 0x2a1f19 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012073a : add eax, 0x2a4001 ; add rsp, 8 ; ret
0x0000000000120721 : add eax, 0x2a401a ; test eax, eax ; je 0x120739 ; ret
0x000000000011faea : add eax, 0x2a4bb1 ; pop rbx ; ret
0x000000000011fab2 : add eax, 0x2a4be9 ; pop rbx ; ret
0x000000000011f9f3 : add eax, 0x2a4ca8 ; pop rbx ; ret
0x000000000011c95b : add eax, 0x2a7a70 ; test eax, eax ; je 0x11c971 ; ret
0x0000000000112e52 : add eax, 0x2adb99 ; ret
0x0000000000112cd0 : add eax, 0x2add13 ; add rsp, 8 ; ret
0x000000000010e25c : add eax, 0x2b56ce ; add ecx, ebp ; ret
0x000000000010d0d7 : add eax, 0x2b6734 ; add rsp, 0x28 ; jmp rax
0x00000000000fe062 : add eax, 0x2c0df9 ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000015b2c4 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000fa97f : add eax, 0x2c7ebc ; add rsp, 0x18 ; ret
0x00000000000fa91c : add eax, 0x2c7f5f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fa3e8 : add eax, 0x2c8403 ; add rsp, 8 ; ret
0x00000000000fa389 : add eax, 0x2c8482 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fa191 : add eax, 0x2c8622 ; ret
0x00000000000f9fd1 : add eax, 0x2c87e2 ; ret
0x00000000000f9dfe : add eax, 0x2c89b5 ; add rsp, 8 ; ret
0x00000000000f3166 : add eax, 0x2cd7b5 ; mov rdx, rax ; jmp 0xf3106
0x00000000000f30d0 : add eax, 0x2cd84b ; add rsp, 8 ; ret
0x00000000000f45eb : add eax, 0x2ce040 ; add rsp, 8 ; ret
0x00000000000f4577 : add eax, 0x2ce0b4 ; mov rdx, rax ; jmp 0xf4557
0x00000000000ec798 : add eax, 0x2d5d0f ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000019e1e3 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x00000000000b11f8 : add eax, 0x310ba3 ; add rsp, 0x28 ; ret
0x00000000000b2ca0 : add eax, 0x312173 ; add rsp, 8 ; ret
0x000000000008b655 : add eax, 0x336616 ; add rsp, 8 ; ret
0x000000000008b613 : add eax, 0x336658 ; ret
0x00000000000831b0 : add eax, 0x33bd1b ; mov qword ptr [rax], rdi ; ret
0x00000000000815f9 : add eax, 0x33d7ba ; xor edi, edi ; call qword ptr [rax]
0x00000000000831c1 : add eax, 0x33e886 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007efed : add eax, 0x34076e ; ret
0x000000000007d3d2 : add eax, 0x342dc9 ; ret
0x000000000007deca : add eax, 0x343bb0 ; add dword ptr [rbx - 0xd], ebx ; ret
0x000000000007d4b6 : add eax, 0x344509 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000125494 : add eax, 0x358d4800 ; ret 0x5aa
0x00000000000c08cf : add eax, 0x358d4800 ; ret 0xbe5
0x000000000005da94 : add eax, 0x363e97 ; pop rbx ; pop rbp ; ret
0x0000000000037b94 : add eax, 0x3874f7 ; mov eax, edx ; ret
0x0000000000037b51 : add eax, 0x38753a ; ret
0x0000000000037b41 : add eax, 0x38755a ; ret
0x000000000003d0c2 : add eax, 0x387ccf ; add rsp, 8 ; ret
0x000000000002f8ee : add eax, 0x38f4e5 ; mov qword ptr [rax], rdx ; ret
0x000000000002bfd2 : add eax, 0x394ae9 ; ret
0x0000000000021a9c : add eax, 0x39d78f ; pop r12 ; ret
0x000000000001f571 : add eax, 0x3a14da ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000023652 : add eax, 0x3a15f1 ; ret
0x0000000000023642 : add eax, 0x3a1611 ; ret
0x000000000002235c : add eax, 0x3a289f ; ret
0x000000000012da0d : add eax, 0x3d8d4800 ; ret
0x00000000001b8b25 : add eax, 0x3ee0000 ; add byte ptr [rax], al ; ret 5
0x00000000000e5dee : add eax, 0x41000000 ; pop rsp ; ret
0x00000000001095d6 : add eax, 0x42045 ; ret
0x00000000000d3dc5 : add eax, 0x438d0000 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000109676 : add eax, 0x44a75 ; ret
0x000000000006f731 : add eax, 0x48000000 ; mov eax, edx ; pop rbx ; ret
0x000000000015d7f8 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x00000000001594a8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000009da36 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000119c62 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x0000000000125d9a : add eax, 0x48c48348 ; ret
0x000000000009739a : add eax, 0x48fb4789 ; mov eax, edi ; ret
0x000000000015d879 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000001594e9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000016e329 : add eax, 0x5bd0000 ; add byte ptr [rax], al ; ret 5
0x00000000001728fd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000089353 : add eax, 0x5c415d5b ; ret
0x0000000000054ede : add eax, 0x604c690 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000921d3 : add eax, 0x6878 ; ret
0x0000000000187835 : add eax, 0x6f0fffc ; cld ; call rax
0x0000000000187919 : add eax, 0x730fffc ; cld ; jmp qword ptr [rax]
0x000000000008d7d2 : add eax, 0x79 ; ret
0x000000000009e23e : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x00000000000ed5ab : add eax, 0x83480000 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000594f0 : add eax, 0x83480000 ; ret
0x000000000013889d : add eax, 0x83480000 ; ret 0x4910
0x000000000013b3f1 : add eax, 0x83480000 ; ret 0xe910
0x00000000001387f1 : add eax, 0x83480000 ; ret 0xeb10
0x000000000015d7fb : add eax, 0x8428d48 ; ret
0x00000000000a7519 : add eax, 0x850f0000 ; ret 0xd
0x000000000013604c : add eax, 0x89480000 ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000109583 : add eax, 0x89c78944 ; ret
0x00000000000b2d69 : add eax, 0x89d02944 ; ret
0x000000000009f8e2 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x000000000012b906 : add eax, 0xa0 ; add rsp, 8 ; ret
0x000000000012b936 : add eax, 0xa8 ; add rsp, 8 ; ret
0x00000000000921e7 : add eax, 0xb1524 ; ret
0x000000000008b8e3 : add eax, 0xb2318 ; ret
0x000000000008b553 : add eax, 0xb2588 ; ret
0x00000000000890c3 : add eax, 0xb48d8 ; ret
0x00000000000abc0f : add eax, 0xb8480000 ; ret 0xffff
0x00000000000a37a4 : add eax, 0xbcd77 ; ret
0x00000000000a4360 : add eax, 0xbde7b ; ret
0x000000000013607e : add eax, 0xc0310000 ; pop rbx ; pop rbp ; ret
0x0000000000161bfa : add eax, 0xc0310000 ; ret
0x00000000000a4368 : add eax, 0xc0733 ; ret
0x00000000000d3fbb : add eax, 0xc0830100 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000008d176 : add eax, 0xc0f85 ; ret
0x0000000000000451 : add eax, 0xc1c107c ; ret 0x4412
0x000000000015d87d : add eax, 0xc428d48 ; ret
0x000000000009f07d : add eax, 0xc478d48 ; ret
0x00000000000327ae : add eax, 0xc6834900 ; or byte ptr [rax + 1], cl ; ret
0x00000000000a434c : add eax, 0xc84f ; ret
0x000000000008b236 : add eax, 0xce305 ; ret
0x000000000008d666 : add eax, 0xcea55 ; ret
0x0000000000088fb6 : add eax, 0xcedd5 ; ret
0x000000000008d786 : add eax, 0xd0145 ; ret
0x000000000008ca10 : add eax, 0xd418b ; ret
0x000000000009febd : add eax, 0xd478d48 ; ret
0x00000000000a379c : add eax, 0xd48f ; ret
0x000000000008ca18 : add eax, 0xd6913 ; ret
0x00000000000878c3 : add eax, 0xdb748 ; ret
0x00000000000b8a2e : add eax, 0xe9000000 ; ret 0xfff3
0x0000000000025387 : add eax, 0xe9fffff4 ; ret
0x00000000000f6d8c : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x00000000000f6db1 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x00000000000f6efa : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x00000000000f6f93 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000014df13 : add eax, 0xf7f0ff3 ; ret
0x000000000004e16f : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000004b97e : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x850f
0x00000000000b2f5e : add eax, 0xfd02944 ; scasd eax, dword ptr [rdi] ; ret
0x00000000001093fa : add eax, 0xfff0003d ; dec dword ptr [rax - 0x77] ; ret 0x1376
0x0000000000093733 : add eax, 0xfffffad8 ; add rsp, 8 ; ret
0x000000000009371c : add eax, 0xfffffaef ; ret
0x0000000000047251 : add eax, 1 ; cmp edx, eax ; jg 0x47218 ; ret
0x000000000008d60b : add eax, 1 ; ret
0x00000000000234a2 : add eax, 2 ; mov dword ptr [rsp], eax ; call rbx
0x00000000000a3a38 : add eax, 2 ; ret
0x00000000000a3a51 : add eax, 3 ; ret
0x0000000000087b26 : add eax, 5 ; ret
0x000000000008d835 : add eax, 6 ; ret
0x0000000000118c00 : add eax, 8 ; ret
0x00000000000899a2 : add eax, 9 ; ret
0x00000000000225d9 : add eax, dword ptr [0] ; ret
0x000000000004d04a : add eax, dword ptr [rax] ; add al, ch ; outsb dx, byte ptr [rsi] ; ret
0x0000000000028e17 : add eax, dword ptr [rax] ; add al, ch ; shr dword ptr [rax + rax], -0x77 ; ret 0xe283
0x0000000000028cf2 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000250d3 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000138a3d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013b591 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000138a61 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000fd056 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000046de1 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x46daf
0x00000000000f72bd : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000000f7314 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001065a5 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call 0x102869
0x00000000000f7394 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000012b6a5 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000f7494 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000012a4f1 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000000f9047 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000a3a93 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000114364 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x00000000000d4af1 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x394104c0], al ; ret 0x697e
0x00000000001164be : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7cb7db84], cl ; call qword ptr [rax]
0x0000000000108cb5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000132e03 : add eax, dword ptr [rax] ; add byte ptr [rcx], al ; ret 0x59e9
0x00000000000c5058 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000a2430 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x00000000000f2eb7 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000a2650 : add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000a2673 : add eax, dword ptr [rax] ; ret
0x00000000000b2e65 : add eax, dword ptr [rbp - 0x7b] ; rol byte ptr [rcx + 0xf], cl ; ret 0xf741
0x0000000000028cfa : add eax, dword ptr [rbx + 0x394807e0] ; ret
0x00000000000d17e2 : add eax, dword ptr [rbx - 0x6bf0f903] ; ret 0xfd83
0x000000000003449e : add eax, dword ptr [rbx - 0x6bf0fc08] ; ret 0x70e9
0x00000000001188ed : add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x1188fe ; ret
0x000000000001fc1d : add eax, dword ptr [rbx - 0x7cb70038] ; ret 0xeb04
0x000000000015b289 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x000000000019f585 : add eax, dword ptr [rcx] ; add al, bh ; lock ; jmp qword ptr [rdi]
0x00000000000355e8 : add eax, dword ptr [rdi + 0x20] ; pop rbx ; ret
0x000000000019f17a : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rbx + 0xac90204], al ; ret
0x00000000000b2e51 : add eax, dword ptr [rdi + rcx + 0x48] ; ret 0x93ba
0x00000000001374e0 : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000136da8 : add eax, dword ptr [rdx + 8] ; add rsp, 0x58 ; ret
0x00000000000fea28 : add eax, dword ptr [rdx + rcx] ; ret
0x000000000015b389 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000000fe1fa : add eax, dword ptr [rsi + rdx] ; ret
0x00000000000a2715 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000006d29f : add eax, eax ; jmp rax
0x000000000004f1c0 : add eax, eax ; mov eax, r8d ; ret
0x0000000000097c38 : add eax, eax ; ret
0x000000000005f5e5 : add eax, ebp ; jmp rax
0x00000000000e9837 : add eax, ebp ; ret
0x00000000000e8438 : add eax, ebp ; ret 0xf36f
0x00000000000e6c38 : add eax, ebp ; ret 0xf387
0x00000000000fe168 : add eax, ebp ; ret 0xf961
0x00000000000e5378 : add eax, ebp ; ret 0xfa41
0x000000000019a54c : add eax, ebx ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000034d5e : add eax, ebx ; jmp rax
0x0000000000092682 : add eax, ecx ; jmp rax
0x000000000008c72a : add eax, ecx ; ret
0x0000000000097c35 : add eax, edi ; add rax, r8 ; ret
0x000000000008c727 : add eax, edi ; add rax, rcx ; ret
0x00000000000b8e18 : add eax, edi ; jmp rax
0x000000000018d329 : add eax, edi ; jmp rsp
0x000000000008b29b : add eax, edi ; ret
0x000000000013d9fa : add eax, edi ; sub rax, rsi ; ret
0x00000000001228bd : add eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cc30d : add eax, edx ; cmp rdi, rsi ; ja 0xcc308 ; ret
0x000000000002dce1 : add eax, edx ; jmp r8
0x0000000000054b3a : add eax, edx ; jmp rax
0x00000000001228de : add eax, edx ; ret
0x0000000000035fed : add eax, edx ; shr rax, 0x3f ; ret
0x00000000000896ee : add eax, edx ; sub rax, rdi ; ret
0x00000000000f2eb5 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000047221 : add eax, esi ; cmp ecx, 0x2f ; jmp r8
0x000000000012836b : add eax, esi ; jmp rax
0x00000000000b2161 : add eax, esi ; ret
0x000000000004dd48 : add eax, esp ; jmp rax
0x0000000000106680 : add ebp, 0x30 ; call 0x102915
0x000000000004f0ef : add ebp, 0x30 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x00000000000b14e5 : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000011fd21 : add ebp, dword ptr [rcx] ; ret 0x828d
0x0000000000195a4c : add ebp, dword ptr [rsi - 0x13] ; jmp qword ptr [rdx]
0x000000000003a1de : add ebp, dword ptr [rsp + 8] ; mov rsi, rbp ; call r12
0x000000000000314a : add ebp, esi ; mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x00000000000c52fe : add ebx, 1 ; mov rdx, rax ; jmp 0xc52a5
0x000000000007c053 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000faf34 : add ebx, dword ptr [rbx + 0x5d] ; ret
0x000000000010860c : add ebx, eax ; nop ; xor eax, eax ; ret
0x00000000000384c1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000000374a : add ebx, ebp ; in al, -0x12 ; jne 0x3730 ; ret 0x975
0x0000000000026e6c : add ebx, ebp ; ret
0x0000000000056494 : add ebx, ebp ; ret 0x9d8b
0x00000000000e373b : add ebx, edx ; jmp rbx
0x000000000014e0d3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000008d0f8 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x8d0e9 ; ret
0x00000000000359c4 : add ecx, 1 ; cmp al, 0x5f ; je 0x359e3 ; jmp 0x35997
0x000000000010ca07 : add ecx, 1 ; test r8d, r8d ; jne 0x10ca01 ; ret
0x0000000000118bb5 : add ecx, 2 ; mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x000000000009a75a : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000012aced : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x00000000001165ca : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x000000000007f364 : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000001050cd : add ecx, dword ptr [rax + 0x29] ; ret 0x394c
0x0000000000117a04 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x0000000000087455 : add ecx, dword ptr [rax + 1] ; ret 0x6348
0x00000000000a21f3 : add ecx, dword ptr [rax - 0x2f] ; call 0xffffffffc316af4f
0x00000000000edb94 : add ecx, dword ptr [rax - 0x68] ; ret
0x0000000000118d9c : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x00000000000f3dc4 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x000000000009737a : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000094a59 : add ecx, dword ptr [rax - 0x77] ; fisttp word ptr [rax + 0x29] ; ret 0x2948
0x00000000000f85cb : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x000000000006fdda : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003a9d6 : add ecx, dword ptr [rax - 0x7d] ; ret 0xf301
0x00000000000f6b01 : add ecx, dword ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000010359f : add ecx, dword ptr [rbp - 0x77] ; ret
0x000000000014de42 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000001ab12a : add ecx, dword ptr [rbx + 1] ; ret
0x0000000000047198 : add ecx, dword ptr [rcx + 0x29] ; ret
0x000000000009d9d4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000002a869 : add ecx, dword ptr [rcx + 0x39] ; ret
0x000000000009a75b : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000000e2869 : add ecx, dword ptr [rcx] ; ret 0xf983
0x00000000001ab127 : add ecx, dword ptr [rdi + 0x14b0302] ; ret
0x000000000009e200 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000000344a1 : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x00000000000711ea : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000d5043 : add ecx, eax ; jmp rcx
0x0000000000049608 : add ecx, ebp ; ret
0x000000000013719d : add ecx, ebx ; call rax
0x000000000014372b : add ecx, ebx ; jmp r9
0x0000000000160bc2 : add ecx, ebx ; jmp rcx
0x00000000000fae04 : add ecx, ebx ; ret
0x000000000006ddd8 : add ecx, edx ; jmp rcx
0x00000000000a26d4 : add ecx, esi ; jmp rcx
0x000000000012529d : add edi, 0x10 ; jmp rcx
0x0000000000120090 : add edi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x00000000001221ba : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000122173 : add edi, 0x23b0 ; xor eax, eax ; pop rbp ; jmp rcx
0x0000000000128b94 : add edi, 0x58 ; jmp rcx
0x00000000001282e4 : add edi, 0x68 ; jmp rcx
0x0000000000124707 : add edi, 0xc8 ; jmp rcx
0x000000000009733c : add edi, 1 ; mov rax, rdi ; ret
0x00000000000c6bb2 : add edi, 1 ; test dl, dl ; jne 0xc6b9d ; ret
0x00000000000c6bdc : add edi, 1 ; test dl, dl ; jne 0xc6bca ; ret
0x0000000000097365 : add edi, 2 ; mov rax, rdi ; ret
0x0000000000097378 : add edi, 3 ; mov rax, rdi ; ret
0x0000000000097385 : add edi, 4 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x0000000000097398 : add edi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x00000000000973b2 : add edi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x0000000000127d59 : add edi, eax ; jmp rdi
0x000000000018a509 : add edi, ebp ; call rsp
0x0000000000143728 : add edi, edx ; add r9, r11 ; jmp r9
0x0000000000118b85 : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x000000000018c8e1 : add edi, esi ; jmp rsp
0x00000000000373a6 : add edi, esi ; ret 0
0x0000000000187831 : add edi, esp ; call qword ptr [rax]
0x00000000001877f1 : add edi, esp ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x0000000000187851 : add edi, esp ; push rax ; add al, -4 ; call rax
0x00000000000fd93b : add edx, 1 ; mov dword ptr [rax], edx ; ret
0x00000000000fd6ec : add edx, 1 ; mov word ptr [rax], dx ; ret
0x0000000000118b11 : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000097b38 : add edx, eax ; jl 0x97ba7 ; add rax, rdi ; ret
0x0000000000097b48 : add edx, eax ; jl 0x97ba9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000097b68 : add edx, eax ; jl 0x97ba9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000097b88 : add edx, eax ; jl 0x97ba9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000009732d : add edx, eax ; jmp r10
0x00000000000229e1 : add edx, eax ; jmp rdx
0x00000000000390c2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x000000000001f6a6 : add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f680
0x00000000000df877 : add edx, ecx ; jmp rdx
0x0000000000034af5 : add edx, edi ; jmp rdx
0x0000000000061b98 : add edx, esi ; call qword ptr [r11 + rax*8]
0x00000000001a3109 : add edx, esi ; call rdi
0x00000000000a2694 : add edx, esi ; jmp rdx
0x000000000004bdb0 : add edx, esp ; call qword ptr [r11 + rax*8]
0x0000000000063650 : add esi, -1 ; dec dword ptr [rbp + 1] ; loop 0x6364a ; scasb al, byte ptr [rdi] ; ret
0x0000000000127305 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000002177c : add esi, 8 ; jmp 0x21741
0x000000000007ea1c : add esi, dword ptr [rax + rax] ; xor edi, edi ; mov r14, rdx ; call qword ptr [rax]
0x00000000000c05ec : add esi, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000a1889 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000118d7d : add esi, dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012a5b6 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], -0x3c ; pop rbx ; pop rbp ; ret
0x000000000012aa1e : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], -0x3c ; sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000089246 : add esi, dword ptr [rdi + rbx + 0x40] ; movsx edx, dh ; mov eax, edx ; ret
0x0000000000121e82 : add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x0000000000097823 : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00000000001025e3 : add esi, eax ; jmp qword ptr [rax]
0x0000000000054a0a : add esi, eax ; jmp rsi
0x000000000012ef23 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000014dff3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000006dcc8 : add esi, ecx ; jmp rsi
0x000000000018c931 : add esi, edi ; call rsp
0x0000000000162ffc : add esi, edi ; fadd st(3) ; ret
0x00000000000a272b : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000143725 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000002e191 : add esi, edx ; jmp r14
0x000000000008cf30 : add esi, esi ; ret
0x00000000000375ca : add esi, esi ; ret 0xf304
0x000000000017a061 : add esi, esp ; jmp rsi
0x00000000000f2ddf : add esp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000f9c5f : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x0000000000086734 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000112731 : add esp, 0x10 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000122cc4 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000fa9bc : add esp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x0000000000070af7 : add esp, 0x10 ; pop rbx ; jmp rax
0x00000000000345a1 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d18e : add esp, 0x10 ; pop rbx ; ret
0x0000000000122770 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d1c1 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008c56f : add esp, 0x100 ; ret
0x000000000008915d : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000005db33 : add esp, 0x1000 ; pop rbx ; ret
0x000000000005db41 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x000000000003713d : add esp, 0x108 ; ret
0x00000000000ed3ee : add esp, 0x120 ; pop rbx ; ret
0x00000000000373d3 : add esp, 0x140 ; pop rbx ; ret
0x0000000000036b5b : add esp, 0x148 ; ret
0x00000000000220a9 : add esp, 0x18 ; jmp rax
0x000000000005e097 : add esp, 0x18 ; mov eax, edx ; ret
0x00000000000e5aee : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000cc210 : add esp, 0x18 ; mov rax, rdx ; ret
0x000000000005e0c6 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000012f489 : add esp, 0x18 ; movzx eax, al ; ret
0x0000000000087508 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003d158 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000036f6b : add esp, 0x18 ; ret
0x0000000000120e9c : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000eca47 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000f1234 : add esp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000049af6 : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000024180 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000368d3 : add esp, 0x20 ; pop rbx ; ret
0x00000000000c0296 : add esp, 0x20 ; sar eax, 0x1f ; pop rbx ; ret
0x000000000006f0e3 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000af951 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000220fb : add esp, 0x28 ; jmp rax
0x00000000000fb20a : add esp, 0x28 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000fbf3e : add esp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000b1ec4 : add esp, 0x28 ; mov rax, rdx ; ret
0x000000000012dd95 : add esp, 0x28 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x0000000000021d49 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005da69 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000048792 : add esp, 0x28 ; ret
0x000000000010b9b9 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000c37e1 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011f9cb : add esp, 0x30 ; pop rbx ; ret
0x0000000000113c01 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012a878 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000beb4a : add esp, 0x38 ; ret
0x00000000000bf3e2 : add esp, 0x40 ; mov eax, edx ; pop rbx ; ret
0x000000000010dc48 : add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000037449 : add esp, 0x40 ; pop rbx ; ret
0x00000000000fe128 : add esp, 0x40 ; ret
0x0000000000126bc4 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7f48 : add esp, 0x408 ; ret
0x0000000000049849 : add esp, 0x440 ; pop rbx ; ret
0x00000000000eda82 : add esp, 0x48 ; movzx eax, al ; ret
0x00000000000740c8 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000119c64 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000f2fac : add esp, 0x48 ; ret
0x0000000000120bbe : add esp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f2964 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000136cff : add esp, 0x58 ; ret
0x00000000000f196f : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000ca2e2 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012038b : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012bd5c : add esp, 0x68 ; ret
0x0000000000085397 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ec252 : add esp, 0x70 ; pop rbx ; ret
0x0000000000085456 : add esp, 0x70 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000371ed : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000037272 : add esp, 0x88 ; ret
0x00000000000fc882 : add esp, 0x90 ; pop rbx ; ret
0x000000000001f50c : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000134430 : add esp, 0x98 ; ret
0x0000000000037fbd : add esp, 0xa8 ; ret
0x000000000012a0c7 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000005e71a : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x00000000000b2095 : add esp, 0xd0 ; pop rbx ; ret
0x0000000000036d4e : add esp, 0xd0 ; ret
0x00000000000f7d4e : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000047544 : add esp, 0xd8 ; ret
0x0000000000106b5c : add esp, 0xe8 ; pop rbx ; pop rbp ; ret
0x0000000000056492 : add esp, 1 ; jmp 0x5645d
0x0000000000125523 : add esp, 8 ; add eax, 2 ; ret
0x000000000008b69d : add esp, 8 ; jmp rax
0x0000000000118a9b : add esp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x00000000000c6ef6 : add esp, 8 ; lea rax, qword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000c6df6 : add esp, 8 ; lea rax, qword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x000000000004f072 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000005e870 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006eb98 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000073fdc : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000033efb : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007ec6b : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000085b24 : add esp, 8 ; mov rax, rdx ; ret
0x000000000003c2f6 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000012db2c : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000022b15 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000046556 : add esp, 8 ; movzx eax, al ; ret
0x000000000011bc4a : add esp, 8 ; movzx eax, ax ; ret
0x00000000000780ad : add esp, 8 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x0000000000123539 : add esp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x00000000001228d9 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000075000 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000003ce82 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000023631 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000022024 : add esp, 8 ; ret
0x0000000000133991 : add esp, 8 ; sar eax, 0x1f ; ret
0x000000000012f574 : add esp, 8 ; shr eax, 0x1f ; ret
0x0000000000073ff1 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000cbf7c : add esp, 8 ; xor eax, eax ; ret
0x000000000013592b : add esp, dword ptr [rsi + 0x39] ; ret 0x840f
0x000000000017a059 : add esp, esi ; jmp qword ptr [rcx]
0x0000000000111988 : add qword ptr [r8 - 0x7d], r9 ; cli ; add al, 0xf ; xchg eax, esi ; ret
0x00000000000dc9ec : add qword ptr [r8 - 0x7d], rcx ; ret
0x00000000001a3eed : add qword ptr [r8], r8 ; sub al, -0xe ; jmp rdx
0x000000000018f175 : add qword ptr [r8], r8 ; xor al, 0xffffffffffffffe1 ; std ; jmp rsp
0x000000000002678e : add qword ptr [rax], r8 ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000001a3e85 : add qword ptr [rax], r8 ; sub bh, bl ; call qword ptr [rdx]
0x00000000000941ad : add qword ptr [rax], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000018aced : add qword ptr [rax], rax ; loopne 0x18ace8 ; jmp rsp
0x00000000001a3a3d : add qword ptr [rax], rax ; nop ; mov edx, esi ; call qword ptr [rdx]
0x0000000000098550 : add qword ptr [rbp - 0x3c], rsi ; nop dword ptr [rax] ; ret
0x0000000000026e69 : add qword ptr [rdi], 1 ; jmp 0x26e37
0x000000000015b23d : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000001b72dc : add qword ptr [rdx], -0x50d5000 ; call rcx
0x000000000009732c : add r10, rax ; jmp r10
0x0000000000190d6c : add r10b, r13b ; jmp qword ptr [rdx]
0x000000000014e0d2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000056491 : add r12, 1 ; jmp 0x5645e
0x000000000010667f : add r13, 0x30 ; call 0x102916
0x000000000002e190 : add r14, r10 ; jmp r14
0x000000000014e062 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000014dff2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000013d620 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000139ab4 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000002dce0 : add r8, rdx ; jmp r8
0x0000000000047220 : add r8, rsi ; cmp ecx, 0x2f ; jmp r8
0x0000000000034665 : add r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001b396d : add r8b, byte ptr [r8] ; and byte ptr [rcx - 9], cl ; jmp qword ptr [rax]
0x00000000000974d4 : add r8b, byte ptr [r8] ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000097434 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x000000000018d705 : add r8b, byte ptr [rax] ; adc al, 0x3f ; clc ; jmp rsp
0x000000000018d6d5 : add r8b, byte ptr [rax] ; jnp 0x18d71c ; clc ; jmp rsp
0x0000000000118791 : add r8b, byte ptr [rdx] ; cmp rcx, rax ; sbb eax, eax ; ret
0x000000000004f1bf : add r8d, eax ; mov eax, r8d ; ret
0x000000000013719c : add r9, r11 ; call rax
0x000000000014372a : add r9, r11 ; jmp r9
0x0000000000049477 : add r9b, byte ptr [r9 + rcx*4 - 0x3e] ; jmp 0x49495
0x00000000001407c2 : add rax, -0x7cb80000 ; ret 0xe910
0x00000000000f6ef9 : add rax, -0x9cf0000 ; mov rdi, r14 ; call rbx
0x000000000015b2c3 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x0000000000047250 : add rax, 1 ; cmp edx, eax ; jg 0x47219 ; ret
0x00000000000a3a40 : add rax, 1 ; ret
0x00000000000a3a37 : add rax, 2 ; ret
0x00000000000a3a50 : add rax, 3 ; ret
0x00000000000225d8 : add rax, qword ptr [0] ; ret
0x00000000000355e7 : add rax, qword ptr [rdi + 0x20] ; pop rbx ; ret
0x00000000001374df : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000136da7 : add rax, qword ptr [rdx + 8] ; add rsp, 0x58 ; ret
0x00000000000225d7 : add rax, qword ptr fs:[0] ; ret
0x000000000004dd47 : add rax, r12 ; jmp rax
0x000000000005f5e4 : add rax, r13 ; jmp rax
0x000000000006d29e : add rax, r8 ; jmp rax
0x0000000000097c37 : add rax, r8 ; ret
0x00000000000973f4 : add rax, r9 ; jmp rax
0x0000000000034d5d : add rax, rbx ; jmp rax
0x0000000000092681 : add rax, rcx ; jmp rax
0x000000000008c729 : add rax, rcx ; ret
0x0000000000097c34 : add rax, rdi ; add rax, r8 ; ret
0x000000000008c726 : add rax, rdi ; add rax, rcx ; ret
0x00000000000b8e17 : add rax, rdi ; jmp rax
0x000000000008b29a : add rax, rdi ; ret
0x000000000013d9f9 : add rax, rdi ; sub rax, rsi ; ret
0x0000000000054b39 : add rax, rdx ; jmp rax
0x0000000000035fec : add rax, rdx ; shr rax, 0x3f ; ret
0x00000000000896ed : add rax, rdx ; sub rax, rdi ; ret
0x000000000012836a : add rax, rsi ; jmp rax
0x000000000003a1dd : add rbp, qword ptr [rsp + 8] ; mov rsi, rbp ; call r12
0x00000000000c52fd : add rbx, 1 ; mov rdx, rax ; jmp 0xc52a6
0x00000000000e373a : add rbx, r10 ; jmp rbx
0x00000000000359c3 : add rcx, 1 ; cmp al, 0x5f ; je 0x359e4 ; jmp 0x35998
0x000000000002a868 : add rcx, qword ptr [r9 + 0x39] ; ret
0x0000000000160bc1 : add rcx, r11 ; jmp rcx
0x00000000000d5042 : add rcx, rax ; jmp rcx
0x000000000006ddd7 : add rcx, rdx ; jmp rcx
0x00000000000a26d3 : add rcx, rsi ; jmp rcx
0x000000000012529c : add rdi, 0x10 ; jmp rcx
0x000000000012008f : add rdi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x00000000001221b9 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000128b93 : add rdi, 0x58 ; jmp rcx
0x00000000001282e3 : add rdi, 0x68 ; jmp rcx
0x0000000000124706 : add rdi, 0xc8 ; jmp rcx
0x000000000009733b : add rdi, 1 ; mov rax, rdi ; ret
0x00000000000c6bb1 : add rdi, 1 ; test dl, dl ; jne 0xc6b9e ; ret
0x00000000000c6bdb : add rdi, 1 ; test dl, dl ; jne 0xc6bcb ; ret
0x0000000000097364 : add rdi, 2 ; mov rax, rdi ; ret
0x0000000000097377 : add rdi, 3 ; mov rax, rdi ; ret
0x0000000000127d58 : add rdi, rax ; jmp rdi
0x0000000000143727 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000118b84 : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x000000000004bdaf : add rdx, r12 ; call qword ptr [r11 + rax*8]
0x0000000000061b97 : add rdx, r14 ; call qword ptr [r11 + rax*8]
0x00000000000390c1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000097b37 : add rdx, rax ; jl 0x97ba8 ; add rax, rdi ; ret
0x00000000000229e0 : add rdx, rax ; jmp rdx
0x00000000000df876 : add rdx, rcx ; jmp rdx
0x0000000000034af4 : add rdx, rdi ; jmp rdx
0x00000000000a2693 : add rdx, rsi ; jmp rdx
0x0000000000127304 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000002177b : add rsi, 8 ; jmp 0x21742
0x0000000000054a09 : add rsi, rax ; jmp rsi
0x000000000012ef22 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000006dcc7 : add rsi, rcx ; jmp rsi
0x0000000000086733 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000122cc3 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000fa9bb : add rsp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x0000000000070af6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000345a0 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d18d : add rsp, 0x10 ; pop rbx ; ret
0x000000000007d1c0 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008c56e : add rsp, 0x100 ; ret
0x000000000005db32 : add rsp, 0x1000 ; pop rbx ; ret
0x000000000003713c : add rsp, 0x108 ; ret
0x00000000000ed3ed : add rsp, 0x120 ; pop rbx ; ret
0x00000000000373d2 : add rsp, 0x140 ; pop rbx ; ret
0x0000000000036b5a : add rsp, 0x148 ; ret
0x00000000000220a8 : add rsp, 0x18 ; jmp rax
0x000000000005e096 : add rsp, 0x18 ; mov eax, edx ; ret
0x00000000000e5aed : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000cc20f : add rsp, 0x18 ; mov rax, rdx ; ret
0x000000000005e0c5 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000012f488 : add rsp, 0x18 ; movzx eax, al ; ret
0x000000000003d157 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000036f6a : add rsp, 0x18 ; ret
0x0000000000120e9b : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f1233 : add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000049af5 : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x000000000002417f : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000368d2 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000c0295 : add rsp, 0x20 ; sar eax, 0x1f ; pop rbx ; ret
0x00000000000af950 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000220fa : add rsp, 0x28 ; jmp rax
0x00000000000fb209 : add rsp, 0x28 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000fbf3d : add rsp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000b1ec3 : add rsp, 0x28 ; mov rax, rdx ; ret
0x000000000012dd94 : add rsp, 0x28 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x000000000005da68 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000048791 : add rsp, 0x28 ; ret
0x000000000010b9b8 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000c37e0 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011f9ca : add rsp, 0x30 ; pop rbx ; ret
0x000000000012a877 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000beb49 : add rsp, 0x38 ; ret
0x00000000000bf3e1 : add rsp, 0x40 ; mov eax, edx ; pop rbx ; ret
0x000000000010dc47 : add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000037448 : add rsp, 0x40 ; pop rbx ; ret
0x00000000000fe127 : add rsp, 0x40 ; ret
0x00000000000f7f47 : add rsp, 0x408 ; ret
0x0000000000049848 : add rsp, 0x440 ; pop rbx ; ret
0x00000000000eda81 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000119c63 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000f2fab : add rsp, 0x48 ; ret
0x00000000000f2963 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000136cfe : add rsp, 0x58 ; ret
0x00000000000f196e : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000ca2e1 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012bd5b : add rsp, 0x68 ; ret
0x0000000000085396 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ec251 : add rsp, 0x70 ; pop rbx ; ret
0x00000000000371ec : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000037271 : add rsp, 0x88 ; ret
0x00000000000fc881 : add rsp, 0x90 ; pop rbx ; ret
0x000000000001f50b : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000013442f : add rsp, 0x98 ; ret
0x0000000000037fbc : add rsp, 0xa8 ; ret
0x000000000012a0c6 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x00000000000b2094 : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000036d4d : add rsp, 0xd0 ; ret
0x00000000000f7d4d : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000047543 : add rsp, 0xd8 ; ret
0x0000000000106b5b : add rsp, 0xe8 ; pop rbx ; pop rbp ; ret
0x0000000000125522 : add rsp, 8 ; add eax, 2 ; ret
0x000000000008b69c : add rsp, 8 ; jmp rax
0x0000000000118a9a : add rsp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000004f071 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000005e86f : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006eb97 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000073fdb : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000033efa : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007ec6a : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000085b23 : add rsp, 8 ; mov rax, rdx ; ret
0x000000000003c2f5 : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000012db2b : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000022b14 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000046555 : add rsp, 8 ; movzx eax, al ; ret
0x000000000011bc49 : add rsp, 8 ; movzx eax, ax ; ret
0x00000000000780ac : add rsp, 8 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x0000000000123538 : add rsp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x00000000001228d8 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000074fff : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000023630 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000022023 : add rsp, 8 ; ret
0x0000000000133990 : add rsp, 8 ; sar eax, 0x1f ; ret
0x000000000012f573 : add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000073ff0 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000cbf7b : add rsp, 8 ; xor eax, eax ; ret
0x000000000009222e : add sil, sil ; ret 0x7404
0x00000000000d50ee : add sil, sil ; ret 0x7508
0x00000000000fd703 : add word ptr [rax], 1 ; ret
0x000000000018ef25 : add word ptr [rax], ax ; xchg eax, esp ; push rdx ; sti ; call rsp
0x00000000000fd44a : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000187b19 : and ah, bh ; call qword ptr [rax]
0x0000000000083482 : and al, 0 ; add bl, ch ; or eax, 0xd235b10f ; ret 0x33
0x000000000009af11 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7b ; ret
0x00000000000234ba : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000094a8c : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000136e25 : and al, 0x10 ; add byte ptr [rbp + 0x1e], dh ; add rsp, 0x48 ; ret
0x00000000000ec87a : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0xb9eb
0x00000000000af966 : and al, 0x10 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000814ee : and al, 0x10 ; call qword ptr [rax]
0x000000000002be5f : and al, 0x10 ; call r15
0x00000000000f60cc : and al, 0x10 ; call rax
0x00000000000815c2 : and al, 0x10 ; call rdx
0x00000000000366b7 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x000000000012015a : and al, 0x10 ; mov rdi, rbp ; call r14
0x000000000012ddb4 : and al, 0x10 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000a4e7b : and al, 0x10 ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x00000000001893d8 : and al, 0x13 ; jmp 0x1893de
0x000000000008945b : and al, 0x14 ; add byte ptr [rcx], ch ; ret
0x00000000000921e8 : and al, 0x15 ; or eax, dword ptr [rax] ; ret
0x00000000000b1b9a : and al, 0x18 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000047b0f : and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x00000000000220f8 : and al, 0x18 ; add rsp, 0x28 ; jmp rax
0x0000000000021ec1 : and al, 0x18 ; call rax
0x0000000000023406 : and al, 0x18 ; call rbx
0x0000000000124c47 : and al, 0x18 ; call rcx
0x0000000000107e7e : and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000107efe : and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000097355 : and al, 0x18 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x0000000000102d96 : and al, 0x18 ; mov edi, 0x2000004 ; call rax
0x00000000000b035d : and al, 0x18 ; mov rdi, qword ptr [r13] ; call r12
0x000000000002be5a : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r15
0x0000000000102c99 : and al, 0x18 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000832fd : and al, 0x18 ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000029afb : and al, 0x1c ; jmp 0x29ac4
0x0000000000029afa : and al, 0x1c ; jmp 0x29ac5
0x0000000000000975 : and al, 0x20 ; add byte ptr [rax], al ; ret
0x00000000000eb06d : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8b49
0x0000000000124a50 : and al, 0x20 ; call rcx
0x00000000000815bd : and al, 0x20 ; mov qword ptr [rsp + 0x10], rcx ; call rdx
0x000000000002accb : and al, 0x24 ; jmp 0x2ac94
0x000000000002acca : and al, 0x24 ; jmp 0x2ac95
0x00000000001759e4 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00000000000813d4 : and al, 0x28 ; call rax
0x00000000000a4afd : and al, 0x28 ; call rbx
0x00000000000a4b8b : and al, 0x28 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000026eb2 : and al, 0x28 ; mov qword ptr [rax], rbx ; jmp 0x26e81
0x0000000000026eb1 : and al, 0x28 ; mov qword ptr [rax], rbx ; jmp 0x26e82
0x0000000000083f27 : and al, 0x28 ; mov rdi, r12 ; call rax
0x000000000008139b : and al, 0x28 ; mov rdi, r14 ; call qword ptr [rax]
0x00000000000a473c : and al, 0x28 ; mov rsi, r13 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000fad98 : and al, 0x29 ; or byte ptr [rdi], 0x95 ; ret 0xcfeb
0x0000000000197ad4 : and al, 0x2b ; add byte ptr [rax], al ; clc ; stosd dword ptr [rdi], eax ; in eax, dx ; call qword ptr [rcx]
0x00000000001a1db4 : and al, 0x2c ; add dword ptr [rax], eax ; js 0x1a1d92 ; int1 ; jmp qword ptr [rbx]
0x000000000011b6b8 : and al, 0x2c ; add dword ptr [rcx + rcx*4 - 0x5c], ecx ; ret
0x0000000000048fc0 : and al, 0x30 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8348
0x00000000000813cf : and al, 0x30 ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x000000000012f419 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x0000000000080406 : and al, 0x30 ; xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x0000000000136cfb : and al, 0x31 ; ror byte ptr [rax - 0x7d], -0x3c ; pop rax ; ret
0x0000000000048fca : and al, 0x38 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x00000000000f2fa7 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000a502f : and al, 0x38 ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x0000000000025a4d : and al, 0x40 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000002639c : and al, 0x40 ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000025954 : and al, 0x40 ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000001210aa : and al, 0x41 ; call qword ptr [rbx]
0x000000000011e786 : and al, 0x41 ; call rsp
0x00000000000da5f4 : and al, 0x44 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000120ba4 : and al, 0x48 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [rax]
0x0000000000134966 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x000000000005e095 : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x00000000000cc20e : and al, 0x48 ; add esp, 0x18 ; mov rax, rdx ; ret
0x0000000000125bd6 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f1689 : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000002417e : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe0c5 : and al, 0x48 ; add esp, 0x38 ; ret
0x00000000000fe126 : and al, 0x48 ; add esp, 0x40 ; ret
0x0000000000078abd : and al, 0x48 ; add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000136d11 : and al, 0x48 ; jne 0x136cfe ; add rsp, 0x58 ; ret
0x0000000000136d10 : and al, 0x48 ; jne 0x136cff ; add rsp, 0x58 ; ret
0x00000000000a45f8 : and al, 0x48 ; lea ecx, dword ptr [rax + 1] ; call rbx
0x0000000000029da2 : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000002838b : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000136b9d : and al, 0x48 ; mov eax, dword ptr [rax + 0xe8] ; jmp rax
0x00000000000a4154 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000be77f : and al, 0x48 ; mov edx, dword ptr [rsp + 0x28] ; call rax
0x00000000000ecac0 : and al, 0x48 ; mov edx, eax ; call 0x108d16
0x00000000000948cc : and al, 0x48 ; test esi, esi ; jne 0x948e3 ; jmp 0x9489d
0x0000000000027d99 : and al, 0x50 ; call rax
0x0000000000028a10 : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call r12
0x0000000000029426 : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000002a3ce : and al, 0x50 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000027684 : and al, 0x58 ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000285b2 : and al, 0x58 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000018d898 : and al, 0x5e ; clc ; jmp rsp
0x000000000018dc2c : and al, 0x6c ; add al, byte ptr [rax] ; hlt ; mov al, -8 ; jmp rsp
0x00000000000277af : and al, 0x70 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000196484 : and al, 0x71 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000043c9d : and al, 0x73 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000001007c1 : and al, 0x74 ; adc al, 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000137b5b : and al, 0x74 ; ficomp dword ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x00000000000352cb : and al, 0x74 ; ret 0x8d48
0x00000000000aad1d : and al, 0x74 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x0000000000027fb1 : and al, 0x78 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000003ca79 : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000c1726 : and al, 0xc ; add rsp, 0x28 ; ret
0x0000000000136e58 : and al, 0xc ; add rsp, 0x48 ; ret
0x00000000000f30a1 : and al, 0xffffff98 ; ret
0x0000000000039e27 : and al, 0xffffffec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000003693a : and al, 0xfffffff0 ; and eax, 0x8000 ; ret
0x00000000000367b6 : and al, 0xfffffff0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x00000000000b131b : and al, 0xfffffff0 ; ret
0x0000000000039de6 : and al, 0xfffffff8 ; ret
0x0000000000039da0 : and al, 0xfffffffc ; ret
0x00000000000f854c : and al, 0xffffffff ; jmp 0xf8518
0x000000000018defc : and al, 0xffffffffffffff80 ; add al, byte ptr [rax] ; xchg eax, esp ; xor edi, ecx ; jmp rsp
0x00000000000c9be4 : and al, 0xffffffffffffff80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000aa070 : and al, 0xffffffffffffff80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; imul al ; ret
0x00000000000d76d3 : and al, 0xffffffffffffff80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000dcfe1 : and al, 0xffffffffffffff80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000045b66 : and al, 0xffffffffffffff84 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x000000000013135d : and al, 0xffffffffffffff85 ; ror byte ptr [rdi], -0x77 ; ret
0x00000000000b420e : and al, 0xffffffffffffff89 ; ret
0x0000000000115249 : and al, 0xffffffffffffff89 ; ret 0xc148
0x0000000000044fd7 : and al, 0xffffffffffffff90 ; add byte ptr [rax], al ; add bl, ch ; ret 0x9066
0x000000000004563d : and al, 0xffffffffffffff90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000e2a6e : and al, 0xffffffffffffff94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x000000000004858a : and al, 0xffffffffffffff98 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xd7e9
0x00000000000ec76a : and al, 0xffffffffffffff98 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000f30a2 : and al, 0xffffffffffffff98 ; ret
0x00000000000e391e : and al, 0xffffffffffffffa0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe2c1
0x00000000001a91b4 : and al, 0xffffffffffffffa0 ; add dword ptr [rax], eax ; sub byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000a405b : and al, 0xffffffffffffffa8 ; lock jne 0xa4079 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000018b5f0 : and al, 0xffffffffffffffa9 ; call rsp
0x00000000000272f7 : and al, 0xffffffffffffffb0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000003ff78 : and al, 0xffffffffffffffb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e2960 : and al, 0xffffffffffffffc1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; mov ah, 0x24 ; ret 0
0x00000000000021c5 : and al, 0xffffffffffffffc7 ; jno 0x2216 ; ret 0x1dd4
0x000000000017a72c : and al, 0xffffffffffffffcb ; hlt ; call rcx
0x0000000000047a2f : and al, 0xffffffffffffffd0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d48
0x00000000001ac5b4 : and al, 0xffffffffffffffd4 ; add dword ptr [rax], eax ; sbb dh, ah ; cmc ; call qword ptr [rax]
0x00000000001ac7b4 : and al, 0xffffffffffffffd6 ; add dword ptr [rax], eax ; or bh, ah ; cmc ; call qword ptr [rax]
0x000000000017a904 : and al, 0xffffffffffffffe0 ; hlt ; call rsp
0x000000000003671d : and al, 0xffffffffffffffe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000000367bb : and al, 0xffffffffffffffe8 ; fstp xword ptr [rdi] ; ret
0x000000000010fd74 : and al, 0xffffffffffffffe8 ; jmp 0x10fd80
0x000000000003679b : and al, 0xffffffffffffffe8 ; ret
0x0000000000044538 : and al, 0xffffffffffffffe8 ; ret 0xfff1
0x000000000019dbb4 : and al, 0xffffffffffffffea ; add byte ptr [rax], al ; mov dh, dl ; out dx, al ; jmp rdx
0x000000000002accc : and al, 0xffffffffffffffeb ; ret 0x8948
0x0000000000039e28 : and al, 0xffffffffffffffec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000018a3c0 : and al, 0xffffffffffffffec ; out dx, al ; call rsp
0x0000000000074859 : and al, 0xfffffffffffffff0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000003693b : and al, 0xfffffffffffffff0 ; and eax, 0x8000 ; ret
0x00000000000367b7 : and al, 0xfffffffffffffff0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000036871 : and al, 0xfffffffffffffff0 ; mov dword ptr [rdi], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000b1316 : and al, 0xfffffffffffffff0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000b131c : and al, 0xfffffffffffffff0 ; ret
0x000000000017b139 : and al, 0xfffffffffffffff6 ; jmp rsp
0x0000000000092336 : and al, 0xfffffffffffffff8 ; jne 0x92212 ; ret
0x0000000000039de1 : and al, 0xfffffffffffffff8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000039de7 : and al, 0xfffffffffffffff8 ; ret
0x00000000001ab885 : and al, 0xfffffffffffffffb ; jmp qword ptr [rdx]
0x0000000000039d9b : and al, 0xfffffffffffffffc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000039da1 : and al, 0xfffffffffffffffc ; ret
0x0000000000036967 : and al, 0xfffffffffffffffe ; fldcw word ptr [rsp - 2] ; ret
0x000000000003696b : and al, 0xfffffffffffffffe ; ret
0x00000000000f854d : and al, 0xffffffffffffffff ; jmp 0xf8517
0x00000000000e4eb6 : and al, 4 ; jmp 0xe4e7f
0x0000000000189380 : and al, 5 ; jmp 0x189386
0x000000000009e348 : and al, 7 ; add byte ptr [rax], al ; ret
0x00000000000a6c88 : and al, 8 ; adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf983
0x000000000012061c : and al, 8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x00000000000220a6 : and al, 8 ; add rsp, 0x18 ; jmp rax
0x0000000000036f68 : and al, 8 ; add rsp, 0x18 ; ret
0x00000000000f1f18 : and al, 8 ; add rsp, 0x28 ; ret
0x000000000007ea4b : and al, 8 ; and rdi, rdx ; neg rdi ; call qword ptr [rax]
0x000000000007ea75 : and al, 8 ; call qword ptr [rax]
0x0000000000087352 : and al, 8 ; call qword ptr [rdx]
0x0000000000028a14 : and al, 8 ; call r12
0x0000000000025a51 : and al, 8 ; call r14
0x00000000000263a0 : and al, 8 ; call r15
0x0000000000102c9e : and al, 8 ; call rax
0x0000000000025958 : and al, 8 ; call rbx
0x0000000000121660 : and al, 8 ; call rcx
0x00000000000367ea : and al, 8 ; fscale ; fstp st(1) ; ret
0x000000000012e697 : and al, 8 ; lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000000f60c7 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000006efd8 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000012a852 : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000027d94 : and al, 8 ; mov rsi, qword ptr [rsp + 0x50] ; call rax
0x000000000003a1e0 : and al, 8 ; mov rsi, rbp ; call r12
0x00000000000366bb : and al, 8 ; ret
0x000000000012f41e : and al, 8 ; xor eax, eax ; call rdx
0x00000000000c81be : and al, 8 ; xor r12d, r12d ; jmp 0xc818e
0x00000000000c81bd : and al, 8 ; xor r12d, r12d ; jmp 0xc818f
0x000000000018d541 : and al, bh ; call rsp
0x000000000011c641 : and al, byte ptr [rax + 6] ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000001b8678 : and al, byte ptr [rax + rax] ; add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x0000000000036918 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000036310 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000006f3c : and al, byte ptr [rax] ; or al, 0 ; ret
0x00000000000d556d : and al, byte ptr [rbx + 0xd7403f8] ; xor eax, eax ; pop rbx ; ret
0x000000000018a6f5 : and al, byte ptr [rcx] ; add byte ptr [rsi + rsi], al ; out dx, eax ; call rsp
0x000000000007a064 : and al, byte ptr [rdi] ; add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x000000000008788a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x000000000002fcd2 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002fcf2 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002fc32 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002fcb2 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002fbd2 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002fc72 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002fc12 : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002fc52 : and ax, 0x8000 ; movzx eax, ax ; ret
0x0000000000187b5d : and bh, ah ; call rax
0x0000000000021326 : and bh, bh ; ret 0x8948
0x0000000000187289 : and bh, bl ; call rax
0x000000000018775c : and bh, bl ; sti ; call qword ptr [rax]
0x0000000000002f60 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000018da40 : and bh, byte ptr [rbp - 8] ; call rsp
0x00000000000743da : and bh, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000009e927 : and bl, al ; nop dword ptr [rax] ; ret
0x0000000000187690 : and bl, bl ; sti ; jmp rax
0x000000000007b1a2 : and bl, ch ; ret 0x1f0f
0x00000000001ab4f0 : and bl, dl ; cmc ; jmp qword ptr [rsi]
0x0000000000086111 : and byte ptr [r8 + 0x31], r9b ; ret 0x93be
0x000000000007fc97 : and byte ptr [r8 + 0x39], r9b ; ret
0x00000000001095d7 : and byte ptr [r8 + rax], r8b ; ret
0x000000000007313a : and byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000a1ba6 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000007bc24 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x00000000001040fd : and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x0000000000085c8b : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000007fc98 : and byte ptr [rax + 0x39], cl ; ret
0x000000000003c533 : and byte ptr [rax + 0x39], cl ; ret 0x1677
0x000000000003c549 : and byte ptr [rax + 0x39], cl ; ret 0xea76
0x00000000001884c0 : and byte ptr [rax + 0x7fa0fffc], al ; cld ; jmp qword ptr [rax]
0x000000000007e743 : and byte ptr [rax + 1], cl ; ret
0x0000000000097b66 : and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000001095d8 : and byte ptr [rax + rax], al ; ret
0x00000000000fd273 : and byte ptr [rax + rax], ch ; pop rbx ; ret
0x000000000007fc94 : and byte ptr [rax - 0x73], cl ; and byte ptr [r8 + 0x39], r9b ; ret
0x0000000000080a93 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x000000000007313b : and byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000815be : and byte ptr [rax - 0x77], cl ; and al, 0x10 ; call rdx
0x000000000006f15d : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008765b : and byte ptr [rax - 0x77], cl ; jae 0x87671 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003aadc : and byte ptr [rax - 0x77], cl ; pop rax ; or cl, ch ; ret 0xfffa
0x000000000004446f : and byte ptr [rax - 0x77], cl ; ret
0x00000000001347a0 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000000482a1 : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000080ac6 : and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000002e694 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2e6a8 ; call rax
0x00000000000246d6 : and byte ptr [rax - 0x7d], cl ; ret
0x00000000000798a2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000103192 : and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x1f416
0x00000000000a26fc : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000c3141 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f871e : and byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000009fa5c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x0000000000187a7c : and byte ptr [rax], dh ; cld ; inc dword ptr [rax] ; xor bh, ah ; call rax
0x00000000000a1ba7 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000019ac80 : and byte ptr [rax], dl ; out dx, al ; jmp qword ptr [rcx]
0x000000000019f8c0 : and byte ptr [rbp - 0x10], bl ; call qword ptr [rax]
0x00000000000d19d5 : and byte ptr [rbp - 0x3a7cfe8e], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001880ac : and byte ptr [rbp - 0x7b490004], al ; cld ; jmp qword ptr [rsi]
0x00000000001884d8 : and byte ptr [rbp - 4], bh ; jmp qword ptr [rax + 0x20fffc7c]
0x00000000001154b0 : and byte ptr [rbx + 0x2b2fff8], al ; cmove eax, edx ; ret
0x00000000000346d8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000024182 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001987cd : and byte ptr [rbx + 0xa410204], al ; ret
0x000000000019f17d : and byte ptr [rbx + 0xac90204], al ; ret
0x0000000000195d19 : and byte ptr [rbx + 0xaec0204], al ; ret
0x000000000019f199 : and byte ptr [rbx - 0x73fc79fc], al ; add ah, byte ptr [rdi + 0xa] ; ret
0x000000000010954e : and byte ptr [rbx - 0xd], bl ; ret
0x00000000001a45b0 : and byte ptr [rbx], ch ; jmp rdx
0x000000000007bc25 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x0000000000039e25 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xffffffffffffffe8 ; ret
0x000000000003c868 : and byte ptr [rcx - 0x2ff6b740], cl ; ret
0x00000000000e479b : and byte ptr [rcx - 0x77], al ; ret 0x3145
0x00000000001b3970 : and byte ptr [rcx - 9], cl ; jmp qword ptr [rax]
0x00000000000ed3f0 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000fb161 : and byte ptr [rcx], cl ; ror byte ptr [rax + 9], 1 ; lock or rax, rdi ; ret
0x000000000006f0e5 : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000bd3e8 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], -0x3c ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000120173 : and byte ptr [rdi + 1], bh ; call 0x12c418
0x00000000001884c8 : and byte ptr [rdi - 4], bh ; jmp qword ptr [rax + 0x20fffc7e]
0x000000000019b480 : and byte ptr [rdi], 0xee ; call qword ptr [rdx]
0x00000000001877f8 : and byte ptr [rdi], al ; cld ; inc dword ptr [rax] ; or esp, edi ; jmp rax
0x0000000000187278 : and byte ptr [rdi], bl ; sti ; call qword ptr [rax]
0x00000000001879d8 : and byte ptr [rdi], ch ; cld ; inc dword ptr [rax] ; xor esp, edi ; jmp rax
0x000000000002fcb5 : and byte ptr [rdi], cl ; mov bh, -0x40 ; ret
0x00000000000bcfd2 : and byte ptr [rdi], cl ; test ah, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x00000000000f36de : and byte ptr [rdi], cl ; test bl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000000f3736 : and byte ptr [rdi], cl ; test byte ptr [rbx], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000000f367d : and byte ptr [rdi], cl ; test byte ptr [rcx + rax - 0x7cb80000], bh ; ret 0x3c01
0x00000000000f361d : and byte ptr [rdi], cl ; test byte ptr [rcx + rax - 0x7cb80000], dl ; ret 0x3c01
0x000000000009e619 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00000000001630c0 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000007e0c5 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8441
0x00000000001a31b0 : and byte ptr [rdx + rsi*8], al ; jmp rdx
0x00000000001882b4 : and byte ptr [rdx - 0x7e5f0004], al ; cld ; call qword ptr [rax]
0x000000000019c750 : and byte ptr [rdx], 0xee ; jmp rcx
0x0000000000187b5c : and byte ptr [rdx], 0xfc ; call rax
0x0000000000187ab0 : and byte ptr [rdx], ch ; cld ; jmp rax
0x0000000000174068 : and byte ptr [rdx], dh ; in eax, dx ; inc dword ptr [rax] ; xor ch, ch ; call rax
0x00000000001879f4 : and byte ptr [rip + 0x2f00fffc], ch ; cld ; jmp rax
0x0000000000160c5a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000194725 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000002bea : and byte ptr [rsi - 0x32], dh ; clc ; ret
0x000000000017980c : and byte ptr [rsi - 0x717f000e], cl ; call qword ptr [rax]
0x000000000017b1c0 : and byte ptr [rsi - 0xa], cl ; jmp qword ptr [rax]
0x00000000001884d0 : and byte ptr [rsi - 4], bh ; jmp qword ptr [rax + 0x20fffc7d]
0x00000000000f3ea1 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rcx - 1], 0 ; ret
0x0000000000187a94 : and byte ptr [rsp + rdi*8], ch ; inc dword ptr [rax] ; cld ; jmp rax
0x00000000000a3a32 : and ch, 0xf ; je 0xa3a59 ; add rax, 2 ; ret
0x000000000019bc8c : and ch, byte ptr [rax] ; out dx, al ; jmp qword ptr [rdx]
0x00000000000d531d : and ch, cl ; cmp esp, -1 ; push rdi ; ret 0
0x000000000019c751 : and ch, dh ; jmp rcx
0x00000000000a3a1d : and cl, 0xf ; je 0xa3a45 ; ret
0x0000000000003906 : and cl, ah ; ret
0x00000000001a7190 : and cl, al ; hlt ; jmp qword ptr [rsi]
0x000000000019b734 : and cl, bh ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000548af : and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x00000000000e68ab : and cl, byte ptr [rax - 0x75] ; je 0xe68dc ; xor byte ptr [rax - 0x77], cl ; ret 0x8b44
0x0000000000048bb4 : and cl, byte ptr [rax - 0x7d] ; ret
0x000000000011fe8c : and cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x0000000000046ccd : and cl, byte ptr [rcx + 0x1ee0c1d0] ; or eax, esi ; ret
0x0000000000092d20 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008cafd : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000002e859 : and cl, byte ptr [rdi] ; xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000001aa4a4 : and cl, ch ; hlt ; jmp qword ptr [rdx]
0x00000000001ac5f0 : and dh, ah ; cmc ; call qword ptr [rax]
0x00000000001876f8 : and dh, bl ; sti ; inc dword ptr [rax] ; loopne 0x187701 ; jmp rax
0x00000000001b0b5d : and dh, dh ; jmp qword ptr [rdx]
0x000000000008d10b : and dh, dh ; ret 0x7504
0x00000000001ad270 : and dl, bh ; cmc ; call qword ptr [rax]
0x0000000000187408 : and dword ptr [rax - 0x575e0003], ebp ; std ; jmp qword ptr [rcx]
0x0000000000022bf2 : and dword ptr [rax - 0x77], ecx ; fimul word ptr [rax - 0x77] ; ret 0x8348
0x000000000006a97e : and dword ptr [rax - 0x77], ecx ; ret
0x0000000000022eb6 : and dword ptr [rax - 0x77], ecx ; ret 0x8948
0x00000000001032f6 : and dword ptr [rax - 0x77], ecx ; ret 0xf66
0x00000000000fa691 : and dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f34a1 : and dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000013138e : and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000004eedc : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000177502 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x00000000001873f8 : and dword ptr [rbp - 0x59de0003], esp ; std ; jmp qword ptr [rcx]
0x0000000000075bcf : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000031c4b : and dword ptr [rcx + rdi], esi ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001a12e5 : and dword ptr [rcx], eax ; add al, bh ; ret
0x0000000000032e1b : and dword ptr [rdi + 5], esp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000037596 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x0000000000187400 : and dword ptr [rdi - 0x585e0003], esp ; std ; jmp qword ptr [rcx]
0x0000000000074150 : and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000037778 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000008ff0 : and dword ptr [rdi], ebx ; add byte ptr [rax], al ; and al, byte ptr [rax] ; or al, 0 ; ret
0x00000000000f6d8b : and dword ptr [rip - 0x9cf0000], eax ; mov rdi, r12 ; call rbx
0x00000000001745b9 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000009e44b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x0000000000177501 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001662e6 : and eax, 0 ; add bl, dh ; ret
0x00000000000225db : and eax, 0 ; ret
0x00000000000f1253 : and eax, 0x100f ; ret
0x0000000000073a72 : and eax, 0x200 ; ret
0x00000000000c28c5 : and eax, 0x2d0 ; mov eax, esi ; ret
0x00000000000fafb4 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x000000000008b697 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x0000000000021ee2 : and eax, 0x30 ; call rax
0x0000000000031c9c : and eax, 0x30 ; call rdx
0x0000000000036ad2 : and eax, 0x30 ; jmp rax
0x0000000000047587 : and eax, 0x394d3674 ; ret 0x830f
0x00000000000a264d : and eax, 0x3fc00 ; pop rbx ; ret
0x00000000000a2670 : and eax, 0x3fc00 ; ret
0x00000000000a262c : and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000166057 : and eax, 0x48c57500 ; add esp, 8 ; ret
0x000000000011b614 : and eax, 0x4c000000 ; mov edi, esp ; call 0x878d9
0x000000000009492e : and eax, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x000000000002fdc2 : and eax, 0x7f ; ret
0x00000000000a26b0 : and eax, 0x7ff80000 ; ret
0x0000000000036324 : and eax, 0x80 ; ret
0x000000000003693d : and eax, 0x8000 ; ret
0x00000000000363e7 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000073a42 : and eax, 0x804 ; ret
0x00000000000be310 : and eax, 0x89480030 ; ret 0xe6e9
0x0000000000117a97 : and eax, 0x8b002ac5 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000108d37 : and eax, 0xc ; cmp eax, 4 ; je 0x108d48 ; ret
0x0000000000108e86 : and eax, 0xc ; pop r12 ; ret
0x00000000001a170d : and eax, 0xc6b00001 ; int1 ; call qword ptr [rsi]
0x00000000001a1725 : and eax, 0xc6b80001 ; int1 ; call qword ptr [rbx]
0x00000000001a173d : and eax, 0xc6c00001 ; int1 ; call qword ptr [rbx]
0x0000000000166b3a : and eax, 0xf31e7500 ; ret
0x00000000001662f5 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x00000000000fb121 : and eax, 0xfffff000 ; or eax, edi ; ret
0x000000000010d198 : and eax, 0xffffff ; ret
0x0000000000118383 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000d2908 : and eax, 1 ; nop dword ptr [rax + rax] ; pop rbx ; ret
0x00000000000fe8fa : and eax, 1 ; nop dword ptr [rax] ; ret
0x000000000002fd72 : and eax, 1 ; ret
0x000000000002fbf2 : and eax, 2 ; movzx eax, ax ; ret
0x00000000000d2821 : and eax, 2 ; pop rbp ; ret
0x00000000000384bc : and eax, 2 ; sub eax, 1 ; ret
0x000000000002fc92 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002fbb2 : and eax, 8 ; movzx eax, ax ; ret
0x00000000000365f4 : and eax, 8 ; ret
0x000000000015b369 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000037a13 : and eax, dword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000035f92 : and eax, ecx ; ret
0x0000000000036062 : and eax, edx ; movq xmm0, rax ; ret
0x0000000000036641 : and eax, edx ; ret
0x000000000002ff8d : and eax, esi ; ret
0x0000000000195b94 : and ebp, dword ptr [rsi - 0x13] ; jmp qword ptr [rdx]
0x00000000000d5393 : and ebp, ecx ; or eax, 0xf7fffffc ; ret 0
0x0000000000075bd0 : and ebp, edi ; pop rbx ; ret
0x0000000000108cd2 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x108ce5 ; ret
0x0000000000187285 : and ebx, edi ; jmp rax
0x0000000000187281 : and ebx, edi ; push rax ; and ebx, edi ; jmp rax
0x00000000000f3c0a : and ebx, esi ; ret
0x00000000001621d5 : and ecx, 0xff ; sub eax, ecx ; ret
0x0000000000161908 : and ecx, 0xffff ; sub eax, ecx ; ret
0x0000000000071d00 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000d9db9 : and ecx, dword ptr [rax + 0x63] ; ret 0x8d48
0x0000000000166549 : and ecx, dword ptr [rdi + 0x1f0fffeb] ; add bl, dh ; ret
0x000000000007d75c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x000000000002fdd2 : and edi, 0xffffff80 ; sete al ; ret
0x00000000000c32ac : and edi, dword ptr [rax + 1] ; ret
0x000000000018d589 : and edi, eax ; call rsp
0x000000000007ea4e : and edi, edx ; neg rdi ; call qword ptr [rax]
0x00000000001b3129 : and edi, esi ; call qword ptr [rdx]
0x0000000000187b61 : and edi, esp ; jmp qword ptr [rax]
0x000000000003cfa7 : and edx, 0x3ff ; xor eax, edx ; ret
0x00000000000375d8 : and edx, 1 ; jne 0x375f0 ; xor eax, eax ; nop ; ret
0x000000000018e621 : and edx, edi ; call rsp
0x0000000000002bd5 : and edx, esp ; bswap ebx ; clc ; ret
0x000000000004507b : and esi, 0x8948ffff ; ret
0x0000000000071e03 : and esi, 1 ; mov eax, esi ; ret
0x00000000000d3322 : and esi, 4 ; jne 0xd32d6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019bfec : and esi, dword ptr [rdi] ; out dx, al ; jmp qword ptr [rdx]
0x000000000019b2e9 : and esi, ebp ; jmp qword ptr [rax]
0x000000000017a05c : and esi, edi ; dec dword ptr [rbx] ; add esi, esp ; jmp rsi
0x00000000001b0dcd : and esi, esi ; jmp qword ptr [rdx]
0x0000000000133386 : and esp, edi ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x9274
0x0000000000022bf1 : and qword ptr [rax - 0x77], rcx ; fimul word ptr [rax - 0x77] ; ret 0x8348
0x0000000000022eb5 : and qword ptr [rax - 0x77], rcx ; ret 0x8948
0x0000000000037595 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000037777 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000018e620 : and r10, rdi ; call rsp
0x0000000000037a12 : and rax, qword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000036061 : and rax, rdx ; movq xmm0, rax ; ret
0x000000000007ea4d : and rdi, rdx ; neg rdi ; call qword ptr [rax]
0x00000000000363ab : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x00000000000363a8 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x000000000009438a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000008c960 : bsf eax, eax ; add rax, rdi ; ret
0x000000000008c970 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008c980 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008c950 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000008c89f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000094583 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008d605 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x000000000008957d : bsf eax, edx ; ret
0x00000000000896ea : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000000946a0 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000000895ca : bsf rax, rdx ; ret
0x0000000000097c31 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x000000000008b297 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000097b00 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000097b10 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000097b20 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008b51b : bsr eax, esi ; add rax, rdi ; ret
0x000000000008b429 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008b325 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000008b296 : bsr rax, rax ; add rax, rdi ; ret
0x000000000008b51a : bsr rax, rsi ; add rax, rdi ; ret
0x000000000008b428 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008b324 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000128cbd : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000010d172 : bswap eax ; ret
0x0000000000002bd7 : bswap ebx ; clc ; ret
0x0000000000106574 : call 0x102862
0x000000000010664d : call 0x102912
0x000000000004c39e : call 0x108652
0x00000000000ecac4 : call 0x108d12
0x000000000005fe36 : call 0x1105fe2c
0x000000000005fed1 : call 0x1105fec7
0x00000000000606a4 : call 0x1106069a
0x0000000000060c59 : call 0x11060c4f
0x0000000000062311 : call 0x11062307
0x000000000019e038 : call 0x1119d9fd
0x00000000001a8848 : call 0x111a7d78
0x000000000011200b : call 0x11e222
0x0000000000110b9a : call 0x11e618
0x0000000000128ae8 : call 0x12b8c8
0x000000000012f651 : call 0x12b8f2
0x000000000012f668 : call 0x12b922
0x0000000000120179 : call 0x12c412
0x000000000012036f : call 0x12f089
0x00000000001909e8 : call 0x1318f3e4
0x00000000001a2b68 : call 0x131a1d5a
0x00000000000b1eb0 : call 0x137467
0x0000000000112b78 : call 0x137f67
0x0000000000037570 : call 0x140cbd83
0x00000000001ac568 : call 0x141abb55
0x000000000002a851 : call 0x1c52ba1
0x000000000002a851 : call 0x1c52ba5
0x000000000002b9a1 : call 0x1c53cf1
0x000000000002b9a1 : call 0x1c53cf5
0x00000000000f3155 : call 0x1f412
0x00000000000e36ab : call 0x1f478
0x00000000001a6268 : call 0x221a56e8
0x00000000001a6df8 : call 0x221a62b9
0x000000000019976c : call 0x2319852c
0x0000000000199978 : call 0x2319876c
0x000000000019a624 : call 0x23199403
0x00000000001a7288 : call 0x231a6758
0x00000000001b6acc : call 0x231b6208
0x0000000000025386 : call 0x24796
0x0000000000045e68 : call 0x2fae9
0x0000000000039129 : call 0x383a7
0x00000000000ac790 : call 0x389b2
0x00000000000c1160 : call 0x3d3a2
0x00000000000d918d : call 0x42d01ad6
0x00000000000d91a1 : call 0x42d01aea
0x00000000000b1640 : call 0x48cd3f67
0x00000000000b1b88 : call 0x48cd44af
0x000000000004d5e2 : call 0x49882
0x0000000000072ff4 : call 0x49be7
0x00000000000aa825 : call 0x4ccd3d3c
0x0000000000121f4a : call 0x4cd4a89e
0x000000000007e831 : call 0x54269
0x00000000001214d7 : call 0x5d7c2
0x000000000010926f : call 0x66d293bb
0x000000000008729a : call 0x6da38
0x00000000000757f8 : call 0x71a72
0x0000000000137b9b : call 0x73e22
0x0000000000078d68 : call 0x74fd2
0x000000000010c7c5 : call 0x78a02
0x000000000010b1d2 : call 0x7c768
0x000000000008349b : call 0x7f249
0x00000000000cb60b : call 0x878d2
0x000000000002d030 : call 0x892a2
0x00000000000dc6c0 : call 0x8d044
0x0000000000045f11 : call 0x92202
0x0000000000021ac3 : call 0xa25b6
0x000000000013548c : call 0xc1752
0x0000000000093815 : call 0xc2898
0x00000000000e5651 : call 0xc28e7
0x00000000000e567e : call 0xc2907
0x00000000000e32c2 : call 0xdf562
0x00000000000efaaa : call 0xebd22
0x000000000001feac : call 0xec15b
0x00000000000f082f : call 0xeca92
0x00000000000f082e : call 0xeca93
0x000000000005d9cd : call 0xedbb9
0x00000000000fe8f9 : call 0xf11c989
0x00000000000feb78 : call 0xf11cc09
0x00000000000febf0 : call 0xf11cc81
0x00000000000fec80 : call 0xf11cd11
0x00000000000fed10 : call 0xf11cda1
0x00000000000fed90 : call 0xf11ce21
0x00000000000fee20 : call 0xf11ceb1
0x00000000000feea0 : call 0xf11cf31
0x00000000000fef30 : call 0xf11cfc1
0x00000000000fefc0 : call 0xf11d051
0x00000000000ff050 : call 0xf11d0e1
0x00000000000ff0e0 : call 0xf11d171
0x00000000000ff200 : call 0xf11d291
0x00000000000ff3b8 : call 0xf11d449
0x00000000000cc1fc : call 0xf1897
0x0000000000085b14 : call 0xf1dc2
0x000000000007d7ff : call 0xfca114f
0x000000000012adfa : call 0xffffffff80d5a512
0x000000000012afc4 : call 0xffffffff80d5a6dc
0x000000000012b071 : call 0xffffffff80d5a789
0x000000000005da65 : call 0xffffffff834de2e7
0x00000000000b14f3 : call 0xffffffff89cd3e1a
0x0000000000031b43 : call 0xffffffff8b4fddd3
0x0000000000175023 : call 0xffffffffaed9ee99
0x00000000000b0df8 : call 0xffffffffc2345740
0x000000000007ff8f : call 0xffffffffc28d4799
0x00000000000827ce : call 0xffffffffc28d6fd8
0x0000000000083b42 : call 0xffffffffc28d834c
0x0000000000081d69 : call 0xffffffffc2916582
0x00000000000e608f : call 0xffffffffc297a899
0x0000000000100084 : call 0xffffffffc299008e
0x00000000000b7b6a : call 0xffffffffc2ba8a86
0x000000000004090b : call 0xffffffffc3055215
0x000000000009e284 : call 0xffffffffc309e294
0x00000000000a21f6 : call 0xffffffffc316af4c
0x00000000000a220f : call 0xffffffffc316af65
0x00000000001738e8 : call 0xffffffffc3172506
0x0000000000104cb2 : call 0xffffffffc3555c00
0x000000000006e567 : call 0xffffffffc36326cd
0x000000000006ffe4 : call 0xffffffffc363414a
0x00000000000709c7 : call 0xffffffffc3634b2d
0x0000000000073f4c : call 0xffffffffc36380b2
0x00000000000a4bbb : call 0xffffffffc3668d21
0x0000000000115892 : call 0xffffffffc36d99f8
0x000000000011e1e2 : call 0xffffffffc36f22ec
0x0000000000126984 : call 0xffffffffc39bb195
0x000000000015e125 : call 0xffffffffc39bf03e
0x000000000015f1a5 : call 0xffffffffc39c00be
0x000000000003a2e9 : call 0xffffffffc3b2b23a
0x000000000008d747 : call 0xffffffffc3d96098
0x0000000000087897 : call 0xffffffffc40101e8
0x0000000000089097 : call 0xffffffffc40119e8
0x000000000007cc0d : call 0xffffffffd107cc14
0x000000000017a23c : call 0xffffffffd4179650
0x00000000001a9358 : call 0xffffffffe11a88a2
0x00000000000366d8 : call 0xffffffffe2852968
0x000000000017a1bc : call 0xffffffffe41795d0
0x0000000000197208 : call 0xffffffffe4195fb4
0x000000000005f758 : call 0xffffffffef067d2a
0x000000000004a3c6 : call 0xfffffffffb2d315d
0x0000000000136ba1 : call 0xffffffffff136baa
0x0000000000136bd2 : call 0xffffffffff136bdb
0x00000000001346a4 : call 0xffffffffff136f6e
0x00000000001346a4 : call 0xffffffffff136f72
0x000000000012a259 : call qword ptr [r10]
0x000000000004bdb2 : call qword ptr [r11 + rax*8]
0x00000000001210ab : call qword ptr [r11]
0x000000000001ff64 : call qword ptr [r14]
0x0000000000178e47 : call qword ptr [rax + 0x10ffef52]
0x000000000018736f : call qword ptr [rax + 0x10fffb82]
0x0000000000187377 : call qword ptr [rax + 0x10fffb85]
0x000000000018737f : call qword ptr [rax + 0x10fffb88]
0x0000000000187387 : call qword ptr [rax + 0x10fffb8b]
0x000000000018738f : call qword ptr [rax + 0x10fffb8e]
0x0000000000187397 : call qword ptr [rax + 0x10fffb91]
0x000000000018739f : call qword ptr [rax + 0x10fffb94]
0x00000000001882d7 : call qword ptr [rax + 0x10fffc7d]
0x00000000001882cf : call qword ptr [rax + 0x10fffc7e]
0x00000000001882c7 : call qword ptr [rax + 0x10fffc7f]
0x00000000001882bf : call qword ptr [rax + 0x10fffc80]
0x0000000000188a33 : call qword ptr [rax + 0x10fffc84]
0x00000000001889f7 : call qword ptr [rax + 0x10fffc85]
0x0000000000188a3b : call qword ptr [rax + 0x10fffc87]
0x00000000001889ff : call qword ptr [rax + 0x10fffc88]
0x0000000000188a43 : call qword ptr [rax + 0x10fffc8a]
0x0000000000188a07 : call qword ptr [rax + 0x10fffc8b]
0x0000000000188a4b : call qword ptr [rax + 0x10fffc8d]
0x0000000000188a0f : call qword ptr [rax + 0x10fffc8e]
0x0000000000188a53 : call qword ptr [rax + 0x10fffc90]
0x0000000000188a17 : call qword ptr [rax + 0x10fffc91]
0x0000000000188a5b : call qword ptr [rax + 0x10fffc93]
0x0000000000188a1f : call qword ptr [rax + 0x10fffc94]
0x0000000000188a63 : call qword ptr [rax + 0x10fffc96]
0x0000000000188a27 : call qword ptr [rax + 0x10fffc97]
0x000000000018768b : call qword ptr [rax + 0x20fffbe8]
0x0000000000187aab : call qword ptr [rax + 0x20fffc37]
0x0000000000187d93 : call qword ptr [rax + 0x20fffc61]
0x0000000000187b7b : call qword ptr [rax + 0x20fffc64]
0x00000000001880a7 : call qword ptr [rax + 0x20fffc85]
0x000000000018827f : call qword ptr [rax + 0x20fffc89]
0x000000000018859f : call qword ptr [rax + 0x20fffcac]
0x0000000000188777 : call qword ptr [rax + 0x20fffcb0]
0x00000000000234ee : call qword ptr [rax + 0x48e9c289]
0x000000000005c1ae : call qword ptr [rax + 0x8c28348]
0x0000000000187b4f : call qword ptr [rax - 0x1f0003e2]
0x0000000000187afb : call qword ptr [rax - 0x1f0003e9]
0x0000000000187983 : call qword ptr [rax - 0x1f00040e]
0x00000000001877a3 : call qword ptr [rax - 0x1f00042c]
0x00000000001877b7 : call qword ptr [rax - 0x1f00043a]
0x0000000000187343 : call qword ptr [rax - 0x1f00048e]
0x00000000001790cb : call qword ptr [rax - 0x1f000e83]
0x000000000018776f : call qword ptr [rax - 0x2f000440]
0x0000000000178eb3 : call qword ptr [rax - 0x2f0010ae]
0x000000000003610e : call qword ptr [rax - 0x3d]
0x0000000000179507 : call qword ptr [rax - 0x4f000d9d]
0x0000000000187aa7 : call qword ptr [rax - 0x6f0003cb]
0x0000000000187687 : call qword ptr [rax - 0x6f00041a]
0x00000000001889eb : call qword ptr [rax - 0xf000360]
0x00000000001346a8 : call qword ptr [rax]
0x000000000018752f : call qword ptr [rbp + 0x11fffdb8]
0x000000000018a35b : call qword ptr [rbx + rax + 1]
0x000000000004bdb3 : call qword ptr [rbx + rax*8]
0x00000000001660c0 : call qword ptr [rbx]
0x00000000001875fb : call qword ptr [rcx]
0x0000000000179807 : call qword ptr [rdi]
0x0000000000187e57 : call qword ptr [rdx + 0x12fffc57]
0x0000000000187e4f : call qword ptr [rdx + 0x12fffc58]
0x0000000000187e47 : call qword ptr [rdx + 0x12fffc59]
0x0000000000187e3f : call qword ptr [rdx + 0x12fffc5a]
0x0000000000187c67 : call qword ptr [rdx + 0x22fffc5f]
0x0000000000188153 : call qword ptr [rdx + 0x22fffc87]
0x000000000018864b : call qword ptr [rdx + 0x22fffcae]
0x000000000018e7b3 : call qword ptr [rdx + rax*8 + 2]
0x0000000000179c93 : call qword ptr [rdx + rax*8]
0x0000000000179d7b : call qword ptr [rdx - 0x46]
0x0000000000179c57 : call qword ptr [rdx]
0x000000000008648e : call qword ptr [rip + 0x33b6ec]
0x000000000018758f : call qword ptr [rsi + 0x11fffdb9]
0x0000000000187bc3 : call qword ptr [rsi + 0x26fffc63]
0x00000000001885e7 : call qword ptr [rsi + 0x26fffcab]
0x000000000001ff65 : call qword ptr [rsi]
0x0000000000178b13 : call qword ptr [rsp + rbx*8 - 0x3c5b0012]
0x0000000000179531 : call qword ptr fs:[rax]
0x0000000000179549 : call qword ptr gs:[rax]
0x0000000000028a16 : call r12
0x0000000000025a53 : call r14
0x00000000000237df : call r15
0x000000000006e2b2 : call r8
0x000000000017984f : call rax
0x00000000000f733b : call rbx
0x00000000001874ff : call rcx
0x00000000000237e0 : call rdi
0x0000000000031ca1 : call rdx
0x0000000000025a54 : call rsi
0x0000000000028a17 : call rsp
0x00000000000c0463 : cdq ; add al, 0x30 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001a8af5 : cdq ; add dword ptr [rax], eax ; js 0x1a8b2c ; cmc ; jmp qword ptr [rcx]
0x00000000001a8af4 : cdq ; add dword ptr [rax], eax ; js 0x1a8b2d ; cmc ; jmp qword ptr [rcx]
0x00000000001a8b6d : cdq ; add dword ptr [rax], eax ; lock sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001a8b0d : cdq ; add dword ptr [rax], eax ; nop ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001a8ac5 : cdq ; add dword ptr [rax], eax ; sub al, -0xb ; jmp qword ptr [rcx]
0x000000000018a508 : cdq ; add edi, ebp ; call rsp
0x000000000007ea1b : cdq ; add esi, dword ptr [rax + rax] ; xor edi, edi ; mov r14, rdx ; call qword ptr [rax]
0x000000000018eac9 : cdq ; cli ; jmp rsp
0x00000000000f5223 : cdq ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000003c874 : cdq ; idiv rsi ; ret
0x0000000000176d60 : cdq ; in eax, -1 ; lahf ; mov dh, -0x39 ; ret 0xe71f
0x0000000000179121 : cdq ; int1 ; jmp qword ptr [rax]
0x0000000000038739 : cdq ; pop r14 ; idiv r9 ; pop r15 ; ret
0x000000000004d5e3 : cdq ; ret 0xffff
0x00000000000f113b : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000007a068 : cdqe ; ret
0x0000000000118d9d : cdqe ; shr rax, 4 ; ret
0x00000000000a5fff : clc ; adc esi, dword ptr [rbp + rcx - 0x77] ; ret 0xc9eb
0x0000000000048c29 : clc ; add al, -0x77 ; ret
0x0000000000080c68 : clc ; add al, 0x74 ; cmp al, -0x77 ; ret 0xb48b
0x00000000000dd488 : clc ; add al, 0xf ; xchg dword ptr [rax - 0x76fffff4], esi ; ret 0x8d48
0x00000000000e075d : clc ; add al, 0xf ; xchg eax, ebp ; ret 0x2041
0x00000000000b0089 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xc7e9
0x00000000000afee5 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xf883
0x00000000001b2768 : clc ; add bh, dh ; call qword ptr [rdi]
0x000000000004fd43 : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000019ea4d : clc ; add byte ptr [rax], al ; lock mov ebp, edi ; jmp qword ptr [rdx]
0x000000000019ea1d : clc ; add byte ptr [rax], al ; loopne 0x19e9b3 ; out dx, eax ; jmp qword ptr [rax]
0x000000000018a165 : clc ; add byte ptr [rax], al ; mov ah, -0x51 ; out dx, al ; call rsp
0x00000000000e57a0 : clc ; add byte ptr [rsp + rax - 0x77], dh ; ret 0xeeeb
0x00000000000a44a4 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x6fe9
0x00000000000a4418 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8548
0x00000000000a448c : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8aeb
0x0000000000077c0c : clc ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000074a09 : clc ; add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x0000000000061f18 : clc ; add cl, byte ptr [rax + 0x39] ; ret 0x8f0f
0x000000000004971b : clc ; add cl, byte ptr [rbp + 0x39] ; ret
0x00000000000a6ecb : clc ; add cl, byte ptr [rcx + 0x39] ; ret
0x00000000000ce4ee : clc ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x000000000018f0d5 : clc ; add dword ptr [rax], eax ; xlatb ; std ; jmp rsp
0x0000000000094c3b : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000118385 : clc ; add eax, 0x10 ; ret
0x00000000000b83b6 : clc ; add eax, 0x2907fbc1 ; ret 0x8944
0x00000000000b2d68 : clc ; add eax, 0x89d02944 ; ret
0x00000000000b2f5d : clc ; add eax, 0xfd02944 ; scasd eax, dword ptr [rdi] ; ret
0x0000000000087454 : clc ; add ecx, dword ptr [rax + 1] ; ret 0x6348
0x00000000000344a0 : clc ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x0000000000121e81 : clc ; add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x0000000000097c36 : clc ; add rax, r8 ; ret
0x000000000008c728 : clc ; add rax, rcx ; ret
0x0000000000109830 : clc ; add rsp, 8 ; ret
0x000000000007e0c4 : clc ; and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8441
0x000000000002fdc1 : clc ; and eax, 0x7f ; ret
0x000000000010d197 : clc ; and eax, 0xffffff ; ret
0x000000000010d171 : clc ; bswap eax ; ret
0x000000000018d412 : clc ; call rsp
0x00000000001a07a8 : clc ; cld ; jmp qword ptr [rbx]
0x00000000001ad211 : clc ; cmc ; call qword ptr [rax]
0x00000000001151a1 : clc ; cmc ; je 0x11519d ; pop rbx ; ret
0x00000000001ace8c : clc ; cmc ; jmp qword ptr [rdx]
0x00000000000496ba : clc ; cmovae rax, rsi ; pop rbx ; ret
0x0000000000049796 : clc ; cmovae rax, rsi ; ret
0x0000000000083fce : clc ; cmovne rax, rcx ; add rsp, 8 ; ret
0x00000000001a9188 : clc ; cmp ch, dh ; jmp qword ptr [rcx]
0x0000000000097f36 : clc ; cmp eax, 0x89480f75 ; clc ; ret
0x0000000000003a9e : clc ; cmp eax, ecx ; mov bl, -9 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000162179 : clc ; cmp rcx, rax ; jne 0x1621ab ; xor eax, eax ; ret
0x0000000000162178 : clc ; cmp rcx, rax ; jne 0x1621ac ; xor eax, eax ; ret
0x0000000000162fb9 : clc ; cmp rcx, rax ; jne 0x162feb ; xor eax, eax ; ret
0x0000000000162fb8 : clc ; cmp rcx, rax ; jne 0x162fec ; xor eax, eax ; ret
0x000000000003c872 : clc ; cqo ; idiv rsi ; ret
0x000000000002fa36 : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000081664 : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000013338b : clc ; dec dword ptr [rax - 0x77] ; ret 0x9274
0x000000000006f8ef : clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x00000000000aed3a : clc ; dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000010439f : clc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], -0x6b ; ret
0x000000000018da3a : clc ; dec dword ptr [rbp + rbx*2 + 0x7d220002] ; clc ; call rsp
0x000000000018d852 : clc ; dec dword ptr [rbp + rcx*2 + 0x542d0002] ; clc ; call rsp
0x000000000018dd82 : clc ; dec dword ptr [rbp + rsi*2 - 0xad2fffe] ; clc ; call rsp
0x000000000018d582 : clc ; dec dword ptr [rbx + rdi + 0x23510002] ; clc ; call rsp
0x000000000018dd4a : clc ; dec dword ptr [rbx + rsi*2 - 0xc23fffe] ; clc ; call rsp
0x000000000004e173 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000004b982 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x850f
0x00000000000608c1 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000477d6 : clc ; dec dword ptr [rdi] ; ret 0x8341
0x000000000006e78f : clc ; dec dword ptr [rdi] ; test byte ptr [rcx - 0x76ffffff], cl ; ret 0xe283
0x00000000000724ab : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000018d892 : clc ; dec esp ; push rcx ; add al, byte ptr [rax] ; and al, 0x5e ; clc ; jmp rsp
0x000000000018d322 : clc ; dec esp ; sub al, 2 ; add byte ptr [rcx + rax - 8], dh ; jmp rsp
0x00000000001ac538 : clc ; in eax, -0xb ; call qword ptr [rax]
0x00000000000af035 : clc ; inc dword ptr [rbp + 0x79c789c0] ; ret
0x00000000001a6078 : clc ; jae 0x1a6072 ; jmp qword ptr [rcx]
0x000000000007853b : clc ; jmp 0x78502
0x00000000001a52f1 : clc ; jmp qword ptr [rdi]
0x00000000001ab59a : clc ; jmp qword ptr [rsi]
0x00000000000b8e19 : clc ; jmp rax
0x000000000018d32a : clc ; jmp rsp
0x0000000000164f9a : clc ; jne 0x1650a7 ; ret
0x0000000000164f99 : clc ; jne 0x1650a8 ; ret
0x0000000000092337 : clc ; jne 0x92211 ; ret
0x00000000001920d8 : clc ; jo 0x1920c8 ; jmp rbx
0x000000000018d37a : clc ; lcall ptr [rsi + rbp + 0x4c40002] ; clc ; jmp rsp
0x000000000018d6d2 : clc ; lcall ptr [rsp + rax*2 + 0x3c7b0002] ; clc ; jmp rsp
0x000000000019f588 : clc ; lock ; jmp qword ptr [rdi]
0x00000000001b4ed8 : clc ; mov bh, dh ; call qword ptr [rdx]
0x00000000000f3ebb : clc ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000097478 : clc ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000001759c2 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001957f8 : clc ; mov ch, ch ; call qword ptr [rdx]
0x0000000000145177 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000145ae7 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014d3e7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000145ce7 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014d357 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000145ee7 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014d2c7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000145193 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000039de2 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000000a423c : clc ; nop dword ptr [rax] ; ret
0x00000000000fe201 : clc ; nop word ptr [rax + rax] ; ret
0x00000000001ac788 : clc ; out -0xb, al ; call qword ptr [rax]
0x00000000001901f8 : clc ; pop rax ; std ; jmp qword ptr [rdi]
0x000000000003539c : clc ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000102a0d : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007e501 : clc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000109a62 : clc ; pop rbx ; ret
0x000000000002201f : clc ; push qword ptr [rax + 0x48] ; add esp, 8 ; ret
0x00000000000fb25c : clc ; push qword ptr [rax + rcx + 0x5b] ; pop rbp ; ret
0x00000000000bdefd : clc ; push qword ptr [rax + rsi - 0x77] ; ret 0xe283
0x000000000007753a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000133c3f : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x0000000000038515 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000007c940 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000075bcb : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000018d442 : clc ; push qword ptr [rdx + rsi + 0x12540002] ; clc ; call rsp
0x00000000001154b2 : clc ; push qword ptr [rdx - 0x3dbbf0fe] ; ret
0x0000000000002bad : clc ; ret
0x0000000000186912 : clc ; ret 0x6e1f
0x000000000010d181 : clc ; ror ax, 8 ; ret
0x00000000001ab6e8 : clc ; sal ebp, cl ; jmp qword ptr [rsi]
0x000000000003c813 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000a4489 : clc ; sar rax, 2 ; sub rdx, rax ; jmp 0xa4424
0x000000000010b71b : clc ; sar rax, 6 ; ret
0x0000000000038aaa : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000010d217 : clc ; shr eax, 0x18 ; ret
0x0000000000197ad8 : clc ; stosd dword ptr [rdi], eax ; in eax, dx ; call qword ptr [rcx]
0x00000000001352c0 : clc ; sub byte ptr [rax], al ; add byte ptr [rcx], 0 ; add dh, dh ; ret
0x00000000001a89a8 : clc ; sub dh, ch ; jmp qword ptr [rcx]
0x0000000000104b71 : clc ; sub eax, esi ; ret
0x000000000013d9fb : clc ; sub rax, rsi ; ret
0x00000000001b02e8 : clc ; test dh, dh ; jmp rdx
0x000000000002d3f3 : clc ; test rcx, rcx ; je 0x2d401 ; call rcx
0x00000000001a37a8 : clc ; xchg dl, dh ; jmp qword ptr [rcx]
0x00000000000c3092 : cld ; add byte ptr [rax], al ; ret
0x00000000001a378c : cld ; add dword ptr [r8], r8d ; loopne 0x1a371f ; jmp qword ptr [rcx]
0x00000000001a568c : cld ; add dword ptr fs:[rax], eax ; stosb byte ptr [rdi], al ; ret 0xffe7
0x00000000000a264f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000a2672 : cld ; add eax, dword ptr [rax] ; ret
0x00000000001882d6 : cld ; call qword ptr [rax + 0x10fffc7d]
0x00000000001882ce : cld ; call qword ptr [rax + 0x10fffc7e]
0x00000000001882c6 : cld ; call qword ptr [rax + 0x10fffc7f]
0x00000000001882be : cld ; call qword ptr [rax + 0x10fffc80]
0x0000000000188a32 : cld ; call qword ptr [rax + 0x10fffc84]
0x00000000001889f6 : cld ; call qword ptr [rax + 0x10fffc85]
0x0000000000188a3a : cld ; call qword ptr [rax + 0x10fffc87]
0x00000000001889fe : cld ; call qword ptr [rax + 0x10fffc88]
0x0000000000188a42 : cld ; call qword ptr [rax + 0x10fffc8a]
0x0000000000188a06 : cld ; call qword ptr [rax + 0x10fffc8b]
0x0000000000188a4a : cld ; call qword ptr [rax + 0x10fffc8d]
0x0000000000188a0e : cld ; call qword ptr [rax + 0x10fffc8e]
0x0000000000188a52 : cld ; call qword ptr [rax + 0x10fffc90]
0x0000000000188a16 : cld ; call qword ptr [rax + 0x10fffc91]
0x0000000000188a5a : cld ; call qword ptr [rax + 0x10fffc93]
0x0000000000188a1e : cld ; call qword ptr [rax + 0x10fffc94]
0x0000000000188a62 : cld ; call qword ptr [rax + 0x10fffc96]
0x0000000000188a26 : cld ; call qword ptr [rax + 0x10fffc97]
0x0000000000187aaa : cld ; call qword ptr [rax + 0x20fffc37]
0x0000000000187d92 : cld ; call qword ptr [rax + 0x20fffc61]
0x0000000000187b7a : cld ; call qword ptr [rax + 0x20fffc64]
0x00000000001880a6 : cld ; call qword ptr [rax + 0x20fffc85]
0x000000000018827e : cld ; call qword ptr [rax + 0x20fffc89]
0x000000000018859e : cld ; call qword ptr [rax + 0x20fffcac]
0x0000000000188776 : cld ; call qword ptr [rax + 0x20fffcb0]
0x0000000000187b4e : cld ; call qword ptr [rax - 0x1f0003e2]
0x0000000000187afa : cld ; call qword ptr [rax - 0x1f0003e9]
0x0000000000187aa6 : cld ; call qword ptr [rax - 0x6f0003cb]
0x00000000001889ea : cld ; call qword ptr [rax - 0xf000360]
0x00000000001791a6 : cld ; call qword ptr [rax]
0x0000000000187e56 : cld ; call qword ptr [rdx + 0x12fffc57]
0x0000000000187e4e : cld ; call qword ptr [rdx + 0x12fffc58]
0x0000000000187e46 : cld ; call qword ptr [rdx + 0x12fffc59]
0x0000000000187e3e : cld ; call qword ptr [rdx + 0x12fffc5a]
0x0000000000187c66 : cld ; call qword ptr [rdx + 0x22fffc5f]
0x0000000000188152 : cld ; call qword ptr [rdx + 0x22fffc87]
0x000000000018864a : cld ; call qword ptr [rdx + 0x22fffcae]
0x0000000000187c46 : cld ; call qword ptr [rdx]
0x0000000000187bc2 : cld ; call qword ptr [rsi + 0x26fffc63]
0x00000000001885e6 : cld ; call qword ptr [rsi + 0x26fffcab]
0x0000000000187be2 : cld ; call qword ptr [rsi]
0x0000000000187a8a : cld ; call rax
0x0000000000187c2e : cld ; call rdx
0x0000000000187bd2 : cld ; call rsi
0x0000000000187cfe : cld ; call rsp
0x00000000000eb6c4 : cld ; cmp al, 9 ; add byte ptr [rcx + rcx*4 - 0x1a], al ; call 0x878d9
0x0000000000165092 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x1650a8 ; xor eax, eax ; ret
0x0000000000165091 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x1650a9 ; xor eax, eax ; ret
0x00000000000b3cb8 : cld ; dec dword ptr [rax + 0x39] ; ret
0x00000000000c4d6e : cld ; dec dword ptr [rax - 0x77] ; ret 0x19eb
0x0000000000133387 : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x9274
0x000000000018826a : cld ; dec edx ; test bh, ah ; push qword ptr [rax - 0x7c] ; cld ; jmp rax
0x00000000000367e7 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000179d80 : cld ; fpatan ; jmp rsp
0x00000000001a7da1 : cld ; hlt ; jmp rax
0x00000000001a5b8c : cld ; imul eax, dword ptr [rcx], 0xf4637000 ; jmp qword ptr [rcx]
0x000000000019b89d : cld ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018788a : cld ; inc dword ptr [rax + 0x10] ; cld ; call rax
0x00000000001878ea : cld ; inc dword ptr [rax + 0x10fffc0f] ; add bh, ah ; call rax
0x0000000000187a2a : cld ; inc dword ptr [rax + 0x10fffc38] ; sub edi, esp ; call rax
0x0000000000187af6 : cld ; inc dword ptr [rax + 0x16] ; cld ; call qword ptr [rax - 0x1f0003e9]
0x0000000000187b4a : cld ; inc dword ptr [rax + 0x1d] ; cld ; call qword ptr [rax - 0x1f0003e2]
0x00000000001879d2 : cld ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x0000000000187a76 : cld ; inc dword ptr [rax + 0x2e] ; cld ; jmp qword ptr [rax]
0x0000000000187a5e : cld ; inc dword ptr [rax + 0x32] ; cld ; call qword ptr [rax]
0x0000000000187fae : cld ; inc dword ptr [rax + 0x54] ; cld ; jmp rax
0x0000000000187d9e : cld ; inc dword ptr [rax + 0x60] ; cld ; call rax
0x0000000000187b86 : cld ; inc dword ptr [rax + 0x63] ; cld ; call rax
0x0000000000187906 : cld ; inc dword ptr [rax + 0xd] ; cld ; inc dword ptr [rax + 0xf] ; cld ; call rax
0x0000000000187886 : cld ; inc dword ptr [rax + 0xe] ; cld ; inc dword ptr [rax + 0x10] ; cld ; call rax
0x000000000018790a : cld ; inc dword ptr [rax + 0xf] ; cld ; call rax
0x00000000001877f2 : cld ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x0000000000187b5a : cld ; inc dword ptr [rax - 0x2f0003de] ; and edi, esp ; jmp qword ptr [rax]
0x0000000000187b06 : cld ; inc dword ptr [rax - 0x2f0003e5] ; sbb al, -4 ; jmp qword ptr [rax]
0x0000000000188782 : cld ; inc dword ptr [rax - 0x51] ; cld ; call rax
0x00000000001885aa : cld ; inc dword ptr [rax - 0x55] ; cld ; call rsi
0x0000000000188072 : cld ; inc dword ptr [rax - 0x75] ; cld ; call rax
0x000000000018828a : cld ; inc dword ptr [rax - 0x78] ; cld ; call rax
0x0000000000187a26 : cld ; inc dword ptr [rax - 0x7f0003ca] ; cmp ah, bh ; call qword ptr [rax]
0x0000000000187b76 : cld ; inc dword ptr [rax] ; cld ; call qword ptr [rax + 0x20fffc64]
0x0000000000187a96 : cld ; inc dword ptr [rax] ; cld ; jmp rax
0x00000000001882e2 : cld ; inc dword ptr [rax] ; jl 0x1882ec ; push qword ptr [rax + 0x7b] ; cld ; jmp rax
0x00000000001884e6 : cld ; inc dword ptr [rax] ; jnp 0x1884f0 ; push qword ptr [rax + 0x7a] ; cld ; call qword ptr [rax]
0x000000000018859a : cld ; inc dword ptr [rax] ; lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcac]
0x000000000018827a : cld ; inc dword ptr [rax] ; mov bh, ah ; call qword ptr [rax + 0x20fffc89]
0x0000000000188772 : cld ; inc dword ptr [rax] ; mov cl, -4 ; call qword ptr [rax + 0x20fffcb0]
0x00000000001877fa : cld ; inc dword ptr [rax] ; or esp, edi ; jmp rax
0x00000000001880a2 : cld ; inc dword ptr [rax] ; xchg ah, bh ; call qword ptr [rax + 0x20fffc85]
0x00000000001791ee : cld ; inc dword ptr [rax] ; xchg eax, ebp ; cld ; push qword ptr [rax - 0x6a] ; cld ; jmp rax
0x0000000000187a7e : cld ; inc dword ptr [rax] ; xor bh, ah ; call rax
0x00000000001879da : cld ; inc dword ptr [rax] ; xor esp, edi ; jmp rax
0x0000000000188226 : cld ; inc dword ptr [rbp + rax*4 - 4] ; call rsp
0x00000000000a2729 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a262e : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000114d10 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000187c32 : cld ; inc dword ptr [rdx + 0x65] ; cld ; call rdx
0x0000000000188656 : cld ; inc dword ptr [rdx - 0x53] ; cld ; call rdx
0x000000000018815e : cld ; inc dword ptr [rdx - 0x7a] ; cld ; call rdx
0x000000000018814e : cld ; inc dword ptr [rdx] ; mov ah, bh ; call qword ptr [rdx + 0x22fffc87]
0x0000000000187e62 : cld ; inc dword ptr [rdx] ; push rsi ; cld ; push qword ptr [rdx + 0x55] ; cld ; jmp rdx
0x0000000000188646 : cld ; inc dword ptr [rdx] ; scasd eax, dword ptr [rdi] ; cld ; call qword ptr [rdx + 0x22fffcae]
0x0000000000187bce : cld ; inc dword ptr [rsi + 0x62] ; cld ; call rsi
0x00000000001885b2 : cld ; inc dword ptr [rsi - 0x4f] ; cld ; call rsi
0x00000000001880ba : cld ; inc dword ptr [rsi - 0x76] ; cld ; call rsi
0x0000000000187bbe : cld ; inc dword ptr [rsi] ; cld ; call qword ptr [rsi + 0x26fffc63]
0x00000000001885e2 : cld ; inc dword ptr [rsi] ; lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rsi + 0x26fffcab]
0x000000000018871e : cld ; inc dword ptr [rsp + rbp*4 - 4] ; call rsp
0x0000000000187cfa : cld ; inc dword ptr [rsp - 4] ; call rsp
0x0000000000187b16 : cld ; inc eax ; and ah, bh ; call qword ptr [rax]
0x00000000001878ca : cld ; inc eax ; paddb mm7, mm7 ; push rax ; add bh, ah ; call qword ptr [rax]
0x0000000000187de6 : cld ; jmp qword ptr [rax + 0x10fffc55]
0x0000000000187d6e : cld ; jmp qword ptr [rax + 0x10fffc5e]
0x00000000001884a2 : cld ; jmp qword ptr [rax + 0x10fffc7b]
0x00000000001882b6 : cld ; jmp qword ptr [rax + 0x10fffc81]
0x0000000000179206 : cld ; jmp qword ptr [rax + 0x10fffc9d]
0x00000000001884da : cld ; jmp qword ptr [rax + 0x20fffc7c]
0x00000000001884d2 : cld ; jmp qword ptr [rax + 0x20fffc7d]
0x00000000001884ca : cld ; jmp qword ptr [rax + 0x20fffc7e]
0x00000000001884c2 : cld ; jmp qword ptr [rax + 0x20fffc7f]
0x00000000001884ba : cld ; jmp qword ptr [rax + 0x20fffc80]
0x00000000001889aa : cld ; jmp qword ptr [rax + 0x30fffca0]
0x000000000018802e : cld ; jmp qword ptr [rax - 0x1f0003c9]
0x000000000018792e : cld ; jmp qword ptr [rax - 0x1f000418]
0x00000000001791e6 : cld ; jmp qword ptr [rax]
0x00000000001a07aa : cld ; jmp qword ptr [rbx]
0x0000000000187e36 : cld ; jmp qword ptr [rdx + 0x12fffc5b]
0x000000000018812e : cld ; jmp qword ptr [rdx + 0x12fffc84]
0x0000000000187c6a : cld ; jmp qword ptr [rdx]
0x0000000000187bc6 : cld ; jmp qword ptr [rsi]
0x00000000001791f6 : cld ; jmp rax
0x0000000000187c5a : cld ; jmp rdx
0x0000000000187bae : cld ; jmp rsi
0x0000000000187d22 : cld ; jmp rsp
0x0000000000162dc6 : cld ; jne 0x162fff ; xor eax, eax ; ret
0x0000000000165095 : cld ; jne 0x1650a5 ; xor eax, eax ; ret
0x0000000000165094 : cld ; jne 0x1650a6 ; xor eax, eax ; ret
0x0000000000164fb5 : cld ; jne 0x1650a7 ; ret
0x0000000000164fb4 : cld ; jne 0x1650a8 ; ret
0x0000000000187c26 : cld ; lcall ptr [rdi + rbx*2 + 0x5f2cfffc] ; cld ; call rdx
0x00000000001883ea : cld ; lcall ptr [rsi + 0x2efffc7a] ; jp 0x1883f8 ; call rsp
0x000000000018882e : cld ; ljmp ptr [rax - 4] ; call qword ptr [rdx]
0x0000000000187c2a : cld ; ljmp ptr [rdi + rbx*2] ; cld ; call rdx
0x00000000001883ee : cld ; ljmp ptr [rsi] ; jp 0x1883f4 ; call rsp
0x0000000000145902 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000145b05 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000145d05 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000145f05 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000145536 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014d576 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000145716 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014d4f6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001458f6 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014d476 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000145356 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014d5f6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000097359 : cld ; mov rax, rdi ; ret
0x0000000000039d9c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000a4433 : cld ; pop rbx ; ret
0x0000000000187b12 : cld ; push qword ptr [rax + 0x1f] ; cld ; inc eax ; and ah, bh ; call qword ptr [rax]
0x0000000000187faa : cld ; push qword ptr [rax + 0x40fffc54] ; push rsp ; cld ; jmp rax
0x0000000000188286 : cld ; push qword ptr [rax + 0x40fffc88] ; mov ah, bh ; call rax
0x00000000001885a6 : cld ; push qword ptr [rax + 0x40fffcab] ; stosd dword ptr [rdi], eax ; cld ; call rsi
0x000000000018877e : cld ; push qword ptr [rax + 0x40fffcaf] ; scasd eax, dword ptr [rdi] ; cld ; call rax
0x0000000000187f76 : cld ; push qword ptr [rax + 0x5b] ; cld ; jmp rax
0x00000000001884ea : cld ; push qword ptr [rax + 0x7a] ; cld ; call qword ptr [rax]
0x00000000001882e6 : cld ; push qword ptr [rax + 0x7b] ; cld ; jmp rax
0x00000000001791f2 : cld ; push qword ptr [rax - 0x6a] ; cld ; jmp rax
0x000000000018826e : cld ; push qword ptr [rax - 0x7c] ; cld ; jmp rax
0x000000000018784e : cld ; push qword ptr [rax] ; add edi, esp ; push rax ; add al, -4 ; call rax
0x00000000001884b6 : cld ; push qword ptr [rax] ; cmp esp, 0xfc80a0ff ; jmp qword ptr [rax]
0x000000000018849e : cld ; push qword ptr [rax] ; jl 0x1884a8 ; jmp qword ptr [rax + 0x10fffc7b]
0x0000000000187de2 : cld ; push qword ptr [rax] ; push rsi ; cld ; jmp qword ptr [rax + 0x10fffc55]
0x0000000000179202 : cld ; push qword ptr [rax] ; pushfq ; cld ; jmp qword ptr [rax + 0x10fffc9d]
0x0000000000188222 : cld ; push qword ptr [rbp + rax*4 - 0x7abb0004] ; cld ; call rsp
0x00000000001888f6 : cld ; push qword ptr [rdi - 4] ; jmp rsp
0x000000000018815a : cld ; push qword ptr [rdx + 0x42fffc86] ; xchg ah, bh ; call rdx
0x0000000000188652 : cld ; push qword ptr [rdx + 0x42fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rdx
0x0000000000187e66 : cld ; push qword ptr [rdx + 0x55] ; cld ; jmp rdx
0x0000000000188336 : cld ; push qword ptr [rdx - 0x7f] ; cld ; jmp rdx
0x00000000001880b6 : cld ; push qword ptr [rsi + 0x46fffc8a] ; mov bh, ah ; call rsi
0x0000000000187f1e : cld ; push qword ptr [rsi + rdx*2 - 4] ; jmp rsp
0x0000000000187cf6 : cld ; push qword ptr [rsp + 0x6444fffc] ; cld ; call rsp
0x000000000018871a : cld ; push qword ptr [rsp + rbp*4 - 0x53bb0004] ; cld ; call rsp
0x0000000000187852 : cld ; push rax ; add al, -4 ; call rax
0x00000000001791a2 : cld ; push rax ; jge 0x1791a8 ; call qword ptr [rax]
0x000000000018781a : cld ; push rax ; or ah, bh ; call rax
0x0000000000187f72 : cld ; push rax ; pop rbx ; cld ; push qword ptr [rax + 0x5b] ; cld ; jmp rax
0x00000000001791c2 : cld ; push rax ; xchg ah, bh ; call qword ptr [rax]
0x0000000000188332 : cld ; push rdx ; cmp esp, 0xfc8172ff ; jmp rdx
0x00000000001888f2 : cld ; push rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; push qword ptr [rdi - 4] ; jmp rsp
0x0000000000187f1a : cld ; push rsp ; push rsi ; cld ; push qword ptr [rsi + rdx*2 - 4] ; jmp rsp
0x0000000000039da2 : cld ; ret
0x0000000000117d40 : cld ; ret 0x2a
0x0000000000071be0 : cld ; ret 0x34
0x00000000001ab48c : cld ; ret 1
0x000000000019e069 : cld ; stc ; call qword ptr [rax]
0x000000000018e509 : cld ; stc ; call rsp
0x0000000000174e76 : cld ; test al, -0x69 ; xchg eax, esp ; ret
0x000000000018812c : cld ; test bh, ah ; jmp qword ptr [rdx + 0x12fffc84]
0x00000000000b0c4e : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xb0c51 ; ret
0x00000000001a788c : cld ; xchg byte ptr [rcx], al ; add al, dl ; fdivr st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a898c : cld ; xchg eax, edi ; add dword ptr [rax], eax ; loopne 0x1a89c3 ; cmc ; jmp qword ptr [rcx]
0x000000000003cd75 : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00000000000b207c : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000b2001 : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000013435b : cli ; add al, 0xf ; test byte ptr [rcx - 0x7d000000], bl ; ret 0x8380
0x000000000011198c : cli ; add al, 0xf ; xchg eax, esi ; ret
0x00000000000c2899 : cli ; add byte ptr [rcx - 0xcfd8130], cl ; ret
0x00000000000b2e89 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000b955a : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003e81e : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000028453 : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x00000000000b14e4 : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x0000000000003749 : cli ; add ebx, ebp ; in al, -0x12 ; jne 0x3731 ; ret 0x975
0x00000000000f3ea0 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rcx - 1], 0 ; ret
0x000000000019e12a : cli ; call qword ptr [rax]
0x000000000018e7b2 : cli ; call qword ptr [rdx + rax*8 + 2]
0x000000000008634a : cli ; call rax
0x00000000001b72e2 : cli ; call rcx
0x000000000018e5ba : cli ; call rsp
0x00000000001ad271 : cli ; cmc ; call qword ptr [rax]
0x00000000001ad459 : cli ; cmc ; jmp rsp
0x000000000002ee40 : cli ; data16 ; nop dword ptr [rax + rax] ; ret
0x00000000000ee5bb : cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000c14d1 : cli ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x00000000000799d9 : cli ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000e44ed : cli ; dec dword ptr [rax - 0x77] ; jmp 0x4cd0ce45
0x0000000000072d59 : cli ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000018ec22 : cli ; dec dword ptr [rbp + rbx*8 - 0x418ffffe] ; cli ; call rsp
0x000000000018e61a : cli ; dec dword ptr [rbp + rsi*4 + 0x214b0002] ; cli ; call rsp
0x0000000000032919 : cli ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x000000000018e6f2 : cli ; dec esp ; mov ebp, 0x33c40002 ; cli ; jmp rsp
0x000000000018e752 : cli ; dec esp ; mov edi, 0x3ad40002 ; cli ; jmp rsp
0x000000000019b77d : cli ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000e53a4 : cli ; inc dword ptr [rbx + rcx*4 + 0x65] ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000018eac2 : cli ; inc dword ptr [rsi + rdx*8 - 0x664bfffe] ; cli ; jmp rsp
0x000000000018ec8a : cli ; inc esp ; loope 0x18ec9a ; add byte ptr [rsp + rax*8 - 6], dl ; jmp rsp
0x000000000018e7d2 : cli ; inc esp ; ret 2
0x00000000001a2f11 : cli ; int1 ; jmp qword ptr [rcx]
0x00000000001183b1 : cli ; je 0x11839e ; mov eax, 0xffffffff ; ret
0x00000000001187d1 : cli ; je 0x118724 ; ret
0x000000000017bb2e : cli ; jmp qword ptr [rax - 0x47000573]
0x0000000000193a82 : cli ; jmp qword ptr [rcx]
0x000000000017a0b9 : cli ; jmp rcx
0x0000000000034af6 : cli ; jmp rdx
0x000000000017d006 : cli ; jmp rsp
0x00000000000c4eba : cli ; jnp 0xc4ed0 ; xchg eax, esp ; ret 0xb60f
0x00000000000c50ea : cli ; jnp 0xc5100 ; xchg eax, esp ; ret 0xb60f
0x00000000000c5356 : cli ; jnp 0xc536c ; xchg eax, esp ; ret 0xb60f
0x000000000018e862 : cli ; lcall ptr [rdi + rax*8 + 0x55f40002] ; cli ; call rsp
0x000000000018e5b2 : cli ; ljmp ptr [rax + rdi*4 + 0x1ed40002] ; cli ; call rsp
0x000000000017cffe : cli ; ljmp ptr [rbx + rsi*4 - 0x42e30006] ; cli ; jmp rsp
0x0000000000145d08 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000973b7 : cli ; mov rax, rdi ; ret
0x0000000000111acb : cli ; mov rdi, r12 ; call rax
0x000000000008cb18 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000139306 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000034525 : cli ; or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x0000000000029543 : cli ; or byte ptr [rdi], 0x94 ; ret 0xb60f
0x00000000000b0ced : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x0000000000187d6c : cli ; pop rsi ; cld ; jmp qword ptr [rax + 0x10fffc5e]
0x0000000000189b20 : cli ; pop rsp ; in eax, dx ; call rsp
0x00000000001772e1 : cli ; push 0x6e ; ja 0x17726e ; ret 0x48f
0x00000000000fd937 : cli ; push qword ptr [rbp + rax - 0x7d] ; ret 0x8901
0x00000000000fb2f1 : cli ; push qword ptr [rbx + rcx - 0xd] ; ret
0x000000000018e692 : cli ; push qword ptr [rbx + rdi*4 + 0x2e040002] ; cli ; jmp rsp
0x000000000018ec82 : cli ; push qword ptr [rcx + 2] ; add ah, dl ; ret 0xfffa
0x000000000006f712 : cli ; push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x00000000000fd6e8 : cli ; push qword ptr [rsi + rax - 0x7d] ; ret 0x6601
0x00000000000b201f : cli ; ret 0x10
0x0000000000175d85 : cli ; ret 0xac65
0x000000000010868b : cli ; setae al ; ret
0x000000000018799d : cli ; sti ; inc eax ; sti ; sti ; call qword ptr [rax]
0x00000000000c5351 : cli ; sub al, 0x74 ; cmp eax, dword ptr [rax - 0x6bf08406] ; ret 0xb60f
0x000000000011be79 : cli ; sub al, 0x74 ; or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000c82ce : cli ; sub r10, rax ; jmp 0xc82ef
0x0000000000089620 : cli ; test rdx, rdx ; je 0x89639 ; bsf rax, rdx ; ret
0x000000000008980f : cli ; test rdx, rdx ; je 0x89839 ; bsf rax, rdx ; ret
0x00000000001749ca : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000000891e8 : cli ; xor byte ptr [rbp + rcx*4 + 0x48], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x8341
0x00000000001280c2 : cli ; xor eax, 0xffffffff ; mov rdx, rax ; jmp 0x128090
0x000000000005351f : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013d878 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000166baa : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001a884a : cmc ; call qword ptr [rax]
0x00000000001ac56a : cmc ; call qword ptr [rbx]
0x00000000001a878a : cmc ; call qword ptr [rcx]
0x00000000000195a8 : cmc ; call qword ptr [rdi]
0x00000000001a8d52 : cmc ; call qword ptr [rsi]
0x000000000017b126 : cmc ; call rcx
0x000000000018befa : cmc ; call rsp
0x000000000018dd89 : cmc ; clc ; call rsp
0x0000000000132709 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x854d
0x00000000001afe4c : cmc ; fcompi st(5) ; jmp qword ptr [rdx]
0x000000000010c166 : cmc ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x000000000018bef2 : cmc ; inc dword ptr [rcx + rax*8 + 0x3a840001] ; cmc ; call rsp
0x000000000018bf22 : cmc ; inc esp ; ret
0x00000000001151a2 : cmc ; je 0x11519c ; pop rbx ; ret
0x00000000001a8fe2 : cmc ; jmp qword ptr [rax]
0x00000000001a81aa : cmc ; jmp qword ptr [rcx]
0x00000000001ab7c2 : cmc ; jmp qword ptr [rdi]
0x00000000001a849a : cmc ; jmp qword ptr [rdx]
0x00000000001a83f2 : cmc ; jmp qword ptr [rsi]
0x000000000017af42 : cmc ; jmp rax
0x00000000001a91ea : cmc ; jmp rbx
0x00000000001a930a : cmc ; jmp rdi
0x000000000018bee2 : cmc ; jmp rsp
0x00000000001adcc4 : cmc ; js 0x1adcbf ; jmp qword ptr [rdx]
0x0000000000177709 : cmc ; mov ch, -0x55 ; ret
0x000000000014d4fa : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014558e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001645a3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000006f8c6 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000743f1 : cmc ; pop rbp ; pop r12 ; ret
0x00000000001745b7 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000017af3e : cmc ; push qword ptr [rbx - 0x5c] ; cmc ; jmp rax
0x000000000017af3a : cmc ; push qword ptr [rbx - 0x5c] ; cmc ; push qword ptr [rbx - 0x5c] ; cmc ; jmp rax
0x00000000000a6786 : cmc ; setne dl ; jmp 0xa679b
0x00000000000ab636 : cmc ; setne dl ; jmp 0xab64b
0x00000000001645a7 : cmc ; sub eax, edx ; ret
0x0000000000176d45 : cmc ; xlatb ; ret 0x4e27
0x0000000000109548 : cmova eax, edx ; add rsp, 0x20 ; pop rbx ; ret
0x000000000003ccb4 : cmova edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000edd88 : cmova edx, ecx ; mov eax, edx ; ret
0x00000000000b215b : cmova esi, eax ; imul esi, edx ; add eax, esi ; ret
0x00000000000b215a : cmova esi, r8d ; imul esi, edx ; add eax, esi ; ret
0x000000000007dc09 : cmovae eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000000496bc : cmovae eax, esi ; pop rbx ; ret
0x0000000000049798 : cmovae eax, esi ; ret
0x000000000000385b : cmovae ebp, dword ptr [rdi - 0x26] ; int 3
0x000000000007dc08 : cmovae rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000000496bb : cmovae rax, rsi ; pop rbx ; ret
0x0000000000049797 : cmovae rax, rsi ; ret
0x00000000000cc3c0 : cmovbe eax, edx ; ret
0x00000000000a42fd : cmove eax, ecx ; ret
0x000000000008d608 : cmove eax, edx ; add eax, 1 ; ret
0x000000000010b9d0 : cmove eax, edx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000008c474 : cmove eax, edx ; add rsp, 8 ; ret
0x00000000000ec87d : cmove eax, edx ; jmp 0xec83d
0x000000000008b5f8 : cmove eax, edx ; ret
0x000000000007a775 : cmove eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a774 : cmove eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097411 : cmove ecx, dword ptr [rcx - 0x76b7fbb9] ; clc ; ret
0x00000000000950e6 : cmove edx, ebx ; mov rax, rdx ; pop rbx ; ret
0x000000000002f519 : cmove esi, eax ; xor ebp, ebp ; jmp 0x2f52b
0x000000000002f518 : cmove r14, rax ; xor ebp, ebp ; jmp 0x2f52c
0x00000000000a42fc : cmove rax, rcx ; ret
0x000000000008d619 : cmove rax, rdx ; add eax, 1 ; ret
0x000000000008c473 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000008b5f7 : cmove rax, rdx ; ret
0x00000000000950e5 : cmove rdx, rbx ; mov rax, rdx ; pop rbx ; ret
0x0000000000074c0b : cmovg eax, ecx ; test rdx, rdx ; jne 0x74c09 ; ret
0x000000000007b9bb : cmovg eax, ecx ; test rdx, rdx ; jne 0x7b9b9 ; ret
0x000000000001f6aa : cmovge eax, edx ; jmp 0x1f67c
0x000000000003c97d : cmovne eax, ebx ; pop rbx ; ret
0x0000000000083fd0 : cmovne eax, ecx ; add rsp, 8 ; ret
0x00000000000716c1 : cmovne eax, ecx ; ret
0x0000000000098021 : cmovne eax, edi ; ret
0x000000000004f3b4 : cmovne eax, edx ; jmp 0x4f42c
0x000000000002f79b : cmovne eax, edx ; ret
0x000000000012a379 : cmovne eax, edx ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000004f3b0 : cmovne ebp, ecx ; cmovne r8, rdx ; jmp 0x4f430
0x000000000004f3af : cmovne r13, rcx ; cmovne r8, rdx ; jmp 0x4f431
0x00000000000716c0 : cmovne r8, rcx ; ret
0x000000000004f3b3 : cmovne r8, rdx ; jmp 0x4f42d
0x000000000003c97c : cmovne rax, rbx ; pop rbx ; ret
0x0000000000083fcf : cmovne rax, rcx ; add rsp, 8 ; ret
0x0000000000098020 : cmovne rax, rdi ; ret
0x000000000002f79a : cmovne rax, rdx ; ret
0x0000000000102baf : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000fabc6 : cmovns eax, edx ; jmp 0xfabcf
0x0000000000048719 : cmovns eax, edx ; pop rbx ; ret
0x00000000000256dc : cmovns eax, edx ; ret
0x0000000000102bae : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000fabc5 : cmovns rax, rdx ; jmp 0xfabd0
0x000000000005f958 : cmovs eax, dword ptr [rbx + 0x149f0e0] ; ret 0x8b48
0x000000000012dd70 : cmovs eax, dword ptr [rbx - 0x3fced73c] ; pop rbx ; pop rbp ; ret
0x0000000000121930 : cmovs eax, dword ptr [rbx - 0x3fcef73c] ; pop rbx ; pop rbp ; ret
0x0000000000097363 : cmovs eax, dword ptr [rbx - 0x76b7fd39] ; clc ; ret
0x000000000007c978 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x7c979 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000001882c5 : cmp ah, -1 ; nop ; jg 0x1882cd ; call qword ptr [rax]
0x0000000000187a2d : cmp ah, bh ; call qword ptr [rax]
0x0000000000187a4d : cmp ah, bh ; jmp rax
0x000000000013d9e8 : cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], -0x6c ; ret 0xc085
0x000000000013da47 : cmp ah, byte ptr [rbx - 0x37] ; cmp ch, byte ptr [rcx] ; ret 0xca39
0x0000000000045f0f : cmp al, -0x11 ; call 0x92204
0x00000000000f06ec : cmp al, -0x18 ; sahf ; ret
0x00000000001ac7cc : cmp al, -0x2a ; add dword ptr [rax], eax ; add bh, ah ; cmc ; call qword ptr [rax]
0x00000000001ab6cc : cmp al, -0x3b ; add dword ptr [rax], eax ; loopne 0x1ab6ac ; cmc ; jmp qword ptr [rsi]
0x000000000019b3cc : cmp al, -0x3e ; add byte ptr [rax], al ; add byte ptr [rdi], ah ; out dx, al ; call qword ptr [rsi]
0x000000000003d874 : cmp al, -0x4e ; jle 0x3d836 ; jmp 0x3d843
0x00000000001a91cc : cmp al, -0x60 ; add dword ptr [rax], eax ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000001a87cc : cmp al, -0x6a ; add dword ptr [rax], eax ; sub byte ptr [rax], -0xb ; jmp qword ptr [rcx]
0x00000000001af2ec : cmp al, -0x6d ; cmc ; jmp qword ptr [rdx]
0x0000000000080c6b : cmp al, -0x77 ; ret 0xb48b
0x00000000001872d5 : cmp al, -5 ; inc dword ptr [rax + 0x3e] ; sti ; jmp rax
0x000000000018d6d9 : cmp al, -8 ; jmp rsp
0x00000000000d2a38 : cmp al, 0x11 ; je 0xd2a46 ; xor eax, eax ; ret
0x0000000000021f5d : cmp al, 0x16 ; call rax
0x0000000000081cce : cmp al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x00000000000f5ff1 : cmp al, 0x24 ; call rbx
0x00000000000a45f7 : cmp al, 0x24 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000136b9c : cmp al, 0x24 ; mov rax, qword ptr [rax + 0xe8] ; jmp rax
0x00000000000ecabf : cmp al, 0x24 ; mov rdx, rax ; call 0x108d17
0x000000000011db4f : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000019bc44 : cmp al, 0x28 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000097f35 : cmp al, 0x3d ; jne 0x97f51 ; mov rax, rdi ; ret
0x00000000000c6cd4 : cmp al, 0x3f ; jne 0xc6c81 ; mov eax, 1 ; ret
0x00000000000c6cc4 : cmp al, 0x3f ; jne 0xc6cb0 ; mov eax, 1 ; ret
0x000000000018f0fc : cmp al, 0x40 ; add al, byte ptr [rax] ; fdivr st(5) ; jmp rsp
0x00000000001759c0 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000000359c7 : cmp al, 0x5f ; je 0x359e0 ; jmp 0x35994
0x000000000018dbcc : cmp al, 0x6b ; add al, byte ptr [rax] ; js 0x18db7a ; clc ; jmp rsp
0x00000000001a6fcc : cmp al, 0x7e ; add dword ptr [rax], eax ; jo 0x1a6f97 ; hlt ; jmp qword ptr [rcx]
0x0000000000162da3 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009e530 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x0000000000080f6c : cmp al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000eb6c5 : cmp al, 9 ; add byte ptr [rcx + rcx*4 - 0x1a], al ; call 0x878d8
0x000000000001f574 : cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000022195 : cmp al, byte ptr [rax] ; pop rbx ; ret
0x000000000002235f : cmp al, byte ptr [rax] ; ret
0x000000000018d53d : cmp al, byte ptr [rdx] ; add ah, al ; and al, bh ; call rsp
0x00000000001b2bad : cmp al, byte ptr [rdx] ; add byte ptr [rax], ah ; or dh, bh ; call qword ptr [rsi]
0x0000000000004050 : cmp al, byte ptr [rip] ; add byte ptr [rax], al ; ret
0x0000000000164a66 : cmp al, byte ptr [rsi - 1] ; jne 0x164a8c ; xor eax, eax ; ret
0x000000000005d26b : cmp al, ch ; jmp qword ptr [rcx]
0x000000000008c956 : cmp al, dh ; ret
0x000000000008c955 : cmp al, r14b ; ret
0x0000000000036696 : cmp bh, -1 ; inc eax ; shr eax, 0x1f ; ret
0x0000000000188039 : cmp bh, ah ; jmp rax
0x000000000019c10c : cmp bh, byte ptr [rcx] ; out dx, al ; jmp qword ptr [rdx]
0x0000000000193a81 : cmp bh, dl ; jmp qword ptr [rcx]
0x000000000018e759 : cmp bh, dl ; jmp rsp
0x00000000001abf8c : cmp bl, byte ptr [rcx - 0xb] ; jmp qword ptr [rdx]
0x00000000000929eb : cmp bl, dh ; ret
0x00000000001ab508 : cmp bl, dl ; cmc ; jmp qword ptr [rsi]
0x00000000000a3746 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000076b63 : cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000e3372 : cmp byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000000e3e3e : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dcc51 : cmp byte ptr [rax + 0x63], cl ; ret
0x000000000008d53f : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000128bf6 : cmp byte ptr [rax + 1], bh ; ret
0x000000000008c997 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000019cf38 : cmp byte ptr [rax - 0x12], bh ; jmp qword ptr [rcx]
0x00000000000d5e87 : cmp byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 0x39], cl ; ret
0x00000000000f5fa4 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000000b5fe9 : cmp byte ptr [rax - 0x77], cl ; jmp 0x48cde93f
0x00000000000dd9ea : cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000106184 : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000076b64 : cmp byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000006dea3 : cmp byte ptr [rax - 0x77], cl ; ret 0x778d
0x00000000000e3373 : cmp byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000006d3eb : cmp byte ptr [rax - 0x77], cl ; ret 0xef83
0x0000000000106183 : cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x0000000000120353 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], -0x77 ; out dx, eax ; call rax
0x00000000001273e3 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000121f22 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], cl ; mov edi, esp ; call rdx
0x000000000006f8ec : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x000000000005b922 : cmp byte ptr [rax - 0x7d], cl ; ret
0x00000000000fa2e2 : cmp byte ptr [rax - 1], bh ; ret
0x00000000001a9110 : cmp byte ptr [rax], -0xb ; jmp qword ptr [rcx]
0x0000000000187a2c : cmp byte ptr [rax], -4 ; call qword ptr [rax]
0x000000000015f378 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000008c986 : cmp byte ptr [rax], ah ; ret
0x000000000012fd45 : cmp byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010447b : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000003d0c5 : cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000037b97 : cmp byte ptr [rax], al ; mov eax, edx ; ret
0x000000000002f8f1 : cmp byte ptr [rax], al ; mov qword ptr [rax], rdx ; ret
0x0000000000037b44 : cmp byte ptr [rax], al ; ret
0x000000000013dccc : cmp byte ptr [rax], al ; ret 0xf66
0x0000000000036ab4 : cmp byte ptr [rax], al ; test eax, eax ; jne 0x36ac7 ; ret
0x000000000012c4c9 : cmp byte ptr [rax], bl ; je 0x12c4d4 ; ret
0x00000000000e3e3f : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000087920 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000097b26 : cmp byte ptr [rax], dh ; ret
0x000000000008c976 : cmp byte ptr [rax], dl ; ret
0x000000000008c975 : cmp byte ptr [rax], r10b ; ret
0x000000000008c985 : cmp byte ptr [rax], r12b ; ret
0x0000000000097b25 : cmp byte ptr [rax], r14b ; ret
0x000000000008791f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000a374a : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000a3749 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000095760 : cmp byte ptr [rbp + 0x29], cl ; ret 0x8b46
0x0000000000095a5b : cmp byte ptr [rbp + 0x31], al ; ror byte ptr [rbp + 0x29], cl ; ret 0x8b46
0x00000000000d1b7c : cmp byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000012a87a : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000001b1e54 : cmp byte ptr [rbx - 0x6ff1b9f9], al ; add dword ptr [rbx], eax ; ret
0x00000000001a755c : cmp byte ptr [rbx - 0xc], ah ; jmp qword ptr [rdx]
0x00000000000a3747 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000759b0 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000005b614 : cmp byte ptr [rcx + 0xf], al ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a5030 : cmp byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00000000000a48d9 : cmp byte ptr [rcx + rcx*4 - 0xf], cl ; mov rdi, qword ptr [r13] ; call r12
0x000000000019f688 : cmp byte ptr [rcx - 0x10], dl ; call qword ptr [rsi]
0x00000000000f2fa8 : cmp byte ptr [rcx - 0x3b7cb730], cl ; ret
0x0000000000051e58 : cmp byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x000000000005512a : cmp byte ptr [rcx - 0x7d], cl ; ret
0x00000000001a2a4d : cmp byte ptr [rcx], al ; add al, al ; in al, -0xf ; jmp rsi
0x0000000000122979 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000092e88 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000018ac45 : cmp byte ptr [rcx], al ; add byte ptr [rsi - 0x31], dh ; out dx, eax ; call rsp
0x000000000015f379 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000009f944 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x0000000000002044 : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000486e8 : cmp byte ptr [rdi], 0 ; jne 0x486f6 ; pop rbx ; ret
0x00000000001a8498 : cmp byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x00000000000e2e83 : cmp byte ptr [rdi], cl ; mov dh, 0x48 ; xor byte ptr [rax - 0x77], cl ; ret 0xf980
0x000000000016164d : cmp byte ptr [rdi], dl ; ret
0x0000000000162160 : cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000162149 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000162132 : cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000160bee : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018d4fd : cmp byte ptr [rdx], al ; add byte ptr [rsi + rbx], al ; clc ; jmp rsp
0x00000000000d1770 : cmp byte ptr [rsi + 0x30], 0x11 ; je 0xd1788 ; xor eax, eax ; ret
0x00000000000f1652 : cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x0000000000191568 : cmp byte ptr [rsi - 0x16], cl ; call qword ptr [rdx]
0x00000000001a5728 : cmp byte ptr [rsi], al ; hlt ; jmp rdx
0x00000000001b5ec8 : cmp byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x00000000000d2926 : cmp byte ptr [rsi], cl ; je 0xd28b7 ; pop rbx ; ret
0x0000000000193f35 : cmp ch, bl ; jmp qword ptr [rdx]
0x000000000013da4a : cmp ch, byte ptr [rcx] ; ret 0xca39
0x00000000001ac9d8 : cmp ch, ch ; cmc ; call qword ptr [rdi]
0x00000000001a90f9 : cmp ch, dh ; jmp qword ptr [rcx]
0x000000000010c9c6 : cmp cl, -1 ; add rsp, 8 ; ret
0x0000000000073fb5 : cmp cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000739c0 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000084961 : cmp cl, byte ptr [rbx + rcx*4 + 0x47] ; or byte ptr [rbp - 0x77], cl ; ret
0x00000000000f6c6a : cmp cl, byte ptr [rcx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000048bdc : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000000486e5 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x000000000018bef9 : cmp dh, ch ; call rsp
0x000000000019c0c5 : cmp dh, ch ; jmp qword ptr [rdx]
0x00000000001b1dcd : cmp dh, dh ; jmp qword ptr [rdx]
0x00000000000eeff5 : cmp dh, dh ; ret
0x00000000000396b9 : cmp dh, dh ; ret 0x7401
0x0000000000098ed5 : cmp dh, dh ; ret 0x7501
0x0000000000025b75 : cmp dh, dh ; ret 0x8b01
0x00000000000adb6a : cmp dl, -1 ; cmovne eax, ecx ; ret
0x00000000001a7798 : cmp dl, bl ; hlt ; call qword ptr [rax]
0x0000000000002b62 : cmp dl, byte ptr [rdi] ; ret
0x00000000001a72e8 : cmp dl, cl ; hlt ; jmp qword ptr [rcx]
0x000000000018aad8 : cmp dl, cl ; out dx, eax ; jmp rsp
0x000000000007169b : cmp dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; ret
0x00000000001085aa : cmp dword ptr [rax + 8], edi ; jne 0x1085a9 ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000012c4c8 : cmp dword ptr [rax], 0x18 ; je 0x12c4d5 ; ret
0x0000000000025384 : cmp dword ptr [rax], eax ; call 0x24798
0x000000000002edf6 : cmp dword ptr [rax], eax ; mov byte ptr [rip + 0x391e7f], dl ; ret
0x0000000000021a9f : cmp dword ptr [rax], eax ; pop r12 ; ret
0x000000000002bfd5 : cmp dword ptr [rax], eax ; ret
0x0000000000022085 : cmp dword ptr [rax], eax ; test rax, rax ; je 0x22095 ; jmp rax
0x00000000000220b5 : cmp dword ptr [rax], eax ; test rax, rax ; je 0x220c5 ; jmp rax
0x00000000000d1860 : cmp dword ptr [rbx + 0xa4], 1 ; setg dl ; jmp 0xd17f7
0x000000000014d038 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000e579e : cmp dword ptr [rcx - 8], 0 ; je 0xe57af ; mov edx, eax ; jmp 0xe579d
0x0000000000065c72 : cmp dword ptr [rcx], ebp ; ret
0x0000000000103131 : cmp dword ptr [rdi + 0x10], 0 ; je 0x103148 ; xor eax, eax ; ret
0x0000000000073a29 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00000000000b0c24 : cmp dword ptr [rdi + 8], edx ; jne 0xb0bf3 ; ret
0x00000000000a42f9 : cmp dword ptr [rdi + 8], esi ; cmove rax, rcx ; ret
0x000000000010862a : cmp dword ptr [rdi], 0 ; je 0x10863e ; ret
0x000000000003d872 : cmp dword ptr [rdx + r14*4], 0x40 ; jle 0x3d838 ; jmp 0x3d845
0x000000000003d873 : cmp dword ptr [rdx + rsi*4], 0x40 ; jle 0x3d837 ; jmp 0x3d844
0x0000000000110751 : cmp dword ptr [rip + 0x2b0268], 0 ; jne 0x110724 ; jmp 0x11071c
0x0000000000086f81 : cmp dword ptr [rip + 0x33aca8], 0 ; je 0x86f99 ; ret
0x00000000000f5790 : cmp dword ptr [rsi], 0 ; je 0xf579d ; pop rbx ; ret
0x00000000000037ea : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00000000000ec878 : cmp dword ptr [rsp + 0x10], 2 ; cmove eax, edx ; jmp 0xec842
0x00000000000ec768 : cmp dword ptr [rsp - 0x68], 2 ; cmove eax, edx ; ret
0x000000000012c4c7 : cmp dword ptr fs:[rax], 0x18 ; je 0x12c4d6 ; ret
0x00000000000edf30 : cmp eax, -0x5f ; je 0xedf50 ; neg eax ; pop rbx ; ret
0x00000000001151a0 : cmp eax, -0xb ; je 0x11519e ; pop rbx ; ret
0x0000000000133c3e : cmp eax, -1 ; je 0x133c59 ; add rsp, 8 ; ret
0x000000000002201e : cmp eax, -1 ; je 0x2204c ; add rsp, 8 ; ret
0x0000000000075bca : cmp eax, -1 ; je 0x75bdb ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000075c0e : cmp eax, -1 ; je 0x75c1f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007c8f1 : cmp eax, -1 ; je 0x7c902 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000000fb25b : cmp eax, -1 ; je 0xfb26f ; pop rbx ; pop rbp ; ret
0x0000000000038514 : cmp eax, -1 ; jne 0x38509 ; mov rax, rdx ; ret
0x0000000000077539 : cmp eax, -1 ; jne 0x77546 ; pop rbx ; ret
0x000000000007c93f : cmp eax, -1 ; jne 0x7c930 ; pop rbx ; ret
0x00000000001154b1 : cmp eax, -1 ; mov dl, 2 ; cmove eax, edx ; ret
0x0000000000003b4f : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x00000000000a5ffe : cmp eax, 0x13 ; je 0xa6016 ; mov edx, eax ; jmp 0xa5fd6
0x00000000000a883e : cmp eax, 0x13 ; je 0xa8856 ; mov edx, eax ; jmp 0xa8816
0x00000000000aaeee : cmp eax, 0x13 ; je 0xaaf06 ; mov edx, eax ; jmp 0xaaec6
0x0000000000110752 : cmp eax, 0x2b0268 ; add byte ptr [rbp - 0x3e], dh ; jmp 0x11071b
0x0000000000112d52 : cmp eax, 0x2b1229 ; call rax
0x0000000000112487 : cmp eax, 0x2b1a94 ; call rax
0x00000000000f52db : cmp eax, 0x2c9fd0 ; ret
0x00000000000e7dee : cmp eax, 0x3c000017 ; sub cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x403c
0x0000000000137b96 : cmp eax, 0x48b98 ; call 0x73e27
0x00000000000cbd3f : cmp eax, 0x48ffffff ; add esp, 0x18 ; ret
0x00000000001214d2 : cmp eax, 0x5f34d ; call 0x5d7c7
0x0000000000097f37 : cmp eax, 0x89480f75 ; clc ; ret
0x000000000009802a : cmp eax, 0xeb000000 ; ret
0x000000000013dcf3 : cmp eax, 0xf3ffffff ; ret
0x00000000001a2f0d : cmp eax, 0xfa100001 ; int1 ; jmp qword ptr [rcx]
0x00000000001a2f85 : cmp eax, 0xfb280001 ; int1 ; jmp qword ptr [rcx]
0x000000000010942b : cmp eax, 0xfffff000 ; ja 0x10943c ; ret
0x00000000001094a8 : cmp eax, 0xfffff000 ; ja 0x1094d2 ; ret
0x000000000010ab0d : cmp eax, 0xfffff000 ; ja 0x10ab1e ; ret
0x000000000010abad : cmp eax, 0xfffff000 ; ja 0x10abbe ; ret
0x0000000000036bba : cmp eax, 0xfffff000 ; ja 0x36be2 ; ret
0x0000000000036e81 : cmp eax, 0xfffff000 ; ja 0x36e92 ; ret
0x0000000000036edd : cmp eax, 0xfffff000 ; ja 0x36eee ; ret
0x0000000000036f17 : cmp eax, 0xfffff000 ; ja 0x36f26 ; ret
0x0000000000036f9d : cmp eax, 0xfffff000 ; ja 0x36fae ; ret
0x000000000005e151 : cmp eax, 0xfffff000 ; ja 0x5e162 ; ret
0x00000000000beb02 : cmp eax, 0xfffff000 ; ja 0xbeb11 ; ret
0x00000000000c1533 : cmp eax, 0xfffff000 ; ja 0xc1542 ; ret
0x00000000000c15cd : cmp eax, 0xfffff000 ; ja 0xc15dc ; ret
0x00000000000c16bc : cmp eax, 0xfffff000 ; ja 0xc16cb ; ret
0x00000000000c1db8 : cmp eax, 0xfffff000 ; ja 0xc1dc9 ; ret
0x00000000000c2964 : cmp eax, 0xfffff000 ; ja 0xc2973 ; ret
0x00000000000c29c4 : cmp eax, 0xfffff000 ; ja 0xc29d3 ; ret
0x00000000000c2c18 : cmp eax, 0xfffff000 ; ja 0xc2c27 ; ret
0x00000000000c2c88 : cmp eax, 0xfffff000 ; ja 0xc2c97 ; ret
0x00000000000ebce6 : cmp eax, 0xfffff000 ; ja 0xebd0c ; ret
0x00000000000ebd35 : cmp eax, 0xfffff000 ; ja 0xebd5c ; ret
0x00000000000ebd86 : cmp eax, 0xfffff000 ; ja 0xebdac ; ret
0x00000000000ebdde : cmp eax, 0xfffff000 ; ja 0xebe0c ; ret
0x00000000000ebe42 : cmp eax, 0xfffff000 ; ja 0xebe6c ; ret
0x00000000000ebe9b : cmp eax, 0xfffff000 ; ja 0xebec4 ; ret
0x00000000000ec09a : cmp eax, 0xfffff000 ; ja 0xec0ab ; ret
0x00000000000ec12d : cmp eax, 0xfffff000 ; ja 0xec13e ; ret
0x00000000000ec201 : cmp eax, 0xfffff000 ; ja 0xec212 ; ret
0x00000000000ec72a : cmp eax, 0xfffff000 ; ja 0xec7aa ; ret
0x00000000000ed4e3 : cmp eax, 0xfffff000 ; ja 0xed4f4 ; ret
0x00000000000edad4 : cmp eax, 0xfffff000 ; ja 0xedae5 ; ret
0x00000000000edb2b : cmp eax, 0xfffff000 ; ja 0xedb3c ; ret
0x00000000000edb8e : cmp eax, 0xfffff000 ; ja 0xedba1 ; cdqe ; ret
0x00000000000edbee : cmp eax, 0xfffff000 ; ja 0xedbff ; ret
0x00000000000edfa3 : cmp eax, 0xfffff000 ; ja 0xedfb4 ; ret
0x00000000000edff7 : cmp eax, 0xfffff000 ; ja 0xee008 ; ret
0x00000000000f11cb : cmp eax, 0xfffff000 ; ja 0xf11da ; ret
0x00000000000f16e1 : cmp eax, 0xfffff000 ; ja 0xf16f0 ; ret
0x00000000000f1eb8 : cmp eax, 0xfffff000 ; ja 0xf1ec7 ; ret
0x00000000000f1f58 : cmp eax, 0xfffff000 ; ja 0xf1f67 ; ret
0x00000000000f24d6 : cmp eax, 0xfffff000 ; ja 0xf24e5 ; ret
0x00000000000f2546 : cmp eax, 0xfffff000 ; ja 0xf2555 ; ret
0x00000000000f25c3 : cmp eax, 0xfffff000 ; ja 0xf25d2 ; ret
0x00000000000f2663 : cmp eax, 0xfffff000 ; ja 0xf2672 ; ret
0x00000000000f2b97 : cmp eax, 0xfffff000 ; ja 0xf2ba8 ; ret
0x00000000000f3b78 : cmp eax, 0xfffff000 ; ja 0xf3b89 ; ret
0x00000000000f3c04 : cmp eax, 0xfffff000 ; ja 0xf3c34 ; ret
0x00000000000f3c9c : cmp eax, 0xfffff000 ; ja 0xf3ccc ; ret
0x00000000000f3cf0 : cmp eax, 0xfffff000 ; ja 0xf3d01 ; ret
0x00000000000f8492 : cmp eax, 0xfffff000 ; ja 0xf84bc ; ret
0x00000000000faf2e : cmp eax, 0xfffff000 ; ja 0xfaf41 ; pop rbx ; pop rbp ; ret
0x00000000000fb191 : cmp eax, 0xfffff000 ; ja 0xfb1a0 ; ret
0x00000000000fbece : cmp eax, 0xfffff000 ; ja 0xfbedd ; ret
0x00000000000fc03e : cmp eax, 0xfffff000 ; ja 0xfc04d ; ret
0x00000000000fc608 : cmp eax, 0xfffff000 ; ja 0xfc617 ; ret
0x00000000000fc6aa : cmp eax, 0xfffff000 ; ja 0xfc6b9 ; ret
0x00000000000fc75a : cmp eax, 0xfffff000 ; ja 0xfc769 ; ret
0x00000000001339cb : cmp eax, 0xfffff001 ; jae 0x1339da ; ret
0x0000000000133a1b : cmp eax, 0xfffff001 ; jae 0x133a2a ; ret
0x0000000000036ea8 : cmp eax, 0xfffff001 ; jae 0x36eb7 ; ret
0x0000000000037468 : cmp eax, 0xfffff001 ; jae 0x37477 ; ret
0x00000000000470b2 : cmp eax, 0xfffff001 ; jae 0x470c5 ; xor eax, eax ; ret
0x000000000005e118 : cmp eax, 0xfffff001 ; jae 0x5e127 ; ret
0x00000000000b1fa8 : cmp eax, 0xfffff001 ; jae 0xb1fb7 ; ret
0x00000000000b4df8 : cmp eax, 0xfffff001 ; jae 0xb4e07 ; ret
0x00000000000b4e28 : cmp eax, 0xfffff001 ; jae 0xb4e37 ; ret
0x00000000000c1488 : cmp eax, 0xfffff001 ; jae 0xc1497 ; ret
0x00000000000c167b : cmp eax, 0xfffff001 ; jae 0xc168a ; ret
0x00000000000c1758 : cmp eax, 0xfffff001 ; jae 0xc1767 ; ret
0x00000000000c1941 : cmp eax, 0xfffff001 ; jae 0xc1980 ; ret
0x00000000000c19a1 : cmp eax, 0xfffff001 ; jae 0xc19e0 ; ret
0x00000000000c1d32 : cmp eax, 0xfffff001 ; jae 0xc1d41 ; ret
0x00000000000c2928 : cmp eax, 0xfffff001 ; jae 0xc2937 ; ret
0x00000000000c2ab8 : cmp eax, 0xfffff001 ; jae 0xc2ac7 ; ret
0x00000000000c2ae8 : cmp eax, 0xfffff001 ; jae 0xc2af7 ; ret
0x00000000000c2b48 : cmp eax, 0xfffff001 ; jae 0xc2b57 ; ret
0x00000000000c2b78 : cmp eax, 0xfffff001 ; jae 0xc2b87 ; ret
0x00000000000c2ba8 : cmp eax, 0xfffff001 ; jae 0xc2bb7 ; ret
0x00000000000c2bd8 : cmp eax, 0xfffff001 ; jae 0xc2be7 ; ret
0x00000000000cbdb8 : cmp eax, 0xfffff001 ; jae 0xcbdc7 ; ret
0x00000000000cbde8 : cmp eax, 0xfffff001 ; jae 0xcbdf7 ; ret
0x00000000000cbe18 : cmp eax, 0xfffff001 ; jae 0xcbe27 ; ret
0x00000000000cbe48 : cmp eax, 0xfffff001 ; jae 0xcbe57 ; ret
0x00000000000cbe78 : cmp eax, 0xfffff001 ; jae 0xcbe87 ; ret
0x00000000000cbea8 : cmp eax, 0xfffff001 ; jae 0xcbeb7 ; ret
0x00000000000cbed8 : cmp eax, 0xfffff001 ; jae 0xcbee7 ; ret
0x00000000000cbf08 : cmp eax, 0xfffff001 ; jae 0xcbf17 ; ret
0x00000000000cc124 : cmp eax, 0xfffff001 ; jae 0xcc166 ; ret
0x00000000000cc184 : cmp eax, 0xfffff001 ; jae 0xcc1c6 ; ret
0x00000000000ebc25 : cmp eax, 0xfffff001 ; jae 0xebc38 ; mov eax, edx ; ret
0x00000000000ebc48 : cmp eax, 0xfffff001 ; jae 0xebc57 ; ret
0x00000000000ebed8 : cmp eax, 0xfffff001 ; jae 0xebee7 ; ret
0x00000000000ebf08 : cmp eax, 0xfffff001 ; jae 0xebf17 ; ret
0x00000000000ec028 : cmp eax, 0xfffff001 ; jae 0xec037 ; ret
0x00000000000ec058 : cmp eax, 0xfffff001 ; jae 0xec067 ; ret
0x00000000000ec0f8 : cmp eax, 0xfffff001 ; jae 0xec107 ; ret
0x00000000000ec161 : cmp eax, 0xfffff001 ; jae 0xec1a0 ; ret
0x00000000000ec351 : cmp eax, 0xfffff001 ; jae 0xec390 ; ret
0x00000000000ec3b1 : cmp eax, 0xfffff001 ; jae 0xec3f0 ; ret
0x00000000000ec408 : cmp eax, 0xfffff001 ; jae 0xec417 ; ret
0x00000000000ec958 : cmp eax, 0xfffff001 ; jae 0xec967 ; ret
0x00000000000ecaa1 : cmp eax, 0xfffff001 ; jae 0xecae0 ; ret
0x00000000000ecaf8 : cmp eax, 0xfffff001 ; jae 0xecb07 ; ret
0x00000000000ecb28 : cmp eax, 0xfffff001 ; jae 0xecb37 ; ret
0x00000000000ecb58 : cmp eax, 0xfffff001 ; jae 0xecb67 ; ret
0x00000000000ecb88 : cmp eax, 0xfffff001 ; jae 0xecb97 ; ret
0x00000000000ecbb8 : cmp eax, 0xfffff001 ; jae 0xecbc7 ; ret
0x00000000000ecbf1 : cmp eax, 0xfffff001 ; jae 0xecc30 ; ret
0x00000000000ecc48 : cmp eax, 0xfffff001 ; jae 0xecc57 ; ret
0x00000000000ecc78 : cmp eax, 0xfffff001 ; jae 0xecc87 ; ret
0x00000000000ed448 : cmp eax, 0xfffff001 ; jae 0xed457 ; ret
0x00000000000ed478 : cmp eax, 0xfffff001 ; jae 0xed487 ; ret
0x00000000000ed4a8 : cmp eax, 0xfffff001 ; jae 0xed4b7 ; ret
0x00000000000eda98 : cmp eax, 0xfffff001 ; jae 0xedaa7 ; ret
0x00000000000edaf8 : cmp eax, 0xfffff001 ; jae 0xedb07 ; ret
0x00000000000edb58 : cmp eax, 0xfffff001 ; jae 0xedb67 ; ret
0x00000000000edbb8 : cmp eax, 0xfffff001 ; jae 0xedbc7 ; ret
0x00000000000edc18 : cmp eax, 0xfffff001 ; jae 0xedc27 ; ret
0x00000000000edc51 : cmp eax, 0xfffff001 ; jae 0xedc90 ; ret
0x00000000000edf6b : cmp eax, 0xfffff001 ; jae 0xedf7a ; ret
0x00000000000f1164 : cmp eax, 0xfffff001 ; jae 0xf11a6 ; ret
0x00000000000f1898 : cmp eax, 0xfffff001 ; jae 0xf18a7 ; ret
0x00000000000f18c8 : cmp eax, 0xfffff001 ; jae 0xf18d7 ; ret
0x00000000000f18f8 : cmp eax, 0xfffff001 ; jae 0xf1907 ; ret
0x00000000000f1cb8 : cmp eax, 0xfffff001 ; jae 0xf1cc7 ; ret
0x00000000000f1e78 : cmp eax, 0xfffff001 ; jae 0xf1e87 ; ret
0x00000000000f27e8 : cmp eax, 0xfffff001 ; jae 0xf27f7 ; ret
0x00000000000f2888 : cmp eax, 0xfffff001 ; jae 0xf2897 ; ret
0x00000000000f28c4 : cmp eax, 0xfffff001 ; jae 0xf2906 ; ret
0x00000000000f2a08 : cmp eax, 0xfffff001 ; jae 0xf2a17 ; ret
0x00000000000f2a38 : cmp eax, 0xfffff001 ; jae 0xf2a47 ; ret
0x00000000000f2a71 : cmp eax, 0xfffff001 ; jae 0xf2ab0 ; ret
0x00000000000f2ac8 : cmp eax, 0xfffff001 ; jae 0xf2ad7 ; ret
0x00000000000f2b01 : cmp eax, 0xfffff001 ; jae 0xf2b40 ; ret
0x00000000000f2b58 : cmp eax, 0xfffff001 ; jae 0xf2b67 ; ret
0x00000000000f2e18 : cmp eax, 0xfffff001 ; jae 0xf2e27 ; ret
0x00000000000f2e48 : cmp eax, 0xfffff001 ; jae 0xf2e57 ; ret
0x00000000000f2e78 : cmp eax, 0xfffff001 ; jae 0xf2e87 ; ret
0x00000000000f3d28 : cmp eax, 0xfffff001 ; jae 0xf3d37 ; ret
0x00000000000f3d58 : cmp eax, 0xfffff001 ; jae 0xf3d67 ; ret
0x00000000000f539a : cmp eax, 0xfffff001 ; jae 0xf53a9 ; ret
0x00000000000f550b : cmp eax, 0xfffff001 ; jae 0xf551a ; ret
0x00000000000f5538 : cmp eax, 0xfffff001 ; jae 0xf5547 ; ret
0x00000000000f5568 : cmp eax, 0xfffff001 ; jae 0xf5577 ; ret
0x00000000000f55a1 : cmp eax, 0xfffff001 ; jae 0xf55e0 ; ret
0x00000000000f55f8 : cmp eax, 0xfffff001 ; jae 0xf5607 ; ret
0x00000000000f5628 : cmp eax, 0xfffff001 ; jae 0xf5637 ; ret
0x00000000000f565b : cmp eax, 0xfffff001 ; jae 0xf566a ; ret
0x00000000000f5688 : cmp eax, 0xfffff001 ; jae 0xf5697 ; ret
0x00000000000f56b8 : cmp eax, 0xfffff001 ; jae 0xf56c7 ; ret
0x00000000000f56e8 : cmp eax, 0xfffff001 ; jae 0xf56f7 ; ret
0x00000000000f5718 : cmp eax, 0xfffff001 ; jae 0xf5727 ; ret
0x00000000000f8c9b : cmp eax, 0xfffff001 ; jae 0xf8caa ; ret
0x00000000000f8cc8 : cmp eax, 0xfffff001 ; jae 0xf8cd7 ; ret
0x00000000000f8cf8 : cmp eax, 0xfffff001 ; jae 0xf8d07 ; ret
0x00000000000f8d2b : cmp eax, 0xfffff001 ; jae 0xf8d3a ; ret
0x00000000000f8d5b : cmp eax, 0xfffff001 ; jae 0xf8d6a ; ret
0x00000000000f8d88 : cmp eax, 0xfffff001 ; jae 0xf8d97 ; ret
0x00000000000f8dbb : cmp eax, 0xfffff001 ; jae 0xf8dca ; ret
0x00000000000f8de8 : cmp eax, 0xfffff001 ; jae 0xf8df7 ; ret
0x00000000000f8e18 : cmp eax, 0xfffff001 ; jae 0xf8e27 ; ret
0x00000000000f8e4b : cmp eax, 0xfffff001 ; jae 0xf8e5a ; ret
0x00000000000f8e78 : cmp eax, 0xfffff001 ; jae 0xf8e87 ; ret
0x00000000000f8eab : cmp eax, 0xfffff001 ; jae 0xf8eba ; ret
0x00000000000fae98 : cmp eax, 0xfffff001 ; jae 0xfaea7 ; ret
0x00000000000faec8 : cmp eax, 0xfffff001 ; jae 0xfaed7 ; ret
0x00000000000faff1 : cmp eax, 0xfffff001 ; jae 0xfb030 ; ret
0x00000000000fb058 : cmp eax, 0xfffff001 ; jae 0xfb067 ; ret
0x00000000000fb088 : cmp eax, 0xfffff001 ; jae 0xfb097 ; ret
0x00000000000fb0b8 : cmp eax, 0xfffff001 ; jae 0xfb0c7 ; ret
0x00000000000fb0e8 : cmp eax, 0xfffff001 ; jae 0xfb0f7 ; ret
0x00000000000fb3ab : cmp eax, 0xfffff001 ; jae 0xfb3ba ; ret
0x00000000000fb3d8 : cmp eax, 0xfffff001 ; jae 0xfb3e7 ; ret
0x00000000000fb408 : cmp eax, 0xfffff001 ; jae 0xfb417 ; ret
0x00000000000fb44b : cmp eax, 0xfffff001 ; jae 0xfb45a ; ret
0x00000000000fb478 : cmp eax, 0xfffff001 ; jae 0xfb487 ; ret
0x00000000000fb4a8 : cmp eax, 0xfffff001 ; jae 0xfb4b7 ; ret
0x00000000000fb4d8 : cmp eax, 0xfffff001 ; jae 0xfb4e7 ; ret
0x00000000000fb508 : cmp eax, 0xfffff001 ; jae 0xfb517 ; ret
0x00000000000fb538 : cmp eax, 0xfffff001 ; jae 0xfb547 ; ret
0x00000000000fb568 : cmp eax, 0xfffff001 ; jae 0xfb577 ; ret
0x00000000000fb598 : cmp eax, 0xfffff001 ; jae 0xfb5a7 ; ret
0x00000000000fb5c8 : cmp eax, 0xfffff001 ; jae 0xfb5d7 ; ret
0x00000000000fb5fb : cmp eax, 0xfffff001 ; jae 0xfb60a ; ret
0x00000000000fb634 : cmp eax, 0xfffff001 ; jae 0xfb676 ; ret
0x00000000000fb688 : cmp eax, 0xfffff001 ; jae 0xfb697 ; ret
0x00000000000fb6bb : cmp eax, 0xfffff001 ; jae 0xfb6ca ; ret
0x00000000000fb6e8 : cmp eax, 0xfffff001 ; jae 0xfb6f7 ; ret
0x00000000000fb718 : cmp eax, 0xfffff001 ; jae 0xfb727 ; ret
0x00000000000fb748 : cmp eax, 0xfffff001 ; jae 0xfb757 ; ret
0x00000000000fb778 : cmp eax, 0xfffff001 ; jae 0xfb787 ; ret
0x00000000000fb7a8 : cmp eax, 0xfffff001 ; jae 0xfb7b7 ; ret
0x00000000000fb7db : cmp eax, 0xfffff001 ; jae 0xfb7ea ; ret
0x00000000000fb80b : cmp eax, 0xfffff001 ; jae 0xfb81a ; ret
0x00000000000fb838 : cmp eax, 0xfffff001 ; jae 0xfb847 ; ret
0x00000000000fb868 : cmp eax, 0xfffff001 ; jae 0xfb877 ; ret
0x00000000000fb898 : cmp eax, 0xfffff001 ; jae 0xfb8a7 ; ret
0x00000000000fb8cb : cmp eax, 0xfffff001 ; jae 0xfb8da ; ret
0x00000000000fb8fb : cmp eax, 0xfffff001 ; jae 0xfb90a ; ret
0x00000000000fb92b : cmp eax, 0xfffff001 ; jae 0xfb93a ; ret
0x00000000000fb964 : cmp eax, 0xfffff001 ; jae 0xfb9a6 ; ret
0x00000000000fb9b8 : cmp eax, 0xfffff001 ; jae 0xfb9c7 ; ret
0x00000000000fb9f4 : cmp eax, 0xfffff001 ; jae 0xfba36 ; ret
0x00000000000fba48 : cmp eax, 0xfffff001 ; jae 0xfba57 ; ret
0x00000000000fba78 : cmp eax, 0xfffff001 ; jae 0xfba87 ; ret
0x00000000000fbab4 : cmp eax, 0xfffff001 ; jae 0xfbaf6 ; ret
0x00000000000fbb08 : cmp eax, 0xfffff001 ; jae 0xfbb17 ; ret
0x00000000000fbb3b : cmp eax, 0xfffff001 ; jae 0xfbb4a ; ret
0x00000000000fbb68 : cmp eax, 0xfffff001 ; jae 0xfbb77 ; ret
0x00000000000fbb98 : cmp eax, 0xfffff001 ; jae 0xfbba7 ; ret
0x00000000000fbbcb : cmp eax, 0xfffff001 ; jae 0xfbbda ; ret
0x00000000000fbc01 : cmp eax, 0xfffff001 ; jae 0xfbc40 ; ret
0x00000000000fbc58 : cmp eax, 0xfffff001 ; jae 0xfbc67 ; ret
0x00000000000fbc8b : cmp eax, 0xfffff001 ; jae 0xfbc9a ; ret
0x00000000000fbcbb : cmp eax, 0xfffff001 ; jae 0xfbcca ; ret
0x00000000000fbd11 : cmp eax, 0xfffff001 ; jae 0xfbd50 ; ret
0x00000000000fbd68 : cmp eax, 0xfffff001 ; jae 0xfbd77 ; ret
0x00000000000fbda1 : cmp eax, 0xfffff001 ; jae 0xfbde0 ; ret
0x00000000000fbdf8 : cmp eax, 0xfffff001 ; jae 0xfbe07 ; ret
0x00000000000fbe28 : cmp eax, 0xfffff001 ; jae 0xfbe37 ; ret
0x00000000000fbe5b : cmp eax, 0xfffff001 ; jae 0xfbe6a ; ret
0x00000000000fbe88 : cmp eax, 0xfffff001 ; jae 0xfbe97 ; ret
0x00000000000fbf74 : cmp eax, 0xfffff001 ; jae 0xfbfb6 ; ret
0x00000000000fbfd1 : cmp eax, 0xfffff001 ; jae 0xfc010 ; ret
0x00000000000fc0e1 : cmp eax, 0xfffff001 ; jae 0xfc120 ; ret
0x00000000000fc144 : cmp eax, 0xfffff001 ; jae 0xfc186 ; ret
0x00000000000fc19b : cmp eax, 0xfffff001 ; jae 0xfc1aa ; ret
0x00000000000fc1c8 : cmp eax, 0xfffff001 ; jae 0xfc1d7 ; ret
0x00000000000fc1f8 : cmp eax, 0xfffff001 ; jae 0xfc207 ; ret
0x00000000000fc22b : cmp eax, 0xfffff001 ; jae 0xfc23a ; ret
0x00000000000fc8b4 : cmp eax, 0xfffff001 ; jae 0xfc8f6 ; ret
0x00000000000fc914 : cmp eax, 0xfffff001 ; jae 0xfc956 ; ret
0x00000000000fc968 : cmp eax, 0xfffff001 ; jae 0xfc977 ; ret
0x00000000000fc998 : cmp eax, 0xfffff001 ; jae 0xfc9a7 ; ret
0x00000000000fc9c8 : cmp eax, 0xfffff001 ; jae 0xfc9d7 ; ret
0x00000000000fc9f8 : cmp eax, 0xfffff001 ; jae 0xfca07 ; ret
0x00000000000fca2b : cmp eax, 0xfffff001 ; jae 0xfca3a ; ret
0x00000000000fca5b : cmp eax, 0xfffff001 ; jae 0xfca6a ; ret
0x00000000000fca88 : cmp eax, 0xfffff001 ; jae 0xfca97 ; ret
0x00000000000fcab8 : cmp eax, 0xfffff001 ; jae 0xfcac7 ; ret
0x00000000000fcae8 : cmp eax, 0xfffff001 ; jae 0xfcaf7 ; ret
0x00000000000fcb18 : cmp eax, 0xfffff001 ; jae 0xfcb27 ; ret
0x000000000010b95f : cmp eax, 0xfffffe8c ; call rax
0x0000000000094c3a : cmp eax, 1 ; ja 0x94c21 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012dc91 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000d556e : cmp eax, 3 ; je 0xd5588 ; xor eax, eax ; pop rbx ; ret
0x0000000000108d3a : cmp eax, 4 ; je 0x108d45 ; ret
0x00000000000c5354 : cmp eax, dword ptr [rax - 0x6bf08406] ; ret 0xb60f
0x000000000018a4e8 : cmp eax, dword ptr [rax] ; out dx, eax ; call rsp
0x00000000001a2cd5 : cmp eax, dword ptr [rcx] ; add al, bl ; lock int1 ; jmp qword ptr [rdx]
0x00000000000716be : cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x000000000018d585 : cmp eax, dword ptr [rdx] ; add byte ptr [rcx + 0x23], dl ; clc ; call rsp
0x00000000000a366e : cmp eax, dword ptr [rsi + 0x10] ; jne 0xa3769 ; ret
0x00000000000a3683 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xa3769 ; ret
0x00000000000a3698 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xa3769 ; ret
0x00000000000a36b3 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xa3769 ; ret
0x00000000000a36ce : cmp eax, dword ptr [rsi + 0x20] ; jne 0xa3769 ; ret
0x00000000000a36e3 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xa3765 ; ret
0x00000000000a36f8 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xa3765 ; ret
0x00000000000a3703 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xa3765 ; ret
0x00000000000a371e : cmp eax, dword ptr [rsi + 0x30] ; jne 0xa3765 ; ret
0x00000000000a3733 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xa3765 ; ret
0x00000000000a3748 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xa3765 ; ret
0x00000000000a3753 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xa3765 ; ret
0x00000000000a3653 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xa3769 ; ret
0x00000000000a3623 : cmp eax, dword ptr [rsi + 4] ; jne 0xa3769 ; ret
0x00000000000a3638 : cmp eax, dword ptr [rsi + 8] ; jne 0xa3769 ; ret
0x0000000000164f6a : cmp eax, dword ptr [rsi - 0x10] ; jne 0x1650a9 ; ret
0x0000000000164f83 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x1650a9 ; ret
0x0000000000165093 : cmp eax, dword ptr [rsi - 4] ; jne 0x1650a7 ; xor eax, eax ; ret
0x0000000000164fb3 : cmp eax, dword ptr [rsi - 4] ; jne 0x1650a9 ; ret
0x0000000000164f98 : cmp eax, dword ptr [rsi - 8] ; jne 0x1650a9 ; ret
0x00000000000a360d : cmp eax, dword ptr [rsi] ; jne 0xa3768 ; ret
0x0000000000046ffb : cmp eax, ebx ; jne 0x46ff5 ; pop rbx ; ret
0x000000000007d759 : cmp eax, ecx ; jae 0x7d787 ; movzx eax, byte ptr [rax] ; ret
0x000000000009765c : cmp eax, ecx ; je 0x9764d ; ret
0x000000000013dcef : cmp eax, ecx ; jle 0x13dc3d ; ret
0x0000000000003a9f : cmp eax, ecx ; mov bl, -9 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000164a83 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000012b8a1 : cmp eax, edx ; je 0x12b8b8 ; add rsp, 8 ; ret
0x000000000003816d : cmp eax, edx ; jne 0x38166 ; xor eax, eax ; ret
0x000000000003824d : cmp eax, edx ; jne 0x38246 ; xor eax, eax ; ret
0x000000000009768f : cmp eax, esi ; jne 0x97687 ; mov rax, rdi ; ret
0x0000000000122895 : cmp ebp, eax ; xchg r13d, r15d ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000018a729 : cmp ebp, edi ; call rsp
0x00000000001a91a1 : cmp ebp, esi ; jmp qword ptr [rcx]
0x000000000019c1e5 : cmp ebp, esi ; jmp qword ptr [rdx]
0x00000000001a91e9 : cmp ebp, esi ; jmp rbx
0x0000000000108cd6 : cmp ebx, 0xa ; je 0x108ce1 ; ret
0x00000000001894f9 : cmp ebx, ebp ; call rsp
0x00000000001660bc : cmp ebx, ebp ; jae 0x1660cf ; call qword ptr [rbx]
0x00000000001660bc : cmp ebx, ebp ; jae 0x1660d3 ; call qword ptr [rbx]
0x0000000000193eed : cmp ebx, ebp ; jmp qword ptr [rdx]
0x000000000017898c : cmp ebx, ecx ; out dx, al ; lcall ptr [rsi - 0x33001135] ; ret 0xffee
0x00000000000cc2dc : cmp ebx, esi ; ja 0xcc276 ; pop rbx ; pop rbp ; ret
0x0000000000038bfc : cmp ecx, -1 ; jne 0x38bf9 ; mov rax, rdx ; ret
0x0000000000047223 : cmp ecx, 0x2f ; jmp r8
0x0000000000093a9f : cmp ecx, 0xd ; je 0x93ab9 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000000f8c14 : cmp ecx, dword ptr [rax - 0x77] ; ret
0x00000000000a6f36 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000016217b : cmp ecx, eax ; jne 0x1621a9 ; xor eax, eax ; ret
0x0000000000162fbb : cmp ecx, eax ; jne 0x162fe9 ; xor eax, eax ; ret
0x0000000000162fef : cmp ecx, eax ; jne 0x162ffc ; xor eax, eax ; ret
0x0000000000118795 : cmp ecx, eax ; sbb eax, eax ; ret
0x000000000007e1da : cmp ecx, edi ; je 0x7e016 ; ret
0x00000000000d918b : cmp ecx, edx ; call 0x42d01ad8
0x0000000000097634 : cmp ecx, edx ; je 0x9762d ; ret
0x00000000000a3c57 : cmp ecx, edx ; jne 0xa3c49 ; sub eax, r8d ; nop ; ret
0x0000000000097630 : cmp ecx, esi ; je 0x97631 ; cmp ecx, edx ; je 0x97631 ; ret
0x000000000007c97a : cmp ecx, esi ; jne 0x7c977 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000001662f8 : cmp edi, 1 ; ja 0x166305 ; ret
0x00000000000fe565 : cmp edi, 9 ; setbe al ; ret
0x0000000000196fec : cmp edi, dword ptr [rbx - 0x13] ; jmp qword ptr [rdx]
0x000000000002d02c : cmp edi, ebp ; je 0x2d04c ; call 0x892a6
0x000000000004f1a5 : cmp edi, ecx ; ja 0x4f18f ; mov eax, r8d ; ret
0x000000000011888b : cmp edi, edx ; jne 0x118869 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000000f8f05 : cmp edi, edx ; jne 0xf8f00 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000cc310 : cmp edi, esi ; ja 0xcc305 ; ret
0x0000000000187ffd : cmp edi, esp ; jmp rax
0x000000000010940e : cmp edx, -0x16 ; cmovne eax, ecx ; ret
0x00000000000c14d0 : cmp edx, -1 ; cmovne rax, rdx ; ret
0x000000000006f711 : cmp edx, -1 ; je 0x6f729 ; mov rax, rdx ; pop rbx ; ret
0x00000000000735a1 : cmp edx, -1 ; je 0x735b9 ; mov rax, rdx ; pop rbx ; ret
0x00000000000fb2f0 : cmp edx, -1 ; je 0xfb306 ; ret
0x00000000000c2898 : cmp edx, 0 ; mov eax, edx ; jle 0xc28a9 ; ret
0x000000000010d1af : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00000000000c6c85 : cmp edx, 1 ; sete al ; ret
0x000000000002f7eb : cmp edx, dword ptr [rdi + 4] ; jb 0x2f7fe ; ret
0x0000000000047254 : cmp edx, eax ; jg 0x47215 ; ret
0x0000000000108f02 : cmp edx, eax ; jne 0x108ee5 ; ret
0x00000000000fc837 : cmp edx, ecx ; cmovae rax, rsi ; ret
0x000000000012eef2 : cmp edx, ecx ; je 0x12ef05 ; ret
0x0000000000097618 : cmp edx, ecx ; je 0x97615 ; ret
0x000000000008d0fc : cmp edx, ecx ; jne 0x8d0e5 ; ret
0x00000000000c310b : cmp edx, ecx ; jne 0xc3145 ; ret
0x000000000010868a : cmp edx, edi ; setae al ; ret
0x0000000000118ad6 : cmp edx, esi ; jb 0x118acd ; mov eax, 0xffffffff ; ret
0x000000000003c979 : cmp esi, -1 ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000bab30 : cmp esi, 1 ; je 0xbab47 ; xor eax, eax ; ret
0x0000000000073b38 : cmp esi, 2 ; je 0x73b50 ; mov dword ptr [rdi], edx ; ret
0x000000000007df75 : cmp esi, dword ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007decc : cmp esi, dword ptr [rax + rax] ; add dword ptr [rbx - 0xd], ebx ; ret
0x000000000012284a : cmp esi, dword ptr [rdx + 0x28] ; ja 0x122841 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000019c10d : cmp esi, ebp ; jmp qword ptr [rdx]
0x0000000000176d44 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000001f6a8 : cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f67e
0x0000000000075c6a : cmp esi, ecx ; jb 0x75c67 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000009219c : cmp esi, ecx ; jne 0x9218e ; xor eax, eax ; ret
0x0000000000049792 : cmp esi, edi ; mov rax, rdi ; cmovae rax, rsi ; ret
0x0000000000118b4e : cmp esi, edx ; ja 0x118b3d ; mov eax, 0xffffffff ; ret
0x00000000000f1d74 : cmp esi, edx ; ja 0xf1d85 ; ret
0x00000000001b1e15 : cmp esi, esi ; jmp qword ptr [rdx]
0x000000000012476c : cmp esp, -1 ; jmp 0x124738
0x00000000001791b9 : cmp esp, -1 ; mov al, -0x7c ; cld ; call rax
0x0000000000188a31 : cmp esp, -1 ; nop ; test bh, ah ; call qword ptr [rax]
0x00000000000d531f : cmp esp, -1 ; push rdi ; ret 0
0x00000000001882bd : cmp esp, 0xfc8090ff ; call qword ptr [rax]
0x00000000001884b9 : cmp esp, 0xfc80a0ff ; jmp qword ptr [rax]
0x0000000000188335 : cmp esp, 0xfc8172ff ; jmp rdx
0x000000000002bfd4 : cmp qword ptr [rax], rax ; ret
0x00000000000e579d : cmp qword ptr [rcx - 8], 0 ; je 0xe57b0 ; mov edx, eax ; jmp 0xe579e
0x0000000000103130 : cmp qword ptr [rdi + 0x10], 0 ; je 0x103149 ; xor eax, eax ; ret
0x0000000000073a28 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x0000000000108629 : cmp qword ptr [rdi], 0 ; je 0x10863f ; ret
0x0000000000110750 : cmp qword ptr [rip + 0x2b0268], 0 ; jne 0x110725 ; jmp 0x11071d
0x00000000000f578f : cmp qword ptr [rsi], 0 ; je 0xf579e ; pop rbx ; ret
0x00000000000929ea : cmp r11b, r14b ; ret
0x0000000000108cd5 : cmp r11d, 0xa ; je 0x108ce2 ; ret
0x000000000019c1e4 : cmp r13, rsi ; jmp qword ptr [rdx]
0x00000000000eeff4 : cmp r14b, r14b ; ret
0x0000000000097f34 : cmp r8b, 0x3d ; jne 0x97f52 ; mov rax, rdi ; ret
0x00000000000fb25a : cmp r8d, -1 ; je 0xfb270 ; pop rbx ; pop rbp ; ret
0x00000000001a2cd4 : cmp r8d, dword ptr [rcx] ; add al, bl ; lock int1 ; jmp qword ptr [rdx]
0x000000000009765b : cmp r8d, ecx ; je 0x9764e ; ret
0x000000000010942a : cmp rax, -0x1000 ; ja 0x10943d ; ret
0x00000000001094a7 : cmp rax, -0x1000 ; ja 0x1094d3 ; ret
0x000000000010ab0c : cmp rax, -0x1000 ; ja 0x10ab1f ; ret
0x000000000010abac : cmp rax, -0x1000 ; ja 0x10abbf ; ret
0x0000000000036bb9 : cmp rax, -0x1000 ; ja 0x36be3 ; ret
0x0000000000036e80 : cmp rax, -0x1000 ; ja 0x36e93 ; ret
0x0000000000036edc : cmp rax, -0x1000 ; ja 0x36eef ; ret
0x0000000000036f16 : cmp rax, -0x1000 ; ja 0x36f27 ; ret
0x0000000000036f9c : cmp rax, -0x1000 ; ja 0x36faf ; ret
0x000000000005e150 : cmp rax, -0x1000 ; ja 0x5e163 ; ret
0x00000000000beb01 : cmp rax, -0x1000 ; ja 0xbeb12 ; ret
0x00000000000c1532 : cmp rax, -0x1000 ; ja 0xc1543 ; ret
0x00000000000c15cc : cmp rax, -0x1000 ; ja 0xc15dd ; ret
0x00000000000c16bb : cmp rax, -0x1000 ; ja 0xc16cc ; ret
0x00000000000c1db7 : cmp rax, -0x1000 ; ja 0xc1dca ; ret
0x00000000000c2963 : cmp rax, -0x1000 ; ja 0xc2974 ; ret
0x00000000000c29c3 : cmp rax, -0x1000 ; ja 0xc29d4 ; ret
0x00000000000c2c17 : cmp rax, -0x1000 ; ja 0xc2c28 ; ret
0x00000000000c2c87 : cmp rax, -0x1000 ; ja 0xc2c98 ; ret
0x00000000000ebce5 : cmp rax, -0x1000 ; ja 0xebd0d ; ret
0x00000000000ebd34 : cmp rax, -0x1000 ; ja 0xebd5d ; ret
0x00000000000ebd85 : cmp rax, -0x1000 ; ja 0xebdad ; ret
0x00000000000ebddd : cmp rax, -0x1000 ; ja 0xebe0d ; ret
0x00000000000ebe41 : cmp rax, -0x1000 ; ja 0xebe6d ; ret
0x00000000000ebe9a : cmp rax, -0x1000 ; ja 0xebec5 ; ret
0x00000000000ec099 : cmp rax, -0x1000 ; ja 0xec0ac ; ret
0x00000000000ec12c : cmp rax, -0x1000 ; ja 0xec13f ; ret
0x00000000000ec200 : cmp rax, -0x1000 ; ja 0xec213 ; ret
0x00000000000ec729 : cmp rax, -0x1000 ; ja 0xec7ab ; ret
0x00000000000ed4e2 : cmp rax, -0x1000 ; ja 0xed4f5 ; ret
0x00000000000edad3 : cmp rax, -0x1000 ; ja 0xedae6 ; ret
0x00000000000edb2a : cmp rax, -0x1000 ; ja 0xedb3d ; ret
0x00000000000edbed : cmp rax, -0x1000 ; ja 0xedc00 ; ret
0x00000000000edfa2 : cmp rax, -0x1000 ; ja 0xedfb5 ; ret
0x00000000000edff6 : cmp rax, -0x1000 ; ja 0xee009 ; ret
0x00000000000f11ca : cmp rax, -0x1000 ; ja 0xf11db ; ret
0x00000000000f16e0 : cmp rax, -0x1000 ; ja 0xf16f1 ; ret
0x00000000000f1eb7 : cmp rax, -0x1000 ; ja 0xf1ec8 ; ret
0x00000000000f1f57 : cmp rax, -0x1000 ; ja 0xf1f68 ; ret
0x00000000000f24d5 : cmp rax, -0x1000 ; ja 0xf24e6 ; ret
0x00000000000f2545 : cmp rax, -0x1000 ; ja 0xf2556 ; ret
0x00000000000f25c2 : cmp rax, -0x1000 ; ja 0xf25d3 ; ret
0x00000000000f2662 : cmp rax, -0x1000 ; ja 0xf2673 ; ret
0x00000000000f2b96 : cmp rax, -0x1000 ; ja 0xf2ba9 ; ret
0x00000000000f3b77 : cmp rax, -0x1000 ; ja 0xf3b8a ; ret
0x00000000000f3c03 : cmp rax, -0x1000 ; ja 0xf3c35 ; ret
0x00000000000f3c9b : cmp rax, -0x1000 ; ja 0xf3ccd ; ret
0x00000000000f3cef : cmp rax, -0x1000 ; ja 0xf3d02 ; ret
0x00000000000f8491 : cmp rax, -0x1000 ; ja 0xf84bd ; ret
0x00000000000fb190 : cmp rax, -0x1000 ; ja 0xfb1a1 ; ret
0x00000000000fbecd : cmp rax, -0x1000 ; ja 0xfbede ; ret
0x00000000000fc03d : cmp rax, -0x1000 ; ja 0xfc04e ; ret
0x00000000000fc607 : cmp rax, -0x1000 ; ja 0xfc618 ; ret
0x00000000000fc6a9 : cmp rax, -0x1000 ; ja 0xfc6ba ; ret
0x00000000000fc759 : cmp rax, -0x1000 ; ja 0xfc76a ; ret
0x00000000001339ca : cmp rax, -0xfff ; jae 0x1339db ; ret
0x0000000000133a1a : cmp rax, -0xfff ; jae 0x133a2b ; ret
0x0000000000036ea7 : cmp rax, -0xfff ; jae 0x36eb8 ; ret
0x0000000000037467 : cmp rax, -0xfff ; jae 0x37478 ; ret
0x000000000005e117 : cmp rax, -0xfff ; jae 0x5e128 ; ret
0x00000000000b1fa7 : cmp rax, -0xfff ; jae 0xb1fb8 ; ret
0x00000000000b4df7 : cmp rax, -0xfff ; jae 0xb4e08 ; ret
0x00000000000b4e27 : cmp rax, -0xfff ; jae 0xb4e38 ; ret
0x00000000000c1487 : cmp rax, -0xfff ; jae 0xc1498 ; ret
0x00000000000c167a : cmp rax, -0xfff ; jae 0xc168b ; ret
0x00000000000c1757 : cmp rax, -0xfff ; jae 0xc1768 ; ret
0x00000000000c1940 : cmp rax, -0xfff ; jae 0xc1981 ; ret
0x00000000000c19a0 : cmp rax, -0xfff ; jae 0xc19e1 ; ret
0x00000000000c2927 : cmp rax, -0xfff ; jae 0xc2938 ; ret
0x00000000000c2ab7 : cmp rax, -0xfff ; jae 0xc2ac8 ; ret
0x00000000000c2ae7 : cmp rax, -0xfff ; jae 0xc2af8 ; ret
0x00000000000c2b47 : cmp rax, -0xfff ; jae 0xc2b58 ; ret
0x00000000000c2b77 : cmp rax, -0xfff ; jae 0xc2b88 ; ret
0x00000000000c2ba7 : cmp rax, -0xfff ; jae 0xc2bb8 ; ret
0x00000000000c2bd7 : cmp rax, -0xfff ; jae 0xc2be8 ; ret
0x00000000000cbdb7 : cmp rax, -0xfff ; jae 0xcbdc8 ; ret
0x00000000000cbde7 : cmp rax, -0xfff ; jae 0xcbdf8 ; ret
0x00000000000cbe17 : cmp rax, -0xfff ; jae 0xcbe28 ; ret
0x00000000000cbe47 : cmp rax, -0xfff ; jae 0xcbe58 ; ret
0x00000000000cbe77 : cmp rax, -0xfff ; jae 0xcbe88 ; ret
0x00000000000cbea7 : cmp rax, -0xfff ; jae 0xcbeb8 ; ret
0x00000000000cbed7 : cmp rax, -0xfff ; jae 0xcbee8 ; ret
0x00000000000cbf07 : cmp rax, -0xfff ; jae 0xcbf18 ; ret
0x00000000000cc123 : cmp rax, -0xfff ; jae 0xcc167 ; ret
0x00000000000cc183 : cmp rax, -0xfff ; jae 0xcc1c7 ; ret
0x00000000000ebc47 : cmp rax, -0xfff ; jae 0xebc58 ; ret
0x00000000000ebed7 : cmp rax, -0xfff ; jae 0xebee8 ; ret
0x00000000000ebf07 : cmp rax, -0xfff ; jae 0xebf18 ; ret
0x00000000000ec027 : cmp rax, -0xfff ; jae 0xec038 ; ret
0x00000000000ec057 : cmp rax, -0xfff ; jae 0xec068 ; ret
0x00000000000ec0f7 : cmp rax, -0xfff ; jae 0xec108 ; ret
0x00000000000ec160 : cmp rax, -0xfff ; jae 0xec1a1 ; ret
0x00000000000ec350 : cmp rax, -0xfff ; jae 0xec391 ; ret
0x00000000000ec3b0 : cmp rax, -0xfff ; jae 0xec3f1 ; ret
0x00000000000ec407 : cmp rax, -0xfff ; jae 0xec418 ; ret
0x00000000000ec957 : cmp rax, -0xfff ; jae 0xec968 ; ret
0x00000000000ecaa0 : cmp rax, -0xfff ; jae 0xecae1 ; ret
0x00000000000ecaf7 : cmp rax, -0xfff ; jae 0xecb08 ; ret
0x00000000000ecb27 : cmp rax, -0xfff ; jae 0xecb38 ; ret
0x00000000000ecb57 : cmp rax, -0xfff ; jae 0xecb68 ; ret
0x00000000000ecb87 : cmp rax, -0xfff ; jae 0xecb98 ; ret
0x00000000000ecbb7 : cmp rax, -0xfff ; jae 0xecbc8 ; ret
0x00000000000ecbf0 : cmp rax, -0xfff ; jae 0xecc31 ; ret
0x00000000000ecc47 : cmp rax, -0xfff ; jae 0xecc58 ; ret
0x00000000000ecc77 : cmp rax, -0xfff ; jae 0xecc88 ; ret
0x00000000000ed447 : cmp rax, -0xfff ; jae 0xed458 ; ret
0x00000000000ed477 : cmp rax, -0xfff ; jae 0xed488 ; ret
0x00000000000ed4a7 : cmp rax, -0xfff ; jae 0xed4b8 ; ret
0x00000000000eda97 : cmp rax, -0xfff ; jae 0xedaa8 ; ret
0x00000000000edaf7 : cmp rax, -0xfff ; jae 0xedb08 ; ret
0x00000000000edb57 : cmp rax, -0xfff ; jae 0xedb68 ; ret
0x00000000000edbb7 : cmp rax, -0xfff ; jae 0xedbc8 ; ret
0x00000000000edc17 : cmp rax, -0xfff ; jae 0xedc28 ; ret
0x00000000000edc50 : cmp rax, -0xfff ; jae 0xedc91 ; ret
0x00000000000edf6a : cmp rax, -0xfff ; jae 0xedf7b ; ret
0x00000000000f1163 : cmp rax, -0xfff ; jae 0xf11a7 ; ret
0x00000000000f1897 : cmp rax, -0xfff ; jae 0xf18a8 ; ret
0x00000000000f18c7 : cmp rax, -0xfff ; jae 0xf18d8 ; ret
0x00000000000f18f7 : cmp rax, -0xfff ; jae 0xf1908 ; ret
0x00000000000f1cb7 : cmp rax, -0xfff ; jae 0xf1cc8 ; ret
0x00000000000f1e77 : cmp rax, -0xfff ; jae 0xf1e88 ; ret
0x00000000000f27e7 : cmp rax, -0xfff ; jae 0xf27f8 ; ret
0x00000000000f2887 : cmp rax, -0xfff ; jae 0xf2898 ; ret
0x00000000000f28c3 : cmp rax, -0xfff ; jae 0xf2907 ; ret
0x00000000000f2a07 : cmp rax, -0xfff ; jae 0xf2a18 ; ret
0x00000000000f2a37 : cmp rax, -0xfff ; jae 0xf2a48 ; ret
0x00000000000f2a70 : cmp rax, -0xfff ; jae 0xf2ab1 ; ret
0x00000000000f2ac7 : cmp rax, -0xfff ; jae 0xf2ad8 ; ret
0x00000000000f2b00 : cmp rax, -0xfff ; jae 0xf2b41 ; ret
0x00000000000f2b57 : cmp rax, -0xfff ; jae 0xf2b68 ; ret
0x00000000000f2e17 : cmp rax, -0xfff ; jae 0xf2e28 ; ret
0x00000000000f2e47 : cmp rax, -0xfff ; jae 0xf2e58 ; ret
0x00000000000f2e77 : cmp rax, -0xfff ; jae 0xf2e88 ; ret
0x00000000000f3d27 : cmp rax, -0xfff ; jae 0xf3d38 ; ret
0x00000000000f3d57 : cmp rax, -0xfff ; jae 0xf3d68 ; ret
0x00000000000f5399 : cmp rax, -0xfff ; jae 0xf53aa ; ret
0x00000000000f550a : cmp rax, -0xfff ; jae 0xf551b ; ret
0x00000000000f5537 : cmp rax, -0xfff ; jae 0xf5548 ; ret
0x00000000000f5567 : cmp rax, -0xfff ; jae 0xf5578 ; ret
0x00000000000f55a0 : cmp rax, -0xfff ; jae 0xf55e1 ; ret
0x00000000000f55f7 : cmp rax, -0xfff ; jae 0xf5608 ; ret
0x00000000000f5627 : cmp rax, -0xfff ; jae 0xf5638 ; ret
0x00000000000f565a : cmp rax, -0xfff ; jae 0xf566b ; ret
0x00000000000f5687 : cmp rax, -0xfff ; jae 0xf5698 ; ret
0x00000000000f56b7 : cmp rax, -0xfff ; jae 0xf56c8 ; ret
0x00000000000f56e7 : cmp rax, -0xfff ; jae 0xf56f8 ; ret
0x00000000000f5717 : cmp rax, -0xfff ; jae 0xf5728 ; ret
0x00000000000f8c9a : cmp rax, -0xfff ; jae 0xf8cab ; ret
0x00000000000f8cc7 : cmp rax, -0xfff ; jae 0xf8cd8 ; ret
0x00000000000f8cf7 : cmp rax, -0xfff ; jae 0xf8d08 ; ret
0x00000000000f8d2a : cmp rax, -0xfff ; jae 0xf8d3b ; ret
0x00000000000f8d5a : cmp rax, -0xfff ; jae 0xf8d6b ; ret
0x00000000000f8d87 : cmp rax, -0xfff ; jae 0xf8d98 ; ret
0x00000000000f8dba : cmp rax, -0xfff ; jae 0xf8dcb ; ret
0x00000000000f8de7 : cmp rax, -0xfff ; jae 0xf8df8 ; ret
0x00000000000f8e17 : cmp rax, -0xfff ; jae 0xf8e28 ; ret
0x00000000000f8e4a : cmp rax, -0xfff ; jae 0xf8e5b ; ret
0x00000000000f8e77 : cmp rax, -0xfff ; jae 0xf8e88 ; ret
0x00000000000f8eaa : cmp rax, -0xfff ; jae 0xf8ebb ; ret
0x00000000000fae97 : cmp rax, -0xfff ; jae 0xfaea8 ; ret
0x00000000000faec7 : cmp rax, -0xfff ; jae 0xfaed8 ; ret
0x00000000000faff0 : cmp rax, -0xfff ; jae 0xfb031 ; ret
0x00000000000fb057 : cmp rax, -0xfff ; jae 0xfb068 ; ret
0x00000000000fb087 : cmp rax, -0xfff ; jae 0xfb098 ; ret
0x00000000000fb0b7 : cmp rax, -0xfff ; jae 0xfb0c8 ; ret
0x00000000000fb0e7 : cmp rax, -0xfff ; jae 0xfb0f8 ; ret
0x00000000000fb3aa : cmp rax, -0xfff ; jae 0xfb3bb ; ret
0x00000000000fb3d7 : cmp rax, -0xfff ; jae 0xfb3e8 ; ret
0x00000000000fb407 : cmp rax, -0xfff ; jae 0xfb418 ; ret
0x00000000000fb44a : cmp rax, -0xfff ; jae 0xfb45b ; ret
0x00000000000fb477 : cmp rax, -0xfff ; jae 0xfb488 ; ret
0x00000000000fb4a7 : cmp rax, -0xfff ; jae 0xfb4b8 ; ret
0x00000000000fb4d7 : cmp rax, -0xfff ; jae 0xfb4e8 ; ret
0x00000000000fb507 : cmp rax, -0xfff ; jae 0xfb518 ; ret
0x00000000000fb537 : cmp rax, -0xfff ; jae 0xfb548 ; ret
0x00000000000fb567 : cmp rax, -0xfff ; jae 0xfb578 ; ret
0x00000000000fb597 : cmp rax, -0xfff ; jae 0xfb5a8 ; ret
0x00000000000fb5c7 : cmp rax, -0xfff ; jae 0xfb5d8 ; ret
0x00000000000fb5fa : cmp rax, -0xfff ; jae 0xfb60b ; ret
0x00000000000fb633 : cmp rax, -0xfff ; jae 0xfb677 ; ret
0x00000000000fb687 : cmp rax, -0xfff ; jae 0xfb698 ; ret
0x00000000000fb6ba : cmp rax, -0xfff ; jae 0xfb6cb ; ret
0x00000000000fb6e7 : cmp rax, -0xfff ; jae 0xfb6f8 ; ret
0x00000000000fb717 : cmp rax, -0xfff ; jae 0xfb728 ; ret
0x00000000000fb747 : cmp rax, -0xfff ; jae 0xfb758 ; ret
0x00000000000fb777 : cmp rax, -0xfff ; jae 0xfb788 ; ret
0x00000000000fb7a7 : cmp rax, -0xfff ; jae 0xfb7b8 ; ret
0x00000000000fb7da : cmp rax, -0xfff ; jae 0xfb7eb ; ret
0x00000000000fb80a : cmp rax, -0xfff ; jae 0xfb81b ; ret
0x00000000000fb837 : cmp rax, -0xfff ; jae 0xfb848 ; ret
0x00000000000fb867 : cmp rax, -0xfff ; jae 0xfb878 ; ret
0x00000000000fb897 : cmp rax, -0xfff ; jae 0xfb8a8 ; ret
0x00000000000fb8ca : cmp rax, -0xfff ; jae 0xfb8db ; ret
0x00000000000fb8fa : cmp rax, -0xfff ; jae 0xfb90b ; ret
0x00000000000fb92a : cmp rax, -0xfff ; jae 0xfb93b ; ret
0x00000000000fb963 : cmp rax, -0xfff ; jae 0xfb9a7 ; ret
0x00000000000fb9b7 : cmp rax, -0xfff ; jae 0xfb9c8 ; ret
0x00000000000fb9f3 : cmp rax, -0xfff ; jae 0xfba37 ; ret
0x00000000000fba47 : cmp rax, -0xfff ; jae 0xfba58 ; ret
0x00000000000fba77 : cmp rax, -0xfff ; jae 0xfba88 ; ret
0x00000000000fbab3 : cmp rax, -0xfff ; jae 0xfbaf7 ; ret
0x00000000000fbb07 : cmp rax, -0xfff ; jae 0xfbb18 ; ret
0x00000000000fbb3a : cmp rax, -0xfff ; jae 0xfbb4b ; ret
0x00000000000fbb67 : cmp rax, -0xfff ; jae 0xfbb78 ; ret
0x00000000000fbb97 : cmp rax, -0xfff ; jae 0xfbba8 ; ret
0x00000000000fbbca : cmp rax, -0xfff ; jae 0xfbbdb ; ret
0x00000000000fbc00 : cmp rax, -0xfff ; jae 0xfbc41 ; ret
0x00000000000fbc57 : cmp rax, -0xfff ; jae 0xfbc68 ; ret
0x00000000000fbc8a : cmp rax, -0xfff ; jae 0xfbc9b ; ret
0x00000000000fbcba : cmp rax, -0xfff ; jae 0xfbccb ; ret
0x00000000000fbd10 : cmp rax, -0xfff ; jae 0xfbd51 ; ret
0x00000000000fbd67 : cmp rax, -0xfff ; jae 0xfbd78 ; ret
0x00000000000fbda0 : cmp rax, -0xfff ; jae 0xfbde1 ; ret
0x00000000000fbdf7 : cmp rax, -0xfff ; jae 0xfbe08 ; ret
0x00000000000fbe27 : cmp rax, -0xfff ; jae 0xfbe38 ; ret
0x00000000000fbe5a : cmp rax, -0xfff ; jae 0xfbe6b ; ret
0x00000000000fbe87 : cmp rax, -0xfff ; jae 0xfbe98 ; ret
0x00000000000fbf73 : cmp rax, -0xfff ; jae 0xfbfb7 ; ret
0x00000000000fbfd0 : cmp rax, -0xfff ; jae 0xfc011 ; ret
0x00000000000fc0e0 : cmp rax, -0xfff ; jae 0xfc121 ; ret
0x00000000000fc143 : cmp rax, -0xfff ; jae 0xfc187 ; ret
0x00000000000fc19a : cmp rax, -0xfff ; jae 0xfc1ab ; ret
0x00000000000fc1c7 : cmp rax, -0xfff ; jae 0xfc1d8 ; ret
0x00000000000fc1f7 : cmp rax, -0xfff ; jae 0xfc208 ; ret
0x00000000000fc22a : cmp rax, -0xfff ; jae 0xfc23b ; ret
0x00000000000fc8b3 : cmp rax, -0xfff ; jae 0xfc8f7 ; ret
0x00000000000fc913 : cmp rax, -0xfff ; jae 0xfc957 ; ret
0x00000000000fc967 : cmp rax, -0xfff ; jae 0xfc978 ; ret
0x00000000000fc997 : cmp rax, -0xfff ; jae 0xfc9a8 ; ret
0x00000000000fc9c7 : cmp rax, -0xfff ; jae 0xfc9d8 ; ret
0x00000000000fc9f7 : cmp rax, -0xfff ; jae 0xfca08 ; ret
0x00000000000fca2a : cmp rax, -0xfff ; jae 0xfca3b ; ret
0x00000000000fca5a : cmp rax, -0xfff ; jae 0xfca6b ; ret
0x00000000000fca87 : cmp rax, -0xfff ; jae 0xfca98 ; ret
0x00000000000fcab7 : cmp rax, -0xfff ; jae 0xfcac8 ; ret
0x00000000000fcae7 : cmp rax, -0xfff ; jae 0xfcaf8 ; ret
0x00000000000fcb17 : cmp rax, -0xfff ; jae 0xfcb28 ; ret
0x00000000000716bd : cmp rax, qword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x0000000000046ffa : cmp rax, rbx ; jne 0x46ff6 ; pop rbx ; ret
0x000000000007d758 : cmp rax, rcx ; jae 0x7d788 ; movzx eax, byte ptr [rax] ; ret
0x000000000012b8a0 : cmp rax, rdx ; je 0x12b8b9 ; add rsp, 8 ; ret
0x000000000003816c : cmp rax, rdx ; jne 0x38167 ; xor eax, eax ; ret
0x000000000003824c : cmp rax, rdx ; jne 0x38247 ; xor eax, eax ; ret
0x00000000001660bb : cmp rbx, rbp ; jae 0x1660d0 ; call qword ptr [rbx]
0x00000000001660bb : cmp rbx, rbp ; jae 0x1660d4 ; call qword ptr [rbx]
0x00000000000cc2db : cmp rbx, rsi ; ja 0xcc277 ; pop rbx ; pop rbp ; ret
0x000000000016217a : cmp rcx, rax ; jne 0x1621aa ; xor eax, eax ; ret
0x0000000000162fba : cmp rcx, rax ; jne 0x162fea ; xor eax, eax ; ret
0x0000000000118794 : cmp rcx, rax ; sbb eax, eax ; ret
0x000000000007c979 : cmp rcx, rsi ; jne 0x7c978 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000001662f7 : cmp rdi, 1 ; ja 0x166306 ; ret
0x000000000002d02b : cmp rdi, rbp ; je 0x2d04d ; call 0x892a7
0x00000000000f8f04 : cmp rdi, rdx ; jne 0xf8f01 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000cc30f : cmp rdi, rsi ; ja 0xcc306 ; ret
0x00000000000c14cf : cmp rdx, -1 ; cmovne rax, rdx ; ret
0x0000000000108f01 : cmp rdx, rax ; jne 0x108ee6 ; ret
0x00000000000fc836 : cmp rdx, rcx ; cmovae rax, rsi ; ret
0x000000000012eef1 : cmp rdx, rcx ; je 0x12ef06 ; ret
0x000000000008d0fb : cmp rdx, rcx ; jne 0x8d0e6 ; ret
0x00000000000c310a : cmp rdx, rcx ; jne 0xc3146 ; ret
0x0000000000108689 : cmp rdx, rdi ; setae al ; ret
0x0000000000075c69 : cmp rsi, rcx ; jb 0x75c68 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000009219b : cmp rsi, rcx ; jne 0x9218f ; xor eax, eax ; ret
0x00000000000f1d73 : cmp rsi, rdx ; ja 0xf1d86 ; ret
0x000000000013f867 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013fb67 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000703a4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, 0 ; add bl, dh ; ret
0x0000000000140a67 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000095e76 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000189665 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; mov ah, 0x47 ; jmp 0x189671
0x00000000000715db : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x7159e
0x0000000000140767 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x0000000000161bf9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000188981 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call rax
0x0000000000188901 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; jmp rsp
0x000000000019c19c : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp esi, ebp ; jmp qword ptr [rdx]
0x0000000000123f66 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov ah, -0x11 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000ad736 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov byte ptr [rip + 0x358d4800], cl ; ret 0xd00
0x0000000000187510 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov eax, 0xbb11fffd ; std ; call qword ptr [rcx]
0x0000000000097764 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000198fec : cmpsb byte ptr [rsi], byte ptr [rdi] ; movsd dword ptr [rdi], dword ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000c6d04 : cmpsb byte ptr [rsi], byte ptr [rdi] ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000013aea6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000140467 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000140167 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d3326 : cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001873dd : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rax
0x00000000001873fd : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp qword ptr [rcx]
0x00000000001873bd : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rcx
0x0000000000109154 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub eax, dword ptr [rax] ; test rax, rax ; je 0x109169 ; ret
0x0000000000080b86 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sysenter
0x00000000001a214c : cmpsb byte ptr [rsi], byte ptr [rdi] ; test esi, ecx ; jmp qword ptr [rdx]
0x0000000000188900 : cmpsb byte ptr fs:[rsi], byte ptr [rdi] ; cld ; jmp rsp
0x000000000018e3d5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, byte ptr [rax] ; adc al, -0x35 ; stc ; call rsp
0x00000000000c50e5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x6bf08406], al ; ret 0xb60f
0x00000000001164bd : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7cb7db84], cl ; call qword ptr [rax]
0x000000000009af10 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7b ; ret
0x0000000000188979 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call rax
0x00000000001888f9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp rsp
0x00000000001888f5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; push qword ptr [rdi - 4] ; jmp rsp
0x00000000001a0c04 : cmpsd dword ptr [rsi], dword ptr [rdi] ; fdiv st(0) ; jmp qword ptr [rdx]
0x00000000000832f9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov rsi, qword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000078cc8 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000000038a2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x0000000000179c54 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff3
0x0000000000085b15 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 6
0x000000000018e2a9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; jmp rsp
0x00000000001874c5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call rax
0x0000000000187401 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp qword ptr [rcx + 0x21fffda7]
0x0000000000187405 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp qword ptr [rcx]
0x00000000001abaa1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rsi]
0x0000000000136165 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub byte ptr [rax], al ; call qword ptr [rax]
0x00000000000038a1 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000003c873 : cqo ; idiv rsi ; ret
0x0000000000038738 : cqo ; pop r14 ; idiv r9 ; pop r15 ; ret
0x000000000012890f : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000001f50e : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000004858b : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xd7e9
0x0000000000198a45 : cwde ; add byte ptr [rax], al ; pop rax ; ret 0xffed
0x00000000000ec76b : cwde ; add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000022e49 : cwde ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001a89bd : cwde ; add dword ptr [rax], eax ; adc byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a89a5 : cwde ; add dword ptr [rax], eax ; clc ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000001a8a1d : cwde ; add dword ptr [rax], eax ; jo 0x1a8a53 ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a35 : cwde ; add dword ptr [rax], eax ; mov byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a05 : cwde ; add dword ptr [rax], eax ; pop rax ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a89d5 : cwde ; add dword ptr [rax], eax ; sub byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a89ed : cwde ; add dword ptr [rax], eax ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a3108 : cwde ; add edx, esi ; call rdi
0x0000000000054b38 : cwde ; add rax, rdx ; jmp rax
0x00000000000be487 : cwde ; call r14
0x0000000000023295 : cwde ; call rcx
0x0000000000193f34 : cwde ; cmp ch, bl ; jmp qword ptr [rdx]
0x00000000001a9128 : cwde ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000000f5be9 : cwde ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000f5bf6 : cwde ; dec dword ptr [rcx - 0x75] ; jge 0xf5c04 ; call rbx
0x00000000001b1d38 : cwde ; fdivr st(6), st(0) ; jmp qword ptr [rcx]
0x00000000000363a4 : cwde ; fst dword ptr [rbx] ; add byte ptr [rdi], cl ; push rsp ; ret
0x000000000017a439 : cwde ; hlt ; call rcx
0x000000000017a435 : cwde ; hlt ; inc edi ; cwde ; hlt ; call rcx
0x000000000017911d : cwde ; int1 ; inc dword ptr [rax] ; cdq ; int1 ; jmp qword ptr [rax]
0x0000000000179119 : cwde ; int1 ; jmp rax
0x0000000000194f54 : cwde ; jbe 0x194f46 ; jmp qword ptr [rdx]
0x000000000018b910 : cwde ; je 0x18b909 ; call rsp
0x00000000001961cc : cwde ; jo 0x1961bf ; jmp qword ptr [rdx]
0x000000000019d9d8 : cwde ; mov bh, -0x12 ; jmp qword ptr [rdx]
0x00000000001a052c : cwde ; mov ch, -0x10 ; jmp qword ptr [rdx]
0x0000000000137b97 : cwde ; mov eax, dword ptr [rax + rax] ; call 0x73e26
0x0000000000078d64 : cwde ; mov esi, r8d ; call 0x74fd6
0x00000000000f113c : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000f88d9 : cwde ; mov rdx, rax ; jmp 0xf8907
0x00000000000f88d8 : cwde ; mov rdx, rax ; jmp 0xf8908
0x00000000000f89aa : cwde ; mov rdx, rax ; jmp 0xf89d9
0x00000000000f89a9 : cwde ; mov rdx, rax ; jmp 0xf89da
0x000000000019ed71 : cwde ; out dx, eax ; jmp rdi
0x0000000000003aa5 : cwde ; ret
0x00000000000193a0 : cwde ; ret 0x3b
0x00000000001ab568 : cwde ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001a69f8 : cwde ; scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x0000000000118d9e : cwde ; shr rax, 4 ; ret
0x00000000000efc82 : cwde ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000001a87e8 : cwde ; sub ch, dh ; jmp qword ptr [rcx]
0x00000000001a3748 : cwde ; xchg dl, dh ; jmp qword ptr [rcx]
0x000000000002ee41 : data16 ; nop dword ptr [rax + rax] ; ret
0x000000000018e058 : data16 ; stc ; jmp rsp
0x000000000005fe3c : dec byte ptr [r15] ; xchg eax, esp ; ret 0xd284
0x000000000009c459 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x000000000009a441 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000009c45a : dec byte ptr [rax + 0x29] ; ret 0x149
0x000000000009a442 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000086905 : dec byte ptr [rax + 0x39] ; ret 0x3574
0x00000000000b18f6 : dec byte ptr [rax + 0xf] ; ret 0x3949
0x000000000006de02 : dec byte ptr [rax + 0xf] ; ret 0x894c
0x00000000000807cd : dec byte ptr [rax - 0x73] ; ret
0x000000000008610e : dec byte ptr [rax - 0x77] ; and byte ptr [r8 + 0x31], r9b ; ret 0x93be
0x0000000000085c87 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00000000000496b7 : dec byte ptr [rax - 0x77] ; clc ; cmovae rax, rsi ; pop rbx ; ret
0x0000000000049793 : dec byte ptr [rax - 0x77] ; clc ; cmovae rax, rsi ; ret
0x00000000000419cd : dec byte ptr [rax - 0x77] ; ret
0x000000000003999f : dec byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000c45a0 : dec byte ptr [rax - 0x7d] ; ret
0x00000000000e32be : dec byte ptr [rcx + rcx*4 - 9] ; call 0xdf566
0x00000000000f48e0 : dec byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x000000000004a55e : dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000095f9b : dec dword ptr [r13 - 0x77] ; ret
0x0000000000049b0e : dec dword ptr [r8 - 0x7d] ; ret 0x8801
0x00000000000973cf : dec dword ptr [r9 - 0x76b706b9] ; clc ; ret
0x00000000000436a3 : dec dword ptr [rax + 0x21] ; ret 0x948
0x0000000000094c29 : dec dword ptr [rax + 0x29] ; ret
0x000000000009c5da : dec dword ptr [rax + 0x29] ; ret 0x149
0x000000000009a582 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000038891 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000aa489 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00000000000c4fc7 : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x0000000000027ed3 : dec dword ptr [rax + 0x39] ; ret
0x0000000000079415 : dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000b348f : dec dword ptr [rax + 0x39] ; ret 0x840f
0x00000000001138e7 : dec dword ptr [rax + 0x39] ; ret 0x870f
0x00000000000de777 : dec dword ptr [rax + 0x63] ; ret
0x000000000003f9ae : dec dword ptr [rax + 0x63] ; ret 0x2ce9
0x00000000000e54ca : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000000427d0 : dec dword ptr [rax + 0x63] ; ret 0xeae9
0x000000000008b519 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000008d614 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x000000000003c97b : dec dword ptr [rax + 0xf] ; ret
0x00000000000b1706 : dec dword ptr [rax + 0xf] ; ret 0x3949
0x00000000000c14d2 : dec dword ptr [rax + 0xf] ; ret 0x48c3
0x000000000008c472 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000000eeb0e : dec dword ptr [rax + 0xf] ; ret 0x894c
0x00000000000799da : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000000000002f799 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x0000000000060108 : dec dword ptr [rax + 0xf] ; ret 0xbd83
0x00000000000c301e : dec dword ptr [rax + 0xf] ; ret 0xfc3
0x000000000005b684 : dec dword ptr [rax + 1] ; ret
0x000000000018ac43 : dec dword ptr [rax + rdi - 0x3089ffff] ; out dx, eax ; call rsp
0x000000000018a503 : dec dword ptr [rax + rdx + 0x1990001] ; out dx, eax ; call rsp
0x0000000000189c43 : dec dword ptr [rax + rdx*8 + 0x61e00000] ; out dx, al ; call rsp
0x000000000012bb19 : dec dword ptr [rax - 0x2d] ; ret 0x2148
0x0000000000037773 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x0000000000093eff : dec dword ptr [rax - 0x39] ; ret
0x00000000000e5655 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000f113a : dec dword ptr [rax - 0x68] ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000f3264 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000a442f : dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x000000000006c201 : dec dword ptr [rax - 0x73] ; dec qword ptr [rax + 1] ; ret
0x00000000000a3f8b : dec dword ptr [rax - 0x73] ; lock ; ret
0x00000000000dfdfb : dec dword ptr [rax - 0x75] ; adc byte ptr [r8 + 0x39], cl ; ret 0x574
0x000000000004bedc : dec dword ptr [rax - 0x75] ; add byte ptr [rcx - 0x77], cl ; add bl, ch ; ret
0x000000000012f655 : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000083f23 : dec dword ptr [rax - 0x75] ; je 0x83f55 ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000000f5d2d : dec dword ptr [rax - 0x75] ; jge 0xf5d37 ; call rbx
0x00000000000f5d2c : dec dword ptr [rax - 0x75] ; jge 0xf5d38 ; call rbx
0x00000000000f5fe0 : dec dword ptr [rax - 0x75] ; jge 0xf5fea ; call rbx
0x00000000000f5fdf : dec dword ptr [rax - 0x75] ; jge 0xf5feb ; call rbx
0x00000000000f76d7 : dec dword ptr [rax - 0x75] ; jge 0xf76e2 ; call r12
0x000000000002328d : dec dword ptr [rax - 0x75] ; js 0x232b3 ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x00000000000cd1cd : dec dword ptr [rax - 0x75] ; mov ebp, 0xffffff58 ; call rbx
0x00000000000cd5a5 : dec dword ptr [rax - 0x77] ; add al, 0x24 ; call rbx
0x000000000007ea71 : dec dword ptr [rax - 0x77] ; and al, 8 ; call qword ptr [rax]
0x000000000008d2b8 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000000f1e26 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000086b44 : dec dword ptr [rax - 0x77] ; fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x000000000012f0bc : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000000bae70 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000021363 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 1] ; ret
0x0000000000123091 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; salc ; ret
0x00000000000b78d4 : dec dword ptr [rax - 0x77] ; jmp 0x48ce022a
0x00000000000e44ee : dec dword ptr [rax - 0x77] ; jmp 0x4cd0ce44
0x00000000001119f6 : dec dword ptr [rax - 0x77] ; lock pop rbx ; ret
0x00000000000cde90 : dec dword ptr [rax - 0x77] ; or r9b, r13b ; ret 0xfff8
0x0000000000020268 : dec dword ptr [rax - 0x77] ; ret
0x00000000001093ff : dec dword ptr [rax - 0x77] ; ret 0x1376
0x00000000000c4d6f : dec dword ptr [rax - 0x77] ; ret 0x19eb
0x000000000004c6fb : dec dword ptr [rax - 0x77] ; ret 0x1beb
0x00000000000c5b97 : dec dword ptr [rax - 0x77] ; ret 0x1e73
0x00000000000c5be6 : dec dword ptr [rax - 0x77] ; ret 0x1f73
0x00000000001067e6 : dec dword ptr [rax - 0x77] ; ret 0x2b49
0x00000000000f1d61 : dec dword ptr [rax - 0x77] ; ret 0x2d77
0x000000000004c597 : dec dword ptr [rax - 0x77] ; ret 0x31eb
0x000000000007356c : dec dword ptr [rax - 0x77] ; ret 0x38b
0x00000000000832cd : dec dword ptr [rax - 0x77] ; ret 0x3d83
0x00000000000c68f3 : dec dword ptr [rax - 0x77] ; ret 0x4164
0x00000000000eeb6d : dec dword ptr [rax - 0x77] ; ret 0x4574
0x00000000000e79de : dec dword ptr [rax - 0x77] ; ret 0x4c6
0x000000000006823b : dec dword ptr [rax - 0x77] ; ret 0x4ce8
0x00000000000fb2ea : dec dword ptr [rax - 0x77] ; ret 0x5077
0x00000000000e7a45 : dec dword ptr [rax - 0x77] ; ret 0x52e9
0x00000000000c14c1 : dec dword ptr [rax - 0x77] ; ret 0x676
0x00000000000c3a66 : dec dword ptr [rax - 0x77] ; ret 0x6b8
0x00000000000f15de : dec dword ptr [rax - 0x77] ; ret 0x7577
0x0000000000081665 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000013270a : dec dword ptr [rax - 0x77] ; ret 0x854d
0x0000000000050a90 : dec dword ptr [rax - 0x77] ; ret 0x858b
0x0000000000036d3f : dec dword ptr [rax - 0x77] ; ret 0x870f
0x00000000000eacb3 : dec dword ptr [rax - 0x77] ; ret 0x8845
0x0000000000072d5a : dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000004a3cc : dec dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000106158 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000004dce1 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000c5b32 : dec dword ptr [rax - 0x77] ; ret 0x8d49
0x000000000013338c : dec dword ptr [rax - 0x77] ; ret 0x9274
0x000000000005dd33 : dec dword ptr [rax - 0x77] ; ret 0x98e9
0x000000000005dd2b : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x00000000000512e2 : dec dword ptr [rax - 0x77] ; ret 0xa9e9
0x00000000000b4a3f : dec dword ptr [rax - 0x77] ; ret 0xb8e9
0x00000000000ff80f : dec dword ptr [rax - 0x77] ; ret 0xb9
0x00000000001280c5 : dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000085361 : dec dword ptr [rax - 0x77] ; ret 0xcb8
0x00000000000f1c83 : dec dword ptr [rax - 0x77] ; ret 0xd77
0x0000000000093ac6 : dec dword ptr [rax - 0x77] ; ret 0xf0e9
0x000000000006f8f0 : dec dword ptr [rax - 0x77] ; ret 0xf40
0x00000000000508be : dec dword ptr [rax - 0x77] ; ret 0xf4a
0x000000000012289a : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000509dc : dec dword ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4803
0x000000000003f7ed : dec dword ptr [rax - 0x77] ; xor cl, ch ; ret 0xfff0
0x0000000000096593 : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rax - 0x77] ; ret 0x1e75
0x000000000009649a : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000213b1 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], -0x6b ; ret
0x00000000000e1887 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], -0x7c ; ret
0x00000000000deb56 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], -0x7c ; ret 0
0x000000000006a979 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + 0x48], -0x77 ; ret
0x0000000000085341 : dec dword ptr [rax - 0x7b] ; xlatb ; je 0x85358 ; pop rbx ; ret
0x0000000000189e43 : dec dword ptr [rax - 0x7d240000] ; out dx, al ; call rsp
0x0000000000132e31 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000133388 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x9274
0x0000000000022e45 : dec dword ptr [rax - 0x7d] ; cwde ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000002f0e1 : dec dword ptr [rax - 0x7d] ; ret
0x00000000000269b9 : dec dword ptr [rax - 0x7d] ; ret 0x4101
0x000000000004c728 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000e8bab : dec dword ptr [rax - 0x7d] ; ret 0x4803
0x000000000012932a : dec dword ptr [rax - 0x7d] ; ret 0x4807
0x0000000000038e31 : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000049b0f : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000000c7c7f : dec dword ptr [rax - 0x7d] ; ret 0x8804
0x00000000000d4e46 : dec dword ptr [rax - 0x7d] ; ret 0x8d01
0x0000000000067c1f : dec dword ptr [rax - 0x7d] ; ret 0xe908
0x00000000000d8021 : dec dword ptr [rax - 0x7d] ; ret 0xeb01
0x000000000006d69d : dec dword ptr [rax - 0x7d] ; ret 0xeb02
0x000000000001fc20 : dec dword ptr [rax - 0x7d] ; ret 0xeb04
0x0000000000057d5b : dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000002d46b : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], -0x7d ; ret 0x8301
0x0000000000072ff8 : dec dword ptr [rax - 0x7f] ; ret
0x000000000014d03c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000c82c8 : dec dword ptr [rbp + 0x63] ; ror byte ptr [rcx + 0x29], cl ; cli ; sub r10, rax ; jmp 0xc82f5
0x0000000000063653 : dec dword ptr [rbp + 1] ; loop 0x63647 ; scasb al, byte ptr [rdi] ; ret
0x0000000000189783 : dec dword ptr [rbp + rbp*4 - 0x24d20000] ; jmp 0x189793
0x000000000018da3b : dec dword ptr [rbp + rbx*2 + 0x7d220002] ; clc ; call rsp
0x000000000018ec23 : dec dword ptr [rbp + rbx*8 - 0x418ffffe] ; cli ; call rsp
0x000000000018d853 : dec dword ptr [rbp + rcx*2 + 0x542d0002] ; clc ; call rsp
0x0000000000061e2a : dec dword ptr [rbp + rcx*4 + 0x2d] ; ret
0x000000000018dd83 : dec dword ptr [rbp + rsi*2 - 0xad2fffe] ; clc ; call rsp
0x000000000018e61b : dec dword ptr [rbp + rsi*4 + 0x214b0002] ; cli ; call rsp
0x00000000000a81b3 : dec dword ptr [rbp - 0x77] ; fmul qword ptr [rcx - 0x77] ; ret 0x24eb
0x0000000000095f9c : dec dword ptr [rbp - 0x77] ; ret
0x00000000000baf96 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], -0x7c ; ret
0x00000000000efdb4 : dec dword ptr [rbp - 0x7bf0fea8] ; ret 1
0x00000000000d94b8 : dec dword ptr [rbp - 0x7cb7febd] ; ret
0x00000000000f076e : dec dword ptr [rbx + 0x19e83c7d] ; ret
0x0000000000106631 : dec dword ptr [rbx + 0x2b8d543d] ; add al, ch ; ret
0x00000000000d9ffd : dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000136e55 : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x48 ; ret
0x00000000000bdcce : dec dword ptr [rbx + 4] ; jne 0xbdcf4 ; pop rbx ; ret
0x000000000018d583 : dec dword ptr [rbx + rdi + 0x23510002] ; clc ; call rsp
0x000000000018dd4b : dec dword ptr [rbx + rsi*2 - 0xc23fffe] ; clc ; call rsp
0x000000000017a0b3 : dec dword ptr [rbx - 0x5b000c05] ; cli ; jmp rcx
0x00000000000cb89f : dec dword ptr [rbx - 0x76be77bb] ; ret 0xdb84
0x000000000017a05f : dec dword ptr [rbx] ; add esi, esp ; jmp rsi
0x00000000000b42e5 : dec dword ptr [rcx + 0x29] ; ret
0x000000000004b7b1 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000189583 : dec dword ptr [rcx + 0x40130000] ; jmp 0x189593
0x000000000008442e : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x00000000000971a2 : dec dword ptr [rcx + 1] ; ret
0x000000000004c39a : dec dword ptr [rcx + rcx*4 - 0x19] ; call 0x108656
0x000000000001ff60 : dec dword ptr [rcx + rcx*4 - 0x19] ; call qword ptr [r14]
0x000000000007e1a9 : dec dword ptr [rcx + rcx*4 - 0x40] ; nop dword ptr [rax] ; ret
0x000000000017b4ab : dec dword ptr [rcx + rdx*8] ; idiv bh ; or al, 0xffffffffffffffd1 ; idiv bh ; ret
0x000000000017b4af : dec dword ptr [rcx + rdx*8] ; idiv bh ; ret
0x0000000000179c43 : dec dword ptr [rcx - 0x32000c34] ; ret 0xfff3
0x0000000000050763 : dec dword ptr [rcx - 0x39] ; ret
0x0000000000130384 : dec dword ptr [rcx - 0x39] ; ret 0xffff
0x00000000000f5b65 : dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000f5fee : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000106227 : dec dword ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x00000000000f5bf8 : dec dword ptr [rcx - 0x75] ; jge 0xf5c02 ; call rbx
0x00000000000f5bf7 : dec dword ptr [rcx - 0x75] ; jge 0xf5c03 ; call rbx
0x00000000000f5d1f : dec dword ptr [rcx - 0x75] ; jge 0xf5d29 ; call rbx
0x00000000000f5d1e : dec dword ptr [rcx - 0x75] ; jge 0xf5d2a ; call rbx
0x00000000000f5e62 : dec dword ptr [rcx - 0x75] ; jge 0xf5e6c ; call rbx
0x00000000000f5e61 : dec dword ptr [rcx - 0x75] ; jge 0xf5e6d ; call rbx
0x00000000000f5fd2 : dec dword ptr [rcx - 0x75] ; jge 0xf5fdc ; call rbx
0x00000000000f5fd1 : dec dword ptr [rcx - 0x75] ; jge 0xf5fdd ; call rbx
0x00000000001033e6 : dec dword ptr [rcx - 0x75] ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000d0ab3 : dec dword ptr [rcx - 0x75] ; push rdi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000134334 : dec dword ptr [rcx - 0x75] ; sub byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000000973d0 : dec dword ptr [rcx - 0x76b706b9] ; clc ; ret
0x0000000000023147 : dec dword ptr [rcx - 0x77] ; fmul qword ptr [rax - 0x77] ; ret
0x0000000000096b68 : dec dword ptr [rcx - 0x77] ; ret 0x5be9
0x00000000000af401 : dec dword ptr [rcx - 0x77] ; ret 0x5ee9
0x000000000004e174 : dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000004b983 : dec dword ptr [rcx - 0x77] ; ret 0x850f
0x00000000000565f7 : dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x00000000000608c2 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000057326 : dec dword ptr [rcx - 0x77] ; ret 0xe3e9
0x000000000007ea20 : dec dword ptr [rcx - 0x77] ; salc ; call qword ptr [rax]
0x000000000006c176 : dec dword ptr [rcx - 0x7cb769fc] ; ret 0x4801
0x0000000000027867 : dec dword ptr [rcx - 0x7d] ; ret
0x00000000000c8bef : dec dword ptr [rcx - 0x7d] ; ret 0x4101
0x00000000000a6fca : dec dword ptr [rcx - 0x7d] ; ret 0x4104
0x0000000000098588 : dec dword ptr [rcx - 0x7d] ; ret 0x8401
0x00000000000c9d1e : dec dword ptr [rcx - 0x7d] ; ret 0xe901
0x00000000000fb125 : dec dword ptr [rcx] ; clc ; ret
0x00000000000f129d : dec dword ptr [rcx] ; lock mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x0000000000105efb : dec dword ptr [rcx] ; ret
0x00000000000fe566 : dec dword ptr [rcx] ; setbe al ; ret
0x000000000018ab43 : dec dword ptr [rdi + rbp - 0x3434ffff] ; out dx, eax ; call rsp
0x0000000000189c23 : dec dword ptr [rdi + rcx*8 + 0x5ff00000] ; out dx, al ; call rsp
0x000000000002fde6 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2fd77 ; loopne 0x2fdf7 ; ret
0x00000000000fed25 : dec dword ptr [rdi] ; mov bh, 4 ; js 0xfecb6 ; loopne 0xfed36 ; ret
0x0000000000047ddb : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000096e74 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret
0x0000000000097089 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8348
0x0000000000096e61 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8349
0x000000000006d8c2 : dec dword ptr [rdi] ; mov dh, 0x53 ; or al, 0xfffffffffffffff6 ; ret 0x7404
0x00000000000e3c9c : dec dword ptr [rdi] ; ret 0x148d
0x00000000000256db : dec dword ptr [rdi] ; ret 0x41c3
0x000000000007dbc6 : dec dword ptr [rdi] ; ret 0x6348
0x00000000000477d7 : dec dword ptr [rdi] ; ret 0x8341
0x0000000000109547 : dec dword ptr [rdi] ; ret 0x8348
0x0000000000115091 : dec dword ptr [rdi] ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x840f
0x00000000001148a4 : dec dword ptr [rdi] ; test bh, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000002104c : dec dword ptr [rdi] ; test bl, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x894c
0x000000000006e790 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x76ffffff], cl ; ret 0xe283
0x00000000000fc38e : dec dword ptr [rdi] ; test dword ptr [rbx], ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000063a61 : dec dword ptr [rdi] ; test dword ptr [rdi + rax*8 + 0x6ae9ffff], esi ; ret 0xffff
0x0000000000164910 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000005c84c : dec dword ptr [rdi] ; xchg dword ptr [rbx - 0x77000000], esi ; ret 0x348
0x000000000005c52e : dec dword ptr [rdi] ; xchg dword ptr [rcx - 0x77000000], esi ; ret 0x348
0x000000000005a249 : dec dword ptr [rdi] ; xchg dword ptr [rsi - 0x76fffffe], ebp ; ret 0x348
0x00000000000cc3bc : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x460f
0x0000000000032c7a : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x9be9
0x0000000000048ea7 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc031
0x000000000003291a : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x00000000000ef6c0 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x7c83
0x00000000000c4a53 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8548
0x00000000000724ac : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000080689 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xee9
0x000000000004d5de : dec dword ptr [rdi] ; xchg eax, esp ; shr eax, -0x67 ; ret 0xffff
0x000000000018a843 : dec dword ptr [rdx + rbx + 0x4a4f0001] ; out dx, eax ; call rsp
0x00000000000503df : dec dword ptr [rdx - 0x73] ; push rsp ; add cl, byte ptr es:[rax + 1] ; ret 0x8348
0x000000000005e265 : dec dword ptr [rdx] ; jne 0x5e270 ; ret
0x0000000000071050 : dec dword ptr [rdx] ; jne 0x710bf ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071cfb : dec dword ptr [rdx] ; jne 0x71d42 ; ret
0x0000000000071df5 : dec dword ptr [rdx] ; jne 0x71e42 ; mov eax, esi ; ret
0x0000000000071ef5 : dec dword ptr [rdx] ; jne 0x71f42 ; mov eax, esi ; ret
0x0000000000072bc0 : dec dword ptr [rdx] ; jne 0x72c29 ; pop rbx ; ret
0x0000000000166b36 : dec dword ptr [rip + 0x25afe4] ; jne 0x166b65 ; ret
0x000000000017a053 : dec dword ptr [rip + 0x65fff3f8] ; add esp, esi ; jmp qword ptr [rcx]
0x0000000000189b1b : dec dword ptr [rsi + rax*8 + 0x5cfa0000] ; in eax, dx ; call rsp
0x000000000018b90b : dec dword ptr [rsi + rdx*4 + 0x74980001] ; call rsp
0x0000000000178fa3 : dec dword ptr [rsi - 0x71000f4d] ; mov bl, -0x10 ; call rsp
0x00000000000715c7 : dec dword ptr [rsi] ; jne 0x71647 ; mov eax, edx ; pop rbx ; ret
0x0000000000072035 : dec dword ptr [rsi] ; jne 0x720b2 ; mov eax, edx ; pop rbx ; ret
0x000000000007261e : dec dword ptr [rsi] ; jne 0x72697 ; mov eax, edx ; pop rbx ; ret
0x0000000000072780 : dec dword ptr [rsi] ; jne 0x72803 ; mov eax, edx ; pop rbx ; ret
0x0000000000072a75 : dec dword ptr [rsi] ; jne 0x72af2 ; mov eax, edx ; pop rbx ; ret
0x00000000000742fa : dec dword ptr [rsi] ; jne 0x74381 ; mov eax, edx ; pop rbx ; ret
0x0000000000078187 : dec dword ptr [rsi] ; jne 0x78200 ; mov eax, edx ; pop rbx ; ret
0x0000000000078319 : dec dword ptr [rsi] ; jne 0x7839b ; mov eax, edx ; pop rbx ; ret
0x0000000000078bb0 : dec dword ptr [rsi] ; jne 0x78c2c ; mov eax, edx ; pop rbx ; ret
0x0000000000078d52 : dec dword ptr [rsi] ; jne 0x78dd6 ; mov eax, edx ; pop rbx ; ret
0x00000000000791e2 : dec dword ptr [rsi] ; jne 0x79238 ; mov eax, edx ; pop rbx ; ret
0x000000000017a3b3 : dec dword ptr [rsi] ; xchg eax, esi ; hlt ; lcall ptr [rax] ; xchg eax, esi ; hlt ; jmp qword ptr [rdx]
0x000000000017a393 : dec eax ; xchg eax, ebp ; hlt ; call rdx
0x0000000000179c47 : dec ebp ; ret 0xfff3
0x0000000000039a3d : dec ecx ; ret
0x000000000017a337 : dec ecx ; xchg eax, esi ; hlt ; call rbx
0x000000000018826b : dec edx ; test bh, ah ; push qword ptr [rax - 0x7c] ; cld ; jmp rax
0x000000000018cbbb : dec esp ; add dword ptr [rdx], eax ; add byte ptr [rax + rsi - 9], dh ; jmp rsp
0x0000000000188f33 : dec esp ; jg 0x188f3f ; add ah, ah ; je 0x188f2d ; jmp rsp
0x000000000018b58b : dec esp ; jle 0x18b598 ; add ah, ah ; mov dl, dh ; jmp rsp
0x000000000018b58a : dec esp ; jle 0x18b599 ; add ah, ah ; mov dl, dh ; jmp rsp
0x000000000018bc7b : dec esp ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; mov ah, 0x33 ; hlt ; jmp rsp
0x000000000018914b : dec esp ; mov eax, dword ptr [rax] ; add byte ptr [rbp + rbx*8 - 0x16], dl ; jmp rsp
0x000000000018e6f3 : dec esp ; mov ebp, 0x33c40002 ; cli ; jmp rsp
0x000000000018e753 : dec esp ; mov edi, 0x3ad40002 ; cli ; jmp rsp
0x000000000018bb63 : dec esp ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; in al, -0x5f ; jmp rsp
0x000000000018a4a3 : dec esp ; or eax, 0xfbd40001 ; out dx, al ; jmp rsp
0x000000000018d893 : dec esp ; push rcx ; add al, byte ptr [rax] ; and al, 0x5e ; clc ; jmp rsp
0x0000000000178993 : dec esp ; ret 0xffee
0x000000000018c15b : dec esp ; rol byte ptr [rcx], 1 ; add byte ptr [rsp + rsi - 0xa], al ; jmp rsp
0x000000000018d323 : dec esp ; sub al, 2 ; add byte ptr [rcx + rax - 8], dh ; jmp rsp
0x000000000009c5d9 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x000000000009a581 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000098587 : dec qword ptr [r9 - 0x7d] ; ret 0x8401
0x000000000006c204 : dec qword ptr [rax + 1] ; ret
0x00000000000278b0 : dec qword ptr [rax - 0x7d] ; ret 0x4101
0x0000000000027866 : dec qword ptr [rcx - 0x7d] ; ret
0x00000000001b71f1 : div bh ; call rdx
0x00000000001a5209 : div bl ; jmp qword ptr [rax]
0x00000000000948cf : div byte ptr [rbp + 0xa] ; jmp 0x9489a
0x000000000012f69e : div byte ptr [rbp + 0xf] ; call 0x12b8f5
0x0000000000089702 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000002c981 : div byte ptr [rbp + rax*8 + 0x5b] ; ret
0x0000000000097741 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x000000000001fea9 : div byte ptr [rcx] ; shr al, -0x58 ; ret 0xc
0x00000000001acfc1 : div ch ; call qword ptr [rcx]
0x0000000000037b95 : div dword ptr [rax + rdi] ; mov eax, edx ; ret
0x00000000000b2775 : div dword ptr [rax] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf749
0x00000000001065e4 : div dword ptr [rcx] ; shr al, 0x24 ; ret
0x00000000001066aa : div dword ptr [rcx] ; shr al, 0x5e ; ret 0xffff
0x00000000000cc311 : div dword ptr [rdi - 0x14] ; ret
0x000000000006f8c5 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000743f0 : div ebp ; pop rbp ; pop r12 ; ret
0x000000000007442c : div ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004f1bd : div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x00000000000a2717 : div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000006f8c4 : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000743ef : div rbp ; pop rbp ; pop r12 ; ret
0x000000000007442b : div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000195bd6 : enter -0x1292, -1 ; sbb al, 0xd ; jne 0x195c55 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000001f6b0 : enter -0x1401, -0x3a ; ret
0x00000000000c6c41 : enter -0x14fe, -0x6a ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000009765d : enter -0x178c, -0xd ; ret
0x0000000000098ed1 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x000000000010b4eb : enter -0x38ff, -0x77 ; ret 0x850f
0x0000000000049718 : enter -0x3eb7, -8 ; add cl, byte ptr [rbp + 0x39] ; ret
0x0000000000126981 : enter -0x3eb8, -0x18 ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000164a84 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000009c456 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x000000000009a43e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000009c5d6 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x000000000009a57e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000179ce9 : enter -0xd, -0x1f ; sal bl, 1 ; jmp qword ptr [rax]
0x0000000000179cdd : enter -0xd, -0x33 ; ret 0xfff3
0x00000000001a15fe : enter -0xe8d, -1 ; sbb al, 0xd ; xchg eax, edi ; jae 0x1a1601 ; jmp qword ptr [rdx]
0x0000000000063a3c : enter -1, -0x17 ; xchg eax, ebx ; ret 0xffff
0x00000000000f5c44 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000124747 : enter 0, 0 ; call rax
0x0000000000124709 : enter 0, 0 ; jmp rcx
0x00000000000f8f33 : enter 0, 0 ; ret
0x00000000000c327f : enter 0x1b8, 0 ; add byte ptr [rax], al ; ret
0x000000000007d75a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000036484 : enter 0x280f, -0x3f ; ret
0x0000000000128cbe : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a559a : enter 0x31c3, -0x40 ; nop ; ret
0x0000000000088f4d : enter 0x31c3, -0x40 ; ret
0x000000000002e8c6 : enter 0x3b48, 5 ; ret 0x3922
0x0000000000128417 : enter 0x4189, 0x48 ; mov eax, 1 ; ret
0x0000000000128374 : enter 0x4189, 0x54 ; mov eax, 1 ; ret
0x0000000000128444 : enter 0x4189, 0x58 ; mov eax, 1 ; ret
0x000000000001fc1f : enter 0x48ff, -0x7d ; ret 0xeb04
0x0000000000001b11 : enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000085d1b : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003055a : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000f14f7 : enter 0x5d5b, 0x41 ; pop rsp ; ret
0x00000000001774fc : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000037353 : enter 0xf44, 0x45 ; ret 0x8d48
0x0000000000161ca6 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000087971 : enter 0xf66, -0x15 ; ret
0x000000000018bffd : enter 1, -0x1c ; ret 0xfff5
0x000000000018bff5 : enter 1, 0x64 ; ret 0xfff5
0x000000000009fcb4 : enter 5, 0 ; ret
0x000000000005e3d7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000010a0ee : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007bcb7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000007c203 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000000f7d50 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000047546 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000010b97c : fadd dword ptr [rax] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c879e : fadd dword ptr [rbp - 0x77] ; ror dword ptr [rcx - 0x77], cl ; ret 0x1f0f
0x0000000000131e79 : fadd dword ptr [rbx + 0x14807e0] ; ret 0x3b48
0x000000000004d871 : fadd dword ptr [rcx + 0x39] ; ret 0x860f
0x000000000007afab : fadd dword ptr [rcx + 0x5d] ; ret
0x00000000000a5994 : fadd dword ptr [rcx + 0x5f] ; ret
0x00000000000b8497 : fadd dword ptr [rcx - 0x77] ; ret
0x00000000001aca1d : fadd dword ptr [rcx] ; add byte ptr [rax - 0x13], dl ; cmc ; call qword ptr [rax]
0x00000000001ac9d5 : fadd dword ptr [rcx] ; add byte ptr [rax], bh ; in eax, dx ; cmc ; call qword ptr [rdi]
0x0000000000189a7c : fadd st(2), st(0) ; add byte ptr [rax], al ; in al, 0x55 ; in eax, dx ; push rsp ; ret 0
0x00000000001650a8 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x0000000000162ffe : fadd st(3) ; ret
0x00000000001ab66c : fadd st(4), st(0) ; add dword ptr [rax], eax ; mov al, -0x2d ; cmc ; jmp qword ptr [rsi]
0x00000000000f8b40 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000000f082a : fbld dword ptr [rbp + rax*2 - 0x75] ; call 0xeca97
0x00000000001617f1 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000304a5 : fbstp dword ptr [rbp + rax - 0x18] ; ret
0x000000000008183a : fbstp dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x00000000000b84ad : fcmovb st(0), st(1) ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000176b38 : fcmovb st(0), st(3) ; ret
0x000000000017a39c : fcom qword ptr [rbp - 0x6566000c] ; hlt ; jmp rsi
0x000000000019096c : fcom qword ptr [rdi] ; add byte ptr [rax], al ; sal ah, -0x17 ; call qword ptr [rdx]
0x00000000001ab4a8 : fcom st(2) ; cmc ; jmp qword ptr [rsi]
0x00000000000e1885 : fcomi st(3) ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], -0x7c ; ret
0x00000000001b68f9 : fcomi st(7) ; jmp qword ptr [rcx]
0x000000000007c1d5 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002cae7 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000001f665 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000033f00 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000869ba : fcomp dword ptr [rbx - 0x3d] ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000083644 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000019e158 : fcomp dword ptr [rcx] ; out dx, eax ; call qword ptr [rax]
0x00000000001778b9 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000001af406 : fcomp qword ptr [rbx + 0xd1cfff5] ; push rsp ; xchg eax, esi ; cmc ; jmp qword ptr [rdx]
0x00000000001a8b6c : fcomp qword ptr [rcx + 0x2cf00001] ; cmc ; jmp qword ptr [rcx]
0x000000000019d38c : fcomp qword ptr [rcx - 0x12] ; jmp qword ptr [rdx]
0x0000000000175b20 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000019e0f8 : fcomp st(0) ; stc ; call qword ptr [rax]
0x00000000001a77f8 : fcomp st(2) ; hlt ; call qword ptr [rdx]
0x00000000001a3e89 : fcompi st(2) ; call qword ptr [rdx]
0x00000000000a27f0 : fcompi st(3) ; ret
0x00000000001a9c75 : fcompi st(4) ; jmp qword ptr [rdx]
0x00000000001afe4d : fcompi st(5) ; jmp qword ptr [rdx]
0x00000000001b6c09 : fcompi st(7) ; call rdi
0x000000000019628c : fdiv dword ptr [rax - 0x13] ; jmp qword ptr [rdx]
0x0000000000046ffc : fdiv dword ptr [rbp - 0xf] ; pop rbx ; ret
0x00000000000fabc0 : fdiv dword ptr [rcx] ; rol byte ptr [rbp + 0x490f48d2], -0x3e ; jmp 0xfabd5
0x00000000001a8ee8 : fdiv dword ptr [rdx] ; cmc ; jmp qword ptr [rcx]
0x00000000000b42bc : fdiv qword ptr [rax] ; add byte ptr [rcx + 0x29], cl ; ret
0x00000000001a2cd8 : fdiv st(0) ; int1 ; jmp qword ptr [rdx]
0x00000000001a0b2d : fdiv st(0) ; jmp qword ptr [rdx]
0x0000000000179e05 : fdiv st(3) ; call rax
0x00000000000cc3a4 : fdiv st(3) ; ret
0x000000000019ed6c : fdiv st(3), st(0) ; add byte ptr [rax], al ; cwde ; out dx, eax ; jmp rdi
0x00000000001876f5 : fdiv st(3), st(0) ; jmp qword ptr [rax]
0x0000000000187715 : fdiv st(3), st(0) ; jmp rax
0x0000000000058438 : fdiv st(7), st(0) ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000000cb69f : fdivp st(3) ; dec dword ptr [rax + 1] ; ret
0x00000000001876d9 : fdivp st(3) ; inc dword ptr [rax - 0x20] ; sti ; jmp qword ptr [rax]
0x00000000001876f9 : fdivp st(3) ; inc dword ptr [rax] ; loopne 0x187700 ; jmp rax
0x00000000000d9347 : fdivr dword ptr [rcx] ; ret 0xc189
0x00000000000db7a7 : fdivr dword ptr [rcx] ; ret 0xc789
0x000000000019fe89 : fdivr st(0), st(0) ; call qword ptr [rax]
0x000000000019fed1 : fdivr st(0), st(0) ; jmp rax
0x000000000019e0f9 : fdivr st(1) ; call qword ptr [rax]
0x000000000018dd50 : fdivr st(3), st(0) ; clc ; call rsp
0x00000000000c6bb8 : fdivr st(3), st(0) ; ret
0x0000000000174e75 : fdivr st(4) ; test al, -0x69 ; xchg eax, esp ; ret
0x00000000001a7879 : fdivr st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a98ed : fdivr st(4), st(0) ; jmp qword ptr [rdx]
0x000000000018f101 : fdivr st(5) ; jmp rsp
0x00000000001b1ca1 : fdivr st(6), st(0) ; jmp qword ptr [rbx]
0x00000000001b1d39 : fdivr st(6), st(0) ; jmp qword ptr [rcx]
0x00000000000d980a : fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret
0x000000000005898e : fdivr st(7) ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000015f37d : fdivr st(7) ; ret
0x000000000009d30e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001a9c2d : fdivrp st(4) ; jmp qword ptr [rdx]
0x00000000001abc91 : fdivrp st(5) ; call qword ptr [rax]
0x0000000000110aaf : fiadd dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000fb1c8 : fiadd dword ptr [rax] ; add byte ptr [rbx - 0x76ebdbb4], cl ; ret
0x00000000000a5d20 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x000000000003da52 : fiadd dword ptr [rbp + 0x450f48ff] ; ret 0x8348
0x00000000000ec877 : fiadd dword ptr [rbx + 0x210247c] ; cmove eax, edx ; jmp 0xec843
0x00000000000ec767 : fiadd dword ptr [rbx + 0x298247c] ; cmove eax, edx ; ret
0x0000000000123f7e : fiadd dword ptr [rbx - 0x7bf0fc1e] ; ret 1
0x0000000000109541 : fiadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x00000000000869b4 : fiadd dword ptr [rdi] ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000134839 : fiadd word ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000001f572 : ficom dword ptr [rdx + rdi] ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000137b5d : ficomp dword ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x0000000000053e62 : ficomp word ptr [rax - 0x76f0ffee] ; ret
0x00000000000f6359 : ficomp word ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x0000000000177706 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, -0x55 ; ret
0x000000000008174f : fidiv dword ptr [rbx] ; add byte ptr [rcx], bh ; ret 0xa7e
0x0000000000196344 : fidiv word ptr [rax - 0x13] ; jmp qword ptr [rdx]
0x00000000001b1016 : fidiv word ptr [rdx] ; idiv bh ; sbb al, 0xd ; sub r14d, r14d ; jmp qword ptr [rdx]
0x0000000000136b75 : fidivr dword ptr [rax + 1] ; ret
0x00000000000e4135 : fidivr dword ptr [rcx] ; ret 0x3173
0x00000000000d939d : fidivr dword ptr [rcx] ; ret 0xc189
0x0000000000048bd8 : fild dword ptr [rax + 0xf3a007d] ; xchg eax, esp ; ret
0x000000000019cd2d : fild dword ptr [rax] ; add byte ptr [rax + 0x6c], al ; out dx, al ; call qword ptr [rsi]
0x00000000000bac77 : fild dword ptr [rbp + 0x31] ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000ce4ec : fild dword ptr [rbx - 0x6af0fd08] ; ret
0x0000000000112ab7 : fild dword ptr [rcx - 0x7d] ; std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x000000000007a326 : fild word ptr [rbp + 0x4f0f48c9] ; ret 0x8948
0x00000000000ae14a : fild word ptr [rcx + 0x29] ; ret
0x00000000000f1306 : fild word ptr [rcx + 0xf] ; xor byte ptr [rcx], 0xc0 ; ret
0x000000000004f1a8 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000018ec3d : fild word ptr [rdx] ; add byte ptr [rdi + rdi*4], dl ; cli ; jmp rsp
0x0000000000025ffb : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000066615 : fimul dword ptr [rax + 0x39] ; ret 0x820f
0x000000000003fe75 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000013db35 : fimul dword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x0000000000139126 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012acf0 : fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x00000000001165cd : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x000000000002079f : fimul dword ptr [rax - 1] ; ret 0x4eb
0x00000000000a71c1 : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000008d2e2 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x00000000000f2035 : fimul dword ptr [rcx + 0x39] ; ret 0x820f
0x00000000000c5545 : fimul dword ptr [rcx + 3] ; push rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000086b47 : fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x0000000000086d03 : fimul dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, r12 ; call rax
0x00000000000e32bb : fimul dword ptr [rcx + rcx*4 - 2] ; mov rdi, r14 ; call 0xdf569
0x0000000000055ad7 : fimul dword ptr [rcx - 0x77] ; ret 0x8b44
0x000000000015e122 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39bf041
0x000000000015f1a2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39c00c1
0x000000000003666f : fimul dword ptr [rcx] ; ret 0xb70f
0x0000000000095210 : fimul dword ptr [rdi] ; test al, dh ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000068489 : fimul word ptr [rax + 1] ; ret
0x00000000000e46b3 : fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0x11e8
0x000000000012f0bf : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x0000000000041a60 : fimul word ptr [rax - 0x77] ; ret
0x0000000000022bf5 : fimul word ptr [rax - 0x77] ; ret 0x8348
0x000000000002ab8f : fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000000511f8 : fimul word ptr [rax - 0x7d] ; ret
0x0000000000083511 : fimul word ptr [rax - 0x7d] ; ret 0x4810
0x00000000000383de : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x38438
0x0000000000039b6e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x39bc8
0x00000000000f77ef : fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x0000000000086c19 : fimul word ptr [rcx + rcx*4 - 0x11] ; call rdx
0x000000000012bfce : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000002e18b : fimul word ptr [rdi + 0x63] ; xor al, 0xffffffffffffffb2 ; add r14, r10 ; jmp r14
0x00000000000c6cc7 : fistp qword ptr [rax + 1] ; ret
0x00000000000d6ec0 : fistp qword ptr [rcx] ; ret 0xc189
0x0000000000075399 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000007519e : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000135f3b : fistp word ptr [rbx + 0x48] ; mov esi, ebp ; pop rbp ; jmp rax
0x000000000012db31 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000008606e : fisttp dword ptr [rax + 0x21] ; ret
0x0000000000054b34 : fisttp dword ptr [rax + 0x63] ; adc al, -0x68 ; add rax, rdx ; jmp rax
0x0000000000049474 : fisttp dword ptr [rax - 0x73] ; add r9b, byte ptr [r9 + rcx*4 - 0x3e] ; jmp 0x49498
0x0000000000039021 : fisttp dword ptr [rax - 0x77] ; ret
0x0000000000096596 : fisttp dword ptr [rax - 0x77] ; ret 0x1e75
0x00000000000fd26e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2c208a ; pop rbx ; ret
0x000000000002789d : fisttp dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000045ac8 : fisttp dword ptr [rcx - 0x77] ; fld dword ptr [rcx - 0x77] ; ret
0x000000000003903b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000106024 : fisttp dword ptr [rcx - 0x7d] ; ret 0x4d30
0x0000000000065c6b : fisttp dword ptr [rdi] ; lahf ; rol byte ptr [rsi - 0x77], 0x2c ; cmp dword ptr [rcx], ebp ; ret
0x00000000000365ca : fisttp dword ptr [rdi] ; ret
0x000000000009649d : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000003eb7e : fisttp qword ptr [rax - 0x77] ; ret
0x00000000000c8dba : fisttp qword ptr [rax - 0x7d] ; ret
0x000000000008c54a : fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000012c283 : fisttp qword ptr [rcx + 0xf] ; fisttp qword ptr [rax - 0x7d] ; ret
0x000000000005b404 : fisttp qword ptr [rcx - 0x7c09ce35] ; ret
0x00000000000f68a7 : fisttp qword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000094a5c : fisttp word ptr [rax + 0x29] ; ret 0x2948
0x00000000000953c8 : fisttp word ptr [rax + 1] ; ret
0x00000000000b1cf7 : fisttp word ptr [rax + 1] ; ret 0x8948
0x0000000000136754 : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000012165c : fisttp word ptr [rax - 0x75] ; and al, 8 ; call rcx
0x000000000011e782 : fisttp word ptr [rax - 0x77] ; or al, 0x24 ; call r12
0x000000000005003a : fisttp word ptr [rax - 0x77] ; ret
0x00000000000ed045 : fisttp word ptr [rax - 0x77] ; ret 0x14c
0x0000000000165f89 : fisttp word ptr [rax - 0x7b] ; push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x00000000000390bf : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000189898 : fisttp word ptr [rax] ; in al, dx ; jmp rsp
0x00000000000f6a65 : fisttp word ptr [rbx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000096890 : fisttp word ptr [rcx + 1] ; ret
0x0000000000086347 : fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x000000000011e893 : fisttp word ptr [rcx - 0x77] ; in eax, 0x41 ; call rdi
0x000000000013e52d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000000f1661 : fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, 0xffffffff ; ret
0x00000000000f224d : fisub dword ptr [rcx + rcx*4 + 0x10] ; or rax, 0xffffffffffffffff ; jmp 0xf2223
0x00000000000f24ad : fisub dword ptr [rcx + rcx*4 + 0x10] ; or rax, 0xffffffffffffffff ; jmp 0xf2483
0x0000000000161bc1 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001618c1 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018cef0 : fisubr dword ptr [rbx - 9] ; call rsp
0x000000000002a88b : fisubr dword ptr [rdx] ; adc eax, 0x3d8d4800 ; ret 0x1565
0x00000000000f48db : fisubr word ptr [rax + rax] ; jne 0xf52eb ; ret
0x00000000001223c5 : fld dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x00000000001b792c : fld dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000045acb : fld dword ptr [rcx - 0x77] ; ret
0x000000000019cf35 : fld qword ptr [rax] ; add byte ptr [rax], bh ; js 0x19cf2f ; jmp qword ptr [rcx]
0x000000000018ec25 : fld qword ptr [rdx] ; add byte ptr [rax - 0x42], dh ; cli ; call rsp
0x0000000000175b61 : fld qword ptr [rsi + 0x32] ; mov bh, -0x4c ; mov edi, dword ptr [rdx] ; ret
0x000000000003671f : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000000367e8 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00000000000366b9 : fld xword ptr [rsp + 8] ; ret
0x00000000000367b9 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000036799 : fld xword ptr [rsp - 0x18] ; ret
0x0000000000036969 : fldcw word ptr [rsp - 2] ; ret
0x000000000008c889 : fldenv dword ptr [rsi + 0xf] ; je 0x8c8e6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000944c7 : fldenv dword ptr [rsi + 0xf] ; je 0x94524 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000161c41 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008c781 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001890f9 : fldl2e ; call rsp
0x0000000000022083 : fldl2t ; cmp dword ptr [rax], eax ; test rax, rax ; je 0x22097 ; jmp rax
0x000000000019a78d : fldln2 ; jmp qword ptr [rdx]
0x0000000000038484 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b] ; ret
0x00000000000494f5 : fmul dword ptr [rax + 0x39] ; ret
0x00000000000868fb : fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x0000000000077aec : fmul dword ptr [rax + 0xf] ; ret
0x00000000000c49f2 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000bae73 : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000021366 : fmul dword ptr [rax - 1] ; ret
0x00000000000bac5e : fmul dword ptr [rbx - 0x7cb7fbc0] ; ret
0x00000000000b42ae : fmul dword ptr [rcx + 0x39] ; ret
0x000000000009353e : fmul dword ptr [rcx + 0xf] ; ret
0x00000000000c5e00 : fmul dword ptr [rcx + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000b8d24 : fmul dword ptr [rdi] ; mov dh, 0x40 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000fda3d : fmul dword ptr [rdi] ; ret
0x000000000002dcdb : fmul dword ptr [rsi + 0x63] ; add al, -0x7e ; add r8, rdx ; jmp r8
0x000000000003860a : fmul qword ptr [rax + 0xf] ; ret 0x8948
0x000000000002314a : fmul qword ptr [rax - 0x77] ; ret
0x00000000000bdf6b : fmul qword ptr [rax - 0x7d] ; ret
0x00000000000c5143 : fmul qword ptr [rax - 0x7d] ; ret 0x3c01
0x0000000000179848 : fmul qword ptr [rbp - 0x7128000e] ; call rax
0x00000000000a81b6 : fmul qword ptr [rcx - 0x77] ; ret 0x24eb
0x0000000000087d09 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008dc0f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000043ab8 : fmulp st(1) ; ret
0x00000000000b4208 : fnsave dword ptr [rax] ; add byte ptr [rcx - 0x76dbdbbc], cl ; ret
0x00000000000db8de : fnstcw word ptr [rcx] ; rol byte ptr [rcx - 0x77], 1 ; ret
0x0000000000002516 : fnstenv dword ptr [rdx + rdx - 0x38975393] ; ret
0x00000000001874f0 : fnstsw dword ptr [rax - 0x44ee0003] ; std ; call qword ptr [rcx]
0x0000000000179d81 : fpatan ; jmp rsp
0x0000000000035335 : fpatan ; ret
0x00000000001619c1 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000367ec : fscale ; fstp st(1) ; ret
0x00000000000363a5 : fst dword ptr [rbx] ; add byte ptr [rdi], cl ; push rsp ; ret
0x0000000000175847 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000094c3e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000001abe74 : fstp qword ptr [rax - 0xb] ; jmp qword ptr [rdx]
0x000000000011588e : fstp qword ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000175bc0 : fstp st(0) ; ret 0xde5d
0x00000000000fabbf : fstp st(0) ; xor eax, eax ; test edx, edx ; cmovns rax, rdx ; jmp 0xfabd6
0x00000000000368d0 : fstp st(1) ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000367ee : fstp st(1) ; ret
0x00000000001aff6c : fstp st(7), st(0) ; cmc ; jmp qword ptr [rdx]
0x0000000000036721 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000000367bd : fstp xword ptr [rdi] ; ret
0x000000000019a744 : fstpnce st(0), st(0) ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000036eb8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec7c0 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000036be2 : fsub dword ptr [rcx + rcx*4 + 2] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fb32a : fsub dword ptr [rcx + rcx*4 + 6] ; or rax, 0xffffffffffffffff ; ret
0x0000000000161cc1 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000992b4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000018882c : fsub qword ptr [rax - 0x5f930004] ; cld ; call qword ptr [rdx]
0x00000000000a20ab : fsub qword ptr [rsi + 0xf] ; jmp 0xa2077
0x0000000000161ac1 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000087a8c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000016646b : fsub st(3), st(0) ; mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000195685 : fsub st(4), st(0) ; jmp qword ptr [rdx]
0x00000000000f5c42 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000001aa22c : fsubp st(0) ; hlt ; jmp qword ptr [rdx]
0x0000000000132403 : fsubp st(0) ; ja 0x132483 ; int1 ; dec dword ptr [rax + 0x29] ; ret
0x0000000000036723 : fsubp st(1) ; ret
0x00000000000f30d1 : fsubr dword ptr [r8 + r8] ; add rsp, 8 ; ret
0x00000000000f30d2 : fsubr dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000019bd1c : fsubr dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a5a6c : fsubr qword ptr [rax + 1] ; add byte ptr [rax + 0x61], ah ; hlt ; jmp qword ptr [rax]
0x00000000001ad26c : fsubr st(0), st(0) ; add dword ptr [rax], eax ; and dl, bh ; cmc ; call qword ptr [rax]
0x00000000001ad36c : fsubr st(1), st(0) ; add dword ptr [rax], eax ; add bl, bh ; cmc ; call qword ptr [rax]
0x00000000001ac928 : fsubr st(2) ; cmc ; jmp qword ptr [rax]
0x000000000019a54d : fsubr st(5) ; jmp qword ptr [rdx]
0x0000000000177898 : fucom st(5) ; loop 0x1778f1 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000001a9fe4 : fucom st(6) ; hlt ; jmp qword ptr [rdx]
0x000000000005c6a8 : fucomi st(0) ; ret 0xfc2d
0x0000000000189789 : fucomi st(3) ; call rsp
0x0000000000199f75 : fucomi st(5) ; jmp qword ptr [rdx]
0x000000000018acc1 : fucomi st(7) ; jmp rsp
0x0000000000189151 : fucomp st(2) ; jmp rsp
0x00000000001956cd : fucomp st(4) ; jmp qword ptr [rdx]
0x0000000000078a85 : fucompi st(0) ; adc eax, 0x89ffffd1 ; ret 0x3f7
0x0000000000045079 : fucompi st(0) ; and esi, 0x8948ffff ; ret
0x00000000000ab91b : fucompi st(0) ; call rdx
0x00000000000ee5b7 : fucompi st(0) ; jae 0xee620 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x0000000000078bbd : fucompi st(0) ; or eax, 0x89ffffc4 ; ret 0xbceb
0x0000000000072043 : fucompi st(0) ; push rdi ; pushfq ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x7200f
0x000000000002f6c7 : fucompi st(0) ; ret
0x000000000010c7c4 : fucompi st(0) ; ret 0xfff6
0x00000000000cb69c : fucompi st(0) ; sahf ; fdivp st(3) ; dec dword ptr [rax + 1] ; ret
0x0000000000123094 : fucompi st(0) ; salc ; ret
0x0000000000035640 : fucompi st(0) ; sub bl, byte ptr [rsi - 0x3fce0002] ; pop rbx ; ret
0x0000000000020941 : fucompi st(0) ; test eax, 0x89000a7d ; ret 0xc031
0x0000000000072628 : fucompi st(0) ; xchg eax, edi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x725f8
0x0000000000083a43 : fucompi st(0) ; xchg eax, edi ; out -1, al ; dec dword ptr [rax - 0x77] ; ret 0x3d83
0x0000000000078d62 : fucompi st(3) ; cwde ; mov esi, r8d ; call 0x74fd8
0x00000000001a7284 : hlt ; add byte ptr [rcx], 0 ; call 0x231a675c
0x000000000019f584 : hlt ; add eax, dword ptr [rcx] ; add al, bh ; lock ; jmp qword ptr [rdi]
0x000000000018f174 : hlt ; add qword ptr [r8], r8 ; xor al, 0xffffffffffffffe1 ; std ; jmp rsp
0x00000000001a3e84 : hlt ; add qword ptr [rax], r8 ; sub bh, bl ; call qword ptr [rdx]
0x00000000001a779a : hlt ; call qword ptr [rax]
0x000000000017a4b2 : hlt ; call qword ptr [rbx]
0x000000000017a216 : hlt ; call qword ptr [rcx]
0x00000000001a77fa : hlt ; call qword ptr [rdx]
0x00000000001a6ba2 : hlt ; call qword ptr [rsi]
0x000000000017a23e : hlt ; call rbx
0x000000000017a43a : hlt ; call rcx
0x00000000001a6c4a : hlt ; call rdi
0x000000000017a396 : hlt ; call rdx
0x000000000017a906 : hlt ; call rsp
0x000000000002f8f0 : hlt ; cmp byte ptr [rax], al ; mov qword ptr [rax], rdx ; ret
0x00000000001a2f84 : hlt ; cmp eax, 0xfb280001 ; int1 ; jmp qword ptr [rcx]
0x0000000000097633 : hlt ; cmp ecx, edx ; je 0x9762e ; ret
0x00000000001888f4 : hlt ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; push qword ptr [rdi - 4] ; jmp rsp
0x0000000000123090 : hlt ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; salc ; ret
0x000000000017a3b2 : hlt ; dec dword ptr [rsi] ; xchg eax, esi ; hlt ; lcall ptr [rax] ; xchg eax, esi ; hlt ; jmp qword ptr [rdx]
0x000000000017a392 : hlt ; dec eax ; xchg eax, ebp ; hlt ; call rdx
0x000000000017a336 : hlt ; dec ecx ; xchg eax, esi ; hlt ; call rbx
0x000000000018bc7a : hlt ; dec esp ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; mov ah, 0x33 ; hlt ; jmp rsp
0x000000000017a74e : hlt ; inc dword ptr [rbx + rcx*8 - 0x34db000c] ; hlt ; call rcx
0x000000000017a7a2 : hlt ; inc dword ptr [rdx + rcx*8 - 0x34db000c] ; hlt ; call rcx
0x000000000017a436 : hlt ; inc edi ; cwde ; hlt ; call rcx
0x000000000017a762 : hlt ; inc esp ; retf -0xc ; ror edx, 1 ; hlt ; call rcx
0x0000000000175c48 : hlt ; jmp 0x175c1d
0x00000000001a5a72 : hlt ; jmp qword ptr [rax]
0x00000000001a5aba : hlt ; jmp qword ptr [rbx]
0x000000000017a05a : hlt ; jmp qword ptr [rcx]
0x000000000017a4ba : hlt ; jmp qword ptr [rdi]
0x000000000017a3ba : hlt ; jmp qword ptr [rdx]
0x00000000001a7192 : hlt ; jmp qword ptr [rsi]
0x00000000001a7da2 : hlt ; jmp rax
0x000000000017a1be : hlt ; jmp rbx
0x000000000017a342 : hlt ; jmp rdi
0x00000000001a572a : hlt ; jmp rdx
0x000000000017a062 : hlt ; jmp rsi
0x000000000018bc82 : hlt ; jmp rsp
0x0000000000164f85 : hlt ; jne 0x1650a7 ; ret
0x0000000000164f84 : hlt ; jne 0x1650a8 ; ret
0x00000000001a9184 : hlt ; lahf ; add dword ptr [rax], eax ; clc ; cmp ch, dh ; jmp qword ptr [rcx]
0x000000000017a3b6 : hlt ; lcall ptr [rax] ; xchg eax, esi ; hlt ; jmp qword ptr [rdx]
0x000000000018a054 : hlt ; lock add byte ptr [rax], al ; lahf ; out dx, al ; jmp rsp
0x00000000001ad284 : hlt ; loopne 0x1ad28f ; add byte ptr [rax], bl ; cli ; cmc ; call qword ptr [rax]
0x000000000018dc30 : hlt ; mov al, -8 ; jmp rsp
0x00000000001a06b4 : hlt ; mov ch, -0x10 ; jmp qword ptr [rdx]
0x000000000014d47a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014577e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000164593 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000001a5c84 : hlt ; push 1 ; add byte ptr [rax + 0x64], ch ; hlt ; jmp qword ptr [rcx]
0x000000000018e868 : hlt ; push rbp ; cli ; call rsp
0x0000000000187f1c : hlt ; push rsi ; cld ; push qword ptr [rsi + rdx*2 - 4] ; jmp rsp
0x000000000009761b : hlt ; ret
0x0000000000189a84 : hlt ; ret 0
0x000000000018b360 : hlt ; retf ; int1 ; call rsp
0x000000000018bff0 : hlt ; sal ebp, -1 ; mov ah, -0x38 ; add dword ptr [rax], eax ; ret 0xfff5
0x000000000019ef84 : hlt ; std ; add byte ptr [rax], al ; test al, 0x68 ; sti ; call qword ptr [rax]
0x000000000018794d : hlt ; sti ; call qword ptr [rax]
0x0000000000175d83 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000164597 : hlt ; sub eax, edx ; ret
0x00000000000d2923 : hlt ; xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xd28ba ; pop rbx ; ret
0x000000000017b1be : idiv bh ; and byte ptr [rsi - 0xa], cl ; jmp qword ptr [rax]
0x000000000017861d : idiv bh ; call rdi
0x00000000000f5224 : idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d4e44 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x8d01
0x00000000000b42e3 : idiv bh ; dec dword ptr [rcx + 0x29] ; ret
0x0000000000039a42 : idiv bh ; dec ecx ; ret
0x00000000000af90a : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000017b4ae : idiv bh ; or al, 0xffffffffffffffd1 ; idiv bh ; ret
0x000000000017b4b2 : idiv bh ; ret
0x00000000001ad6f2 : idiv bh ; ret 3
0x00000000001b1dc8 : idiv bh ; sbb al, 0xd ; cmp dh, dh ; jmp qword ptr [rdx]
0x00000000001b0fd0 : idiv bh ; sbb al, 0xd ; insd dword ptr [rdi], dx ; sub esi, esi ; jmp qword ptr [rdx]
0x00000000001b0e10 : idiv bh ; sbb al, 0xd ; push rbp ; and esi, esi ; jmp qword ptr [rdx]
0x00000000001b40d8 : idiv bh ; sbb al, 0xd ; rol eax, -0xa ; jmp qword ptr [rdx]
0x00000000001b1e10 : idiv bh ; sbb al, 0xd ; salc ; cmp esi, esi ; jmp qword ptr [rdx]
0x00000000001b1060 : idiv bh ; sbb al, 0xd ; sub esi, r14d ; jmp qword ptr [rdx]
0x00000000001b10a8 : idiv bh ; sbb al, 0xd ; sub r14d, esi ; jmp qword ptr [rdx]
0x00000000001b1018 : idiv bh ; sbb al, 0xd ; sub r14d, r14d ; jmp qword ptr [rdx]
0x000000000017abb4 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x000000000011d15e : idiv bh ; xor eax, eax ; ret
0x0000000000187991 : idiv bl ; call rax
0x00000000000256d6 : idiv byte ptr [rax - 1] ; cmovns eax, edx ; ret
0x000000000019990e : idiv byte ptr [rcx + 0xd1cffed] ; jno 0x1998d8 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000012f6dd : idiv byte ptr [rsi + 0x38] ; call 0x12b8f5
0x0000000000187995 : idiv ebx ; jmp qword ptr [rax]
0x000000000003873d : idiv ecx ; pop r15 ; ret
0x000000000008139f : idiv edi ; adc byte ptr [rax - 0x77], cl ; ret 0x58b
0x00000000000af94e : idiv edi ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000f7f45 : idiv edi ; add rsp, 0x408 ; ret
0x000000000011c7a9 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000cb51f : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000abebb : idiv edi ; dec dword ptr [rcx - 0x7d] ; ret 0x4104
0x0000000000039a3b : idiv edi ; dec ecx ; ret
0x000000000018ceea : idiv edi ; lar eax, word ptr fs:[rax] ; fisubr dword ptr [rbx - 9] ; call rsp
0x0000000000118a5d : idiv edi ; mov eax, ebx ; pop rbx ; ret
0x000000000018cc0a : idiv edi ; mov esp, 0x74000202 ; xor dh, bh ; call rsp
0x000000000018cb0a : idiv edi ; mov esp, 0x940001ff ; sub esi, edi ; call rsp
0x000000000018c92a : idiv edi ; mov esp, 0xb40001f7 ; add esi, edi ; call rsp
0x00000000000c55ad : idiv edi ; push rsi ; ret
0x00000000001b5382 : idiv edi ; ret
0x00000000001b47da : idiv edi ; ret 0
0x00000000001b6ac8 : idiv edi ; sbb al, 0xd ; call 0x231b620c
0x00000000001b6b70 : idiv edi ; sbb al, 0xd ; wait ; xor al, 0xfffffffffffffff7 ; jmp qword ptr [rdx]
0x00000000001b6fc0 : idiv edi ; sbb al, 0xd ; xor al, byte ptr [rsi - 9] ; jmp qword ptr [rdx]
0x000000000003c876 : idiv esi ; ret
0x00000000001b6fbf : idiv r15 ; sbb al, 0xd ; xor al, byte ptr [rsi - 9] ; jmp qword ptr [rdx]
0x000000000017b1bd : idiv r15b ; and byte ptr [rsi - 0xa], cl ; jmp qword ptr [rax]
0x00000000000b42f3 : idiv r15b ; dec dword ptr [rcx + 0x29] ; ret
0x0000000000118a5c : idiv r15d ; mov eax, ebx ; pop rbx ; ret
0x000000000003873c : idiv r9 ; pop r15 ; ret
0x000000000003c875 : idiv rsi ; ret
0x000000000012d9ef : imul al ; imul ebx, dword ptr [rdx], -0x11 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000dc6bf : imul al ; jnp 0xdc6d1 ; sti ; call rcx
0x00000000000aa077 : imul al ; ret
0x0000000000031f38 : imul al ; ret 1
0x00000000001885c0 : imul byte ptr [rdi - 0x50790004] ; cld ; call qword ptr [rsi]
0x000000000019b65d : imul ch ; jmp qword ptr [rdx]
0x000000000009cb08 : imul cl ; ret 8
0x000000000019dfa9 : imul dh ; call qword ptr [rcx]
0x00000000000e32c1 : imul eax ; cdq ; ret 0xffff
0x000000000011c7b3 : imul eax ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000001064ff : imul eax ; pop rbx ; ret
0x00000000000393b7 : imul eax ; ret
0x000000000010efa8 : imul eax ; ret 0xf104
0x00000000000eb1a8 : imul eax ; ret 0xf342
0x0000000000106898 : imul eax ; ret 0xffbf
0x00000000001065ab : imul eax ; scasd eax, dword ptr [rdi] ; ret 0xffff
0x000000000007e9c9 : imul eax, dword ptr [rax], 0 ; ret
0x00000000000cc6dd : imul eax, dword ptr [rax], 0x450f0000 ; ret 0x84e9
0x00000000001630f1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000000d6f53 : imul eax, dword ptr [rcx], 0x63480000 ; ret 0x8b48
0x000000000018b265 : imul eax, dword ptr [rcx], 0xf1b1e400 ; call rsp
0x00000000001a5a9d : imul eax, dword ptr [rcx], 0xf461a000 ; jmp qword ptr [rcx]
0x00000000001a5ab5 : imul eax, dword ptr [rcx], 0xf461b800 ; jmp qword ptr [rbx]
0x00000000001a5b75 : imul eax, dword ptr [rcx], 0xf4635800 ; jmp qword ptr [rcx]
0x00000000001a5b8d : imul eax, dword ptr [rcx], 0xf4637000 ; jmp qword ptr [rcx]
0x00000000001b5d2d : imul eax, dword ptr [rdx], 0 ; jo 0x1b5d3f ; sti ; jmp qword ptr [rdx]
0x000000000018dbcd : imul eax, dword ptr [rdx], 0 ; js 0x18db79 ; clc ; jmp rsp
0x00000000001b5b2d : imul eax, dword ptr [rdx], 0xf79a5000 ; call qword ptr [rdx]
0x00000000001b5b75 : imul eax, dword ptr [rdx], 0xf79aa800 ; jmp qword ptr [rcx]
0x00000000001ae88e : imul eax, dword ptr [rsi + 0xd1cfff5], -0x20 ; test esi, ebp ; jmp qword ptr [rdx]
0x000000000007e9c8 : imul eax, dword ptr cs:[rax], 0 ; ret
0x00000000000b27a0 : imul eax, ebp, 0xc ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x894c
0x000000000019b6a5 : imul ebp ; jmp qword ptr [rdx]
0x0000000000102b85 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007e329 : imul ebx, dword ptr [rax], 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019bec6 : imul ebx, dword ptr [rbp - 0x12], 0xca0d1cff ; xor ebp, esi ; jmp qword ptr [rdx]
0x000000000010a3e2 : imul ebx, dword ptr [rbx + 0x5d], 0x5c41f089 ; ret
0x000000000012d9f1 : imul ebx, dword ptr [rdx], -0x11 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001a0bbc : imul ebx, eax, -0x10 ; jmp qword ptr [rdx]
0x0000000000102b25 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000102a5f : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f05e1 : imul edi, dword ptr [rbx - 0x3f7a0001], -0x77 ; ret
0x000000000012538b : imul edi, ebp, 0x89c085ff ; ret
0x0000000000109d71 : imul edi, esi, -0xd ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000112009 : imul edx, dword ptr [rax - 0x18], 0x10 ; ret 0
0x0000000000102b55 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019e099 : imul esi ; call qword ptr [rax]
0x000000000019e0b1 : imul esi ; jmp qword ptr [rsi]
0x0000000000196006 : imul esi, dword ptr [rcx - 0x13], 0x7e0d1cff ; jo 0x196005 ; jmp qword ptr [rdx]
0x00000000001ad437 : imul esi, ebp, -1 ; sbb al, 0xd ; adc ebp, dword ptr [rcx - 0xb] ; jmp qword ptr [rdx]
0x00000000001ad01f : imul esi, ebp, 0xe50d1cff ; cmc ; jmp qword ptr [rdx]
0x00000000001660b8 : imul esi, ecx, -1 ; cmp rbx, rbp ; jae 0x1660d3 ; call qword ptr [rbx]
0x00000000001660b7 : imul esi, ecx, -1 ; cmp rbx, rbp ; jae 0x1660d4 ; call qword ptr [rbx]
0x00000000000b215e : imul esi, edx ; add eax, esi ; ret
0x0000000000179635 : imul esi, edx, -1 ; shr byte ptr [rbx - 0xe], 1 ; jmp rax
0x00000000001795c5 : imul esi, edx, 0xf269c0ff ; jmp rax
0x00000000001795cd : imul esi, edx, 0xf26a00ff ; jmp qword ptr [rax]
0x000000000009d84c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x0000000000002b60 : imull 0x3a, edx ; adc al, -0x19 ; ret
0x00000000000c6daf : imull 0x8348ffff, edi ; ret
0x00000000001aaa74 : in al, -0x10 ; hlt ; jmp qword ptr [rdx]
0x000000000000374c : in al, -0x12 ; jne 0x372e ; ret 0x975
0x00000000000c81c2 : in al, -0x15 ; ret
0x0000000000061e25 : in al, -0x17 ; out -1, eax ; dec dword ptr [rbp + rcx*4 + 0x2d] ; ret
0x00000000000bcda5 : in al, -0x17 ; ret 0xfffd
0x00000000001ab774 : in al, -0x3b ; add dword ptr [rax], eax ; mov ah, dl ; cmc ; jmp qword ptr [rsi]
0x0000000000179c5c : in al, -0x3c ; jmp rcx
0x00000000001ab474 : in al, -0x3e ; add dword ptr [rax], eax ; test al, -0x2e ; cmc ; jmp qword ptr [rsi]
0x000000000018b268 : in al, -0x4f ; int1 ; call rsp
0x0000000000166b38 : in al, -0x51 ; and eax, 0xf31e7500 ; ret
0x000000000018bb68 : in al, -0x5f ; jmp rsp
0x00000000001a8c74 : in al, -0x66 ; add dword ptr [rax], eax ; mov byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000189f40 : in al, -0x71 ; out dx, al ; jmp rsp
0x00000000001925d6 : in al, -0x77 ; ljmp 0xc40d1cff, -0x157d ; jmp qword ptr [rdx]
0x0000000000109eca : in al, -0x77 ; ret 0x87e
0x00000000001aef54 : in al, -0x78 ; cmc ; jmp qword ptr [rdx]
0x000000000018b590 : in al, -0x78 ; jmp rsp
0x00000000001a2764 : in al, -0x79 ; int1 ; jmp qword ptr [rdx]
0x0000000000198024 : in al, -0x7b ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000e1fdd : in al, -0x7d ; mov byte ptr [rcx], -0x7d ; ret 0x4840
0x00000000001b1fc1 : in al, -0xa ; jmp rdx
0x000000000014d45a : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001a2a51 : in al, -0xf ; jmp rsi
0x00000000000f76d5 : in al, -1 ; dec dword ptr [rax - 0x75] ; jge 0xf76e4 ; call r12
0x000000000008380e : in al, -1 ; dec dword ptr [rax - 0x77] ; ret 0x3d83
0x0000000000187645 : in al, -5 ; call rax
0x0000000000187769 : in al, -5 ; jmp rax
0x0000000000164fb8 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000000fb431 : in al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x000000000018aa8c : in al, 0x44 ; add dword ptr [rax], eax ; ret 0xffef
0x00000000000a6783 : in al, 0x4d ; mov ebp, esi ; setne dl ; jmp 0xa679e
0x00000000000ab633 : in al, 0x4d ; mov ebp, esi ; setne dl ; jmp 0xab64e
0x0000000000189a80 : in al, 0x55 ; in eax, dx ; push rsp ; ret 0
0x000000000012f688 : in al, 0x55 ; push rbx ; xor ebx, ebx ; call 0x12b927
0x00000000001a6074 : in al, 0x6e ; add dword ptr [rax], eax ; clc ; jae 0x1a6076 ; jmp qword ptr [rcx]
0x000000000008788c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000000f6940 : in al, 0xc ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000009e388 : in al, 6 ; add byte ptr [rax], al ; ret
0x0000000000195994 : in al, 9 ; add byte ptr [rax], al ; js 0x19592b ; in eax, dx ; call qword ptr [rax]
0x00000000000465c3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000010c8a8 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; scasb al, byte ptr [rdi] ; ret
0x0000000000193a7c : in al, dx ; add byte ptr [rax], al ; nop ; cmp bh, dl ; jmp qword ptr [rcx]
0x00000000001387f0 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001672c6 : in al, dx ; call qword ptr [rax]
0x000000000019552a : in al, dx ; call rdx
0x00000000000396b8 : in al, dx ; cmp dh, dh ; ret 0x7401
0x00000000001aff24 : in al, dx ; fcompi st(5) ; jmp qword ptr [rdx]
0x0000000000039e29 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000199979 : in al, dx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001672c2 : in al, dx ; inc dword ptr [rax + 0x6c] ; in al, dx ; call qword ptr [rax]
0x00000000000d58cd : in al, dx ; jl 0xd5909 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001672de : in al, dx ; jmp qword ptr [rax]
0x00000000001739ea : in al, dx ; jmp qword ptr [rcx]
0x0000000000194e36 : in al, dx ; jmp qword ptr [rdx]
0x00000000001672ca : in al, dx ; jmp rax
0x000000000018989a : in al, dx ; jmp rsp
0x00000000000ec226 : in al, dx ; jo 0xec222 ; ret 0x4840
0x0000000000189892 : in al, dx ; lcall ptr [rbx + rsi*4 + 0x8df0000] ; in al, dx ; jmp rsp
0x0000000000177704 : in al, dx ; lock ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, -0x55 ; ret
0x00000000000f3ea3 : in al, dx ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000135487 : in al, dx ; mov byte ptr [rcx], al ; add byte ptr [rax], al ; call 0xc1757
0x000000000019ac7c : in al, dx ; mov edx, 0x10200000 ; out dx, al ; jmp qword ptr [rcx]
0x000000000014577a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000097743 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x000000000012dca4 : in al, dx ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000004978a : in al, dx ; mov rax, rsi ; nop ; ret
0x000000000014d85a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001a827c : in al, dx ; nop ; add dword ptr [rax], eax ; lock or esi, ebp ; jmp qword ptr [rcx]
0x0000000000085b12 : in al, dx ; or al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 6
0x00000000000fc8be : in al, dx ; or al, ch ; jmp 0xfc88a
0x00000000000e4cfe : in al, dx ; or al, ch ; mov ebx, 0x39fffde9 ; ret
0x0000000000083cba : in al, dx ; or byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000012f43f : in al, dx ; or byte ptr [rax - 0x77], 0xd0 ; pop rbx ; ret
0x0000000000081f1a : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000139514 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000001f662 : in al, dx ; or byte ptr [rcx + 0x415d5bd8], 0x5c ; ret
0x000000000018a3c1 : in al, dx ; out dx, al ; call rsp
0x0000000000097593 : in al, dx ; ret
0x000000000019b47c : in al, dx ; ret 0
0x00000000000a4bb6 : in al, dx ; sbb byte ptr [rbx + 0x48], 0x29 ; call 0xffffffffc3668d26
0x00000000000a44df : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001311cd : in al, dx ; sbb byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000001b0a7c : in al, dx ; sbb byte ptr [rdx], al ; add al, ah ; mov cl, -0xa ; jmp qword ptr [rcx]
0x00000000001981bc : in al, dx ; test ebp, ebp ; jmp qword ptr [rdx]
0x00000000001a8d7c : in al, dx ; wait ; add dword ptr [rax], eax ; loopne 0x1a8db8 ; cmc ; jmp qword ptr [rcx]
0x00000000001772de : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x177271 ; ret 0x48f
0x00000000001772dd : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x177272 ; ret 0x48f
0x0000000000116ec2 : in al, dx ; xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x000000000019f049 : in eax, -0x11 ; jmp qword ptr [rbx]
0x00000000001897e1 : in eax, -0x15 ; jmp rsp
0x0000000000189201 : in eax, -0x16 ; call rsp
0x000000000018abd8 : in eax, -0x33 ; out dx, eax ; jmp rsp
0x00000000000c6bf1 : in eax, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001ac539 : in eax, -0xb ; call qword ptr [rax]
0x00000000001ac569 : in eax, -0xb ; call qword ptr [rbx]
0x000000000002f8ef : in eax, -0xc ; cmp byte ptr [rax], al ; mov qword ptr [rax], rdx ; ret
0x000000000014d4da : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000009227a : in eax, -0xd ; ret
0x0000000000057d59 : in eax, -1 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000176d61 : in eax, -1 ; lahf ; mov dh, -0x39 ; ret 0xe71f
0x000000000007ad52 : in eax, 0 ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000189ebd : in eax, 0 ; add byte ptr [rdi], ah ; mov esi, ebp ; jmp rsp
0x0000000000189ed5 : in eax, 0 ; add byte ptr [rdx + rcx*4], al ; out dx, al ; call rsp
0x00000000001759e3 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000f3fe8 : in eax, 0x2c ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x0000000000036ab3 : in eax, 0x38 ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x00000000000e4e68 : in eax, 0x39 ; ret
0x000000000011e896 : in eax, 0x41 ; call rdi
0x00000000000a3c5a : in eax, 0x44 ; sub eax, eax ; nop ; ret
0x000000000009875a : in eax, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000008d20a : in eax, 0x48 ; mov eax, edi ; ret
0x00000000000498c2 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000000f3e3e : in eax, 0x49 ; mov ecx, esi ; mov byte ptr [r9 - 1], 0 ; ret
0x000000000010b7e5 : in eax, 0x5d ; ret
0x00000000001acfa4 : in eax, 0x67 ; cmc ; jmp qword ptr [rdx]
0x0000000000174c79 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000019541c : in eax, 0x7d ; in al, dx ; jmp qword ptr [rdx]
0x00000000000a3a33 : in eax, 0xf ; je 0xa3a58 ; add rax, 2 ; ret
0x00000000000282c6 : in eax, dx ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x0000000000066587 : in eax, dx ; add dword ptr [rax + 1], ecx ; ret
0x00000000000a9742 : in eax, dx ; add dword ptr [rcx - 0x7d], ecx ; jmp 0xffffffffc28ddf54
0x000000000019599a : in eax, dx ; call qword ptr [rax]
0x0000000000178046 : in eax, dx ; call qword ptr [rcx]
0x00000000001957fa : in eax, dx ; call qword ptr [rdx]
0x000000000017406e : in eax, dx ; call rax
0x0000000000196bb2 : in eax, dx ; call rbx
0x000000000019727a : in eax, dx ; call rcx
0x0000000000189aba : in eax, dx ; call rsp
0x00000000001aca21 : in eax, dx ; cmc ; call qword ptr [rax]
0x00000000001ac9d9 : in eax, dx ; cmc ; call qword ptr [rdi]
0x000000000009765a : in eax, dx ; cmp r8d, ecx ; je 0x9764f ; ret
0x0000000000189b1a : in eax, dx ; dec dword ptr [rsi + rax*8 + 0x5cfa0000] ; in eax, dx ; call rsp
0x0000000000179cdc : in eax, dx ; enter -0xd, -0x33 ; ret 0xfff3
0x000000000017406a : in eax, dx ; inc dword ptr [rax] ; xor ch, ch ; call rax
0x0000000000178042 : in eax, dx ; inc dword ptr [rbp - 0x18] ; in eax, dx ; call qword ptr [rcx]
0x000000000017803e : in eax, dx ; inc dword ptr [rbp - 0x18] ; in eax, dx ; inc dword ptr [rbp - 0x18] ; in eax, dx ; call qword ptr [rcx]
0x0000000000195adc : in eax, dx ; insd dword ptr [rdi], dx ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000195194 : in eax, dx ; jbe 0x195186 ; jmp qword ptr [rdx]
0x000000000002f51d : in eax, dx ; jmp 0x2f527
0x0000000000174066 : in eax, dx ; jmp qword ptr [rax]
0x0000000000189a92 : in eax, dx ; jmp qword ptr [rbx + rax*8]
0x000000000019585e : in eax, dx ; jmp qword ptr [rdx]
0x000000000019a212 : in eax, dx ; jmp rax
0x000000000019720a : in eax, dx ; jmp rbx
0x000000000019573a : in eax, dx ; jmp rcx
0x0000000000196532 : in eax, dx ; jmp rsi
0x0000000000189a3a : in eax, dx ; jmp rsp
0x0000000000165e4f : in eax, dx ; jne 0x165e31 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b69c : in eax, dx ; jne 0x7b6b9 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007b8e9 : in eax, dx ; jne 0x7b921 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000d142a : in eax, dx ; jne 0xd1419 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001969f4 : in eax, dx ; js 0x1969e7 ; jmp qword ptr [rdx]
0x0000000000174062 : in eax, dx ; lcall ptr [rax + 0x32] ; in eax, dx ; jmp qword ptr [rax]
0x00000000000a1fc2 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000189a32 : in eax, dx ; ljmp ptr [rax + rax*8 + 0x4d340000] ; in eax, dx ; jmp rsp
0x00000000000a1989 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a199f : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a19c1 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a19df : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a19ff : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a1a25 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a1a41 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a1a61 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a1a81 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a1aa7 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a1ac9 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a1ae7 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a1b07 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a1b23 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a1b43 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a1b63 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a1b83 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a1ba9 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a1bf9 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a18cf : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a18ed : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a190d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a192f : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a194f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a196f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a1805 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a1817 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a182d : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a1845 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a185b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a186d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a188b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a1897 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a18ad : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a17f1 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000000a6025 : in eax, dx ; mov edx, eax ; jmp 0xa5fd2
0x00000000000a8865 : in eax, dx ; mov edx, eax ; jmp 0xa8812
0x00000000000aaf15 : in eax, dx ; mov edx, eax ; jmp 0xaaec2
0x000000000014558a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000097692 : in eax, dx ; mov rax, rdi ; ret
0x00000000000a8f5f : in eax, dx ; mov rbx, r15 ; setne dl ; jmp 0xa8f7d
0x000000000014d8da : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000d4f8d : in eax, dx ; movsxd rcx, dword ptr [rax + r13*4] ; add rax, rcx ; jmp rax
0x0000000000088fb8 : in eax, dx ; or al, 0 ; ret
0x000000000013d080 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000c1888 : in eax, dx ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000166252 : in eax, dx ; pop rbx ; ret
0x0000000000189ab2 : in eax, dx ; push qword ptr [rbx + rax*8] ; add byte ptr [rdi + rdx*2 - 0x13], dl ; call rsp
0x0000000000189a82 : in eax, dx ; push rsp ; ret 0
0x0000000000074c12 : in eax, dx ; ret
0x00000000000a2112 : in eax, dx ; sub rax, 1 ; ret
0x00000000001ae98c : in eax, dx ; xchg ebp, esi ; jmp qword ptr [rdx]
0x00000000001a268c : in eax, dx ; xchg ecx, esi ; jmp qword ptr [rdx]
0x00000000000875d2 : in eax, dx ; xor eax, eax ; ret
0x000000000008d125 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000019f045 : inc byte ptr [rax] ; add al, cl ; in eax, -0x11 ; jmp qword ptr [rbx]
0x000000000010e6cc : inc byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000011479e : inc byte ptr [rbx + 0x394101c0] ; ret 0xd975
0x00000000000bab31 : inc byte ptr [rcx] ; je 0xbab46 ; xor eax, eax ; ret
0x0000000000073b39 : inc byte ptr [rdx] ; je 0x73b4f ; mov dword ptr [rdi], edx ; ret
0x00000000000f3e44 : inc dword ptr [r8] ; ret
0x000000000018788b : inc dword ptr [rax + 0x10] ; cld ; call rax
0x00000000001878eb : inc dword ptr [rax + 0x10fffc0f] ; add bh, ah ; call rax
0x0000000000187a2b : inc dword ptr [rax + 0x10fffc38] ; sub edi, esp ; call rax
0x0000000000187af7 : inc dword ptr [rax + 0x16] ; cld ; call qword ptr [rax - 0x1f0003e9]
0x000000000018725f : inc dword ptr [rax + 0x19] ; sti ; call qword ptr [rax]
0x0000000000187b4b : inc dword ptr [rax + 0x1d] ; cld ; call qword ptr [rax - 0x1f0003e2]
0x00000000001879d3 : inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x0000000000187a77 : inc dword ptr [rax + 0x2e] ; cld ; jmp qword ptr [rax]
0x00000000001872b7 : inc dword ptr [rax + 0x31] ; sti ; jmp rax
0x0000000000187a5f : inc dword ptr [rax + 0x32] ; cld ; call qword ptr [rax]
0x00000000001872d7 : inc dword ptr [rax + 0x3e] ; sti ; jmp rax
0x00000000001876ef : inc dword ptr [rax + 0x40fffbda] ; fdiv st(3), st(0) ; jmp qword ptr [rax]
0x0000000000187faf : inc dword ptr [rax + 0x54] ; cld ; jmp rax
0x0000000000187d9f : inc dword ptr [rax + 0x60] ; cld ; call rax
0x0000000000187b87 : inc dword ptr [rax + 0x63] ; cld ; call rax
0x00000000001672c3 : inc dword ptr [rax + 0x6c] ; in al, dx ; call qword ptr [rax]
0x000000000018733f : inc dword ptr [rax + 0x71] ; sti ; call qword ptr [rax - 0x1f00048e]
0x00000000001790c7 : inc dword ptr [rax + 0x7b] ; int1 ; call qword ptr [rax - 0x1f000e83]
0x0000000000187907 : inc dword ptr [rax + 0xd] ; cld ; inc dword ptr [rax + 0xf] ; cld ; call rax
0x0000000000187887 : inc dword ptr [rax + 0xe] ; cld ; inc dword ptr [rax + 0x10] ; cld ; call rax
0x000000000018790b : inc dword ptr [rax + 0xf] ; cld ; call rax
0x00000000001877f3 : inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x000000000018e3eb : inc dword ptr [rax + rbp*4 - 0x303bfffe] ; stc ; call rsp
0x000000000018f043 : inc dword ptr [rax + rsi*2] ; add byte ptr [rax + rdx*8], al ; std ; jmp rsp
0x0000000000060173 : inc dword ptr [rax - 0x10b943] ; jmp qword ptr [rax]
0x00000000001876db : inc dword ptr [rax - 0x20] ; sti ; jmp qword ptr [rax]
0x0000000000187757 : inc dword ptr [rax - 0x23] ; sti ; jmp qword ptr [rax]
0x00000000001876f3 : inc dword ptr [rax - 0x24] ; sti ; jmp qword ptr [rax]
0x000000000018770f : inc dword ptr [rax - 0x26] ; sti ; inc dword ptr [rax] ; fdiv st(3), st(0) ; jmp rax
0x000000000018779f : inc dword ptr [rax - 0x2d] ; sti ; call qword ptr [rax - 0x1f00042c]
0x0000000000187b5b : inc dword ptr [rax - 0x2f0003de] ; and edi, esp ; jmp qword ptr [rax]
0x0000000000187b07 : inc dword ptr [rax - 0x2f0003e5] ; sbb al, -4 ; jmp qword ptr [rax]
0x000000000018798f : inc dword ptr [rax - 0x2f00040a] ; idiv ebx ; jmp qword ptr [rax]
0x000000000018793b : inc dword ptr [rax - 0x2f000411] ; lock sti ; jmp qword ptr [rax]
0x00000000001877c3 : inc dword ptr [rax - 0x2f000436] ; retf ; sti ; jmp qword ptr [rax]
0x000000000018734f : inc dword ptr [rax - 0x2f00048a] ; ja 0x18735a ; jmp qword ptr [rax]
0x00000000001790d7 : inc dword ptr [rax - 0x2f000e7c] ; xchg cl, dh ; jmp qword ptr [rax]
0x00000000001877b3 : inc dword ptr [rax - 0x3b] ; sti ; call qword ptr [rax - 0x1f00043a]
0x0000000000179393 : inc dword ptr [rax - 0x4f000dae] ; push rdx ; jmp rax
0x000000000004a57d : inc dword ptr [rax - 0x4f943] ; jmp qword ptr [rax]
0x000000000004b0c6 : inc dword ptr [rax - 0x4fb43] ; jmp qword ptr [rax]
0x0000000000188783 : inc dword ptr [rax - 0x51] ; cld ; call rax
0x00000000001885ab : inc dword ptr [rax - 0x55] ; cld ; call rsi
0x0000000000188073 : inc dword ptr [rax - 0x75] ; cld ; call rax
0x000000000018828b : inc dword ptr [rax - 0x78] ; cld ; call rax
0x0000000000187a27 : inc dword ptr [rax - 0x7f0003ca] ; cmp ah, bh ; call qword ptr [rax]
0x000000000018797f : inc dword ptr [rax - 0xf] ; sti ; call qword ptr [rax - 0x1f00040e]
0x0000000000061254 : inc dword ptr [rax] ; add byte ptr [rax], al ; add al, ch ; ret 0x439
0x000000000004b6da : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b44
0x00000000000626a3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000ce53a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000164f9d : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001621d7 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000065c26 : inc dword ptr [rax] ; add dword ptr [rax], eax ; add cl, ch ; ret
0x000000000018727f : inc dword ptr [rax] ; and ebx, edi ; push rax ; and ebx, edi ; jmp rax
0x000000000017911f : inc dword ptr [rax] ; cdq ; int1 ; jmp qword ptr [rax]
0x0000000000187b77 : inc dword ptr [rax] ; cld ; call qword ptr [rax + 0x20fffc64]
0x0000000000187a97 : inc dword ptr [rax] ; cld ; jmp rax
0x0000000000187713 : inc dword ptr [rax] ; fdiv st(3), st(0) ; jmp rax
0x0000000000179643 : inc dword ptr [rax] ; insb byte ptr [rdi], dx ; call qword ptr [rax]
0x00000000001882e3 : inc dword ptr [rax] ; jl 0x1882eb ; push qword ptr [rax + 0x7b] ; cld ; jmp rax
0x00000000001884e7 : inc dword ptr [rax] ; jnp 0x1884ef ; push qword ptr [rax + 0x7a] ; cld ; call qword ptr [rax]
0x000000000018859b : inc dword ptr [rax] ; lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcac]
0x00000000001876fb : inc dword ptr [rax] ; loopne 0x1876fe ; jmp rax
0x000000000018827b : inc dword ptr [rax] ; mov bh, ah ; call qword ptr [rax + 0x20fffc89]
0x0000000000188773 : inc dword ptr [rax] ; mov cl, -4 ; call qword ptr [rax + 0x20fffcb0]
0x00000000001874b3 : inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rax
0x000000000010d207 : inc dword ptr [rax] ; or eax, esi ; bswap eax ; ret
0x00000000001877fb : inc dword ptr [rax] ; or esp, edi ; jmp rax
0x0000000000179093 : inc dword ptr [rax] ; pop rbp ; int1 ; call qword ptr [rax]
0x00000000001795cf : inc dword ptr [rax] ; push -0xe ; jmp qword ptr [rax]
0x000000000017957f : inc dword ptr [rax] ; push 0x6810fff2 ; jmp qword ptr [rax]
0x00000000001793bb : inc dword ptr [rax] ; push rbx ; call qword ptr [rax]
0x0000000000178e77 : inc dword ptr [rax] ; push rdx ; out dx, eax ; call qword ptr [rax]
0x00000000001792ab : inc dword ptr [rax] ; repne ; call qword ptr [rax]
0x000000000017930b : inc dword ptr [rax] ; repne ; jmp qword ptr [rax]
0x00000000000f3e45 : inc dword ptr [rax] ; ret
0x00000000001880a3 : inc dword ptr [rax] ; xchg ah, bh ; call qword ptr [rax + 0x20fffc85]
0x00000000001791ef : inc dword ptr [rax] ; xchg eax, ebp ; cld ; push qword ptr [rax - 0x6a] ; cld ; jmp rax
0x0000000000187a7f : inc dword ptr [rax] ; xor bh, ah ; call rax
0x000000000017406b : inc dword ptr [rax] ; xor ch, ch ; call rax
0x00000000001879db : inc dword ptr [rax] ; xor esp, edi ; jmp rax
0x00000000000bcda2 : inc dword ptr [rbp + 0x31] ; in al, -0x17 ; ret 0xfffd
0x00000000000d05ed : inc dword ptr [rbp + 0x39ee74f1] ; ret 0x8e0f
0x00000000000af036 : inc dword ptr [rbp + 0x79c789c0] ; ret
0x0000000000118984 : inc dword ptr [rbp + 1] ; ret 0x3941
0x0000000000188227 : inc dword ptr [rbp + rax*4 - 4] ; call rsp
0x000000000018e043 : inc dword ptr [rbp + rcx*4 + 0x65440002] ; stc ; call rsp
0x0000000000178043 : inc dword ptr [rbp - 0x18] ; in eax, dx ; call qword ptr [rcx]
0x000000000017803f : inc dword ptr [rbp - 0x18] ; in eax, dx ; inc dword ptr [rbp - 0x18] ; in eax, dx ; call qword ptr [rcx]
0x0000000000048716 : inc dword ptr [rbp - 0x3db6f02e] ; pop rbx ; ret
0x0000000000109ec7 : inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x00000000000960dd : inc dword ptr [rbp - 0x7b] ; rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0x5474
0x00000000000f484f : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000000f489a : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x0000000000032c76 : inc dword ptr [rbx + 0xfff0878] ; xchg eax, ebp ; ret 0x9be9
0x00000000000e53a5 : inc dword ptr [rbx + rcx*4 + 0x65] ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000017a74f : inc dword ptr [rbx + rcx*8 - 0x34db000c] ; hlt ; call rcx
0x000000000005fe5a : inc dword ptr [rbx - 0x10ff43] ; jmp qword ptr [rax]
0x00000000000c542c : inc dword ptr [rbx - 0x1af73] ; jmp qword ptr [rax]
0x00000000000c5222 : inc dword ptr [rbx - 0x1c773] ; jmp qword ptr [rax]
0x0000000000080dd6 : inc dword ptr [rbx - 0x73] ; sub eax, 0x448d48fe ; ret
0x0000000000122f6d : inc dword ptr [rbx - 0x76b79c03] ; ret
0x000000000006d9f7 : inc dword ptr [rbx - 0x7bf09608] ; ret 0xfffe
0x000000000011519f : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x000000000003cfa9 : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, edx ; ret
0x00000000000a272a : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a262f : inc dword ptr [rbx] ; pop rbx ; ret
0x00000000000613d4 : inc dword ptr [rcx + 0x29] ; ret 0x3945
0x000000000004b76c : inc dword ptr [rcx + 0x39] ; ret
0x000000000004db29 : inc dword ptr [rcx + 0x39] ; ret 0x870f
0x000000000007455b : inc dword ptr [rcx + 0x5c] ; ret
0x00000000001184b3 : inc dword ptr [rcx + 0x5e] ; ret
0x00000000000769f9 : inc dword ptr [rcx + 0x5f] ; ret
0x00000000000f41dc : inc dword ptr [rcx + 0x800008] ; add byte ptr [rax - 0x77], cl ; ret 0x5e9
0x000000000007a773 : inc dword ptr [rcx + 0xf] ; les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000045e43 : inc dword ptr [rcx + 0xf] ; mov dh, 0x7d ; add cl, ch ; ret 0xffe1
0x00000000000cdda2 : inc dword ptr [rcx + 0xf] ; ret 0x8944
0x000000000018bef3 : inc dword ptr [rcx + rax*8 + 0x3a840001] ; cmc ; call rsp
0x00000000000c974e : inc dword ptr [rcx - 0x1e] ; add byte ptr [rax + 0x63], cl ; ret 0xb60f
0x000000000004ff17 : inc dword ptr [rcx - 0x77] ; popfq ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000c7069 : inc dword ptr [rcx - 0x77] ; ret
0x000000000002a865 : inc dword ptr [rcx - 0x78] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x0000000000114d11 : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000cb37a : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001662f9 : inc dword ptr [rcx] ; ja 0x166304 ; ret
0x00000000001b7599 : inc dword ptr [rcx] ; or ebp, edx ; add dword ptr [rbx], eax ; ret
0x0000000000020bf4 : inc dword ptr [rdi + 4] ; ret
0x000000000018a3bb : inc dword ptr [rdi + rax - 0x13dbffff] ; out dx, al ; call rsp
0x000000000018e503 : inc dword ptr [rdi + rbp*4 - 0x33bfffe] ; stc ; call rsp
0x0000000000187c33 : inc dword ptr [rdx + 0x65] ; cld ; call rdx
0x000000000018bc0b : inc dword ptr [rdx + rbp*4 + 0x13740001] ; hlt ; call rsp
0x000000000017a7a3 : inc dword ptr [rdx + rcx*8 - 0x34db000c] ; hlt ; call rcx
0x0000000000188657 : inc dword ptr [rdx - 0x53] ; cld ; call rdx
0x000000000018815f : inc dword ptr [rdx - 0x7a] ; cld ; call rdx
0x000000000018814f : inc dword ptr [rdx] ; mov ah, bh ; call qword ptr [rdx + 0x22fffc87]
0x0000000000187e63 : inc dword ptr [rdx] ; push rsi ; cld ; push qword ptr [rdx + 0x55] ; cld ; jmp rdx
0x0000000000188647 : inc dword ptr [rdx] ; scasd eax, dword ptr [rdi] ; cld ; call qword ptr [rdx + 0x22fffcae]
0x000000000013ed0d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000187bcf : inc dword ptr [rsi + 0x62] ; cld ; call rsi
0x00000000001a20fe : inc dword ptr [rsi + 0xd1cfff1] ; sbb al, -0x7b ; int1 ; jmp qword ptr [rdx]
0x000000000018eac3 : inc dword ptr [rsi + rdx*8 - 0x664bfffe] ; cli ; jmp rsp
0x00000000001885b3 : inc dword ptr [rsi - 0x4f] ; cld ; call rsi
0x00000000001880bb : inc dword ptr [rsi - 0x76] ; cld ; call rsi
0x0000000000187bbf : inc dword ptr [rsi] ; cld ; call qword ptr [rsi + 0x26fffc63]
0x00000000001885e3 : inc dword ptr [rsi] ; lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rsi + 0x26fffcab]
0x000000000018744f : inc dword ptr [rsi] ; test eax, 0xa986fffd ; std ; call qword ptr [rsi]
0x000000000018b653 : inc dword ptr [rsp + rax*4 + 1] ; add ah, al ; ret
0x000000000018871f : inc dword ptr [rsp + rbp*4 - 4] ; call rsp
0x0000000000187cfb : inc dword ptr [rsp - 4] ; call rsp
0x0000000000187b17 : inc eax ; and ah, bh ; call qword ptr [rax]
0x000000000018794b : inc eax ; hlt ; sti ; call qword ptr [rax]
0x0000000000179633 : inc eax ; imul esi, edx, -1 ; shr byte ptr [rbx - 0xe], 1 ; jmp rax
0x00000000001877d3 : inc eax ; iretd ; sti ; call qword ptr [rax]
0x000000000017952b : inc eax ; jmp rax
0x000000000018735f : inc eax ; jnp 0x187362 ; call qword ptr [rax]
0x0000000000178f6b : inc eax ; mov dl, -0x10 ; jmp qword ptr [rax]
0x000000000018751f : inc eax ; mov eax, 0xbb11fffd ; std ; call qword ptr [rcx]
0x00000000001878cb : inc eax ; paddb mm7, mm7 ; push rax ; add bh, ah ; call qword ptr [rax]
0x00000000001795e7 : inc eax ; push -0xe ; jmp rax
0x000000000017956f : inc eax ; push rax ; jmp qword ptr [eax]
0x000000000017945f : inc eax ; push rbp ; call rax
0x0000000000179383 : inc eax ; push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x00000000001793ab : inc eax ; push rdx ; call rax
0x0000000000179083 : inc eax ; push rsp ; int1 ; call rax
0x00000000001792db : inc eax ; repne ; call rax
0x0000000000179303 : inc eax ; repne ; jmp rax
0x0000000000036699 : inc eax ; shr eax, 0x1f ; ret
0x000000000018799f : inc eax ; sti ; sti ; call qword ptr [rax]
0x000000000017abb9 : inc ebx ; add dh, bh ; jmp rdi
0x00000000000716cc : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000164a89 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000017a437 : inc edi ; cwde ; hlt ; call rcx
0x00000000000207a1 : inc edx ; jmp 0x207aa
0x00000000000f3231 : inc esi ; jmp qword ptr [r8]
0x00000000001894f3 : inc esp ; lahf ; add byte ptr [rax], al ; jae 0x18953b ; jmp 0x189503
0x000000000018ec8b : inc esp ; loope 0x18ec99 ; add byte ptr [rsp + rax*8 - 6], dl ; jmp rsp
0x0000000000178853 : inc esp ; out -1, eax ; jmp qword ptr [rcx]
0x000000000018bf23 : inc esp ; ret
0x000000000018e7d3 : inc esp ; ret 2
0x000000000017a763 : inc esp ; retf -0xc ; ror edx, 1 ; hlt ; call rcx
0x000000000002a864 : inc qword ptr [rcx - 0x78] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x00000000000207a0 : inc rdx ; jmp 0x207ab
0x000000000007d494 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000018dc2d : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; hlt ; mov al, -8 ; jmp rsp
0x00000000001b5dfd : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; rol byte ptr [rsi], 1 ; sti ; jmp qword ptr [rdx]
0x0000000000195e3d : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; lock xchg eax, ecx ; in eax, dx ; call qword ptr [rax]
0x0000000000195dc5 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; test al, -0x6f ; in eax, dx ; jmp qword ptr [rax]
0x0000000000139c94 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001a72fc : insb byte ptr [rdi], dx ; add dword ptr [rcx], 0xf4ca5000 ; jmp qword ptr [rcx]
0x00000000001a2ffc : insb byte ptr [rdi], dx ; add dword ptr ds:[rax], eax ; sti ; int1 ; jmp qword ptr [rcx]
0x00000000001b8b24 : insb byte ptr [rdi], dx ; add eax, 0x3ee0000 ; add byte ptr [rax], al ; ret 5
0x000000000003671c : insb byte ptr [rdi], dx ; and al, 0xffffffffffffffe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000000367ba : insb byte ptr [rdi], dx ; and al, 0xffffffffffffffe8 ; fstp xword ptr [rdi] ; ret
0x000000000003679a : insb byte ptr [rdi], dx ; and al, 0xffffffffffffffe8 ; ret
0x000000000003696a : insb byte ptr [rdi], dx ; and al, 0xfffffffffffffffe ; ret
0x00000000000367e9 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x000000000003a1df : insb byte ptr [rdi], dx ; and al, 8 ; mov rsi, rbp ; call r12
0x00000000000366ba : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000179645 : insb byte ptr [rdi], dx ; call qword ptr [rax]
0x00000000001ad63d : insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rdx]
0x00000000001a5ef1 : insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001672c5 : insb byte ptr [rdi], dx ; in al, dx ; call qword ptr [rax]
0x00000000001672c1 : insb byte ptr [rdi], dx ; in al, dx ; inc dword ptr [rax + 0x6c] ; in al, dx ; call qword ptr [rax]
0x00000000001672c9 : insb byte ptr [rdi], dx ; in al, dx ; jmp rax
0x00000000001b5dfc : insb byte ptr [rdi], dx ; insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; rol byte ptr [rsi], 1 ; sti ; jmp qword ptr [rdx]
0x000000000017789e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000001aaabc : insb byte ptr [rdi], dx ; int1 ; hlt ; jmp qword ptr [rdx]
0x00000000001a67fc : insb byte ptr [rdi], dx ; jbe 0x1a6807 ; add byte ptr [rax - 0x56], ah ; hlt ; call qword ptr [rbx]
0x0000000000179649 : insb byte ptr [rdi], dx ; jmp qword ptr [rax]
0x00000000000d6ed4 : insb byte ptr [rdi], dx ; mov eax, 0x39c77f04 ; ret 0xc189
0x00000000000d6ebc : insb byte ptr [rdi], dx ; mov eax, 0x39df7f04 ; ret 0xc189
0x000000000012486c : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x000000000019cd31 : insb byte ptr [rdi], dx ; out dx, al ; call qword ptr [rsi]
0x0000000000178121 : insb byte ptr [rdi], dx ; out dx, al ; call rax
0x00000000001b4cfc : insb byte ptr [rdi], dx ; pop rbx ; add al, byte ptr [rax] ; push rax ; jg 0x1b4d01 ; call qword ptr [rdx]
0x00000000001a8efc : insb byte ptr [rdi], dx ; popfq ; add dword ptr [rax], eax ; lock xor dh, ch ; jmp qword ptr [rcx]
0x00000000001ab3fc : insb byte ptr [rdi], dx ; ret 1
0x000000000018e7bc : insb byte ptr [rdi], dx ; ret 2
0x00000000000a5ff2 : insb byte ptr [rdi], dx ; ror byte ptr [rbp - 0x7bf0febe], 1 ; ret 0
0x00000000001a86fc : insb byte ptr [rdi], dx ; xchg eax, ebp ; add dword ptr [rax], eax ; shl byte ptr [rdi], -0xb ; jmp qword ptr [rcx]
0x00000000001a87fc : insb byte ptr [rdi], dx ; xchg eax, esi ; add dword ptr [rax], eax ; mov al, 0x28 ; cmc ; jmp qword ptr [rcx]
0x00000000001301f0 : insb byte ptr [rdi], dx ; xor eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013c900 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001b5ec5 : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; cmp byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x000000000013d800 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000094195 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001a5f35 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000000327ad : insd dword ptr [rdi], dx ; add eax, 0xc6834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000018bf21 : insd dword ptr [rdi], dx ; cmc ; inc esp ; ret
0x0000000000195add : insd dword ptr [rdi], dx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001aa154 : insd dword ptr [rdi], dx ; out -0xc, eax ; jmp qword ptr [rdx]
0x000000000017789f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000001bf0 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x0000000000175c4d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x0000000000177b00 : insd dword ptr [rdi], dx ; sar bh, 1 ; jmp qword ptr [rdi]
0x00000000000f78bf : insd dword ptr [rdi], dx ; shr al, 0x5a ; sar edx, cl ; dec dword ptr [rax + 0x39] ; ret
0x00000000001b0fd4 : insd dword ptr [rdi], dx ; sub esi, esi ; jmp qword ptr [rdx]
0x0000000000176b5f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000000f9f62 : int 0x31
0x0000000000050b4f : int 0x80
0x0000000000083ebf : int 0xb0
0x0000000000179c48 : int 0xc2
0x0000000000048ca2 : int 0xc3
0x0000000000112bef : int 0xd6
0x00000000000bcdbf : int 0xdd
0x0000000000178ad1 : int 0xee
0x00000000000fd08c : int 0xf
0x00000000000b4d51 : int 0xfa
0x0000000000036aad : int 0xff
0x000000000018e955 : int 2
0x000000000000385f : int 3
0x000000000004f1be : int1 ; add r8d, eax ; mov eax, r8d ; ret
0x000000000008cf7e : int1 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001790ca : int1 ; call qword ptr [rax - 0x1f000e83]
0x0000000000179096 : int1 ; call qword ptr [rax]
0x00000000001a172a : int1 ; call qword ptr [rbx]
0x00000000001a0962 : int1 ; call qword ptr [rcx]
0x00000000001a0fb2 : int1 ; call qword ptr [rdx]
0x00000000001a1712 : int1 ; call qword ptr [rsi]
0x0000000000179086 : int1 ; call rax
0x00000000001a0f62 : int1 ; call rsi
0x000000000018b1e2 : int1 ; call rsp
0x0000000000132407 : int1 ; dec dword ptr [rax + 0x29] ; ret
0x000000000010b06b : int1 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000106226 : int1 ; dec dword ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x0000000000195684 : int1 ; fsub st(4), st(0) ; jmp qword ptr [rdx]
0x00000000001aaabd : int1 ; hlt ; jmp qword ptr [rdx]
0x00000000001790c6 : int1 ; inc dword ptr [rax + 0x7b] ; int1 ; call qword ptr [rax - 0x1f000e83]
0x00000000001790d6 : int1 ; inc dword ptr [rax - 0x2f000e7c] ; xchg cl, dh ; jmp qword ptr [rax]
0x000000000017911e : int1 ; inc dword ptr [rax] ; cdq ; int1 ; jmp qword ptr [rax]
0x0000000000179092 : int1 ; inc dword ptr [rax] ; pop rbp ; int1 ; call qword ptr [rax]
0x0000000000179082 : int1 ; inc eax ; push rsp ; int1 ; call rax
0x0000000000097631 : int1 ; je 0x97630 ; cmp ecx, edx ; je 0x97630 ; ret
0x000000000017909a : int1 ; jmp qword ptr [rax]
0x00000000001a1dba : int1 ; jmp qword ptr [rbx]
0x00000000001a08e2 : int1 ; jmp qword ptr [rcx]
0x00000000001a140e : int1 ; jmp qword ptr [rdx]
0x000000000017908a : int1 ; jmp rax
0x00000000000a26d5 : int1 ; jmp rcx
0x00000000001a2a52 : int1 ; jmp rsi
0x000000000018b1ba : int1 ; jmp rsp
0x000000000007c97b : int1 ; jne 0x7c976 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000f3e41 : int1 ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000003a4b : int1 ; mov dl, 0x1e ; ret
0x0000000000085326 : int1 ; mov eax, 0x16 ; je 0x85338 ; ret
0x000000000014d2cb : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000145d4f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000012282a : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000001085ae : int1 ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000a48dc : int1 ; mov rdi, qword ptr [r13] ; call r12
0x0000000000164563 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000007e4eb : int1 ; or al, 0x34 ; add byte ptr [rax + 0x39], cl ; ret 0xb76
0x00000000000d1784 : int1 ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000000a2718 : int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000046ffe : int1 ; pop rbx ; ret
0x0000000000108c82 : int1 ; pop rdx ; pop r10 ; ret
0x000000000017907e : int1 ; push qword ptr [rax - 0x3f000eae] ; push rsp ; int1 ; call rax
0x000000000018b1da : int1 ; push qword ptr [rsi + 1] ; add ah, al ; xchg eax, esi ; int1 ; call rsp
0x000000000017908e : int1 ; push rax ; pop rdx ; int1 ; inc dword ptr [rax] ; pop rbp ; int1 ; call qword ptr [rax]
0x00000000000025eb : int1 ; ret
0x0000000000177276 : int1 ; ret 0x5803
0x0000000000187981 : int1 ; sti ; call qword ptr [rax - 0x1f00040e]
0x0000000000164567 : int1 ; sub eax, edx ; ret
0x0000000000097f48 : int1 ; test r8b, r8b ; jne 0x97ef4 ; mov rax, rdi ; ret
0x0000000000097f0e : int1 ; xor eax, eax ; ret
0x0000000000189c25 : iretd ; add byte ptr [rax], al ; lock pop rdi ; out dx, al ; call rsp
0x00000000000873a7 : iretd ; call rcx
0x00000000001a1a41 : iretd ; int1 ; call rsi
0x0000000000198fe6 : iretd ; mov edx, 0xd1cffed ; cmpsb byte ptr [rsi], byte ptr [rdi] ; movsd dword ptr [rdi], dword ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000814ea : iretd ; mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x000000000018ac49 : iretd ; out dx, eax ; call rsp
0x000000000018e3f1 : iretd ; stc ; call rsp
0x00000000001877d5 : iretd ; sti ; call qword ptr [rax]
0x0000000000109430 : ja 0x109437 ; ret
0x00000000001094ad : ja 0x1094cd ; ret
0x000000000010ab12 : ja 0x10ab19 ; ret
0x000000000010abb2 : ja 0x10abb9 ; ret
0x000000000010b717 : ja 0x10b72a ; mov rax, rdi ; sar rax, 6 ; ret
0x00000000001188f3 : ja 0x1188f8 ; ret
0x0000000000118b50 : ja 0x118b3b ; mov eax, 0xffffffff ; ret
0x000000000011f8c1 : ja 0x11f914 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000012284d : ja 0x12283e ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000012ef02 : ja 0x12ef23 ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x000000000012ef27 : ja 0x12ef43 ; ret
0x000000000012f08f : ja 0x12f0b2 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000132405 : ja 0x132481 ; int1 ; dec dword ptr [rax + 0x29] ; ret
0x00000000001662fb : ja 0x166302 ; ret
0x00000000001772e4 : ja 0x17726b ; ret 0x48f
0x0000000000187355 : ja 0x187354 ; jmp qword ptr [rax]
0x00000000001b68f5 : ja 0x1b68ff ; add al, bl ; fcomi st(7) ; jmp qword ptr [rcx]
0x00000000001b68f4 : ja 0x1b6900 ; add al, bl ; fcomi st(7) ; jmp qword ptr [rcx]
0x000000000002f81d : ja 0x2f838 ; lea rax, qword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x0000000000036bbf : ja 0x36bdd ; ret
0x0000000000036e86 : ja 0x36e8d ; ret
0x0000000000036ee2 : ja 0x36ee9 ; ret
0x0000000000036f1c : ja 0x36f21 ; ret
0x0000000000036fa2 : ja 0x36fa9 ; ret
0x0000000000038b0e : ja 0x38b60 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000004f1a7 : ja 0x4f18d ; mov eax, r8d ; ret
0x000000000005e156 : ja 0x5e15d ; ret
0x000000000006f282 : ja 0x6f2e6 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000075f36 : ja 0x75f43 ; ret
0x000000000008d078 : ja 0x8d083 ; ret
0x0000000000092208 : ja 0x92202 ; ret 0x7401
0x0000000000094c3d : ja 0x94c1e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000098a8c : ja 0x98aa5 ; mov rax, rdi ; ret
0x000000000009d997 : ja 0x9d99d ; ret
0x000000000009d9b3 : ja 0x9d9bd ; mov dword ptr [rdi], ecx ; ret
0x000000000009d9f4 : ja 0x9da03 ; mov qword ptr [rdi], rcx ; ret
0x000000000009da79 : ja 0x9da8d ; ret
0x000000000009dacf : ja 0x9dae7 ; ret
0x000000000009db51 : ja 0x9db6d ; ret
0x000000000009ef97 : ja 0x9efa1 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009efb3 : ja 0x9efc1 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009f004 : ja 0x9f017 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009f0e9 : ja 0x9f101 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009f15f : ja 0x9f17b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009f1e1 : ja 0x9f201 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a0a77 : ja 0xa0a7d ; ret
0x00000000000a0a93 : ja 0xa0a9d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a0ad4 : ja 0xa0ae3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a0b59 : ja 0xa0b6d ; ret
0x00000000000a0baf : ja 0xa0bc7 ; ret
0x00000000000a0c31 : ja 0xa0c4d ; ret
0x00000000000a1547 : ja 0xa154d ; ret
0x00000000000a1563 : ja 0xa156d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a15a4 : ja 0xa15b3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a1629 : ja 0xa163d ; ret
0x00000000000a167f : ja 0xa1697 ; ret
0x00000000000a1701 : ja 0xa171d ; ret
0x00000000000a2a89 : ja 0xa2aa9 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000a37a5 : ja 0xa3778 ; or eax, dword ptr [rax] ; ret
0x00000000000a42fa : ja 0xa430a ; cmove rax, rcx ; ret
0x00000000000beb07 : ja 0xbeb0c ; ret
0x00000000000c1538 : ja 0xc153d ; ret
0x00000000000c15d2 : ja 0xc15d7 ; ret
0x00000000000c16c1 : ja 0xc16c6 ; ret
0x00000000000c1dbd : ja 0xc1dc4 ; ret
0x00000000000c2969 : ja 0xc296e ; ret
0x00000000000c29c9 : ja 0xc29ce ; ret
0x00000000000c2c1d : ja 0xc2c22 ; ret
0x00000000000c2c8d : ja 0xc2c92 ; ret
0x00000000000cc2de : ja 0xcc274 ; pop rbx ; pop rbp ; ret
0x00000000000cc2dd : ja 0xcc275 ; pop rbx ; pop rbp ; ret
0x00000000000cc312 : ja 0xcc303 ; ret
0x00000000000e50c1 : ja 0xe50cb ; xor eax, eax ; ret
0x00000000000ebceb : ja 0xebd07 ; ret
0x00000000000ebd3a : ja 0xebd57 ; ret
0x00000000000ebd8b : ja 0xebda7 ; ret
0x00000000000ebde3 : ja 0xebe07 ; ret
0x00000000000ebe47 : ja 0xebe67 ; ret
0x00000000000ebea0 : ja 0xebebf ; ret
0x00000000000ec09f : ja 0xec0a6 ; ret
0x00000000000ec132 : ja 0xec139 ; ret
0x00000000000ec206 : ja 0xec20d ; ret
0x00000000000ec24f : ja 0xec28d ; add rsp, 0x70 ; pop rbx ; ret
0x00000000000ec72f : ja 0xec7a5 ; ret
0x00000000000ed4e8 : ja 0xed4ef ; ret
0x00000000000edad9 : ja 0xedae0 ; ret
0x00000000000edb30 : ja 0xedb37 ; ret
0x00000000000edb93 : ja 0xedb9c ; cdqe ; ret
0x00000000000edbf3 : ja 0xedbfa ; ret
0x00000000000edcdf : ja 0xedd4d ; add rsp, 0x38 ; ret
0x00000000000edfa8 : ja 0xedfaf ; ret
0x00000000000edffc : ja 0xee003 ; ret
0x00000000000f0943 : ja 0xf0958 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000f11d0 : ja 0xf11d5 ; ret
0x00000000000f16e6 : ja 0xf16eb ; ret
0x00000000000f1d76 : ja 0xf1d83 ; ret
0x00000000000f1ebd : ja 0xf1ec2 ; ret
0x00000000000f1f5d : ja 0xf1f62 ; ret
0x00000000000f24db : ja 0xf24e0 ; ret
0x00000000000f254b : ja 0xf2550 ; ret
0x00000000000f25c8 : ja 0xf25cd ; ret
0x00000000000f2668 : ja 0xf266d ; ret
0x00000000000f2961 : ja 0xf29da ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000f2b9c : ja 0xf2ba3 ; ret
0x00000000000f3b7d : ja 0xf3b84 ; ret
0x00000000000f3c09 : ja 0xf3c2f ; ret
0x00000000000f3ca1 : ja 0xf3cc7 ; ret
0x00000000000f3cf5 : ja 0xf3cfc ; ret
0x00000000000f3d99 : ja 0xf3da5 ; ret
0x00000000000f5bf5 : ja 0xf5b97 ; dec dword ptr [rcx - 0x75] ; jge 0xf5c05 ; call rbx
0x00000000000f8497 : ja 0xf84b7 ; ret
0x00000000000faf33 : ja 0xfaf3c ; pop rbx ; pop rbp ; ret
0x00000000000fb196 : ja 0xfb19b ; ret
0x00000000000fb2ee : ja 0xfb348 ; cmp edx, -1 ; je 0xfb308 ; ret
0x00000000000fbed3 : ja 0xfbed8 ; ret
0x00000000000fc043 : ja 0xfc048 ; ret
0x00000000000fc60d : ja 0xfc612 ; ret
0x00000000000fc6af : ja 0xfc6b4 ; ret
0x00000000000fc75f : ja 0xfc764 ; ret
0x00000000000fc75f : ja 0xfc768 ; ret
0x00000000000022cf : ja 0xffffffffd6104b5b ; ret
0x00000000001339d0 : jae 0x1339d5 ; ret
0x0000000000133a20 : jae 0x133a25 ; ret
0x0000000000136b74 : jae 0x136b57 ; mov eax, 1 ; ret
0x00000000001660be : jae 0x1660cd ; call qword ptr [rbx]
0x00000000001660be : jae 0x1660d1 ; call qword ptr [rbx]
0x0000000000166b97 : jae 0x166bb4 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000001758a2 : jae 0x175884 ; jo 0x175920 ; mov ebp, 0xfb67d10d ; ret
0x000000000017673e : jae 0x176719 ; push rsi ; pop rdx ; je 0x17670e ; ret 0xacfc
0x000000000017af40 : jae 0x17aee9 ; cmc ; jmp rax
0x000000000017af3c : jae 0x17aee9 ; cmc ; push qword ptr [rbx - 0x5c] ; cmc ; jmp rax
0x00000000001894f8 : jae 0x189536 ; jmp 0x1894fe
0x000000000018dd4d : jae 0x18dd57 ; add ah, bl ; clc ; call rsp
0x00000000001929d6 : jae 0x19296a ; ljmp 0x310d1cff, -0x1578 ; jmp qword ptr [rdx]
0x0000000000194a2c : jae 0x194a18 ; jmp 0x194a32
0x0000000000195f8c : jae 0x196001 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019662d : jae 0x19661e ; jmp qword ptr [rdx]
0x0000000000197424 : jae 0x1974a8 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a140d : jae 0x1a1402 ; jmp qword ptr [rdx]
0x00000000001a1455 : jae 0x1a144a ; jmp qword ptr [rdx]
0x00000000001a14dd : jae 0x1a14d2 ; jmp qword ptr [rdx]
0x00000000001a1525 : jae 0x1a151a ; jmp qword ptr [rdx]
0x00000000001a15bd : jae 0x1a15b2 ; jmp qword ptr [rdx]
0x00000000001a1605 : jae 0x1a15fa ; jmp qword ptr [rdx]
0x00000000001a166d : jae 0x1a1662 ; jmp qword ptr [rdx]
0x00000000001a166c : jae 0x1a1663 ; jmp qword ptr [rdx]
0x00000000001a16b5 : jae 0x1a16aa ; jmp qword ptr [rdx]
0x00000000001a6061 : jae 0x1a6059 ; jmp qword ptr [rcx]
0x00000000001a6079 : jae 0x1a6071 ; jmp qword ptr [rcx]
0x00000000001aa6bc : jae 0x1aa6ac ; hlt ; jmp qword ptr [rdx]
0x00000000001adb54 : jae 0x1adbd1 ; cmc ; jmp qword ptr [rdx]
0x0000000000036ead : jae 0x36eb2 ; ret
0x000000000003746d : jae 0x37472 ; ret
0x00000000000470b7 : jae 0x470c0 ; xor eax, eax ; ret
0x000000000005ae95 : jae 0x5ae9f ; add byte ptr [rcx - 0x77], cl ; ret 0x32e9
0x000000000005e11d : jae 0x5e122 ; ret
0x00000000000752f1 : jae 0x7524b ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000007bd53 : jae 0x7bd0a ; nop dword ptr [rax] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007d75b : jae 0x7d785 ; movzx eax, byte ptr [rax] ; ret
0x000000000008765e : jae 0x8766e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b1fad : jae 0xb1fb2 ; ret
0x00000000000b2ca1 : jae 0xb2ccc ; xor dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000000b4dfd : jae 0xb4e02 ; ret
0x00000000000b4e2d : jae 0xb4e32 ; ret
0x00000000000c148d : jae 0xc1492 ; ret
0x00000000000c1680 : jae 0xc1685 ; ret
0x00000000000c175d : jae 0xc1762 ; ret
0x00000000000c1946 : jae 0xc197b ; ret
0x00000000000c19a6 : jae 0xc19db ; ret
0x00000000000c1d37 : jae 0xc1d3c ; ret
0x00000000000c292d : jae 0xc2932 ; ret
0x00000000000c2abd : jae 0xc2ac2 ; ret
0x00000000000c2abd : jae 0xc2ac7 ; ret
0x00000000000c2aed : jae 0xc2af2 ; ret
0x00000000000c2aed : jae 0xc2af7 ; ret
0x00000000000c2b4d : jae 0xc2b52 ; ret
0x00000000000c2b4d : jae 0xc2b57 ; ret
0x00000000000c2b7d : jae 0xc2b82 ; ret
0x00000000000c2bad : jae 0xc2bb2 ; ret
0x00000000000c2bdd : jae 0xc2be2 ; ret
0x00000000000cbdbd : jae 0xcbdc2 ; ret
0x00000000000cbded : jae 0xcbdf2 ; ret
0x00000000000cbe1d : jae 0xcbe22 ; ret
0x00000000000cbe4d : jae 0xcbe52 ; ret
0x00000000000cbe7d : jae 0xcbe82 ; ret
0x00000000000cbead : jae 0xcbeb2 ; ret
0x00000000000cbedd : jae 0xcbee2 ; ret
0x00000000000cbf0d : jae 0xcbf12 ; ret
0x00000000000cc129 : jae 0xcc161 ; ret
0x00000000000cc189 : jae 0xcc1c1 ; ret
0x00000000000ebc2a : jae 0xebc33 ; mov eax, edx ; ret
0x00000000000ebc4d : jae 0xebc52 ; ret
0x00000000000ebedd : jae 0xebee2 ; ret
0x00000000000ebf0d : jae 0xebf12 ; ret
0x00000000000ec02d : jae 0xec032 ; ret
0x00000000000ec05d : jae 0xec062 ; ret
0x00000000000ec0fd : jae 0xec102 ; ret
0x00000000000ec166 : jae 0xec19b ; ret
0x00000000000ec356 : jae 0xec38b ; ret
0x00000000000ec3b6 : jae 0xec3eb ; ret
0x00000000000ec40d : jae 0xec412 ; ret
0x00000000000ec95d : jae 0xec962 ; ret
0x00000000000ecaa6 : jae 0xecadb ; ret
0x00000000000ecafd : jae 0xecb02 ; ret
0x00000000000ecb2d : jae 0xecb32 ; ret
0x00000000000ecb5d : jae 0xecb62 ; ret
0x00000000000ecb8d : jae 0xecb92 ; ret
0x00000000000ecbbd : jae 0xecbc2 ; ret
0x00000000000ecbf6 : jae 0xecc2b ; ret
0x00000000000ecc4d : jae 0xecc52 ; ret
0x00000000000ecc7d : jae 0xecc82 ; ret
0x00000000000ed44d : jae 0xed452 ; ret
0x00000000000ed47d : jae 0xed482 ; ret
0x00000000000ed4ad : jae 0xed4b2 ; ret
0x00000000000eda9d : jae 0xedaa2 ; ret
0x00000000000edafd : jae 0xedb02 ; ret
0x00000000000edb5d : jae 0xedb62 ; ret
0x00000000000edbbd : jae 0xedbc2 ; ret
0x00000000000edc1d : jae 0xedc22 ; ret
0x00000000000edc56 : jae 0xedc8b ; ret
0x00000000000edf70 : jae 0xedf75 ; ret
0x00000000000ee5b9 : jae 0xee61e ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000f1169 : jae 0xf11a1 ; ret
0x00000000000f119c : jae 0xf11a5 ; ret
0x00000000000f189d : jae 0xf18a2 ; ret
0x00000000000f18cd : jae 0xf18d2 ; ret
0x00000000000f18fd : jae 0xf1902 ; ret
0x00000000000f1cbd : jae 0xf1cc2 ; ret
0x00000000000f1e7d : jae 0xf1e82 ; ret
0x00000000000f27ed : jae 0xf27f2 ; ret
0x00000000000f288d : jae 0xf2892 ; ret
0x00000000000f28c9 : jae 0xf2901 ; ret
0x00000000000f2a0d : jae 0xf2a12 ; ret
0x00000000000f2a3d : jae 0xf2a42 ; ret
0x00000000000f2a76 : jae 0xf2aab ; ret
0x00000000000f2aa6 : jae 0xf2ab0 ; ret
0x00000000000f2acd : jae 0xf2ad2 ; ret
0x00000000000f2acd : jae 0xf2ad7 ; ret
0x00000000000f2b06 : jae 0xf2b3b ; ret
0x00000000000f2b36 : jae 0xf2b40 ; ret
0x00000000000f2b5d : jae 0xf2b62 ; ret
0x00000000000f2b5d : jae 0xf2b67 ; ret
0x00000000000f2e1d : jae 0xf2e22 ; ret
0x00000000000f2e4d : jae 0xf2e52 ; ret
0x00000000000f2e7d : jae 0xf2e82 ; ret
0x00000000000f3d2d : jae 0xf3d32 ; ret
0x00000000000f3d5d : jae 0xf3d62 ; ret
0x00000000000f539f : jae 0xf53a4 ; ret
0x00000000000f5510 : jae 0xf5515 ; ret
0x00000000000f553d : jae 0xf5542 ; ret
0x00000000000f556d : jae 0xf5572 ; ret
0x00000000000f55a6 : jae 0xf55db ; ret
0x00000000000f55fd : jae 0xf5602 ; ret
0x00000000000f562d : jae 0xf5632 ; ret
0x00000000000f5660 : jae 0xf5665 ; ret
0x00000000000f568d : jae 0xf5692 ; ret
0x00000000000f56bd : jae 0xf56c2 ; ret
0x00000000000f56ed : jae 0xf56f2 ; ret
0x00000000000f571d : jae 0xf5722 ; ret
0x00000000000f8ca0 : jae 0xf8ca5 ; ret
0x00000000000f8ccd : jae 0xf8cd2 ; ret
0x00000000000f8cfd : jae 0xf8d02 ; ret
0x00000000000f8d30 : jae 0xf8d35 ; ret
0x00000000000f8d60 : jae 0xf8d65 ; ret
0x00000000000f8d8d : jae 0xf8d92 ; ret
0x00000000000f8dc0 : jae 0xf8dc5 ; ret
0x00000000000f8ded : jae 0xf8df2 ; ret
0x00000000000f8e1d : jae 0xf8e22 ; ret
0x00000000000f8e50 : jae 0xf8e55 ; ret
0x00000000000f8e7d : jae 0xf8e82 ; ret
0x00000000000f8eb0 : jae 0xf8eb5 ; ret
0x00000000000fae9d : jae 0xfaea2 ; ret
0x00000000000faecd : jae 0xfaed2 ; ret
0x00000000000faff6 : jae 0xfb02b ; ret
0x00000000000fb05d : jae 0xfb062 ; ret
0x00000000000fb08d : jae 0xfb092 ; ret
0x00000000000fb0bd : jae 0xfb0c2 ; ret
0x00000000000fb0ed : jae 0xfb0f2 ; ret
0x00000000000fb3b0 : jae 0xfb3b5 ; ret
0x00000000000fb3dd : jae 0xfb3e2 ; ret
0x00000000000fb40d : jae 0xfb412 ; ret
0x00000000000fb450 : jae 0xfb455 ; ret
0x00000000000fb47d : jae 0xfb482 ; ret
0x00000000000fb4ad : jae 0xfb4b2 ; ret
0x00000000000fb4dd : jae 0xfb4e2 ; ret
0x00000000000fb50d : jae 0xfb512 ; ret
0x00000000000fb53d : jae 0xfb542 ; ret
0x00000000000fb56d : jae 0xfb572 ; ret
0x00000000000fb59d : jae 0xfb5a2 ; ret
0x00000000000fb5cd : jae 0xfb5d2 ; ret
0x00000000000fb600 : jae 0xfb605 ; ret
0x00000000000fb639 : jae 0xfb671 ; ret
0x00000000000fb68d : jae 0xfb692 ; ret
0x00000000000fb6c0 : jae 0xfb6c5 ; ret
0x00000000000fb6ed : jae 0xfb6f2 ; ret
0x00000000000fb71d : jae 0xfb722 ; ret
0x00000000000fb74d : jae 0xfb752 ; ret
0x00000000000fb77d : jae 0xfb782 ; ret
0x00000000000fb7ad : jae 0xfb7b2 ; ret
0x00000000000fb7e0 : jae 0xfb7e5 ; ret
0x00000000000fb810 : jae 0xfb815 ; ret
0x00000000000fb83d : jae 0xfb842 ; ret
0x00000000000fb86d : jae 0xfb872 ; ret
0x00000000000fb89d : jae 0xfb8a2 ; ret
0x00000000000fb8d0 : jae 0xfb8d5 ; ret
0x00000000000fb900 : jae 0xfb905 ; ret
0x00000000000fb930 : jae 0xfb935 ; ret
0x00000000000fb969 : jae 0xfb9a1 ; ret
0x00000000000fb99c : jae 0xfb9a5 ; ret
0x00000000000fb9bd : jae 0xfb9c2 ; ret
0x00000000000fb9f9 : jae 0xfba31 ; ret
0x00000000000fba4d : jae 0xfba52 ; ret
0x00000000000fba7d : jae 0xfba82 ; ret
0x00000000000fbab9 : jae 0xfbaf1 ; ret
0x00000000000fbb0d : jae 0xfbb12 ; ret
0x00000000000fbb40 : jae 0xfbb45 ; ret
0x00000000000fbb6d : jae 0xfbb72 ; ret
0x00000000000fbb9d : jae 0xfbba2 ; ret
0x00000000000fbbd0 : jae 0xfbbd5 ; ret
0x00000000000fbc06 : jae 0xfbc3b ; ret
0x00000000000fbc5d : jae 0xfbc62 ; ret
0x00000000000fbc90 : jae 0xfbc95 ; ret
0x00000000000fbcc0 : jae 0xfbcc5 ; ret
0x00000000000fbd16 : jae 0xfbd4b ; ret
0x00000000000fbd6d : jae 0xfbd72 ; ret
0x00000000000fbda6 : jae 0xfbddb ; ret
0x00000000000fbdfd : jae 0xfbe02 ; ret
0x00000000000fbe2d : jae 0xfbe32 ; ret
0x00000000000fbe60 : jae 0xfbe65 ; ret
0x00000000000fbe8d : jae 0xfbe92 ; ret
0x00000000000fbf79 : jae 0xfbfb1 ; ret
0x00000000000fbfd6 : jae 0xfc00b ; ret
0x00000000000fc0e6 : jae 0xfc11b ; ret
0x00000000000fc149 : jae 0xfc181 ; ret
0x00000000000fc1a0 : jae 0xfc1a5 ; ret
0x00000000000fc1cd : jae 0xfc1d2 ; ret
0x00000000000fc1fd : jae 0xfc202 ; ret
0x00000000000fc230 : jae 0xfc235 ; ret
0x00000000000fc8b9 : jae 0xfc8f1 ; ret
0x00000000000fc919 : jae 0xfc951 ; ret
0x00000000000fc96d : jae 0xfc972 ; ret
0x00000000000fc99d : jae 0xfc9a2 ; ret
0x00000000000fc9cd : jae 0xfc9d2 ; ret
0x00000000000fc9fd : jae 0xfca02 ; ret
0x00000000000fca30 : jae 0xfca35 ; ret
0x00000000000fca60 : jae 0xfca65 ; ret
0x00000000000fca8d : jae 0xfca92 ; ret
0x00000000000fcabd : jae 0xfcac2 ; ret
0x00000000000fcaed : jae 0xfcaf2 ; ret
0x00000000000fcb1d : jae 0xfcb22 ; ret
0x0000000000118ad8 : jb 0x118acb ; mov eax, 0xffffffff ; ret
0x0000000000118ad7 : jb 0x118acc ; mov eax, 0xffffffff ; ret
0x0000000000122851 : jb 0x122875 ; ret
0x000000000012284b : jb 0x12287d ; ja 0x122840 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000143d5a : jb 0x143d6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143eaa : jb 0x143eba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143ffa : jb 0x14400a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014414a : jb 0x14415a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014429a : jb 0x1442aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001443ea : jb 0x1443fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014453a : jb 0x14454a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014468a : jb 0x14469a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001447da : jb 0x1447ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014492a : jb 0x14493a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144a7a : jb 0x144a8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144bca : jb 0x144bda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144d1a : jb 0x144d2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144e6a : jb 0x144e7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144fba : jb 0x144fca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014672a : jb 0x14673a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014687a : jb 0x14688a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001469ca : jb 0x1469da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146b1a : jb 0x146b2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146c6a : jb 0x146c7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146dba : jb 0x146dca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146f0a : jb 0x146f1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014705a : jb 0x14706a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001471aa : jb 0x1471ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001472fa : jb 0x14730a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014744a : jb 0x14745a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014759a : jb 0x1475aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001476ea : jb 0x1476fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014783a : jb 0x14784a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014798a : jb 0x14799a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001490fa : jb 0x14910a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014924a : jb 0x14925a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014939a : jb 0x1493aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001494ea : jb 0x1494fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014963a : jb 0x14964a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014978a : jb 0x14979a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001498da : jb 0x1498ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149a2a : jb 0x149a3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149b7a : jb 0x149b8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149cca : jb 0x149cda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149e1a : jb 0x149e2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149f6a : jb 0x149f7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014a0ba : jb 0x14a0ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014a20a : jb 0x14a21a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014a35a : jb 0x14a36a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001660ef : jb 0x1660e8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000166ba9 : jb 0x166ba8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000187345 : jb 0x187344 ; jmp rax
0x0000000000187e68 : jb 0x187ec2 ; cld ; jmp rdx
0x0000000000188338 : jb 0x1882be ; cld ; jmp rdx
0x0000000000188e89 : jb 0x188e77 ; call rsp
0x000000000018b8f9 : jb 0x18b8f0 ; jmp rsp
0x00000000001964cd : jb 0x1964be ; jmp qword ptr [rdx]
0x00000000001964cc : jb 0x1964bf ; jmp qword ptr [rdx]
0x0000000000196515 : jb 0x196506 ; jmp qword ptr [rdx]
0x00000000001a1454 : jb 0x1a14cc ; int1 ; jmp qword ptr [rdx]
0x00000000001a2534 : jb 0x1a24c0 ; int1 ; jmp qword ptr [rdx]
0x00000000001ac1cd : jb 0x1ac1d6 ; add byte ptr [rax - 0x1f], dl ; cmc ; call qword ptr [rcx]
0x00000000001ad895 : jb 0x1ad88e ; jmp qword ptr [rdx]
0x00000000001aed24 : jb 0x1aecb1 ; cmc ; jmp qword ptr [rdx]
0x000000000002248a : jb 0x224b8 ; cmp al, byte ptr [rax] ; pop rbx ; ret
0x0000000000002b5c : jb 0x2afc ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000002f7ee : jb 0x2f7fb ; ret
0x0000000000075c6c : jb 0x75c65 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000078e35 : jb 0x78e5b ; mov dword ptr [rcx], eax ; ret
0x000000000007e2ed : jb 0x7e2ff ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000009f90a : jb 0x9f919 ; add byte ptr [rax], al ; ret
0x00000000000d2945 : jb 0xd28b9 ; pop rbx ; ret
0x00000000000d28dd : jb 0xd28d7 ; ret 0x7408
0x0000000000111a07 : jbe 0x11197b ; xor eax, eax ; pop rbx ; ret
0x0000000000121e83 : jbe 0x121e97 ; mov eax, 2 ; ret
0x0000000000187351 : jbe 0x187350 ; call rax
0x000000000018ac48 : jbe 0x18ac1c ; out dx, eax ; call rsp
0x0000000000194e35 : jbe 0x194e25 ; jmp qword ptr [rdx]
0x0000000000194ead : jbe 0x194e9d ; jmp qword ptr [rdx]
0x0000000000194f0d : jbe 0x194efd ; jmp qword ptr [rdx]
0x0000000000194f0c : jbe 0x194efe ; jmp qword ptr [rdx]
0x0000000000194f55 : jbe 0x194f45 ; jmp qword ptr [rdx]
0x0000000000194f9d : jbe 0x194f8d ; jmp qword ptr [rdx]
0x000000000019503d : jbe 0x19502d ; jmp qword ptr [rdx]
0x0000000000195085 : jbe 0x195075 ; jmp qword ptr [rdx]
0x00000000001950cd : jbe 0x1950bd ; jmp qword ptr [rdx]
0x000000000019514d : jbe 0x19513d ; jmp qword ptr [rdx]
0x0000000000195195 : jbe 0x195185 ; jmp qword ptr [rdx]
0x00000000001951dd : jbe 0x1951cd ; jmp qword ptr [rdx]
0x0000000000195255 : jbe 0x195245 ; jmp qword ptr [rdx]
0x000000000019529d : jbe 0x19528d ; jmp qword ptr [rdx]
0x00000000001952e5 : jbe 0x1952d5 ; jmp qword ptr [rdx]
0x0000000000196865 : jbe 0x196856 ; jmp qword ptr [rdx]
0x00000000001968ad : jbe 0x19689e ; jmp qword ptr [rdx]
0x0000000000197734 : jbe 0x1976b9 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019a81c : jbe 0x19a80a ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a67fd : jbe 0x1a6806 ; add byte ptr [rax - 0x56], ah ; hlt ; call qword ptr [rbx]
0x0000000000002beb : jbe 0x2bbf ; clc ; ret
0x000000000004748b : jbe 0x47501 ; xor eax, eax ; ret
0x000000000004967c : jbe 0x49678 ; nop ; mov rax, rsi ; pop rbx ; ret
0x000000000004e4b7 : jbe 0x4a37d ; jmp 0x4a6fb
0x00000000000895c9 : jbe 0x89618 ; bsf eax, edx ; ret
0x000000000008c996 : jbe 0x8c9d5 ; add rax, rdi ; ret
0x000000000008c9a6 : jbe 0x8c9d7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008c9b6 : jbe 0x8c9d7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008c9c6 : jbe 0x8c9d7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000092273 : jbe 0x9228e ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x92269 ; ret
0x0000000000098ee9 : jbe 0x98ee3 ; ret 0xf10
0x000000000009ab09 : jbe 0x9ab03 ; ret 0xf10
0x000000000000d050 : jbe 0xd05a ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rsi]
0x00000000000e59e8 : jbe 0xe59f3 ; ret
0x00000000000f77eb : jbe 0xf7821 ; mov rsi, rbx ; mov rdi, r13 ; call r14
0x000000000010078e : je 0x10079e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001007c2 : je 0x1007e0 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000103135 : je 0x103144 ; xor eax, eax ; ret
0x0000000000104996 : je 0x1049c7 ; mov eax, r9d ; sub eax, edx ; ret
0x0000000000106fe3 : je 0x106ff7 ; mov eax, 7 ; ret
0x0000000000107001 : je 0x107029 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000107010 : je 0x107074 ; xor eax, eax ; pop rbx ; ret
0x000000000010862d : je 0x10863b ; ret
0x0000000000108cd9 : je 0x108cde ; ret
0x0000000000108d3d : je 0x108d42 ; ret
0x000000000010915a : je 0x109163 ; ret
0x00000000001095d2 : je 0x1095e4 ; lea rax, qword ptr [rip + 0x42045] ; ret
0x0000000000109672 : je 0x109684 ; lea rax, qword ptr [rip + 0x44a75] ; ret
0x000000000010abec : je 0x10abfe ; add rsp, 8 ; ret
0x000000000010d31b : je 0x10d353 ; ror byte ptr [rax - 0x7d], 1 ; ret 0xf01
0x00000000001120bf : je 0x1120cb ; mov rdi, rbx ; call rax
0x00000000001123a6 : je 0x1123b2 ; mov rdi, rbx ; call rax
0x0000000000112483 : je 0x112497 ; lea rdi, qword ptr [rip + 0x2b1a94] ; call rax
0x00000000001151a3 : je 0x11519b ; pop rbx ; ret
0x00000000001183b3 : je 0x11839c ; mov eax, 0xffffffff ; ret
0x00000000001183b2 : je 0x11839d ; mov eax, 0xffffffff ; ret
0x00000000001187d3 : je 0x118722 ; ret
0x00000000001187d2 : je 0x118723 ; ret
0x00000000001188b9 : je 0x118803 ; nop ; ret
0x00000000001188b8 : je 0x118804 ; nop ; ret
0x000000000011c962 : je 0x11c96a ; ret
0x000000000011f9c3 : je 0x11f9cf ; mov rdi, rsp ; call rax
0x000000000011fa9e : je 0x11faaa ; mov rdi, rsp ; call rax
0x0000000000120159 : je 0x120186 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x0000000000120357 : je 0x120363 ; mov rdi, rbp ; call rax
0x0000000000120728 : je 0x120732 ; ret
0x00000000001213f5 : je 0x121401 ; mov rdi, r14 ; call rax
0x0000000000121673 : je 0x12167f ; mov rdi, rbx ; call rax
0x0000000000121f26 : je 0x121f32 ; mov rdi, r12 ; call rdx
0x00000000001223c3 : je 0x1224ab ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000124742 : je 0x124756 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000012511d : je 0x125129 ; mov rdi, r12 ; call rax
0x00000000001252fb : je 0x125309 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000125d99 : je 0x125da6 ; add rsp, 0x48 ; ret
0x00000000001274b3 : je 0x1273d1 ; mov rdi, rbx ; call rax
0x00000000001273e7 : je 0x1273f3 ; mov rdi, rbp ; call rdx
0x00000000001274f3 : je 0x127507 ; mov eax, 1 ; ret
0x00000000001275d8 : je 0x1275e4 ; mov rdi, rbp ; call rax
0x00000000001277f8 : je 0x127804 ; mov rdi, rbp ; call rax
0x000000000012831f : je 0x12832d ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00000000001289de : je 0x1289ea ; mov rdi, r12 ; call rax
0x0000000000128d4f : je 0x128d5d ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000012b82e : je 0x12b808 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000012b7ff : je 0x12b80b ; pop rbx ; ret
0x000000000012b86b : je 0x12b81f ; pop rbx ; ret
0x000000000012b8a3 : je 0x12b8b6 ; add rsp, 8 ; ret
0x000000000012c4cb : je 0x12c4d2 ; ret
0x000000000012c5ab : je 0x12c5b9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012ccb4 : je 0x12ccc2 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012dd3d : je 0x12dda8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012ddfd : je 0x12de68 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012debd : je 0x12df28 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012df7d : je 0x12dfe8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012eef4 : je 0x12ef03 ; ret
0x0000000000131278 : je 0x131284 ; xor eax, eax ; ret
0x0000000000132406 : je 0x1323fe ; dec dword ptr [rax + 0x29] ; ret
0x0000000000133c41 : je 0x133c56 ; add rsp, 8 ; ret
0x0000000000137b5c : je 0x137b40 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000138123 : je 0x1380ed ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000138df5 : je 0x138dfd ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000138ef3 : je 0x138ebd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000139dda : je 0x139de2 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000139f33 : je 0x139efd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013bb03 : je 0x13bacd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013db34 : je 0x13db18 ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000013de13 : je 0x13dddd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013f4a3 : je 0x13f46d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000161f37 : je 0x161f41 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000165b86 : je 0x165b8c ; call rdx
0x0000000000165c8f : je 0x165c9a ; call rdx
0x0000000000175a08 : je 0x1759d3 ; xor al, 0xffffffffffffffd8 ; ret
0x0000000000175c47 : je 0x175c44 ; jmp 0x175c1e
0x0000000000176742 : je 0x17670a ; ret 0xacfc
0x0000000000187f20 : je 0x187f7b ; cld ; jmp rsp
0x00000000001888f8 : je 0x1888a4 ; cld ; jmp rsp
0x0000000000188f39 : je 0x188f27 ; jmp rsp
0x0000000000189568 : je 0x1895ab ; jmp 0x18956e
0x0000000000189ab4 : je 0x189a80 ; add byte ptr [rax], al ; push rsp ; push rdi ; in eax, dx ; call rsp
0x000000000018b911 : je 0x18b908 ; call rsp
0x000000000018bc10 : je 0x18bc28 ; hlt ; call rsp
0x000000000018d328 : je 0x18d32e ; clc ; jmp rsp
0x0000000000196675 : je 0x196666 ; jmp qword ptr [rdx]
0x00000000001966bd : je 0x1966ae ; jmp qword ptr [rdx]
0x000000000019678d : je 0x19677e ; jmp qword ptr [rdx]
0x00000000001967d5 : je 0x1967c6 ; jmp qword ptr [rdx]
0x0000000000197204 : je 0x19718d ; add byte ptr [rax], al ; call 0xffffffffe4195fb8
0x000000000019f904 : je 0x19f914 ; add dword ptr [rax], eax ; sbb byte ptr [rbp - 0x10], bl ; call qword ptr [rdx]
0x00000000001a0804 : je 0x1a0823 ; add dword ptr [rax], eax ; pop rax ; add al, -0xf ; call qword ptr [rax]
0x00000000001a18cd : je 0x1a18c2 ; jmp qword ptr [rdx]
0x00000000001a3104 : je 0x1a314c ; add dword ptr [rax], eax ; cwde ; add edx, esi ; call rdi
0x00000000001a5204 : je 0x1a526d ; add dword ptr [rax], eax ; pop rax ; div bl ; jmp qword ptr [rax]
0x00000000001a6091 : je 0x1a6089 ; jmp qword ptr [rcx]
0x00000000001a6204 : je 0x1a627d ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001a7904 : je 0x1a7894 ; add dword ptr [rax], eax ; js 0x1a78ee ; hlt ; jmp qword ptr [rcx]
0x00000000001a8204 : je 0x1a819d ; add dword ptr [rax], eax ; js 0x1a821c ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a04 : je 0x1a89a5 ; add dword ptr [rax], eax ; pop rax ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001ab504 : je 0x1ab4d0 ; add dword ptr [rax], eax ; cmp bl, dl ; cmc ; jmp qword ptr [rsi]
0x0000000000001cb2 : je 0x1cde ; ret
0x0000000000022021 : je 0x22049 ; add rsp, 8 ; ret
0x000000000002208a : je 0x22090 ; jmp rax
0x00000000000220ba : je 0x220c0 ; jmp rax
0x0000000000022358 : je 0x22371 ; lea rax, qword ptr [rip + 0x3a289f] ; ret
0x0000000000027d93 : je 0x27dc1 ; or byte ptr [rax - 0x75], cl ; je 0x27dc6 ; push rax ; call rax
0x0000000000027d98 : je 0x27dc1 ; push rax ; call rax
0x000000000002c982 : je 0x2c94c ; pop rbx ; ret
0x000000000002d02e : je 0x2d04a ; call 0x892a4
0x000000000002d070 : je 0x2d076 ; call rax
0x000000000002d3f7 : je 0x2d3fd ; call rcx
0x000000000002e69b : je 0x2e6a1 ; call rax
0x0000000000034a05 : je 0x34a30 ; or byte ptr [rcx - 0x77], cl ; ret 0x1074
0x00000000000359c9 : je 0x359de ; jmp 0x35992
0x0000000000036436 : je 0x36429 ; ret
0x00000000000367d6 : je 0x3677a ; ret
0x000000000005da66 : je 0x5da78 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000005e21a : je 0x5e223 ; ret
0x000000000006ef7a : je 0x6ef91 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f01a : je 0x6f031 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f714 : je 0x6f726 ; mov rax, rdx ; pop rbx ; ret
0x00000000000735a4 : je 0x735b6 ; mov rax, rdx ; pop rbx ; ret
0x0000000000073b3b : je 0x73b4d ; mov dword ptr [rdi], edx ; ret
0x0000000000073e4c : je 0x73e5f ; mov eax, 0xffffffff ; ret
0x0000000000074ce0 : je 0x74d31 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000074cdf : je 0x74d32 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000075983 : je 0x75996 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000759b3 : je 0x75a15 ; pop rbp ; pop r12 ; ret
0x0000000000075bcd : je 0x75bd8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000075c11 : je 0x75c1c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000076148 : je 0x76157 ; mov eax, 0xffffffff ; ret
0x000000000007932b : je 0x792d1 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000793af : je 0x793bb ; pop rbx ; ret
0x000000000007bd33 : je 0x7bcf0 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007be83 : je 0x7be40 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007bffc : je 0x7c00e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c8f4 : je 0x7c8ff ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007e1dc : je 0x7e014 ; ret
0x000000000007e102 : je 0x7e118 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000007f0f5 : je 0x7f0fb ; call rdx
0x000000000007f955 : je 0x7f966 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008139a : je 0x813c6 ; sub byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x00000000000832fc : je 0x83328 ; sbb byte ptr [rdx + 0x5b], bl ; pop rbp ; jmp rax
0x0000000000083f26 : je 0x83f52 ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000084339 : je 0x8433f ; call rax
0x000000000008532c : je 0x85332 ; ret
0x0000000000085345 : je 0x85354 ; pop rbx ; ret
0x0000000000085c1e : je 0x85da9 ; mov rsi, r14 ; call rax
0x0000000000086c15 : je 0x86c98 ; mov rsi, rbx ; mov rdi, r13 ; call rdx
0x0000000000086f88 : je 0x86f92 ; ret
0x00000000000876d2 : je 0x876e4 ; lea rax, qword ptr [rip + 0x11595] ; ret
0x00000000000878bf : je 0x878d1 ; lea rax, qword ptr [rip + 0xdb748] ; ret
0x0000000000088fb2 : je 0x88fc4 ; lea rax, qword ptr [rip + 0xcedd5] ; ret
0x00000000000890bf : je 0x890d1 ; lea rax, qword ptr [rip + 0xb48d8] ; ret
0x0000000000089247 : je 0x89270 ; movsx edx, sil ; mov eax, edx ; ret
0x0000000000089352 : je 0x8935f ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008957b : je 0x89585 ; bsf eax, edx ; ret
0x000000000008957b : je 0x89586 ; bsf eax, edx ; ret
0x0000000000089624 : je 0x89635 ; bsf rax, rdx ; ret
0x0000000000089624 : je 0x89636 ; bsf rax, rdx ; ret
0x00000000000895c8 : je 0x89646 ; bsf rax, rdx ; ret
0x0000000000089813 : je 0x89835 ; bsf rax, rdx ; ret
0x0000000000089813 : je 0x89836 ; bsf rax, rdx ; ret
0x0000000000089952 : je 0x89964 ; lea rax, qword ptr [rip + 0x10f35] ; ret
0x000000000008b232 : je 0x8b244 ; lea rax, qword ptr [rip + 0xce305] ; ret
0x000000000008b54f : je 0x8b561 ; lea rax, qword ptr [rip + 0xb2588] ; ret
0x000000000008b8df : je 0x8b8f1 ; lea rax, qword ptr [rip + 0xb2318] ; ret
0x000000000008c88c : je 0x8c8e3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008ca0c : je 0x8ca1f ; lea rax, qword ptr [rip + 0xd418b] ; ret
0x000000000008d172 : je 0x8d184 ; lea rax, qword ptr [rip + 0xc0f85] ; ret
0x000000000008d662 : je 0x8d674 ; lea rax, qword ptr [rip + 0xcea55] ; ret
0x000000000008d782 : je 0x8d794 ; lea rax, qword ptr [rip + 0xd0145] ; ret
0x0000000000092199 : je 0x921b1 ; cmp rsi, rcx ; jne 0x92191 ; xor eax, eax ; ret
0x00000000000921e3 : je 0x921f5 ; lea rax, qword ptr [rip + 0xb1524] ; ret
0x0000000000093718 : je 0x93731 ; lea rax, qword ptr [rip - 0x511] ; ret
0x0000000000093aa2 : je 0x93ab6 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000000944ca : je 0x94521 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000094581 : je 0x94599 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000094a74 : je 0x94a86 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009761a : je 0x97613 ; ret
0x0000000000097636 : je 0x9762b ; ret
0x0000000000097632 : je 0x9762f ; cmp ecx, edx ; je 0x9762f ; ret
0x000000000009765e : je 0x9764b ; ret
0x0000000000097659 : je 0x97650 ; cmp r8d, ecx ; je 0x97650 ; ret
0x000000000009768d : je 0x976a9 ; cmp eax, esi ; jne 0x97689 ; mov rax, rdi ; ret
0x0000000000097bcc : je 0x97ba8 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009859b : je 0x9855f ; mov byte ptr [r10 + 1], 0 ; ret
0x000000000009dc99 : je 0x9dcea ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009f326 : je 0x9f377 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a103a : je 0xa108b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a263d : je 0xa2606 ; movzx eax, dl ; pop rbx ; ret
0x00000000000a2615 : je 0xa2608 ; movzx eax, cl ; pop rbx ; ret
0x00000000000a263d : je 0xa2608 ; movzx eax, dl ; pop rbx ; ret
0x00000000000a2776 : je 0xa27a0 ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000a27ef : je 0xa27d3 ; ret
0x00000000000a2837 : je 0xa2813 ; ret
0x00000000000a37df : je 0xa37d1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a3a19 : je 0xa3a39 ; mov cl, dl ; and cl, 0xf ; je 0xa3a49 ; ret
0x00000000000a3a20 : je 0xa3a42 ; ret
0x00000000000a3a35 : je 0xa3a56 ; add rax, 2 ; ret
0x00000000000a3b92 : je 0xa3b59 ; mov dword ptr [rsi + 4], 0 ; ret
0x00000000000a3c0a : je 0xa3bc9 ; nop dword ptr [rax] ; sub eax, r8d ; ret
0x00000000000a4036 : je 0xa40a6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a42f7 : je 0xa4314 ; cmp dword ptr [rdi + 8], esi ; cmove rax, rcx ; ret
0x00000000000a435c : je 0xa436f ; lea rax, qword ptr [rip + 0xbde7b] ; ret
0x00000000000a6001 : je 0xa6013 ; mov edx, eax ; jmp 0xa5fd3
0x00000000000a8841 : je 0xa8853 ; mov edx, eax ; jmp 0xa8813
0x00000000000aaef1 : je 0xaaf03 ; mov edx, eax ; jmp 0xaaec3
0x00000000000ab916 : je 0xab8e6 ; or byte ptr [rax - 0x77], cl ; fucompi st(0) ; call rdx
0x00000000000b5cb0 : je 0xb5d07 ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000bab33 : je 0xbab44 ; xor eax, eax ; ret
0x00000000000be053 : je 0xbe086 ; mov rdi, r15 ; call r14
0x00000000000c1a3e : je 0xc1a44 ; call rax
0x00000000000c1bc3 : je 0xc1bcd ; call rdx
0x00000000000c1c4b : je 0xc1c55 ; call rax
0x00000000000c3219 : je 0xc324f ; mov eax, 1 ; ret
0x00000000000c32ab : je 0xc32d7 ; mov eax, 1 ; ret
0x00000000000d1774 : je 0xd1784 ; xor eax, eax ; ret
0x00000000000d27cb : je 0xd281c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d2928 : je 0xd28b5 ; pop rbx ; ret
0x00000000000d2a3a : je 0xd2a44 ; xor eax, eax ; ret
0x00000000000d2a36 : je 0xd2a98 ; cmp al, 0x11 ; je 0xd2a48 ; xor eax, eax ; ret
0x00000000000d4842 : je 0xd4851 ; add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], -0x7d ; ret 0x4001
0x00000000000d5571 : je 0xd5585 ; xor eax, eax ; pop rbx ; ret
0x00000000000df3b9 : je 0xdf3ca ; mov dword ptr [rax], r12d ; xor eax, eax ; jmp 0xdf38c
0x00000000000e4704 : je 0xe46e4 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000e4c32 : je 0xe4c3e ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000e4f02 : je 0xe4f0e ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000e509a : je 0xe50a3 ; ret
0x00000000000e57a2 : je 0xe57ab ; mov edx, eax ; jmp 0xe5799
0x00000000000e5e15 : je 0xe5df3 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e68ae : je 0xe68d9 ; xor byte ptr [rax - 0x77], cl ; ret 0x8b44
0x00000000000edf33 : je 0xedf4d ; neg eax ; pop rbx ; ret
0x00000000000f26ee : je 0xf26f5 ; ret
0x00000000000f3dc3 : je 0xf3dce ; mov qword ptr [rax], rdx ; ret
0x00000000000f3ea2 : je 0xf3e97 ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000f52d8 : je 0xf52e9 ; mov dword ptr [rip + 0x2c9fd0], edi ; ret
0x00000000000f5793 : je 0xf579a ; pop rbx ; ret
0x00000000000f6db0 : je 0xf6dc0 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000f81ed : je 0xf828e ; call rax
0x00000000000f8364 : je 0xf8466 ; call rax
0x00000000000f8548 : je 0xf8559 ; lea rax, qword ptr [r12 - 1] ; jmp 0xf851c
0x00000000000faf86 : je 0xfaf8b ; ret
0x00000000000fb25e : je 0xfb26c ; pop rbx ; pop rbp ; ret
0x00000000000fb2f3 : je 0xfb303 ; ret
0x00000000000fc5e6 : je 0xfc5f4 ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000fd6ea : je 0xfd6fa ; add edx, 1 ; mov word ptr [rax], dx ; ret
0x00000000000fd939 : je 0xfd947 ; add edx, 1 ; mov dword ptr [rax], edx ; ret
0x0000000000125502 : jg 0x12554c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x125518 ; ret
0x0000000000127fcd : jg 0x127fd9 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000012c792 : jg 0x12c7dc ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12c7a8 ; ret
0x0000000000145939 : jg 0x14598c ; ret
0x00000000001459bf : jg 0x145a0a ; ret
0x0000000000145b39 : jg 0x145b8c ; ret 0x894c
0x0000000000145bbf : jg 0x145c0a ; ret 0x894c
0x0000000000148309 : jg 0x14835c ; ret
0x000000000014838f : jg 0x1483da ; ret
0x0000000000148509 : jg 0x14855c ; ret 0x894c
0x000000000014858f : jg 0x1485da ; ret 0x894c
0x000000000014acd9 : jg 0x14ad2c ; ret
0x000000000014ad5f : jg 0x14adaa ; ret
0x000000000014aed9 : jg 0x14af2c ; ret 0x894c
0x000000000014af5f : jg 0x14afaa ; ret 0x894c
0x000000000014d2a8 : jg 0x14d2f9 ; loope 0x14d2a7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014d31f : jg 0x14d36a ; ret 0xff2
0x000000000014d338 : jg 0x14d389 ; loop 0x14d337 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014d3af : jg 0x14d3fa ; ret
0x000000000014d3c8 : jg 0x14d419 ; jrcxz 0x14d3c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014d458 : jg 0x14d4a9 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014d4d8 : jg 0x14d529 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014d558 : jg 0x14d5a9 ; out -0xd, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014d5d8 : jg 0x14d629 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014d858 : jg 0x14d8a9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014d8d8 : jg 0x14d929 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014d968 : jg 0x14d9b9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014d9e8 : jg 0x14da39 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014da5c : jg 0x14da67 ; ret
0x000000000014dab6 : jg 0x14dac9 ; ret
0x000000000014dab1 : jg 0x14db01 ; psllq mm1, qword ptr [rdi] ; jg 0x14dace ; ret
0x000000000014db26 : jg 0x14db39 ; ret
0x000000000014db96 : jg 0x14dba9 ; ret
0x000000000014db91 : jg 0x14dbe1 ; or eax, 0xf7f0ff3 ; ret
0x000000000014dc06 : jg 0x14dc19 ; ret
0x000000000014dc01 : jg 0x14dc51 ; or al, 0xfffffffffffffff3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000014dc76 : jg 0x14dc89 ; ret
0x000000000014dc71 : jg 0x14dcc1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000014dce6 : jg 0x14dcf9 ; ret
0x000000000014dce1 : jg 0x14dd31 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000014dd56 : jg 0x14dd69 ; ret
0x000000000014dd51 : jg 0x14dda1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000014ddc6 : jg 0x14ddd9 ; ret
0x000000000014ddc1 : jg 0x14de11 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000014de36 : jg 0x14de49 ; ret
0x000000000014dea6 : jg 0x14deb9 ; ret
0x000000000014df16 : jg 0x14df29 ; ret
0x000000000014df11 : jg 0x14df61 ; add eax, 0xf7f0ff3 ; ret
0x000000000014df86 : jg 0x14df99 ; ret
0x000000000014df81 : jg 0x14dfd1 ; add al, -0xd ; movq qword ptr [rdi], mm1 ; ret
0x000000000014dff6 : jg 0x14e009 ; ret
0x000000000014dff1 : jg 0x14e041 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000014e066 : jg 0x14e079 ; ret
0x000000000014e061 : jg 0x14e0b1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000014e0d6 : jg 0x14e0e9 ; ret
0x000000000014e0d1 : jg 0x14e121 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000014fd78 : jg 0x14fdc9 ; loope 0x14fd77 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014fdef : jg 0x14fe3a ; ret 0xff2
0x000000000014fe08 : jg 0x14fe59 ; loop 0x14fe07 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014fe7f : jg 0x14feca ; ret
0x000000000014fe98 : jg 0x14fee9 ; jrcxz 0x14fe97 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014ff28 : jg 0x14ff79 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014ffa8 : jg 0x14fff9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000150028 : jg 0x150079 ; out -0xd, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001500a8 : jg 0x1500f9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000150328 : jg 0x150379 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001503a8 : jg 0x1503f9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000150438 : jg 0x150489 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001504b8 : jg 0x150509 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015052c : jg 0x150537 ; ret
0x0000000000150586 : jg 0x150599 ; ret
0x0000000000150581 : jg 0x1505d1 ; psllq mm1, qword ptr [rdi] ; jg 0x15059e ; ret
0x00000000001505f6 : jg 0x150609 ; ret
0x0000000000150666 : jg 0x150679 ; ret
0x0000000000150661 : jg 0x1506b1 ; or eax, 0xf7f0ff3 ; ret
0x00000000001506d6 : jg 0x1506e9 ; ret
0x00000000001506d1 : jg 0x150721 ; or al, 0xfffffffffffffff3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000150746 : jg 0x150759 ; ret
0x0000000000150741 : jg 0x150791 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000001507b6 : jg 0x1507c9 ; ret
0x00000000001507b1 : jg 0x150801 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000150826 : jg 0x150839 ; ret
0x0000000000150821 : jg 0x150871 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000150896 : jg 0x1508a9 ; ret
0x0000000000150891 : jg 0x1508e1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000150906 : jg 0x150919 ; ret
0x0000000000150976 : jg 0x150989 ; ret
0x00000000001509e6 : jg 0x1509f9 ; ret
0x00000000001509e1 : jg 0x150a31 ; add eax, 0xf7f0ff3 ; ret
0x0000000000150a56 : jg 0x150a69 ; ret
0x0000000000150a51 : jg 0x150aa1 ; add al, -0xd ; movq qword ptr [rdi], mm1 ; ret
0x0000000000150ac6 : jg 0x150ad9 ; ret
0x0000000000150ac1 : jg 0x150b11 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000150b36 : jg 0x150b49 ; ret
0x0000000000150b31 : jg 0x150b81 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000150ba6 : jg 0x150bb9 ; ret
0x0000000000150ba1 : jg 0x150bf1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000152898 : jg 0x1528e9 ; loope 0x152897 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015290f : jg 0x15295a ; ret 0xff2
0x0000000000152928 : jg 0x152979 ; loop 0x152927 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015299f : jg 0x1529ea ; ret
0x00000000001529b8 : jg 0x152a09 ; jrcxz 0x1529b7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000152a48 : jg 0x152a99 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000152ac8 : jg 0x152b19 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000152b48 : jg 0x152b99 ; out -0xd, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000152bc8 : jg 0x152c19 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000152e48 : jg 0x152e99 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000152ec8 : jg 0x152f19 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000152f58 : jg 0x152fa9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000152fd8 : jg 0x153029 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015304c : jg 0x153057 ; ret
0x00000000001530a6 : jg 0x1530b9 ; ret
0x00000000001530a1 : jg 0x1530f1 ; psllq mm1, qword ptr [rdi] ; jg 0x1530be ; ret
0x0000000000153116 : jg 0x153129 ; ret
0x0000000000153186 : jg 0x153199 ; ret
0x0000000000153181 : jg 0x1531d1 ; or eax, 0xf7f0ff3 ; ret
0x00000000001531f6 : jg 0x153209 ; ret
0x00000000001531f1 : jg 0x153241 ; or al, 0xfffffffffffffff3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000153266 : jg 0x153279 ; ret
0x0000000000153261 : jg 0x1532b1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000001532d6 : jg 0x1532e9 ; ret
0x00000000001532d1 : jg 0x153321 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000153346 : jg 0x153359 ; ret
0x0000000000153341 : jg 0x153391 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001533b6 : jg 0x1533c9 ; ret
0x00000000001533b1 : jg 0x153401 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000153426 : jg 0x153439 ; ret
0x0000000000153496 : jg 0x1534a9 ; ret
0x0000000000153506 : jg 0x153519 ; ret
0x0000000000153501 : jg 0x153551 ; add eax, 0xf7f0ff3 ; ret
0x0000000000153576 : jg 0x153589 ; ret
0x0000000000153571 : jg 0x1535c1 ; add al, -0xd ; movq qword ptr [rdi], mm1 ; ret
0x00000000001535e6 : jg 0x1535f9 ; ret
0x00000000001535e1 : jg 0x153631 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000153656 : jg 0x153669 ; ret
0x0000000000153651 : jg 0x1536a1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000001536c6 : jg 0x1536d9 ; ret
0x00000000001536c1 : jg 0x153711 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001650a5 : jg 0x1650b4 ; neg eax ; ret
0x00000000001882c9 : jg 0x1882c9 ; call qword ptr [rax]
0x00000000001882cd : jg 0x1882d1 ; call qword ptr [rax + 0x10fffc7e]
0x0000000000188349 : jg 0x188349 ; jmp rdx
0x00000000001884c5 : jg 0x1884c5 ; jmp qword ptr [rax]
0x00000000001884c9 : jg 0x1884cd ; jmp qword ptr [rax + 0x20fffc7e]
0x0000000000188f35 : jg 0x188f3d ; add ah, ah ; je 0x188f2b ; jmp rsp
0x0000000000195f44 : jg 0x195fb9 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000196054 : jg 0x1960c9 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001973dd : jg 0x1973ce ; jmp qword ptr [rdx]
0x0000000000197425 : jg 0x197416 ; jmp qword ptr [rdx]
0x0000000000197485 : jg 0x197476 ; jmp qword ptr [rdx]
0x00000000001974cd : jg 0x1974be ; jmp qword ptr [rdx]
0x000000000019752d : jg 0x19751e ; jmp qword ptr [rdx]
0x0000000000197575 : jg 0x197566 ; jmp qword ptr [rdx]
0x00000000001975ed : jg 0x1975de ; jmp qword ptr [rdx]
0x0000000000197635 : jg 0x197626 ; jmp qword ptr [rdx]
0x000000000019767d : jg 0x19766e ; jmp qword ptr [rdx]
0x00000000001976ed : jg 0x1976de ; jmp qword ptr [rdx]
0x00000000001ae23d : jg 0x1ae236 ; jmp qword ptr [rdx]
0x00000000001ae4f4 : jg 0x1ae479 ; cmc ; jmp qword ptr [rdx]
0x00000000001b4d01 : jg 0x1b4cfc ; call qword ptr [rdx]
0x000000000001fbe9 : jg 0x1fb7b ; add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000002edfa : jg 0x2ee1e ; cmp dword ptr [rax], eax ; ret
0x0000000000035fbb : jg 0x3600d ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000036434 : jg 0x3643a ; je 0x3642b ; ret
0x000000000003662a : jg 0x36630 ; add byte ptr [rcx], cl ; ret 0xd089
0x00000000000365c5 : jg 0x36646 ; or cl, byte ptr [rdi] ; push rdi ; fisttp dword ptr [rdi] ; ret
0x00000000000367d2 : jg 0x3681f ; or ecx, eax ; je 0x3677e ; ret
0x000000000004714b : jg 0x471b9 ; xor eax, eax ; ret
0x0000000000047256 : jg 0x47213 ; ret
0x00000000000499c9 : jg 0x499d4 ; adc ecx, dword ptr [rax - 0x7d] ; ret 0x4c10
0x0000000000073b37 : jg 0x73ac5 ; inc byte ptr [rdx] ; je 0x73b51 ; mov dword ptr [rdi], edx ; ret
0x000000000008d207 : jg 0x8d220 ; jne 0x8d1f7 ; mov rax, rdi ; ret
0x0000000000092277 : jg 0x9228e ; jne 0x92265 ; ret
0x0000000000093768 : jg 0x93753 ; ret
0x000000000009da66 : jg 0x9da71 ; ret
0x000000000009da76 : jg 0x9da84 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009da8a : jg 0x9da99 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009daa9 : jg 0x9dab7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009dab9 : jg 0x9dac7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009dac9 : jg 0x9dada ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009daea : jg 0x9daf9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009db0a : jg 0x9db19 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009db2a : jg 0x9db39 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009db4a : jg 0x9db5c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009db8d : jg 0x9db9f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009dbad : jg 0x9dbbf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009dbcb : jg 0x9dbdb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009dbeb : jg 0x9dbfb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009dc0b : jg 0x9dc1b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009dc2b : jg 0x9dc3b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009e1b8 : jg 0x9e1c3 ; jne 0x9ea78 ; ret
0x000000000009e1dc : jg 0x9e1e8 ; jne 0x9ea78 ; ret
0x000000000009e1ff : jg 0x9e20c ; jne 0x9ea78 ; ret
0x000000000009e21a : jg 0x9e228 ; jne 0x9ea78 ; ret
0x000000000009e23d : jg 0x9e24c ; jne 0x9ea78 ; ret
0x000000000009e262 : jg 0x9e272 ; jne 0x9ea78 ; ret
0x000000000009e280 : jg 0x9e291 ; jne 0x9ea78 ; ret
0x000000000009e29c : jg 0x9e2ae ; jne 0x9ea78 ; ret
0x000000000009e2bf : jg 0x9e2d2 ; jne 0x9ea78 ; ret
0x000000000009e2e4 : jg 0x9e2f8 ; jne 0x9ea78 ; ret
0x000000000009e302 : jg 0x9e317 ; jne 0x9ea78 ; ret
0x000000000009e322 : jg 0x9e338 ; jne 0x9ea78 ; ret
0x000000000009e344 : jg 0x9e35b ; jne 0x9ea78 ; ret
0x000000000009e364 : jg 0x9e37c ; jne 0x9ea78 ; ret
0x000000000009e384 : jg 0x9e39d ; jne 0x9ea78 ; ret
0x000000000009e39e : jg 0x9e3b8 ; jne 0x9ea78 ; ret
0x000000000009e3c1 : jg 0x9e3dc ; jne 0x9ea78 ; ret
0x000000000009e3e6 : jg 0x9e402 ; jne 0x9ea78 ; ret
0x000000000009e404 : jg 0x9e421 ; jne 0x9ea78 ; ret
0x000000000009e424 : jg 0x9e442 ; jne 0x9ea78 ; ret
0x000000000009e447 : jg 0x9e466 ; jne 0x9ea78 ; ret
0x000000000009e466 : jg 0x9e486 ; jne 0x9ea78 ; ret
0x000000000009e486 : jg 0x9e4a7 ; jne 0x9ea78 ; ret
0x000000000009e4a6 : jg 0x9e4c8 ; jne 0x9ea78 ; ret
0x000000000009e4c9 : jg 0x9e4ec ; jne 0x9ea78 ; ret
0x000000000009e4fe : jg 0x9e522 ; jne 0x9ea78 ; ret
0x000000000009e52c : jg 0x9e551 ; jne 0x9ea78 ; ret
0x000000000009e55c : jg 0x9e582 ; jne 0x9ea78 ; ret
0x000000000009e588 : jg 0x9e5af ; jne 0x9ea78 ; ret
0x000000000009e5b8 : jg 0x9e5e0 ; jne 0x9ea78 ; ret
0x000000000009e5e8 : jg 0x9e611 ; jne 0x9ea78 ; ret
0x000000000009e618 : jg 0x9e642 ; jne 0x9ea78 ; ret
0x000000000009e736 : jg 0x9e741 ; ret
0x000000000009e749 : jg 0x9e757 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009e75a : jg 0x9e769 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009e779 : jg 0x9e787 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009e789 : jg 0x9e797 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009e79c : jg 0x9e7ad ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009e7ba : jg 0x9e7c9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009e7da : jg 0x9e7e9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009e7fa : jg 0x9e809 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009e81d : jg 0x9e82f ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009e85d : jg 0x9e86f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009e87d : jg 0x9e88f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009e89b : jg 0x9e8ab ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009e8bb : jg 0x9e8cb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009e8db : jg 0x9e8eb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009e8fb : jg 0x9e90b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009ea32 : jg 0x9ea3d ; ret
0x000000000009eb66 : jg 0x9eb9a ; ret
0x000000000009f0d6 : jg 0x9f0e5 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009f0e6 : jg 0x9f0f8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009f119 : jg 0x9f12b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009f139 : jg 0x9f14b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009f25f : jg 0x9f2bf ; or eax, 0x1c478d48 ; ret
0x000000000009f85b : jg 0x9f866 ; jne 0xa0288 ; ret
0x000000000009f880 : jg 0x9f88c ; jne 0xa0288 ; ret
0x000000000009f8a3 : jg 0x9f8b0 ; jne 0xa0288 ; ret
0x000000000009f8be : jg 0x9f8cc ; jne 0xa0288 ; ret
0x000000000009f8e1 : jg 0x9f8f0 ; jne 0xa0288 ; ret
0x000000000009f906 : jg 0x9f916 ; jne 0xa0288 ; ret
0x000000000009f924 : jg 0x9f935 ; jne 0xa0288 ; ret
0x000000000009f940 : jg 0x9f952 ; jne 0xa0288 ; ret
0x000000000009f963 : jg 0x9f976 ; jne 0xa0288 ; ret
0x000000000009f988 : jg 0x9f99c ; jne 0xa0288 ; ret
0x000000000009f9b6 : jg 0x9f9cb ; jne 0xa0288 ; ret
0x000000000009f9d6 : jg 0x9f9ec ; jne 0xa0288 ; ret
0x000000000009f9f8 : jg 0x9fa0f ; jne 0xa0288 ; ret
0x000000000009fa28 : jg 0x9fa40 ; jne 0xa0288 ; ret
0x000000000009fa58 : jg 0x9fa71 ; jne 0xa0288 ; ret
0x000000000009fa82 : jg 0x9fa9c ; jne 0xa0288 ; ret
0x000000000009faa5 : jg 0x9fac0 ; jne 0xa0288 ; ret
0x000000000009faca : jg 0x9fae6 ; jne 0xa0288 ; ret
0x000000000009faf8 : jg 0x9fb15 ; jne 0xa0288 ; ret
0x000000000009fb28 : jg 0x9fb46 ; jne 0xa0288 ; ret
0x000000000009fb5b : jg 0x9fb7a ; jne 0xa0288 ; ret
0x000000000009fb8a : jg 0x9fbaa ; jne 0xa0288 ; ret
0x000000000009fbba : jg 0x9fbdb ; jne 0xa0288 ; ret
0x000000000009fbea : jg 0x9fc0c ; jne 0xa0288 ; ret
0x000000000009fc1d : jg 0x9fc40 ; jne 0xa0288 ; ret
0x000000000009fc52 : jg 0x9fc76 ; jne 0xa0288 ; ret
0x000000000009fc80 : jg 0x9fca5 ; jne 0xa0288 ; ret
0x000000000009fcb0 : jg 0x9fcd6 ; jne 0xa0288 ; ret
0x000000000009fcdc : jg 0x9fd03 ; jne 0xa0288 ; ret
0x000000000009fd0c : jg 0x9fd34 ; jne 0xa0288 ; ret
0x000000000009fd3c : jg 0x9fd65 ; jne 0xa0288 ; ret
0x000000000009fd6c : jg 0x9fd96 ; jne 0xa0288 ; ret
0x000000000009ff16 : jg 0x9ff25 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009ff29 : jg 0x9ff3b ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009ff69 : jg 0x9ff7b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009ff89 : jg 0x9ff9b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a00af : jg 0xa010f ; or eax, 0x1d478d48 ; ret
0x00000000000a0242 : jg 0xa024d ; ret
0x00000000000a0376 : jg 0xa03ae ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a0b46 : jg 0xa0b51 ; ret
0x00000000000a0b56 : jg 0xa0b64 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a0b6a : jg 0xa0b79 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a0b89 : jg 0xa0b97 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a0b99 : jg 0xa0ba7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a0ba9 : jg 0xa0bba ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a0bca : jg 0xa0bd9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a0bea : jg 0xa0bf9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a0c0a : jg 0xa0c19 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a0c2a : jg 0xa0c3c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a0c6d : jg 0xa0c7f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a0c8d : jg 0xa0c9f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a0cab : jg 0xa0cbb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a0ccb : jg 0xa0cdb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a0ceb : jg 0xa0cfb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a0d0b : jg 0xa0d1b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a1616 : jg 0xa1621 ; ret
0x00000000000a1626 : jg 0xa1634 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a163a : jg 0xa1649 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a1659 : jg 0xa1667 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a1669 : jg 0xa1677 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a1679 : jg 0xa168a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a169a : jg 0xa16a9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a16ba : jg 0xa16c9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a16da : jg 0xa16e9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a16fa : jg 0xa170c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a173d : jg 0xa174f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a175d : jg 0xa176f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a177b : jg 0xa178b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a179b : jg 0xa17ab ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a17bb : jg 0xa17cb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a17db : jg 0xa17eb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a1986 : jg 0xa1996 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a1b5f : jg 0xa1bc0 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a1b7f : jg 0xa1be0 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a1bf6 : jg 0xa1c2f ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a1bf5 : jg 0xa1c7e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a25d0 : jg 0xa260d ; ret 0x2b77
0x00000000000a3765 : jg 0xa376d ; neg eax ; ret
0x00000000000c08cd : jg 0xc08ba ; add eax, 0x358d4800 ; ret 0xbe5
0x00000000000c2fcc : jg 0xc2fd2 ; add byte ptr [rax], al ; ret
0x00000000000ec9f0 : jg 0xeca42 ; add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000f7f38 : jg 0xf7f47 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000fa91e : jg 0xfa953 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000118d7c : jge 0x118d89 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001252ff : jge 0x125313 ; call rax
0x000000000012c5af : jge 0x12c5c3 ; call rax
0x000000000012ccb8 : jge 0x12cccc ; call rax
0x00000000001790cd : jge 0x1790c2 ; jmp rax
0x00000000001791a5 : jge 0x1791a5 ; call qword ptr [rax]
0x00000000001882d9 : jge 0x1882d9 ; call qword ptr [rax]
0x0000000000188359 : jge 0x188359 ; jmp rdx
0x00000000001884d5 : jge 0x1884d5 ; jmp qword ptr [rax]
0x00000000001884d9 : jge 0x1884dd ; jmp qword ptr [rax + 0x20fffc7c]
0x0000000000188e85 : jge 0x188e8d ; add byte ptr [rdx + rsi*2 - 0x16], dl ; call rsp
0x000000000018bd39 : jge 0x18bd31 ; jmp rsp
0x000000000018da41 : jge 0x18da3d ; call rsp
0x000000000019541d : jge 0x19540d ; jmp qword ptr [rdx]
0x0000000000196184 : jge 0x1961f9 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001974cc : jge 0x197550 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a1d55 : jge 0x1a1d4a ; jmp qword ptr [rdx]
0x00000000001a1d9d : jge 0x1a1d92 ; jmp qword ptr [rdx]
0x00000000001a1e35 : jge 0x1a1e2a ; jmp qword ptr [rdx]
0x00000000001a1e7d : jge 0x1a1e72 ; jmp qword ptr [rdx]
0x00000000001a1ec5 : jge 0x1a1eba ; jmp qword ptr [rdx]
0x00000000001a1f0d : jge 0x1a1f02 ; jmp qword ptr [rdx]
0x00000000001a1f55 : jge 0x1a1f4a ; jmp qword ptr [rdx]
0x00000000001a1f9d : jge 0x1a1f92 ; jmp qword ptr [rdx]
0x00000000001a6ea5 : jge 0x1a6eae ; add byte ptr [rax - 0x45], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001a6ebd : jge 0x1a6ec6 ; add byte ptr [rax - 0x45], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001ada1c : jge 0x1ada99 ; cmc ; jmp qword ptr [rdx]
0x0000000000048bda : jge 0x48be1 ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x0000000000094a71 : jge 0x94a7c ; add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000097aaf : jge 0x97ab7 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a48df : jge 0xa48e4 ; call r12
0x00000000000b0361 : jge 0xb0366 ; call r12
0x00000000000be486 : jge 0xbe423 ; call r14
0x00000000000cb606 : jge 0xcb59f ; movsx esi, byte ptr [rax] ; call 0x878d7
0x00000000000e567f : jge 0xe5659 ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000f5bfb : jge 0xf5bff ; call rbx
0x00000000000f5d22 : jge 0xf5d26 ; call rbx
0x00000000000f5d30 : jge 0xf5d34 ; call rbx
0x00000000000f5e65 : jge 0xf5e69 ; call rbx
0x00000000000f5fd5 : jge 0xf5fd9 ; call rbx
0x00000000000f5fe3 : jge 0xf5fe7 ; call rbx
0x00000000000f63ef : jge 0xf63ba ; mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000f76da : jge 0xf76df ; call r12
0x000000000012829d : jl 0x1282a9 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000012829c : jl 0x1282aa ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000162ffb : jl 0x163004 ; neg eax ; ret
0x00000000001791a1 : jl 0x1791a5 ; push rax ; jge 0x1791a9 ; call qword ptr [rax]
0x0000000000187e30 : jl 0x187e89 ; cld ; jmp qword ptr [rdx]
0x00000000001882e5 : jl 0x1882e9 ; push qword ptr [rax + 0x7b] ; cld ; jmp rax
0x0000000000188361 : jl 0x188361 ; call rdx
0x00000000001884a1 : jl 0x1884a5 ; jmp qword ptr [rax + 0x10fffc7b]
0x00000000001884dd : jl 0x1884dd ; jmp qword ptr [rax]
0x0000000000188ae4 : jl 0x188ab7 ; add byte ptr [rax], al ; lahf ; jno 0x188adb ; jmp rsp
0x000000000018a41c : jl 0x18a42b ; add dword ptr [rax], eax ; ret 0xeef5
0x000000000018bd34 : jl 0x18bced ; add dword ptr [rax], eax ; add al, 0x7d ; hlt ; jmp rsp
0x000000000018de95 : jl 0x18de9f ; add byte ptr [rdx + rdx - 7], al ; jmp rsp
0x000000000019652c : jl 0x19654a ; add byte ptr [rax], al ; mov al, -0x6c ; in eax, dx ; jmp rsi
0x000000000019777c : jl 0x197702 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019b5cd : jl 0x19b5cd ; jmp qword ptr [rdx]
0x000000000019b5cc : jl 0x19b5ce ; jmp qword ptr [rdx]
0x000000000019b615 : jl 0x19b615 ; jmp qword ptr [rdx]
0x000000000019c31c : jl 0x19c2ef ; add byte ptr [rax], al ; ret
0x000000000019c90c : jl 0x19c8ec ; add byte ptr [rax], al ; jo 0x19c948 ; out dx, al ; call qword ptr [rsi]
0x00000000001a1031 : jl 0x1a1026 ; call qword ptr [rax]
0x00000000001a1030 : jl 0x1a1027 ; call qword ptr [rax]
0x00000000001a170c : jl 0x1a173a ; add dword ptr [rax], eax ; mov al, -0x3a ; int1 ; call qword ptr [rsi]
0x00000000001a1bb5 : jl 0x1a1baa ; jmp qword ptr [rdx]
0x00000000001a1c3d : jl 0x1a1c32 ; jmp qword ptr [rdx]
0x00000000001a1c85 : jl 0x1a1c7a ; jmp qword ptr [rdx]
0x00000000001a1d0d : jl 0x1a1d02 ; jmp qword ptr [rdx]
0x00000000001a1f0c : jl 0x1a1f8e ; int1 ; jmp qword ptr [rdx]
0x00000000001a2f0c : jl 0x1a2f52 ; add dword ptr [rax], eax ; adc dl, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a6a0c : jl 0x1a6a8d ; add dword ptr [rax], eax ; mov al, -0x52 ; hlt ; jmp qword ptr [rcx]
0x00000000001a8b0c : jl 0x1a8aae ; add dword ptr [rax], eax ; nop ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001a910c : jl 0x1a90b4 ; add dword ptr [rax], eax ; cmp byte ptr [rax], -0xb ; jmp qword ptr [rcx]
0x00000000001ab60c : jl 0x1ab5d9 ; add dword ptr [rax], eax ; mov al, -0x2d ; cmc ; jmp qword ptr [rsi]
0x00000000001ad20c : jl 0x1ad1f5 ; add dword ptr [rax], eax ; mov al, -8 ; cmc ; call qword ptr [rax]
0x00000000001ada64 : jl 0x1adae1 ; cmc ; jmp qword ptr [rdx]
0x00000000001ade55 : jl 0x1ade4e ; jmp qword ptr [rdx]
0x00000000001adee5 : jl 0x1adede ; jmp qword ptr [rdx]
0x00000000001adee4 : jl 0x1adedf ; jmp qword ptr [rdx]
0x00000000001adf2d : jl 0x1adf26 ; jmp qword ptr [rdx]
0x00000000001adf2c : jl 0x1adf27 ; jmp qword ptr [rdx]
0x00000000001adf8d : jl 0x1adf86 ; jmp qword ptr [rdx]
0x00000000001adf8c : jl 0x1adf87 ; jmp qword ptr [rdx]
0x00000000001adfd5 : jl 0x1adfce ; jmp qword ptr [rdx]
0x00000000001ae01d : jl 0x1ae016 ; jmp qword ptr [rdx]
0x00000000001ae01c : jl 0x1ae017 ; jmp qword ptr [rdx]
0x00000000001ae065 : jl 0x1ae05e ; jmp qword ptr [rdx]
0x00000000001ae0ad : jl 0x1ae0a6 ; jmp qword ptr [rdx]
0x00000000001ae0f5 : jl 0x1ae0ee ; jmp qword ptr [rdx]
0x00000000000025c3 : jl 0x2556 ; loop 0x25a1 ; ret 0x23cb
0x0000000000025953 : jl 0x25980 ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000025a4c : jl 0x25a7a ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000025e20 : jl 0x25e4d ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000260a9 : jl 0x260d7 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000002639b : jl 0x263c9 ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000002648d : jl 0x264bb ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000026878 : jl 0x268a5 ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000026a6f : jl 0x26a9d ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000026d90 : jl 0x26dbe ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000026f9b : jl 0x26fc9 ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000027683 : jl 0x276b0 ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000277ae : jl 0x277db ; jo 0x27801 ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002838a : jl 0x283b7 ; mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000028a0f : jl 0x28a3d ; push rax ; mov dword ptr [rsp + 8], eax ; call r12
0x0000000000029425 : jl 0x29453 ; push rax ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000029da1 : jl 0x29dcf ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000002a2ae : jl 0x2a2db ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002a5a7 : jl 0x2a5d4 ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002a6fc : jl 0x2a729 ; jo 0x2a74f ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002aefa : jl 0x2af28 ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000002b3fe : jl 0x2b42b ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002b6f7 : jl 0x2b724 ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002b84c : jl 0x2b879 ; jo 0x2b89f ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000003aada : jl 0x3ab08 ; and byte ptr [rax - 0x77], cl ; pop rax ; or cl, ch ; ret 0xfffa
0x000000000004433a : jl 0x44365 ; xor byte ptr [rax + 0x29], cl ; ret 0x2949
0x0000000000000452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x000000000004fd41 : jl 0x4fd0b ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000737c5 : jl 0x737ef ; jo 0x737b5 ; ret
0x0000000000085c20 : jl 0x85c2a ; add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x000000000008b9f7 : jl 0x8ba22 ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000097b3a : jl 0x97ba5 ; add rax, rdi ; ret
0x0000000000097b4a : jl 0x97ba7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000097b6a : jl 0x97ba7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000097b8a : jl 0x97ba7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000b8dc3 : jl 0xb8e12 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000c1b60 : jl 0xc1b20 ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000d58ce : jl 0xd5908 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ec769 : jl 0xec795 ; cwde ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000ec879 : jl 0xec8a5 ; adc byte ptr [rdx], al ; cmove eax, edx ; jmp 0xec841
0x00000000000f60c6 : jl 0xf60f4 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000faf84 : jl 0xfafc9 ; je 0xfaf8d ; ret
0x0000000000125b5f : jle 0x125b52 ; or dword ptr [rdi], ecx ; mov cl, 0x35 ; ret
0x000000000012b328 : jle 0x12b340 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000012f6de : jle 0x12f71c ; call 0x12b8f4
0x000000000013dab7 : jle 0x13d9e1 ; movsxd rax, ecx ; ret
0x000000000013dcf1 : jle 0x13dc3b ; ret
0x00000000001882d1 : jle 0x1882d1 ; call qword ptr [rax]
0x00000000001882d5 : jle 0x1882d9 ; call qword ptr [rax + 0x10fffc7d]
0x0000000000188351 : jle 0x188351 ; jmp rdx
0x00000000001884cd : jle 0x1884cd ; jmp qword ptr [rax]
0x00000000001884d1 : jle 0x1884d5 ; jmp qword ptr [rax + 0x20fffc7d]
0x000000000018b58d : jle 0x18b596 ; add ah, ah ; mov dl, dh ; jmp rsp
0x0000000000195465 : jle 0x195455 ; jmp qword ptr [rdx]
0x000000000019600c : jle 0x196081 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a3c24 : jle 0x1a3bcb ; jmp qword ptr [rdx]
0x00000000001a6fb5 : jle 0x1a6fbe ; add byte ptr [rax - 0x42], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001a6fcd : jle 0x1a6fd6 ; add byte ptr [rax - 0x42], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1f5 : jle 0x1ae1ee ; jmp qword ptr [rdx]
0x000000000002c992 : jle 0x2c9a5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000002f6c1 : jle 0x2f6fb ; push qword ptr [rdi + rax - 0x77] ; fucompi st(0) ; ret
0x000000000003d877 : jle 0x3d833 ; jmp 0x3d840
0x000000000003d876 : jle 0x3d834 ; jmp 0x3d841
0x00000000000743db : jle 0x743e2 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000a4ed2 : jle 0xa4f0a ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000c289d : jle 0xc28a4 ; ret
0x00000000000c3079 : jle 0xc307f ; add byte ptr [rax], al ; ret
0x0000000000101922 : jmp 0x101752
0x0000000000101f0b : jmp 0x101c52
0x000000000010c991 : jmp 0x10c957
0x000000000010e262 : jmp 0x10e031
0x000000000010e61a : jmp 0x10e401
0x000000000010ee21 : jmp 0x10ecbe
0x000000000010fd77 : jmp 0x10fd7d
0x000000000010fd76 : jmp 0x10fd7e
0x0000000000117c9c : jmp 0x117caf
0x0000000000117cf0 : jmp 0x117d05
0x00000000001189c6 : jmp 0x118a13
0x000000000011c7bc : jmp 0x11c740
0x000000000012240e : jmp 0x122433
0x000000000012476f : jmp 0x124735
0x0000000000125b60 : jmp 0x125b70
0x000000000012bb2e : jmp 0x12bb38
0x000000000012e142 : jmp 0x12e107
0x00000000001321fa : jmp 0x1321c0
0x0000000000135d62 : jmp 0x135bc7
0x0000000000174f0a : jmp 0x174f49
0x0000000000175c49 : jmp 0x175c1c
0x0000000000176c40 : jmp 0x176bd4
0x0000000000176c3f : jmp 0x176bd5
0x0000000000189382 : jmp 0x189384
0x00000000001893a2 : jmp 0x1893a4
0x00000000001893da : jmp 0x1893dc
0x00000000001894fa : jmp 0x1894fc
0x000000000018956a : jmp 0x18956c
0x0000000000189569 : jmp 0x18956d
0x000000000018958a : jmp 0x18958c
0x0000000000189589 : jmp 0x18958d
0x0000000000189632 : jmp 0x189634
0x0000000000189631 : jmp 0x189635
0x000000000018966a : jmp 0x18966c
0x0000000000189669 : jmp 0x18966d
0x0000000000189752 : jmp 0x189754
0x000000000018978a : jmp 0x18978c
0x00000000001897e2 : jmp 0x1897e4
0x000000000019365a : jmp 0x19365c
0x00000000001937be : jmp 0x1937c0
0x0000000000193806 : jmp 0x193808
0x000000000019384e : jmp 0x193850
0x0000000000193896 : jmp 0x193898
0x00000000001938de : jmp 0x1938e0
0x0000000000193926 : jmp 0x193928
0x000000000019396e : jmp 0x193970
0x00000000001939b6 : jmp 0x1939b8
0x0000000000193ab2 : jmp 0x193ab4
0x0000000000193c12 : jmp 0x193c14
0x0000000000193cfa : jmp 0x193cfc
0x0000000000193cf9 : jmp 0x193cfd
0x0000000000193d42 : jmp 0x193d44
0x0000000000193d41 : jmp 0x193d45
0x0000000000193db2 : jmp 0x193db4
0x0000000000193db1 : jmp 0x193db5
0x0000000000193e16 : jmp 0x193e18
0x0000000000193e5e : jmp 0x193e60
0x0000000000193e5d : jmp 0x193e61
0x0000000000193ea6 : jmp 0x193ea8
0x0000000000193eee : jmp 0x193ef0
0x0000000000193f36 : jmp 0x193f38
0x0000000000193f7e : jmp 0x193f80
0x0000000000194122 : jmp 0x194124
0x000000000019413a : jmp 0x19413c
0x000000000019419a : jmp 0x19419c
0x00000000001941ee : jmp 0x1941f0
0x00000000001941ed : jmp 0x1941f1
0x0000000000194236 : jmp 0x194238
0x0000000000194235 : jmp 0x194239
0x000000000019427e : jmp 0x194280
0x00000000001942c6 : jmp 0x1942c8
0x0000000000194536 : jmp 0x194538
0x000000000019457e : jmp 0x194580
0x00000000001946ae : jmp 0x1946b0
0x00000000001946f6 : jmp 0x1946f8
0x0000000000194856 : jmp 0x194858
0x000000000019489e : jmp 0x1948a0
0x0000000000194a2e : jmp 0x194a30
0x0000000000194a76 : jmp 0x194a78
0x000000000002177f : jmp 0x2173e
0x0000000000021b63 : jmp 0x21b28
0x0000000000026426 : jmp 0x263eb
0x0000000000026e6d : jmp 0x26e33
0x0000000000026eb7 : jmp 0x26e7c
0x0000000000029afd : jmp 0x29ac2
0x000000000002accd : jmp 0x2ac92
0x000000000002e661 : jmp 0x2e07c
0x000000000002f51e : jmp 0x2f526
0x000000000018f678 : jmp 0x3261383
0x000000000018f677 : jmp 0x3261384
0x00000000000359cb : jmp 0x35990
0x000000000018f6c0 : jmp 0x382613cb
0x000000000018f6bf : jmp 0x382613cc
0x0000000000003867 : jmp 0x382d
0x00000000000383e2 : jmp 0x38434
0x0000000000039b72 : jmp 0x39bc4
0x000000000003d696 : jmp 0x3d57a
0x000000000003d879 : jmp 0x3d83e
0x000000000003db0d : jmp 0x3da3a
0x0000000000045e49 : jmp 0x44019
0x0000000000045e8e : jmp 0x45228
0x0000000000045f1f : jmp 0x45339
0x0000000000046de5 : jmp 0x46dab
0x00000000000816d3 : jmp 0x480826ae
0x00000000000b5960 : jmp 0x48cde2b0
0x00000000000b5f60 : jmp 0x48cde8b0
0x00000000000b5fec : jmp 0x48cde93c
0x00000000000b6079 : jmp 0x48cde9c9
0x00000000000b78d7 : jmp 0x48ce0227
0x0000000000126ea2 : jmp 0x48d23132
0x00000000000455a7 : jmp 0x48f4defb
0x0000000000071432 : jmp 0x48f59d85
0x00000000000b7b9c : jmp 0x49ce04ec
0x00000000000b7be6 : jmp 0x49ce0536
0x00000000000b805b : jmp 0x49ce09ab
0x000000000004df34 : jmp 0x4a155
0x000000000004e0fc : jmp 0x4a377
0x000000000004e4bd : jmp 0x4a6f5
0x000000000004bee3 : jmp 0x4bea9
0x0000000000050ab2 : jmp 0x4cc79402
0x0000000000093299 : jmp 0x4ccbbbed
0x00000000000b62b7 : jmp 0x4ccdec07
0x00000000000b6911 : jmp 0x4ccdf261
0x00000000000b699d : jmp 0x4ccdf2ed
0x00000000000b6a1e : jmp 0x4ccdf36e
0x00000000000b77f1 : jmp 0x4cce0141
0x00000000000b793e : jmp 0x4cce028e
0x00000000000e44f1 : jmp 0x4cd0ce41
0x000000000004e6f6 : jmp 0x4e6bb
0x0000000000056495 : jmp 0x5645a
0x000000000005a26f : jmp 0x564f4
0x0000000000058eaa : jmp 0x58e6f
0x0000000000063a3f : jmp 0x5fcd9
0x0000000000061e26 : jmp 0x60578
0x0000000000061cc3 : jmp 0x61c89
0x0000000000061d6e : jmp 0x61c91
0x0000000000068765 : jmp 0x64991
0x00000000000686a5 : jmp 0x64993
0x0000000000070259 : jmp 0x7026b
0x000000000018f798 : jmp 0x752614a3
0x000000000018f797 : jmp 0x752614a4
0x0000000000075efb : jmp 0x75ec1
0x0000000000075efa : jmp 0x75ec2
0x0000000000077971 : jmp 0x77976
0x00000000000482e6 : jmp 0x77c6bc37
0x000000000007853c : jmp 0x78501
0x000000000018f750 : jmp 0x7926145b
0x000000000018f74f : jmp 0x7926145c
0x000000000007ad39 : jmp 0x7ad40
0x000000000007b1a3 : jmp 0x7b168
0x0000000000188b72 : jmp 0x80407f
0x0000000000082237 : jmp 0x821fd
0x00000000000823d1 : jmp 0x82396
0x0000000000086902 : jmp 0x868c8
0x0000000000086ae0 : jmp 0x86aa6
0x0000000000087974 : jmp 0x8793a
0x0000000000087ac8 : jmp 0x87a8d
0x0000000000188cba : jmp 0x8a11c7
0x0000000000093efb : jmp 0x93d59
0x00000000000945dc : jmp 0x945a2
0x0000000000094728 : jmp 0x946ed
0x00000000000948d2 : jmp 0x94897
0x000000000009802e : jmp 0x97ff4
0x00000000000a1f6e : jmp 0xa1f34
0x00000000000a203f : jmp 0xa2005
0x00000000000a20ae : jmp 0xa2074
0x00000000000b3515 : jmp 0xb3527
0x00000000000bacb7 : jmp 0xbac7c
0x00000000000bda40 : jmp 0xbda06
0x00000000000be35a : jmp 0xbe1f9
0x00000000000bf441 : jmp 0xbf2a7
0x00000000000c48a7 : jmp 0xc42f7
0x00000000000c592b : jmp 0xc4cc6
0x00000000000c55ab : jmp 0xc4d48
0x00000000000c81c3 : jmp 0xc8189
0x00000000000c8208 : jmp 0xc81ce
0x00000000000c8f74 : jmp 0xc8fc1
0x00000000000cb51d : jmp 0xcad20
0x00000000000cf438 : jmp 0xcf34f
0x00000000000d5304 : jmp 0xd4fac
0x00000000000d5473 : jmp 0xd515c
0x00000000000d53cf : jmp 0xd51d7
0x00000000000d52ea : jmp 0xd5256
0x00000000000de595 : jmp 0xde5ad
0x00000000000df3c0 : jmp 0xdf385
0x00000000000e4eb8 : jmp 0xe4e7d
0x00000000000f1a41 : jmp 0xf1a03
0x00000000000f2255 : jmp 0xf221b
0x00000000000f24b5 : jmp 0xf247b
0x00000000000f854f : jmp 0xf8515
0x00000000000fc8c1 : jmp 0xfc887
0x00000000000f2fe1 : jmp 0xffffffff83582fe9
0x0000000000112fc1 : jmp 0xffffffff895df251
0x000000000018f708 : jmp 0xffffffff8a261413
0x000000000018f707 : jmp 0xffffffff8a261414
0x000000000018f630 : jmp 0xffffffff9126133b
0x000000000018f62f : jmp 0xffffffff9126133c
0x000000000018f5e8 : jmp 0xffffffffb22612f3
0x000000000018f5e7 : jmp 0xffffffffb22612f4
0x000000000011eca6 : jmp 0xffffffffc097c0b1
0x000000000004f552 : jmp 0xffffffffc24904a7
0x000000000004f551 : jmp 0xffffffffc24904a8
0x000000000000314e : jmp 0xffffffffc25d05fa
0x00000000000a9746 : jmp 0xffffffffc28ddf50
0x000000000002bfd3 : jmp 0xffffffffc302f926
0x00000000000a3673 : jmp 0xffffffffc30a367c
0x0000000000038b11 : jmp 0xffffffffc3131466
0x00000000000e4d02 : jmp 0xffffffffc3484d08
0x00000000000e4d93 : jmp 0xffffffffc3484d99
0x000000000007e13e : jmp 0xffffffffc3912e48
0x000000000010998e : jmp 0xffffffffc3e122e3
0x00000000001097ce : jmp 0xffffffffc409211f
0x000000000018fab8 : jmp 0xffffffffc82617c3
0x000000000018fa70 : jmp 0xfffffffffa26177b
0x00000000000a5033 : jmp 0xfffffffffff9d984
0x00000000000a5326 : jmp 0xfffffffffff9dc77
0x0000000000179575 : jmp qword ptr [eax]
0x00000000000478a7 : jmp qword ptr [r8]
0x0000000000187de7 : jmp qword ptr [rax + 0x10fffc55]
0x0000000000187d6f : jmp qword ptr [rax + 0x10fffc5e]
0x00000000001884a3 : jmp qword ptr [rax + 0x10fffc7b]
0x00000000001882b7 : jmp qword ptr [rax + 0x10fffc81]
0x0000000000179207 : jmp qword ptr [rax + 0x10fffc9d]
0x00000000001884db : jmp qword ptr [rax + 0x20fffc7c]
0x00000000001884d3 : jmp qword ptr [rax + 0x20fffc7d]
0x00000000001884cb : jmp qword ptr [rax + 0x20fffc7e]
0x00000000001884c3 : jmp qword ptr [rax + 0x20fffc7f]
0x00000000001884bb : jmp qword ptr [rax + 0x20fffc80]
0x00000000001889ab : jmp qword ptr [rax + 0x30fffca0]
0x000000000018802f : jmp qword ptr [rax - 0x1f0003c9]
0x000000000018792f : jmp qword ptr [rax - 0x1f000418]
0x0000000000179557 : jmp qword ptr [rax - 0x2f000d9a]
0x0000000000179257 : jmp qword ptr [rax - 0x3d]
0x00000000001795c3 : jmp qword ptr [rax - 0x3f000d97]
0x000000000017bb2f : jmp qword ptr [rax - 0x47000573]
0x000000000017959f : jmp qword ptr [rax - 0x4f000d98]
0x000000000017a02f : jmp qword ptr [rax - 9]
0x00000000000478a8 : jmp qword ptr [rax]
0x000000000018e37b : jmp qword ptr [rbp + 2]
0x0000000000189a93 : jmp qword ptr [rbx + rax*8]
0x0000000000002547 : jmp qword ptr [rbx]
0x0000000000187403 : jmp qword ptr [rcx + 0x21fffda7]
0x000000000018740b : jmp qword ptr [rcx + 0x21fffda8]
0x0000000000178857 : jmp qword ptr [rcx]
0x0000000000179c53 : jmp qword ptr [rdi + 0x12fff3c2]
0x000000000018d0e3 : jmp qword ptr [rdi + rbx + 2]
0x00000000000b59dd : jmp qword ptr [rdi]
0x0000000000187e37 : jmp qword ptr [rdx + 0x12fffc5b]
0x000000000018812f : jmp qword ptr [rdx + 0x12fffc84]
0x0000000000187c4b : jmp qword ptr [rdx + 0x32fffc62]
0x000000000017861b : jmp qword ptr [rdx - 0xa]
0x00000000000cd1ee : jmp qword ptr [rdx]
0x00000000001785ff : jmp qword ptr [rip + 0x20ffffed]
0x000000000018750f : jmp qword ptr [rsi + 0x11fffdb8]
0x000000000003c061 : jmp qword ptr [rsi + 0xf]
0x0000000000177b1b : jmp qword ptr [rsi - 0x11]
0x000000000004477d : jmp qword ptr [rsi - 0x70]
0x000000000000d058 : jmp qword ptr [rsi]
0x0000000000001b5e : jmp r10
0x000000000002e193 : jmp r14
0x000000000002dce3 : jmp r8
0x000000000014372d : jmp r9
0x00000000001872db : jmp rax
0x00000000000e373d : jmp rbx
0x000000000004cd5c : jmp rcx
0x0000000000127d5b : jmp rdi
0x0000000000001b5f : jmp rdx
0x000000000002e194 : jmp rsi
0x0000000000179c5b : jmp rsp
0x0000000000106a0e : jne 0x106a1f ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001085ad : jne 0x1085a6 ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000108627 : jne 0x108638 ; cmp qword ptr [rdi], 0 ; je 0x108641 ; ret
0x0000000000108698 : jne 0x1086a7 ; mov eax, 1 ; ret
0x00000000001086c8 : jne 0x1086d4 ; xor eax, eax ; ret
0x00000000001086f8 : jne 0x108704 ; xor eax, eax ; ret
0x0000000000108728 : jne 0x108734 ; xor eax, eax ; ret
0x0000000000108758 : jne 0x108764 ; xor eax, eax ; ret
0x0000000000108788 : jne 0x108794 ; xor eax, eax ; ret
0x00000000001087b8 : jne 0x1087c4 ; xor eax, eax ; ret
0x00000000001087e8 : jne 0x1087f4 ; xor eax, eax ; ret
0x0000000000108818 : jne 0x108824 ; xor eax, eax ; ret
0x0000000000108848 : jne 0x108854 ; xor eax, eax ; ret
0x0000000000108878 : jne 0x108884 ; xor eax, eax ; ret
0x00000000001088a8 : jne 0x1088b4 ; xor eax, eax ; ret
0x00000000001088d8 : jne 0x1088e4 ; xor eax, eax ; ret
0x0000000000108908 : jne 0x108914 ; xor eax, eax ; ret
0x0000000000108938 : jne 0x108944 ; xor eax, eax ; ret
0x0000000000108968 : jne 0x108974 ; xor eax, eax ; ret
0x0000000000108998 : jne 0x1089a4 ; xor eax, eax ; ret
0x00000000001089c8 : jne 0x1089d4 ; xor eax, eax ; ret
0x00000000001089f8 : jne 0x108a04 ; xor eax, eax ; ret
0x0000000000108a28 : jne 0x108a34 ; xor eax, eax ; ret
0x0000000000108a58 : jne 0x108a64 ; xor eax, eax ; ret
0x0000000000108ab8 : jne 0x108ac4 ; xor eax, eax ; ret
0x0000000000108ae8 : jne 0x108af4 ; xor eax, eax ; ret
0x0000000000108b18 : jne 0x108b24 ; xor eax, eax ; ret
0x0000000000108b48 : jne 0x108b54 ; xor eax, eax ; ret
0x0000000000108b78 : jne 0x108b84 ; xor eax, eax ; ret
0x0000000000108ba8 : jne 0x108bb4 ; xor eax, eax ; ret
0x0000000000108bd8 : jne 0x108be4 ; xor eax, eax ; ret
0x0000000000108c08 : jne 0x108c14 ; xor eax, eax ; ret
0x0000000000108c38 : jne 0x108c44 ; xor eax, eax ; ret
0x0000000000108c81 : jne 0x108c79 ; pop rdx ; pop r10 ; ret
0x0000000000108d75 : jne 0x108d83 ; ret
0x0000000000108f04 : jne 0x108ee3 ; ret
0x0000000000108f7f : jne 0x108f73 ; leave ; ret
0x000000000010907d : jne 0x109043 ; leave ; ret
0x0000000000109677 : jne 0x1096c7 ; add al, 0 ; ret
0x00000000001097cd : jne 0x1097bd ; mov rax, rdi ; ret
0x000000000010982c : jne 0x109821 ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000010998d : jne 0x10997d ; mov rax, r10 ; ret
0x000000000010a3e1 : jne 0x10a454 ; pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x000000000010ae38 : jne 0x10ae46 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010b95b : jne 0x10b936 ; lea rdi, qword ptr [rip - 0x174] ; call rax
0x000000000010c681 : jne 0x10c6f4 ; pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x000000000010ca0d : jne 0x10c9fb ; ret
0x000000000010caac : jne 0x10ca9b ; ret
0x000000000010cb25 : jne 0x10cb19 ; mov rax, rdi ; add rsp, 8 ; ret
0x0000000000110758 : jne 0x11071d ; jmp 0x110715
0x0000000000112393 : jne 0x112383 ; pop rbx ; ret
0x0000000000112292 : jne 0x112c2c ; mov eax, edx ; pop rbx ; ret
0x000000000011888d : jne 0x118867 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000001195b6 : jne 0x11962e ; add rsp, 8 ; ret
0x000000000011cdfc : jne 0x11ce02 ; ret
0x000000000011ce3c : jne 0x11ce30 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001219cd : jne 0x121a00 ; mov dword ptr [rsi], 0 ; ret
0x0000000000122225 : jne 0x122238 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000012232d : jne 0x1222c7 ; xor eax, eax ; pop rbx ; ret
0x0000000000125508 : jne 0x125512 ; ret
0x0000000000125b5e : jne 0x125be5 ; jmp 0x125b72
0x000000000012c527 : jne 0x12c513 ; pop rbx ; ret
0x000000000012c798 : jne 0x12c7a2 ; ret
0x000000000012dca3 : jne 0x12dc9a ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000012e140 : jne 0x12e101 ; jmp 0x12e109
0x000000000012f5a7 : jne 0x12f5b2 ; ret
0x000000000012f5e7 : jne 0x12f5f2 ; ret
0x000000000012f69a : jne 0x12f6a5 ; test r14d, r14d ; jne 0x12f6b9 ; call 0x12b8f9
0x000000000012f69f : jne 0x12f6b4 ; call 0x12b8f4
0x0000000000134a88 : jne 0x134ab5 ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000134b2b : jne 0x134b58 ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000136d13 : jne 0x136cfc ; add rsp, 0x58 ; ret
0x0000000000136d12 : jne 0x136cfd ; add rsp, 0x58 ; ret
0x0000000000136cfa : jne 0x136d28 ; xor eax, eax ; add rsp, 0x58 ; ret
0x0000000000136db4 : jne 0x136dc8 ; xor eax, eax ; add rsp, 0x58 ; ret
0x0000000000136e28 : jne 0x136e4e ; add rsp, 0x48 ; ret
0x00000000001379a8 : jne 0x1379b4 ; xor eax, eax ; ret
0x00000000001379d8 : jne 0x1379e4 ; xor eax, eax ; ret
0x0000000000137a08 : jne 0x137a14 ; xor eax, eax ; ret
0x0000000000137a38 : jne 0x137a44 ; xor eax, eax ; ret
0x0000000000137a68 : jne 0x137a74 ; xor eax, eax ; ret
0x0000000000137a98 : jne 0x137aa4 ; xor eax, eax ; ret
0x000000000015afe1 : jne 0x15b596 ; ret
0x000000000016217d : jne 0x1621a7 ; xor eax, eax ; ret
0x0000000000161771 : jne 0x1621ab ; xor eax, eax ; ret
0x0000000000161799 : jne 0x1621b7 ; xor eax, eax ; ret
0x0000000000162fbd : jne 0x162fe7 ; xor eax, eax ; ret
0x0000000000162da1 : jne 0x162feb ; xor eax, eax ; ret
0x0000000000162ff1 : jne 0x162ffa ; xor eax, eax ; ret
0x0000000000162dc7 : jne 0x162ffe ; xor eax, eax ; ret
0x0000000000163105 : jne 0x163096 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000001630d7 : jne 0x163096 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001630d6 : jne 0x163097 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000164864 : jne 0x164a78 ; xor eax, eax ; ret
0x0000000000164a69 : jne 0x164a89 ; xor eax, eax ; ret
0x0000000000164911 : jne 0x164a8d ; xor eax, eax ; ret
0x0000000000164a81 : jne 0x164a8e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000165096 : jne 0x1650a4 ; xor eax, eax ; ret
0x0000000000164f6d : jne 0x1650a6 ; ret
0x0000000000165dfd : jne 0x165dee ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000165e50 : jne 0x165e30 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000165f8d : jne 0x165f7d ; pop rbx ; ret
0x0000000000166059 : jne 0x166027 ; add rsp, 8 ; ret
0x0000000000166251 : jne 0x166244 ; pop rbx ; ret
0x0000000000166298 : jne 0x1662a3 ; ret
0x0000000000166b3c : jne 0x166b5f ; ret
0x000000000018da09 : jne 0x18da05 ; jmp rsp
0x0000000000195bdc : jne 0x195c4f ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019681d : jne 0x19680e ; jmp qword ptr [rdx]
0x00000000001a1915 : jne 0x1a190a ; jmp qword ptr [rdx]
0x00000000001b6fbe : jne 0x1b7012 ; idiv edi ; sbb al, 0xd ; xor al, byte ptr [rsi - 9] ; jmp qword ptr [rdx]
0x0000000000035334 : jne 0x35312 ; ret
0x00000000000362c7 : jne 0x362d6 ; add rsp, 8 ; ret
0x00000000000365a2 : jne 0x365b6 ; add rsp, 8 ; ret
0x0000000000036ab8 : jne 0x36ac3 ; ret
0x000000000000374e : jne 0x372c ; ret 0x975
0x00000000000375db : jne 0x375ed ; xor eax, eax ; nop ; ret
0x000000000003816f : jne 0x38164 ; xor eax, eax ; ret
0x0000000000038195 : jne 0x3817f ; mov eax, 1 ; ret
0x000000000003824f : jne 0x38244 ; xor eax, eax ; ret
0x0000000000038275 : jne 0x3825f ; mov eax, 1 ; ret
0x0000000000038517 : jne 0x38506 ; mov rax, rdx ; ret
0x0000000000038bff : jne 0x38bf6 ; mov rax, rdx ; ret
0x000000000003bf36 : jne 0x3c039 ; xor eax, eax ; pop rbx ; ret
0x000000000004651f : jne 0x4663d ; pop rbx ; ret
0x0000000000046fb8 : jne 0x46fb9 ; nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000046ffd : jne 0x46ff3 ; pop rbx ; ret
0x00000000000486eb : jne 0x486f3 ; pop rbx ; ret
0x0000000000049473 : jne 0x49458 ; lea rax, qword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x49499
0x00000000000498c1 : jne 0x498ad ; mov rax, rsi ; ret
0x0000000000049945 : jne 0x49925 ; mov rax, rsi ; ret
0x00000000000538e6 : jne 0x53949 ; mov eax, edx ; pop rbx ; ret
0x000000000005dad1 : jne 0x5dae6 ; mov rax, rbx ; pop rbx ; ret
0x000000000005e267 : jne 0x5e26e ; ret
0x000000000005e53c : jne 0x5e5b7 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000063a99 : jne 0x601be ; jmp 0x5fcdf
0x0000000000063a62 : jne 0x60224 ; jmp 0x5fcdf
0x0000000000063a39 : jne 0x6026b ; jmp 0x5fcdf
0x000000000006ea0a : jne 0x6ea85 ; nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000006f281 : jne 0x6f302 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000703a2 : jne 0x70855 ; ret
0x0000000000070eb3 : jne 0x70f38 ; pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000071052 : jne 0x710bd ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000715c9 : jne 0x71645 ; mov eax, edx ; pop rbx ; ret
0x0000000000071cfd : jne 0x71d40 ; ret
0x0000000000071df7 : jne 0x71e40 ; mov eax, esi ; ret
0x0000000000071ef7 : jne 0x71f40 ; mov eax, esi ; ret
0x0000000000072037 : jne 0x720b0 ; mov eax, edx ; pop rbx ; ret
0x0000000000072620 : jne 0x72695 ; mov eax, edx ; pop rbx ; ret
0x0000000000072782 : jne 0x72801 ; mov eax, edx ; pop rbx ; ret
0x0000000000072a77 : jne 0x72af0 ; mov eax, edx ; pop rbx ; ret
0x0000000000072bc2 : jne 0x72c27 ; pop rbx ; ret
0x00000000000742fc : jne 0x7437f ; mov eax, edx ; pop rbx ; ret
0x00000000000743c6 : jne 0x743d6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000074c11 : jne 0x74c03 ; ret
0x000000000007753c : jne 0x77543 ; pop rbx ; ret
0x0000000000078189 : jne 0x781fe ; mov eax, edx ; pop rbx ; ret
0x000000000007831b : jne 0x78399 ; mov eax, edx ; pop rbx ; ret
0x000000000007872b : jne 0x787a5 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000078bb2 : jne 0x78c2a ; mov eax, edx ; pop rbx ; ret
0x0000000000078d54 : jne 0x78dd4 ; mov eax, edx ; pop rbx ; ret
0x000000000007911c : jne 0x79139 ; mov eax, dword ptr [rdi + 0xc0] ; pop rbx ; ret
0x00000000000791e4 : jne 0x79236 ; mov eax, edx ; pop rbx ; ret
0x000000000007b69d : jne 0x7b6b8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007b8ea : jne 0x7b920 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007b9c1 : jne 0x7b9b3 ; ret
0x000000000007c942 : jne 0x7c92d ; pop rbx ; ret
0x000000000007c97c : jne 0x7c975 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007d106 : jne 0x7d0fb ; ret
0x000000000007b507 : jne 0x7d4e2 ; ret
0x000000000007d492 : jne 0x7d70b ; ret
0x000000000007e4fd : jne 0x7e4f1 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007e9c6 : jne 0x85501 ; ret
0x00000000000875d1 : jne 0x875c4 ; xor eax, eax ; ret
0x0000000000087644 : jne 0x8766b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008768b : jne 0x87683 ; ret
0x0000000000087b22 : jne 0x87b34 ; lea rax, qword ptr [rip + 5] ; ret
0x0000000000089703 : jne 0x8970e ; xor rax, rax ; ret
0x000000000008999e : jne 0x899b0 ; lea rax, qword ptr [rip + 9] ; ret
0x000000000008b671 : jne 0x8b686 ; add rsp, 8 ; ret
0x000000000008c949 : jne 0x8c9a5 ; xor rax, rax ; ret
0x000000000008c909 : jne 0x8c9c9 ; xor rax, rax ; ret
0x000000000008c9f8 : jne 0x8ca0b ; lea rax, qword ptr [rip + 0x1f] ; ret
0x000000000008d0fe : jne 0x8d0e3 ; ret
0x000000000008d2b3 : jne 0x8d19f ; mov rax, rdi ; ret
0x000000000008d209 : jne 0x8d1f5 ; mov rax, rdi ; ret
0x000000000008d7ce : jne 0x8d7e0 ; lea rax, qword ptr [rip + 0x79] ; ret
0x000000000008d831 : jne 0x8d843 ; lea rax, qword ptr [rip + 6] ; ret
0x000000000008fabe : jne 0x8fad0 ; lea rax, qword ptr [rip + 0x79] ; ret
0x000000000008fb21 : jne 0x8fb33 ; lea rax, qword ptr [rip + 6] ; ret
0x000000000009219e : jne 0x9218c ; xor eax, eax ; ret
0x00000000000921cf : jne 0x921e2 ; lea rax, qword ptr [rip + 0x6878] ; ret
0x0000000000092338 : jne 0x92210 ; ret
0x0000000000092279 : jne 0x92263 ; ret
0x0000000000094826 : jne 0x94811 ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000948d0 : jne 0x948df ; jmp 0x94899
0x0000000000097546 : jne 0x9753b ; ret
0x0000000000097592 : jne 0x97583 ; ret
0x00000000000975eb : jne 0x975d3 ; ret
0x0000000000097691 : jne 0x97685 ; mov rax, rdi ; ret
0x00000000000976e2 : jne 0x976cc ; xor eax, eax ; ret
0x0000000000097742 : jne 0x97735 ; mov qword ptr [rdx], rcx ; ret
0x000000000009780b : jne 0x97800 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000097878 : jne 0x97868 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000097aad : jne 0x97b38 ; xor eax, eax ; ret
0x0000000000097aea : jne 0x97b64 ; xor eax, eax ; ret
0x0000000000097f4c : jne 0x97ef0 ; mov rax, rdi ; ret
0x0000000000097f0d : jne 0x97f04 ; xor eax, eax ; ret
0x0000000000097f38 : jne 0x97f4e ; mov rax, rdi ; ret
0x0000000000097fd5 : jne 0x97fcc ; xor eax, eax ; ret
0x00000000000980bd : jne 0x980b3 ; ret
0x0000000000098552 : jne 0x9851f ; nop dword ptr [rax] ; ret
0x0000000000098759 : jne 0x98746 ; mov rax, rbx ; pop rbx ; ret
0x0000000000098a3c : jne 0x98a26 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000009e1ba : jne 0x9ea76 ; ret
0x000000000009f85d : jne 0xa0286 ; ret
0x00000000000a1da1 : jne 0xa1d92 ; ret
0x00000000000a1e51 : jne 0xa1e42 ; ret
0x00000000000a1fc1 : jne 0xa1fb6 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000a2111 : jne 0xa2106 ; sub rax, 1 ; ret
0x00000000000a28c4 : jne 0xa28cf ; mov dword ptr [rcx + 8], esi ; ret
0x00000000000a2917 : jne 0xa290b ; ret
0x00000000000a36e6 : jne 0xa3762 ; ret
0x00000000000a360f : jne 0xa3766 ; ret
0x00000000000a35ee : jne 0xa3768 ; xor eax, eax ; ret
0x00000000000a3798 : jne 0xa37ab ; lea rax, qword ptr [rip + 0xd48f] ; ret
0x00000000000a3b4e : jne 0xa3b1b ; ret
0x00000000000a3c59 : jne 0xa3c47 ; sub eax, r8d ; nop ; ret
0x00000000000a3d38 : jne 0xa3d26 ; mov rax, rbx ; pop rbx ; ret
0x00000000000a401b : jne 0xa4076 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a40fb : jne 0xa40cb ; ret
0x00000000000a40e5 : jne 0xa40db ; ret
0x00000000000a41c8 : jne 0xa41bc ; xor eax, eax ; ret
0x00000000000a4238 : jne 0xa4219 ; mov rax, rdi ; nop dword ptr [rax] ; ret
0x00000000000a4348 : jne 0xa435b ; lea rax, qword ptr [rip + 0xc84f] ; ret
0x00000000000a43a3 : jne 0xa439b ; ret
0x00000000000a558b : jne 0xa5546 ; nop dword ptr [rax] ; ret
0x00000000000a55cc : jne 0xa55c3 ; ret
0x00000000000aa98a : jne 0xaa9c1 ; or eax, 0x3d8d4800 ; ret
0x00000000000b07cc : jne 0xb0847 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000b0c27 : jne 0xb0bf0 ; ret
0x00000000000b0c54 : jne 0xb0c4b ; ret
0x00000000000b5599 : jne 0xb55b1 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000bdcd1 : jne 0xbdcf1 ; pop rbx ; ret
0x00000000000bdd6f : jne 0xbdd99 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000be482 : jne 0xbe433 ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x00000000000c3000 : jne 0xc2fce ; ret
0x00000000000c3047 : jne 0xc2fd2 ; mov eax, 0x7d00 ; ret
0x00000000000c310d : jne 0xc3143 ; ret
0x00000000000c6bb7 : jne 0xc6b98 ; ret
0x00000000000c6be1 : jne 0xc6bc5 ; ret
0x00000000000c6bf0 : jne 0xc6bdf ; mov eax, 1 ; ret
0x00000000000c6cd6 : jne 0xc6c7f ; mov eax, 1 ; ret
0x00000000000c6cc6 : jne 0xc6cae ; mov eax, 1 ; ret
0x00000000000d142b : jne 0xd1418 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d1783 : jne 0xd177e ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000000d2758 : jne 0xd2723 ; mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000d296d : jne 0xd28b9 ; pop rbx ; ret
0x00000000000d296c : jne 0xd28ba ; pop rbx ; ret
0x00000000000d2955 : jne 0xd28e1 ; pop rbx ; ret
0x00000000000d2922 : jne 0xd2921 ; xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xd28bb ; pop rbx ; ret
0x00000000000d3325 : jne 0xd32d3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e4eb1 : jne 0xe4e5b ; mov edx, dword ptr [r12 + 4] ; jmp 0xe4e84
0x00000000000ec9ef : jne 0xeca79 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000f48de : jne 0xf52e8 ; ret
0x00000000000f6358 : jne 0xf6340 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000f88d4 : jne 0xf888e ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0xf890c
0x00000000000f89a5 : jne 0xf895f ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0xf89de
0x00000000000f8f07 : jne 0xf8efe ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000f9f61 : jne 0xf9f35 ; xor eax, eax ; pop rbx ; ret
0x00000000000fa122 : jne 0xfa0f5 ; xor eax, eax ; pop rbx ; ret
0x0000000000102be6 : jno 0x102bee ; cmovne eax, edx ; ret
0x0000000000102be5 : jno 0x102bef ; cmovne eax, edx ; ret
0x0000000000102be6 : jno 0x102bf0 ; cmovne eax, edx ; ret
0x0000000000102be5 : jno 0x102bf1 ; cmovne eax, edx ; ret
0x0000000000161a2e : jno 0x161a3d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000187341 : jno 0x187344 ; call qword ptr [rax - 0x1f00048e]
0x0000000000187340 : jno 0x187345 ; call qword ptr [rax - 0x1f00048e]
0x0000000000188ae9 : jno 0x188ad6 ; jmp rsp
0x0000000000188e39 : jno 0x188e27 ; jmp rsp
0x00000000001940fe : jno 0x19410c ; ret
0x00000000001940fe : jno 0x194113 ; ret
0x000000000019638d : jno 0x19637e ; jmp qword ptr [rdx]
0x00000000001963d5 : jno 0x1963c6 ; jmp qword ptr [rdx]
0x0000000000196485 : jno 0x196476 ; jmp qword ptr [rdx]
0x0000000000199914 : jno 0x1998d2 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a6295 : jno 0x1a629e ; add byte ptr [rax], bl ; jns 0x1a6295 ; jmp qword ptr [rcx]
0x00000000001a62c5 : jno 0x1a62ce ; add byte ptr [rax + 0x79], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad7cd : jno 0x1ad7c6 ; jmp qword ptr [rdx]
0x00000000001ad84d : jno 0x1ad846 ; jmp qword ptr [rdx]
0x00000000001ad84c : jno 0x1ad847 ; jmp qword ptr [rdx]
0x00000000001b4609 : jno 0x1b4604 ; call qword ptr [rbx]
0x00000000000021c7 : jno 0x2214 ; ret 0x1dd4
0x0000000000038a04 : jno 0x38a56 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000003903 : jno 0x394d ; xchg eax, ebx ; and cl, ah ; ret
0x000000000005e53d : jno 0x5e5a1 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000078e31 : jno 0x78e3f ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00000000000a28c2 : jno 0xa28d0 ; jne 0xa28d1 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000000a28c7 : jno 0xa28d4 ; ret
0x00000000000b07cd : jno 0xb0831 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000b6ddc : jno 0xb6d69 ; ret 0xe283
0x00000000000b6eb6 : jno 0xb6e43 ; ret 0xe283
0x00000000000b6f8e : jno 0xb6f1b ; ret 0xe283
0x00000000000b706e : jno 0xb6ffb ; ret 0xe283
0x00000000000b718e : jno 0xb711b ; ret 0xe283
0x00000000000b726f : jno 0xb71fc ; ret 0xe283
0x00000000000b7306 : jno 0xb7293 ; ret 0xe283
0x00000000000b8169 : jno 0xb80f6 ; ret 0xe283
0x00000000000b8969 : jno 0xb88f6 ; ret 0xe283
0x00000000000b8a6a : jno 0xb89f7 ; ret 0xe283
0x00000000000b8b93 : jno 0xb8b20 ; ret 0xe283
0x00000000000ec730 : jno 0xec727 ; ret
0x000000000011238e : jnp 0x1123e0 ; test rdi, rdi ; jne 0x112388 ; pop rbx ; ret
0x0000000000128323 : jnp 0x12838f ; call rax
0x0000000000128d53 : jnp 0x128daf ; call rax
0x0000000000175725 : jnp 0x1756e2 ; ret
0x00000000001790c9 : jnp 0x1790c2 ; call qword ptr [rax - 0x1f000e83]
0x00000000001790c8 : jnp 0x1790c3 ; call qword ptr [rax - 0x1f000e83]
0x0000000000187361 : jnp 0x187360 ; call qword ptr [rax]
0x00000000001875d0 : jnp 0x18758e ; std ; call qword ptr [rcx]
0x00000000001875d0 : jnp 0x187592 ; std ; call qword ptr [rcx]
0x00000000001882e9 : jnp 0x1882e9 ; jmp rax
0x00000000001884a5 : jnp 0x1884a5 ; call qword ptr [rax]
0x00000000001884e9 : jnp 0x1884ed ; push qword ptr [rax + 0x7a] ; cld ; call qword ptr [rax]
0x000000000018d6d8 : jnp 0x18d719 ; clc ; jmp rsp
0x0000000000195739 : jnp 0x19572a ; jmp rcx
0x0000000000196f25 : jnp 0x196f16 ; jmp qword ptr [rdx]
0x0000000000196fa5 : jnp 0x196f96 ; jmp qword ptr [rdx]
0x0000000000196fa4 : jnp 0x196f97 ; jmp qword ptr [rdx]
0x0000000000196fed : jnp 0x196fde ; jmp qword ptr [rdx]
0x00000000001970d5 : jnp 0x1970c6 ; jmp qword ptr [rdx]
0x000000000019711d : jnp 0x19710e ; jmp qword ptr [rdx]
0x0000000000197165 : jnp 0x197156 ; jmp qword ptr [rdx]
0x00000000001a1ac5 : jnp 0x1a1aba ; jmp qword ptr [rdx]
0x00000000001a1b0d : jnp 0x1a1b02 ; jmp qword ptr [rdx]
0x00000000001a1b6d : jnp 0x1a1b62 ; jmp qword ptr [rdx]
0x00000000001a6ccd : jnp 0x1a6cd6 ; add byte ptr [rax], dl ; mov bh, -0xc ; call rdi
0x00000000001ade0d : jnp 0x1ade06 ; jmp qword ptr [rdx]
0x00000000000235db : jnp 0x235f7 ; call rax
0x000000000003c7bb : jnp 0x3c7ce ; mov qword ptr [rax + 0x60], rdx ; call qword ptr [rbx]
0x0000000000059ce4 : jnp 0x59c71 ; ret 0x348
0x000000000008734c : jnp 0x87389 ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000087414 : jnp 0x87451 ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x00000000000a4361 : jnp 0xa4345 ; or eax, dword ptr [rax] ; ret
0x00000000000a51a7 : jnp 0xa51df ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000c4ebb : jnp 0xc4ecf ; xchg eax, esp ; ret 0xb60f
0x00000000000c50eb : jnp 0xc50ff ; xchg eax, esp ; ret 0xb60f
0x00000000000c5357 : jnp 0xc536b ; xchg eax, esp ; ret 0xb60f
0x00000000000dc6c1 : jnp 0xdc6cf ; sti ; call rcx
0x00000000001049c7 : jns 0x10499f ; mov eax, edx ; sub eax, r9d ; ret
0x0000000000104b49 : jns 0x104b86 ; mov eax, r8d ; sub eax, r9d ; ret
0x000000000017405e : jns 0x1740e3 ; jo 0x17409d ; in eax, dx ; lcall ptr [rax + 0x32] ; in eax, dx ; jmp qword ptr [rax]
0x000000000017482e : jns 0x1747c4 ; ret 0xf869
0x000000000017482d : jns 0x1747c5 ; ret 0xf869
0x0000000000176c3e : jns 0x176c95 ; jmp 0x176bd6
0x000000000018de2d : jns 0x18de37 ; add byte ptr [rdx + rax], dh ; stc ; call rsp
0x0000000000196a3d : jns 0x196a2e ; jmp qword ptr [rdx]
0x0000000000196a3c : jns 0x196a2f ; jmp qword ptr [rdx]
0x0000000000196a85 : jns 0x196a76 ; jmp qword ptr [rdx]
0x0000000000196b4c : jns 0x196bcb ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a398d : jns 0x1a3983 ; jmp qword ptr [rdx]
0x00000000001a39d5 : jns 0x1a39cb ; jmp qword ptr [rdx]
0x00000000001a6299 : jns 0x1a6291 ; jmp qword ptr [rcx]
0x00000000001a62c9 : jns 0x1a62c1 ; jmp qword ptr [rcx]
0x00000000001a62c8 : jns 0x1a62c2 ; jmp qword ptr [rcx]
0x00000000001add0d : jns 0x1add06 ; jmp qword ptr [rdx]
0x0000000000001b29 : jns 0x1b34 ; ret
0x0000000000021b5d : jns 0x21a40 ; jmp 0x21b2e
0x0000000000002bbf : jns 0x2b8d ; clc ; ret
0x000000000000322f : jns 0x320a ; ret 0x5a51
0x0000000000036d4b : jns 0x36d61 ; add rsp, 0xd0 ; ret
0x000000000000389f : jns 0x38f2 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000086c16 : jns 0x86c67 ; mov esi, ebx ; mov rdi, r13 ; call rdx
0x0000000000087584 : jns 0x875c1 ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x000000000008d7d3 : jns 0x8d7d9 ; add byte ptr [rax], al ; ret
0x000000000008fac3 : jns 0x8fac9 ; add byte ptr [rax], al ; ret
0x00000000000c7009 : jns 0xc7013 ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000e579f : jns 0xe579f ; add byte ptr [rsp + rax - 0x77], dh ; ret 0xeeeb
0x00000000000f2eb4 : jns 0xf2ec2 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000f5ef3 : jns 0xf5e91 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000a1886 : jns 0xffffffffed3a1bec ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a18e8 : jns 0xffffffffed3a204e ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a1908 : jns 0xffffffffed3a216e ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000011c95c : jo 0x11c9e0 ; sub al, byte ptr [rax] ; test eax, eax ; je 0x11c970 ; ret
0x0000000000124f2e : jo 0x124f94 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012580b : jo 0x125871 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000129f27 : jo 0x129eb9 ; push rax ; adc dh, dh ; ret 0x7401
0x00000000001672c0 : jo 0x167335 ; in al, dx ; inc dword ptr [rax + 0x6c] ; in al, dx ; call qword ptr [rax]
0x0000000000174060 : jo 0x17409b ; in eax, dx ; lcall ptr [rax + 0x32] ; in eax, dx ; jmp qword ptr [rax]
0x00000000001758a4 : jo 0x17591e ; mov ebp, 0xfb67d10d ; ret
0x00000000001791f4 : jo 0x17918f ; cld ; jmp rax
0x0000000000179554 : jo 0x1795c3 ; jmp qword ptr [rax - 0x2f000d9a]
0x000000000018725c : jo 0x18727d ; sti ; inc dword ptr [rax + 0x19] ; sti ; call qword ptr [rax]
0x000000000018735c : jo 0x1873df ; sti ; inc eax ; jnp 0x187365 ; call qword ptr [rax]
0x00000000001874b0 : jo 0x187466 ; std ; inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rax
0x00000000001875f0 : jo 0x1875af ; std ; call qword ptr [rcx]
0x00000000001875f0 : jo 0x1875b3 ; std ; call qword ptr [rcx]
0x0000000000187754 : jo 0x187738 ; sti ; inc dword ptr [rax - 0x23] ; sti ; jmp qword ptr [rax]
0x00000000001877d0 : jo 0x1877a7 ; sti ; inc eax ; iretd ; sti ; call qword ptr [rax]
0x0000000000187948 : jo 0x187944 ; sti ; inc eax ; hlt ; sti ; call qword ptr [rax]
0x000000000018799c : jo 0x18799f ; sti ; inc eax ; sti ; sti ; call qword ptr [rax]
0x0000000000187b14 : jo 0x187b3c ; cld ; inc eax ; and ah, bh ; call qword ptr [rax]
0x0000000000187f78 : jo 0x187fd8 ; cld ; jmp rax
0x0000000000188270 : jo 0x1881f9 ; cld ; jmp rax
0x00000000001882e8 : jo 0x188368 ; cld ; jmp rax
0x00000000001884ec : jo 0x18856b ; cld ; call qword ptr [rax]
0x000000000018ec28 : jo 0x18ebeb ; cli ; call rsp
0x000000000018f045 : jo 0x18f04d ; add byte ptr [rax + rdx*8], al ; std ; jmp rsp
0x000000000018f044 : jo 0x18f04e ; add byte ptr [rax + rdx*8], al ; std ; jmp rsp
0x00000000001920d9 : jo 0x1920c7 ; jmp rbx
0x0000000000193ab0 : jo 0x193ae6 ; jmp 0x193ab6
0x00000000001958ec : jo 0x19595c ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000195efd : jo 0x195eee ; jmp qword ptr [rdx]
0x0000000000195f45 : jo 0x195f36 ; jmp qword ptr [rdx]
0x0000000000195f8d : jo 0x195f7e ; jmp qword ptr [rdx]
0x000000000019600d : jo 0x195ffe ; jmp qword ptr [rdx]
0x0000000000196055 : jo 0x196046 ; jmp qword ptr [rdx]
0x000000000019609d : jo 0x19608e ; jmp qword ptr [rdx]
0x000000000019613d : jo 0x19612e ; jmp qword ptr [rdx]
0x0000000000196185 : jo 0x196176 ; jmp qword ptr [rdx]
0x00000000001961cd : jo 0x1961be ; jmp qword ptr [rdx]
0x0000000000196245 : jo 0x196236 ; jmp qword ptr [rdx]
0x000000000019628d : jo 0x19627e ; jmp qword ptr [rdx]
0x00000000001962d5 : jo 0x1962c6 ; jmp qword ptr [rdx]
0x0000000000196345 : jo 0x196336 ; jmp qword ptr [rdx]
0x000000000019a6b4 : jo 0x19a691 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019c910 : jo 0x19c944 ; out dx, al ; call qword ptr [rsi]
0x00000000001a3030 : jo 0x1a3030 ; int1 ; jmp qword ptr [rcx]
0x00000000001a5b90 : jo 0x1a5bf8 ; hlt ; jmp qword ptr [rcx]
0x00000000001a6265 : jo 0x1a626e ; add al, ch ; js 0x1a6265 ; jmp qword ptr [rcx]
0x00000000001a6ec0 : jo 0x1a6e80 ; hlt ; jmp qword ptr [rcx]
0x00000000001a6fd0 : jo 0x1a6f93 ; hlt ; jmp qword ptr [rcx]
0x00000000001a8a20 : jo 0x1a8a50 ; cmc ; jmp qword ptr [rcx]
0x00000000001ab760 : jo 0x1ab739 ; cmc ; jmp qword ptr [rsi]
0x00000000001ac320 : jo 0x1ac308 ; cmc ; call qword ptr [rax]
0x00000000001ad785 : jo 0x1ad77e ; jmp qword ptr [rdx]
0x00000000001ad784 : jo 0x1ad77f ; jmp qword ptr [rdx]
0x00000000001add0c : jo 0x1add8a ; cmc ; jmp qword ptr [rdx]
0x00000000001b5d30 : jo 0x1b5d3c ; sti ; jmp qword ptr [rdx]
0x00000000000277b0 : jo 0x277ff ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002a6fe : jo 0x2a74d ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002b84e : jo 0x2b89d ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x0000000000046288 : jo 0x46293 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000006690 : jo 0x669b ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000071f6a : jo 0x71ef7 ; sar byte ptr [rax + 9], -0xd ; ret
0x0000000000071f69 : jo 0x71ef8 ; sar byte ptr [rax + 9], -0xd ; ret
0x00000000000737c7 : jo 0x737b3 ; ret
0x0000000000074c8a : jo 0x74ca2 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000007872c : jo 0x78790 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000007a664 : jo 0x7a6b5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007e406 : jo 0x7e418 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000085399 : jo 0x853fb ; pop rbp ; pop r12 ; ret
0x0000000000085458 : jo 0x85492 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c48a5 : jo 0xc48c7 ; jmp 0xc42f9
0x00000000000d2b1e : jo 0xd2b44 ; xor eax, eax ; ret
0x00000000000d9974 : jo 0xd99c5 ; mov ebx, eax ; mov edx, r8d ; jmp 0xd998a
0x00000000000ec227 : jo 0xec221 ; ret 0x4840
0x00000000000ec254 : jo 0xec2b3 ; ret
0x00000000000ec83e : jo 0xec89d ; ret
0x00000000000f1656 : jo 0xf167b ; ret
0x0000000000107005 : jp 0x10705c ; mov rsi, rdx ; call rax
0x000000000011c974 : jp 0x11c9a8 ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000012282d : jp 0x12288d ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000001283b2 : jp 0x1283be ; ret
0x00000000001283ca : jp 0x1283d6 ; ret
0x0000000000128c12 : jp 0x128c1e ; ret
0x0000000000128c2a : jp 0x128c36 ; ret
0x0000000000128c5a : jp 0x128c66 ; ret
0x000000000017405f : jp 0x1740d9 ; xor ch, ch ; lcall ptr [rax + 0x32] ; in eax, dx ; jmp qword ptr [rax]
0x000000000018735d : jp 0x187360 ; inc eax ; jnp 0x187364 ; call qword ptr [rax]
0x00000000001882b1 : jp 0x1882b1 ; jmp qword ptr [rax]
0x00000000001883f1 : jp 0x1883f1 ; call rsp
0x00000000001883ed : jp 0x1883f1 ; ljmp ptr [rsi] ; jp 0x1883f5 ; call rsp
0x00000000001883f0 : jp 0x1883f2 ; call rsp
0x00000000001884ad : jp 0x1884ad ; call qword ptr [rax]
0x00000000001884ed : jp 0x1884ed ; call qword ptr [rax]
0x000000000019427c : jp 0x194213 ; jmp 0x194282
0x0000000000196b05 : jp 0x196af6 ; jmp qword ptr [rdx]
0x0000000000196b4d : jp 0x196b3e ; jmp qword ptr [rdx]
0x0000000000196b95 : jp 0x196b86 ; jmp qword ptr [rdx]
0x0000000000196bad : jp 0x196bb5 ; add al, ah ; sahf ; in eax, dx ; call rbx
0x0000000000196c45 : jp 0x196c36 ; jmp qword ptr [rdx]
0x0000000000196c8d : jp 0x196c7e ; jmp qword ptr [rdx]
0x0000000000196cd5 : jp 0x196cc6 ; jmp qword ptr [rdx]
0x0000000000196d85 : jp 0x196d76 ; jmp qword ptr [rdx]
0x0000000000196dcd : jp 0x196dbe ; jmp qword ptr [rdx]
0x0000000000196e15 : jp 0x196e06 ; jmp qword ptr [rdx]
0x0000000000196e95 : jp 0x196e86 ; jmp qword ptr [rdx]
0x0000000000196edd : jp 0x196ece ; jmp qword ptr [rdx]
0x0000000000198421 : jp 0x19840d ; call rdx
0x00000000001a1c84 : jp 0x1a1d05 ; int1 ; jmp qword ptr [rdx]
0x00000000001a6c45 : jp 0x1a6c4e ; add byte ptr [rax], bh ; mov ch, -0xc ; call rdi
0x00000000001aa674 : jp 0x1aa663 ; hlt ; jmp qword ptr [rdx]
0x00000000001b4a61 : jp 0x1b4a5c ; call qword ptr [rdx]
0x0000000000002545 : jp 0x2529 ; jmp qword ptr [rbx]
0x0000000000002544 : jp 0x252a ; jmp qword ptr [rbx]
0x0000000000003902 : jp 0x397c ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000070eb4 : jp 0x70f19 ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000085340 : jp 0x8534a ; test rdx, rdi ; je 0x85359 ; pop rbx ; ret
0x000000000008d195 : jp 0x8d18f ; ret 0x7401
0x0000000000108cd3 : jrcxz 0x108c98 ; cmp r11d, 0xa ; je 0x108ce4 ; ret
0x000000000014d3ca : jrcxz 0x14d3c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014d3c9 : jrcxz 0x14d3c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014fe9a : jrcxz 0x14fe95 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014fe99 : jrcxz 0x14fe96 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001529ba : jrcxz 0x1529b5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001529b9 : jrcxz 0x1529b6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000174685 : jrcxz 0x1746df ; ret
0x000000000019d50d : jrcxz 0x19d515 ; add byte ptr [rax - 0x75], ah ; cld ; call qword ptr [rdx]
0x00000000001ac321 : jrcxz 0x1ac31a ; call qword ptr [rax]
0x00000000001ac339 : jrcxz 0x1ac332 ; jmp rbx
0x00000000001b0e0e : jrcxz 0x1b0e3a ; idiv bh ; sbb al, 0xd ; push rbp ; and esi, esi ; jmp qword ptr [rdx]
0x00000000001b1f81 : jrcxz 0x1b1f7b ; call qword ptr [rdi]
0x0000000000045e41 : jrcxz 0x45e4b ; inc dword ptr [rcx + 0xf] ; mov dh, 0x7d ; add cl, ch ; ret 0xffe1
0x00000000000975ec : jrcxz 0x975e3 ; ret
0x00000000000c104e : jrcxz 0xc103b ; ret
0x00000000000d142c : jrcxz 0xd147d ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f4165 : jrcxz 0xf419c ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f419f : jrcxz 0xf41d5 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000f5c89 : jrcxz 0xf5c29 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001049a2 : js 0x104924 ; sub eax, ecx ; ret
0x000000000010495a : js 0x1049b9 ; nop dword ptr [rax] ; sub eax, r8d ; ret
0x00000000001085ab : js 0x1085bd ; jne 0x1085a8 ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000010d194 : js 0x10d1a9 ; mov eax, edi ; and eax, 0xffffff ; ret
0x000000000010d214 : js 0x10d227 ; mov eax, edi ; shr eax, 0x18 ; ret
0x00000000001364b3 : js 0x1364c8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001877f0 : js 0x1877fc ; cld ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x000000000018dbd0 : js 0x18db76 ; clc ; jmp rsp
0x0000000000193cf8 : js 0x193d47 ; jmp 0x193cfe
0x0000000000194105 : js 0x194113 ; ret
0x00000000001950cc : js 0x195147 ; in al, dx ; jmp qword ptr [rdx]
0x0000000000195998 : js 0x195927 ; in eax, dx ; call qword ptr [rax]
0x00000000001969f5 : js 0x1969e6 ; jmp qword ptr [rdx]
0x0000000000198de8 : js 0x198dbe ; in eax, dx ; call rcx
0x000000000019b448 : js 0x19b474 ; out dx, al ; call qword ptr [rdx]
0x000000000019cf39 : js 0x19cf2b ; jmp qword ptr [rcx]
0x00000000001a0a28 : js 0x1a0a42 ; int1 ; jmp qword ptr [rcx]
0x00000000001a1db8 : js 0x1a1d8e ; int1 ; jmp qword ptr [rbx]
0x00000000001a3718 : js 0x1a36a3 ; jmp qword ptr [rax]
0x00000000001a6209 : js 0x1a6201 ; jmp qword ptr [rcx]
0x00000000001a6239 : js 0x1a6231 ; jmp qword ptr [rcx]
0x00000000001a6269 : js 0x1a6261 ; jmp qword ptr [rcx]
0x00000000001a6a25 : js 0x1a6a2e ; add al, cl ; scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a7908 : js 0x1a78ea ; hlt ; jmp qword ptr [rcx]
0x00000000001a8118 : js 0x1a8127 ; cmc ; call rsp
0x00000000001a8208 : js 0x1a8218 ; cmc ; jmp qword ptr [rcx]
0x00000000001a8af8 : js 0x1a8b29 ; cmc ; jmp qword ptr [rcx]
0x00000000001ab448 : js 0x1ab41f ; cmc ; jmp qword ptr [rsi]
0x00000000001ada1d : js 0x1ada16 ; jmp qword ptr [rdx]
0x00000000001ada65 : js 0x1ada5e ; jmp qword ptr [rdx]
0x00000000001adac5 : js 0x1adabe ; jmp qword ptr [rdx]
0x00000000001adb0d : js 0x1adb06 ; jmp qword ptr [rdx]
0x00000000001adac4 : js 0x1adb41 ; cmc ; jmp qword ptr [rdx]
0x00000000001adb55 : js 0x1adb4e ; jmp qword ptr [rdx]
0x00000000001adb9d : js 0x1adb96 ; jmp qword ptr [rdx]
0x00000000001adbe5 : js 0x1adbde ; jmp qword ptr [rdx]
0x00000000001adc2d : js 0x1adc26 ; jmp qword ptr [rdx]
0x00000000001adcc5 : js 0x1adcbe ; jmp qword ptr [rdx]
0x0000000000023290 : js 0x232b0 ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x0000000000027fb2 : js 0x28001 ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x0000000000002f61 : js 0x2f17 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000002fbb1 : js 0x2fb3d ; loopne 0x2fbc4 ; movzx eax, ax ; ret
0x000000000002fbf1 : js 0x2fb7d ; loopne 0x2fbfe ; movzx eax, ax ; ret
0x000000000002fc91 : js 0x2fc1d ; loopne 0x2fca0 ; movzx eax, ax ; ret
0x000000000002fd71 : js 0x2fcfa ; loopne 0x2fd7a ; ret
0x000000000002fdea : js 0x2fd73 ; loopne 0x2fdf3 ; ret
0x000000000002fdfa : js 0x2fd86 ; loopne 0x2fe0d ; movzx eax, ax ; ret
0x000000000002fe3a : js 0x2fdc6 ; loopne 0x2fe47 ; movzx eax, ax ; ret
0x000000000002feda : js 0x2fe66 ; loopne 0x2fee9 ; movzx eax, ax ; ret
0x0000000000032c78 : js 0x32c87 ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x9be9
0x000000000003d871 : js 0x3d8be ; cmp dword ptr [rdx + rsi*4], 0x40 ; jle 0x3d839 ; jmp 0x3d846
0x0000000000047534 : js 0x47576 ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x0000000000071f6d : js 0x71f7b ; ret
0x0000000000075980 : js 0x759bb ; add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000075ef9 : js 0x75f3e ; jmp 0x75ec3
0x0000000000084658 : js 0x84663 ; ret
0x00000000000921d4 : js 0x92242 ; add byte ptr [rax], al ; ret
0x00000000000a5483 : js 0xa54bb ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e1bdc : js 0xe1c19 ; ret 0x1472
0x00000000000e36aa : js 0xe369d ; sar byte ptr [rbp - 0x437f000d], 0x24 ; ret
0x00000000000e506c : js 0xe50be ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000e59c9 : js 0xe5a1b ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000f1685 : js 0xf1699 ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000f1df8 : js 0xf1e29 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f3d92 : js 0xf3da5 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000f69ec : js 0xf6a03 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000fe2f0 : js 0xfe27c ; loopne 0xfe303 ; movzx eax, ax ; ret
0x00000000000fe430 : js 0xfe3b9 ; loopne 0xfe439 ; ret
0x00000000000fe4d0 : js 0xfe45c ; loopne 0xfe4dd ; movzx eax, ax ; ret
0x00000000000fe7e0 : js 0xfe76c ; loopne 0xfe7ef ; movzx eax, ax ; ret
0x00000000000fec09 : js 0xfeb95 ; loopne 0xfec1c ; movzx eax, ax ; ret
0x00000000000fed29 : js 0xfecb2 ; loopne 0xfed32 ; ret
0x00000000000feda9 : js 0xfed35 ; loopne 0xfedb6 ; movzx eax, ax ; ret
0x00000000000ff069 : js 0xfeff5 ; loopne 0xff078 ; movzx eax, ax ; ret
0x00000000000a1828 : js 0xffffffffed3a1a8e ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a1856 : js 0xffffffffed3a1cbc ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a18a8 : js 0xffffffffed3a210e ; mov byte ptr [rdi + 9], ch ; ret
0x000000000008c3ed : lahf ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000001894f5 : lahf ; add byte ptr [rax], al ; jae 0x189539 ; jmp 0x189501
0x00000000001a9185 : lahf ; add dword ptr [rax], eax ; clc ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001a910d : lahf ; add dword ptr [rax], eax ; cmp byte ptr [rax], -0xb ; jmp qword ptr [rcx]
0x00000000001a9125 : lahf ; add dword ptr [rax], eax ; cwde ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001a913d : lahf ; add dword ptr [rax], eax ; mov al, 0x38 ; cmc ; jmp qword ptr [rcx]
0x000000000019752c : lahf ; jg 0x19751f ; jmp qword ptr [rdx]
0x0000000000188ae8 : lahf ; jno 0x188ad7 ; jmp rsp
0x0000000000176d63 : lahf ; mov dh, -0x39 ; ret 0xe71f
0x000000000013ea6d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018a059 : lahf ; out dx, al ; jmp rsp
0x00000000000f6132 : lahf ; ret
0x00000000000f6139 : lahf ; ret 0x3845
0x00000000000d1868 : lahf ; ret 0x82eb
0x00000000001745bd : lahf ; ret 0x871e
0x00000000000d5a98 : lahf ; ret 0xee9
0x0000000000065c6d : lahf ; rol byte ptr [rsi - 0x77], 0x2c ; cmp dword ptr [rcx], ebp ; ret
0x00000000000f52dd : lahf ; sub al, 0 ; ret
0x000000000013f0fd : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018ceed : lar eax, word ptr [rax] ; fisubr dword ptr [rbx - 9] ; call rsp
0x000000000018ceec : lar eax, word ptr fs:[rax] ; fisubr dword ptr [rbx - 9] ; call rsp
0x00000000001ad7c6 : lcall 0x1cfff571, 0xc0d ; jno 0x1ad7cd ; jmp qword ptr [rdx]
0x0000000000174063 : lcall ptr [rax + 0x32] ; in eax, dx ; jmp qword ptr [rax]
0x0000000000179803 : lcall ptr [rax - 0x72] ; call qword ptr [rdi]
0x000000000017a3b7 : lcall ptr [rax] ; xchg eax, esi ; hlt ; jmp qword ptr [rdx]
0x0000000000189beb : lcall ptr [rbp + rcx*8 + 0x5baf0000] ; out dx, al ; jmp rsp
0x00000000000a2307 : lcall ptr [rbx + 0x5d] ; mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x0000000000083841 : lcall ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x0000000000076503 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003bec6 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000adc54 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r14 ; ret
0x000000000002c11b : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000777b8 : lcall ptr [rbx + 0x5d] ; ret
0x00000000000d2ee8 : lcall ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x000000000018aad3 : lcall ptr [rbx + rbp - 0x35c7ffff] ; out dx, eax ; jmp rsp
0x0000000000189893 : lcall ptr [rbx + rsi*4 + 0x8df0000] ; in al, dx ; jmp rsp
0x000000000019d464 : lcall ptr [rbx - 0x12] ; jmp qword ptr [rdx]
0x000000000006e564 : lcall ptr [rbx - 0x77] ; call 0xffffffffc36326d0
0x000000000018aa0b : lcall ptr [rcx + rax*2 - 0x575bffff] ; out dx, eax ; jmp rsp
0x000000000018a073 : lcall ptr [rcx + rsi*8 - 0x5f6c0000] ; out dx, al ; jmp rsp
0x000000000017a4ac : lcall ptr [rcx - 0x65f6000c] ; hlt ; call qword ptr [rbx]
0x000000000018e863 : lcall ptr [rdi + rax*8 + 0x55f40002] ; cli ; call rsp
0x000000000018a8d3 : lcall ptr [rdi + rbx + 0x4c590001] ; out dx, eax ; jmp rsp
0x0000000000187c27 : lcall ptr [rdi + rbx*2 + 0x5f2cfffc] ; cld ; call rdx
0x000000000018e3d3 : lcall ptr [rdi - 0x34ebfffe] ; stc ; call rsp
0x0000000000179ce7 : lcall ptr [rdx] ; enter -0xd, -0x1f ; sal bl, 1 ; jmp qword ptr [rax]
0x000000000017896b : lcall ptr [rsi + 0x2bffeecb] ; ret
0x00000000001883eb : lcall ptr [rsi + 0x2efffc7a] ; jp 0x1883f7 ; call rsp
0x000000000018d37b : lcall ptr [rsi + rbp + 0x4c40002] ; clc ; jmp rsp
0x000000000018b9fb : lcall ptr [rsi + rbx*4 - 0x7663ffff] ; jmp rsp
0x000000000018e053 : lcall ptr [rsi + rcx*4 + 2] ; add byte ptr [rsi - 7], al ; jmp rsp
0x000000000017898f : lcall ptr [rsi - 0x33001135] ; ret 0xffee
0x000000000018d6d3 : lcall ptr [rsp + rax*2 + 0x3c7b0002] ; clc ; jmp rsp
0x000000000018abd3 : lcall ptr [rsp + rsi - 0x321affff] ; out dx, eax ; jmp rsp
0x000000000014da56 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000075c7f : lea eax, dword ptr [r8 - 1] ; ret
0x00000000000b0bf3 : lea eax, dword ptr [rax + rax - 1] ; ret
0x000000000008c974 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000008c984 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x0000000000097b24 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x000000000008c954 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000000bd692 : lea eax, dword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000075c80 : lea eax, dword ptr [rax - 1] ; ret
0x0000000000049476 : lea eax, dword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x49496
0x000000000012230b : lea eax, dword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000c6efa : lea eax, dword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000c6dfa : lea eax, dword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x0000000000118a9e : lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000009862a : lea eax, dword ptr [rbx - 1] ; pop rbx ; ret
0x00000000000a4431 : lea eax, dword ptr [rbx - 4] ; pop rbx ; ret
0x00000000000a235e : lea eax, dword ptr [rcx + 1] ; pop r12 ; ret
0x000000000008b42d : lea eax, dword ptr [rcx + rsi] ; ret
0x00000000000a1fc4 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000009f0ec : lea eax, dword ptr [rdi + 0x10] ; ret
0x000000000009f101 : lea eax, dword ptr [rdi + 0x11] ; ret
0x000000000009f11f : lea eax, dword ptr [rdi + 0x12] ; ret
0x000000000009f13f : lea eax, dword ptr [rdi + 0x13] ; ret
0x000000000009f162 : lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000009f181 : lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000009f1a1 : lea eax, dword ptr [rdi + 0x16] ; ret
0x000000000009f1c1 : lea eax, dword ptr [rdi + 0x17] ; ret
0x000000000009f1e4 : lea eax, dword ptr [rdi + 0x18] ; ret
0x000000000009f209 : lea eax, dword ptr [rdi + 0x19] ; ret
0x000000000009f227 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x000000000009f247 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x000000000009f263 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x000000000009f283 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x000000000009f2a3 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x000000000009f2c3 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x00000000000a0113 : lea eax, dword ptr [rdi + 0x20] ; ret
0x00000000000a0379 : lea eax, dword ptr [rdi + 0x40] ; ret
0x000000000009f03d : lea eax, dword ptr [rdi + 0xa] ; ret
0x000000000009f05d : lea eax, dword ptr [rdi + 0xb] ; ret
0x000000000009f07f : lea eax, dword ptr [rdi + 0xc] ; ret
0x000000000009f09f : lea eax, dword ptr [rdi + 0xd] ; ret
0x000000000009f0bf : lea eax, dword ptr [rdi + 0xe] ; ret
0x000000000009f0d9 : lea eax, dword ptr [rdi + 0xf] ; ret
0x00000000000974c4 : lea eax, dword ptr [rdi + 1] ; ret
0x00000000000974d8 : lea eax, dword ptr [rdi + 2] ; ret
0x00000000000974e3 : lea eax, dword ptr [rdi + 3] ; ret
0x00000000000974f7 : lea eax, dword ptr [rdi + 4] ; ret
0x0000000000097507 : lea eax, dword ptr [rdi + 5] ; ret
0x0000000000097517 : lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009efeb : lea eax, dword ptr [rdi + 6] ; ret
0x00000000000974b7 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000009f00a : lea eax, dword ptr [rdi + 8] ; ret
0x0000000000118380 : lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x000000000009f01f : lea eax, dword ptr [rdi + 9] ; ret
0x000000000008c9a9 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000008c9b9 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000008c8a3 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000094587 : lea eax, dword ptr [rdi + rax] ; ret
0x000000000013dc44 : lea eax, dword ptr [rdi + rcx] ; sub rax, rdx ; ret
0x0000000000118dd0 : lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000008b329 : lea eax, dword ptr [rdi + rsi] ; ret
0x00000000000a3f0e : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000a4071 : lea eax, dword ptr [rdi - 0xc] ; ret
0x00000000000a4091 : lea eax, dword ptr [rdi - 4] ; ret
0x00000000000a4081 : lea eax, dword ptr [rdi - 8] ; ret
0x000000000009ef73 : lea eax, dword ptr [rdi] ; ret
0x000000000015d83d : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000015d85d : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000015d87f : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000015d89f : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000015d8bf : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000015d74f : lea eax, dword ptr [rdx + 0xf] ; ret
0x000000000015d777 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000015d78d : lea eax, dword ptr [rdx + 2] ; ret
0x000000000015d7a5 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000015d7bb : lea eax, dword ptr [rdx + 4] ; ret
0x000000000015d7cd : lea eax, dword ptr [rdx + 5] ; ret
0x000000000015d7eb : lea eax, dword ptr [rdx + 6] ; ret
0x000000000015d6f7 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000015d7fd : lea eax, dword ptr [rdx + 8] ; ret
0x000000000015d81d : lea eax, dword ptr [rdx + 9] ; ret
0x0000000000118790 : lea eax, dword ptr [rdx + rax + 2] ; cmp rcx, rax ; sbb eax, eax ; ret
0x0000000000075c6e : lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000a26ac : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000002f7d5 : lea eax, dword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x0000000000083fe1 : lea eax, dword ptr [rdx - 0x10] ; add rsp, 8 ; ret
0x00000000000f7177 : lea eax, dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000018e045 : lea eax, dword ptr [rdx] ; add byte ptr [rbp - 7], al ; call rsp
0x000000000015d765 : lea eax, dword ptr [rdx] ; ret
0x0000000000089955 : lea eax, dword ptr [rip + 0x10f35] ; ret
0x00000000000876d5 : lea eax, dword ptr [rip + 0x11595] ; ret
0x0000000000021fb1 : lea eax, dword ptr [rip + 0x15b12c] ; ret
0x0000000000021fc1 : lea eax, dword ptr [rip + 0x15d103] ; ret
0x000000000008c9fb : lea eax, dword ptr [rip + 0x1f] ; ret
0x000000000011fae9 : lea eax, dword ptr [rip + 0x2a4bb1] ; pop rbx ; ret
0x000000000011fab1 : lea eax, dword ptr [rip + 0x2a4be9] ; pop rbx ; ret
0x000000000011f9f2 : lea eax, dword ptr [rip + 0x2a4ca8] ; pop rbx ; ret
0x00000000000fa190 : lea eax, dword ptr [rip + 0x2c8622] ; ret
0x00000000000f9fd0 : lea eax, dword ptr [rip + 0x2c87e2] ; ret
0x000000000007efec : lea eax, dword ptr [rip + 0x34076e] ; ret
0x000000000005da93 : lea eax, dword ptr [rip + 0x363e97] ; pop rbx ; pop rbp ; ret
0x000000000002235b : lea eax, dword ptr [rip + 0x3a289f] ; ret
0x00000000001095d5 : lea eax, dword ptr [rip + 0x42045] ; ret
0x0000000000109675 : lea eax, dword ptr [rip + 0x44a75] ; ret
0x00000000000921d2 : lea eax, dword ptr [rip + 0x6878] ; ret
0x000000000008d7d1 : lea eax, dword ptr [rip + 0x79] ; ret
0x00000000000921e6 : lea eax, dword ptr [rip + 0xb1524] ; ret
0x000000000008b8e2 : lea eax, dword ptr [rip + 0xb2318] ; ret
0x000000000008b552 : lea eax, dword ptr [rip + 0xb2588] ; ret
0x00000000000890c2 : lea eax, dword ptr [rip + 0xb48d8] ; ret
0x00000000000a37a3 : lea eax, dword ptr [rip + 0xbcd77] ; ret
0x00000000000a435f : lea eax, dword ptr [rip + 0xbde7b] ; ret
0x00000000000a4367 : lea eax, dword ptr [rip + 0xc0733] ; ret
0x000000000008d175 : lea eax, dword ptr [rip + 0xc0f85] ; ret
0x00000000000a434b : lea eax, dword ptr [rip + 0xc84f] ; ret
0x000000000008b235 : lea eax, dword ptr [rip + 0xce305] ; ret
0x000000000008d665 : lea eax, dword ptr [rip + 0xcea55] ; ret
0x0000000000088fb5 : lea eax, dword ptr [rip + 0xcedd5] ; ret
0x000000000008d785 : lea eax, dword ptr [rip + 0xd0145] ; ret
0x000000000008ca0f : lea eax, dword ptr [rip + 0xd418b] ; ret
0x00000000000a379b : lea eax, dword ptr [rip + 0xd48f] ; ret
0x000000000008ca17 : lea eax, dword ptr [rip + 0xd6913] ; ret
0x00000000000878c2 : lea eax, dword ptr [rip + 0xdb748] ; ret
0x0000000000087b25 : lea eax, dword ptr [rip + 5] ; ret
0x000000000008d834 : lea eax, dword ptr [rip + 6] ; ret
0x00000000000899a1 : lea eax, dword ptr [rip + 9] ; ret
0x000000000009371b : lea eax, dword ptr [rip - 0x511] ; ret
0x00000000001ab124 : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x14b0302] ; ret
0x00000000000c8205 : lea eax, dword ptr [rsi + rcx*8] ; jmp 0xc81d1
0x00000000000b12a1 : lea eax, dword ptr [rsi + rdx] ; add rsp, 0x18 ; ret
0x00000000000f854b : lea eax, dword ptr [rsp - 1] ; jmp 0xf8519
0x0000000000106635 : lea ebp, dword ptr [rbx] ; add al, ch ; ret
0x0000000000050a8c : lea ebx, dword ptr [rdi + rdi*8 - 1] ; dec dword ptr [rax - 0x77] ; ret 0x858b
0x00000000000512de : lea ebx, dword ptr [rdi + rdi*8 - 1] ; dec dword ptr [rax - 0x77] ; ret 0xa9e9
0x0000000000174e71 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, -0x69 ; xchg eax, esp ; ret
0x00000000000a45fa : lea ecx, dword ptr [rax + 1] ; call rbx
0x00000000000a4742 : lea ecx, dword ptr [rax + 4] ; call rbx
0x0000000000143790 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000009d82e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x000000000004bdac : lea ecx, dword ptr [rbx + rdx] ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x0000000000061b94 : lea ecx, dword ptr [rbx + rdx] ; add rdx, r14 ; call qword ptr [r11 + rax*8]
0x00000000000fea25 : lea ecx, dword ptr [rcx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000015b046 : lea ecx, dword ptr [rdx + 0x10] ; jne 0x15b599 ; ret
0x000000000015b344 : lea ecx, dword ptr [rdx + 0xa] ; jne 0x15b599 ; ret
0x000000000015b364 : lea ecx, dword ptr [rdx + 0xb] ; jne 0x15b599 ; ret
0x000000000015b384 : lea ecx, dword ptr [rdx + 0xc] ; jne 0x15b599 ; ret
0x000000000015b3a6 : lea ecx, dword ptr [rdx + 0xd] ; jne 0x15b599 ; ret
0x000000000015b3c6 : lea ecx, dword ptr [rdx + 0xe] ; jne 0x15b599 ; ret
0x000000000015b3e6 : lea ecx, dword ptr [rdx + 0xf] ; jne 0x15b599 ; ret
0x000000000015b23c : lea ecx, dword ptr [rdx + 1] ; jne 0x15b599 ; ret
0x000000000015b25e : lea ecx, dword ptr [rdx + 2] ; jne 0x15b599 ; ret
0x000000000015b284 : lea ecx, dword ptr [rdx + 3] ; jne 0x15b599 ; ret
0x000000000015b29c : lea ecx, dword ptr [rdx + 4] ; jne 0x15b599 ; ret
0x00000000000751d1 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000078246 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000015b2c2 : lea ecx, dword ptr [rdx + 5] ; jne 0x15b599 ; ret
0x000000000015b2e4 : lea ecx, dword ptr [rdx + 6] ; jne 0x15b599 ; ret
0x000000000015b302 : lea ecx, dword ptr [rdx + 7] ; jne 0x15b599 ; ret
0x000000000015afde : lea ecx, dword ptr [rdx + 8] ; jne 0x15b599 ; ret
0x000000000015b324 : lea ecx, dword ptr [rdx + 9] ; jne 0x15b599 ; ret
0x00000000000383e0 : lea ecx, dword ptr [rdx] ; jmp 0x38436
0x0000000000039b70 : lea ecx, dword ptr [rdx] ; jmp 0x39bc6
0x00000000000a4afb : lea ecx, dword ptr [rsp + 0x28] ; call rbx
0x00000000000a4b89 : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000001252fe : lea edi, dword ptr [rbp + 0x10] ; call rax
0x0000000000128d52 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x0000000000128322 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x0000000000124745 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x000000000008d206 : lea edi, dword ptr [rdi + 0x10] ; jne 0x8d1f8 ; mov rax, rdi ; ret
0x0000000000092276 : lea edi, dword ptr [rdi + 0x10] ; jne 0x92266 ; ret
0x000000000009e39d : lea edi, dword ptr [rdi + 0x10] ; jne 0x9ea79 ; ret
0x000000000009fa81 : lea edi, dword ptr [rdi + 0x10] ; jne 0xa0289 ; ret
0x000000000009e3c0 : lea edi, dword ptr [rdi + 0x11] ; jne 0x9ea79 ; ret
0x000000000009faa4 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa0289 ; ret
0x000000000009e3e5 : lea edi, dword ptr [rdi + 0x12] ; jne 0x9ea79 ; ret
0x000000000009fac9 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa0289 ; ret
0x000000000009e403 : lea edi, dword ptr [rdi + 0x13] ; jne 0x9ea79 ; ret
0x000000000009faf7 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa0289 ; ret
0x000000000009e423 : lea edi, dword ptr [rdi + 0x14] ; jne 0x9ea79 ; ret
0x000000000009fb27 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa0289 ; ret
0x000000000009e446 : lea edi, dword ptr [rdi + 0x15] ; jne 0x9ea79 ; ret
0x000000000009fb5a : lea edi, dword ptr [rdi + 0x15] ; jne 0xa0289 ; ret
0x000000000009e465 : lea edi, dword ptr [rdi + 0x16] ; jne 0x9ea79 ; ret
0x000000000009fb89 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa0289 ; ret
0x000000000009e485 : lea edi, dword ptr [rdi + 0x17] ; jne 0x9ea79 ; ret
0x000000000009fbb9 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa0289 ; ret
0x000000000009e4a5 : lea edi, dword ptr [rdi + 0x18] ; jne 0x9ea79 ; ret
0x000000000009fbe9 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa0289 ; ret
0x000000000009e4c8 : lea edi, dword ptr [rdi + 0x19] ; jne 0x9ea79 ; ret
0x000000000009fc1c : lea edi, dword ptr [rdi + 0x19] ; jne 0xa0289 ; ret
0x000000000009e4fd : lea edi, dword ptr [rdi + 0x1a] ; jne 0x9ea79 ; ret
0x000000000009fc51 : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa0289 ; ret
0x000000000009e52b : lea edi, dword ptr [rdi + 0x1b] ; jne 0x9ea79 ; ret
0x000000000009fc7f : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa0289 ; ret
0x000000000009e55b : lea edi, dword ptr [rdi + 0x1c] ; jne 0x9ea79 ; ret
0x000000000009fcaf : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa0289 ; ret
0x000000000009e587 : lea edi, dword ptr [rdi + 0x1d] ; jne 0x9ea79 ; ret
0x000000000009fcdb : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa0289 ; ret
0x000000000009e5b7 : lea edi, dword ptr [rdi + 0x1e] ; jne 0x9ea79 ; ret
0x000000000009fd0b : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa0289 ; ret
0x000000000009e5e7 : lea edi, dword ptr [rdi + 0x1f] ; jne 0x9ea79 ; ret
0x000000000009fd3b : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa0289 ; ret
0x000000000009e617 : lea edi, dword ptr [rdi + 0x20] ; jne 0x9ea79 ; ret
0x000000000009fd6b : lea edi, dword ptr [rdi + 0x20] ; jne 0xa0289 ; ret
0x000000000009e2e3 : lea edi, dword ptr [rdi + 0xa] ; jne 0x9ea79 ; ret
0x000000000009f987 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa0289 ; ret
0x000000000009e301 : lea edi, dword ptr [rdi + 0xb] ; jne 0x9ea79 ; ret
0x000000000009f9b5 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa0289 ; ret
0x000000000009e321 : lea edi, dword ptr [rdi + 0xc] ; jne 0x9ea79 ; ret
0x000000000009f9d5 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa0289 ; ret
0x000000000009e343 : lea edi, dword ptr [rdi + 0xd] ; jne 0x9ea79 ; ret
0x000000000009f9f7 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa0289 ; ret
0x000000000009e363 : lea edi, dword ptr [rdi + 0xe] ; jne 0x9ea79 ; ret
0x000000000009fa27 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa0289 ; ret
0x000000000009e383 : lea edi, dword ptr [rdi + 0xf] ; jne 0x9ea79 ; ret
0x000000000009fa57 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa0289 ; ret
0x000000000009e1b7 : lea edi, dword ptr [rdi + 1] ; jne 0x9ea79 ; ret
0x000000000009f85a : lea edi, dword ptr [rdi + 1] ; jne 0xa0289 ; ret
0x000000000009e1db : lea edi, dword ptr [rdi + 2] ; jne 0x9ea79 ; ret
0x000000000009f87f : lea edi, dword ptr [rdi + 2] ; jne 0xa0289 ; ret
0x000000000009e1fe : lea edi, dword ptr [rdi + 3] ; jne 0x9ea79 ; ret
0x000000000009f8a2 : lea edi, dword ptr [rdi + 3] ; jne 0xa0289 ; ret
0x000000000009e219 : lea edi, dword ptr [rdi + 4] ; jne 0x9ea79 ; ret
0x000000000009f8bd : lea edi, dword ptr [rdi + 4] ; jne 0xa0289 ; ret
0x000000000009e23c : lea edi, dword ptr [rdi + 5] ; jne 0x9ea79 ; ret
0x000000000009f8e0 : lea edi, dword ptr [rdi + 5] ; jne 0xa0289 ; ret
0x000000000009e261 : lea edi, dword ptr [rdi + 6] ; jne 0x9ea79 ; ret
0x000000000009f905 : lea edi, dword ptr [rdi + 6] ; jne 0xa0289 ; ret
0x000000000009e27f : lea edi, dword ptr [rdi + 7] ; jne 0x9ea79 ; ret
0x000000000009f923 : lea edi, dword ptr [rdi + 7] ; jne 0xa0289 ; ret
0x000000000009e29b : lea edi, dword ptr [rdi + 8] ; jne 0x9ea79 ; ret
0x000000000009f93f : lea edi, dword ptr [rdi + 8] ; jne 0xa0289 ; ret
0x000000000009e2be : lea edi, dword ptr [rdi + 9] ; jne 0x9ea79 ; ret
0x000000000009f962 : lea edi, dword ptr [rdi + 9] ; jne 0xa0289 ; ret
0x0000000000045f0e : lea edi, dword ptr [rdi + rbp*8] ; call 0x92205
0x0000000000197574 : lea edi, dword ptr [rdi - 0x13] ; jmp qword ptr [rdx]
0x0000000000112d51 : lea edi, dword ptr [rip + 0x2b1229] ; call rax
0x0000000000112486 : lea edi, dword ptr [rip + 0x2b1a94] ; call rax
0x0000000000137b95 : lea edi, dword ptr [rip + 0x48b98] ; call 0x73e28
0x00000000001214d1 : lea edi, dword ptr [rip + 0x5f34d] ; call 0x5d7c8
0x000000000010b95e : lea edi, dword ptr [rip - 0x174] ; call rax
0x0000000000021f5c : lea edi, dword ptr [rsi + rdx] ; call rax
0x000000000019b5c6 : lea edi, dword ptr [rsp + rdi*8 - 1] ; sbb al, 0xd ; jl 0x19b5d4 ; jmp qword ptr [rdx]
0x0000000000037b79 : lea edx, dword ptr [rax + 1] ; mov dword ptr [rip + 0x38751e], edx ; ret
0x000000000004e6ef : lea edx, dword ptr [rax + 8] ; mov qword ptr [r15 + 8], rdx ; jmp 0x4e6c2
0x0000000000143864 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000097821 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x00000000000fe1f7 : lea edx, dword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000075dfd : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000087bb6 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x0000000000143c58 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000121e91 : lea edx, dword ptr [rip + 0x29cce9] ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000007512c : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000000f88d3 : lea esi, dword ptr [rbp - 0x50] ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0xf890d
0x00000000000f89a4 : lea esi, dword ptr [rbp - 0x50] ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0xf89df
0x0000000000078e30 : lea esi, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000002eb2 : lea esi, dword ptr [rdi] ; ret 0x793b
0x00000000000462d5 : lea esi, dword ptr [rip + 0x195] ; call rax
0x000000000007033a : lea esi, dword ptr [rip + 0x30] ; call rax
0x000000000007cc0a : lea esi, dword ptr [rip - 0x1780] ; call rax
0x000000000007d00a : lea esi, dword ptr [rip - 0x1b80] ; call rax
0x000000000007b6f2 : lea esi, dword ptr [rip - 0x268] ; call rax
0x0000000000070696 : lea esi, dword ptr [rip - 0x32c] ; call rax
0x000000000007b95a : lea esi, dword ptr [rip - 0x4d0] ; call rax
0x000000000012e3b5 : lea esi, dword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000012ddb2 : lea esi, dword ptr [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000122765 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000003b86e : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000006db28 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000001acc64 : lea esp, dword ptr [rdi - 0xb] ; jmp qword ptr [rdx]
0x00000000000b4815 : lea esp, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000087bb5 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014378f : lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000000383df : lea r9, qword ptr [rdx] ; jmp 0x38437
0x0000000000039b6f : lea r9, qword ptr [rdx] ; jmp 0x39bc7
0x00000000000a4afa : lea r9, qword ptr [rsp + 0x28] ; call rbx
0x00000000000a4b88 : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000f854a : lea rax, qword ptr [r12 - 1] ; jmp 0xf851a
0x00000000000a235d : lea rax, qword ptr [r9 + 1] ; pop r12 ; ret
0x00000000000c3261 : lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000008c973 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008c983 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000097b23 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008c953 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000bd691 : lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000049475 : lea rax, qword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x49497
0x000000000012230a : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000c6ef9 : lea rax, qword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000c6df9 : lea rax, qword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x0000000000098629 : lea rax, qword ptr [rbx - 1] ; pop rbx ; ret
0x00000000000a4430 : lea rax, qword ptr [rbx - 4] ; pop rbx ; ret
0x000000000008b42c : lea rax, qword ptr [rcx + rsi] ; ret
0x00000000000a1fc3 : lea rax, qword ptr [rcx - 1] ; ret
0x000000000009f0eb : lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009f100 : lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009f11e : lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009f13e : lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009f161 : lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009f180 : lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009f1a0 : lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009f1c0 : lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009f1e3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009f208 : lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000009f226 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009f246 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000009f262 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000009f282 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009f2a2 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009f2c2 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a0112 : lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a0378 : lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009f03c : lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009f05c : lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009f07e : lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009f09e : lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000009f0be : lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000009f0d8 : lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000974c3 : lea rax, qword ptr [rdi + 1] ; ret
0x00000000000974d7 : lea rax, qword ptr [rdi + 2] ; ret
0x00000000000974e2 : lea rax, qword ptr [rdi + 3] ; ret
0x00000000000974f6 : lea rax, qword ptr [rdi + 4] ; ret
0x0000000000097506 : lea rax, qword ptr [rdi + 5] ; ret
0x0000000000097516 : lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009efea : lea rax, qword ptr [rdi + 6] ; ret
0x00000000000974b6 : lea rax, qword ptr [rdi + 7] ; ret
0x000000000009f009 : lea rax, qword ptr [rdi + 8] ; ret
0x000000000009f01e : lea rax, qword ptr [rdi + 9] ; ret
0x000000000008c9a8 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008c9b8 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008c8a2 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000094586 : lea rax, qword ptr [rdi + rax] ; ret
0x000000000013dc43 : lea rax, qword ptr [rdi + rcx] ; sub rax, rdx ; ret
0x0000000000118dcf : lea rax, qword ptr [rdi + rsi + 8] ; ret
0x000000000008b328 : lea rax, qword ptr [rdi + rsi] ; ret
0x00000000000a3f0d : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a4070 : lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000a4090 : lea rax, qword ptr [rdi - 4] ; ret
0x00000000000a4080 : lea rax, qword ptr [rdi - 8] ; ret
0x000000000009ef72 : lea rax, qword ptr [rdi] ; ret
0x000000000015d83c : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000015d85c : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000015d87e : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000015d89e : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000015d8be : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000015d74e : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000015d776 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000015d78c : lea rax, qword ptr [rdx + 2] ; ret
0x000000000015d7a4 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000015d7ba : lea rax, qword ptr [rdx + 4] ; ret
0x000000000015d7cc : lea rax, qword ptr [rdx + 5] ; ret
0x000000000015d7ea : lea rax, qword ptr [rdx + 6] ; ret
0x000000000015d6f6 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000015d7fc : lea rax, qword ptr [rdx + 8] ; ret
0x000000000015d81c : lea rax, qword ptr [rdx + 9] ; ret
0x000000000002f7d4 : lea rax, qword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x0000000000083fe0 : lea rax, qword ptr [rdx - 0x10] ; add rsp, 8 ; ret
0x000000000015d764 : lea rax, qword ptr [rdx] ; ret
0x0000000000089954 : lea rax, qword ptr [rip + 0x10f35] ; ret
0x00000000000876d4 : lea rax, qword ptr [rip + 0x11595] ; ret
0x0000000000021fb0 : lea rax, qword ptr [rip + 0x15b12c] ; ret
0x0000000000021fc0 : lea rax, qword ptr [rip + 0x15d103] ; ret
0x000000000008c9fa : lea rax, qword ptr [rip + 0x1f] ; ret
0x000000000011fae8 : lea rax, qword ptr [rip + 0x2a4bb1] ; pop rbx ; ret
0x000000000011fab0 : lea rax, qword ptr [rip + 0x2a4be9] ; pop rbx ; ret
0x000000000011f9f1 : lea rax, qword ptr [rip + 0x2a4ca8] ; pop rbx ; ret
0x00000000000fa18f : lea rax, qword ptr [rip + 0x2c8622] ; ret
0x00000000000f9fcf : lea rax, qword ptr [rip + 0x2c87e2] ; ret
0x000000000007efeb : lea rax, qword ptr [rip + 0x34076e] ; ret
0x000000000005da92 : lea rax, qword ptr [rip + 0x363e97] ; pop rbx ; pop rbp ; ret
0x000000000002235a : lea rax, qword ptr [rip + 0x3a289f] ; ret
0x00000000001095d4 : lea rax, qword ptr [rip + 0x42045] ; ret
0x0000000000109674 : lea rax, qword ptr [rip + 0x44a75] ; ret
0x00000000000921d1 : lea rax, qword ptr [rip + 0x6878] ; ret
0x000000000008d7d0 : lea rax, qword ptr [rip + 0x79] ; ret
0x00000000000921e5 : lea rax, qword ptr [rip + 0xb1524] ; ret
0x000000000008b8e1 : lea rax, qword ptr [rip + 0xb2318] ; ret
0x000000000008b551 : lea rax, qword ptr [rip + 0xb2588] ; ret
0x00000000000890c1 : lea rax, qword ptr [rip + 0xb48d8] ; ret
0x00000000000a37a2 : lea rax, qword ptr [rip + 0xbcd77] ; ret
0x00000000000a435e : lea rax, qword ptr [rip + 0xbde7b] ; ret
0x00000000000a4366 : lea rax, qword ptr [rip + 0xc0733] ; ret
0x000000000008d174 : lea rax, qword ptr [rip + 0xc0f85] ; ret
0x00000000000a434a : lea rax, qword ptr [rip + 0xc84f] ; ret
0x000000000008b234 : lea rax, qword ptr [rip + 0xce305] ; ret
0x000000000008d664 : lea rax, qword ptr [rip + 0xcea55] ; ret
0x0000000000088fb4 : lea rax, qword ptr [rip + 0xcedd5] ; ret
0x000000000008d784 : lea rax, qword ptr [rip + 0xd0145] ; ret
0x000000000008ca0e : lea rax, qword ptr [rip + 0xd418b] ; ret
0x00000000000a379a : lea rax, qword ptr [rip + 0xd48f] ; ret
0x000000000008ca16 : lea rax, qword ptr [rip + 0xd6913] ; ret
0x00000000000878c1 : lea rax, qword ptr [rip + 0xdb748] ; ret
0x0000000000087b24 : lea rax, qword ptr [rip + 5] ; ret
0x000000000008d833 : lea rax, qword ptr [rip + 6] ; ret
0x00000000000899a0 : lea rax, qword ptr [rip + 9] ; ret
0x000000000009371a : lea rax, qword ptr [rip - 0x511] ; ret
0x00000000000c8204 : lea rax, qword ptr [rsi + rcx*8] ; jmp 0xc81d2
0x00000000000b12a0 : lea rax, qword ptr [rsi + rdx] ; add rsp, 0x18 ; ret
0x00000000000a4049 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x000000000009d82d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a45f9 : lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000a4741 : lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000fea24 : lea rcx, qword ptr [rcx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000078245 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000021f5b : lea rdi, qword ptr [r14 + rdx] ; call rax
0x0000000000045f0d : lea rdi, qword ptr [r15 + rbp*8] ; call 0x92206
0x00000000001252fd : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000128d51 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000128321 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000124744 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000008d205 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x8d1f9 ; mov rax, rdi ; ret
0x0000000000092275 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x92267 ; ret
0x0000000000112d50 : lea rdi, qword ptr [rip + 0x2b1229] ; call rax
0x0000000000112485 : lea rdi, qword ptr [rip + 0x2b1a94] ; call rax
0x0000000000137b94 : lea rdi, qword ptr [rip + 0x48b98] ; call 0x73e29
0x00000000001214d0 : lea rdi, qword ptr [rip + 0x5f34d] ; call 0x5d7c9
0x000000000010b95d : lea rdi, qword ptr [rip - 0x174] ; call rax
0x0000000000143863 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000004e6ee : lea rdx, qword ptr [rax + 8] ; mov qword ptr [r15 + 8], rdx ; jmp 0x4e6c3
0x00000000000fe1f6 : lea rdx, qword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000143c57 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000000462d4 : lea rsi, qword ptr [rip + 0x195] ; call rax
0x0000000000070339 : lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007cc09 : lea rsi, qword ptr [rip - 0x1780] ; call rax
0x000000000007d009 : lea rsi, qword ptr [rip - 0x1b80] ; call rax
0x000000000007b6f1 : lea rsi, qword ptr [rip - 0x268] ; call rax
0x0000000000070695 : lea rsi, qword ptr [rip - 0x32c] ; call rax
0x000000000007b959 : lea rsi, qword ptr [rip - 0x4d0] ; call rax
0x000000000012e3b4 : lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000012ddb1 : lea rsi, qword ptr [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000122764 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000003b86d : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000007fd72 : leave ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000001aba9d : leave ; add dword ptr [rax], eax ; lock cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rsi]
0x000000000018c005 : leave ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000019548 : leave ; call qword ptr [rdi]
0x0000000000002bc8 : leave ; clc ; ret
0x000000000019b7c4 : leave ; cli ; in eax, dx ; jmp qword ptr [rdx]
0x000000000008b5f6 : leave ; cmove rax, rdx ; ret
0x000000000013da49 : leave ; cmp ch, byte ptr [rcx] ; ret 0xca39
0x000000000002d3f6 : leave ; je 0x2d3fe ; call rcx
0x000000000005e219 : leave ; je 0x5e224 ; ret
0x000000000009859a : leave ; je 0x98560 ; mov byte ptr [r10 + 1], 0 ; ret
0x00000000000bda3f : leave ; jmp 0xbda07
0x0000000000097591 : leave ; jne 0x97584 ; ret
0x00000000000a1da0 : leave ; jne 0xa1d93 ; ret
0x00000000000a1e50 : leave ; jne 0xa1e43 ; ret
0x00000000000a2110 : leave ; jne 0xa2107 ; sub rax, 1 ; ret
0x00000000000a40e4 : leave ; jne 0xa40dc ; ret
0x00000000001049c6 : leave ; jns 0x1049a0 ; mov eax, edx ; sub eax, r9d ; ret
0x0000000000104b48 : leave ; jns 0x104b87 ; mov eax, r8d ; sub eax, r9d ; ret
0x000000000013dc42 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, rdx ; ret
0x000000000009d311 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a3b49 : leave ; mov dword ptr [r8 + 4], ecx ; jne 0xa3b20 ; ret
0x0000000000118043 : leave ; mov dword ptr [rdx], ebp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000a2914 : leave ; mov dword ptr [rdx], ecx ; jne 0xa290e ; ret
0x00000000000973ef : leave ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000010fee3 : leave ; or ch, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000039a3e : leave ; ret
0x00000000001086c3 : leave ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1086d9 ; xor eax, eax ; ret
0x00000000001086f3 : leave ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108709 ; xor eax, eax ; ret
0x0000000000108723 : leave ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108739 ; xor eax, eax ; ret
0x0000000000108753 : leave ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108769 ; xor eax, eax ; ret
0x000000000017a338 : leave ; xchg eax, esi ; hlt ; call rbx
0x000000000007a776 : les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000192740 : ljmp 0x100d1cff, -0x1579 ; jmp qword ptr [rdx]
0x00000000000b9002 : ljmp 0x245c8b4c, 0xf50 ; ret 0x144
0x0000000000192cd8 : ljmp 0x300d1cff, -0x1576 ; jmp qword ptr [rdx]
0x00000000001929d8 : ljmp 0x310d1cff, -0x1578 ; jmp qword ptr [rdx]
0x0000000000192788 : ljmp 0x320d1cff, -0x1579 ; jmp qword ptr [rdx]
0x0000000000087451 : ljmp 0x3f8c148, 0x148 ; ret 0x6348
0x0000000000190c48 : ljmp 0x420d1cff, -0x1605 ; jmp qword ptr [rdx]
0x00000000001923b0 : ljmp 0x430d1cff, -0x1593 ; jmp qword ptr [rdx]
0x0000000000092825 : ljmp 0x48d0094c, 0x789 ; pop rbx ; pop rbp ; ret
0x000000000002079c : ljmp 0x48da2948, -0x3d01 ; jmp 0x207af
0x000000000012b24d : ljmp 0x48e6894c, -0x1077 ; call rax
0x0000000000191078 : ljmp 0x4a0d1cff, -0x15d9 ; jmp qword ptr [rdx]
0x0000000000190c90 : ljmp 0x4a0d1cff, -0x1604 ; jmp qword ptr [rdx]
0x0000000000111112 : ljmp 0x4c002b2c, 0x2d8b ; ret
0x00000000000e0b51 : ljmp 0x4cee8948, 0x658b ; add al, ch ; ret 0x15
0x000000000012335f : ljmp 0x4cee894c, -0x1877 ; call rax
0x0000000000190d68 : ljmp 0x4d0d1cff, -0x1600 ; jmp qword ptr [rdx]
0x0000000000038ba8 : ljmp 0x4dc47304, -0x52f1 ; ret
0x0000000000038a98 : ljmp 0x4dc47304, -0x5af1 ; ret
0x0000000000192c90 : ljmp 0x510d1cff, -0x1576 ; jmp qword ptr [rdx]
0x0000000000192620 : ljmp 0x550d1cff, -0x157c ; jmp qword ptr [rdx]
0x0000000000192368 : ljmp 0x5a0d1cff, -0x1593 ; jmp qword ptr [rdx]
0x0000000000192668 : ljmp 0x6a0d1cff, -0x157b ; jmp qword ptr [rdx]
0x000000000002f7ea : ljmp 0x7204573b, -0xcf8 ; ret
0x00000000000feb3c : ljmp 0x7304563b, -0x7cc2 ; ret 0x8b05
0x00000000000fe1cc : ljmp 0x7304563b, -0x7cca ; ret 0x8b05
0x000000000002f7a7 : ljmp 0x7304573b, -0x7cd2 ; ret 0x8b05
0x0000000000104944 : ljmp 0x74d2841f, -0x76f7 ; ret 0xeac1
0x00000000000e4e63 : ljmp 0x75d2841f, 0x39e5 ; ret
0x00000000001926b0 : ljmp 0x790d1cff, -0x157b ; jmp qword ptr [rdx]
0x0000000000188e32 : ljmp 0x7cccff, 0x1400 ; jno 0x188e2e ; jmp rsp
0x0000000000188e82 : ljmp 0x7dbcff, 0x5400 ; jb 0x188e7e ; call rsp
0x0000000000021a0b : ljmp 0x7e28305, 0x3944 ; ret 0x840f
0x0000000000192c48 : ljmp 0x7f0d1cff, -0x1576 ; jmp qword ptr [rdx]
0x0000000000188f32 : ljmp 0x7fccff, -0x1c00 ; je 0x188f2e ; jmp rsp
0x0000000000190d20 : ljmp 0x820d1cff, -0x1600 ; jmp qword ptr [rdx]
0x0000000000116f79 : ljmp 0x8348ffff, 0x18c4 ; ret
0x00000000000e4e61 : ljmp 0x841feac1, 0x75d2 ; in eax, 0x39 ; ret
0x00000000000cc6b2 : ljmp 0x85000409, -0x7640 ; ret 0x8589
0x000000000005ef32 : ljmp 0x89480011, -0x7621 ; ret 0xc031
0x00000000001890f2 : ljmp 0x8abcff, 0x1400 ; fldl2e ; call rsp
0x000000000018914a : ljmp 0x8bccff, 0x5400 ; fucomp st(2) ; jmp rsp
0x000000000011ce3d : ljmp 0x8c48348, 0x5d5b ; ret
0x00000000001891fa : ljmp 0x8eb4ff, 0x400 ; in eax, -0x16 ; call rsp
0x0000000000192e40 : ljmp 0x920d1cff, -0x1577 ; jmp qword ptr [rdx]
0x000000000008cf72 : ljmp 0xab60f01, 0x394c ; ret 0xc88
0x0000000000190fc0 : ljmp 0xaf0d1cff, -0x15f4 ; jmp qword ptr [rdx]
0x0000000000038193 : ljmp 0xb8e17501, 1 ; add byte ptr [rax], al ; ret
0x0000000000190f78 : ljmp 0xb90d1cff, -0x15f4 ; jmp qword ptr [rdx]
0x0000000000192df8 : ljmp 0xbd0d1cff, -0x1577 ; jmp qword ptr [rdx]
0x0000000000126215 : ljmp 0xc1894d02, 0x314c ; ret 0xe281
0x0000000000192990 : ljmp 0xc20d1cff, -0x1579 ; jmp qword ptr [rdx]
0x0000000000192320 : ljmp 0xc20d1cff, -0x1594 ; jmp qword ptr [rdx]
0x00000000001925d8 : ljmp 0xc40d1cff, -0x157d ; jmp qword ptr [rdx]
0x00000000001910c0 : ljmp 0xd00d1cff, -0x15d9 ; jmp qword ptr [rdx]
0x00000000001aa5bf : ljmp 0xd1cfff4, -0x15aa ; hlt ; jmp qword ptr [rdx]
0x00000000001aa4e7 : ljmp 0xd1cfff4, -0x1673 ; hlt ; jmp qword ptr [rdx]
0x00000000001aa49f : ljmp 0xd1cfff4, -0x16e0 ; hlt ; jmp qword ptr [rdx]
0x00000000001aa197 : ljmp 0xd1cfff4, -0x1729 ; hlt ; jmp qword ptr [rdx]
0x00000000001aa14f : ljmp 0xd1cfff4, -0x1893 ; hlt ; jmp qword ptr [rdx]
0x0000000000161bdc : ljmp 0xd1ef0f66, 0xf66 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000190c00 : ljmp 0xd90d1cff, -0x1608 ; jmp qword ptr [rdx]
0x00000000001926f8 : ljmp 0xe0d1cff, -0x1579 ; jmp qword ptr [rdx]
0x0000000000192db0 : ljmp 0xe60d1cff, -0x1577 ; jmp qword ptr [rdx]
0x000000000003e19f : ljmp 0xea854c01, -0x6af1 ; ret 0xb60f
0x000000000003e2ae : ljmp 0xea854c01, -0x6af1 ; ret 0xe083
0x0000000000190cd8 : ljmp 0xed0d1cff, -0x1601 ; jmp qword ptr [rdx]
0x0000000000192d20 : ljmp 0xf0d1cff, -0x1576 ; jmp qword ptr [rdx]
0x0000000000145b4b : ljmp 0xf24f8948, -0x76b8 ; push rdi ; clc ; ret
0x000000000003cbfd : ljmp 0xfa29fad1, 0x6348 ; ret 0x8d48
0x0000000000192d68 : ljmp 0xfd0d1cff, -0x1577 ; jmp qword ptr [rdx]
0x000000000012609f : ljmp 0xfe58316, -0x7cb7 ; ret
0x0000000000089a03 : ljmp 0xffff, -0x7af1 ; ret 0x17
0x0000000000189a33 : ljmp ptr [rax + rax*8 + 0x4d340000] ; in eax, dx ; jmp rsp
0x000000000018e5b3 : ljmp ptr [rax + rdi*4 + 0x1ed40002] ; cli ; call rsp
0x0000000000178f67 : ljmp ptr [rax - 0x3f000f4e] ; mov dl, -0x10 ; jmp qword ptr [rax]
0x000000000018ba33 : ljmp ptr [rax - 0x743bffff] ; call rsp
0x000000000018882f : ljmp ptr [rax - 4] ; call qword ptr [rdx]
0x000000000017cfff : ljmp ptr [rbx + rsi*4 - 0x42e30006] ; cli ; jmp rsp
0x000000000017896f : ljmp ptr [rbx] ; ret
0x000000000017abb5 : ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x0000000000179fd7 : ljmp ptr [rcx - 2] ; call qword ptr [rcx]
0x000000000001f6a3 : ljmp ptr [rcx] ; salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f683
0x0000000000187c2b : ljmp ptr [rdi + rbx*2] ; cld ; call rdx
0x000000000018e2a3 : ljmp ptr [rdi + rbx*4 - 0x583bfffe] ; stc ; jmp rsp
0x00000000001873b7 : ljmp ptr [rsi - 0x4f00025b] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rcx
0x00000000001883ef : ljmp ptr [rsi] ; jp 0x1883f3 ; call rsp
0x000000000018b64b : ljmp ptr [rsp + rax*4] ; add dword ptr [rax], eax ; xchg eax, esp ; ret
0x0000000000179c8f : ljmp ptr [rsp + rdi*4 - 0xd] ; call qword ptr [rdx + rax*8]
0x0000000000189e9b : ljmp ptr [rsp - 0x77e30000] ; out dx, al ; call rsp
0x0000000000083fe2 : lock ; add rsp, 8 ; ret
0x00000000001b05cc : lock ; cmc ; jmp qword ptr [rdx]
0x00000000000b215c : lock ; imul esi, edx ; add eax, esi ; ret
0x000000000019aaec : lock ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019f589 : lock ; jmp qword ptr [rdi]
0x000000000019f469 : lock ; jmp rsi
0x000000000018af19 : lock ; jmp rsp
0x0000000000164f6b : lock ; jne 0x1650a8 ; ret
0x000000000014d239 : lock ; movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000164552 : lock ; movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000038ab0 : lock ; ret
0x000000000002f51a : lock ; xor ebp, ebp ; jmp 0x2f52a
0x00000000001a60c0 : lock adc al, -7 ; call qword ptr [rax]
0x0000000000187854 : lock add al, -4 ; call rax
0x0000000000058b78 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000160f7e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018a055 : lock add byte ptr [rax], al ; lahf ; out dx, al ; jmp rsp
0x000000000019e225 : lock add byte ptr [rax], al ; mov byte ptr [rbp - 0x11], al ; jmp qword ptr [rsi]
0x000000000007485a : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000083fe3 : lock add rsp, 8 ; ret
0x000000000003693c : lock and eax, 0x8000 ; ret
0x0000000000187284 : lock and ebx, edi ; jmp rax
0x000000000010d1e3 : lock bswap eax ; ret
0x0000000000039a38 : lock call 0x391d7 ; leave ; ret
0x0000000000039a76 : lock call 0x396a7 ; leave ; ret
0x00000000000715d8 : lock call 0x7bca7 ; mov edx, eax ; jmp 0x715a1
0x00000000001b0585 : lock cmc ; jmp qword ptr [rdx]
0x0000000000047222 : lock cmp ecx, 0x2f ; jmp r8
0x00000000001abaa0 : lock cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rsi]
0x0000000000128085 : lock dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000001280c4 : lock dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000178fa2 : lock dec dword ptr [rsi - 0x71000f4d] ; mov bl, -0x10 ; call rsp
0x0000000000177705 : lock ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, -0x55 ; ret
0x00000000000367b8 : lock fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x00000000001aaa75 : lock hlt ; jmp qword ptr [rdx]
0x00000000000b215d : lock imul esi, edx ; add eax, esi ; ret
0x00000000001ac550 : lock in eax, -0xb ; call qword ptr [rax]
0x000000000019aaa5 : lock in eax, dx ; jmp qword ptr [rdx]
0x0000000000178f6a : lock inc eax ; mov dl, -0x10 ; jmp qword ptr [rax]
0x00000000001a2cd9 : lock int1 ; jmp qword ptr [rdx]
0x000000000008d077 : lock ja 0x8d084 ; ret
0x0000000000098a8b : lock ja 0x98aa6 ; mov rax, rdi ; ret
0x00000000000a263c : lock je 0xa2607 ; movzx eax, dl ; pop rbx ; ret
0x00000000000a2614 : lock je 0xa2609 ; movzx eax, cl ; pop rbx ; ret
0x00000000000a263c : lock je 0xa2609 ; movzx eax, dl ; pop rbx ; ret
0x0000000000035fba : lock jg 0x3600e ; sub eax, edx ; shr rax, 0x3f ; ret
0x00000000001791a4 : lock jge 0x1791a6 ; call qword ptr [rax]
0x0000000000038b0c : lock jmp 0x38b8f ; shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000164f6c : lock jne 0x1650a7 ; ret
0x0000000000097690 : lock jne 0x97686 ; mov rax, rdi ; ret
0x00000000000a401a : lock jne 0xa4077 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000196cd4 : lock jp 0x196cc7 ; jmp qword ptr [rdx]
0x0000000000178f66 : lock ljmp ptr [rax - 0x3f000f4e] ; mov dl, -0x10 ; jmp qword ptr [rax]
0x000000000014d238 : lock lock ; movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000018763c : lock loopne 0x18763d ; call rax
0x000000000001f5e7 : lock mov byte ptr [rdi], 0 ; ret
0x00000000001aee7c : lock mov ch, dh ; jmp qword ptr [rdx]
0x00000000000f129f : lock mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x0000000000036872 : lock mov dword ptr [rdi], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000019ea50 : lock mov ebp, edi ; jmp qword ptr [rdx]
0x0000000000145027 : lock mov qword ptr [rdi - 8], rcx ; ret
0x0000000000145065 : lock mov qword ptr [rdi - 8], rdx ; ret
0x0000000000039c9c : lock mov qword ptr [rdi], rax ; mov eax, 1 ; ret
0x0000000000036aa7 : lock mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x00000000000bad33 : lock movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000164553 : lock movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000004978d : lock nop ; ret
0x000000000018781c : lock or ah, bh ; call rax
0x00000000001a0960 : lock or ecx, esi ; call qword ptr [rcx]
0x00000000001a08e0 : lock or ecx, esi ; jmp qword ptr [rcx]
0x00000000001a8280 : lock or esi, ebp ; jmp qword ptr [rcx]
0x00000000000fb166 : lock or rax, rdi ; ret
0x000000000010a3e6 : lock pop r12 ; ret
0x0000000000071a5b : lock pop r14 ; pop r15 ; pop rbp ; ret
0x000000000007579f : lock pop r14 ; pop r15 ; ret
0x00000000000bde8e : lock pop r14 ; ret
0x00000000001abe2c : lock pop rax ; cmc ; jmp qword ptr [rdx]
0x0000000000187f74 : lock pop rbx ; cld ; push qword ptr [rax + 0x5b] ; cld ; jmp rax
0x000000000003b870 : lock pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000082316 : lock pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c3365 : lock pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003c2fb : lock pop rbx ; pop rbp ; ret
0x0000000000049682 : lock pop rbx ; ret
0x0000000000189c28 : lock pop rdi ; out dx, al ; call rsp
0x0000000000179090 : lock pop rdx ; int1 ; inc dword ptr [rax] ; pop rbp ; int1 ; call qword ptr [rax]
0x000000000018736c : lock push -5 ; call qword ptr [rax + 0x10fffb82]
0x0000000000178f86 : lock push qword ptr [rcx - 0x71000f4c] ; mov bl, -0x10 ; call qword ptr [rdi]
0x000000000017936c : lock push rax ; call qword ptr [rax]
0x00000000001793f4 : lock push rbx ; call qword ptr [rax]
0x0000000000179388 : lock push rcx ; jmp qword ptr [rax]
0x00000000001b1130 : lock push rcx ; sti ; call rsi
0x00000000001793b8 : lock push rdx ; inc dword ptr [rax] ; push rbx ; call qword ptr [rax]
0x0000000000179414 : lock push rsp ; call qword ptr [rax]
0x0000000000187308 : lock push rsp ; sti ; call rax
0x000000000017932c : lock repne ; call qword ptr [rax]
0x00000000001792a8 : lock repne ; inc dword ptr [rax] ; repne ; call qword ptr [rax]
0x00000000001ab4c0 : lock sal ch, cl ; jmp qword ptr [rsi]
0x0000000000118bfc : lock shl eax, 4 ; add eax, 8 ; ret
0x00000000001a54a0 : lock sti ; call qword ptr [rsi]
0x0000000000187941 : lock sti ; jmp qword ptr [rax]
0x00000000001a8b70 : lock sub al, -0xb ; jmp qword ptr [rcx]
0x0000000000164557 : lock sub eax, edx ; ret
0x00000000001791c4 : lock xchg ah, bh ; call qword ptr [rax]
0x0000000000195e40 : lock xchg eax, ecx ; in eax, dx ; call qword ptr [rax]
0x00000000001a8f00 : lock xor dh, ch ; jmp qword ptr [rcx]
0x000000000002f51b : lock xor ebp, ebp ; jmp 0x2f529
0x000000000002bf83 : lodsb al, byte ptr [rsi] ; adc byte ptr [rax], al ; mov rdi, rbx ; call r12
0x0000000000138b30 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000193d3c : lodsb al, byte ptr [rsi] ; add byte ptr [r8], al ; add byte ptr [rbx - 0x15], cl ; jmp qword ptr [rsi]
0x0000000000164510 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000018bc7d : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; mov ah, 0x33 ; hlt ; jmp rsp
0x00000000001a3a3c : lodsb al, byte ptr [rsi] ; add qword ptr [rax], rax ; nop ; mov edx, esi ; call qword ptr [rdx]
0x00000000001a173c : lodsb al, byte ptr [rsi] ; and eax, 0xc6c00001 ; int1 ; call qword ptr [rbx]
0x00000000001885e5 : lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rsi + 0x26fffcab]
0x0000000000188721 : lodsb al, byte ptr [rsi] ; cld ; call rsp
0x000000000018871d : lodsb al, byte ptr [rsi] ; cld ; inc dword ptr [rsp + rbp*4 - 4] ; call rsp
0x00000000001885a1 : lodsb al, byte ptr [rsi] ; cld ; jmp qword ptr [rax]
0x0000000000195e3c : lodsb al, byte ptr [rsi] ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; lock xchg eax, ecx ; in eax, dx ; call qword ptr [rax]
0x00000000000f2fe0 : lodsb al, byte ptr [rsi] ; jmp 0xffffffff83582fea
0x0000000000196d84 : lodsb al, byte ptr [rsi] ; jp 0x196d77 ; jmp qword ptr [rdx]
0x00000000001a913c : lodsb al, byte ptr [rsi] ; lahf ; add dword ptr [rax], eax ; mov al, 0x38 ; cmc ; jmp qword ptr [rcx]
0x00000000001ad33c : lodsb al, byte ptr [rsi] ; loope 0x1ad347 ; add byte ptr [rax], dl ; sti ; cmc ; call qword ptr [rax]
0x000000000018e5b4 : lodsb al, byte ptr [rsi] ; mov eax, 0x1ed40002 ; cli ; call rsp
0x000000000007bd54 : lodsb al, byte ptr [rsi] ; nop dword ptr [rax] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000139154 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001774fd : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000019d83c : lodsb al, byte ptr [rsi] ; out 0, al ; add byte ptr [rax], dh ; sahf ; out dx, al ; jmp qword ptr [rcx]
0x00000000000706e9 : lodsb al, byte ptr [rsi] ; ret
0x0000000000189a34 : lodsb al, byte ptr [rsi] ; rol byte ptr [rax], 0 ; xor al, 0x4d ; in eax, dx ; jmp rsp
0x00000000001874e9 : lodsb al, byte ptr [rsi] ; std ; call rax
0x0000000000187429 : lodsb al, byte ptr [rsi] ; std ; jmp qword ptr [rcx]
0x00000000001a1a3c : lodsb al, byte ptr [rsi] ; sub byte ptr [rcx], al ; add al, dl ; iretd ; int1 ; call rsi
0x0000000000047cdc : lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000003dde4 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000189785 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; fucomi st(3) ; call rsp
0x000000000018859d : lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcac]
0x0000000000188795 : lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000188659 : lodsd eax, dword ptr [rsi] ; cld ; call rdx
0x0000000000188655 : lodsd eax, dword ptr [rsi] ; cld ; inc dword ptr [rdx - 0x53] ; cld ; call rdx
0x00000000001885d9 : lodsd eax, dword ptr [rsi] ; cld ; jmp rsi
0x00000000001a68f1 : lodsd eax, dword ptr [rsi] ; hlt ; jmp qword ptr [rdi]
0x00000000001975ec : lodsd eax, dword ptr [rsi] ; jg 0x1975df ; jmp qword ptr [rdx]
0x0000000000197634 : lodsd eax, dword ptr [rsi] ; jg 0x197627 ; jmp qword ptr [rdx]
0x00000000001011cf : lodsd eax, dword ptr [rsi] ; mov edx, eax ; jmp 0x1011c6
0x000000000013ccc0 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000038b72 : lodsd eax, dword ptr [rsi] ; ret
0x00000000000b014f : lodsd eax, dword ptr [rsi] ; ret 0x30
0x000000000004c39f : lodsd eax, dword ptr [rsi] ; ret 0xb
0x000000000008240f : lodsd eax, dword ptr [rsi] ; ret 0xf
0x00000000001874b1 : lodsd eax, dword ptr [rsi] ; std ; inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rax
0x00000000000a5fe5 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000117201 : loop 0x117193 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000011c01f : loop 0x11c01a ; ret 0xc001
0x0000000000126a2c : loop 0x126ab6 ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000013719b : loop 0x1371ee ; add ecx, ebx ; call rax
0x000000000014d33a : loop 0x14d335 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014d339 : loop 0x14d336 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014fe0a : loop 0x14fe05 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014fe09 : loop 0x14fe06 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015292a : loop 0x152925 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000152929 : loop 0x152926 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000017789a : loop 0x1778ef ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000187641 : loop 0x187640 ; call rax
0x0000000000187765 : loop 0x187764 ; jmp rax
0x0000000000021f59 : loop 0x21f65 ; lea rdi, qword ptr [r14 + rdx] ; call rax
0x00000000000025c5 : loop 0x259f ; ret 0x23cb
0x00000000000375d9 : loop 0x375e3 ; jne 0x375ef ; xor eax, eax ; nop ; ret
0x000000000003c867 : loop 0x3c890 ; mov eax, eax ; or rax, rdx ; ret
0x000000000004bdb1 : loop 0x4bdf8 ; call qword ptr [rbx + rax*8]
0x000000000004da52 : loop 0x4da5e ; add byte ptr [rbx - 0x7af0fe40], al ; ret 0xfffc
0x000000000004da51 : loop 0x4da5f ; add byte ptr [rbx - 0x7af0fe40], al ; ret 0xfffc
0x000000000005eb22 : loop 0x5eab4 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000063656 : loop 0x63644 ; scasb al, byte ptr [rdi] ; ret
0x000000000008535f : loop 0x85365 ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x00000000000860a4 : loop 0x860f6 ; mov edi, edi ; call rax
0x0000000000098a3d : loop 0x98a75 ; shr byte ptr [rcx], -0x38 ; ret
0x000000000009e48a : loop 0x9e495 ; add byte ptr [rax], al ; ret
0x00000000000baf66 : loop 0xbaf7a ; ret 0x144
0x00000000000bb231 : loop 0xbb1f9 ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000c6048 : loop 0xc6034 ; ret 0xffa9
0x00000000000c6c82 : loop 0xc6cbe ; rol byte ptr [rbx - 0x6bf0fe06], -0x40 ; ret
0x00000000000dc6bc : loop 0xdc6c8 ; xor esi, esi ; call 0x8d048
0x00000000000e4c30 : loop 0xe4c3c ; je 0xe4c40 ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000e4f00 : loop 0xe4f0c ; je 0xe4f10 ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000f43f5 : loop 0xf442c ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f9fd2 : loop 0xf9f5f ; sub al, 0 ; ret
0x0000000000118a5b : loope 0x118aa9 ; idiv edi ; mov eax, ebx ; pop rbx ; ret
0x000000000012470e : loope 0x1246a3 ; ret
0x0000000000136d14 : loope 0x136d63 ; add esp, 0x58 ; ret
0x000000000014d2aa : loope 0x14d2a5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014d2a9 : loope 0x14d2a6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014fd7a : loope 0x14fd75 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014fd79 : loope 0x14fd76 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015289a : loope 0x152895 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000152899 : loope 0x152896 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015b3ab : loope 0x15b3b2 ; add byte ptr [rax], al ; ret
0x000000000016323b : loope 0x163245 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000165d1e : loope 0x165d84 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000179c60 : loope 0x179c35 ; jmp qword ptr [rax]
0x0000000000179cec : loope 0x179cc1 ; jmp qword ptr [rax]
0x000000000017b629 : loope 0x17b633 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000187761 : loope 0x187760 ; jmp rax
0x000000000018d1f1 : loope 0x18d1ec ; jmp rsp
0x000000000018ec85 : loope 0x18ec8d ; add ah, dl ; ret 0xfffa
0x000000000018ec8d : loope 0x18ec97 ; add byte ptr [rsp + rax*8 - 6], dl ; jmp rsp
0x000000000018f179 : loope 0x18f17a ; jmp rsp
0x000000000019bdf4 : loope 0x19be2c ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a2604 : loope 0x1a2590 ; int1 ; jmp qword ptr [rdx]
0x00000000001a9cfd : loope 0x1a9cf5 ; jmp qword ptr [rdx]
0x00000000001a9d45 : loope 0x1a9d3d ; jmp qword ptr [rdx]
0x00000000001a9d44 : loope 0x1a9d3e ; jmp qword ptr [rdx]
0x00000000001a9d8d : loope 0x1a9d85 ; jmp qword ptr [rdx]
0x00000000001a9dd5 : loope 0x1a9dcd ; jmp qword ptr [rdx]
0x00000000001a9e1d : loope 0x1a9e15 ; jmp qword ptr [rdx]
0x00000000001a9e65 : loope 0x1a9e5d ; jmp qword ptr [rdx]
0x00000000001ac1d1 : loope 0x1ac1ca ; call qword ptr [rcx]
0x00000000001ad325 : loope 0x1ad32e ; add byte ptr [rax], bl ; sti ; cmc ; call qword ptr [rax]
0x00000000001ad33d : loope 0x1ad346 ; add byte ptr [rax], dl ; sti ; cmc ; call qword ptr [rax]
0x00000000001ad355 : loope 0x1ad35e ; add byte ptr [rax], cl ; sti ; cmc ; call qword ptr [rax]
0x00000000001ad36d : loope 0x1ad376 ; add byte ptr [rax], al ; sti ; cmc ; call qword ptr [rax]
0x00000000001aea7c : loope 0x1aea08 ; cmc ; jmp qword ptr [rdx]
0x00000000001aedf4 : loope 0x1aed81 ; cmc ; jmp qword ptr [rdx]
0x00000000000233ff : loope 0x23452 ; mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000038196 : loope 0x38156 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000038276 : loope 0x38236 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000038a07 : loope 0x38a59 ; mov dword ptr [rdi], ecx ; ret
0x0000000000038a38 : loope 0x38a8b ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000038aad : loope 0x38b00 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000003fbb7 : loope 0x3fbbd ; dec dword ptr [rax - 0x77] ; ret
0x0000000000070cd4 : loope 0x70d0f ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000070dbb : loope 0x70e0e ; mov eax, dword ptr [rax + 0x48] ; xor edx, edx ; pop r12 ; jmp rax
0x0000000000071d01 : loope 0x71cd6 ; mov dword ptr [rdi], ecx ; ret
0x000000000009267b : loope 0x9268d ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000000a1c99 : loope 0xa1d08 ; nop dword ptr [rax + rax] ; ret
0x00000000000a242e : loope 0xa2436 ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x00000000000a26d7 : loope 0xa2698 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000a3a1e : loope 0xa3a33 ; je 0xa3a44 ; ret
0x00000000000bdf0d : loope 0xbde9a ; ret 0xf631
0x00000000000c037f : loope 0xc038b ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000c037e : loope 0xc038c ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000e1517 : loope 0xe151c ; ret
0x000000000010860b : loopne 0x108610 ; ret
0x0000000000108d38 : loopne 0x108d4d ; cmp eax, 4 ; je 0x108d47 ; ret
0x0000000000108e87 : loopne 0x108e99 ; pop r12 ; ret
0x000000000010d1e0 : loopne 0x10d1f0 ; or eax, esi ; bswap eax ; ret
0x000000000010d1f1 : loopne 0x10d20c ; movzx esi, si ; or eax, esi ; bswap eax ; ret
0x0000000000115388 : loopne 0x1153ee ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000115427 : loopne 0x11548d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000118384 : loopne 0x118383 ; add eax, 0x10 ; ret
0x0000000000118bfe : loopne 0x118c09 ; add eax, 8 ; ret
0x0000000000118d9b : loopne 0x118da8 ; cdqe ; shr rax, 4 ; ret
0x000000000011e1dd : loopne 0x11e1ea ; pop r12 ; sub eax, 1 ; pop r13 ; ret
0x000000000012b967 : loopne 0x12b970 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012fc01 : loopne 0x12fc71 ; nop dword ptr [rax + rax] ; ret
0x0000000000143cb1 : loopne 0x143cc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143cb0 : loopne 0x143cc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143e01 : loopne 0x143e18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143e00 : loopne 0x143e19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143f51 : loopne 0x143f68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143f50 : loopne 0x143f69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001440a1 : loopne 0x1440b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001440a0 : loopne 0x1440b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001441f1 : loopne 0x144208 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001441f0 : loopne 0x144209 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144341 : loopne 0x144358 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144340 : loopne 0x144359 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144491 : loopne 0x1444a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144490 : loopne 0x1444a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001445df : loopne 0x1445f6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001445de : loopne 0x1445f7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144731 : loopne 0x144748 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144730 : loopne 0x144749 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144881 : loopne 0x144898 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144880 : loopne 0x144899 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001449d1 : loopne 0x1449e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001449d0 : loopne 0x1449e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144b21 : loopne 0x144b38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144b20 : loopne 0x144b39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144c71 : loopne 0x144c88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144c70 : loopne 0x144c89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144dc1 : loopne 0x144dd8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144dc0 : loopne 0x144dd9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144f11 : loopne 0x144f28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144f10 : loopne 0x144f29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146681 : loopne 0x146698 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146680 : loopne 0x146699 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001467d1 : loopne 0x1467e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001467d0 : loopne 0x1467e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146921 : loopne 0x146938 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146920 : loopne 0x146939 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146a71 : loopne 0x146a88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146a70 : loopne 0x146a89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146bc1 : loopne 0x146bd8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146bc0 : loopne 0x146bd9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146d11 : loopne 0x146d28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146d10 : loopne 0x146d29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146e61 : loopne 0x146e78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146e60 : loopne 0x146e79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146faf : loopne 0x146fc6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146fae : loopne 0x146fc7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000147101 : loopne 0x147118 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000147100 : loopne 0x147119 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000147251 : loopne 0x147268 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000147250 : loopne 0x147269 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001473a1 : loopne 0x1473b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001473a0 : loopne 0x1473b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001474f1 : loopne 0x147508 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001474f0 : loopne 0x147509 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000147641 : loopne 0x147658 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000147640 : loopne 0x147659 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000147791 : loopne 0x1477a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000147790 : loopne 0x1477a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001478e1 : loopne 0x1478f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001478e0 : loopne 0x1478f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149051 : loopne 0x149068 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149050 : loopne 0x149069 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001491a1 : loopne 0x1491b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001491a0 : loopne 0x1491b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001492f1 : loopne 0x149308 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001492f0 : loopne 0x149309 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149441 : loopne 0x149458 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149440 : loopne 0x149459 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149591 : loopne 0x1495a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149590 : loopne 0x1495a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001496e1 : loopne 0x1496f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001496e0 : loopne 0x1496f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149831 : loopne 0x149848 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149830 : loopne 0x149849 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000014997f : loopne 0x149996 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000014997e : loopne 0x149997 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149ad1 : loopne 0x149ae8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149ad0 : loopne 0x149ae9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149c21 : loopne 0x149c38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149c20 : loopne 0x149c39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149d71 : loopne 0x149d88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149d70 : loopne 0x149d89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149ec1 : loopne 0x149ed8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149ec0 : loopne 0x149ed9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000014a011 : loopne 0x14a028 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000014a010 : loopne 0x14a029 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000014a161 : loopne 0x14a178 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000014a160 : loopne 0x14a179 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000014a2b1 : loopne 0x14a2c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000014a2b0 : loopne 0x14a2c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000174e74 : loopne 0x174e54 ; cld ; test al, -0x69 ; xchg eax, esp ; ret
0x000000000017911c : loopne 0x1790bd ; int1 ; inc dword ptr [rax] ; cdq ; int1 ; jmp qword ptr [rax]
0x00000000001792e4 : loopne 0x179334 ; inc dword ptr [rax] ; repne ; call qword ptr [rax]
0x0000000000179308 : loopne 0x179359 ; inc dword ptr [rax] ; repne ; jmp qword ptr [rax]
0x00000000001793f0 : loopne 0x17944c ; push rax ; push rbx ; call qword ptr [rax]
0x0000000000179530 : loopne 0x179599 ; call qword ptr [rax]
0x0000000000179548 : loopne 0x1795b2 ; call qword ptr [rax]
0x00000000001795cc : loopne 0x17963e ; inc dword ptr [rax] ; push -0xe ; jmp qword ptr [rax]
0x000000000017a905 : loopne 0x17a8fd ; call rsp
0x0000000000187288 : loopne 0x1872af ; sti ; call rax
0x0000000000187600 : loopne 0x1875bd ; std ; call qword ptr [rcx]
0x0000000000187600 : loopne 0x1875c1 ; std ; call qword ptr [rcx]
0x0000000000187620 : loopne 0x1875de ; std ; call qword ptr [rcx]
0x0000000000187620 : loopne 0x1875e2 ; std ; call qword ptr [rcx]
0x000000000018763d : loopne 0x18763c ; call rax
0x00000000001876dd : loopne 0x1876dc ; jmp qword ptr [rax]
0x00000000001876dc : loopne 0x1876dd ; jmp qword ptr [rax]
0x00000000001876fd : loopne 0x1876fc ; jmp rax
0x0000000000187764 : loopne 0x18774b ; sti ; jmp rax
0x0000000000187768 : loopne 0x187751 ; sti ; jmp rax
0x000000000018776c : loopne 0x18775b ; sti ; call qword ptr [rax - 0x2f000440]
0x0000000000187800 : loopne 0x18780f ; cld ; jmp rax
0x0000000000187804 : loopne 0x187815 ; cld ; jmp rax
0x0000000000187804 : loopne 0x187819 ; cld ; jmp rax
0x0000000000187808 : loopne 0x18781b ; cld ; jmp rax
0x00000000001879e0 : loopne 0x187a17 ; cld ; call rax
0x0000000000189c48 : loopne 0x189cae ; out dx, al ; call rsp
0x000000000018acf1 : loopne 0x18ace4 ; jmp rsp
0x000000000018acf0 : loopne 0x18ace5 ; jmp rsp
0x000000000018fab6 : loopne 0x18fb18 ; jmp 0xffffffffc82617c5
0x00000000001926f6 : loopne 0x192689 ; ljmp 0xe0d1cff, -0x1579 ; jmp qword ptr [rdx]
0x0000000000196bb0 : loopne 0x196b53 ; in eax, dx ; call rbx
0x0000000000196dcc : loopne 0x196e4b ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019ea20 : loopne 0x19e9b0 ; out dx, eax ; jmp qword ptr [rax]
0x000000000019f060 : loopne 0x19f050 ; out dx, eax ; call rsp
0x00000000001a3790 : loopne 0x1a371b ; jmp qword ptr [rcx]
0x00000000001a5c40 : loopne 0x1a5ca8 ; hlt ; jmp qword ptr [rcx]
0x00000000001a6060 : loopne 0x1a60d8 ; hlt ; jmp qword ptr [rcx]
0x00000000001a8990 : loopne 0x1a89bf ; cmc ; jmp qword ptr [rcx]
0x00000000001a8d80 : loopne 0x1a8db4 ; cmc ; jmp qword ptr [rcx]
0x00000000001ab6d0 : loopne 0x1ab6a8 ; cmc ; jmp qword ptr [rsi]
0x00000000001ad26d : loopne 0x1ad276 ; add byte ptr [rax], ah ; cli ; cmc ; call qword ptr [rax]
0x00000000001ad285 : loopne 0x1ad28e ; add byte ptr [rax], bl ; cli ; cmc ; call qword ptr [rax]
0x00000000001ae894 : loopne 0x1ae81e ; cmc ; jmp qword ptr [rdx]
0x00000000001affb5 : loopne 0x1affae ; jmp qword ptr [rdx]
0x00000000001b004d : loopne 0x1b0046 ; jmp qword ptr [rdx]
0x00000000001b004c : loopne 0x1b0047 ; jmp qword ptr [rdx]
0x00000000001b0095 : loopne 0x1b008e ; jmp qword ptr [rdx]
0x00000000001b00f5 : loopne 0x1b00ee ; jmp qword ptr [rdx]
0x00000000001b00f4 : loopne 0x1b00ef ; jmp qword ptr [rdx]
0x00000000001b013d : loopne 0x1b0136 ; jmp qword ptr [rdx]
0x000000000002fbb3 : loopne 0x2fbc2 ; movzx eax, ax ; ret
0x000000000002fbf3 : loopne 0x2fbfc ; movzx eax, ax ; ret
0x000000000002fc93 : loopne 0x2fc9e ; movzx eax, ax ; ret
0x000000000002fd73 : loopne 0x2fd78 ; ret
0x000000000002fdec : loopne 0x2fdf1 ; ret
0x000000000002fdfc : loopne 0x2fe0b ; movzx eax, ax ; ret
0x000000000002fe3c : loopne 0x2fe45 ; movzx eax, ax ; ret
0x000000000002fdc3 : loopne 0x2fe46 ; ret
0x000000000002fedc : loopne 0x2fee7 ; movzx eax, ax ; ret
0x00000000000365f5 : loopne 0x36601 ; ret
0x0000000000037734 : loopne 0x37784 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000384bd : loopne 0x384c6 ; sub eax, 1 ; ret
0x0000000000038846 : loopne 0x38892 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000046cd1 : loopne 0x46cf6 ; or eax, esi ; ret
0x00000000000538e3 : loopne 0x53923 ; add byte ptr [rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x00000000000538e2 : loopne 0x53924 ; add byte ptr [rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x000000000006d4c5 : loopne 0x6d527 ; pop rbp ; pop r12 ; ret
0x000000000006d891 : loopne 0x6d8d7 ; pop rsp ; ret
0x000000000006e0a9 : loopne 0x6e10b ; pop rbp ; pop r12 ; ret
0x000000000006e0c9 : loopne 0x6e10f ; pop rsp ; ret
0x000000000006ef7f : loopne 0x6ef85 ; add byte ptr [rax], al ; jmp rax
0x000000000006efab : loopne 0x6efb1 ; add byte ptr [rax], al ; call rax
0x000000000006efdd : loopne 0x6efe3 ; add byte ptr [rax], al ; call rax
0x000000000006f01f : loopne 0x6f025 ; add byte ptr [rax], al ; jmp rax
0x00000000000730e6 : loopne 0x7314c ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000073157 : loopne 0x731b9 ; pop rbp ; pop r12 ; ret
0x0000000000074166 : loopne 0x7416b ; ret
0x0000000000074176 : loopne 0x7417b ; ret
0x0000000000079e7a : loopne 0x79ec4 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000079f28 : loopne 0x79f72 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007cd0d : loopne 0x7cd71 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007dc88 : loopne 0x7dcee ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000080c36 : loopne 0x80bc3 ; rol byte ptr [rcx + 0xf], -0x6c ; ret
0x0000000000086aa8 : loopne 0x86b0e ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000086c7d : loopne 0x86ce3 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008d0ff : loopne 0x8d0f6 ; ret
0x00000000000928ec : loopne 0x928fe ; movsxd r8, dword ptr [rax + r8*4] ; add rax, r8 ; jmp rax
0x000000000009482c : loopne 0x94872 ; pop rsp ; ret
0x0000000000094827 : loopne 0x9488c ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000009e58c : loopne 0x9e596 ; add byte ptr [rax], al ; ret
0x00000000000a268d : loopne 0xa26a7 ; movsxd rsi, dword ptr [rdx + rax*4] ; add rdx, rsi ; jmp rdx
0x00000000000a26cd : loopne 0xa26e7 ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000a81c8 : loopne 0xa81dc ; xchg eax, esp ; ret 0x294c
0x00000000000ad3ca : loopne 0xad3de ; xchg eax, esp ; ret 0x294c
0x00000000000af774 : loopne 0xaf7ba ; pop rsp ; ret
0x00000000000af846 : loopne 0xaf88e ; pop rsp ; pop r13 ; ret
0x00000000000b220c : loopne 0xb2256 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000b21f8 : loopne 0xb225e ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b3436 : loopne 0xb3441 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000000b440 : loopne 0xb484 ; or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000c2d20 : loopne 0xc2d86 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000d2822 : loopne 0xd2829 ; pop rbp ; ret
0x00000000000d2909 : loopne 0xd2914 ; nop dword ptr [rax + rax] ; pop rbx ; ret
0x00000000000ec596 : loopne 0xec5fa ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f27a8 : loopne 0xf280e ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f4579 : loopne 0xf45ac ; add byte ptr [rax - 0x77], cl ; ret 0xcfeb
0x00000000000f594e : loopne 0xf58db ; ret
0x00000000000f8c56 : loopne 0xf8cbc ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe2d0 : loopne 0xfe2dc ; nop word ptr [rax + rax] ; ret
0x00000000000fe2f2 : loopne 0xfe301 ; movzx eax, ax ; ret
0x00000000000fe370 : loopne 0xfe37c ; nop word ptr [rax + rax] ; ret
0x00000000000fe410 : loopne 0xfe41c ; nop word ptr [rax + rax] ; ret
0x00000000000fe432 : loopne 0xfe437 ; ret
0x00000000000fe4b0 : loopne 0xfe4bc ; nop word ptr [rax + rax] ; ret
0x00000000000fe4d2 : loopne 0xfe4db ; movzx eax, ax ; ret
0x00000000000fe550 : loopne 0xfe55c ; nop word ptr [rax + rax] ; ret
0x00000000000fe5e0 : loopne 0xfe5ec ; nop word ptr [rax + rax] ; ret
0x00000000000fe680 : loopne 0xfe68c ; nop word ptr [rax + rax] ; ret
0x00000000000fe720 : loopne 0xfe72c ; nop word ptr [rax + rax] ; ret
0x00000000000fe7c0 : loopne 0xfe7cc ; nop word ptr [rax + rax] ; ret
0x00000000000fe7e2 : loopne 0xfe7ed ; movzx eax, ax ; ret
0x00000000000fe860 : loopne 0xfe86c ; nop word ptr [rax + rax] ; ret
0x00000000000fe8fb : loopne 0xfe904 ; nop dword ptr [rax] ; ret
0x00000000000fe9a0 : loopne 0xfe9ac ; nop word ptr [rax + rax] ; ret
0x00000000000feb7a : loopne 0xfeb84 ; nop dword ptr [rax] ; ret
0x00000000000febf2 : loopne 0xfebfc ; nop dword ptr [rax] ; ret
0x00000000000fec0b : loopne 0xfec1a ; movzx eax, ax ; ret
0x00000000000fec82 : loopne 0xfec8c ; nop dword ptr [rax] ; ret
0x00000000000fed12 : loopne 0xfed1c ; nop dword ptr [rax] ; ret
0x00000000000fed2b : loopne 0xfed30 ; ret
0x00000000000fed92 : loopne 0xfed9c ; nop dword ptr [rax] ; ret
0x00000000000fedab : loopne 0xfedb4 ; movzx eax, ax ; ret
0x00000000000fee22 : loopne 0xfee2c ; nop dword ptr [rax] ; ret
0x00000000000feea2 : loopne 0xfeeac ; nop dword ptr [rax] ; ret
0x00000000000fef32 : loopne 0xfef3c ; nop dword ptr [rax] ; ret
0x00000000000fefc2 : loopne 0xfefcc ; nop dword ptr [rax] ; ret
0x00000000000ff052 : loopne 0xff05c ; nop dword ptr [rax] ; ret
0x00000000000ff06b : loopne 0xff076 ; movzx eax, ax ; ret
0x00000000000ff0e2 : loopne 0xff0ec ; nop dword ptr [rax] ; ret
0x00000000000ff202 : loopne 0xff20c ; nop dword ptr [rax] ; ret
0x00000000000ff3ba : loopne 0xff3c4 ; nop dword ptr [rax] ; ret
0x0000000000123f67 : mov ah, -0x11 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000189f3c : mov ah, -0x18 ; add byte ptr [rax], al ; in al, -0x71 ; out dx, al ; jmp rsp
0x00000000000f4578 : mov ah, -0x20 ; sub al, 0 ; mov rdx, rax ; jmp 0xf4556
0x000000000018a360 : mov ah, -0x2a ; out dx, al ; call rsp
0x000000000018bff4 : mov ah, -0x38 ; add dword ptr [rax], eax ; ret 0xfff5
0x000000000019b444 : mov ah, -0x3e ; add byte ptr [rax], al ; js 0x19b478 ; out dx, al ; call qword ptr [rdx]
0x00000000001ab444 : mov ah, -0x3e ; add dword ptr [rax], eax ; js 0x1ab423 ; cmc ; jmp qword ptr [rsi]
0x000000000018e694 : mov ah, -0x45 ; add al, byte ptr [rax] ; add al, 0x2e ; cli ; jmp rsp
0x000000000018eb90 : mov ah, -0x47 ; cli ; call rsp
0x00000000001897dc : mov ah, -0x50 ; add byte ptr [rax], al ; test ah, ch ; jmp 0x1897ea
0x000000000018a168 : mov ah, -0x51 ; out dx, al ; call rsp
0x000000000018871c : mov ah, -0x54 ; cld ; inc dword ptr [rsp + rbp*4 - 4] ; call rsp
0x0000000000174d30 : mov ah, -0x5b ; ret
0x00000000001a8c44 : mov ah, -0x66 ; add dword ptr [rax], eax ; sub byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x000000000018eac8 : mov ah, -0x67 ; cli ; jmp rsp
0x0000000000198a44 : mov ah, -0x68 ; add byte ptr [rax], al ; pop rax ; ret 0xffed
0x00000000001a8844 : mov ah, -0x6a ; add dword ptr [rax], eax ; call 0x111a7d7c
0x000000000019298e : mov ah, -0x77 ; ljmp 0xc20d1cff, -0x1579 ; jmp qword ptr [rdx]
0x0000000000188224 : mov ah, -0x7b ; cld ; inc dword ptr [rbp + rax*4 - 4] ; call rsp
0x000000000018a2b4 : mov ah, -1 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffee
0x000000000018f0d4 : mov ah, -8 ; add dword ptr [rax], eax ; xlatb ; std ; jmp rsp
0x00000000001247af : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000017488a : mov ah, 0x13 ; ret
0x00000000000e2967 : mov ah, 0x24 ; ret 0
0x000000000018dee8 : mov ah, 0x31 ; stc ; call rsp
0x000000000018d444 : mov ah, 0x32 ; add al, byte ptr [rax] ; push rsp ; adc bh, al ; call rsp
0x000000000008665d : mov ah, 0x33 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x000000000018bc80 : mov ah, 0x33 ; hlt ; jmp rsp
0x00000000001a3044 : mov ah, 0x3e ; add dword ptr [rax], eax ; mov bl, bh ; int1 ; jmp qword ptr [rcx]
0x000000000018e7b0 : mov ah, 0x41 ; cli ; call qword ptr [rdx + rax*8 + 2]
0x00000000001a3744 : mov ah, 0x45 ; add dword ptr [rax], eax ; cwde ; xchg dl, dh ; jmp qword ptr [rcx]
0x0000000000189668 : mov ah, 0x47 ; jmp 0x18966e
0x000000000018acec : mov ah, 0x4a ; add dword ptr [rax], eax ; loopne 0x18ace9 ; jmp rsp
0x000000000018d8e8 : mov ah, 0x61 ; clc ; jmp rsp
0x0000000000187cf8 : mov ah, 0x64 ; cld ; inc dword ptr [rsp - 4] ; call rsp
0x000000000018e958 : mov ah, 0x65 ; cli ; jmp rsp
0x000000000019681c : mov ah, 0x75 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018de94 : mov ah, 0x7c ; add al, byte ptr [rax] ; adc r15b, cl ; jmp rsp
0x00000000000f7210 : mov ah, 2 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001b882c : mov ah, 5 ; add byte ptr [rax], al ; ret
0x0000000000188a01 : mov ah, bh ; call qword ptr [rax]
0x0000000000188151 : mov ah, bh ; call qword ptr [rdx + 0x22fffc87]
0x00000000001880cd : mov ah, bh ; call qword ptr [rsi]
0x000000000018828d : mov ah, bh ; call rax
0x0000000000188289 : mov ah, bh ; inc dword ptr [rax - 0x78] ; cld ; call rax
0x000000000018820d : mov ah, bh ; jmp rsp
0x0000000000174684 : mov ah, bl ; push rsi ; ret
0x00000000000fd272 : mov ah, byte ptr [rax] ; sub al, 0 ; pop rbx ; ret
0x00000000001ab778 : mov ah, dl ; cmc ; jmp qword ptr [rsi]
0x0000000000176b36 : mov al, -0x12 ; fcmovb st(0), st(3) ; ret
0x00000000001ab580 : mov al, -0x2d ; cmc ; jmp qword ptr [rsi]
0x00000000001a1710 : mov al, -0x3a ; int1 ; call qword ptr [rsi]
0x00000000001a1350 : mov al, -0x3c ; int1 ; call qword ptr [rdx]
0x00000000001a6ba0 : mov al, -0x4e ; hlt ; call qword ptr [rsi]
0x00000000001a6b00 : mov al, -0x4f ; hlt ; jmp qword ptr [rcx]
0x0000000000188780 : mov al, -0x51 ; cld ; inc dword ptr [rax - 0x51] ; cld ; call rax
0x00000000001a6a10 : mov al, -0x52 ; hlt ; jmp qword ptr [rcx]
0x00000000001885a8 : mov al, -0x55 ; cld ; inc dword ptr [rax - 0x55] ; cld ; call rsi
0x00000000001873bc : mov al, -0x5a ; std ; jmp rcx
0x00000000001887e0 : mov al, -0x5e ; cld ; jmp qword ptr [rax]
0x00000000001889e4 : mov al, -0x5f ; cld ; jmp qword ptr [rax]
0x0000000000196530 : mov al, -0x6c ; in eax, dx ; jmp rsi
0x00000000001791e4 : mov al, -0x70 ; cld ; jmp qword ptr [rax]
0x0000000000188288 : mov al, -0x78 ; cld ; inc dword ptr [rax - 0x78] ; cld ; call rax
0x00000000001a3760 : mov al, -0x7a ; jmp qword ptr [rcx]
0x00000000001791bc : mov al, -0x7c ; cld ; call rax
0x00000000001b72e0 : mov al, -0xe ; cli ; call rcx
0x000000000018857d : mov al, -4 ; call qword ptr [rax]
0x0000000000188779 : mov al, -4 ; jmp qword ptr [rax]
0x000000000018863d : mov al, -4 ; jmp rdx
0x00000000001ad210 : mov al, -8 ; cmc ; call qword ptr [rax]
0x000000000018dc31 : mov al, -8 ; jmp rsp
0x000000000019a20d : mov al, 0 ; add byte ptr [rax - 3], ah ; in eax, dx ; jmp rax
0x00000000000cd661 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001221bc : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x0000000000122175 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; jmp rcx
0x00000000001a8800 : mov al, 0x28 ; cmc ; jmp qword ptr [rcx]
0x00000000001a8c00 : mov al, 0x2d ; cmc ; jmp qword ptr [rcx]
0x000000000019bd64 : mov al, 0x2e ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a9140 : mov al, 0x38 ; cmc ; jmp qword ptr [rcx]
0x000000000007decb : mov al, 0x3b ; xor al, 0 ; add dword ptr [rbx - 0xd], ebx ; ret
0x00000000001792d8 : mov al, 0x47 ; inc eax ; repne ; call rax
0x0000000000128bc9 : mov al, 0x48 ; add eax, ecx ; jmp rax
0x0000000000064d6f : mov al, 0x48 ; add eax, edx ; jmp rax
0x0000000000128369 : mov al, 0x48 ; add eax, esi ; jmp rax
0x00000000000f88d5 : mov al, 0x48 ; mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0xf890b
0x00000000000f89a6 : mov al, 0x48 ; mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0xf89dd
0x000000000012fbf8 : mov al, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x0000000000104807 : mov al, 0x4c ; mov edx, dword ptr [rbp - 0x48] ; sete dl ; jmp 0x1047a1
0x0000000000179324 : mov al, 0x4e ; call rax
0x0000000000179344 : mov al, 0x4f ; call rax
0x0000000000179364 : mov al, 0x50 ; call rax
0x00000000001793a8 : mov al, 0x52 ; inc eax ; push rdx ; call rax
0x0000000000179080 : mov al, 0x52 ; int1 ; inc eax ; push rsp ; int1 ; call rax
0x0000000000179398 : mov al, 0x52 ; jmp rax
0x00000000001793e8 : mov al, 0x53 ; call rax
0x000000000017940c : mov al, 0x54 ; call rax
0x0000000000187fac : mov al, 0x54 ; cld ; inc dword ptr [rax + 0x54] ; cld ; jmp rax
0x000000000017945c : mov al, 0x55 ; inc eax ; push rbp ; call rax
0x00000000001ac27c : mov al, 0x59 ; cmc ; jmp qword ptr [rdx]
0x0000000000187d9c : mov al, 0x60 ; cld ; inc dword ptr [rax + 0x60] ; cld ; call rax
0x000000000017950c : mov al, 0x63 ; call rax
0x0000000000187b84 : mov al, 0x63 ; cld ; inc dword ptr [rax + 0x63] ; cld ; call rax
0x0000000000179544 : mov al, 0x65 ; jmp rax
0x00000000001795a4 : mov al, 0x68 ; call rax
0x0000000000195c9c : mov al, 0x6e ; in eax, dx ; jmp qword ptr [rdx]
0x000000000012ef07 : mov al, 1 ; ret
0x000000000018e51d : mov al, 2 ; add ah, dl ; add dl, bh ; jmp rsp
0x000000000009e5bc : mov al, 4 ; add byte ptr [rax], al ; ret
0x00000000000f6df4 : mov al, 6 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000009e1bc : mov al, 8 ; add byte ptr [rax], al ; ret
0x000000000006eea8 : mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x00000000000fe1f9 : mov al, byte ptr [rbx] ; add al, 0x16 ; ret
0x000000000009a6eb : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000009a719 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000009a79d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000015d760 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000009a6c5 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000c2ffc : mov ax, 0xfde8 ; jne 0xc2fd2 ; ret
0x000000000009a6d5 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000019d9d9 : mov bh, -0x12 ; jmp qword ptr [rdx]
0x00000000001011cd : mov bh, -0x15 ; lodsd eax, dword ptr [rsi] ; mov edx, eax ; jmp 0x1011c8
0x000000000003d878 : mov bh, -0x15 ; ret 0x1f0f
0x000000000002fbb6 : mov bh, -0x40 ; ret
0x0000000000175b64 : mov bh, -0x4c ; mov edi, dword ptr [rdx] ; ret
0x0000000000002bc4 : mov bh, -0x4f ; or cl, cl ; clc ; ret
0x000000000010d1f4 : mov bh, -0xa ; or eax, esi ; bswap eax ; ret
0x00000000001a6cd1 : mov bh, -0xc ; call rdi
0x00000000000fc7f3 : mov bh, -1 ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000003748 : mov bh, -6 ; add ebx, ebp ; in al, -0x12 ; jne 0x3732 ; ret 0x975
0x000000000014e071 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000863ac : mov bh, 0x33 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000025383 : mov bh, 0x39 ; add al, ch ; add eax, 0xe9fffff4 ; ret
0x00000000000bde77 : mov bh, 0x43 ; adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x0000000000034af3 : mov bh, 0x48 ; add edx, edi ; jmp rdx
0x00000000001630d8 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000001a15bc : mov bh, 0x73 ; int1 ; jmp qword ptr [rdx]
0x00000000000d2ed3 : mov bh, 0x79 ; ret 0x6348
0x00000000001a1b0c : mov bh, 0x7b ; int1 ; jmp qword ptr [rdx]
0x000000000002fbaf : mov bh, 4 ; js 0x2fb3f ; loopne 0x2fbc6 ; movzx eax, ax ; ret
0x000000000002fbef : mov bh, 4 ; js 0x2fb7f ; loopne 0x2fc00 ; movzx eax, ax ; ret
0x000000000002fc8f : mov bh, 4 ; js 0x2fc1f ; loopne 0x2fca2 ; movzx eax, ax ; ret
0x000000000002fd6f : mov bh, 4 ; js 0x2fcfc ; loopne 0x2fd7c ; ret
0x000000000002fde8 : mov bh, 4 ; js 0x2fd75 ; loopne 0x2fdf5 ; ret
0x000000000002fdf8 : mov bh, 4 ; js 0x2fd88 ; loopne 0x2fe0f ; movzx eax, ax ; ret
0x000000000002fe38 : mov bh, 4 ; js 0x2fdc8 ; loopne 0x2fe49 ; movzx eax, ax ; ret
0x000000000002fed8 : mov bh, 4 ; js 0x2fe68 ; loopne 0x2feeb ; movzx eax, ax ; ret
0x00000000000fe2ee : mov bh, 4 ; js 0xfe27e ; loopne 0xfe305 ; movzx eax, ax ; ret
0x00000000000fe42e : mov bh, 4 ; js 0xfe3bb ; loopne 0xfe43b ; ret
0x00000000000fe4ce : mov bh, 4 ; js 0xfe45e ; loopne 0xfe4df ; movzx eax, ax ; ret
0x00000000000fe7de : mov bh, 4 ; js 0xfe76e ; loopne 0xfe7f1 ; movzx eax, ax ; ret
0x00000000000fec07 : mov bh, 4 ; js 0xfeb97 ; loopne 0xfec1e ; movzx eax, ax ; ret
0x00000000000fed27 : mov bh, 4 ; js 0xfecb4 ; loopne 0xfed34 ; ret
0x00000000000feda7 : mov bh, 4 ; js 0xfed37 ; loopne 0xfedb8 ; movzx eax, ax ; ret
0x00000000000ff067 : mov bh, 4 ; js 0xfeff7 ; loopne 0xff07a ; movzx eax, ax ; ret
0x00000000000b7fe6 : mov bh, 5 ; ret 0xc1b
0x0000000000177273 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000f16b5 : mov bh, 7 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000e5081 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000188a05 : mov bh, ah ; call qword ptr [rax + 0x10fffc8b]
0x000000000018827d : mov bh, ah ; call qword ptr [rax + 0x20fffc89]
0x0000000000188a45 : mov bh, ah ; call qword ptr [rax]
0x00000000001880bd : mov bh, ah ; call rsi
0x00000000001880b9 : mov bh, ah ; inc dword ptr [rsi - 0x76] ; cld ; call rsi
0x0000000000179fd4 : mov bh, bh ; ljmp ptr [rcx - 2] ; call qword ptr [rcx]
0x0000000000187385 : mov bh, bl ; call qword ptr [rax + 0x10fffb8b]
0x000000000019902e : mov bh, byte ptr [rdx + 0xd1cffed] ; pop rcx ; test al, -0x13 ; jmp qword ptr [rdx]
0x00000000001b1e0e : mov bh, byte ptr [rsi] ; idiv bh ; sbb al, 0xd ; salc ; cmp esi, esi ; jmp qword ptr [rdx]
0x00000000001b4ed9 : mov bh, dh ; call qword ptr [rdx]
0x0000000000178f8d : mov bl, -0x10 ; call qword ptr [rdi]
0x0000000000178fa9 : mov bl, -0x10 ; call rsp
0x0000000000001b0f : mov bl, -0x12 ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000001aa8bc : mov bl, -0x15 ; hlt ; jmp qword ptr [rdx]
0x00000000000dc6ec : mov bl, -0x60 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x0000000000176c43 : mov bl, -0x72 ; ret 0xdcd9
0x00000000000e134b : mov bl, -0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000001b0bb9 : mov bl, -0xa ; call qword ptr [rax]
0x0000000000003aa1 : mov bl, -9 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000189895 : mov bl, 0 ; add bh, bl ; or ah, ch ; jmp rsp
0x00000000001649ce : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000019c424 : mov bl, 0x49 ; out dx, al ; jmp qword ptr [rdx]
0x00000000000fc83c : mov bl, 0x66 ; nop ; xor eax, eax ; ret
0x00000000000f6839 : mov bl, 0xa ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, rbp ; call rbx
0x0000000000187381 : mov bl, bh ; call qword ptr [rax]
0x00000000001a3048 : mov bl, bh ; int1 ; jmp qword ptr [rcx]
0x00000000000e1884 : mov bl, bl ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], -0x7c ; ret
0x000000000009859d : mov byte ptr [r10 + 1], 0 ; ret
0x0000000000109acd : mov byte ptr [r11 + 1], 0 ; mov rax, rdi ; pop rbx ; ret
0x0000000000130bf5 : mov byte ptr [r8 + 1], r9b ; ret
0x00000000000f594a : mov byte ptr [r9 + r15 - 0x20], -0x77 ; ret
0x00000000000cb8a1 : mov byte ptr [r9 - 0x77], r8b ; ret 0xdb84
0x00000000000f3e42 : mov byte ptr [r9 - 1], 0 ; ret
0x00000000000310d9 : mov byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000002eb9c : mov byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000cf012 : mov byte ptr [rax + 0x63], cl ; ret 0x8948
0x0000000000130bf6 : mov byte ptr [rax + 1], cl ; ret
0x00000000000b1444 : mov byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000497de : mov byte ptr [rax + 8], 0 ; ret
0x00000000001270ec : mov byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000083444 : mov byte ptr [rax + rbx], dh ; pop rbx ; ret
0x0000000000083443 : mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x000000000013660d : mov byte ptr [rax + rcx], dl ; ret
0x0000000000046db4 : mov byte ptr [rax + rdx], 0 ; ret
0x00000000001a6208 : mov byte ptr [rax - 0xc], bh ; jmp qword ptr [rcx]
0x0000000000189b1d : mov byte ptr [rax], 0 ; cli ; pop rsp ; in eax, dx ; call rsp
0x00000000000f7a0e : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000371ef : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000037274 : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004e0fa : mov byte ptr [rax], cl ; jmp 0x4a379
0x000000000009d312 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001a8df8 : mov byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000118d7b : mov byte ptr [rbp + 3], bh ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019e228 : mov byte ptr [rbp - 0x11], al ; jmp qword ptr [rsi]
0x0000000000191918 : mov byte ptr [rbp - 0x16], dl ; jmp qword ptr [rcx]
0x0000000000109ace : mov byte ptr [rbx + 1], 0 ; mov rax, rdi ; pop rbx ; ret
0x00000000000f2eb6 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00000000001a8a38 : mov byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000002f5e : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000015b423 : mov byte ptr [rcx + 2], dl ; ret
0x000000000015b442 : mov byte ptr [rcx + 4], dl ; ret
0x000000000015b483 : mov byte ptr [rcx + 8], dl ; ret
0x00000000000973f3 : mov byte ptr [rcx + rax - 0x38], cl ; jmp rax
0x000000000002678d : mov byte ptr [rcx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000000f594b : mov byte ptr [rcx + rdi - 0x20], -0x77 ; ret
0x00000000000cb8a2 : mov byte ptr [rcx - 0x77], al ; ret 0xdb84
0x00000000000f3e43 : mov byte ptr [rcx - 1], 0 ; ret
0x00000000000e1fdf : mov byte ptr [rcx], -0x7d ; ret 0x4840
0x0000000000096529 : mov byte ptr [rcx], -0x7d ; ret 0x8301
0x0000000000095213 : mov byte ptr [rcx], 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000097824 : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x0000000000097750 : mov byte ptr [rcx], 0 ; mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x000000000009864f : mov byte ptr [rcx], 0xf ; mov dh, 0x46 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000135488 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; call 0xc1756
0x0000000000098757 : mov byte ptr [rcx], al ; jne 0x98748 ; mov rax, rbx ; pop rbx ; ret
0x000000000019df50 : mov byte ptr [rcx], al ; ret
0x000000000007169a : mov byte ptr [rcx], bh ; movzx eax, dil ; ret
0x0000000000071699 : mov byte ptr [rcx], dil ; movzx eax, dil ; ret
0x000000000015b400 : mov byte ptr [rcx], dl ; ret
0x0000000000098756 : mov byte ptr [rcx], r8b ; jne 0x98749 ; mov rax, rbx ; pop rbx ; ret
0x00000000000a198a : mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009ff2b : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009e74b : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a199b : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009f0e8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009da78 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a19a0 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a19c2 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a19e0 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a1a00 : mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009f15e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009dace : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009ffb1 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009e7a1 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a1a21 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a1a26 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a1a42 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a1a62 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a1a82 : mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a0033 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000009e823 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a1aa3 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009f1e0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009db50 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a1aa8 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a1aca : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a1ae8 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a1b08 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a1b24 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a1b44 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a1b64 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a1b84 : mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009e925 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a1ba5 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a1baa : mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a1bfa : mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a18d0 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a18ee : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a190e : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a1930 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a1950 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a1970 : mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a1806 : mov byte ptr [rdi + 1], ch ; ret
0x00000000001188f2 : mov byte ptr [rdi + 1], dh ; ret
0x00000000001188f1 : mov byte ptr [rdi + 1], sil ; ret
0x00000000000974d3 : mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000097433 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a1818 : mov byte ptr [rdi + 2], ch ; ret
0x000000000009ef96 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009d996 : mov byte ptr [rdi + 2], dh ; ret
0x000000000009fdb9 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009e669 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000a1829 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a182e : mov byte ptr [rdi + 3], ch ; ret
0x00000000000974f2 : mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000097452 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a1846 : mov byte ptr [rdi + 4], ch ; ret
0x000000000009efb2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009d9b2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000009fde7 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009e687 : mov byte ptr [rdi + 4], dl ; ret
0x00000000000a1857 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a185c : mov byte ptr [rdi + 5], ch ; ret
0x0000000000097479 : mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a186e : mov byte ptr [rdi + 6], ch ; ret
0x0000000000126a32 : mov byte ptr [rdi + 7], al ; ret
0x00000000000a188c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000d16c0 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000d1686 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000d16f0 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000d1717 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000d1760 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000d174d : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000d16b0 : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000d1690 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000a1898 : mov byte ptr [rdi + 8], ch ; ret
0x000000000009d9f3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000009fe39 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009e6c9 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000a18a9 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a18ae : mov byte ptr [rdi + 9], ch ; ret
0x00000000000985f0 : mov byte ptr [rdi + rcx], -0x4a ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000118a6d : mov byte ptr [rdi + rdx], 0 ; pop rbx ; ret
0x00000000000973ce : mov byte ptr [rdi - 1], al ; mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x00000000001452db : mov byte ptr [rdi - 1], dl ; ret
0x000000000018fad8 : mov byte ptr [rdi - 3], bl ; jmp qword ptr [rdx]
0x000000000019ef58 : mov byte ptr [rdi - 5], al ; call qword ptr [rax]
0x0000000000097400 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000001f5e8 : mov byte ptr [rdi], 0 ; ret
0x00000000000375e8 : mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000d16e0 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000001097cb : mov byte ptr [rdi], al ; jne 0x1097bf ; mov rax, rdi ; ret
0x000000000010998b : mov byte ptr [rdi], al ; jne 0x10997f ; mov rax, r10 ; ret
0x00000000000d1739 : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000a17f2 : mov byte ptr [rdi], ch ; ret
0x0000000000068e6b : mov byte ptr [rdi], cl ; xchg dword ptr [rbx - 0x76ffffcb], esp ; ret 0x348
0x0000000000097339 : mov byte ptr [rdi], dh ; add rdi, 1 ; mov rax, rdi ; ret
0x000000000009ef70 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000019c07c : mov byte ptr [rdi], dh ; out dx, al ; jmp qword ptr [rdx]
0x000000000009d970 : mov byte ptr [rdi], dh ; ret
0x000000000009fd92 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009e642 : mov byte ptr [rdi], dl ; ret
0x00000000000a1802 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000009d49a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000009859e : mov byte ptr [rdx + 1], 0 ; ret
0x000000000015d789 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x000000000009a6ee : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000015d7b7 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x000000000009a71c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000009d430 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x000000000009a7a0 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000111d02 : mov byte ptr [rdx], 0 ; pop r12 ; ret
0x00000000000f8b41 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000015d762 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000009a6c7 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000ad737 : mov byte ptr [rip + 0x358d4800], cl ; ret 0xd00
0x000000000002edf8 : mov byte ptr [rip + 0x391e7f], dl ; ret
0x000000000000245c : mov byte ptr [rip - 0x22beffe8], dh ; out -0x57, al ; ret 0xbd07
0x0000000000081ccd : mov byte ptr [rsi + rbx], bh ; mov rax, rsi ; pop rbx ; ret
0x0000000000081ccc : mov byte ptr [rsi + rbx], dil ; mov rax, rsi ; pop rbx ; ret
0x0000000000093764 : mov byte ptr [rsi + rdx + 1], al ; jg 0x93757 ; ret
0x0000000000194138 : mov byte ptr [rsi - 0x15], dl ; jmp qword ptr [rbx]
0x00000000001880dc : mov byte ptr [rsi - 0x79a90004], -4 ; jmp rsi
0x0000000000049943 : mov byte ptr [rsi], al ; jne 0x49927 ; mov rax, rsi ; ret
0x00000000001a8c78 : mov byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000498bf : mov byte ptr [rsi], dl ; jne 0x498af ; mov rax, rsi ; ret
0x00000000001a038d : mov ch, -0x10 ; jmp qword ptr [rdx]
0x00000000001aa32c : mov ch, -0x18 ; hlt ; jmp qword ptr [rdx]
0x00000000000f3167 : mov ch, -0x29 ; sub al, 0 ; mov rdx, rax ; jmp 0xf3105
0x0000000000003747 : mov ch, -0x49 ; cli ; add ebx, ebp ; in al, -0x12 ; jne 0x3733 ; ret 0x975
0x000000000017770a : mov ch, -0x55 ; ret
0x0000000000176d5f : mov ch, -0x67 ; in eax, -1 ; lahf ; mov dh, -0x39 ; ret 0xe71f
0x00000000000b006a : mov ch, -0x77 ; ret 0xe283
0x00000000000f9dff : mov ch, -0x77 ; sub al, 0 ; add rsp, 8 ; ret
0x00000000000d2c62 : mov ch, -0x7d ; ret 0x8901
0x00000000001b0c21 : mov ch, -0xa ; call qword ptr [rdi]
0x00000000001a6c49 : mov ch, -0xc ; call rdi
0x0000000000174682 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x000000000019be3c : mov ch, 0x33 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001759c3 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001a1b6c : mov ch, 0x7b ; int1 ; jmp qword ptr [rdx]
0x000000000018e61d : mov ch, 2 ; add byte ptr [rbx + 0x21], cl ; cli ; call rsp
0x00000000001b8f00 : mov ch, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000161af6 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001356ee : mov ch, bl ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000195999 : mov ch, ch ; call qword ptr [rax]
0x00000000001957f9 : mov ch, ch ; call qword ptr [rdx]
0x0000000000189ed9 : mov ch, dh ; call rsp
0x00000000001aec35 : mov ch, dh ; jmp qword ptr [rdx]
0x0000000000192c4d : mov ch, dl ; jmp qword ptr [rdx]
0x0000000000187550 : mov cl, -0x47 ; std ; call qword ptr [rcx]
0x00000000001b0a69 : mov cl, -0xa ; call qword ptr [rcx]
0x00000000001b0a81 : mov cl, -0xa ; jmp qword ptr [rcx]
0x00000000001a6b01 : mov cl, -0xc ; jmp qword ptr [rcx]
0x000000000018b269 : mov cl, -0xf ; call rsp
0x0000000000188775 : mov cl, -4 ; call qword ptr [rax + 0x20fffcb0]
0x00000000001885b5 : mov cl, -4 ; call rsi
0x000000000018eb69 : mov cl, -6 ; call rsp
0x000000000008c90b : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000017a284 : mov cl, 0x14 ; hlt ; call rbx
0x0000000000003b54 : mov cl, 0x22 ; xchg eax, ebp ; ret
0x0000000000117ce4 : mov cl, 0x35 ; push rsi ; ret
0x0000000000117cf3 : mov cl, 0x35 ; ret
0x0000000000117d90 : mov cl, 0x35 ; stosb byte ptr [rdi], al ; ret 0x2a
0x0000000000117d9f : mov cl, 0x35 ; wait ; ret 0x2a
0x000000000011faeb : mov cl, 0x4b ; sub al, byte ptr [rax] ; pop rbx ; ret
0x00000000001abde4 : mov cl, 0x58 ; cmc ; jmp qword ptr [rdx]
0x0000000000002bc5 : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x0000000000197164 : mov cl, 0x7b ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001976ec : mov cl, 0x7f ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000109095 : mov cl, 0xd ; popfq ; mov ebp, 0x3948002b ; ret 0x840f
0x00000000000fea27 : mov cl, 3 ; add al, 0xa ; ret
0x00000000001b7928 : mov cl, 6 ; add byte ptr [rax], al ; fld dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x00000000000fc535 : mov cl, byte ptr [rax - 0x7d] ; ret
0x000000000008fa55 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000087bb4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x0000000000176b32 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000001a27f5 : mov cl, dh ; jmp qword ptr [rdx]
0x00000000000a3a1b : mov cl, dl ; and cl, 0xf ; je 0xa3a47 ; ret
0x000000000002a105 : mov cs, dword ptr [rax] ; add eax, 0x29480000 ; ret 0x8b49
0x0000000000192e3e : mov cs, dword ptr [rdx + 0xd1cffea] ; xchg eax, edx ; mov edx, ebp ; jmp qword ptr [rdx]
0x000000000013e57e : mov cs, dword ptr [rip - 0x7cb80000] ; ret 0xe910
0x0000000000176dec : mov cs, edi ; ret 0x8b36
0x00000000000d6ee2 : mov cs, esi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000009d990 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000001a05f5 : mov dh, -0x10 ; jmp qword ptr [rdx]
0x000000000019d959 : mov dh, -0x12 ; call qword ptr [rax]
0x0000000000198351 : mov dh, -0x13 ; jmp qword ptr [rdx]
0x00000000000d4f8c : mov dh, -0x13 ; movsxd rcx, dword ptr [rax + r13*4] ; add rax, rcx ; jmp rax
0x00000000001a9a64 : mov dh, -0x24 ; hlt ; jmp qword ptr [rdx]
0x0000000000054b33 : mov dh, -0x25 ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000f7966 : mov dh, -0x2e ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000b57f9 : mov dh, -0x2e ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000008cb1a : mov dh, -0x2e ; sub eax, edx ; ret
0x00000000000adb68 : mov dh, -0x36 ; cmp dl, -1 ; cmovne eax, ecx ; ret
0x00000000000e246c : mov dh, -0x38 ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000007169e : mov dh, -0x39 ; ret
0x0000000000176d64 : mov dh, -0x39 ; ret 0xe71f
0x00000000000b8e11 : mov dh, -0x3a ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000007b2a6 : mov dh, -0x3b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a2640 : mov dh, -0x3e ; pop rbx ; ret
0x00000000000a2618 : mov dh, -0x3f ; pop rbx ; ret
0x00000000001226e8 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012ea0c : mov dh, -0x40 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012229d : mov dh, -0x40 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b0bf1 : mov dh, -0x40 ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000c325f : mov dh, -0x40 ; lea rax, qword ptr [rax + rax - 1] ; ret
0x00000000000369ed : mov dh, -0x40 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000006d298 : mov dh, -0x40 ; movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0x00000000000d503c : mov dh, -0x40 ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000000c87e5 : mov dh, -0x40 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000054a03 : mov dh, -0x40 ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x0000000000102aa1 : mov dh, -0x40 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005e0fd : mov dh, -0x40 ; neg eax ; pop rbx ; ret
0x0000000000022b19 : mov dh, -0x40 ; neg eax ; ret
0x0000000000126c94 : mov dh, -0x40 ; pop r12 ; ret
0x000000000012353e : mov dh, -0x40 ; pop rbp ; ret
0x00000000000489f3 : mov dh, -0x40 ; pop rbx ; neg eax ; pop rbp ; ret
0x00000000000f583d : mov dh, -0x40 ; pop rbx ; ret
0x000000000003755a : mov dh, -0x40 ; ret
0x00000000001880b8 : mov dh, -0x76 ; cld ; inc dword ptr [rsi - 0x76] ; cld ; call rsi
0x00000000000e391c : mov dh, -0x7c ; and al, 0xffffffffffffffa0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe2c1
0x00000000001880b0 : mov dh, -0x7c ; cld ; jmp qword ptr [rsi]
0x00000000000759ef : mov dh, -0xa ; ret 0x7508
0x000000000010d1dd : mov dh, -0xa ; shl eax, 8 ; or eax, esi ; bswap eax ; ret
0x000000000007b146 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007bd59 : mov dh, 0 ; pop rbx ; ret
0x00000000000741c3 : mov dh, 0 ; ret
0x000000000014e0e1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000008caf4 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000035330 : mov dh, 0x17 ; test dl, dl ; jne 0x35316 ; ret
0x000000000005648f : mov dh, 0x38 ; add r12, 1 ; jmp 0x56460
0x00000000000b8d26 : mov dh, 0x40 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000049b0d : mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000000c46fe : mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000c436a : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000109aaf : mov dh, 0x42 ; dec dword ptr [rcx - 0x7d] ; ret
0x0000000000047ddd : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000005b617 : mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011b2e2 : mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x00000000000603ee : mov dh, 0x45 ; or al, 0xffffffffffffff89 ; ret 0xeac0
0x0000000000096e76 : mov dh, 0x45 ; ret
0x000000000009708b : mov dh, 0x45 ; ret 0x8348
0x0000000000096e63 : mov dh, 0x45 ; ret 0x8349
0x00000000000985f3 : mov dh, 0x46 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001645a1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000164591 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000164561 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000164551 : mov dh, 0x47 ; lock movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000164581 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000164571 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000027865 : mov dh, 0x48 ; dec dword ptr [rcx - 0x7d] ; ret
0x00000000000e2e85 : mov dh, 0x48 ; xor byte ptr [rax - 0x77], cl ; ret 0xf980
0x0000000000098586 : mov dh, 0x49 ; dec dword ptr [rcx - 0x7d] ; ret 0x8401
0x00000000000278af : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x000000000002a863 : mov dh, 0x4a ; inc dword ptr [rcx - 0x78] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x0000000000175b22 : mov dh, 0x4e ; ret 0x474c
0x0000000000118b0d : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x0000000000033972 : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000006d8c4 : mov dh, 0x53 ; or al, 0xfffffffffffffff6 ; ret 0x7404
0x000000000006e001 : mov dh, 0x53 ; or al, 0xfffffffffffffff6 ; ret 0xf04
0x00000000001645a5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000164595 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000164565 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000164555 : mov dh, 0x56 ; lock sub eax, edx ; ret
0x000000000005020f : mov dh, 0x56 ; or al, 0xffffffffffffff85 ; sal byte ptr [rbp + 5], -0xa ; ret 0x7450
0x0000000000164575 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000000f61f1 : mov dh, 0x57 ; sbb byte ptr [rcx - 0xa], al ; ret 0x7401
0x0000000000187bcc : mov dh, 0x62 ; cld ; inc dword ptr [rsi + 0x62] ; cld ; call rsi
0x00000000000c8bed : mov dh, 0x7b ; dec dword ptr [rcx - 0x7d] ; ret 0x4101
0x0000000000045e46 : mov dh, 0x7d ; add cl, ch ; ret 0xffe1
0x0000000000177de0 : mov dh, 0xb ; add byte ptr [rax], al ; ret 0xfffd
0x00000000000874c5 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x0000000000088f61 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000160bd4 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000007b151 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c55a9 : mov dh, 2 ; jmp 0xc4d4a
0x00000000000e1b7f : mov dh, 4 ; or byte ptr [rcx], bh ; ret 0x1472
0x0000000000160bd1 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008caf1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000088f64 : mov dh, 7 ; sub eax, ecx ; ret
0x00000000000a27ee : mov dh, byte ptr [rdi + rbx*8 - 0xd] ; ret
0x0000000000195084 : mov dh, byte ptr [rsi - 0x14] ; jmp qword ptr [rdx]
0x0000000000189ea1 : mov dh, ch ; call rsp
0x00000000001a3931 : mov dh, dl ; call qword ptr [rcx]
0x000000000019dbb8 : mov dh, dl ; out dx, al ; jmp rdx
0x0000000000178f7d : mov dl, -0x10 ; call rax
0x0000000000178f69 : mov dl, -0x10 ; inc eax ; mov dl, -0x10 ; jmp qword ptr [rax]
0x0000000000178f6d : mov dl, -0x10 ; jmp qword ptr [rax]
0x000000000011fc6d : mov dl, -0x15 ; or dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x00000000000c3295 : mov dl, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000188654 : mov dl, -0x53 ; cld ; inc dword ptr [rdx - 0x53] ; cld ; call rdx
0x000000000002f7d7 : mov dl, -0x75 ; add al, 7 ; ret
0x000000000018815c : mov dl, -0x7a ; cld ; inc dword ptr [rdx - 0x7a] ; cld ; call rdx
0x00000000001a6ba1 : mov dl, -0xc ; call qword ptr [rsi]
0x00000000001a6bb9 : mov dl, -0xc ; jmp qword ptr [rcx]
0x0000000000003a4c : mov dl, 0x1e ; ret
0x000000000003d875 : mov dl, 0x40 ; jle 0x3d835 ; jmp 0x3d842
0x000000000002e18f : mov dl, 0x4d ; add esi, edx ; jmp r14
0x000000000016646d : mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001154b4 : mov dl, 2 ; cmove eax, edx ; ret
0x00000000000f7072 : mov dl, 4 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000f6f92 : mov dl, 5 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001ad458 : mov dl, bh ; cmc ; jmp rsp
0x000000000009e663 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000009e682 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009e6c3 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000145360 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000009fd90 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009e640 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a1800 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000001929dd : mov dl, ch ; jmp qword ptr [rdx]
0x000000000018b591 : mov dl, dh ; jmp rsp
0x00000000000e5652 : mov dl, dl ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000fafb2 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00000000000c28c3 : mov dword ptr [0x2d0], esi ; mov eax, esi ; ret
0x00000000000f1654 : mov dword ptr [r8 + 0x21], esi ; ret
0x00000000000f164f : mov dword ptr [r8 + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x0000000000124869 : mov dword ptr [r8 + 0x6c], eax ; mov eax, 1 ; ret
0x00000000000a3b4a : mov dword ptr [r8 + 4], ecx ; jne 0xa3b1f ; ret
0x000000000012487a : mov dword ptr [r8], eax ; mov eax, 1 ; ret
0x0000000000118bb8 : mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000118b14 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000020bf0 : mov dword ptr [r9 + rcx*4], esi ; inc dword ptr [rdi + 4] ; ret
0x0000000000109418 : mov dword ptr [r9], r8d ; xor eax, eax ; ret
0x0000000000128cfc : mov dword ptr [rax + 0x10], edx ; mov eax, 1 ; ret
0x0000000000074c49 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074c89 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000075ae9 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000c48a4 : mov dword ptr [rax + 0x18], esi ; jmp 0xc42fa
0x0000000000073aa9 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x00000000000d2aeb : mov dword ptr [rax + 0x20], edx ; xor eax, eax ; ret
0x00000000000d2b1d : mov dword ptr [rax + 0x20], esi ; xor eax, eax ; ret
0x00000000000f1655 : mov dword ptr [rax + 0x21], esi ; ret
0x00000000001a8a1c : mov dword ptr [rax + 0x2b700001], ds ; cmc ; jmp qword ptr [rcx]
0x00000000000f1650 : mov dword ptr [rax + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x0000000000074c4d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000075b87 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000003c7be : mov dword ptr [rax + 0x60], edx ; call qword ptr [rbx]
0x000000000012486a : mov dword ptr [rax + 0x6c], eax ; mov eax, 1 ; ret
0x0000000000128bdc : mov dword ptr [rax + 0xc], edx ; mov eax, 1 ; ret
0x000000000005e22b : mov dword ptr [rax + 4], 1 ; xor eax, eax ; ret
0x00000000000a3b4b : mov dword ptr [rax + 4], ecx ; jne 0xa3b1e ; ret
0x000000000007c74a : mov dword ptr [rax + 8], 0 ; ret
0x000000000005e1b5 : mov dword ptr [rax + 8], ecx ; add dword ptr [rdx + 4], 1 ; ret
0x00000000001247e4 : mov dword ptr [rax + 8], edx ; mov eax, 1 ; ret
0x0000000000104917 : mov dword ptr [rax + rax - 0x3ed70000], eax ; mov eax, ecx ; ret
0x00000000000e25d0 : mov dword ptr [rax + rax*4], edx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d76d2 : mov dword ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000f9e00 : mov dword ptr [rax + rax], ebp ; add rsp, 8 ; ret
0x000000000008d122 : mov dword ptr [rax + rdx - 2], ecx ; ret
0x0000000000081ccb : mov dword ptr [rax - 0x78], 0x89481e3c ; lock pop rbx ; ret
0x00000000000d46bb : mov dword ptr [rax - 0x7b], cs ; rol byte ptr [rcx + 0xf], -0x6b ; ret 0x840f
0x000000000012f66d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x000000000004df2e : mov dword ptr [rax], 0x16 ; jmp 0x4a15b
0x00000000000f25e8 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x0000000000036e65 : mov dword ptr [rax], 0x16 ; or eax, 0xffffffff ; ret
0x00000000000f5888 : mov dword ptr [rax], 0x16 ; pop rbx ; ret
0x00000000000f5849 : mov dword ptr [rax], 0x16 ; xor eax, eax ; pop rbx ; ret
0x00000000000b1148 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x0000000000070215 : mov dword ptr [rax], 0x89480000 ; ret 0x8b48
0x0000000000081cf0 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x0000000000081eb0 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000000f1da8 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000bd955 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000022b26 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x000000000009e1e0 : mov dword ptr [rax], cs ; add byte ptr [rax], al ; ret
0x00000000000a36d3 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000004bee1 : mov dword ptr [rax], eax ; jmp 0x4beab
0x0000000000061cc1 : mov dword ptr [rax], eax ; jmp 0x61c8b
0x000000000012487b : mov dword ptr [rax], eax ; mov eax, 1 ; ret
0x00000000000cbf8f : mov dword ptr [rax], eax ; or eax, 0xffffffff ; ret
0x00000000000e25b6 : mov dword ptr [rax], ebp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026eb5 : mov dword ptr [rax], ebx ; jmp 0x26e7e
0x0000000000029af7 : mov dword ptr [rax], ebx ; mov eax, dword ptr [rsp + 0x1c] ; jmp 0x29ac8
0x000000000002acc7 : mov dword ptr [rax], ebx ; mov eax, dword ptr [rsp + 0x24] ; jmp 0x2ac98
0x00000000000497dc : mov dword ptr [rax], ecx ; mov byte ptr [rax + 8], 0 ; ret
0x000000000002641f : mov dword ptr [rax], ecx ; mov eax, 7 ; jmp 0x263f2
0x00000000000751d5 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000007824a : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000fa2e1 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x0000000000118bb9 : mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x00000000000831b6 : mov dword ptr [rax], edi ; ret
0x00000000000bf252 : mov dword ptr [rax], edx ; add rsp, 0x18 ; ret
0x00000000000fae83 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bf300 : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x00000000000a43a1 : mov dword ptr [rax], edx ; jne 0xa439d ; ret
0x0000000000075130 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000118b15 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x00000000000f1663 : mov dword ptr [rax], edx ; or eax, 0xffffffff ; ret
0x00000000000f224f : mov dword ptr [rax], edx ; or rax, 0xffffffffffffffff ; jmp 0xf2221
0x00000000000f24af : mov dword ptr [rax], edx ; or rax, 0xffffffffffffffff ; jmp 0xf2481
0x000000000002f8f4 : mov dword ptr [rax], edx ; ret
0x0000000000075e01 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000000bf3df : mov dword ptr [rax], esi ; add rsp, 0x40 ; mov eax, edx ; pop rbx ; ret
0x000000000010caaa : mov dword ptr [rax], esi ; jne 0x10ca9d ; ret
0x00000000000bebd3 : mov dword ptr [rax], esi ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000df3bc : mov dword ptr [rax], esp ; xor eax, eax ; jmp 0xdf389
0x00000000000df3bb : mov dword ptr [rax], r12d ; xor eax, eax ; jmp 0xdf38a
0x00000000000cbf8e : mov dword ptr [rax], r8d ; or eax, 0xffffffff ; ret
0x000000000018a504 : mov dword ptr [rax], ss ; add dword ptr [rax], eax ; cdq ; add edi, ebp ; call rsp
0x00000000000fd410 : mov dword ptr [rbp + 0x2c], ss ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000001a5f1c : mov dword ptr [rbp + 1], gs ; add byte ptr [rax], dh ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x000000000018da3c : mov dword ptr [rbp + 2], ds ; add byte ptr [rdx], ah ; jge 0x18da42 ; call rsp
0x00000000000e4d42 : mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000005f461 : mov dword ptr [rbp - 0x11a0], ecx ; jmp rax
0x000000000005c41c : mov dword ptr [rbp - 0x1f0], edx ; call 0x108658
0x0000000000189784 : mov dword ptr [rbp - 0x24d20000], gs ; jmp 0x189792
0x0000000000049fa9 : mov dword ptr [rbp - 0x5b0], ecx ; jmp rax
0x0000000000023293 : mov dword ptr [rbp - 0x68], eax ; call rcx
0x00000000000f88d7 : mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0xf8909
0x00000000000f89a8 : mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0xf89db
0x0000000000108278 : mov dword ptr [rbp - 0x70], edx ; mov rdx, r14 ; call rax
0x0000000000108530 : mov dword ptr [rbp - 0x80], eax ; call r8
0x0000000000107af5 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000107e80 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000001082fc : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000107f00 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000050a0e : mov dword ptr [rbp - 0xb0], eax ; mov rdi, rbx ; call rax
0x0000000000058ea4 : mov dword ptr [rbp - 0xf8], eax ; jmp 0x58e75
0x0000000000114012 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114011 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002c977 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000136c86 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000079377 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000bda38 : mov dword ptr [rbx + 0x10], eax ; mov rdx, rbp ; xor ecx, ecx ; jmp 0xbda0e
0x0000000000079889 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000102b54 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007f97e : mov dword ptr [rbx + 0x14], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012f302 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000136c33 : mov dword ptr [rbx + 0x18], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000102b84 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007bc23 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000012f359 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e462b : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000073ad5 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00000000000872e7 : mov dword ptr [rbx + 0x30], eax ; call rcx
0x0000000000111f31 : mov dword ptr [rbx + 0x30], eax ; mov eax, 1 ; pop rbx ; ret
0x00000000000d582e : mov dword ptr [rbx + 0x30], eax ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000872e1 : mov dword ptr [rbx + 0x40], eax ; mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], eax ; call rcx
0x00000000000369ef : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000007c04f : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f1126 : mov dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x00000000000873a2 : mov dword ptr [rbx + 0x48], ecx ; mov rdi, r9 ; call rcx
0x000000000007bc8b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000075cca : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007a662 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000074cde : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000759b1 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079267 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x000000000007920b : mov dword ptr [rbx + 0xc0], eax ; mov edx, r8d ; jmp 0x791b3
0x000000000007920a : mov dword ptr [rbx + 0xc0], r8d ; mov edx, r8d ; jmp 0x791b4
0x000000000002c997 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000102b24 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000037445 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x000000000007bead : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000008765d : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000da8ff : mov dword ptr [rbx + rdi + 0x24], 0x39da7fbe ; ret 0xc189
0x00000000000dabd0 : mov dword ptr [rbx + rdi + 0x24], 0x39ec7fbe ; ret 0xc189
0x00000000000dc108 : mov dword ptr [rbx + rdi + 4], 0x39da7fbe ; ret 0xc189
0x000000000019597c : mov dword ptr [rbx - 0x13], gs ; jmp qword ptr [rdx]
0x000000000012f662 : mov dword ptr [rbx], 0 ; call 0x12b928
0x00000000000f5872 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x00000000001b7f6c : mov dword ptr [rbx], 0x6c50000 ; add byte ptr [rax], al ; ret
0x0000000000122cc1 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000136eae : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008739f : mov dword ptr [rbx], eax ; mov qword ptr [rbx + 0x48], r9 ; mov rdi, r9 ; call rcx
0x000000000007c052 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b832 : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000f5837 : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x000000000012a458 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000075aec : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000872e5 : mov dword ptr [rbx], edi ; mov dword ptr [rbx + 0x30], eax ; call rcx
0x000000000007bfb0 : mov dword ptr [rbx], edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000744bc : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007bc26 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000006f0b8 : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019151c : mov dword ptr [rbx], fs ; add byte ptr [rax], al ; adc byte ptr [rsi - 0x16], cl ; jmp qword ptr [rbx]
0x00000000001247cc : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x0000000000189584 : mov dword ptr [rcx + 0x40130000], fs ; jmp 0x189592
0x0000000000128418 : mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
0x0000000000128375 : mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
0x0000000000128445 : mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x0000000000021bfd : mov dword ptr [rcx + 0x968], edx ; ret
0x000000000015b462 : mov dword ptr [rcx + 3], edx ; ret
0x000000000015b453 : mov dword ptr [rcx + 4], edx ; ret
0x00000000000a28c1 : mov dword ptr [rcx + 4], esi ; jne 0xa28d2 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000015b4c4 : mov dword ptr [rcx + 5], edx ; ret
0x000000000015b4d4 : mov dword ptr [rcx + 6], edx ; ret
0x000000000015b4a3 : mov dword ptr [rcx + 7], edx ; ret
0x000000000015b494 : mov dword ptr [rcx + 8], edx ; ret
0x00000000000a28c6 : mov dword ptr [rcx + 8], esi ; ret
0x0000000000097386 : mov dword ptr [rcx + rcx*4], 0x8948fc47 ; clc ; ret
0x0000000000020bf1 : mov dword ptr [rcx + rcx*4], esi ; inc dword ptr [rdi + 4] ; ret
0x00000000000da8ed : mov dword ptr [rcx + rdi + 0x24], 0x39ec7cbe ; ret 0xc189
0x00000000000dc0f6 : mov dword ptr [rcx + rdi + 4], 0x39ec7cbe ; ret 0xc189
0x000000000010d478 : mov dword ptr [rcx - 0x77], es ; xor cl, byte ptr [rcx - 0x7d] ; ret 0x4d04
0x00000000000c6bb3 : mov dword ptr [rcx], 0xdc75d284 ; ret
0x00000000000c6bdd : mov dword ptr [rcx], 0xdf75d284 ; ret
0x00000000000a3d36 : mov dword ptr [rcx], eax ; jne 0xa3d28 ; mov rax, rbx ; pop rbx ; ret
0x0000000000036eba : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000078e37 : mov dword ptr [rcx], eax ; ret
0x0000000000077d44 : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000109419 : mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000000000118bbc : mov dword ptr [rcx], ecx ; ret
0x0000000000078c81 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000118b88 : mov dword ptr [rcx], edi ; ret
0x000000000008c667 : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x000000000015b421 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000015b440 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000015b481 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000015b460 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000015b4a1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000015b4b1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000015b4c1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000015b4d1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000015b4e1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000015b4f1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000015b450 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000015b491 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000118b18 : mov dword ptr [rcx], edx ; ret
0x00000000000a3d35 : mov dword ptr [rcx], r8d ; jne 0xa3d29 ; mov rax, rbx ; pop rbx ; ret
0x00000000000e59cb : mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000e5a02 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x000000000009f0fd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009ff4d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009f13b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009ff8b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009f1bd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a000d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009dacb : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009e79e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009db4d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000038bbf : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a19bd : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a19fb : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a1a7d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009e820 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009db90 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009dbb0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009db71 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000e59f0 : mov dword ptr [rdi + 0x10c], esi ; xor al, al ; ret
0x000000000009f223 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a0073 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000009db93 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a1ae3 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000012efc1 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x000000000007bbb3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000073e67 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000092afa : mov dword ptr [rdi + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f205 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a0055 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009f243 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a0093 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000009db75 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a1ac5 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a1b03 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000012ef8f : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x000000000012ef64 : mov dword ptr [rdi + 0x18], edx ; ret
0x000000000012ef01 : mov dword ptr [rdi + 0x18], esi ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x000000000012ef26 : mov dword ptr [rdi + 0x18], esi ; ret
0x000000000012ef04 : mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x0000000000128c3c : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000012f091 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000d275a : mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000d275d : mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000929e9 : mov dword ptr [rdi + 0x38], ecx ; ret
0x0000000000128bf4 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x000000000007bbe3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000376f9 : mov dword ptr [rdi + 0x78], 0xffffffff ; ret
0x00000000000e506e : mov dword ptr [rdi + 0x80], edx ; ret
0x00000000001183a5 : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x000000000009f17d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009ffcd : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009daed : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000a1a3d : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009f11b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009ff6b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009f19d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009ffed : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009daab : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a19db : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a1a5d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000014df25 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014dd68 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000014e008 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000014deb5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014dcf8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000003d350 : mov dword ptr [rdi + 2], edx ; ret
0x000000000009efe7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000009fe17 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000014de45 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014dc88 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009d9d7 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000a1887 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000974b3 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000097413 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x000000000003d34a : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x0000000000097503 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009fdf9 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000014dc18 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000097463 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x000000000009d9c9 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000a1869 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000e50c0 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000974b2 : mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000097412 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x000000000009f07b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009febb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000014dba8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009da3b : mov dword ptr [rdi + 5], edx ; ret
0x00000000000a192b : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009f09b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000009fedb : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000014db38 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009da4b : mov dword ptr [rdi + 6], edx ; ret
0x00000000000a194b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009f039 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009fe79 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009f0bb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000009fefb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000014dac8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009da19 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a18e9 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a196b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000f3da8 : mov dword ptr [rdi + 8], 0 ; ret
0x000000000007bbb7 : mov dword ptr [rdi + 8], eax ; ret
0x00000000000f12a0 : mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x0000000000038b44 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000004e6f3 : mov dword ptr [rdi + 8], edx ; jmp 0x4e6be
0x000000000009fe5b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009f059 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009fe99 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009f01b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000038344 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x00000000000741bf : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x000000000003ccba : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a18cb : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a1909 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000f3d98 : mov dword ptr [rdi + 8], esi ; ret
0x000000000008d129 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000008d132 : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x0000000000145025 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000145063 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000038aaf : mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000001a791c : mov dword ptr [rdi - 0x226fffff], es ; hlt ; jmp qword ptr [rcx]
0x00000000001453ac : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014d578 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014558c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014d4f8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014577c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014d478 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014594d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014d3e9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000145b4d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014d359 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000145d4d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014d2c9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000009e960 : mov dword ptr [rdi - 1], edx ; ret
0x000000000014572d : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000145545 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000145729 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000097357 : mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x0000000000145b09 : mov dword ptr [rdi - 4], ecx ; ret
0x00000000001451df : mov dword ptr [rdi - 4], edx ; ret
0x000000000009739b : mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x0000000000145b06 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000973b5 : mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x0000000000145d06 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000973d1 : mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x0000000000145f06 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000038a3a : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000145067 : mov dword ptr [rdi - 8], edx ; ret
0x00000000001451dc : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001452d8 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000145224 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014d5f8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000487b0 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x0000000000036873 : mov dword ptr [rdi], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000039c9e : mov dword ptr [rdi], eax ; mov eax, 1 ; ret
0x00000000000f3d95 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000009282a : mov dword ptr [rdi], eax ; pop rbx ; pop rbp ; ret
0x0000000000038a34 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000038b3e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000037a16 : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000053806 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000097362 : mov dword ptr [rdi], ecx ; add rdi, 2 ; mov rax, rdi ; ret
0x00000000000974e0 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009efb5 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009f007 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009ef94 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009d994 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000009fdb7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009e667 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000097450 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x000000000009fde5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009e685 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009fe37 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009e6c7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009efe5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000009fe15 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009d9d5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000097410 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x000000000009f037 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009fe77 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009da17 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009f057 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009fe97 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009da27 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000008d127 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000009da38 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009da48 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009da58 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000003ccca : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000008d12f : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000097440 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x0000000000097460 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x000000000009d9c6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009da08 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000038a09 : mov dword ptr [rdi], ecx ; ret
0x000000000009ef84 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009fda4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009efa2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009fdd2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009eff4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009fe24 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009e980 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009e9c1 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009e9e1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009e9f1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009ea01 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009ea11 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009e990 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009e9d1 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x000000000001fc28 : mov dword ptr [rdi], edx ; ret
0x00000000000a1814 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a1842 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a1894 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000019f91c : mov dword ptr [rdi], es ; add dword ptr [rax], eax ; and byte ptr [rbp - 0x10], bl ; call qword ptr [rax]
0x00000000000974c1 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000097431 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x0000000000039c7f : mov dword ptr [rdi], esi ; mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x0000000000097421 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x00000000000e50a1 : mov dword ptr [rdi], esi ; xor al, al ; ret
0x0000000000118cab : mov dword ptr [rdx + 0x10], eax ; xor eax, eax ; ret
0x000000000006eea7 : mov dword ptr [rdx + 0x140], ecx ; ret
0x00000000000793d5 : mov dword ptr [rdx + 0x140], edi ; pop rbx ; ret
0x0000000000078c7e : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000078e34 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x0000000000122850 : mov dword ptr [rdx + 0x20], esi ; ret
0x0000000000025619 : mov dword ptr [rdx + 0x50], ecx ; mov dword ptr [rdx + 0x54], eax ; ret
0x000000000002561c : mov dword ptr [rdx + 0x54], eax ; ret
0x000000000012282c : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000122830 : mov dword ptr [rdx + 0x68], ecx ; ret
0x000000000015d7e7 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x000000000009a75c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000015d7c9 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009a73e : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000015d87b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000015d7f9 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x00000000001594a9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000015d89b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000015d819 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x00000000001594b9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000015d839 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000015d8bb : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000009a7e0 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000015d859 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000015d74b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000009a7c2 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000001283b1 : mov dword ptr [rdx + 8], edi ; ret
0x000000000018e865 : mov dword ptr [rdx], 0xfa55f400 ; call rsp
0x000000000015d774 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000015d7a2 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000015d6f4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000000ec7c2 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000039d33 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000009a6d9 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000036be4 : mov dword ptr [rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000007285f : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000118044 : mov dword ptr [rdx], ebp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000cbce1 : mov dword ptr [rdx], ecx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000a2915 : mov dword ptr [rdx], ecx ; jne 0xa290d ; ret
0x000000000003ccec : mov dword ptr [rdx], ecx ; mov dword ptr [rsi], ecx ; ret
0x0000000000074fc6 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000039c86 : mov dword ptr [rdx], ecx ; ret
0x00000000000e3d5b : mov dword ptr [rdx], edi ; ret
0x00000000001283ae : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000092d1f : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010b8f8 : mov dword ptr [rip + 0x2b7ec2], edx ; pop rbp ; ret
0x00000000000fd270 : mov dword ptr [rip + 0x2c208a], ebx ; pop rbx ; ret
0x00000000000f52da : mov dword ptr [rip + 0x2c9fd0], edi ; ret
0x00000000000f3165 : mov dword ptr [rip + 0x2cd7b5], eax ; mov rdx, rax ; jmp 0xf3107
0x00000000000f4576 : mov dword ptr [rip + 0x2ce0b4], eax ; mov rdx, rax ; jmp 0xf4558
0x000000000019e1e2 : mov dword ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x000000000008b612 : mov dword ptr [rip + 0x336658], eax ; ret
0x0000000000037b93 : mov dword ptr [rip + 0x3874f7], eax ; mov eax, edx ; ret
0x0000000000037b7c : mov dword ptr [rip + 0x38751e], edx ; ret
0x0000000000021a9b : mov dword ptr [rip + 0x39d78f], eax ; pop r12 ; ret
0x000000000001f570 : mov dword ptr [rip + 0x3a14da], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000022488 : mov dword ptr [rip + 0x3a2772], ecx ; pop rbx ; ret
0x0000000000022487 : mov dword ptr [rip + 0x3a2772], r9d ; pop rbx ; ret
0x0000000000022191 : mov dword ptr [rip + 0x3a2a69], ecx ; pop rbx ; ret
0x0000000000022190 : mov dword ptr [rip + 0x3a2a69], r9d ; pop rbx ; ret
0x00000000000e4af4 : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000003d276 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x000000000003cc24 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000003cc28 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x00000000000ca8e9 : mov dword ptr [rsi + 0x30], ebp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f0946 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x000000000018b90c : mov dword ptr [rsi + 0x74980001], ss ; call rsp
0x00000000000e4fdf : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x000000000003d2c0 : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x000000000003d307 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x00000000000a3b94 : mov dword ptr [rsi + 4], 0 ; ret
0x00000000000e4ad7 : mov dword ptr [rsi + 8], 0 ; ret
0x00000000001219b1 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000e4af0 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000000b0c51 : mov dword ptr [rsi + rcx], edx ; jne 0xb0c4e ; ret
0x00000000001219cf : mov dword ptr [rsi], 0 ; ret
0x00000000000fb339 : mov dword ptr [rsi], 0x16 ; ret
0x00000000000973b3 : mov dword ptr [rsi], 0x48fa4789 ; mov eax, edi ; ret
0x0000000000121a40 : mov dword ptr [rsi], 0xa ; ret
0x0000000000121a30 : mov dword ptr [rsi], 0xb ; ret
0x0000000000121a80 : mov dword ptr [rsi], 0xc ; ret
0x00000000000a601e : mov dword ptr [rsi], 1 ; xor ebp, ebp ; mov edx, eax ; jmp 0xa5fd9
0x00000000000a885e : mov dword ptr [rsi], 1 ; xor ebp, ebp ; mov edx, eax ; jmp 0xa8819
0x00000000000aaf0e : mov dword ptr [rsi], 1 ; xor ebp, ebp ; mov edx, eax ; jmp 0xaaec9
0x0000000000121a70 : mov dword ptr [rsi], 8 ; ret
0x000000000007e08b : mov dword ptr [rsi], eax ; mov rax, r8 ; ret
0x00000000000fb32c : mov dword ptr [rsi], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000073e6b : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000003ccee : mov dword ptr [rsi], ecx ; ret
0x0000000000118890 : mov dword ptr [rsi], ecx ; xor eax, eax ; ret
0x000000000019c304 : mov dword ptr [rsi], edi ; out dx, al ; jmp qword ptr [rdx]
0x00000000001183a9 : mov dword ptr [rsi], edi ; ret
0x000000000010d0f9 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x0000000000195702 : mov dword ptr [rsi], es ; add dword ptr [rdi], 3 ; ret
0x00000000000366b5 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x00000000000814ec : mov dword ptr [rsp + 0x10], ecx ; call qword ptr [rax]
0x00000000000815c0 : mov dword ptr [rsp + 0x10], ecx ; call rdx
0x00000000000815bb : mov dword ptr [rsp + 0x20], eax ; mov qword ptr [rsp + 0x10], rcx ; call rdx
0x00000000000813d2 : mov dword ptr [rsp + 0x28], ebx ; call rax
0x0000000000081399 : mov dword ptr [rsp + 0x28], esi ; mov rdi, r14 ; call qword ptr [rax]
0x00000000000813d1 : mov dword ptr [rsp + 0x28], r11d ; call rax
0x00000000000813cd : mov dword ptr [rsp + 0x30], edx ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x000000000012061a : mov dword ptr [rsp + 8], 0 ; call qword ptr [rax]
0x0000000000087350 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x0000000000028a12 : mov dword ptr [rsp + 8], eax ; call r12
0x0000000000025a4f : mov dword ptr [rsp + 8], eax ; call r14
0x000000000002639e : mov dword ptr [rsp + 8], eax ; call r15
0x0000000000025956 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000012e695 : mov dword ptr [rsp + 8], eax ; lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000012f41c : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x000000000007ea73 : mov dword ptr [rsp + 8], ecx ; call qword ptr [rax]
0x000000000012a850 : mov dword ptr [rsp + 8], edi ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000027d92 : mov dword ptr [rsp + 8], esi ; mov rsi, qword ptr [rsp + 0x50] ; call rax
0x0000000000039e26 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000036965 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x00000000001210a8 : mov dword ptr [rsp], eax ; call qword ptr [r11]
0x00000000000277b2 : mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x00000000000234a5 : mov dword ptr [rsp], eax ; call rbx
0x000000000011e784 : mov dword ptr [rsp], ecx ; call r12
0x00000000000be77d : mov dword ptr [rsp], edx ; mov rdx, qword ptr [rsp + 0x28] ; call rax
0x000000000004df2d : mov dword ptr fs:[rax], 0x16 ; jmp 0x4a15c
0x00000000000f25e7 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000f5887 : mov dword ptr fs:[rax], 0x16 ; pop rbx ; ret
0x00000000000b1147 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000081eaf : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000bd954 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000022b25 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00000000000fa2e0 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00000000000bf251 : mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
0x00000000000bf2ff : mov dword ptr fs:[rax], edx ; add rsp, 8 ; ret
0x00000000000f1662 : mov dword ptr fs:[rax], edx ; or eax, 0xffffffff ; ret
0x00000000000f224e : mov dword ptr fs:[rax], edx ; or rax, 0xffffffffffffffff ; jmp 0xf2222
0x00000000000f24ae : mov dword ptr fs:[rax], edx ; or rax, 0xffffffffffffffff ; jmp 0xf2482
0x00000000000cbf8d : mov dword ptr fs:[rax], r8d ; or eax, 0xffffffff ; ret
0x0000000000114010 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036eb9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec7c1 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000036be3 : mov dword ptr fs:[rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fb338 : mov dword ptr fs:[rsi], 0x16 ; ret
0x00000000000fb32b : mov dword ptr fs:[rsi], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000145540 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000009d980 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000001200a4 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000a26d8 : mov eax, 0x10 ; pop rbx ; ret
0x00000000001154ca : mov eax, 0x100 ; nop ; ret
0x00000000001154c4 : mov eax, 0x101 ; ret
0x00000000001154d1 : mov eax, 0x102 ; ret
0x00000000001154bc : mov eax, 0x104 ; ret
0x00000000000f1c8d : mov eax, 0x14 ; sub eax, edx ; ret
0x00000000000e59e3 : mov eax, 0x16 ; jbe 0xe59f8 ; ret
0x0000000000085327 : mov eax, 0x16 ; je 0x85337 ; ret
0x00000000000e5095 : mov eax, 0x16 ; je 0xe50a8 ; ret
0x000000000003dfe9 : mov eax, 0x1b8 ; add byte ptr [rax + 1], cl ; ret
0x00000000000cc1d8 : mov eax, 0x1c ; syscall ; neg eax ; ret
0x000000000018e5b5 : mov eax, 0x1ed40002 ; cli ; call rsp
0x00000000000a26fb : mov eax, 0x20 ; pop rbx ; ret
0x00000000000c3140 : mov eax, 0x20 ; ret
0x000000000002fd97 : mov eax, 0x200 ; ret
0x00000000000a26f4 : mov eax, 0x30 ; pop rbx ; ret
0x00000000000c1b61 : mov eax, 0x3948fffb ; ret
0x00000000000d6ed5 : mov eax, 0x39c77f04 ; ret 0xc189
0x00000000000d6ebd : mov eax, 0x39df7f04 ; ret 0xc189
0x0000000000098029 : mov eax, 0x3d ; jmp 0x97ff9
0x00000000000a26ed : mov eax, 0x40 ; pop rbx ; ret
0x00000000000c3190 : mov eax, 0x40 ; ret
0x0000000000174c7b : mov eax, 0x45155e93 ; ret 0x591c
0x000000000008d5da : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x000000000012a0c9 : mov eax, 0x5b000000 ; pop rbp ; ret
0x00000000000ec010 : mov eax, 0x5f ; syscall ; ret
0x00000000000a26e6 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000c28e0 : mov eax, 0x66 ; syscall ; ret
0x00000000000c2900 : mov eax, 0x68 ; syscall ; ret
0x00000000000c28f0 : mov eax, 0x6b ; syscall ; ret
0x00000000000c2910 : mov eax, 0x6c ; syscall ; ret
0x00000000000c28d0 : mov eax, 0x6e ; syscall ; ret
0x00000000000c2b10 : mov eax, 0x6f ; syscall ; ret
0x00000000000c3049 : mov eax, 0x7d00 ; ret
0x00000000000c3078 : mov eax, 0x7e ; ret
0x00000000000c2fcb : mov eax, 0x7f ; ret
0x00000000000a26df : mov eax, 0x80 ; pop rbx ; ret
0x00000000000c1b28 : mov eax, 0x8948fffb ; ret
0x00000000000ec716 : mov eax, 0x894c1f74 ; ret 0x6348
0x00000000001248f7 : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001874f1 : mov eax, 0xbb11fffd ; std ; call qword ptr [rcx]
0x00000000000c2ffd : mov eax, 0xc975fde8 ; ret
0x000000000010d0e8 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x0000000000108ca2 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x000000000012b966 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000fb430 : mov eax, 0xe4 ; syscall ; ret
0x00000000000c306f : mov eax, 0xfa ; ret
0x00000000000c3090 : mov eax, 0xfc17 ; ret
0x00000000000c3080 : mov eax, 0xfffa ; ret
0x00000000000c14fc : mov eax, 0xfffffff2 ; ret
0x0000000000109481 : mov eax, 0xffffffff ; add rsp, 8 ; ret
0x00000000000256d7 : mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x0000000000075f31 : mov eax, 0xffffffff ; ja 0x75f48 ; ret
0x00000000001187a0 : mov eax, 0xffffffff ; nop dword ptr [rax] ; ret
0x0000000000074557 : mov eax, 0xffffffff ; pop r12 ; ret
0x00000000001184af : mov eax, 0xffffffff ; pop r14 ; ret
0x00000000000769f5 : mov eax, 0xffffffff ; pop r15 ; ret
0x00000000000774ad : mov eax, 0xffffffff ; pop rbp ; ret
0x000000000002c117 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000777b4 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000003566e : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000036b77 : mov eax, 0xffffffff ; ret
0x0000000000048712 : mov eax, 0xffffffff ; test edx, edx ; cmovns eax, edx ; pop rbx ; ret
0x00000000000f32be : mov eax, 1 ; add rsp, 8 ; ret
0x00000000001650a0 : mov eax, 1 ; jg 0x1650b9 ; neg eax ; ret
0x00000000000a3760 : mov eax, 1 ; jg 0xa3772 ; neg eax ; ret
0x0000000000162ff6 : mov eax, 1 ; jl 0x163009 ; neg eax ; ret
0x000000000012f5a2 : mov eax, 1 ; jne 0x12f5b7 ; ret
0x000000000012f5e2 : mov eax, 1 ; jne 0x12f5f7 ; ret
0x0000000000039c81 : mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x0000000000074540 : mov eax, 1 ; pop r12 ; ret
0x000000000005381d : mov eax, 1 ; pop r13 ; ret
0x000000000005374f : mov eax, 1 ; pop r14 ; ret
0x0000000000075a7b : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010287d : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00000000000f9c62 : mov eax, 1 ; pop rbx ; ret
0x000000000002bec0 : mov eax, 1 ; ret
0x00000000000a3a81 : mov eax, 2 ; ret
0x0000000000046de0 : mov eax, 3 ; jmp 0x46db0
0x00000000000f9046 : mov eax, 3 ; pop rbx ; pop rbp ; ret
0x00000000000a3a91 : mov eax, 3 ; ret
0x0000000000114363 : mov eax, 3 ; syscall ; ret
0x00000000000a3aa1 : mov eax, 4 ; ret
0x00000000000e5ded : mov eax, 5 ; pop r12 ; ret
0x00000000000a3ab1 : mov eax, 5 ; ret
0x00000000000a3ac1 : mov eax, 6 ; ret
0x0000000000026421 : mov eax, 7 ; jmp 0x263f0
0x0000000000106c8c : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00000000000a3ad1 : mov eax, 7 ; ret
0x00000000000a2702 : mov eax, 8 ; pop rbx ; ret
0x00000000000e4e4e : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001aca1c : mov eax, ds ; add dword ptr [rax], eax ; push rax ; in eax, dx ; cmc ; call qword ptr [rax]
0x00000000000c81bb : mov eax, dword ptr [r12 + 8] ; xor r12d, r12d ; jmp 0xc8191
0x000000000010852c : mov eax, dword ptr [r14 - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000a230a : mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x0000000000136c98 : mov eax, dword ptr [rax + 0x108] ; jmp rax
0x00000000000fd950 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000074ffc : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000fd700 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007bcbc : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x000000000011cdf7 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x11ce07 ; ret
0x00000000000f26e8 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xf26fb ; ret
0x000000000007539c : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000000751a1 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000001085b0 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000000000fe067 : mov eax, dword ptr [rax + 0x38] ; ret
0x000000000007c208 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x00000000001282c4 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000070af3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007c61c : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000070dbd : mov eax, dword ptr [rax + 0x48] ; xor edx, edx ; pop r12 ; jmp rax
0x00000000000716e4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000128b74 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000048746 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000002cbde : mov eax, dword ptr [rax + 0xa8] ; ret
0x00000000000f8f31 : mov eax, dword ptr [rax + 0xc8] ; ret
0x0000000000136b9f : mov eax, dword ptr [rax + 0xe8] ; jmp rax
0x000000000012dcb5 : mov eax, dword ptr [rax + 8] ; jmp rax
0x00000000000f8f0a : mov eax, dword ptr [rax + 8] ; ret
0x0000000000109077 : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0x109049 ; leave ; ret
0x0000000000137b98 : mov eax, dword ptr [rax + rax] ; call 0x73e25
0x000000000002d06a : mov eax, dword ptr [rax + rbx*8] ; test rax, rax ; je 0x2d07c ; call rax
0x000000000002fd95 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002ff57 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002f93f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000001176b7 : mov eax, dword ptr [rax + rdx*8 + 4] ; pop rbx ; ret
0x0000000000121015 : mov eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000018914d : mov eax, dword ptr [rax] ; add byte ptr [rbp + rbx*8 - 0x16], dl ; jmp rsp
0x000000000012dcaa : mov eax, dword ptr [rax] ; jmp rax
0x000000000002cbdc : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000004bede : mov eax, dword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x4beae
0x0000000000061cbe : mov eax, dword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x61c8e
0x000000000002fd6c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000048743 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000011d0d9 : mov eax, dword ptr [rax] ; ret
0x0000000000084334 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x84344 ; call rax
0x00000000000d27d8 : mov eax, dword ptr [rbp + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e7f9 : mov eax, dword ptr [rbp + 8] ; mov rsi, rsp ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000f63f5 : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00000000000be3fb : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000023e61 : mov eax, dword ptr [rbp - 0x60] ; call rax
0x0000000000073ad1 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000001227d1 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000c1a38 : mov eax, dword ptr [rbx + 8] ; test rax, rax ; je 0xc1a4a ; call rax
0x000000000012b7fa : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x12b810 ; pop rbx ; ret
0x000000000012b866 : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x12b824 ; pop rbx ; ret
0x00000000000c1c45 : mov eax, dword ptr [rcx + 0x10] ; test rax, rax ; je 0xc1c5b ; call rax
0x000000000009a759 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000000a230b : mov eax, dword ptr [rcx + 4] ; pop r12 ; ret
0x00000000001594a6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000001594b6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000009a7dd : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000009a7fd : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000013a09a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000013b972 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000015d7a0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x00000000001283d0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000009a705 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000015d6f1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000001593c1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000015d771 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000009a6d6 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000075d7f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000007d120 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000007d148 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000108d70 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x108d88 ; ret
0x000000000012f32c : mov eax, dword ptr [rdi + 0x18] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012eec1 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000001219ae : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000bddb1 : mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000000a36e0 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xa3768 ; ret
0x00000000000a36f5 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xa3768 ; ret
0x0000000000121a27 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012f2a0 : mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000073b11 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a3700 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xa3768 ; ret
0x00000000000a371b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xa3768 ; ret
0x00000000000a3730 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xa3768 ; ret
0x00000000000a3745 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xa3768 ; ret
0x00000000000a3750 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xa3768 ; ret
0x0000000000121a5f : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000073a01 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000716e1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007d3f1 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000071f68 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x71f80 ; ret
0x000000000007911e : mov eax, dword ptr [rdi + 0xc0] ; pop rbx ; ret
0x00000000000e50b0 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000f1250 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000012e3b1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x0000000000122761 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000012ecc9 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000012ecd9 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000012dcb1 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000012dca6 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000012bfc9 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x00000000001226f1 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000a40f5 : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xa40d1 ; ret
0x000000000002f7d8 : mov eax, dword ptr [rdi + rax] ; ret
0x0000000000073a70 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000073a40 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000128c60 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000108d85 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000bdeb0 : mov eax, dword ptr [rdi] ; ret
0x0000000000074160 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000074170 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000125504 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x125516 ; ret
0x0000000000125503 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x125517 ; ret
0x000000000012c794 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12c7a6 ; ret
0x000000000012c793 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12c7a7 ; ret
0x00000000000a41c4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xa41c0 ; xor eax, eax ; ret
0x00000000000716bb : mov eax, dword ptr [rdx + 0x48] ; cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x000000000002fd23 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000355e3 : mov eax, dword ptr [rdx + rax*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; pop rbx ; ret
0x00000000000a27e9 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xa27d9 ; ret
0x000000000008fa56 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000121e98 : mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x00000000000774b8 : mov eax, dword ptr [rdx] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000e3d58 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00000000000751d7 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000075f40 : mov eax, dword ptr [rdx] ; ret
0x000000000007d101 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x7d100 ; ret
0x0000000000134641 : mov eax, dword ptr [rip + 0x2884b9] ; jmp rax
0x00000000001345f1 : mov eax, dword ptr [rip + 0x288501] ; pop r12 ; jmp rax
0x0000000000134591 : mov eax, dword ptr [rip + 0x288559] ; pop r12 ; jmp rax
0x0000000000136162 : mov eax, dword ptr [rip + 0x28a728] ; call qword ptr [rax]
0x00000000001346a2 : mov eax, dword ptr [rip + 0x28c1e8] ; call qword ptr [rax]
0x0000000000112e51 : mov eax, dword ptr [rip + 0x2adb99] ; ret
0x00000000000fe061 : mov eax, dword ptr [rip + 0x2c0df9] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000831af : mov eax, dword ptr [rip + 0x33bd1b] ; mov qword ptr [rax], rdi ; ret
0x00000000000815f8 : mov eax, dword ptr [rip + 0x33d7ba] ; xor edi, edi ; call qword ptr [rax]
0x000000000007d3d1 : mov eax, dword ptr [rip + 0x342dc9] ; ret
0x0000000000037b50 : mov eax, dword ptr [rip + 0x38753a] ; ret
0x0000000000037b40 : mov eax, dword ptr [rip + 0x38755a] ; ret
0x000000000002f8ed : mov eax, dword ptr [rip + 0x38f4e5] ; mov qword ptr [rax], rdx ; ret
0x000000000002bfd1 : mov eax, dword ptr [rip + 0x394ae9] ; ret
0x0000000000023651 : mov eax, dword ptr [rip + 0x3a15f1] ; ret
0x0000000000023641 : mov eax, dword ptr [rip + 0x3a1611] ; ret
0x000000000002ff51 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002ff61 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000d2b19 : mov eax, dword ptr [rsi + 8] ; mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x0000000000118ca7 : mov eax, dword ptr [rsi + 8] ; mov qword ptr [rdx + 0x10], rax ; xor eax, eax ; ret
0x000000000002ee51 : mov eax, dword ptr [rsi + rdx*8 + 0x80] ; ret
0x000000000010852d : mov eax, dword ptr [rsi - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x0000000000075132 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000000af964 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000f60ca : mov eax, dword ptr [rsp + 0x10] ; call rax
0x00000000000220f6 : mov eax, dword ptr [rsp + 0x18] ; add rsp, 0x28 ; jmp rax
0x0000000000021ebf : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000029af9 : mov eax, dword ptr [rsp + 0x1c] ; jmp 0x29ac6
0x000000000002acc9 : mov eax, dword ptr [rsp + 0x24] ; jmp 0x2ac96
0x0000000000026eb0 : mov eax, dword ptr [rsp + 0x28] ; mov qword ptr [rax], rbx ; jmp 0x26e83
0x000000000002a3cc : mov eax, dword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000285b0 : mov eax, dword ptr [rsp + 0x58] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000027faf : mov eax, dword ptr [rsp + 0x78] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000c1724 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x28 ; ret
0x0000000000136e56 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x48 ; ret
0x0000000000036f66 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000f1f16 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x00000000000c81bc : mov eax, dword ptr [rsp + 8] ; xor r12d, r12d ; jmp 0xc8190
0x00000000000f30a0 : mov eax, dword ptr [rsp - 0x68] ; ret
0x0000000000134964 : mov eax, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000125bd4 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f1687 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000fe0c3 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000fe124 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x00000000000517b8 : mov eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000082062 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000229da : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000007e1ab : mov eax, eax ; nop dword ptr [rax] ; ret
0x000000000003c869 : mov eax, eax ; or rax, rdx ; ret
0x000000000004f1aa : mov eax, eax ; ret
0x0000000000104b4c : mov eax, eax ; sub eax, r9d ; ret
0x0000000000079fea : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000744ba : mov eax, ebp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000af8c9 : mov eax, ebp ; pop r13 ; pop r14 ; ret
0x0000000000072f79 : mov eax, ebp ; pop r13 ; ret
0x0000000000070159 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e566 : mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000004f0f3 : mov eax, ebp ; pop rbp ; ret
0x00000000000f5af0 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000006f915 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ca35d : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004f075 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000038483 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000012b3c1 : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000b1108 : mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000092c07 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000be572 : mov eax, ebx ; call rax
0x0000000000118a6b : mov eax, ebx ; mov byte ptr [rdi + rdx], 0 ; pop rbx ; ret
0x00000000000f8b3f : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002cae6 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001f664 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033eff : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000003ca0b : mov eax, ebx ; pop rbx ; ret
0x0000000000038347 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000093ef9 : mov eax, ecx ; jmp 0x93d5b
0x00000000000f1422 : mov eax, ecx ; pop r12 ; ret
0x00000000000305d3 : mov eax, ecx ; pop r13 ; ret
0x0000000000085cb2 : mov eax, ecx ; pop r14 ; ret
0x0000000000030559 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f14f6 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000355ff : mov eax, ecx ; pop rbx ; ret
0x0000000000035609 : mov eax, ecx ; ret
0x0000000000104999 : mov eax, ecx ; sub eax, edx ; ret
0x000000000010982f : mov eax, edi ; add rsp, 8 ; ret
0x000000000002fdc0 : mov eax, edi ; and eax, 0x7f ; ret
0x000000000010d196 : mov eax, edi ; and eax, 0xffffff ; ret
0x000000000010d170 : mov eax, edi ; bswap eax ; ret
0x00000000000496b9 : mov eax, edi ; cmovae rax, rsi ; pop rbx ; ret
0x0000000000049795 : mov eax, edi ; cmovae rax, rsi ; ret
0x000000000003c871 : mov eax, edi ; cqo ; idiv rsi ; ret
0x000000000007853a : mov eax, edi ; jmp 0x78503
0x00000000000f3eba : mov eax, edi ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000097477 : mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a423b : mov eax, edi ; nop dword ptr [rax] ; ret
0x00000000000fe200 : mov eax, edi ; nop word ptr [rax + rax] ; ret
0x0000000000102a0c : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007e500 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000109a61 : mov eax, edi ; pop rbx ; ret
0x0000000000022b2c : mov eax, edi ; ret
0x000000000010d180 : mov eax, edi ; ror ax, 8 ; ret
0x000000000003c812 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000010b71a : mov eax, edi ; sar rax, 6 ; ret
0x000000000010d216 : mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000104b70 : mov eax, edi ; sub eax, esi ; ret
0x00000000000f2fa9 : mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000b559c : mov eax, edx ; add rsp, 8 ; ret
0x00000000000c289b : mov eax, edx ; jle 0xc28a6 ; ret
0x000000000005e540 : mov eax, edx ; pop r12 ; ret
0x0000000000094cec : mov eax, edx ; pop r14 ; ret
0x000000000005360b : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000492ef : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005e3db : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000390c5 : mov eax, edx ; pop rbx ; ret
0x0000000000037b99 : mov eax, edx ; ret
0x0000000000046cce : mov eax, edx ; shl eax, 0x1e ; or eax, esi ; ret
0x00000000001049c9 : mov eax, edx ; sub eax, r9d ; ret
0x0000000000036aa6 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x00000000000bad32 : mov eax, esi ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000004978c : mov eax, esi ; nop ; ret
0x000000000010a3e5 : mov eax, esi ; pop r12 ; ret
0x00000000000bde8d : mov eax, esi ; pop r14 ; ret
0x00000000000c3364 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003c2fa : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000049681 : mov eax, esi ; pop rbx ; ret
0x00000000000498c4 : mov eax, esi ; ret
0x0000000000118bfb : mov eax, esi ; shl eax, 4 ; add eax, 8 ; ret
0x00000000000b220b : mov eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000af845 : mov eax, esp ; pop r12 ; pop r13 ; ret
0x000000000006d890 : mov eax, esp ; pop r12 ; ret
0x000000000007cd0c : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006d4c4 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000af844 : mov eax, r12d ; pop r12 ; pop r13 ; ret
0x00000000000af772 : mov eax, r12d ; pop r12 ; ret
0x000000000007cd0b : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000073155 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000af8c8 : mov eax, r13d ; pop r13 ; pop r14 ; ret
0x0000000000072f78 : mov eax, r13d ; pop r13 ; ret
0x00000000000e5c95 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000517b7 : mov eax, r8d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000004f1a9 : mov eax, r8d ; ret
0x0000000000104b4b : mov eax, r8d ; sub eax, r9d ; ret
0x00000000000f1421 : mov eax, r9d ; pop r12 ; ret
0x00000000000f14f5 : mov eax, r9d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000104998 : mov eax, r9d ; sub eax, edx ; ret
0x0000000000189c44 : mov eax, ss ; add byte ptr [rax], al ; loopne 0x189cb2 ; out dx, al ; call rsp
0x0000000000166137 : mov ebp, 0x25 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000018e6f5 : mov ebp, 0x33c40002 ; cli ; jmp rsp
0x0000000000109098 : mov ebp, 0x3948002b ; ret 0x840f
0x00000000000f31d9 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x0000000000097b11 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000097b21 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x0000000000097b01 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000013da81 : mov ebp, 0x63480003 ; ret 0xf66
0x000000000017383d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x000000000017a434 : mov ebp, 0xc7fff498 ; cwde ; hlt ; call rcx
0x000000000012a035 : mov ebp, 0xe8000186 ; ret 0xffd9
0x0000000000097b81 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000097b61 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000097b41 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x0000000000097c32 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x000000000008b298 : mov ebp, 0xf80148c0 ; ret
0x000000000008b51c : mov ebp, 0xf80148c6 ; ret
0x00000000001758a6 : mov ebp, 0xfb67d10d ; ret
0x00000000000c4850 : mov ebp, 0xfffffbd0 ; call r15
0x0000000000113234 : mov ebp, 0xfffffdfc ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd120
0x00000000000c5f04 : mov ebp, 0xfffffe30 ; add byte ptr [rax - 0x77], cl ; ret 0x775
0x00000000000cd1d0 : mov ebp, 0xffffff58 ; call rbx
0x000000000018ec24 : mov ebp, ds ; add al, byte ptr [rax] ; jo 0x18ebef ; cli ; call rsp
0x00000000000d9972 : mov ebp, dword ptr [rax + 0x70] ; mov r11, rax ; mov edx, r8d ; jmp 0xd998c
0x0000000000112008 : mov ebp, dword ptr [rbx + 0x50] ; call 0x11e225
0x00000000001067a2 : mov ebp, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000001bed : mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000f082d : mov ebp, dword ptr [rsi] ; call 0xeca94
0x00000000000ac78e : mov ebp, eax ; call 0x389b4
0x000000000005a26d : mov ebp, eax ; jmp 0x564f6
0x000000000012bb29 : mov ebp, eax ; mov r12d, dword ptr [rax] ; jmp 0x12bb3d
0x000000000019867d : mov ebp, ebp ; jmp qword ptr [rdx]
0x000000000011588d : mov ebp, ebx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000036aac : mov ebp, ecx ; jmp rdx
0x000000000019ea21 : mov ebp, edi ; jmp qword ptr [rax]
0x000000000019ea51 : mov ebp, edi ; jmp qword ptr [rdx]
0x000000000006efa6 : mov ebp, edx ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000001aefe5 : mov ebp, esi ; jmp qword ptr [rdx]
0x00000000000a6785 : mov ebp, esi ; setne dl ; jmp 0xa679c
0x00000000000ab635 : mov ebp, esi ; setne dl ; jmp 0xab64c
0x000000000011e895 : mov ebp, esp ; call r15
0x000000000010b7e4 : mov ebp, esp ; pop rbp ; ret
0x000000000009859c : mov ebx, 0x142c641 ; add bl, al ; mov r10, r8 ; jmp 0x985a2
0x000000000018e695 : mov ebx, 0x2e040002 ; cli ; jmp rsp
0x00000000000e4d01 : mov ebx, 0x39fffde9 ; ret
0x00000000000d94b5 : mov ebx, 0x8dfffffd ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000d1861 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000000d5a91 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0xee9
0x0000000000108cd4 : mov ebx, 0xafb8341 ; je 0x108ce3 ; ret
0x000000000018752d : mov ebx, 0xb895fffd ; std ; call qword ptr [rcx]
0x000000000018750d : mov ebx, 0xb8a6fffd ; std ; call qword ptr [rcx]
0x000000000018751d : mov ebx, 0xb8c0fffd ; std ; call qword ptr [rcx]
0x00000000001874fd : mov ebx, 0xb8d1fffd ; std ; call qword ptr [rcx]
0x00000000001875fd : mov ebx, 0xb8e0fffd ; std ; call qword ptr [rcx]
0x00000000001875bd : mov ebx, 0xb8fbfffd ; std ; call qword ptr [rcx]
0x000000000018757d : mov ebx, 0xb916fffd ; std ; call qword ptr [rcx]
0x000000000018753d : mov ebx, 0xb931fffd ; std ; call qword ptr [rcx]
0x000000000018760d : mov ebx, 0xb960fffd ; std ; call qword ptr [rcx]
0x00000000001875cd : mov ebx, 0xb97bfffd ; std ; call qword ptr [rcx]
0x000000000018758d : mov ebx, 0xb996fffd ; std ; call qword ptr [rcx]
0x000000000018754d : mov ebx, 0xb9b1fffd ; std ; call qword ptr [rcx]
0x000000000018761d : mov ebx, 0xb9e0fffd ; std ; call qword ptr [rcx]
0x00000000001875dd : mov ebx, 0xb9fbfffd ; std ; call qword ptr [rcx]
0x000000000018759d : mov ebx, 0xba16fffd ; std ; call qword ptr [rcx]
0x000000000018755d : mov ebx, 0xba31fffd ; std ; call qword ptr [rcx]
0x00000000001875ed : mov ebx, 0xba70fffd ; std ; call qword ptr [rcx]
0x00000000001875ad : mov ebx, 0xba87fffd ; std ; call qword ptr [rcx]
0x000000000018756d : mov ebx, 0xba9efffd ; std ; call qword ptr [rcx]
0x00000000001874f5 : mov ebx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x0000000000187579 : mov ebx, 0xbb11fffd ; std ; call qword ptr [rsi]
0x00000000001874f9 : mov ebx, 0xbb11fffd ; std ; call rcx
0x00000000001875f9 : mov ebx, 0xbb11fffd ; std ; jmp rax
0x000000000017a008 : mov ebx, 0xbbfff3ef ; out dx, eax ; call qword ptr [rax]
0x000000000017383b : mov ebx, 0xbfbebdbc ; rol cl, -0x3e ; ret
0x0000000000124746 : mov ebx, 0xc8 ; call rax
0x0000000000179ce5 : mov ebx, 0xc81afff3 ; jmp rcx
0x0000000000179cd9 : mov ebx, 0xc8edfff3 ; dec ebp ; ret 0xfff3
0x0000000000179c41 : mov ebx, 0xcc89fff3 ; dec ebp ; ret 0xfff3
0x00000000000bacb2 : mov ebx, 1 ; jmp 0xbac81
0x000000000010318f : mov ebx, dword ptr [rdi] ; mov edi, 0x20 ; call 0x1f419
0x000000000012232b : mov ebx, eax ; jne 0x1222c9 ; xor eax, eax ; pop rbx ; ret
0x00000000000d9976 : mov ebx, eax ; mov edx, r8d ; jmp 0xd9988
0x00000000000f19cf : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x000000000012f6d9 : mov ebx, eax ; test r14d, r14d ; jle 0x12f721 ; call 0x12b8f9
0x000000000007bffa : mov ebx, edi ; je 0x7c010 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101f09 : mov ebx, edi ; jmp 0x101c54
0x00000000000a8f61 : mov ebx, edi ; setne dl ; jmp 0xa8f7b
0x000000000002e696 : mov ebx, edi ; test rax, rax ; je 0x2e6a6 ; call rax
0x00000000001ab51c : mov ebx, es ; add dword ptr [rax], eax ; push rax ; sal ebp, cl ; jmp qword ptr [rsi]
0x000000000018ba01 : mov ebx, esi ; jmp rsp
0x00000000000c115e : mov ebx, esp ; call 0x3d3a4
0x00000000000518da : mov ecx, 0x1480001 ; ret
0x00000000001352bf : mov ecx, 0x800028f8 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000187541 : mov ecx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x0000000000173839 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000019990f : mov ecx, 0xd1cffed ; jno 0x1998d7 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001995c7 : mov ecx, 0xd1cffed ; retf -0x1248 ; jmp qword ptr [rdx]
0x000000000000314c : mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x000000000018be4d : mov ecx, 0xd7340001 ; hlt ; jmp rsp
0x0000000000082569 : mov ecx, 0xf6000005 ; ret
0x000000000002d3f1 : mov ecx, dword ptr [rax + rdi*8] ; test rcx, rcx ; je 0x2d403 ; call rcx
0x0000000000128ee6 : mov ecx, dword ptr [rbp - 0x168] ; call rcx
0x0000000000104805 : mov ecx, dword ptr [rbp - 0x50] ; mov r10, qword ptr [rbp - 0x48] ; sete dl ; jmp 0x1047a3
0x000000000011f8c7 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x0000000000112294 : mov ecx, dword ptr [rcx] ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000102be2 : mov ecx, dword ptr [rcx] ; test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x0000000000047146 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000014378e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000007d111 : mov ecx, dword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x000000000008fa53 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000137197 : mov ecx, dword ptr [rdx] ; mov rdx, r12 ; add r9, r11 ; call rax
0x00000000000a40e1 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xa40df ; ret
0x0000000000047486 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000145b03 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000145d03 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000145f03 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009d9b0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000009d9f1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000014df23 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014deb3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014de43 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014dd65 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014dcf5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014dc85 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014dc15 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014dba5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014db35 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014dac5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014e005 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000009d991 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a4e79 : mov ecx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000124c45 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x00000000000b035b : mov ecx, dword ptr [rsp + 0x18] ; mov rdi, qword ptr [r13] ; call r12
0x0000000000124a4e : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x000000000012165e : mov ecx, dword ptr [rsp + 8] ; call rcx
0x000000000003d694 : mov ecx, eax ; jmp 0x3d57c
0x0000000000121a08 : mov ecx, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000f1502 : mov ecx, eax ; pop rbp ; mov eax, r9d ; pop r12 ; ret
0x0000000000097766 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000011eca5 : mov ecx, ebp ; call rbx
0x00000000000a5032 : mov ecx, ebp ; mov rdi, rbp ; call rbx
0x00000000000973ee : mov ecx, ecx ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x0000000000097754 : mov ecx, edi ; mov qword ptr [rdx], rcx ; ret
0x0000000000071a41 : mov ecx, edi ; mov rdi, r13 ; xor r8d, r8d ; call r12
0x000000000012eeef : mov ecx, edx ; cmp rdx, rcx ; je 0x12ef08 ; ret
0x000000000012eeee : mov ecx, edx ; cmp rdx, rcx ; je 0x12ef09 ; ret
0x000000000003db0b : mov ecx, edx ; jmp 0x3da3c
0x000000000007c617 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000f3e40 : mov ecx, esi ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000085325 : mov ecx, esi ; mov eax, 0x16 ; je 0x85339 ; ret
0x00000000000a48db : mov ecx, esi ; mov rdi, qword ptr [r13] ; call r12
0x00000000001ac31c : mov ecx, ss ; add dword ptr [rax], eax ; jo 0x1ac30c ; cmc ; call qword ptr [rax]
0x00000000000f3150 : mov edi, 0x1000 ; call 0x1f417
0x0000000000109141 : mov edi, 0x1002b ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000103191 : mov edi, 0x20 ; call 0x1f417
0x0000000000102d98 : mov edi, 0x2000004 ; call rax
0x0000000000108e4e : mov edi, 0x3948002b ; ret 0xda75
0x000000000018e755 : mov edi, 0x3ad40002 ; cli ; jmp rsp
0x00000000000b8dc0 : mov edi, 0x487c8d44 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000001ab10d : mov edi, 0x97600001 ; cmc ; call rsp
0x00000000001354db : mov edi, 0xa ; call 0xc1757
0x00000000000d6f29 : mov edi, 0xb8643b45 ; add al, 0x7f ; fistp qword ptr [rcx] ; ret 0xc189
0x00000000000d6eb9 : mov edi, 0xb86c3b41 ; add al, 0x7f ; fistp qword ptr [rcx] ; ret 0xc189
0x00000000000dc865 : mov edi, 0xbe443b44 ; add al, 0x7f ; fistp qword ptr [rcx] ; ret 0xc189
0x0000000000179251 : mov edi, 0xc160fffd ; std ; jmp qword ptr [rax - 0x3d]
0x000000000017a334 : mov edi, 0xc9fff496 ; xchg eax, esi ; hlt ; call rbx
0x000000000006efaa : mov edi, 0xe0 ; call rax
0x000000000006ef7e : mov edi, 0xe0 ; jmp rax
0x00000000000a25c4 : mov edi, 0xf000000 ; popfq ; ret 0xea81
0x00000000000c4c12 : mov edi, 0xf6000000 ; ret
0x0000000000120174 : mov edi, 1 ; call 0x12c417
0x00000000000efaa5 : mov edi, 1 ; call 0xebd27
0x0000000000189c24 : mov edi, cs ; add byte ptr [rax], al ; lock pop rdi ; out dx, al ; call rsp
0x000000000002328f : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x0000000000075ef8 : mov edi, dword ptr [rax + 0x40] ; jmp 0x75ec4
0x00000000000f5fa3 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000c484f : mov edi, dword ptr [rbp - 0x430] ; call r15
0x00000000000be485 : mov edi, dword ptr [rbp - 0x68] ; call r14
0x00000000000cb605 : mov edi, dword ptr [rbp - 0x70] ; movsx esi, byte ptr [rax] ; call 0x878d8
0x00000000000cd1cf : mov edi, dword ptr [rbp - 0xa8] ; call rbx
0x00000000000a48de : mov edi, dword ptr [rbp] ; call r12
0x00000000000f5bfa : mov edi, dword ptr [rbp] ; call rbx
0x00000000000235da : mov edi, dword ptr [rbx + 0x18] ; call rax
0x000000000011238d : mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x112389 ; pop rbx ; ret
0x00000000000f76e8 : mov edi, dword ptr [rbx] ; call r12
0x0000000000125501 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x125519 ; ret
0x000000000012c791 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12c7a9 ; ret
0x000000000004714a : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006efa9 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006ef7d : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x00000000001973dc : mov edi, dword ptr [rdi - 0x13] ; jmp qword ptr [rdx]
0x00000000000f5ba8 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000107004 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000175b66 : mov edi, dword ptr [rdx] ; ret
0x00000000000f5b67 : mov edi, dword ptr [rsi] ; call rbx
0x000000000002be5d : mov edi, dword ptr [rsp + 0x10] ; call r15
0x0000000000025a4b : mov edi, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000002639a : mov edi, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000025952 : mov edi, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000029da0 : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000028389 : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000028a0e : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call r12
0x0000000000029424 : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000027682 : mov edi, dword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000277ad : mov edi, dword ptr [rsp + 0x70] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000220a4 : mov edi, dword ptr [rsp + 8] ; add rsp, 0x18 ; jmp rax
0x00000000000f60c5 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000f5ff0 : mov edi, dword ptr [rsp] ; call rbx
0x00000000000a45f6 : mov edi, dword ptr [rsp] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000ecabe : mov edi, dword ptr [rsp] ; mov rdx, rax ; call 0x108d18
0x000000000012a257 : mov edi, eax ; call qword ptr [r10]
0x00000000000cd9e8 : mov edi, eax ; call rbx
0x00000000000be051 : mov edi, eax ; je 0xbe088 ; mov rdi, r15 ; call r14
0x00000000000498bd : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x498b1 ; mov rax, rsi ; ret
0x000000000011f8c4 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000039127 : mov edi, ebp ; call 0x383a9
0x0000000000120bab : mov edi, ebp ; call qword ptr [rax]
0x00000000001223ca : mov edi, ebp ; call qword ptr [rbx]
0x00000000000f77f1 : mov edi, ebp ; call r14
0x000000000012035a : mov edi, ebp ; call rax
0x00000000000f7339 : mov edi, ebp ; call rbx
0x000000000012f0c1 : mov edi, ebp ; call rcx
0x0000000000086c1b : mov edi, ebp ; call rdx
0x000000000012e6bc : mov edi, ebp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x0000000000112005 : mov edi, ebp ; mov rbp, qword ptr [rbx + 0x50] ; call 0x11e228
0x00000000000c115b : mov edi, ebp ; mov rbx, rsp ; call 0x3d3a7
0x0000000000128ee3 : mov edi, ebp ; mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x0000000000124c42 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000124a4b : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000011eca2 : mov edi, ebp ; mov rcx, r13 ; call rbx
0x0000000000022d75 : mov edi, ebp ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000012183e : mov edi, ebp ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000071a44 : mov edi, ebp ; xor r8d, r8d ; call r12
0x000000000010c7c3 : mov edi, ebx ; call 0x78a04
0x00000000001227d8 : mov edi, ebx ; call qword ptr [rax]
0x000000000002bf87 : mov edi, ebx ; call r12
0x00000000000237dd : mov edi, ebx ; call r15
0x000000000006e2b0 : mov edi, ebx ; call r8
0x0000000000050a15 : mov edi, ebx ; call rax
0x000000000011e781 : mov edi, ebx ; mov qword ptr [rsp], rcx ; call r12
0x000000000011e892 : mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000f0829 : mov edi, ebx ; mov r13d, dword ptr fs:[r14] ; call 0xeca98
0x0000000000136753 : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000f5aed : mov edi, ebx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000012165b : mov edi, ebx ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000086346 : mov edi, ebx ; mov rdx, r15 ; call rax
0x0000000000075398 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007519d : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000135f3a : mov edi, ebx ; pop rbx ; mov rsi, rbp ; pop rbp ; jmp rax
0x000000000012db30 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000165f88 : mov edi, ebx ; test rdi, rdi ; jne 0x165f82 ; pop rbx ; ret
0x00000000000873a6 : mov edi, ecx ; call rcx
0x00000000000814e9 : mov edi, ecx ; mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x00000000000757f6 : mov edi, edi ; call 0x71a74
0x00000000001209a3 : mov edi, edi ; call qword ptr [rax]
0x00000000000be056 : mov edi, edi ; call r14
0x00000000000860a6 : mov edi, edi ; call rax
0x00000000000f68ce : mov edi, edi ; call rbx
0x0000000000086b43 : mov edi, edi ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x00000000000fed24 : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000108d88 : mov edi, edx ; jmp rax
0x0000000000049941 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x49929 ; mov rax, rsi ; ret
0x0000000000106572 : mov edi, esi ; call 0x102864
0x000000000010664b : mov edi, esi ; call 0x102914
0x00000000000e32c0 : mov edi, esi ; call 0xdf564
0x000000000008139e : mov edi, esi ; call qword ptr [rax]
0x00000000001213f8 : mov edi, esi ; call rax
0x00000000000f68ae : mov edi, esi ; call rbx
0x00000000000f63f2 : mov edi, esi ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000023e5e : mov edi, esi ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x00000000001066a9 : mov edi, esi ; xor eax, eax ; call 0x102916
0x000000000004c39c : mov edi, esp ; call 0x108654
0x000000000011b619 : mov edi, esp ; call 0x878d4
0x000000000001ff62 : mov edi, esp ; call qword ptr [r14]
0x0000000000188a09 : mov edi, esp ; call qword ptr [rax]
0x000000000019d511 : mov edi, esp ; call qword ptr [rdx]
0x0000000000083f2a : mov edi, esp ; call rax
0x00000000000f6865 : mov edi, esp ; call rbx
0x0000000000121f29 : mov edi, esp ; call rdx
0x000000000012240a : mov edi, esp ; mov edx, ebx ; jmp 0x122437
0x000000000019ac7d : mov edx, 0x10200000 ; out dx, al ; jmp qword ptr [rcx]
0x000000000011547a : mov edx, 0x104 ; cmove eax, edx ; ret
0x000000000011545c : mov edx, 0x107 ; cmove eax, edx ; ret
0x00000000000793d6 : mov edx, 0x140 ; pop rbx ; ret
0x000000000018e675 : mov edx, 0x29640002 ; cli ; call rsp
0x00000000000d2c4f : mov edx, 0x75cf3840 ; ret
0x0000000000119962 : mov edx, 0x83fffffe ; ret 0x8303
0x0000000000036ab2 : mov edx, 0x850038e5 ; sal byte ptr [rbp + 6], -0xd ; ret
0x0000000000187561 : mov edx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x000000000017501e : mov edx, 0xcac982a4 ; call 0xffffffffaed9ee9e
0x0000000000199767 : mov edx, 0xd1cffed ; call 0x23198531
0x0000000000198fe7 : mov edx, 0xd1cffed ; cmpsb byte ptr [rsi], byte ptr [rdi] ; movsd dword ptr [rdi], dword ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019902f : mov edx, 0xd1cffed ; pop rcx ; test al, -0x13 ; jmp qword ptr [rdx]
0x0000000000179d7d : mov edx, 0xd9fcfff3 ; jmp rsp
0x000000000008cfe0 : mov edx, 0xf48000b ; ret 0x8348
0x00000000000c3019 : mov edx, 0xffffffff ; cmovne rax, rdx ; ret
0x0000000000100d90 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000012e674 : mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000012e6be : mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00000000000e4eb3 : mov edx, dword ptr [r12 + 4] ; jmp 0xe4e82
0x0000000000073aa5 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000c1bbd : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xc1bd3 ; call rdx
0x0000000000074fc8 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000021ebc : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000a55c8 : mov edx, dword ptr [rax] ; test edx, edx ; jne 0xa55c7 ; ret
0x000000000007f0f0 : mov edx, dword ptr [rax] ; test rdx, rdx ; je 0x7f100 ; call rdx
0x0000000000107cc0 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000001082f9 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000104809 : mov edx, dword ptr [rbp - 0x48] ; sete dl ; jmp 0x10479f
0x00000000001321f4 : mov edx, dword ptr [rbp - 0xc0] ; jmp 0x1321c6
0x000000000007974e : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000010c98f : mov edx, dword ptr [rbx] ; jmp 0x10c959
0x000000000013b96f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000013a09d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000108f7a : mov edx, dword ptr [rcx] ; test rdx, rdx ; jne 0x108f78 ; leave ; ret
0x0000000000165c89 : mov edx, dword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x165ca0 ; call rdx
0x0000000000108d81 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x0000000000037916 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000087685 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x87689 ; ret
0x0000000000165b80 : mov edx, dword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x165b92 ; call rdx
0x0000000000107af2 : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000d2ae7 : mov edx, dword ptr [rsi + 0x20] ; mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x000000000009d9d2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000009d9c3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009da13 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b0c21 : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xb0bf6 ; ret
0x000000000009da23 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000108170 : mov edx, dword ptr [rsi - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000145541 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000145900 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000145191 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009efa0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009fdd0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009d9a0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a1840 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009eff1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009fe21 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009d9e1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000009ef81 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009fda1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009d981 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000102d94 : mov edx, dword ptr [rsp + 0x18] ; mov edi, 0x2000004 ; call rax
0x0000000000102c97 : mov edx, dword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000be781 : mov edx, dword ptr [rsp + 0x28] ; call rax
0x00000000000e4eb4 : mov edx, dword ptr [rsp + 4] ; jmp 0xe4e81
0x00000000000ecac2 : mov edx, eax ; call 0x108d14
0x00000000001011d0 : mov edx, eax ; jmp 0x1011c5
0x000000000010d4d8 : mov edx, eax ; jmp 0x10d473
0x00000000001280c7 : mov edx, eax ; jmp 0x12808b
0x000000000004947a : mov edx, eax ; jmp 0x49492
0x000000000004c599 : mov edx, eax ; jmp 0x4c5cf
0x000000000004c6fd : mov edx, eax ; jmp 0x4c71d
0x00000000000715de : mov edx, eax ; jmp 0x7159b
0x0000000000072049 : mov edx, eax ; jmp 0x72009
0x000000000007262e : mov edx, eax ; jmp 0x725f2
0x000000000007279a : mov edx, eax ; jmp 0x72754
0x0000000000072a89 : mov edx, eax ; jmp 0x72a49
0x0000000000077fd1 : mov edx, eax ; jmp 0x77f77
0x0000000000078197 : mov edx, eax ; jmp 0x7815b
0x0000000000078332 : mov edx, eax ; jmp 0x782ed
0x0000000000078bc3 : mov edx, eax ; jmp 0x78b84
0x0000000000078d6d : mov edx, eax ; jmp 0x78d26
0x0000000000079212 : mov edx, eax ; jmp 0x791ac
0x00000000000985a4 : mov edx, eax ; jmp 0x9859a
0x00000000000a6003 : mov edx, eax ; jmp 0xa5fd1
0x00000000000a81b8 : mov edx, eax ; jmp 0xa81e1
0x00000000000a8843 : mov edx, eax ; jmp 0xa8811
0x00000000000aaef3 : mov edx, eax ; jmp 0xaaec1
0x00000000000c4d71 : mov edx, eax ; jmp 0xc4d8f
0x00000000000c5302 : mov edx, eax ; jmp 0xc52a1
0x00000000000d9979 : mov edx, eax ; jmp 0xd9985
0x00000000000e57a4 : mov edx, eax ; jmp 0xe5797
0x00000000000f316c : mov edx, eax ; jmp 0xf3100
0x00000000000f457d : mov edx, eax ; jmp 0xf4551
0x00000000000f88db : mov edx, eax ; jmp 0xf8905
0x00000000000f89ac : mov edx, eax ; jmp 0xf89d7
0x00000000001066a6 : mov edx, eax ; mov rdi, r14 ; xor eax, eax ; call 0x102919
0x0000000000107e84 : mov edx, ebp ; call rax
0x0000000000192d6d : mov edx, ebp ; jmp qword ptr [rdx]
0x00000000000a4d2a : mov edx, ebp ; mov rdi, rbp ; call rbx
0x0000000000023401 : mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000012b24c : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000012335e : mov edx, ebp ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000010d066 : mov edx, ebp ; pop r12 ; pop r13 ; jmp rax
0x000000000002079b : mov edx, ebp ; sub rdx, rbx ; inc rdx ; jmp 0x207b0
0x00000000000bda3c : mov edx, ebp ; xor ecx, ecx ; jmp 0xbda0a
0x0000000000107f04 : mov edx, ebx ; call rax
0x000000000012240c : mov edx, ebx ; jmp 0x122435
0x0000000000086b46 : mov edx, ebx ; mov rsi, r13 ; call rax
0x0000000000086d02 : mov edx, ebx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000086349 : mov edx, edi ; call rax
0x0000000000111aca : mov edx, edi ; mov rdi, r12 ; call rax
0x00000000001a39f1 : mov edx, esi ; call qword ptr [rdi]
0x00000000001a3a41 : mov edx, esi ; call qword ptr [rdx]
0x000000000010827c : mov edx, esi ; call rax
0x00000000001a38b9 : mov edx, esi ; jmp qword ptr [rdi]
0x00000000000770d2 : mov edx, esi ; mov rdi, rbx ; call rax
0x0000000000123461 : mov edx, esi ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000013719a : mov edx, esp ; add r9, r11 ; call rax
0x0000000000107af9 : mov edx, esp ; call rax
0x00000000000860a3 : mov edx, esp ; mov rdi, r15 ; call rax
0x000000000010d065 : mov edx, r13d ; pop r12 ; pop r13 ; jmp rax
0x0000000000079211 : mov edx, r8d ; jmp 0x791ad
0x00000000000d9978 : mov edx, r8d ; jmp 0xd9986
0x00000000001ab126 : mov es, dword ptr [rbx] ; pop qword ptr [rdx] ; add ecx, dword ptr [rbx + 1] ; ret
0x000000000006084b : mov es, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000018e055 : mov es, dword ptr [rdx] ; add byte ptr [rsi - 7], al ; jmp rsp
0x000000000009fbee : mov es, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000000000075459 : mov es, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000004e4ba : mov esi, 0x31e9ffff ; ret 0xffff
0x0000000000086903 : mov esi, 0x3948feda ; ret 0x3574
0x00000000000dc881 : mov esi, 0x39c77f04 ; ret 0xc189
0x00000000000dc869 : mov esi, 0x39df7f04 ; ret 0xc189
0x0000000000188070 : mov esi, 0x40fffc84 ; mov edi, esp ; call rax
0x000000000003dddf : mov esi, 0x448d4813 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a3fae : mov esi, 0x48000000 ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000025616 : mov esi, 0x4a890b40 ; push rax ; mov dword ptr [rdx + 0x54], eax ; ret
0x000000000004f1a3 : mov esi, 0x77cf390e ; fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x0000000000111987 : mov esi, 0x8348014f ; cli ; add al, 0xf ; xchg eax, esi ; ret
0x0000000000040912 : mov esi, 0x8349016b ; ret
0x00000000000975e5 : mov esi, 0x84450704 ; sal byte ptr [rbp - 0x1d], -0xd ; ret
0x000000000008610c : mov esi, 0x8948feda ; and byte ptr [r8 + 0x31], r9b ; ret 0x93be
0x0000000000085c85 : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000012a9d5 : mov esi, 0xa ; mov rdi, rax ; call qword ptr [r10]
0x00000000000976dd : mov esi, 0xc0844507 ; jne 0x976d1 ; xor eax, eax ; ret
0x000000000017383e : mov esi, 0xc2c1c0bf ; ret
0x000000000008924b : mov esi, 0xc3d089d6 ; xor edx, edx ; mov eax, edx ; ret
0x0000000000102ad2 : mov esi, 0xc48348c5 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000017a390 : mov esi, 0xc8fff495 ; xchg eax, ebp ; hlt ; call rdx
0x000000000009758d : mov esi, 0xc984070c ; jne 0x97588 ; ret
0x0000000000097615 : mov esi, 0xca390714 ; je 0x97618 ; ret
0x0000000000097541 : mov esi, 0xd2840714 ; jne 0x97540 ; ret
0x0000000000002bcd : mov esi, 0xf8cbeb8f ; ret
0x00000000000f68f0 : mov esi, 1 ; call rbx
0x00000000000f6add : mov esi, 1 ; mov rdi, r12 ; call rbx
0x00000000000f69a9 : mov esi, 1 ; mov rdi, r13 ; call rbx
0x00000000000f6921 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x000000000012099d : mov esi, 1 ; mov rdi, r15 ; call qword ptr [rax]
0x000000000012a251 : mov esi, 1 ; mov rdi, rax ; call qword ptr [r10]
0x00000000000f6d67 : mov esi, 1 ; mov rdi, rbp ; call rbx
0x000000000006e2aa : mov esi, 1 ; mov rdi, rbx ; call r8
0x000000000006d92f : mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000000f6d5b : mov esi, 2 ; mov rdi, r12 ; call rbx
0x00000000000f6ace : mov esi, 2 ; mov rdi, r13 ; call rbx
0x00000000000f699a : mov esi, 2 ; mov rdi, r14 ; call rbx
0x00000000000f6912 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000012a410 : mov esi, 2 ; mov rdi, rax ; call qword ptr [r10]
0x00000000000f72bc : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000000f7313 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x00000000000f7393 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x000000000012b6a4 : mov esi, 3 ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000f7493 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x000000000012a4f0 : mov esi, 3 ; mov rdi, rax ; call qword ptr [r10]
0x0000000000120cae : mov esi, 4 ; mov rdi, rbp ; call qword ptr [rax]
0x000000000012a62b : mov esi, 6 ; mov rdi, rax ; call qword ptr [r10]
0x000000000012a75b : mov esi, 7 ; mov rdi, rax ; call qword ptr [r10]
0x000000000012a901 : mov esi, 8 ; mov rdi, rax ; call qword ptr [r10]
0x000000000012a32b : mov esi, 9 ; mov rdi, rax ; call qword ptr [r10]
0x00000000000be481 : mov esi, dword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x0000000000022d78 : mov esi, dword ptr [rdx + rbx + 0x20] ; call rax
0x000000000006601b : mov esi, dword ptr [rip + 0x358f3f] ; call rax
0x0000000000064733 : mov esi, dword ptr [rip + 0x35a827] ; call rax
0x000000000005f2b7 : mov esi, dword ptr [rip + 0x35fca3] ; call rax
0x0000000000055f45 : mov esi, dword ptr [rip + 0x369015] ; call rax
0x000000000004ef73 : mov esi, dword ptr [rip + 0x36ffe7] ; call rax
0x0000000000049e2f : mov esi, dword ptr [rip + 0x37512b] ; call rax
0x000000000004748a : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000194f9c : mov esi, dword ptr [rsi - 0x14] ; jmp qword ptr [rdx]
0x0000000000120158 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000023404 : mov esi, dword ptr [rsp + 0x18] ; call rbx
0x00000000000832fb : mov esi, dword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000083f25 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x0000000000027d97 : mov esi, dword ptr [rsp + 0x50] ; call rax
0x0000000000102c9c : mov esi, dword ptr [rsp + 8] ; call rax
0x000000000008394b : mov esi, dword ptr [rsp] ; jmp rax
0x00000000000948ca : mov esi, dword ptr [rsp] ; test rsi, rsi ; jne 0x948e5 ; jmp 0x9489f
0x0000000000078d66 : mov esi, eax ; call 0x74fd4
0x00000000000efaa3 : mov esi, eax ; mov edi, 1 ; call 0xebd29
0x00000000000ac78b : mov esi, eax ; mov r13, rax ; call 0x389b7
0x00000000000df870 : mov esi, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000012008d : mov esi, ebp ; add rdi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x000000000003a1e3 : mov esi, ebp ; call r12
0x0000000000086b49 : mov esi, ebp ; call rax
0x0000000000189ec1 : mov esi, ebp ; jmp rsp
0x00000000000a473f : mov esi, ebp ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000086d05 : mov esi, ebp ; mov rdi, r12 ; call rax
0x000000000010c7c0 : mov esi, ebp ; mov rdi, rbx ; call 0x78a07
0x0000000000086ebd : mov esi, ebp ; mov rdi, rbx ; call rax
0x0000000000135f3e : mov esi, ebp ; pop rbp ; jmp rax
0x000000000018ba39 : mov esi, ebx ; call rsp
0x00000000000f77ee : mov esi, ebx ; mov rdi, r13 ; call r14
0x0000000000086c18 : mov esi, ebx ; mov rdi, r13 ; call rdx
0x000000000012bfcd : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000012f0be : mov esi, ebx ; mov rdi, rbp ; call rcx
0x00000000000e32bd : mov esi, edi ; mov rdi, r14 ; call 0xdf567
0x000000000012529a : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x000000000007ea22 : mov esi, edx ; call qword ptr [rax]
0x0000000000107008 : mov esi, edx ; call rax
0x0000000000001beb : mov esi, edx ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x0000000000189b1c : mov esi, es ; add byte ptr [rax], al ; cli ; pop rsp ; in eax, dx ; call rsp
0x0000000000085c25 : mov esi, esi ; call rax
0x0000000000128bc4 : mov esi, esi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000c3439 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x0000000000128364 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000dc7ff : mov esi, esi ; ret 0x7408
0x0000000000072ff2 : mov esi, esp ; call 0x49be9
0x00000000000eb6c9 : mov esi, esp ; call 0x878d4
0x00000000000cc1fa : mov esi, esp ; call 0xf1899
0x00000000001226f5 : mov esi, esp ; call qword ptr [rax]
0x000000000010d063 : mov esi, esp ; mov edx, r13d ; pop r12 ; pop r13 ; jmp rax
0x000000000012e7fd : mov esi, esp ; mov rdi, rbp ; call qword ptr [rax]
0x000000000012b24f : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000011ec9f : mov esi, esp ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x00000000001227d5 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000085e93 : mov esi, esp ; mov rdi, rbx ; call rax
0x000000000011e88f : mov esi, esp ; mov rdi, rbx ; mov r13, rsp ; call r15
0x00000000000eb6c8 : mov esi, r12d ; call 0x878d5
0x0000000000078d65 : mov esi, r8d ; call 0x74fd5
0x000000000000ed59 : mov esp, 0x12 ; add byte ptr [rax], al ; ret 0
0x00000000001890f4 : mov esp, 0x1400008a ; fldl2e ; call rsp
0x000000000019ae35 : mov esp, 0x16b80000 ; out dx, al ; call qword ptr [rdi]
0x000000000019ae65 : mov esp, 0x17a80000 ; out dx, al ; call qword ptr [rcx]
0x00000000001893d4 : mov esp, 0x24000097 ; adc ebp, ebx ; call rsp
0x000000000018de2c : mov esp, 0x34000279 ; add bh, cl ; call rsp
0x00000000000f3b53 : mov esp, 0x401f0f ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d617 : mov esp, 0x440f48c7 ; ret 0xc083
0x000000000012c282 : mov esp, 0x440f49dd ; fisttp qword ptr [rax - 0x7d] ; ret
0x000000000008c951 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008c981 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008c971 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000fa980 : mov esp, 0x48002c7e ; add esp, 0x18 ; ret
0x0000000000188e84 : mov esp, 0x5400007d ; jb 0x188e7c ; call rsp
0x00000000001a5f4c : mov esp, 0x6000016d ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x000000000018cc0c : mov esp, 0x74000202 ; xor dh, bh ; call rsp
0x000000000019c74c : mov esp, 0x800000d5 ; and ch, dh ; jmp rcx
0x00000000001ab54c : mov esp, 0x800001c3 ; sal ebp, cl ; jmp qword ptr [rsi]
0x000000000018b641 : mov esp, 0x83dcfff2 ; add dword ptr [rax], eax ; ret
0x000000000009380f : mov esp, 0x8948fff8 ; ret
0x0000000000028dde : mov esp, 0x89fffffc ; ret 0xe283
0x0000000000044fd6 : mov esp, 0x9024 ; add bl, ch ; ret 0x9066
0x000000000018ef24 : mov esp, 0x94000166 ; push rdx ; sti ; call rsp
0x000000000018cb0c : mov esp, 0x940001ff ; sub esi, edi ; call rsp
0x000000000018a164 : mov esp, 0xb40000f8 ; scasd eax, dword ptr [rdi] ; out dx, al ; call rsp
0x000000000018c92c : mov esp, 0xb40001f7 ; add esi, edi ; call rsp
0x000000000018dee4 : mov esp, 0xb400027f ; xor ecx, edi ; call rsp
0x000000000018e954 : mov esp, 0xb40002cd ; cli ; jmp rsp
0x000000000016ef00 : mov esp, 0xbf00000f ; sldt word ptr [rax] ; ret 0xf
0x000000000019834c : mov esp, 0xc0000091 ; mov dh, -0x13 ; jmp qword ptr [rdx]
0x00000000001a2a4c : mov esp, 0xc0000138 ; in al, -0xf ; jmp rsi
0x00000000001a824c : mov esp, 0xc0000190 ; or esi, ebp ; jmp qword ptr [rcx]
0x000000000008d606 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x0000000000179c51 : mov esp, 0xc2a7fff3 ; call qword ptr [rdx]
0x000000000018d53c : mov esp, 0xc400023a ; and al, bh ; call rsp
0x00000000000896eb : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000018e23c : mov esp, 0xd400029c ; popfq ; stc ; call rsp
0x000000000018b264 : mov esp, 0xe4000169 ; mov cl, -0xf ; call rsp
0x000000000019ea4c : mov esp, 0xf00000f8 ; mov ebp, edi ; jmp qword ptr [rdx]
0x00000000001ac54c : mov esp, 0xf00001d3 ; in eax, -0xb ; call qword ptr [rax]
0x000000000018b35c : mov esp, 0xf400016e ; retf ; int1 ; call rsp
0x000000000009438b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000008c961 : mov esp, 0xf80148c0 ; ret
0x000000000019ee4c : mov esp, 0xfc ; pushfq ; out dx, eax ; call qword ptr [rdi]
0x000000000004fcc8 : mov esp, 0xfc239c1 ; ret 0xb941
0x000000000012bb2c : mov esp, dword ptr [rax] ; jmp 0x12bb3a
0x000000000006875f : mov esp, dword ptr [rbp - 0x170] ; jmp 0x64997
0x0000000000021ac1 : mov esp, eax ; call 0xa25b8
0x0000000000036aa9 : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x00000000000a81b5 : mov esp, ebx ; mov r10, rax ; jmp 0xa81e4
0x0000000000179c44 : mov esp, ecx ; dec ebp ; ret 0xfff3
0x0000000000188a41 : mov esp, edi ; call qword ptr [rax + 0x10fffc8a]
0x0000000000188085 : mov esp, edi ; call qword ptr [rax]
0x0000000000188281 : mov esp, edi ; jmp qword ptr [rax]
0x0000000000188145 : mov esp, edi ; jmp rdx
0x0000000000028d02 : mov fs, ecx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000188b41 : mov gs, ecx ; call rsp
0x000000000004e6f2 : mov qword ptr [r15 + 8], rdx ; jmp 0x4e6bf
0x00000000001247e3 : mov qword ptr [r8 + 8], rdx ; mov eax, 1 ; ret
0x000000000004bee0 : mov qword ptr [r8], rax ; jmp 0x4beac
0x0000000000061cc0 : mov qword ptr [r8], rax ; jmp 0x61c8c
0x00000000001248b2 : mov qword ptr [r8], rax ; mov eax, 1 ; ret
0x0000000000118b17 : mov qword ptr [r9], r10 ; ret
0x0000000000118bbb : mov qword ptr [r9], rcx ; ret
0x0000000000118b87 : mov qword ptr [r9], rdi ; ret
0x0000000000074c48 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074c88 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000075ae8 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000073aa8 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000d2aea : mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x00000000000d2b1c : mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x0000000000074c4c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000075b86 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000003c7bd : mov qword ptr [rax + 0x60], rdx ; call qword ptr [rbx]
0x000000000007c749 : mov qword ptr [rax + 8], 0 ; ret
0x000000000005e1b4 : mov qword ptr [rax + 8], r9 ; add dword ptr [rdx + 4], 1 ; ret
0x00000000000f1da7 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x0000000000026eb4 : mov qword ptr [rax], rbx ; jmp 0x26e7f
0x0000000000029af6 : mov qword ptr [rax], rbx ; mov eax, dword ptr [rsp + 0x1c] ; jmp 0x29ac9
0x000000000002acc6 : mov qword ptr [rax], rbx ; mov eax, dword ptr [rsp + 0x24] ; jmp 0x2ac99
0x00000000000497db : mov qword ptr [rax], rcx ; mov byte ptr [rax + 8], 0 ; ret
0x00000000000751d4 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000078249 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00000000000831b5 : mov qword ptr [rax], rdi ; ret
0x00000000000fae82 : mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007512f : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000002f8f3 : mov qword ptr [rax], rdx ; ret
0x0000000000075e00 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000005f460 : mov qword ptr [rbp - 0x11a0], rcx ; jmp rax
0x000000000005c41b : mov qword ptr [rbp - 0x1f0], rdx ; call 0x108659
0x0000000000049fa8 : mov qword ptr [rbp - 0x5b0], rcx ; jmp rax
0x0000000000023292 : mov qword ptr [rbp - 0x68], rax ; call rcx
0x00000000000f88d6 : mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0xf890a
0x00000000000f89a7 : mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0xf89dc
0x0000000000108277 : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r14 ; call rax
0x0000000000058ea3 : mov qword ptr [rbp - 0xf8], rax ; jmp 0x58e76
0x000000000002c976 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000136c85 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000079376 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000079888 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000012f301 : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000136c32 : mov qword ptr [rbx + 0x18], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f358 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007bc22 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000e462a : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000073ad4 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000873a1 : mov qword ptr [rbx + 0x48], r9 ; mov rdi, r9 ; call rcx
0x00000000000f1125 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000007bc8a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000079266 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x000000000007beac : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000008765c : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012f661 : mov qword ptr [rbx], 0 ; call 0x12b929
0x00000000000f5871 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000136ead : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012b831 : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000000872e4 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], eax ; call rcx
0x00000000001247cb : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x0000000000021bfc : mov qword ptr [rcx + 0x968], rdx ; ret
0x000000000015b4c3 : mov qword ptr [rcx + 5], rdx ; ret
0x000000000015b4d3 : mov qword ptr [rcx + 6], rdx ; ret
0x000000000015b4e3 : mov qword ptr [rcx + 7], rdx ; ret
0x000000000015b4f3 : mov qword ptr [rcx + 8], rdx ; ret
0x0000000000077d43 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000015b480 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000015b4a0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000015b4b0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000015b4c0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000015b4d0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000015b4e0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000015b4f0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000015b490 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000015b470 : mov qword ptr [rcx], rdx ; ret
0x00000000000e59ca : mov qword ptr [rdi + 0x100], rdx ; ret
0x0000000000038bbe : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000009f1bc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a000c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009db4c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009db2c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a1a7c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009e81f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009db8f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009dbaf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009db70 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000007bbb2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000073e66 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000012ef63 : mov qword ptr [rdi + 0x18], rdx ; ret
0x000000000012ef00 : mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x000000000012ef25 : mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000128c3b : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x00000000000929e8 : mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000128bf3 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x000000000007bbe2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000376f8 : mov qword ptr [rdi + 0x78], -1 ; ret
0x00000000000e506d : mov qword ptr [rdi + 0x80], rdx ; ret
0x000000000009f17c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009ffcc : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009daec : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a1a3c : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009f19c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009ffec : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009db0c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a1a5c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000014dd67 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014dcf7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014dc87 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014dc17 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009f07a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009feba : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000014dba7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009da3a : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a192a : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009f09a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000009feda : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000014db37 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009da4a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a194a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009f0ba : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000009fefa : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000014dac7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009da5a : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a196a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000f3da7 : mov qword ptr [rdi + 8], 0 ; ret
0x0000000000038343 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000038b43 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000007bbb6 : mov qword ptr [rdi + 8], rax ; ret
0x00000000000741be : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000003ccb9 : mov qword ptr [rdi + 8], rdx ; ret
0x00000000000f3d97 : mov qword ptr [rdi + 8], rsi ; ret
0x000000000008d131 : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000145024 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000145062 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000038aae : mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000001453ab : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014d577 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014558b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014d4f7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014577b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014d477 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014594c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014d3e8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000145b4c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014d358 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000145d4c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014d2c8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000009e9a0 : mov qword ptr [rdi - 1], rdx ; ret
0x0000000000038a39 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000145028 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000145066 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001451db : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001452d7 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000145223 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014d5f7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000053805 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000038a08 : mov qword ptr [rdi], r9 ; ret
0x0000000000039c9d : mov qword ptr [rdi], rax ; mov eax, 1 ; ret
0x00000000000f3d94 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000092829 : mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x0000000000037a15 : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000009f006 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009e6c6 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009da16 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009da26 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009da37 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009da47 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009da57 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000003ccc9 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000008d12e : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000009da07 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000927a8 : mov qword ptr [rdi], rcx ; ret
0x000000000009eff3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009fe23 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009e9c0 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009e9e0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009e9f0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009ea00 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009ea10 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009e9d0 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000001fc27 : mov qword ptr [rdi], rdx ; ret
0x00000000000a1893 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x0000000000118caa : mov qword ptr [rdx + 0x10], rax ; xor eax, eax ; ret
0x000000000006eea6 : mov qword ptr [rdx + 0x140], rcx ; ret
0x00000000000793d4 : mov qword ptr [rdx + 0x140], rdi ; pop rbx ; ret
0x0000000000078c7d : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000078e33 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000012284f : mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000012282b : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012282f : mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000015d87a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000001594ea : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000015d89a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000015950a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000015d8ba : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000015952a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000015d74a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000015941a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00000000001283b0 : mov qword ptr [rdx + 8], rdi ; ret
0x000000000015d6f3 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000128407 : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000001593c3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000007285e : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000074fc5 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000007d113 : mov qword ptr [rdx], rcx ; ret
0x00000000000e3d5a : mov qword ptr [rdx], rdi ; ret
0x00000000001283ad : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000010b8f7 : mov qword ptr [rip + 0x2b7ec2], rdx ; pop rbp ; ret
0x00000000000fd26f : mov qword ptr [rip + 0x2c208a], rbx ; pop rbx ; ret
0x00000000000f3164 : mov qword ptr [rip + 0x2cd7b5], rax ; mov rdx, rax ; jmp 0xf3108
0x00000000000f4575 : mov qword ptr [rip + 0x2ce0b4], rax ; mov rdx, rax ; jmp 0xf4559
0x000000000008b611 : mov qword ptr [rip + 0x336658], rax ; ret
0x0000000000021a9a : mov qword ptr [rip + 0x39d78f], rax ; pop r12 ; ret
0x00000000000e4af3 : mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000001219ee : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003d275 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x000000000003cc27 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000e4fde : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000e4ad6 : mov qword ptr [rsi + 8], 0 ; ret
0x00000000001219be : mov qword ptr [rsi + 8], rax ; ret
0x00000000000e4aef : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000007e08a : mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x0000000000073e6a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000011888f : mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000001183a8 : mov qword ptr [rsi], rdi ; ret
0x000000000010d0f8 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000814eb : mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x00000000000815bf : mov qword ptr [rsp + 0x10], rcx ; call rdx
0x0000000000081398 : mov qword ptr [rsp + 0x28], r14 ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000120619 : mov qword ptr [rsp + 8], 0 ; call qword ptr [rax]
0x000000000008734f : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000029da3 : mov qword ptr [rsp + 8], rax ; call r14
0x000000000002838c : mov qword ptr [rsp + 8], rax ; call rbx
0x000000000012f41b : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x000000000007ea72 : mov qword ptr [rsp + 8], rcx ; call qword ptr [rax]
0x000000000012a84f : mov qword ptr [rsp + 8], rdi ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001210a7 : mov qword ptr [rsp], rax ; call qword ptr [r11]
0x00000000000277b1 : mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000cd5a6 : mov qword ptr [rsp], rax ; call rbx
0x000000000011e783 : mov qword ptr [rsp], rcx ; call r12
0x00000000000be77c : mov qword ptr [rsp], rdx ; mov rdx, qword ptr [rsp + 0x28] ; call rax
0x000000000003003c : mov qword ptr fs:[rax], rdx ; ret
0x000000000012b830 : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000104808 : mov r10, qword ptr [rbp - 0x48] ; sete dl ; jmp 0x1047a0
0x00000000000985a3 : mov r10, r8 ; jmp 0x9859b
0x00000000000a81b7 : mov r10, rax ; jmp 0xa81e2
0x000000000017501d : mov r10d, 0xcac982a4 ; call 0xffffffffaed9ee9f
0x00000000001321f3 : mov r10d, dword ptr [rbp - 0xc0] ; jmp 0x1321c7
0x00000000000d9975 : mov r11, rax ; mov edx, r8d ; jmp 0xd9989
0x00000000000fc83b : mov r11b, 0x66 ; nop ; xor eax, eax ; ret
0x00000000000bacb1 : mov r11d, 1 ; jmp 0xbac82
0x000000000006875e : mov r12, qword ptr [rbp - 0x170] ; jmp 0x64998
0x00000000000a81b4 : mov r12, r11 ; mov r10, rax ; jmp 0xa81e5
0x0000000000021ac0 : mov r12, rax ; call 0xa25b9
0x000000000012bb2b : mov r12d, dword ptr [rax] ; jmp 0x12bb3b
0x00000000000d9971 : mov r13, qword ptr [rax + 0x70] ; mov r11, rax ; mov edx, r8d ; jmp 0xd998d
0x00000000000a6784 : mov r13, r14 ; setne dl ; jmp 0xa679d
0x00000000000ab634 : mov r13, r14 ; setne dl ; jmp 0xab64d
0x00000000000ac78d : mov r13, rax ; call 0x389b5
0x000000000005a26c : mov r13, rax ; jmp 0x564f7
0x000000000011e894 : mov r13, rsp ; call r15
0x00000000000f082c : mov r13d, dword ptr [r14] ; call 0xeca95
0x00000000000f082b : mov r13d, dword ptr fs:[r14] ; call 0xeca96
0x000000000007ea21 : mov r14, rdx ; call qword ptr [rax]
0x00000000000be050 : mov r15, rax ; je 0xbe089 ; mov rdi, r15 ; call r14
0x00000000001880bc : mov r15b, spl ; call rsi
0x00000000000f63f1 : mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000220f5 : mov r8, qword ptr [rsp + 0x18] ; add rsp, 0x28 ; jmp rax
0x00000000000791e5 : mov r8, rdx ; pop rbx ; ret
0x00000000000cd660 : mov r8b, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000104806 : mov r8b, 0x4c ; mov edx, dword ptr [rbp - 0x48] ; sete dl ; jmp 0x1047a2
0x0000000000098028 : mov r8d, 0x3d ; jmp 0x97ffa
0x0000000000071df8 : mov r8d, esi ; ret
0x00000000000f3e3f : mov r9, rsi ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000137196 : mov r9d, dword ptr [rdx] ; mov rdx, r12 ; add r9, r11 ; call rax
0x00000000000f1501 : mov r9d, eax ; pop rbp ; mov eax, r9d ; pop r12 ; ret
0x00000000000c14fb : mov rax, -0xe ; ret
0x0000000000079270 : mov rax, -1 ; pop rbx ; ret
0x0000000000036b76 : mov rax, -1 ; ret
0x00000000000a3a70 : mov rax, 1 ; ret
0x00000000000a3a80 : mov rax, 2 ; ret
0x00000000000a3a90 : mov rax, 3 ; ret
0x00000000000a3aa0 : mov rax, 4 ; ret
0x00000000000a3ab0 : mov rax, 5 ; ret
0x00000000000a3ac0 : mov rax, 6 ; ret
0x00000000000a3ad0 : mov rax, 7 ; ret
0x0000000000136c97 : mov rax, qword ptr [rax + 0x108] ; jmp rax
0x00000000000fd94f : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000fd6ff : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007bcbb : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000007539b : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000751a0 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000001085af : mov rax, qword ptr [rax + 0x30] ; ret
0x000000000007c207 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000001282c3 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000070af2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007c61b : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000070dbc : mov rax, qword ptr [rax + 0x48] ; xor edx, edx ; pop r12 ; jmp rax
0x00000000000716e3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000128b73 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f8f28 : mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000f8f30 : mov rax, qword ptr [rax + 0xc8] ; ret
0x0000000000136b9e : mov rax, qword ptr [rax + 0xe8] ; jmp rax
0x000000000012dcb4 : mov rax, qword ptr [rax + 8] ; jmp rax
0x00000000000f8f09 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002d069 : mov rax, qword ptr [rax + rbx*8] ; test rax, rax ; je 0x2d07d ; call rax
0x000000000002fdb4 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002f93e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000012dca9 : mov rax, qword ptr [rax] ; jmp rax
0x000000000002cbdb : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000004bedd : mov rax, qword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x4beaf
0x0000000000061cbd : mov rax, qword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x61c8f
0x0000000000048742 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000011d0d8 : mov rax, qword ptr [rax] ; ret
0x0000000000084333 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x84345 ; call rax
0x00000000000f63f4 : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000be3fa : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000023e60 : mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000073ad0 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000c1a37 : mov rax, qword ptr [rbx + 8] ; test rax, rax ; je 0xc1a4b ; call rax
0x000000000012b7f9 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x12b811 ; pop rbx ; ret
0x000000000012b865 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x12b825 ; pop rbx ; ret
0x00000000000c1c44 : mov rax, qword ptr [rcx + 0x10] ; test rax, rax ; je 0xc1c5c ; call rax
0x00000000001593c0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000012f32b : mov rax, qword ptr [rdi + 0x18] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012eec0 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000bddb0 : mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000121a26 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000073b10 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000121a5e : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000073a00 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000716e0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007d3f0 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000012e3b0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x0000000000122760 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000012ecc8 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000012ecd8 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000012dcb0 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000012dca5 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x00000000001226f0 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000108d84 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000002fd52 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000121e97 : mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000000e3d57 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000007d100 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7d101 ; ret
0x0000000000134640 : mov rax, qword ptr [rip + 0x2884b9] ; jmp rax
0x00000000001345f0 : mov rax, qword ptr [rip + 0x288501] ; pop r12 ; jmp rax
0x0000000000134590 : mov rax, qword ptr [rip + 0x288559] ; pop r12 ; jmp rax
0x0000000000136161 : mov rax, qword ptr [rip + 0x28a728] ; call qword ptr [rax]
0x00000000001346a1 : mov rax, qword ptr [rip + 0x28c1e8] ; call qword ptr [rax]
0x0000000000112e50 : mov rax, qword ptr [rip + 0x2adb99] ; ret
0x00000000000815f7 : mov rax, qword ptr [rip + 0x33d7ba] ; xor edi, edi ; call qword ptr [rax]
0x000000000007d3d0 : mov rax, qword ptr [rip + 0x342dc9] ; ret
0x000000000002bfd0 : mov rax, qword ptr [rip + 0x394ae9] ; ret
0x0000000000023650 : mov rax, qword ptr [rip + 0x3a15f1] ; ret
0x0000000000023640 : mov rax, qword ptr [rip + 0x3a1611] ; ret
0x000000000002ee50 : mov rax, qword ptr [rsi + rdx*8 + 0x80] ; ret
0x00000000000f60c9 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000021ebe : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000026eaf : mov rax, qword ptr [rsp + 0x28] ; mov qword ptr [rax], rbx ; jmp 0x26e84
0x000000000002a3cb : mov rax, qword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000285af : mov rax, qword ptr [rsp + 0x58] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000027fae : mov rax, qword ptr [rsp + 0x78] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000003d018 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000f1f15 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x00000000000f309f : mov rax, qword ptr [rsp - 0x68] ; ret
0x0000000000134963 : mov rax, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013449c : mov rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000fe0c2 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000fe123 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000011d0d7 : mov rax, qword ptr fs:[rax] ; ret
0x000000000010998f : mov rax, r10 ; ret
0x0000000000092d21 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b220a : mov rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006d88f : mov rax, r12 ; pop r12 ; ret
0x000000000006d4c3 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f914 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bde8c : mov rax, r14 ; pop r14 ; ret
0x0000000000082061 : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007e1aa : mov rax, r8 ; nop dword ptr [rax] ; ret
0x000000000007e08d : mov rax, r8 ; ret
0x0000000000079fe9 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000744b9 : mov rax, rbp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070158 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006ffe2 : mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000f5aef : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000007012b : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ca35c : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073fdf : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000b1107 : mov rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000092c06 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000be571 : mov rax, rbx ; call rax
0x00000000000f8b3e : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002cae5 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f15e : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033efe : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003ca0a : mov rax, rbx ; pop rbx ; ret
0x00000000000305d2 : mov rax, rcx ; pop r13 ; ret
0x0000000000085cb1 : mov rax, rcx ; pop r14 ; ret
0x0000000000030558 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000355fe : mov rax, rcx ; pop rbx ; ret
0x0000000000035608 : mov rax, rcx ; ret
0x000000000010982e : mov rax, rdi ; add rsp, 8 ; ret
0x00000000000496b8 : mov rax, rdi ; cmovae rax, rsi ; pop rbx ; ret
0x0000000000049794 : mov rax, rdi ; cmovae rax, rsi ; ret
0x000000000003c870 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000078539 : mov rax, rdi ; jmp 0x78504
0x00000000000f3eb9 : mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000097476 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a423a : mov rax, rdi ; nop dword ptr [rax] ; ret
0x0000000000102a0b : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007e4ff : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000109a60 : mov rax, rdi ; pop rbx ; ret
0x000000000007d400 : mov rax, rdi ; ret
0x000000000010b719 : mov rax, rdi ; sar rax, 6 ; ret
0x00000000000b559b : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000070eb7 : mov rax, rdx ; pop r12 ; ret
0x00000000000bda72 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070c79 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007ec6e : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000390c4 : mov rax, rdx ; pop rbx ; ret
0x0000000000038519 : mov rax, rdx ; ret
0x000000000004978b : mov rax, rsi ; nop ; ret
0x00000000000c3363 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003c2f9 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000049680 : mov rax, rsi ; pop rbx ; ret
0x00000000000498c3 : mov rax, rsi ; ret
0x0000000000112007 : mov rbp, qword ptr [rbx + 0x50] ; call 0x11e226
0x0000000000036aab : mov rbp, r9 ; jmp rdx
0x000000000010b7e3 : mov rbp, rsp ; pop rbp ; ret
0x00000000000a8f60 : mov rbx, r15 ; setne dl ; jmp 0xa8f7c
0x000000000012232a : mov rbx, rax ; jne 0x1222ca ; xor eax, eax ; pop rbx ; ret
0x00000000000f19ce : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x000000000007bff9 : mov rbx, rdi ; je 0x7c011 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002e695 : mov rbx, rdi ; test rax, rax ; je 0x2e6a7 ; call rax
0x00000000000c115d : mov rbx, rsp ; call 0x3d3a5
0x000000000002d3f0 : mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2d404 ; call rcx
0x0000000000128ee5 : mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x000000000011f8c6 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000007d110 : mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x000000000009d9f0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000124c44 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000124a4d : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012165d : mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000003db0a : mov rcx, r10 ; jmp 0x3da3d
0x000000000011eca4 : mov rcx, r13 ; call rbx
0x00000000000a5031 : mov rcx, r13 ; mov rdi, rbp ; call rbx
0x00000000000a48da : mov rcx, r14 ; mov rdi, qword ptr [r13] ; call r12
0x000000000003d693 : mov rcx, rax ; jmp 0x3d57d
0x0000000000097765 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000097753 : mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x00000000000f5fef : mov rdi, qword ptr [r12] ; call rbx
0x00000000000a45f5 : mov rdi, qword ptr [r12] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000a48dd : mov rdi, qword ptr [r13] ; call r12
0x00000000000f5bf9 : mov rdi, qword ptr [r13] ; call rbx
0x00000000000f5b66 : mov rdi, qword ptr [r14] ; call rbx
0x00000000000f5ba7 : mov rdi, qword ptr [r15] ; call rbx
0x000000000002328e : mov rdi, qword ptr [rax + 0x18] ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x0000000000075ef7 : mov rdi, qword ptr [rax + 0x40] ; jmp 0x75ec5
0x00000000000f5fa2 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000c484e : mov rdi, qword ptr [rbp - 0x430] ; call r15
0x00000000000be484 : mov rdi, qword ptr [rbp - 0x68] ; call r14
0x00000000000cb604 : mov rdi, qword ptr [rbp - 0x70] ; movsx esi, byte ptr [rax] ; call 0x878d9
0x00000000000cd1ce : mov rdi, qword ptr [rbp - 0xa8] ; call rbx
0x00000000000f76d8 : mov rdi, qword ptr [rbp] ; call r12
0x00000000000f5d2e : mov rdi, qword ptr [rbp] ; call rbx
0x00000000000235d9 : mov rdi, qword ptr [rbx + 0x18] ; call rax
0x00000000000f76e7 : mov rdi, qword ptr [rbx] ; call r12
0x0000000000047149 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006efa8 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006ef7c : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000107003 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000002be5c : mov rdi, qword ptr [rsp + 0x10] ; call r15
0x0000000000025951 : mov rdi, qword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000028388 : mov rdi, qword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000027681 : mov rdi, qword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000277ac : mov rdi, qword ptr [rsp + 0x70] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000220a3 : mov rdi, qword ptr [rsp + 8] ; add rsp, 0x18 ; jmp rax
0x00000000000ecabd : mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0x108d19
0x000000000004c39b : mov rdi, r12 ; call 0x108655
0x000000000011b618 : mov rdi, r12 ; call 0x878d5
0x000000000001ff61 : mov rdi, r12 ; call qword ptr [r14]
0x0000000000083f29 : mov rdi, r12 ; call rax
0x00000000000f6864 : mov rdi, r12 ; call rbx
0x0000000000121f28 : mov rdi, r12 ; call rdx
0x0000000000120baa : mov rdi, r13 ; call qword ptr [rax]
0x00000000000f77f0 : mov rdi, r13 ; call r14
0x00000000000f7338 : mov rdi, r13 ; call rbx
0x0000000000086c1a : mov rdi, r13 ; call rdx
0x0000000000112004 : mov rdi, r13 ; mov rbp, qword ptr [rbx + 0x50] ; call 0x11e229
0x0000000000022d74 : mov rdi, r13 ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000071a43 : mov rdi, r13 ; xor r8d, r8d ; call r12
0x0000000000106571 : mov rdi, r14 ; call 0x102865
0x000000000010664a : mov rdi, r14 ; call 0x102915
0x00000000000e32bf : mov rdi, r14 ; call 0xdf565
0x000000000008139d : mov rdi, r14 ; call qword ptr [rax]
0x00000000001213f7 : mov rdi, r14 ; call rax
0x00000000000f68ad : mov rdi, r14 ; call rbx
0x0000000000023e5d : mov rdi, r14 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x00000000001066a8 : mov rdi, r14 ; xor eax, eax ; call 0x102917
0x00000000000757f5 : mov rdi, r15 ; call 0x71a75
0x00000000001209a2 : mov rdi, r15 ; call qword ptr [rax]
0x00000000000be055 : mov rdi, r15 ; call r14
0x00000000000860a5 : mov rdi, r15 ; call rax
0x00000000000f68cd : mov rdi, r15 ; call rbx
0x0000000000086b42 : mov rdi, r15 ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x00000000000873a5 : mov rdi, r9 ; call rcx
0x000000000012a256 : mov rdi, rax ; call qword ptr [r10]
0x00000000000cd9e7 : mov rdi, rax ; call rbx
0x000000000011f8c3 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000120cb3 : mov rdi, rbp ; call qword ptr [rax]
0x00000000001223c9 : mov rdi, rbp ; call qword ptr [rbx]
0x000000000012015c : mov rdi, rbp ; call r14
0x0000000000120359 : mov rdi, rbp ; call rax
0x00000000000a4d2c : mov rdi, rbp ; call rbx
0x000000000012f0c0 : mov rdi, rbp ; call rcx
0x00000000001273e9 : mov rdi, rbp ; call rdx
0x00000000000c115a : mov rdi, rbp ; mov rbx, rsp ; call 0x3d3a8
0x0000000000124c41 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000124a4a : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000011eca1 : mov rdi, rbp ; mov rcx, r13 ; call rbx
0x000000000012183d : mov rdi, rbp ; xor eax, eax ; pop rbp ; jmp rdx
0x000000000010c7c2 : mov rdi, rbx ; call 0x78a05
0x00000000001227d7 : mov rdi, rbx ; call qword ptr [rax]
0x000000000002bf86 : mov rdi, rbx ; call r12
0x00000000000237dc : mov rdi, rbx ; call r15
0x000000000006e2af : mov rdi, rbx ; call r8
0x0000000000050a14 : mov rdi, rbx ; call rax
0x000000000011e780 : mov rdi, rbx ; mov qword ptr [rsp], rcx ; call r12
0x000000000011e891 : mov rdi, rbx ; mov r13, rsp ; call r15
0x0000000000136752 : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000012165a : mov rdi, rbx ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000086345 : mov rdi, rbx ; mov rdx, r15 ; call rax
0x0000000000075397 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007519c : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000135f39 : mov rdi, rbx ; pop rbx ; mov rsi, rbp ; pop rbp ; jmp rax
0x000000000012db2f : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000814e8 : mov rdi, rcx ; mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x0000000000108d87 : mov rdi, rdx ; jmp rax
0x000000000011f9c5 : mov rdi, rsp ; call rax
0x000000000012dba0 : mov rdi, rsp ; call rdx
0x0000000000108f79 : mov rdx, qword ptr [r9] ; test rdx, rdx ; jne 0x108f79 ; leave ; ret
0x0000000000073aa4 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000c1bbc : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xc1bd4 ; call rdx
0x0000000000021ebb : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000007f0ef : mov rdx, qword ptr [rax] ; test rdx, rdx ; je 0x7f101 ; call rdx
0x0000000000165c88 : mov rdx, qword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x165ca1 ; call rdx
0x0000000000165b7f : mov rdx, qword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x165b93 ; call rdx
0x0000000000145190 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009d9e0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000be780 : mov rdx, qword ptr [rsp + 0x28] ; call rax
0x0000000000137199 : mov rdx, r12 ; add r9, r11 ; call rax
0x0000000000107af8 : mov rdx, r12 ; call rax
0x00000000000860a2 : mov rdx, r12 ; mov rdi, r15 ; call rax
0x0000000000107e83 : mov rdx, r13 ; call rax
0x00000000000a4d29 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x000000000012b24b : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000002079a : mov rdx, r13 ; sub rdx, rbx ; inc rdx ; jmp 0x207b1
0x000000000010827b : mov rdx, r14 ; call rax
0x00000000000770d1 : mov rdx, r14 ; mov rdi, rbx ; call rax
0x0000000000123460 : mov rdx, r14 ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000086348 : mov rdx, r15 ; call rax
0x0000000000111ac9 : mov rdx, r15 ; mov rdi, r12 ; call rax
0x0000000000049479 : mov rdx, r8 ; jmp 0x49493
0x00000000000ecac1 : mov rdx, rax ; call 0x108d15
0x00000000001280c6 : mov rdx, rax ; jmp 0x12808c
0x000000000004c598 : mov rdx, rax ; jmp 0x4c5d0
0x000000000004c6fc : mov rdx, rax ; jmp 0x4c71e
0x00000000000c4d70 : mov rdx, rax ; jmp 0xc4d90
0x00000000000c5301 : mov rdx, rax ; jmp 0xc52a2
0x00000000000f316b : mov rdx, rax ; jmp 0xf3101
0x00000000000f457c : mov rdx, rax ; jmp 0xf4552
0x00000000000f88da : mov rdx, rax ; jmp 0xf8906
0x00000000000f89ab : mov rdx, rax ; jmp 0xf89d8
0x0000000000023400 : mov rdx, rbp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000012335d : mov rdx, rbp ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000bda3b : mov rdx, rbp ; xor ecx, ecx ; jmp 0xbda0b
0x0000000000107f03 : mov rdx, rbx ; call rax
0x0000000000086b45 : mov rdx, rbx ; mov rsi, r13 ; call rax
0x0000000000086d01 : mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000be480 : mov rsi, qword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x0000000000022d77 : mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000006601a : mov rsi, qword ptr [rip + 0x358f3f] ; call rax
0x0000000000064732 : mov rsi, qword ptr [rip + 0x35a827] ; call rax
0x000000000005f2b6 : mov rsi, qword ptr [rip + 0x35fca3] ; call rax
0x0000000000055f44 : mov rsi, qword ptr [rip + 0x369015] ; call rax
0x000000000004ef72 : mov rsi, qword ptr [rip + 0x36ffe7] ; call rax
0x0000000000049e2e : mov rsi, qword ptr [rip + 0x37512b] ; call rax
0x0000000000047489 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000120157 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000023403 : mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x00000000000832fa : mov rsi, qword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000083f24 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x0000000000027d96 : mov rsi, qword ptr [rsp + 0x50] ; call rax
0x0000000000102c9b : mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000008394a : mov rsi, qword ptr [rsp] ; jmp rax
0x000000000012b24e : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000011ec9e : mov rsi, r12 ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x0000000000085e92 : mov rsi, r12 ; mov rdi, rbx ; call rax
0x0000000000086b48 : mov rsi, r13 ; call rax
0x00000000000a473e : mov rsi, r13 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000086d04 : mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000085c24 : mov rsi, r14 ; call rax
0x00000000000e32bc : mov rsi, r15 ; mov rdi, r14 ; call 0xdf568
0x00000000000ac78a : mov rsi, rax ; mov r13, rax ; call 0x389b8
0x000000000003a1e2 : mov rsi, rbp ; call r12
0x000000000010c7bf : mov rsi, rbp ; mov rdi, rbx ; call 0x78a08
0x0000000000086ebc : mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000135f3d : mov rsi, rbp ; pop rbp ; jmp rax
0x00000000000f77ed : mov rsi, rbx ; mov rdi, r13 ; call r14
0x0000000000086c17 : mov rsi, rbx ; mov rdi, r13 ; call rdx
0x000000000012bfcc : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000012f0bd : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x0000000000125299 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000107007 : mov rsi, rdx ; call rax
0x00000000001226f4 : mov rsi, rsp ; call qword ptr [rax]
0x000000000012e7fc : mov rsi, rsp ; mov rdi, rbp ; call qword ptr [rax]
0x00000000001227d4 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000036aa8 : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x000000000018828c : mov spl, dil ; call rax
0x000000000002b249 : mov ss, dword ptr [rax + 0x29480000] ; ret 0x8b49
0x00000000000f1653 : mov word ptr [r8 + 0x21], si ; ret
0x000000000008d121 : mov word ptr [rax + rdx - 2], cx ; ret
0x00000000000fd6ef : mov word ptr [rax], dx ; ret
0x000000000015b452 : mov word ptr [rcx + 4], dx ; ret
0x000000000015b493 : mov word ptr [rcx + 8], dx ; ret
0x000000000015b420 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000015b410 : mov word ptr [rcx], dx ; ret
0x000000000009f0fc : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009ff4c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009da8c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a19bc : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009f204 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a0054 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009db74 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a1ac4 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000014e007 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000003d34f : mov word ptr [rdi + 2], dx ; ret
0x0000000000097502 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009fdf8 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000097462 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x000000000009d9c8 : mov word ptr [rdi + 4], dx ; ret
0x00000000000a1868 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009fe5a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009f01a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009da0a : mov word ptr [rdi + 8], dx ; ret
0x00000000000a18ca : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000014572c : mov word ptr [rdi - 2], cx ; ret
0x0000000000145544 : mov word ptr [rdi - 2], dx ; ret
0x0000000000145728 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000009d993 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000009e666 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000014e00b : mov word ptr [rdi], cx ; ret
0x000000000009ef83 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009fda3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009d983 : mov word ptr [rdi], dx ; ret
0x00000000000a1813 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000974c0 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000097420 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000000e50a0 : mov word ptr [rdi], si ; xor al, al ; ret
0x000000000015d7c8 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009a73d : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x000000000009a7c1 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000015d773 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000009a6d8 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000f0945 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x000000000003d2bf : mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003d306 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000000e5083 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000036964 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x0000000000022d73 : movabs al, byte ptr [0x201a748b48ef894c] ; call rax
0x000000000004231e : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00000000000658e7 : movabs al, byte ptr [0x840fc08548000000] ; ret
0x000000000003fb9f : movabs al, byte ptr [0x8948fe8944000000] ; ret 0x8948
0x00000000000400ee : movabs al, byte ptr [0xc748c03145000000] ; ret
0x0000000000075ef3 : movabs al, byte ptr [0xeb40788b48000000] ; ret
0x0000000000194a26 : movabs al, byte ptr [0xebe7730d1cffec6f] ; jmp qword ptr [rdx]
0x000000000019b806 : movabs al, byte ptr [0xedfa930d1cffee63] ; jmp qword ptr [rdx]
0x0000000000006e60 : movabs byte ptr [0x20000c002200001c], al ; ret 0xf
0x0000000000122f6a : movabs byte ptr [0x894863fd83ffefc4], al ; ret
0x00000000001a1f4e : movabs byte ptr [0xf17d6f0d1cfff17e], al ; jmp qword ptr [rdx]
0x00000000001a243e : movabs byte ptr [0xf187250d1cfff187], al ; jmp qword ptr [rdx]
0x00000000001aa226 : movabs byte ptr [0xf4e8de0d1cfff4e9], al ; jmp qword ptr [rdx]
0x00000000001ae236 : movabs byte ptr [0xf57f190d1cfff57f], al ; jmp qword ptr [rdx]
0x00000000001aec2e : movabs byte ptr [0xf588250d1cfff588], al ; jmp qword ptr [rdx]
0x00000000001af696 : movabs byte ptr [0xf59a600d1cfff5a7], al ; jmp qword ptr [rdx]
0x00000000000d2943 : movabs dword ptr [0x5bffffff67820fca], eax ; ret
0x00000000000e3f6e : movabs dword ptr [0x83305e8b49000003], eax ; ret
0x000000000007ad81 : movabs dword ptr [0x8341001f0ffffffc], eax ; ret 0x4101
0x0000000000020fcb : movabs dword ptr [0x8348c6ff411572c1], eax ; ret
0x000000000019261e : movabs dword ptr [0xea84550d1cffea89], eax ; jmp qword ptr [rdx]
0x0000000000199f6e : movabs dword ptr [0xeddb4d0d1cffeddd], eax ; jmp qword ptr [rdx]
0x000000000000087f : movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x000000000003536b : movabs eax, dword ptr [0x8948c08548fffea0] ; ret
0x0000000000195416 : movabs eax, dword ptr [0xec7de50d1cffecd3] ; jmp qword ptr [rdx]
0x000000000019623e : movabs eax, dword ptr [0xed70920d1cffed71] ; jmp qword ptr [rdx]
0x000000000019796e : movabs eax, dword ptr [0xed811e0d1cffed81] ; jmp qword ptr [rdx]
0x00000000001adbde : movabs eax, dword ptr [0xf5785f0d1cfff579] ; jmp qword ptr [rdx]
0x00000000001b0f3e : movabs eax, dword ptr [0xf6254a0d1cfff633] ; jmp qword ptr [rdx]
0x00000000000f6ce3 : movabs eax, dword ptr [0xff894cf631000008] ; call rbx
0x0000000000036146 : movapd xmm0, xmm1 ; ret
0x00000000000362c4 : movaps xmm0, xmm1 ; jne 0x362d9 ; add rsp, 8 ; ret
0x000000000003659f : movaps xmm0, xmm1 ; jne 0x365b9 ; add rsp, 8 ; ret
0x0000000000036147 : movaps xmm0, xmm1 ; ret
0x0000000000143cb2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000143cae : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000143d5c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000036256 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000036066 : movd mm0, eax ; ret
0x0000000000036255 : movd mm0, rax ; mov dword ptr [rdi], edx ; ret
0x0000000000036065 : movd mm0, rax ; ret
0x0000000000036482 : movd mm1, eax ; movaps xmm0, xmm1 ; ret
0x00000000000360cf : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000036416 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x0000000000036143 : movd mm1, edi ; movapd xmm0, xmm1 ; ret
0x00000000000360ce : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000036142 : movd mm1, rdi ; movapd xmm0, xmm1 ; ret
0x0000000000036570 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000000363ec : movd xmm0, eax ; ret
0x0000000000036481 : movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x0000000000036415 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x000000000009da60 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009f2bd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a010d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x000000000009e920 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009dc2d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a0373 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009eb63 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x000000000014dcdf : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dc6f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dbff : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014db8f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009f25d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a00ad : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009dbcd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000014db1f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009f27d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a00cd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009dbed : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000014daaf : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009f29d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a00ed : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009dc0d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000014e0cf : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014e05f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dfef : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014df7f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014df0f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014de9f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014de2f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014ddbf : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dd4f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008d086 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm8 ; ret
0x000000000014d23b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000014d2ab : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000009ea20 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009ff14 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009f0d4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009e747 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009da74 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009dab7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009daa7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009db28 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009dae8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009db08 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009da88 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009dc29 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009dbc9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009dbe9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009dc09 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009da64 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a1984 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000014dab4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009a822 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x000000000009a842 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x000000000009a862 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x000000000009a6ac : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x000000000009a656 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x000000000009a823 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x000000000009a843 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x000000000009a863 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x000000000009a6ad : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x000000000009a657 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x000000000009da61 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009f2be : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a010e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x000000000009e921 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009dc2e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000a1b7e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a0374 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009eb64 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000a1bf4 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000014dce0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dc70 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dc00 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014db90 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009f25e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a00ae : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009dbce : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000a1b1e : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000014db20 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009f27e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a00ce : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009dbee : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000a1b3e : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000014dab0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009f29e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a00ee : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009dc0e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000a1b5e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000014e0d0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014e060 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dff0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014df80 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014df10 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dea0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014de30 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014ddc0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dd50 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008d073 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x8d088 ; ret
0x000000000008d088 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000014d23c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000014d2ac : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014d9e7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014d967 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014d8d7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014d857 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014d7d7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014d757 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014d6d7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014d657 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014d5d7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014d557 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014d4d7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014d457 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014d3c7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014d337 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014d2a7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000009ea21 : movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009ff15 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009f0d5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009e748 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009da75 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009dac8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009e79b : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009dab8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009daa8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009db29 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009dae9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009db09 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009da89 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009dc2a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009dbca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009dbea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009dc0a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009da65 : movq qword ptr [rdi], mm0 ; ret
0x00000000000a1985 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000014dab5 : movq qword ptr [rdi], mm1 ; ret
0x0000000000036254 : movq xmm0, rax ; mov dword ptr [rdi], edx ; ret
0x0000000000036064 : movq xmm0, rax ; ret
0x00000000000360cd : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000036141 : movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x0000000000193804 : movsb byte ptr [rdi], byte ptr [rsi] ; adc ebp, ebx ; jmp qword ptr [rdx]
0x0000000000194134 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; mov byte ptr [rsi - 0x15], dl ; jmp qword ptr [rbx]
0x00000000000d1862 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd17f5
0x0000000000195734 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr gs:[rax], al ; or byte ptr [rbx - 0x13], bh ; jmp rcx
0x000000000018aa84 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], r8d ; adc al, -0x3e ; out dx, eax ; jmp rsp
0x0000000000188991 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call rax
0x0000000000188911 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; jmp rsp
0x000000000017a0b8 : movsb byte ptr [rdi], byte ptr [rsi] ; cli ; jmp rcx
0x000000000017af41 : movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp rax
0x000000000017af3d : movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; push qword ptr [rbx - 0x5c] ; cmc ; jmp rax
0x000000000018d4fc : movsb byte ptr [rdi], byte ptr [rsi] ; cmp byte ptr [rdx], al ; add byte ptr [rsi + rbx], al ; clc ; jmp rsp
0x0000000000189664 : movsb byte ptr [rdi], byte ptr [rsi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; mov ah, 0x47 ; jmp 0x189672
0x00000000001a8a34 : movsb byte ptr [rdi], byte ptr [rsi] ; cwde ; add dword ptr [rax], eax ; mov byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x000000000019cf34 : movsb byte ptr [rdi], byte ptr [rsi] ; fld qword ptr [rax] ; add byte ptr [rax], bh ; js 0x19cf30 ; jmp qword ptr [rcx]
0x00000000001759e2 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000197209 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; jmp rbx
0x00000000001a5f34 : movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x000000000018bf20 : movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; cmc ; inc esp ; ret
0x00000000001a3c6d : movsb byte ptr [rdi], byte ptr [rsi] ; jmp qword ptr [rdx]
0x0000000000176c3d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x176c96 ; jmp 0x176bd7
0x000000000018eb68 : movsb byte ptr [rdi], byte ptr [rsi] ; mov cl, -6 ; call rsp
0x000000000018e674 : movsb byte ptr [rdi], byte ptr [rsi] ; mov edx, 0x29640002 ; cli ; call rsp
0x000000000019ae34 : movsb byte ptr [rdi], byte ptr [rsi] ; mov esp, 0x16b80000 ; out dx, al ; call qword ptr [rdi]
0x00000000001a8234 : movsb byte ptr [rdi], byte ptr [rsi] ; nop ; add dword ptr [rax], eax ; test al, 0xb ; cmc ; jmp qword ptr [rcx]
0x00000000000aed38 : movsb byte ptr [rdi], byte ptr [rsi] ; or eax, 0x8548fff8 ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000019e034 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; add byte ptr [rax], al ; call 0x1119da01
0x000000000018af14 : movsb byte ptr [rdi], byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; lock ; jmp rsp
0x000000000005948f : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000018a2b8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffee
0x00000000001ac334 : movsb byte ptr [rdi], byte ptr [rsi] ; rol dword ptr [rcx], 1 ; add byte ptr [rax - 0x1d], ch ; cmc ; jmp rbx
0x00000000001ac534 : movsb byte ptr [rdi], byte ptr [rsi] ; rol dword ptr [rcx], cl ; add al, bh ; in eax, -0xb ; call qword ptr [rax]
0x00000000001874b5 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rax
0x00000000001873f5 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; jmp qword ptr [rcx]
0x000000000018aa10 : movsb byte ptr [rdi], byte ptr [rsi] ; test al, -0x11 ; jmp rsp
0x000000000018937c : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, ebp ; add byte ptr [rax], al ; and al, 5 ; jmp 0x18938a
0x0000000000188910 : movsb byte ptr [rdi], byte ptr fs:[rsi] ; cld ; jmp rsp
0x000000000018e37d : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; push rsp ; ret
0x000000000018bb65 : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; in al, -0x5f ; jmp rsp
0x0000000000188989 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call rax
0x0000000000188909 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; jmp rsp
0x0000000000197279 : movsd dword ptr [rdi], dword ptr [rsi] ; in eax, dx ; call rcx
0x0000000000198fed : movsd dword ptr [rdi], dword ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000177275 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000001a18cc : movsd dword ptr [rdi], dword ptr [rsi] ; je 0x1a18c3 ; jmp qword ptr [rdx]
0x0000000000176b31 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000000c1b27 : movsd dword ptr [rdi], dword ptr [rsi] ; mov eax, 0x8948fffb ; ret
0x0000000000038a62 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000001874bd : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call rax
0x00000000001873f9 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp qword ptr [rcx]
0x00000000001873d9 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; push qword ptr [rdx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rax
0x000000000018e37c : movsd dword ptr [rdi], dword ptr fs:[rsi] ; add al, byte ptr [rax] ; push rsp ; ret
0x0000000000188908 : movsd dword ptr [rdi], dword ptr fs:[rsi] ; cld ; jmp rsp
0x00000000000360d2 : movsd qword ptr [rdi], xmm1 ; ret
0x000000000003609b : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000b1318 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000039de3 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000036419 : movss dword ptr [rdi], xmm1 ; ret
0x0000000000036400 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000039d9d : movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000102ad1 : movsx eax, ch ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009758c : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x97589 ; ret
0x0000000000097614 : movsx edx, byte ptr [rdi + rax] ; cmp edx, ecx ; je 0x97619 ; ret
0x0000000000097540 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x97541 ; ret
0x000000000008924a : movsx edx, dh ; mov eax, edx ; ret
0x0000000000089249 : movsx edx, sil ; mov eax, edx ; ret
0x00000000000cb608 : movsx esi, byte ptr [rax] ; call 0x878d5
0x00000000000c82c9 : movsxd r10, r10d ; sub r10, rdi ; sub r10, rax ; jmp 0xc82f4
0x000000000002e18c : movsxd r14, dword ptr [r10 + r14*4] ; add r14, r10 ; jmp r14
0x00000000000928ee : movsxd r8, dword ptr [rax + r8*4] ; add rax, r8 ; jmp rax
0x000000000002dcdc : movsxd r8, dword ptr [rdx + r8*4] ; add r8, rdx ; jmp r8
0x0000000000087bb1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014b6bb : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000014378b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000000973f0 : movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x0000000000097328 : movsxd rax, dword ptr [r10 + rax*4] ; add r10, rax ; jmp r10
0x000000000008442f : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000006d29a : movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0x000000000004dd43 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, r12 ; jmp rax
0x000000000005f5e0 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, r13 ; jmp rax
0x0000000000034d59 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x00000000000d503e : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000000b8e13 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000127d54 : movsxd rax, dword ptr [rdi + rax*4] ; add rdi, rax ; jmp rdi
0x0000000000030610 : movsxd rax, dword ptr [rdx + r12*4] ; add rdx, rax ; jmp rdx
0x00000000000229dc : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x0000000000054a05 : movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x00000000000a25f7 : movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x000000000003ca76 : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000013db36 : movsxd rax, ecx ; add rax, rdi ; ret
0x000000000013d9f6 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x000000000013dabd : movsxd rax, ecx ; ret
0x00000000000e3736 : movsxd rbx, dword ptr [r10 + rbx*4] ; add rbx, r10 ; jmp rbx
0x000000000009e09a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000160bbd : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000009d829 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000d4f8e : movsxd rcx, dword ptr [rax + r13*4] ; add rax, rcx ; jmp rax
0x000000000009267d : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000128bc6 : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000df872 : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000006dcc3 : movsxd rcx, dword ptr [rsi + rcx*4] ; add rsi, rcx ; jmp rsi
0x000000000002ff54 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000014385f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000e7c69 : movsxd rdx, dword ptr [rax + r10*4] ; add rax, rdx ; jmp rax
0x0000000000064d6c : movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x0000000000054b35 : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000840e5 : movsxd rdx, dword ptr [rax + rdi*4] ; add rax, rdx ; jmp rax
0x00000000000b5e98 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000c343b : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x000000000006ddd3 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000000b57fb : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000034af0 : movsxd rdx, dword ptr [rdi + rsi*4] ; add rdx, rdi ; jmp rdx
0x0000000000118b81 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x0000000000128366 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000a26cf : movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000a268f : movsxd rsi, dword ptr [rdx + rax*4] ; add rdx, rsi ; jmp rdx
0x00000000000f126a : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000003cfc9 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000b1319 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x0000000000039d9e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000039de4 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x00000000000360d3 : movups xmmword ptr [rdi], xmm1 ; ret
0x000000000003609c : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000036401 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x00000000001226e7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012ea0b : movzx eax, al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012229c : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b0bf0 : movzx eax, al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000c325e : movzx eax, al ; lea rax, qword ptr [rax + rax - 1] ; ret
0x00000000000369ec : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000102aa0 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005e0fc : movzx eax, al ; neg eax ; pop rbx ; ret
0x0000000000022b18 : movzx eax, al ; neg eax ; ret
0x0000000000126c93 : movzx eax, al ; pop r12 ; ret
0x000000000012353d : movzx eax, al ; pop rbp ; ret
0x00000000000489f2 : movzx eax, al ; pop rbx ; neg eax ; pop rbp ; ret
0x00000000000f583c : movzx eax, al ; pop rbx ; ret
0x0000000000037559 : movzx eax, al ; ret
0x000000000002fbb5 : movzx eax, ax ; ret
0x000000000007169d : movzx eax, bh ; ret
0x000000000007b2a4 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000126a2e : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000007c926 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007b145 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007bd58 : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000000741c2 : movzx eax, byte ptr [rax] ; ret
0x0000000000088f48 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000160bd0 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008caf0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000088f63 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000007b150 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c55a8 : movzx eax, byte ptr [rdx] ; jmp 0xc4d4b
0x000000000007b2a5 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a2617 : movzx eax, cl ; pop rbx ; ret
0x000000000007169c : movzx eax, dil ; ret
0x00000000000a263f : movzx eax, dl ; pop rbx ; ret
0x000000000002fd6e : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000e5080 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000a1d9a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa1d99 ; ret
0x00000000000a1e4a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa1e49 ; ret
0x0000000000161a74 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000088f60 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000160bd3 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000005648e : movzx edi, byte ptr [rax] ; add r12, 1 ; jmp 0x56461
0x00000000000fc7f2 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000003532f : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x35317 ; ret
0x0000000000098951 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000136609 : movzx edx, byte ptr [rsi + rcx] ; mov byte ptr [rax + rcx], dl ; ret
0x00000000001381af : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00000000000987e3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000164554 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x00000000001645b4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x00000000001645a4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000164594 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000164584 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000164574 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000164564 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000014da00 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000161827 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000016453b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000014e0e0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000008caf3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008cb19 : movzx edx, dl ; sub eax, edx ; ret
0x000000000014d980 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000014e070 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000010d1f3 : movzx esi, si ; or eax, esi ; bswap eax ; ret
0x000000000005648d : movzx r15d, byte ptr [rax] ; add r12, 1 ; jmp 0x56462
0x00000000000eda84 : movzx rax, al ; ret
0x000000000008b367 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000003e26d : mulps xmm0, xmm0 ; pop r15 ; ret
0x000000000004110c : mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003e26c : mulss xmm0, xmm0 ; pop r15 ; ret
0x00000000001a9b7c : neg ch ; hlt ; jmp qword ptr [rdx]
0x00000000000f2dbe : neg eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a296 : neg eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000012a875 : neg eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000cbf8b : neg eax ; mov dword ptr fs:[rax], r8d ; or eax, 0xffffffff ; ret
0x0000000000036eb7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000036be1 : neg eax ; mov dword ptr fs:[rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fb329 : neg eax ; mov dword ptr fs:[rsi], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000007afaa : neg eax ; pop r13 ; ret
0x00000000000a5993 : neg eax ; pop r15 ; ret
0x00000000000489f6 : neg eax ; pop rbp ; ret
0x0000000000102aa3 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005e0ff : neg eax ; pop rbx ; ret
0x0000000000022b1b : neg eax ; ret
0x0000000000086731 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000010940c : neg ecx ; cmp edx, -0x16 ; cmovne eax, ecx ; ret
0x000000000007ea51 : neg edi ; call qword ptr [rax]
0x00000000000ec876 : neg edx ; cmp dword ptr [rsp + 0x10], 2 ; cmove eax, edx ; jmp 0xec844
0x00000000000ec766 : neg edx ; cmp dword ptr [rsp - 0x68], 2 ; cmove eax, edx ; ret
0x00000000000f1660 : neg edx ; mov dword ptr fs:[rax], edx ; or eax, 0xffffffff ; ret
0x00000000000a5992 : neg rax ; pop r15 ; ret
0x000000000007ea50 : neg rdi ; call qword ptr [rax]
0x0000000000044fd8 : nop ; add byte ptr [rax], al ; add bl, ch ; ret 0x9066
0x000000000014d137 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000002c0dc : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a8140 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x000000000004563e : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x0000000000160edc : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000f285d : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000b3052 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000b7d1d : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000001a8205 : nop ; add dword ptr [rax], eax ; js 0x1a821b ; cmc ; jmp qword ptr [rcx]
0x00000000001a827d : nop ; add dword ptr [rax], eax ; lock or esi, ebp ; jmp qword ptr [rcx]
0x00000000001a824d : nop ; add dword ptr [rax], eax ; ror byte ptr [rbx], -0xb ; jmp qword ptr [rcx]
0x00000000001a81a5 : nop ; add dword ptr [rax], eax ; sbb byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8235 : nop ; add dword ptr [rax], eax ; test al, 0xb ; cmc ; jmp qword ptr [rcx]
0x00000000001a81bd : nop ; add dword ptr [rax], eax ; xor byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001b1e59 : nop ; add dword ptr [rbx], eax ; ret
0x000000000004dd46 : nop ; add rax, r12 ; jmp rax
0x000000000005f5e3 : nop ; add rax, r13 ; jmp rax
0x00000000000b5e9b : nop ; add rax, rdx ; jmp rax
0x00000000000af96f : nop ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000c37df : nop ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002362f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000073fef : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008c94f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000097aef : nop ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000097c7f : nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000188a15 : nop ; cld ; call qword ptr [rax + 0x10fffc91]
0x0000000000188a55 : nop ; cld ; call qword ptr [rax]
0x00000000001a7da0 : nop ; cld ; hlt ; jmp rax
0x00000000001791e5 : nop ; cld ; jmp qword ptr [rax]
0x0000000000193a80 : nop ; cmp bh, dl ; jmp qword ptr [rcx]
0x00000000001791b8 : nop ; cmp esp, -1 ; mov al, -0x7c ; cld ; call rax
0x0000000000187344 : nop ; jb 0x187345 ; jmp rax
0x00000000001882c8 : nop ; jg 0x1882ca ; call qword ptr [rax]
0x00000000001790cc : nop ; jge 0x1790c3 ; jmp rax
0x00000000001882d8 : nop ; jge 0x1882da ; call qword ptr [rax]
0x00000000001882d0 : nop ; jle 0x1882d2 ; call qword ptr [rax]
0x00000000001885a0 : nop ; lodsb al, byte ptr [rsi] ; cld ; jmp qword ptr [rax]
0x0000000000188a00 : nop ; mov ah, bh ; call qword ptr [rax]
0x0000000000188778 : nop ; mov al, -4 ; jmp qword ptr [rax]
0x0000000000188a44 : nop ; mov bh, ah ; call qword ptr [rax]
0x0000000000187380 : nop ; mov bl, bh ; call qword ptr [rax]
0x000000000014535f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000121a2f : nop ; mov dword ptr [rsi], 0xb ; ret
0x000000000014553f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000c307f : nop ; mov eax, 0xfffa ; ret
0x000000000007526f : nop ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007c08f : nop ; mov eax, 0xffffffff ; ret
0x00000000000a47cf : nop ; mov eax, 1 ; ret
0x000000000010852b : nop ; mov eax, dword ptr [r14 - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000a36ff : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xa3769 ; ret
0x00000000000a374f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xa3769 ; ret
0x00000000000bdeaf : nop ; mov eax, dword ptr [rdi] ; ret
0x000000000007415f : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000037b3f : nop ; mov eax, dword ptr [rip + 0x38755a] ; ret
0x000000000010d17f : nop ; mov eax, edi ; ror ax, 8 ; ret
0x0000000000187388 : nop ; mov edi, ebx ; call qword ptr [rax]
0x0000000000188a08 : nop ; mov edi, esp ; call qword ptr [rax]
0x00000000001458ff : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009ef9f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000001a3a40 : nop ; mov edx, esi ; call qword ptr [rdx]
0x0000000000188280 : nop ; mov esp, edi ; jmp qword ptr [rax]
0x000000000007926f : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000007d36f : nop ; mov rax, -1 ; ret
0x0000000000073b0f : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000739ff : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000012dcaf : nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000012dd9f : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000003c86f : nop ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000004967f : nop ; mov rax, rsi ; pop rbx ; ret
0x000000000007d10f : nop ; mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x000000000010827a : nop ; mov rdx, r14 ; call rax
0x00000000000e509f : nop ; mov word ptr [rdi], si ; xor al, al ; ret
0x000000000009da5f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000cb607 : nop ; movsx esi, byte ptr [rax] ; call 0x878d6
0x00000000000e507f : nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000188a54 : nop ; nop ; cld ; call qword ptr [rax]
0x0000000000187688 : nop ; out -5, al ; call qword ptr [rax + 0x20fffbe8]
0x00000000000365ef : nop ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00000000001040df : nop ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000016646f : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cc2df : nop ; pop rbx ; pop rbp ; ret
0x000000000008718f : nop ; pop rbx ; ret
0x00000000001ace3e : nop ; push 0xd1cfff5 ; add ch, byte ptr [rax - 0xb] ; jmp qword ptr [rdx]
0x0000000000021870 : nop ; push rax ; or byte ptr [rax], al ; add bl, ch ; or ecx, dword ptr [rax - 1] ; ret 0x9539
0x000000000010b7df : nop ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000178e44 : nop ; push rdx ; out dx, eax ; call qword ptr [rax + 0x10ffef52]
0x0000000000178eb0 : nop ; push rdx ; out dx, eax ; call qword ptr [rax - 0x2f0010ae]
0x0000000000178e48 : nop ; push rdx ; out dx, eax ; call qword ptr [rax]
0x0000000000178eb4 : nop ; push rdx ; out dx, eax ; call rax
0x0000000000178e74 : nop ; push rdx ; out dx, eax ; inc dword ptr [rax] ; push rdx ; out dx, eax ; call qword ptr [rax]
0x0000000000178ea0 : nop ; push rdx ; out dx, eax ; push qword ptr [rax] ; push rdx ; out dx, eax ; call qword ptr [rax]
0x0000000000021c0f : nop ; ret
0x0000000000019388 : nop ; ret 0x3b
0x0000000000002f66 : nop ; ret 0x5bdb
0x0000000000177ba4 : nop ; ret 0xffff
0x00000000001ab460 : nop ; sal ch, cl ; jmp qword ptr [rsi]
0x0000000000187770 : nop ; sar bl, -1 ; rol ah, 1 ; sti ; jmp qword ptr [rax]
0x0000000000187395 : nop ; sti ; call qword ptr [rax + 0x10fffb91]
0x0000000000187984 : nop ; sti ; jmp rax
0x00000000001874e4 : nop ; stosd dword ptr [rdi], eax ; std ; push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; std ; call rax
0x00000000001a8b10 : nop ; sub al, -0xb ; jmp qword ptr [rcx]
0x000000000012b7db : nop ; sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x000000000007d14f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000188a34 : nop ; test bh, ah ; call qword ptr [rax]
0x0000000000187378 : nop ; test edi, ebx ; call qword ptr [rax]
0x00000000001889f8 : nop ; test edi, esp ; call qword ptr [rax]
0x00000000001880a8 : nop ; test edi, esp ; jmp qword ptr [rax]
0x00000000000896ff : nop ; test rsi, rsi ; jne 0x89712 ; xor rax, rax ; ret
0x0000000000188a5c : nop ; xchg eax, ebx ; cld ; call qword ptr [rax]
0x0000000000188a18 : nop ; xchg eax, ecx ; cld ; call qword ptr [rax]
0x0000000000187398 : nop ; xchg eax, ecx ; sti ; call qword ptr [rax]
0x0000000000188a28 : nop ; xchg eax, edi ; cld ; call qword ptr [rax]
0x0000000000188a64 : nop ; xchg eax, esi ; cld ; call qword ptr [rax]
0x0000000000188a20 : nop ; xchg eax, esp ; cld ; call qword ptr [rax]
0x00000000001873a0 : nop ; xchg eax, esp ; sti ; call qword ptr [rax]
0x0000000000188a3c : nop ; xchg esp, edi ; call qword ptr [rax]
0x0000000000187aa8 : nop ; xor eax, 0x3790fffc ; cld ; jmp qword ptr [rax]
0x00000000000716cf : nop ; xor eax, eax ; ret
0x000000000008c9cf : nop ; xor rax, rax ; ret
0x000000000003687b : nop dword ptr [rax + rax] ; fstp st(1) ; ret
0x000000000011adc3 : nop dword ptr [rax + rax] ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x0000000000075f3b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x00000000000713ab : nop dword ptr [rax + rax] ; mov eax, edi ; ret
0x0000000000104b6b : nop dword ptr [rax + rax] ; mov eax, edi ; sub eax, esi ; ret
0x000000000009d99b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000bddab : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000046fc3 : nop dword ptr [rax + rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000035603 : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x00000000000921a3 : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000007b19b : nop dword ptr [rax + rax] ; or eax, 0x20 ; jmp 0x7b170
0x00000000000d320b : nop dword ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000046fbb : nop dword ptr [rax + rax] ; pop rbx ; ret
0x000000000012f64b : nop dword ptr [rax + rax] ; push rbx ; call 0x12b8f8
0x000000000002ee43 : nop dword ptr [rax + rax] ; ret
0x00000000000487db : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00000000000384c3 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000a376b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x000000000005e235 : nop dword ptr [rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000a3a3c : nop dword ptr [rax] ; add rax, 1 ; ret
0x00000000001661a5 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x000000000007414d : nop dword ptr [rax] ; and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000166b99 : nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000a431d : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a430d : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a4315 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000109415 : nop dword ptr [rax] ; mov dword ptr [r9], r8d ; xor eax, eax ; ret
0x00000000000c318d : nop dword ptr [rax] ; mov eax, 0x40 ; ret
0x00000000000c3075 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x00000000000716c5 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000104b75 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x000000000012cc3d : nop dword ptr [rax] ; mov eax, 2 ; ret
0x000000000002fdbd : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x000000000006ea0c : nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000009e66d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000927a4 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x00000000000a4475 : nop dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000003560c : nop dword ptr [rax] ; mov rax, rcx ; pop rbx ; ret
0x0000000000109a5c : nop dword ptr [rax] ; mov rax, rdi ; pop rbx ; ret
0x000000000007bd55 : nop dword ptr [rax] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000003c805 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f3b5d : nop dword ptr [rax] ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000003491c : nop dword ptr [rax] ; pop rbx ; ret
0x000000000002dbd1 : nop dword ptr [rax] ; ret
0x00000000000a3c0c : nop dword ptr [rax] ; sub eax, r8d ; ret
0x000000000006f025 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000009e627 : nop dword ptr cs:[rax + rax] ; ret
0x000000000003687a : nop word ptr [rax + rax] ; fstp st(1) ; ret
0x0000000000075f3a : nop word ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x00000000000713aa : nop word ptr [rax + rax] ; mov eax, edi ; ret
0x00000000000a5592 : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000009ec0a : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x0000000000046fba : nop word ptr [rax + rax] ; pop rbx ; ret
0x000000000002ee42 : nop word ptr [rax + rax] ; ret
0x00000000000d2912 : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000003c062 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000a376a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000b4ee5 : not eax ; add eax, 0x16e ; ret
0x000000000012f571 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000035f90 : not eax ; and eax, ecx ; ret
0x000000000003663f : not eax ; and eax, edx ; ret
0x0000000000037593 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000d281e : not eax ; pop rbx ; and eax, 2 ; pop rbp ; ret
0x0000000000037592 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000001ab598 : or ah, al ; clc ; jmp qword ptr [rsi]
0x000000000018781d : or ah, bh ; call rax
0x000000000019aa14 : or ah, ch ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000189899 : or ah, ch ; jmp rsp
0x0000000000139127 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013cd39 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000139155 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000f1d8a : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f8f32 : or al, 0 ; add byte ptr [rax], al ; ret
0x0000000000081cf2 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000081eb2 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000000044f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x00000000000b5e96 : or al, 0 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000005ed6 : or al, 0 ; push rax ; ret 0x10
0x0000000000005036 : or al, 0 ; push rax ; ret 0xf
0x0000000000006f3e : or al, 0 ; ret
0x000000000004bdad : or al, 0x13 ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x0000000000061b95 : or al, 0x13 ; add rdx, r14 ; call qword ptr [r11 + rax*8]
0x0000000000093762 : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jg 0x93759 ; ret
0x0000000000088f46 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000011e785 : or al, 0x24 ; call r12
0x00000000000fb13a : or al, 0x30 ; ror byte ptr [rcx], -8 ; ret
0x000000000007e4ec : or al, 0x34 ; add byte ptr [rax + 0x39], cl ; ret 0xb76
0x00000000001a2f9c : or al, 0x3e ; add dword ptr [rax], eax ; sti ; int1 ; jmp qword ptr [rcx]
0x0000000000108e88 : or al, 0x41 ; pop rsp ; ret
0x000000000003ca7a : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000c1727 : or al, 0x48 ; add esp, 0x28 ; ret
0x0000000000136e59 : or al, 0x48 ; add esp, 0x48 ; ret
0x00000000000365a3 : or al, 0x48 ; add esp, 8 ; ret
0x00000000001183a7 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000006ef7b : or al, 0x48 ; mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x00000000000b105a : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001a549c : or al, 0x63 ; add dword ptr [rax], eax ; lock sti ; call qword ptr [rsi]
0x00000000001ad7cc : or al, 0x71 ; cmc ; jmp qword ptr [rdx]
0x000000000008c548 : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x00000000001a6b9c : or al, 0x7a ; add dword ptr [rax], eax ; mov al, -0x4e ; hlt ; call qword ptr [rsi]
0x000000000006d5ca : or al, 0x7e ; ret
0x0000000000143791 : or al, 0xb ; jmp r9
0x000000000009d82f : or al, 0xb ; jmp rcx
0x00000000000a3655 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x000000000009e323 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00000000000603ef : or al, 0xffffff89 ; ret 0xeac0
0x000000000014dc02 : or al, 0xfffffff3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000001acfbc : or al, 0xffffffffffffff80 ; add dword ptr [rax], eax ; add dh, dh ; cmc ; call qword ptr [rcx]
0x00000000000004b3 : or al, 0xffffffffffffff80 ; push rbx ; add al, 4 ; ret 0x6080
0x000000000009e09c : or al, 0xffffffffffffff83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a2425 : or al, 0xffffffffffffff83 ; rol byte ptr [rcx], -0x7d ; ret 0x4101
0x0000000000050211 : or al, 0xffffffffffffff85 ; sal byte ptr [rbp + 5], -0xa ; ret 0x7450
0x00000000000973f2 : or al, 0xffffffffffffff88 ; add rax, r9 ; jmp rax
0x000000000009267f : or al, 0xffffffffffffff88 ; add rax, rcx ; jmp rax
0x00000000000603f0 : or al, 0xffffffffffffff89 ; ret 0xeac0
0x00000000000df874 : or al, 0xffffffffffffff8a ; add rdx, rcx ; jmp rdx
0x0000000000087bb3 : or al, 0xffffffffffffff8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000008fa54 : or al, 0xffffffffffffff8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014b6bd : or al, 0xffffffffffffff8b ; add r9, r11 ; jmp r9
0x000000000014378d : or al, 0xffffffffffffff8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000001a7d9c : or al, 0xffffffffffffff8c ; add dword ptr [rax], eax ; nop ; cld ; hlt ; jmp rax
0x000000000006dcc5 : or al, 0xffffffffffffff8e ; add rsi, rcx ; jmp rsi
0x0000000000160bbf : or al, 0xffffffffffffff93 ; add rcx, r11 ; jmp rcx
0x000000000009d82b : or al, 0xffffffffffffff93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000001a919c : or al, 0xffffffffffffffa0 ; add dword ptr [rax], eax ; adc byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000d4f90 : or al, 0xffffffffffffffa8 ; add rax, rcx ; jmp rax
0x0000000000002baa : or al, 0xffffffffffffffaf ; xbegin 0xfffffffff8c6efae ; ret
0x0000000000128bc8 : or al, 0xffffffffffffffb0 ; add rax, rcx ; jmp rax
0x000000000012fbf7 : or al, 0xffffffffffffffb0 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000fea26 : or al, 0xffffffffffffffb1 ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000128bde : or al, 0xffffffffffffffb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000189a8c : or al, 0xffffffffffffffc3 ; add byte ptr [rax], al ; push rsi ; in eax, dx ; jmp qword ptr [rbx + rax*8]
0x000000000019baac : or al, 0xffffffffffffffc5 ; add byte ptr [rax], al ; ret
0x00000000001ab69c : or al, 0xffffffffffffffc5 ; add dword ptr [rax], eax ; mov al, -0x2d ; cmc ; jmp qword ptr [rsi]
0x00000000001aba9c : or al, 0xffffffffffffffc9 ; add dword ptr [rax], eax ; lock cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rsi]
0x000000000017b4ac : or al, 0xffffffffffffffd1 ; idiv bh ; or al, 0xffffffffffffffd1 ; idiv bh ; ret
0x000000000017b4b0 : or al, 0xffffffffffffffd1 ; idiv bh ; ret
0x0000000000190f7d : or al, 0xffffffffffffffea ; jmp qword ptr [rdx]
0x00000000001893a1 : or al, 0xffffffffffffffeb ; call rsp
0x000000000014dc03 : or al, 0xfffffffffffffff3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000017a23d : or al, 0xfffffffffffffff4 ; call rbx
0x000000000017a1bd : or al, 0xfffffffffffffff4 ; jmp rbx
0x000000000006d8c6 : or al, 0xfffffffffffffff6 ; ret 0x7404
0x000000000006e003 : or al, 0xfffffffffffffff6 ; ret 0xf04
0x000000000002d3f2 : or al, 0xfffffffffffffff8 ; test rcx, rcx ; je 0x2d402 ; call rcx
0x0000000000187805 : or al, 0xfffffffffffffffc ; jmp rax
0x00000000000e5902 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000000884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000e59f2 : or al, 1 ; add byte ptr [rax], al ; xor al, al ; ret
0x000000000018ce85 : or al, 2 ; add byte ptr [rbp - 9], ah ; call rsp
0x000000000009e560 : or al, 5 ; add byte ptr [rax], al ; ret
0x0000000000195601 : or al, 7 ; or byte ptr [rbx + rcx + 2], al ; ret
0x000000000009758e : or al, 7 ; test cl, cl ; jne 0x97587 ; ret
0x00000000001382fd : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013af11 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000138321 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000b442 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001354dc : or al, byte ptr [rax] ; add byte ptr [rax], al ; call 0xc1756
0x000000000012a9d6 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x0000000000121a42 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000ea7a5 : or al, byte ptr [rax] ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00000000000f683a : or al, byte ptr [rax] ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], -0x11 ; call rbx
0x00000000000b7fe2 : or al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov bh, 5 ; ret 0xc1b
0x00000000000cf436 : or al, byte ptr [rax] ; jmp 0xcf351
0x0000000000034526 : or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x00000000000a40e2 : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00000000000dd5a4 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x4101
0x00000000000dd8bc : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8001
0x00000000000c7b29 : or al, byte ptr [rcx - 0x7d] ; jmp qword ptr [rcx]
0x00000000000c93f8 : or al, byte ptr [rcx - 0x80] ; jmp qword ptr [rcx]
0x00000000000004b1 : or al, byte ptr [rcx] ; or al, 0xffffffffffffff80 ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000b7fe1 : or al, byte ptr ds:[rax] ; add byte ptr [rdi], cl ; mov bh, 5 ; ret 0xc1b
0x00000000001402e7 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000085b13 : or al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 6
0x00000000000fc8bf : or al, ch ; jmp 0xfc889
0x000000000008c3eb : or al, ch ; lahf ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000e4cff : or al, ch ; mov ebx, 0x39fffde9 ; ret
0x000000000019b584 : or al, dh ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ac7b8 : or bh, ah ; cmc ; call qword ptr [rax]
0x0000000000187801 : or bh, ah ; jmp rax
0x0000000000073e4d : or bh, byte ptr [rax - 1] ; ret
0x00000000000d281d : or bh, dh ; rcr byte ptr [rbx - 0x7d] ; loopne 0xd282e ; pop rbp ; ret
0x00000000000f490f : or bh, dh ; ret 0xfc07
0x00000000000a431b : or bl, al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000118c02 : or bl, al ; nop dword ptr [rax] ; ret
0x0000000000118dd3 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001ad358 : or bl, bh ; cmc ; call qword ptr [rax]
0x00000000000d2c5f : or bl, byte ptr [rbp + 0x75] ; mov ch, -0x7d ; ret 0x8901
0x00000000000022cc : or bl, byte ptr [rbx + 0x38] ; ja 0xffffffffd6104b5e ; ret
0x00000000000bd335 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007bffd : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000005e262 : or bl, ch ; add al, -1 ; or dh, byte ptr [rbp + 2] ; ret
0x000000000011d4bc : or bl, ch ; ret 0x4890
0x000000000004e6f5 : or bl, ch ; ret 0x8348
0x0000000000067c14 : or bl, ch ; xchg byte ptr [rax - 0x7d], cl ; ret 0xe908
0x000000000014ddc3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000002f7ef : or bl, dh ; ret
0x00000000001ab4d8 : or bl, dl ; cmc ; jmp qword ptr [rsi]
0x00000000000d1718 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00000000000d531b : or byte ptr [r10], r12b ; jmp 0xd4faf
0x00000000000d1691 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000c6dfb : or byte ptr [r11 + 0x5d], bl ; ret
0x00000000000355a8 : or byte ptr [r11 + r9*4 + 0x57], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000d5391 : or byte ptr [r11], r12b ; jmp 0xd4faf
0x0000000000084964 : or byte ptr [r13 - 0x77], r9b ; ret
0x000000000009a7bf : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d1687 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000d174e : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x0000000000131fac : or byte ptr [r15], 0x94 ; ret 0xea83
0x00000000000b164d : or byte ptr [r8 + 0x29], cl ; ret
0x00000000000d1761 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000cb15d : or byte ptr [r8 - 0x73], 0x35 ; ret 0xb98
0x000000000009a79e : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x0000000000159418 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000001227d2 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000012bfca : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000012e7fa : or byte ptr [r8 - 0x77], r9b ; out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x00000000000cca05 : or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x000000000003c092 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000008222f : or byte ptr [r8 - 0x7d], cl ; sub r9, qword ptr [rax] ; add ebx, ebp ; ret
0x00000000001404c2 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d5301 : or byte ptr [r8], r12b ; jmp 0xd4faf
0x00000000000e4031 : or byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rax + 0x63], cl ; ret
0x000000000009a7fe : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x0000000000131403 : or byte ptr [r9], dil ; ret 0x850f
0x00000000000d16f1 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000d5377 : or byte ptr [r9], r12b ; jmp 0xd4faf
0x00000000000d16b1 : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x00000000001200a3 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x000000000007ea4c : or byte ptr [rax + 0x21], cl ; xlatb ; neg rdi ; call qword ptr [rax]
0x00000000000b164e : or byte ptr [rax + 0x29], cl ; ret
0x000000000007d757 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x00000000000304a2 : or byte ptr [rax + 0x39], cl ; fbstp dword ptr [rbp + rax - 0x18] ; ret
0x000000000008b9f9 : or byte ptr [rax + 0x39], cl ; ret
0x0000000000083cbb : or byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000000dad43 : or byte ptr [rax + 0x63], cl ; ret 0xc148
0x0000000000035b10 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x0000000000035feb : or byte ptr [rax + 1], 0xd0 ; shr rax, 0x3f ; ret
0x000000000010287c : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000001247e6 : or byte ptr [rax + 1], bh ; ret
0x00000000000327b3 : or byte ptr [rax + 1], cl ; ret
0x00000000000f9045 : or byte ptr [rax + 3], bh ; pop rbx ; pop rbp ; ret
0x0000000000026420 : or byte ptr [rax + 7], bh ; jmp 0x263f1
0x0000000000106c8b : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x00000000000d1762 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000019f468 : or byte ptr [rax - 0x10], cl ; jmp rsi
0x00000000000b0ead : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000cb15e : or byte ptr [rax - 0x73], 0x35 ; ret 0xb98
0x00000000000c6ef8 : or byte ptr [rax - 0x73], cl ; add bl, byte ptr [r11 + 0x5d] ; ret
0x000000000008c9f9 : or byte ptr [rax - 0x73], cl ; add eax, 0x1f ; ret
0x00000000000921d0 : or byte ptr [rax - 0x73], cl ; add eax, 0x6878 ; ret
0x00000000000a435d : or byte ptr [rax - 0x73], cl ; add eax, 0xbde7b ; ret
0x00000000000a4349 : or byte ptr [rax - 0x73], cl ; add eax, 0xc84f ; ret
0x000000000008ca0d : or byte ptr [rax - 0x73], cl ; add eax, 0xd418b ; ret
0x00000000000a3799 : or byte ptr [rax - 0x73], cl ; add eax, 0xd48f ; ret
0x00000000000c6df8 : or byte ptr [rax - 0x73], cl ; or byte ptr [r11 + 0x5d], bl ; ret
0x0000000000038f11 : or byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 1] ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000fe0c1 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000fe122 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x00000000000f60c8 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000f5fa1 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x0000000000027d95 : or byte ptr [rax - 0x75], cl ; je 0x27dc4 ; push rax ; call rax
0x000000000006efd9 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x0000000000128b72 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000009a79f : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x000000000012f440 : or byte ptr [rax - 0x77], 0xd0 ; pop rbx ; ret
0x0000000000107f02 : or byte ptr [rax - 0x77], 0xda ; call rax
0x000000000009a6b0 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000010b718 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x0000000000033efd : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000012bfcb : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x0000000000135f38 : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov esi, ebp ; pop rbp ; jmp rax
0x000000000012db2e : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000ab918 : or byte ptr [rax - 0x77], cl ; fucompi st(0) ; call rdx
0x00000000000d2b1b : or byte ptr [rax - 0x77], cl ; jo 0xd2b47 ; xor eax, eax ; ret
0x000000000003c2f8 : or byte ptr [rax - 0x77], cl ; lock pop rbx ; pop rbp ; ret
0x0000000000159419 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012e7fb : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x00000000001227d3 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000003a1e1 : or byte ptr [rax - 0x77], cl ; out dx, al ; call r12
0x000000000007ec6d : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d] ; ret
0x000000000003c678 : or byte ptr [rax - 0x77], cl ; ret
0x00000000000cca06 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000003c093 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d898c : or byte ptr [rax - 0x77], cl ; ret 0xe283
0x00000000000d2b1a : or byte ptr [rax - 0x77], r9b ; jo 0xd2b48 ; xor eax, eax ; ret
0x0000000000087687 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000876f9 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x00000000000e608c : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc297a89c
0x0000000000081f1b : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000002f5ae : or byte ptr [rax - 0x7d], cl ; ret
0x00000000000d21b4 : or byte ptr [rax - 0x7d], cl ; ret 0x3901
0x0000000000092836 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000928be : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000032522 : or byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x00000000000ef75e : or byte ptr [rax - 0x7d], cl ; ret 0x8308
0x00000000000536f3 : or byte ptr [rax - 0x7d], cl ; ret 0x8404
0x00000000000537c2 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x0000000000082230 : or byte ptr [rax - 0x7d], cl ; sub r9, qword ptr [rax] ; add ebx, ebp ; ret
0x0000000000021829 : or byte ptr [rax - 0x7f], cl ; ret
0x00000000000777b3 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000013855c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000136c99 : or byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x00000000000d5302 : or byte ptr [rax], ah ; jmp 0xd4fae
0x0000000000021872 : or byte ptr [rax], al ; add bl, ch ; or ecx, dword ptr [rax - 1] ; ret 0x9539
0x000000000007df4f : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000e8890 : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc641
0x0000000000058871 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013855d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013b0b1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000138581 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000b201a : or byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x000000000007c74c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000195a0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmc ; call qword ptr [rdi]
0x0000000000019540 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; call qword ptr [rdi]
0x000000000000b8e0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1a
0x0000000000019558 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; salc ; call qword ptr [rdi]
0x0000000000019528 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; call qword ptr [rdi]
0x00000000000194f8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esp ; call qword ptr [rdi]
0x000000000012a902 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000000a2703 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000121a72 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000114880 : or byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret
0x00000000000f8b7d : or byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000000497e0 : or byte ptr [rax], al ; ret
0x00000000000a18cd : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a190b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a18ab : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000005d9eb : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000013eabe : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000c81bf : or byte ptr [rbp + 0x31], al ; in al, -0x15 ; ret
0x0000000000118a9d : or byte ptr [rbp + 0x5d5b2b04], cl ; ret
0x000000000019f8a8 : or byte ptr [rbp - 0x10], bl ; jmp qword ptr [rdx]
0x000000000012e13d : or byte ptr [rbp - 0x14438a40], al ; ret 0x1f0f
0x00000000000b0c26 : or byte ptr [rbp - 0x3c], dh ; ret
0x00000000000a4229 : or byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x0000000000028867 : or byte ptr [rbp - 0x77], al ; ret 0x8948
0x0000000000084965 : or byte ptr [rbp - 0x77], cl ; ret
0x0000000000109079 : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x3f], -0x37 ; ret
0x00000000001085ac : or byte ptr [rbp - 0xf], dh ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000012183b : or byte ptr [rbx + 0x48], bl ; mov edi, ebp ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000003c87 : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x00000000001228db : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x0000000000075002 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000007afa5 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; neg eax ; pop r13 ; ret
0x000000000003ce84 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000743c7 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000023633 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000035b0d : or byte ptr [rbx + 0xf480857], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000012353b : or byte ptr [rbx + 0xf], bl ; mov dh, -0x40 ; pop rbp ; ret
0x00000000001913d3 : or byte ptr [rbx + rcx + 0x52], al ; ret
0x0000000000195603 : or byte ptr [rbx + rcx + 2], al ; ret
0x00000000000355a9 : or byte ptr [rbx + rcx*4 + 0x57], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000195738 : or byte ptr [rbx - 0x13], bh ; jmp rcx
0x00000000000cc69f : or byte ptr [rbx - 0x76b3fe20], al ; out -0x77, al ; ret 0xca83
0x00000000000d5392 : or byte ptr [rbx], ah ; jmp 0xd4fae
0x0000000000131faa : or byte ptr [rbx], bh ; or byte ptr [r15], 0x94 ; ret 0xea83
0x0000000000131fa9 : or byte ptr [rbx], dil ; or byte ptr [r15], 0x94 ; ret 0xea83
0x0000000000039c0b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000005360a : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000001f663 : or byte ptr [rcx + 0x415d5bd8], 0x5c ; ret
0x000000000011dc55 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000000e3735 : or byte ptr [rcx + 0x63], cl ; sbb al, -0x66 ; add rbx, r10 ; jmp rbx
0x000000000003847b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000390c0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000131f23 : or byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x0000000000038482 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00000000000e4032 : or byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rax + 0x63], cl ; ret
0x000000000009a7ff : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000000d3147 : or byte ptr [rcx - 0x76b7ffa3], cl ; ret
0x0000000000121f47 : or byte ptr [rcx - 0x77], al ; call 0x4cd4a8a1
0x000000000004e6f1 : or byte ptr [rcx - 0x77], cl ; push rdi ; or bl, ch ; ret 0x8348
0x000000000004cd56 : or byte ptr [rcx - 0x77], cl ; push rdi ; or cl, ch ; jmp rcx
0x0000000000034a07 : or byte ptr [rcx - 0x77], cl ; ret 0x1074
0x0000000000050cdc : or byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x38e8
0x00000000000f202f : or byte ptr [rcx - 0x77], cl ; ror byte ptr [rcx + 0x29], cl ; fimul dword ptr [rcx + 0x39] ; ret 0x820f
0x00000000000d5378 : or byte ptr [rcx], ah ; jmp 0xd4fae
0x0000000000136c9a : or byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x00000000000e5912 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000003713f : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000e5a04 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001189c4 : or byte ptr [rcx], al ; jmp 0x118a15
0x0000000000082235 : or byte ptr [rcx], al ; jmp 0x821ff
0x00000000000d1737 : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000d16b2 : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00000000000b0c23 : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x3c], dh ; ret
0x00000000000e1b81 : or byte ptr [rcx], bh ; ret 0x1472
0x0000000000131404 : or byte ptr [rcx], bh ; ret 0x850f
0x00000000000d16f2 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x000000000010d1e1 : or byte ptr [rcx], cl ; lock bswap eax ; ret
0x000000000010b850 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00000000000245bc : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000e3e40 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000048ea2 : or byte ptr [rcx], dh ; ror byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc031
0x00000000001774fe : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000df3b8 : or byte ptr [rdi + rax + 0x44], dh ; mov dword ptr [rax], esp ; xor eax, eax ; jmp 0xdf38d
0x000000000005b91e : or byte ptr [rdi + rcx - 0x4a], al ; cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000055126 : or byte ptr [rdi + rcx - 0x4a], al ; cmp byte ptr [rcx - 0x7d], cl ; ret
0x000000000010c852 : or byte ptr [rdi], 0x1f ; add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000029544 : or byte ptr [rdi], 0x94 ; ret 0xb60f
0x0000000000131fad : or byte ptr [rdi], 0x94 ; ret 0xea83
0x00000000000fad9a : or byte ptr [rdi], 0x95 ; ret 0xcfeb
0x00000000001878ec : or byte ptr [rdi], 0xfc ; call qword ptr [rax]
0x000000000010c164 : or byte ptr [rdi], ch ; cmc ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x000000000002fbb4 : or byte ptr [rdi], cl ; mov bh, -0x40 ; ret
0x0000000000022b17 : or byte ptr [rdi], cl ; mov dh, -0x40 ; neg eax ; ret
0x00000000000489f1 : or byte ptr [rdi], cl ; mov dh, -0x40 ; pop rbx ; neg eax ; pop rbp ; ret
0x0000000000046558 : or byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x000000000007beaf : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00000000000741c1 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000c46fc : or byte ptr [rdi], cl ; mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x0000000000143d5b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000008bccc : or byte ptr [rdi], cl ; test byte ptr [rcx + rax - 0x7cb80000], dl ; ret 0xe901
0x0000000000021eff : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc031
0x00000000001afdd3 : or byte ptr [rdx + 0xe], al ; adc byte ptr [rbx + 0xa550202], al ; ret
0x0000000000198420 : or byte ptr [rdx - 0x18], bh ; call rdx
0x00000000000d531c : or byte ptr [rdx], ah ; jmp 0xd4fae
0x000000000010cf3b : or byte ptr [rdx], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000d1692 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000d1719 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x00000000000f1252 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000f1251 : or byte ptr [rip + 0x100f], r12b ; ret
0x000000000002a106 : or byte ptr [rip + 0x29480000], al ; ret 0x8b49
0x00000000001878e8 : or byte ptr [rip + 0xf80fffc], 0xfc ; call qword ptr [rax]
0x00000000000f1548 : or byte ptr [rip - 0x80000000], 0x39 ; ret 0x9e75
0x00000000000d1785 : or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x000000000009d3b1 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000012099c : or byte ptr [rsi + 1], bh ; mov rdi, r15 ; call qword ptr [rax]
0x000000000009a7c0 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d174f : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000d1688 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x0000000000003c86 : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000000d55fa : or byte ptr gs:[rax - 0x77], cl ; ret
0x00000000000948d1 : or ch, bl ; ret 0x1f0f
0x000000000010fee4 : or ch, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000019ba95 : or ch, dh ; jmp qword ptr [rdx]
0x00000000000367eb : or cl, bl ; std ; fstp st(1) ; ret
0x00000000000b0cee : or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x0000000000076848 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000000e46b6 : or cl, byte ptr [rax - 0x77] ; ret 0x11e8
0x0000000000041bdc : or cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x000000000012acba : or cl, byte ptr [rax - 0x7d] ; ret 0x4104
0x00000000000b3b4a : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000c4d79 : or cl, byte ptr [rax - 0x7d] ; ret 0x8001
0x000000000005eb24 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000074fc7 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x000000000010d215 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x00000000001a27a6 : or cl, byte ptr [rcx + 0xd1cfff1] ; xlatb ; xchg ecx, esi ; jmp qword ptr [rdx]
0x0000000000137198 : or cl, byte ptr [rcx + rcx*4 - 0x1e] ; add r9, r11 ; call rax
0x000000000010d195 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x0000000000195600 : or cl, byte ptr [rdi + rax] ; or byte ptr [rbx + rcx + 2], al ; ret
0x00000000000365c7 : or cl, byte ptr [rdi] ; push rdi ; fisttp dword ptr [rdi] ; ret
0x000000000015b346 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x00000000001311d1 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000004cd5a : or cl, ch ; jmp rcx
0x00000000000cde94 : or cl, ch ; ret 0xfff8
0x000000000003aae0 : or cl, ch ; ret 0xfffa
0x0000000000002bc7 : or cl, cl ; clc ; ret
0x000000000008b5f5 : or cl, cl ; cmove rax, rdx ; ret
0x00000000001a0861 : or cl, dh ; jmp rcx
0x00000000000497dd : or dh, al ; or byte ptr [rax], al ; ret
0x00000000001b2bb1 : or dh, bh ; call qword ptr [rsi]
0x000000000014dce3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000fea2a : or dh, bl ; ret
0x0000000000071cfc : or dh, byte ptr [rbp + 0x3f] ; ret
0x0000000000071df6 : or dh, byte ptr [rbp + 0x43] ; mov eax, esi ; ret
0x0000000000072bc1 : or dh, byte ptr [rbp + 0x60] ; pop rbx ; ret
0x0000000000071051 : or dh, byte ptr [rbp + 0x63] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a3e0 : or dh, byte ptr [rbp + 0x69] ; pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x000000000005e266 : or dh, byte ptr [rbp + 2] ; ret
0x00000000000a2916 : or dh, byte ptr [rbp - 0x11] ; ret
0x0000000000093ac4 : or dh, byte ptr [rcx] ; dec dword ptr [rax - 0x77] ; ret 0xf0e9
0x0000000000136db5 : or dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], -0x3c ; pop rax ; ret
0x00000000000d27ca : or dh, byte ptr [rdi + rax*2 + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001a8119 : or dh, ch ; call rsp
0x0000000000080a7b : or dh, dh ; ret 0x7404
0x0000000000081e29 : or dh, dh ; ret 0x7502
0x0000000000105567 : or dh, dh ; ret 0x7508
0x00000000000825ba : or dh, dh ; ret 0xf01
0x0000000000080a97 : or dh, dh ; ret 0xf04
0x0000000000030f4f : or dh, dh ; ret 0xfdf
0x00000000001877c4 : or dl, 0xfb ; call rax
0x0000000000034d5c : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x0000000000112484 : or dword ptr [rax - 0x73], ecx ; cmp eax, 0x2b1a94 ; call rax
0x0000000000124743 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x0000000000104074 : or dword ptr [rax - 0x75], ecx ; adc byte ptr [rax + 0x39], cl ; ret
0x000000000005dbca : or dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000011d130 : or dword ptr [rax - 0x7d], ecx ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011fc6f : or dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x00000000000c8550 : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000008788e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000021c00 : or dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000448e4 : or dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x0000000000195995 : or dword ptr [rax], eax ; add byte ptr [rax - 0x76], bh ; in eax, dx ; call qword ptr [rax]
0x00000000000eb0e4 : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8845
0x000000000013848d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013e96f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001383e7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000071f82 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000022b28 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x000000000012a32c : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000000e4e4f : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000899a3 : or dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000008105a : or dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000009c905 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000eb6c6 : or dword ptr [rax], eax ; mov esi, r12d ; call 0x878d7
0x00000000000e0790 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000e7c67 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + r10*4] ; add rax, rdx ; jmp rax
0x00000000000dd497 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000161ff6 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000101f66 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000122226 : or dword ptr [rbx + 0x5d], ebx ; xor eax, eax ; pop r12 ; ret
0x0000000000082232 : or dword ptr [rbx + rbp + 8], 1 ; jmp 0x82202
0x0000000000085346 : or dword ptr [rbx - 0xd], ebx ; ret
0x000000000006efb6 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000798a0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007dbf8 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x0000000000084bb4 : or dword ptr [rcx - 0x7d], ecx ; ret
0x00000000000d4c38 : or dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x00000000000849ce : or dword ptr [rcx - 0x7d], ecx ; sti ; adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000001664e9 : or dword ptr [rdi + 0x1f0fffeb], 0 ; ret
0x00000000000d2ab0 : or dword ptr [rdi + 0x90], eax ; xor eax, eax ; ret
0x0000000000037573 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x00000000000f1307 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x0000000000037736 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000125b61 : or dword ptr [rdi], ecx ; mov cl, 0x35 ; ret
0x000000000015b326 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000faa82 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000fa4ea : or dword ptr [rdi], ecx ; xchg edi, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ad980 : or dword ptr [rdi], ecx ; xchg esi, esi ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000003600b : or eax, 0x1508e0 ; orpd xmm0, xmm1 ; ret
0x0000000000120e9a : or eax, 0x18c48348 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000009f261 : or eax, 0x1c478d48 ; ret
0x00000000000a00b1 : or eax, 0x1d478d48 ; ret
0x000000000015b3a8 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000007b1a0 : or eax, 0x20 ; jmp 0x7b16b
0x0000000000166b37 : or eax, 0x25afe4 ; jne 0x166b64 ; ret
0x00000000000f17d1 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x00000000000ad738 : or eax, 0x358d4800 ; ret 0xd00
0x00000000000aac38 : or eax, 0x358d4800 ; ret 0xd2b
0x0000000000022489 : or eax, 0x3a2772 ; pop rbx ; ret
0x0000000000022192 : or eax, 0x3a2a69 ; pop rbx ; ret
0x00000000000aa98c : or eax, 0x3d8d4800 ; ret
0x00000000000ad0dc : or eax, 0x3d8d4800 ; ret 0xd06
0x00000000000b3753 : or eax, 0x440f4800 ; ret 0x8d48
0x0000000000117cf1 : or eax, 0x4735b10f ; ret
0x0000000000094582 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000000b559a : or eax, 0x48d08948 ; add esp, 8 ; ret
0x00000000000fa41f : or eax, 0x48fff5a0 ; mov eax, ebx ; pop rbx ; ret
0x00000000000f5e5f : or eax, 0x49fff296 ; mov edi, dword ptr [rbp] ; call rbx
0x000000000005dad2 : or eax, 0x5bd88948 ; ret
0x000000000017a054 : or eax, 0x65fff3f8 ; add esp, esi ; jmp qword ptr [rcx]
0x000000000009e345 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x0000000000139037 : or eax, 0x83480000 ; ret 0x4910
0x000000000013abd1 : or eax, 0x83480000 ; ret 0xe910
0x0000000000139065 : or eax, 0x83480000 ; ret 0xeb10
0x000000000016690d : or eax, 0x83489066 ; ret 0x4810
0x00000000000aed39 : or eax, 0x8548fff8 ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000009f9f9 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x0000000000041bb6 : or eax, 0x894c0000 ; ret
0x0000000000078bbf : or eax, 0x89ffffc4 ; ret 0xbceb
0x000000000008b672 : or eax, 0x8c48348 ; ret
0x0000000000117d9d : or eax, 0x9b35b10f ; ret 0x2a
0x0000000000083486 : or eax, 0xd235b10f ; ret 0x33
0x00000000000c46a4 : or eax, 0xe8e7894c ; ret
0x0000000000176b33 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000187909 : or eax, 0xf40fffc ; cld ; call rax
0x000000000014db93 : or eax, 0xf7f0ff3 ; ret
0x00000000000d5395 : or eax, 0xf7fffffc ; ret 0
0x00000000001878e9 : or eax, 0xf80fffc ; cld ; call qword ptr [rax]
0x000000000018a4a5 : or eax, 0xfbd40001 ; out dx, al ; jmp rsp
0x000000000019231d : or eax, 0xffea6f41 ; sbb al, 0xd ; ret 0xea6c
0x000000000019298d : or eax, 0xffea89b4 ; sbb al, 0xd ; ret 0xea87
0x0000000000193f75 : or eax, 0xffeb3bb5 ; sbb al, 0xd ; ret
0x0000000000195145 : or eax, 0xffec77b4 ; sbb al, 0xd ; ret
0x0000000000196625 : or eax, 0xffed7518 ; sbb al, 0xd ; ret
0x0000000000197cc5 : or eax, 0xffed827a ; sbb al, 0xd ; ret 0xed81
0x000000000019826d : or eax, 0xffed8864 ; sbb al, 0xd ; ret
0x00000000001acce5 : or eax, 0xfff568c7 ; sbb al, 0xd ; ret
0x00000000000f2252 : or eax, 0xffffffff ; jmp 0xf221e
0x00000000000f24b2 : or eax, 0xffffffff ; jmp 0xf247e
0x0000000000036be7 : or eax, 0xffffffff ; ret
0x000000000013822d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013ad71 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000138251 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000121a32 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000c7021 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000c3791 : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000890c6 : or eax, dword ptr [rax] ; ret
0x000000000017a060 : or eax, dword ptr [rbx] ; hlt ; jmp rsi
0x0000000000195605 : or eax, dword ptr [rdx] ; ret
0x0000000000037b13 : or eax, dword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000036252 : or eax, ecx ; movq xmm0, rax ; mov dword ptr [rdi], edx ; ret
0x00000000000fb126 : or eax, edi ; ret
0x0000000000092827 : or eax, edx ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x000000000003647f : or eax, edx ; movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x00000000000fb162 : or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x000000000003c86c : or eax, edx ; ret
0x0000000000036349 : or eax, edx ; sar eax, 0x1f ; not eax ; and eax, ecx ; ret
0x000000000010d1e2 : or eax, esi ; bswap eax ; ret
0x00000000000f129e : or eax, esi ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x00000000000fb165 : or eax, esi ; or rax, rdi ; ret
0x0000000000046cd3 : or eax, esi ; ret
0x00000000001b40d6 : or eax, esp ; idiv bh ; sbb al, 0xd ; rol eax, -0xa ; jmp qword ptr [rdx]
0x000000000007d144 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000001b759b : or ebp, edx ; add dword ptr [rbx], eax ; ret
0x00000000001ac646 : or ebx, dword ptr [rbp + rsi*8 - 1] ; sbb al, 0xd ; stc ; pop rdx ; cmc ; jmp qword ptr [rdx]
0x0000000000075984 : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000dc6c2 : or ebx, edi ; call rcx
0x000000000014dd53 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000071f6e : or ebx, esi ; ret
0x0000000000084102 : or ecx, dword ptr [rax + 0x63] ; ret
0x0000000000079a9f : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x000000000003d120 : or ecx, dword ptr [rax - 0x77] ; ret 0xb848
0x000000000002a65e : or ecx, dword ptr [rax - 0x77] ; ret 0xc889
0x00000000000789b3 : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000f4557 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000104a3d : or ecx, dword ptr [rax - 0x7d] ; ret 0x4830
0x0000000000021876 : or ecx, dword ptr [rax - 1] ; ret 0x9539
0x000000000007dbf9 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x00000000000a36f4 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000a3744 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x0000000000025618 : or ecx, dword ptr [rcx + 0x4289504a] ; push rsp ; ret
0x0000000000020799 : or ecx, dword ptr [rcx + rcx*4 - 0x16] ; sub rdx, rbx ; inc rdx ; jmp 0x207b2
0x000000000007e73f : or ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000009e303 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x000000000002c0a1 : or ecx, dword ptr [rdx + 0x39] ; add byte ptr [rax + 0x39], cl ; ret 0x7773
0x00000000000367d4 : or ecx, eax ; je 0x3677c ; ret
0x00000000001a0961 : or ecx, esi ; call qword ptr [rcx]
0x00000000001a08e1 : or ecx, esi ; jmp qword ptr [rcx]
0x0000000000194104 : or edi, dword ptr [rax + 0xa] ; ret
0x00000000001274f4 : or edi, dword ptr [rax + 1] ; ret
0x0000000000121e84 : or edi, dword ptr [rax + 2] ; ret
0x0000000000106fe4 : or edi, dword ptr [rax + 7] ; ret
0x00000000001660bf : or edi, edi ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a1c97 : or edi, edi ; loope 0xa1d0a ; nop dword ptr [rax + rax] ; ret
0x000000000011fb14 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000083440 : or esi, dword ptr [rcx] ; salc ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x000000000006f0b6 : or esi, eax ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a81a9 : or esi, ebp ; jmp qword ptr [rcx]
0x000000000019ba4d : or esi, ebp ; jmp qword ptr [rdx]
0x000000000014dc73 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000fb2f4 : or esi, ebx ; ret
0x0000000000102be3 : or esi, esi ; jno 0x102bf1 ; cmovne eax, edx ; ret
0x000000000006efb7 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000798a1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000002f5f : or esp, dword ptr [rdx] ; js 0x2f19 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000f0944 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x00000000001affb4 : or esp, eax ; cmc ; jmp qword ptr [rdx]
0x00000000001877fd : or esp, edi ; jmp rax
0x0000000000082231 : or qword ptr [rbx + rbp + 8], 1 ; jmp 0x82203
0x00000000000d2aaf : or qword ptr [rdi + 0x90], rax ; xor eax, eax ; ret
0x0000000000037572 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000037735 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000015b325 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000014ddc2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x000000000014dd52 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000014dce2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000105566 : or r14b, r14b ; ret 0x7508
0x000000000014dc72 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000194103 : or r15d, dword ptr [rax + 0xa] ; ret
0x0000000000195604 : or r8d, dword ptr [rdx] ; ret
0x00000000000cde93 : or r9b, r13b ; ret 0xfff8
0x00000000000367d3 : or r9d, r8d ; je 0x3677d ; ret
0x000000000015b3a7 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x00000000000f2251 : or rax, 0xffffffffffffffff ; jmp 0xf221f
0x00000000000f24b1 : or rax, 0xffffffffffffffff ; jmp 0xf247f
0x0000000000036be6 : or rax, 0xffffffffffffffff ; ret
0x00000000001401c2 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000890c5 : or rax, qword ptr [rax] ; ret
0x0000000000037b12 : or rax, qword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000092826 : or rax, r10 ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x00000000000fb167 : or rax, rdi ; ret
0x000000000003c86b : or rax, rdx ; ret
0x00000000000fb164 : or rax, rsi ; or rax, rdi ; ret
0x0000000000036010 : orpd xmm0, xmm1 ; ret
0x0000000000036011 : orps xmm0, xmm1 ; ret
0x00000000000363ae : orps xmm0, xmm3 ; ret
0x0000000000194a2d : out -0x15, eax ; jmp qword ptr [rdx]
0x0000000000109d6f : out -0x18, al ; imul edi, esi, -0xd ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000072ff3 : out -0x18, al ; out 0x6b, eax ; std ; dec dword ptr [rax - 0x7f] ; ret
0x000000000004c39d : out -0x18, eax ; lodsd eax, dword ptr [rsi] ; ret 0xb
0x00000000000c46a7 : out -0x18, eax ; ret
0x00000000001321a8 : out -0x18, eax ; ret 0xeed2
0x00000000001759e0 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000002462 : out -0x57, al ; ret 0xbd07
0x00000000000cc6a5 : out -0x77, al ; ret 0xca83
0x000000000003b8c1 : out -0x77, eax ; ret
0x00000000000e7638 : out -0x77, eax ; ret 0x8b49
0x000000000019806c : out -0x7b, eax ; in eax, dx ; jmp qword ptr [rdx]
0x000000000002fdd3 : out -0x80, eax ; sete al ; ret
0x00000000001ac5b9 : out -0xb, al ; call qword ptr [rax]
0x00000000001ac7b9 : out -0xb, eax ; call qword ptr [rax]
0x0000000000177708 : out -0xb, eax ; mov ch, -0x55 ; ret
0x00000000001a9fe5 : out -0xc, al ; jmp qword ptr [rdx]
0x00000000001aa02d : out -0xc, eax ; jmp qword ptr [rdx]
0x000000000014d55a : out -0xd, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000093769 : out -0xd, al ; ret
0x000000000014d5da : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000004507c : out -1, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000083a46 : out -1, al ; dec dword ptr [rax - 0x77] ; ret 0x3d83
0x0000000000069200 : out -1, al ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000178849 : out -1, al ; jmp qword ptr [rsi]
0x000000000012e13a : out -1, al ; push rax ; or byte ptr [rbp - 0x14438a40], al ; ret 0x1f0f
0x0000000000061e28 : out -1, eax ; dec dword ptr [rbp + rcx*4 + 0x2d] ; ret
0x0000000000178851 : out -1, eax ; inc esp ; out -1, eax ; jmp qword ptr [rcx]
0x0000000000178855 : out -1, eax ; jmp qword ptr [rcx]
0x0000000000187689 : out -5, al ; call qword ptr [rax + 0x20fffbe8]
0x000000000018776d : out -5, al ; call qword ptr [rax - 0x2f000440]
0x0000000000187649 : out -5, al ; call rax
0x000000000019b92c : out -5, eax ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019d83d : out 0, al ; add byte ptr [rax], dh ; sahf ; out dx, al ; jmp qword ptr [rcx]
0x000000000019d955 : out 0, eax ; add byte ptr [rax], bl ; mov dh, -0x12 ; call qword ptr [rax]
0x0000000000189f25 : out 0, eax ; add byte ptr [rbp + rcx*4 - 0x12], dl ; jmp rsp
0x000000000001fea5 : out 0x15, eax ; add byte ptr [rcx], dh ; div byte ptr [rcx] ; shr al, -0x58 ; ret 0xc
0x0000000000081129 : out 0x33, al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000080ffa : out 0x33, eax ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x000000000019c034 : out 0x36, eax ; out dx, al ; jmp qword ptr [rdx]
0x000000000001ff63 : out 0x41, eax ; call qword ptr [rsi]
0x000000000010d064 : out 0x44, al ; mov edx, ebp ; pop r12 ; pop r13 ; jmp rax
0x00000000000a3d39 : out 0x48, al ; mov eax, ebx ; pop rbx ; ret
0x000000000012e7fe : out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x000000000012b250 : out 0x48, al ; mov edi, ebp ; call rax
0x00000000000c1159 : out 0x48, al ; mov edi, ebp ; mov rbx, rsp ; call 0x3d3a9
0x000000000011eca0 : out 0x48, al ; mov edi, ebp ; mov rcx, r13 ; call rbx
0x00000000001227d6 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000085e94 : out 0x48, al ; mov edi, ebx ; call rax
0x000000000011e890 : out 0x48, al ; mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000a37e0 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000038518 : out 0x48, eax ; mov eax, edx ; ret
0x0000000000001b12 : out 0x59, eax ; pop rbx ; ret 0x2a63
0x000000000007c943 : out 0x5b, al ; ret
0x000000000012c528 : out 0x5b, eax ; ret
0x0000000000072ff5 : out 0x6b, eax ; std ; dec dword ptr [rax - 0x7f] ; ret
0x000000000019ca73 : out 0xa, al ; ret
0x0000000000053d46 : out 0xf, eax ; test dword ptr [rbx - 0x17ffffff], esp ; pop rsi ; ret
0x00000000000c8200 : out 1, al ; add byte ptr [rax], al ; lea rax, qword ptr [rsi + rcx*8] ; jmp 0xc81d6
0x0000000000071e04 : out 1, al ; mov eax, esi ; ret
0x00000000000d3323 : out 4, al ; jne 0xd32d5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000118dcd : out 4, al ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000001165f5 : out dx, al ; adc bh, dh ; ret 0x8080
0x0000000000092699 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000071e01 : out dx, al ; add al, -0x7d ; out 1, al ; mov eax, esi ; ret
0x000000000019e035 : out dx, al ; add byte ptr [rax], al ; call 0x1119da00
0x0000000000125fa1 : out dx, al ; add cl, byte ptr [rcx - 0x77] ; ret 0xc148
0x00000000001188ef : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x1188fc ; ret
0x00000000001ae435 : out dx, al ; add dword ptr [rax], eax ; ret 0xf619
0x0000000000097f0b : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00000000001188ec : out dx, al ; add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x1188ff ; ret
0x000000000012008e : out dx, al ; add rdi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x00000000001780c2 : out dx, al ; call qword ptr [rax]
0x000000000018a35a : out dx, al ; call qword ptr [rbx + rax + 1]
0x000000000019c5f2 : out dx, al ; call qword ptr [rbx]
0x000000000019ae6a : out dx, al ; call qword ptr [rcx]
0x000000000019ae3a : out dx, al ; call qword ptr [rdi]
0x000000000019b44a : out dx, al ; call qword ptr [rdx]
0x000000000019b3d2 : out dx, al ; call qword ptr [rsi]
0x0000000000178b12 : out dx, al ; call qword ptr [rsp + rbx*8 - 0x3c5b0012]
0x000000000003a1e4 : out dx, al ; call r12
0x0000000000086b4a : out dx, al ; call rax
0x0000000000189c2a : out dx, al ; call rsp
0x0000000000189c42 : out dx, al ; dec dword ptr [rax + rdx*8 + 0x61e00000] ; out dx, al ; call rsp
0x0000000000189e42 : out dx, al ; dec dword ptr [rax - 0x7d240000] ; out dx, al ; call rsp
0x0000000000189c22 : out dx, al ; dec dword ptr [rdi + rcx*8 + 0x5ff00000] ; out dx, al ; call rsp
0x000000000018a4a2 : out dx, al ; dec esp ; or eax, 0xfbd40001 ; out dx, al ; jmp rsp
0x0000000000178992 : out dx, al ; dec esp ; ret 0xffee
0x0000000000001b10 : out dx, al ; enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000176b37 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000018a3ba : out dx, al ; inc dword ptr [rdi + rax - 0x13dbffff] ; out dx, al ; call rsp
0x000000000019b2ea : out dx, al ; jmp qword ptr [rax]
0x000000000019ac82 : out dx, al ; jmp qword ptr [rcx]
0x000000000019ba4e : out dx, al ; jmp qword ptr [rdx]
0x000000000019cbb2 : out dx, al ; jmp qword ptr [rsi]
0x000000000019c752 : out dx, al ; jmp rcx
0x000000000019dbba : out dx, al ; jmp rdx
0x0000000000189bf2 : out dx, al ; jmp rsp
0x000000000000374d : out dx, al ; jne 0x372d ; ret 0x975
0x0000000000189bea : out dx, al ; lcall ptr [rbp + rcx*8 + 0x5baf0000] ; out dx, al ; jmp rsp
0x000000000018a072 : out dx, al ; lcall ptr [rcx + rsi*8 - 0x5f6c0000] ; out dx, al ; jmp rsp
0x000000000017896a : out dx, al ; lcall ptr [rsi + 0x2bffeecb] ; ret
0x000000000017898e : out dx, al ; lcall ptr [rsi - 0x33001135] ; ret 0xffee
0x00000000000a4740 : out dx, al ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000017896e : out dx, al ; ljmp ptr [rbx] ; ret
0x0000000000189e9a : out dx, al ; ljmp ptr [rsp - 0x77e30000] ; out dx, al ; call rsp
0x000000000008535e : out dx, al ; loop 0x85366 ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x000000000000314b : out dx, al ; mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x00000000001453aa : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a45f4 : out dx, al ; mov rdi, qword ptr [r12] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000086d06 : out dx, al ; mov rdi, r12 ; call rax
0x000000000010c7c1 : out dx, al ; mov rdi, rbx ; call 0x78a06
0x0000000000086ebe : out dx, al ; mov rdi, rbx ; call rax
0x000000000014d96a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013e81e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000135f3f : out dx, al ; pop rbp ; jmp rax
0x0000000000189f3a : out dx, al ; push qword ptr [rax + rbp*8 - 0x701c0000] ; out dx, al ; jmp rsp
0x0000000000189eba : out dx, al ; push qword ptr [rbp] ; add byte ptr [rdi], ah ; mov esi, ebp ; jmp rsp
0x000000000018a2b2 : out dx, al ; push qword ptr [rdi + rdi*8 - 0x3d5c0000] ; out dx, al ; jmp rsp
0x0000000000189f22 : out dx, al ; push qword ptr [rdi] ; add byte ptr [rbp + rcx*4 - 0x12], dl ; jmp rsp
0x000000000018a052 : out dx, al ; push rsp ; lock add byte ptr [rax], al ; lahf ; out dx, al ; jmp rsp
0x0000000000117d4e : out dx, al ; ret 0x2a
0x0000000000002592 : out dx, al ; ret 0x88ad
0x00000000001aeb9c : out dx, al ; xchg ebp, esi ; jmp qword ptr [rdx]
0x00000000000a41c9 : out dx, al ; xor eax, eax ; ret
0x00000000000a2a8d : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x0000000000092b15 : out dx, eax ; adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000019e155 : out dx, eax ; add byte ptr [rax], al ; fcomp dword ptr [rcx] ; out dx, eax ; call qword ptr [rax]
0x000000000019e0f5 : out dx, eax ; add byte ptr [rax], al ; fcomp st(0) ; stc ; call qword ptr [rax]
0x000000000019e095 : out dx, eax ; add byte ptr [rax], al ; test al, -9 ; out dx, al ; call qword ptr [rax]
0x0000000000049607 : out dx, eax ; add ecx, ebp ; ret
0x000000000008cece : out dx, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001660f0 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000039128 : out dx, eax ; call 0x383a8
0x0000000000045f10 : out dx, eax ; call 0x92203
0x0000000000178e46 : out dx, eax ; call qword ptr [rax + 0x10ffef52]
0x0000000000178eb2 : out dx, eax ; call qword ptr [rax - 0x2f0010ae]
0x0000000000120bac : out dx, eax ; call qword ptr [rax]
0x00000000001223cb : out dx, eax ; call qword ptr [rbx]
0x000000000019ee52 : out dx, eax ; call qword ptr [rdi]
0x00000000000f77f2 : out dx, eax ; call r14
0x000000000012035b : out dx, eax ; call rax
0x00000000000f733a : out dx, eax ; call rbx
0x000000000012f0c2 : out dx, eax ; call rcx
0x0000000000086c1c : out dx, eax ; call rdx
0x000000000018a4ea : out dx, eax ; call rsp
0x00000000001acf14 : out dx, eax ; cmc ; jmp qword ptr [rdx]
0x000000000018ac42 : out dx, eax ; dec dword ptr [rax + rdi - 0x3089ffff] ; out dx, eax ; call rsp
0x000000000018a502 : out dx, eax ; dec dword ptr [rax + rdx + 0x1990001] ; out dx, eax ; call rsp
0x0000000000129525 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000123f68 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000018ab42 : out dx, eax ; dec dword ptr [rdi + rbp - 0x3434ffff] ; out dx, eax ; call rsp
0x000000000018a842 : out dx, eax ; dec dword ptr [rdx + rbx + 0x4a4f0001] ; out dx, eax ; call rsp
0x000000000008380d : out dx, eax ; in al, -1 ; dec dword ptr [rax - 0x77] ; ret 0x3d83
0x0000000000195619 : out dx, eax ; in al, dx ; call qword ptr [rax]
0x0000000000178e76 : out dx, eax ; inc dword ptr [rax] ; push rdx ; out dx, eax ; call qword ptr [rax]
0x0000000000122f6c : out dx, eax ; inc dword ptr [rbx - 0x76b79c03] ; ret
0x000000000002d02d : out dx, eax ; je 0x2d04b ; call 0x892a5
0x000000000019ea22 : out dx, eax ; jmp qword ptr [rax]
0x000000000019f04a : out dx, eax ; jmp qword ptr [rbx]
0x000000000019ea52 : out dx, eax ; jmp qword ptr [rdx]
0x0000000000120708 : out dx, eax ; jmp qword ptr [rsi + 0xf]
0x000000000019e22a : out dx, eax ; jmp qword ptr [rsi]
0x000000000019ed72 : out dx, eax ; jmp rdi
0x000000000018a7d2 : out dx, eax ; jmp rsp
0x000000000018aad2 : out dx, eax ; lcall ptr [rbx + rbp - 0x35c7ffff] ; out dx, eax ; jmp rsp
0x000000000018aa0a : out dx, eax ; lcall ptr [rcx + rax*2 - 0x575bffff] ; out dx, eax ; jmp rsp
0x000000000018a8d2 : out dx, eax ; lcall ptr [rdi + rbx + 0x4c590001] ; out dx, eax ; jmp rsp
0x000000000018abd2 : out dx, eax ; lcall ptr [rsp + rsi - 0x321affff] ; out dx, eax ; jmp rsp
0x0000000000108f80 : out dx, eax ; leave ; ret
0x00000000001067a1 : out dx, eax ; mov ebp, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000012e673 : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000012e6bd : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00000000001451da : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001452d6 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000145222 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000f8f08 : out dx, eax ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000038c00 : out dx, eax ; mov rax, rdx ; ret
0x0000000000112006 : out dx, eax ; mov rbp, qword ptr [rbx + 0x50] ; call 0x11e227
0x00000000000c115c : out dx, eax ; mov rbx, rsp ; call 0x3d3a6
0x0000000000128ee4 : out dx, eax ; mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x0000000000124c43 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000124a4c : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000011eca3 : out dx, eax ; mov rcx, r13 ; call rbx
0x0000000000022d76 : out dx, eax ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000014d9ea : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013e91d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000075bd1 : out dx, eax ; pop rbx ; ret
0x0000000000178ea2 : out dx, eax ; push qword ptr [rax] ; push rdx ; out dx, eax ; call qword ptr [rax]
0x000000000018acea : out dx, eax ; push qword ptr [rdx + rcx*2 - 0x1f9bffff] ; out dx, eax ; jmp rsp
0x0000000000160c43 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000160c58 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000160c6d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000036437 : out dx, eax ; ret
0x0000000000028edb : out dx, eax ; ret 0
0x00000000000a1ee3 : out dx, eax ; ret 0xf66
0x000000000016215c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000162145 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016212e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000160bea : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018793d : out dx, eax ; sti ; call rax
0x0000000000132eee : out dx, eax ; sti ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000019a5dc : out dx, eax ; xlatb ; in eax, dx ; jmp qword ptr [rdx]
0x000000000012183f : out dx, eax ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000038170 : out dx, eax ; xor eax, eax ; ret
0x0000000000071a45 : out dx, eax ; xor r8d, r8d ; call r12
0x000000000013a4de : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000b4ee8 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000001630fe : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000001a6075 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; jae 0x1a6075 ; jmp qword ptr [rcx]
0x000000000018b35d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; hlt ; retf ; int1 ; call rsp
0x00000000001a605d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; loopne 0x1a60db ; hlt ; jmp qword ptr [rcx]
0x0000000000132708 : outsb dx, byte ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x854d
0x0000000000036483 : outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x0000000000195a4d : outsb dx, byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001772e3 : outsb dx, byte ptr [rsi] ; ja 0x17726c ; ret 0x48f
0x00000000001923af : outsb dx, byte ptr [rsi] ; ljmp 0x430d1cff, -0x1593 ; jmp qword ptr [rdx]
0x00000000001aa49e : outsb dx, byte ptr [rsi] ; ljmp 0xd1cfff4, -0x16e0 ; hlt ; jmp qword ptr [rdx]
0x0000000000072621 : outsb dx, byte ptr [rsi] ; mov eax, edx ; pop rbx ; ret
0x000000000009380e : outsb dx, byte ptr [rsi] ; mov esp, 0x8948fff8 ; ret
0x000000000004d04e : outsb dx, byte ptr [rsi] ; ret
0x00000000000858ae : outsb dx, byte ptr [rsi] ; ret 0x33
0x0000000000175024 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000000d5962 : outsb dx, byte ptr [rsi] ; sub byte ptr [rbx + rcx*4 + 0x76], cl ; xor byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000008d53a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000000ca8ea : outsb dx, byte ptr [rsi] ; xor byte ptr [rcx + 0x5d], al ; pop r14 ; pop r15 ; ret
0x00000000001b615d : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rbx + rdi*8], al ; jmp qword ptr [rdx]
0x0000000000100525 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001a60bd : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; lock adc al, -7 ; call qword ptr [rax]
0x00000000000f2962 : outsd dx, dword ptr [rsi] ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000001195b7 : outsd dx, dword ptr [rsi] ; add rsp, 8 ; ret
0x000000000010926e : outsd dx, dword ptr [rsi] ; call 0x66d293bc
0x0000000000067f39 : outsd dx, dword ptr [rsi] ; fdivr st(7) ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000087d08 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008dc0e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001a1f54 : outsd dx, dword ptr [rsi] ; jge 0x1a1f4b ; jmp qword ptr [rdx]
0x00000000001a4c19 : outsd dx, dword ptr [rsi] ; jmp rax
0x00000000001adb9c : outsd dx, dword ptr [rsi] ; js 0x1adb97 ; jmp qword ptr [rdx]
0x0000000000192367 : outsd dx, dword ptr [rsi] ; ljmp 0x5a0d1cff, -0x1593 ; jmp qword ptr [rdx]
0x000000000019231f : outsd dx, dword ptr [rsi] ; ljmp 0xc20d1cff, -0x1594 ; jmp qword ptr [rdx]
0x0000000000161f5d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000161ffd : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000008b36a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008b36f : outsd dx, dword ptr [rsi] ; ret
0x00000000001759e6 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000145b17 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000162002 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x000000000008b3ba : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000001759e5 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000001878ed : paddb mm7, mm7 ; adc byte ptr [rdx], al ; cld ; call rax
0x00000000001878cd : paddb mm7, mm7 ; push rax ; add bh, ah ; call qword ptr [rax]
0x0000000000138122 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000a3a34 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000a3a1f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000138121 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000176de6 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000097461 : pcmpgtd mm1, qword ptr [rcx - 0x76b7fba9] ; clc ; ret
0x0000000000097a35 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x0000000000036321 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x00000000000365f1 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x0000000000097a43 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000097ae5 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x97b69 ; xor eax, eax ; ret
0x0000000000036320 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x00000000000365f0 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x0000000000089576 : pmovmskb edx, mm4 ; test edx, edx ; je 0x8958a ; bsf eax, edx ; ret
0x00000000001a8115 : pop qword ptr [rcx] ; add byte ptr [rax + 0xa], bh ; cmc ; call rsp
0x00000000001b0cdc : pop qword ptr [rdx] ; add dl, byte ptr [rsi + 0x41380e0a] ; ret
0x00000000001ab128 : pop qword ptr [rdx] ; add ecx, dword ptr [rbx + 1] ; ret
0x000000000019d3d4 : pop r10 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000108c84 : pop r10 ; ret
0x000000000017726f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000070dc2 : pop r12 ; jmp rax
0x000000000005381b : pop r12 ; mov eax, 1 ; pop r13 ; ret
0x00000000000af8c6 : pop r12 ; mov eax, r13d ; pop r13 ; pop r14 ; ret
0x0000000000072f76 : pop r12 ; mov eax, r13d ; pop r13 ; ret
0x00000000000305d0 : pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000007afa8 : pop r12 ; neg eax ; pop r13 ; ret
0x000000000010d068 : pop r12 ; pop r13 ; jmp rax
0x0000000000094ce8 : pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000bde88 : pop r12 ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x0000000000085cad : pop r12 ; pop r13 ; mov rax, rcx ; pop r14 ; ret
0x0000000000083c21 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f79f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022a03 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001ff74 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000246f0 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006db2c : pop r12 ; pop r13 ; pop rbp ; ret
0x000000000001fef5 : pop r12 ; pop r13 ; ret
0x00000000000af880 : pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x00000000000adc57 : pop r12 ; pop r14 ; ret
0x000000000003b872 : pop r12 ; pop rbp ; ret
0x000000000001f668 : pop r12 ; ret
0x0000000000123244 : pop r12 ; sete al ; movzx eax, al ; ret
0x000000000011e1df : pop r12 ; sub eax, 1 ; pop r13 ; ret
0x000000000007c37a : pop r12 ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x000000000010d06a : pop r13 ; jmp rax
0x00000000001184ad : pop r13 ; mov eax, 0xffffffff ; pop r14 ; ret
0x000000000005374d : pop r13 ; mov eax, 1 ; pop r14 ; ret
0x0000000000094cea : pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000bde8a : pop r13 ; mov rax, r14 ; pop r14 ; ret
0x0000000000085caf : pop r13 ; mov rax, rcx ; pop r14 ; ret
0x0000000000101602 : pop r13 ; pop r14 ; neg eax ; pop r15 ; ret
0x00000000000a598e : pop r13 ; pop r14 ; neg rax ; pop r15 ; ret
0x0000000000043ab2 : pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000083c23 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f7a1 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022a05 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001ff76 : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000246f2 : pop r13 ; pop r14 ; ret
0x0000000000076526 : pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00000000000d5a82 : pop r13 ; pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000006db2e : pop r13 ; pop rbp ; ret
0x000000000001fef7 : pop r13 ; ret
0x000000000007579b : pop r13 ; sub rax, r14 ; pop r14 ; pop r15 ; ret
0x00000000000af882 : pop r13 ; xor eax, eax ; pop r14 ; ret
0x000000000003873a : pop r14 ; idiv r9 ; pop r15 ; ret
0x00000000000769f3 : pop r14 ; mov eax, 0xffffffff ; pop r15 ; ret
0x000000000004110a : pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003e26a : pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000101604 : pop r14 ; neg eax ; pop r15 ; ret
0x00000000000a5990 : pop r14 ; neg rax ; pop r15 ; ret
0x0000000000043ab4 : pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000083c25 : pop r14 ; pop r15 ; jmp rax
0x000000000001f7a3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022a07 : pop r14 ; pop r15 ; ret
0x000000000001ff78 : pop r14 ; pop rbp ; ret
0x00000000000246f4 : pop r14 ; ret
0x0000000000076528 : pop r14 ; sar rax, 2 ; ret
0x00000000000d5a84 : pop r14 ; xor eax, eax ; pop r15 ; ret
0x0000000000043ab6 : pop r15 ; fmulp st(1) ; ret
0x0000000000083c27 : pop r15 ; jmp rax
0x000000000001f7a5 : pop r15 ; pop rbp ; ret
0x0000000000022a09 : pop r15 ; ret
0x0000000000128446 : pop r8 ; mov eax, 1 ; ret
0x000000000018711f : pop r9 ; clc ; ret 0x6e1f
0x00000000001abf44 : pop r9 ; cmc ; jmp qword ptr [rdx]
0x00000000001a09c8 : pop rax ; adc al, -0xf ; jmp qword ptr [rax]
0x00000000001a0808 : pop rax ; add al, -0xf ; call qword ptr [rax]
0x0000000000128b8e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000000e5377 : pop rax ; add eax, ebp ; ret 0xfa41
0x0000000000122ceb : pop rax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000045ed4 : pop rax ; call qword ptr [rbx]
0x0000000000128d54 : pop rax ; call rax
0x0000000000187e55 : pop rax ; cld ; call qword ptr [rdx + 0x12fffc57]
0x0000000000187e51 : pop rax ; cld ; call qword ptr [rdx]
0x0000000000187fd1 : pop rax ; cld ; call rax
0x0000000000187f91 : pop rax ; cld ; jmp rax
0x00000000001abde5 : pop rax ; cmc ; jmp qword ptr [rdx]
0x00000000000d2a37 : pop rax ; cmp al, 0x11 ; je 0xd2a47 ; xor eax, eax ; ret
0x00000000001a91e8 : pop rax ; cmp ebp, esi ; jmp rbx
0x00000000001a5208 : pop rax ; div bl ; jmp qword ptr [rax]
0x00000000001abca8 : pop rax ; fdivrp st(5) ; call qword ptr [rax]
0x00000000000c32aa : pop rax ; je 0xc32d8 ; mov eax, 1 ; ret
0x00000000000c32a9 : pop rax ; je 0xc32d9 ; mov eax, 1 ; ret
0x000000000018fa6f : pop rax ; jmp 0xfffffffffa26177c
0x0000000000128b96 : pop rax ; jmp rcx
0x000000000011c973 : pop rax ; jp 0x11c9a9 ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x0000000000027685 : pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000128447 : pop rax ; mov eax, 1 ; ret
0x000000000002fd94 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002fd22 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000012282e : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000000285b3 : pop rax ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000003aadf : pop rax ; or cl, ch ; ret 0xfffa
0x000000000009c904 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000019d345 : pop rax ; out dx, al ; jmp qword ptr [rdx]
0x0000000000120bc0 : pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001f576 : pop rax ; pop rbx ; pop rbp ; ret
0x00000000000fafb9 : pop rax ; pop rdi ; call rax
0x00000000000193b8 : pop rax ; ret
0x0000000000198a48 : pop rax ; ret 0xffed
0x00000000001901f9 : pop rax ; std ; jmp qword ptr [rdi]
0x00000000001a3018 : pop rax ; sti ; int1 ; jmp qword ptr [rcx]
0x00000000001a8a08 : pop rax ; sub esi, ebp ; jmp qword ptr [rcx]
0x000000000008b614 : pop rax ; xor ax, word ptr [rax] ; ret
0x0000000000174064 : pop rax ; xor ch, ch ; jmp qword ptr [rax]
0x00000000001a8dc8 : pop rax ; xor ch, dh ; jmp qword ptr [rcx]
0x0000000000120c01 : pop rax ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d93ff : pop rbp ; add al, -0x73 ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000018da3d : pop rbp ; add al, byte ptr [rax] ; and bh, byte ptr [rbp - 8] ; call rsp
0x00000000001b4ed5 : pop rbp ; add al, byte ptr [rax] ; clc ; mov bh, dh ; call qword ptr [rdx]
0x00000000000d3149 : pop rbp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000005ebb7 : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000001228dd : pop rbp ; add eax, edx ; ret
0x0000000000108e85 : pop rbp ; and eax, 0xc ; pop r12 ; ret
0x00000000000ee5ba : pop rbp ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000f3fe7 : pop rbp ; in eax, 0x2c ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x0000000000179095 : pop rbp ; int1 ; call qword ptr [rax]
0x0000000000075004 : pop rbp ; jmp rax
0x0000000000120095 : pop rbp ; jmp rcx
0x0000000000121842 : pop rbp ; jmp rdx
0x00000000000a235c : pop rbp ; lea rax, qword ptr [r9 + 1] ; pop r12 ; ret
0x0000000000074556 : pop rbp ; mov eax, 0xffffffff ; pop r12 ; ret
0x00000000001184ae : pop rbp ; mov eax, 0xffffffff ; pop r14 ; ret
0x000000000007453f : pop rbp ; mov eax, 1 ; pop r12 ; ret
0x000000000005374e : pop rbp ; mov eax, 1 ; pop r14 ; ret
0x00000000000e5dec : pop rbp ; mov eax, 5 ; pop r12 ; ret
0x00000000000a2309 : pop rbp ; mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x000000000005e53f : pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000094ceb : pop rbp ; mov eax, edx ; pop r14 ; ret
0x000000000010a3e4 : pop rbp ; mov eax, esi ; pop r12 ; ret
0x00000000000af843 : pop rbp ; mov eax, r12d ; pop r12 ; pop r13 ; ret
0x00000000000af771 : pop rbp ; mov eax, r12d ; pop r12 ; ret
0x00000000000f1420 : pop rbp ; mov eax, r9d ; pop r12 ; ret
0x000000000006d88e : pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000bde8b : pop rbp ; mov rax, r14 ; pop r14 ; ret
0x0000000000085cb0 : pop rbp ; mov rax, rcx ; pop r14 ; ret
0x0000000000070eb6 : pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000126c92 : pop rbp ; movzx eax, al ; pop r12 ; ret
0x0000000000083843 : pop rbp ; pop r12 ; jmp rax
0x0000000000072f75 : pop rbp ; pop r12 ; mov eax, r13d ; pop r13 ; ret
0x00000000000305cf : pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000007afa7 : pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
0x0000000000094ce7 : pop rbp ; pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x0000000000083c20 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000022a02 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000246ef : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fef4 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000af87f : pop rbp ; pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x00000000000adc56 : pop rbp ; pop r12 ; pop r14 ; ret
0x000000000001f667 : pop rbp ; pop r12 ; ret
0x0000000000123243 : pop rbp ; pop r12 ; sete al ; movzx eax, al ; ret
0x0000000000041109 : pop rbp ; pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003e269 : pop rbp ; pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000101603 : pop rbp ; pop r14 ; neg eax ; pop r15 ; ret
0x00000000000a598f : pop rbp ; pop r14 ; neg rax ; pop r15 ; ret
0x0000000000043ab3 : pop rbp ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000083c24 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x000000000001f7a2 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022a06 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000001ff77 : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000000246f3 : pop rbp ; pop r14 ; ret
0x0000000000076527 : pop rbp ; pop r14 ; sar rax, 2 ; ret
0x00000000000d5a83 : pop rbp ; pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000006db2f : pop rbp ; pop rbp ; ret
0x0000000000038488 : pop rbp ; pop rbx ; ret
0x000000000001f513 : pop rbp ; ret
0x00000000000fd00e : pop rbp ; sub eax, 0x89480008 ; ret 0xff31
0x0000000000071a58 : pop rbp ; sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000007579c : pop rbp ; sub rax, r14 ; pop r14 ; pop r15 ; ret
0x00000000000f5d0f : pop rbp ; xchg eax, edi ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000111cff : pop rbp ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop r12 ; ret
0x000000000007aed1 : pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000af883 : pop rbp ; xor eax, eax ; pop r14 ; ret
0x0000000000107011 : pop rbp ; xor eax, eax ; pop rbx ; ret
0x00000000001b4cfd : pop rbx ; add al, byte ptr [rax] ; push rax ; jg 0x1b4d00 ; call qword ptr [rdx]
0x000000000018da05 : pop rbx ; add al, byte ptr [rax] ; test byte ptr [rbp - 8], dh ; jmp rsp
0x00000000001745b8 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000a266f : pop rbx ; and eax, 0x3fc00 ; ret
0x00000000000a26af : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000d2820 : pop rbx ; and eax, 2 ; pop rbp ; ret
0x0000000000187e3d : pop rbx ; cld ; call qword ptr [rdx + 0x12fffc5a]
0x0000000000187e39 : pop rbx ; cld ; call qword ptr [rdx]
0x0000000000187fb9 : pop rbx ; cld ; call rax
0x0000000000187f79 : pop rbx ; cld ; jmp rax
0x0000000000187f75 : pop rbx ; cld ; push qword ptr [rax + 0x5b] ; cld ; jmp rax
0x00000000001ac3cd : pop rbx ; cmc ; jmp qword ptr [rdx]
0x00000000001745b6 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000006f8c3 : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000743ee : pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x0000000000070afa : pop rbx ; jmp rax
0x000000000019aaa4 : pop rbx ; lock in eax, dx ; jmp qword ptr [rdx]
0x00000000000774ac : pop rbx ; mov eax, 0xffffffff ; pop rbp ; ret
0x00000000000d16e2 : pop rbx ; mov eax, 1 ; ret
0x0000000000048745 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000a2719 : pop rbx ; mov eax, eax ; ret
0x00000000000c1873 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e565 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000004f0f2 : pop rbx ; mov eax, ebp ; pop rbp ; ret
0x000000000007539a : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007519f : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000070157 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006ffe1 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000012183c : pop rbx ; mov rdi, rbp ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000135f3c : pop rbx ; mov rsi, rbp ; pop rbp ; jmp rax
0x000000000012353c : pop rbx ; movzx eax, al ; pop rbp ; ret
0x00000000000489f5 : pop rbx ; neg eax ; pop rbp ; ret
0x000000000019d41d : pop rbx ; out dx, al ; jmp qword ptr [rdx]
0x0000000000189bf1 : pop rbx ; out dx, al ; jmp rsp
0x00000000001298b4 : pop rbx ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000001ff73 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000006db2b : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000003b871 : pop rbx ; pop r12 ; pop rbp ; ret
0x00000000001228dc : pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000108e84 : pop rbx ; pop rbp ; and eax, 0xc ; pop r12 ; ret
0x0000000000075003 : pop rbx ; pop rbp ; jmp rax
0x0000000000074555 : pop rbx ; pop rbp ; mov eax, 0xffffffff ; pop r12 ; ret
0x000000000007453e : pop rbx ; pop rbp ; mov eax, 1 ; pop r12 ; ret
0x00000000000e5deb : pop rbx ; pop rbp ; mov eax, 5 ; pop r12 ; ret
0x00000000000a2308 : pop rbx ; pop rbp ; mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x000000000005e53e : pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000010a3e3 : pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x00000000000af842 : pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; pop r13 ; ret
0x00000000000f141f : pop rbx ; pop rbp ; mov eax, r9d ; pop r12 ; ret
0x000000000006d88d : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000070eb5 : pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000126c91 : pop rbx ; pop rbp ; movzx eax, al ; pop r12 ; ret
0x0000000000083842 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000072f74 : pop rbx ; pop rbp ; pop r12 ; mov eax, r13d ; pop r13 ; ret
0x00000000000305ce : pop rbx ; pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000007afa6 : pop rbx ; pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
0x00000000000246ee : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fef3 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000adc55 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000001f666 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001f512 : pop rbx ; pop rbp ; ret
0x0000000000111cfe : pop rbx ; pop rbp ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop r12 ; ret
0x000000000007aed0 : pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000022197 : pop rbx ; ret
0x0000000000001b14 : pop rbx ; ret 0x2a63
0x00000000001778a0 : pop rbx ; ret 0x6f9
0x00000000000a4bb8 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000186910 : pop rcx ; clc ; ret 0x6e1f
0x0000000000187e4d : pop rcx ; cld ; call qword ptr [rdx + 0x12fffc58]
0x0000000000187e49 : pop rcx ; cld ; call qword ptr [rdx]
0x0000000000187fc9 : pop rcx ; cld ; call rax
0x0000000000187f89 : pop rcx ; cld ; jmp rax
0x00000000001abefd : pop rcx ; cmc ; jmp qword ptr [rdx]
0x00000000001aab04 : pop rcx ; int1 ; hlt ; jmp qword ptr [rdx]
0x000000000018f676 : pop rcx ; jmp 0x3261385
0x00000000000e3734 : pop rcx ; or byte ptr [rcx + 0x63], cl ; sbb al, -0x66 ; add rbx, r10 ; jmp rbx
0x00000000001aa02c : pop rcx ; out -0xc, eax ; jmp qword ptr [rdx]
0x000000000019d38d : pop rcx ; out dx, al ; jmp qword ptr [rdx]
0x000000000018a8d8 : pop rcx ; out dx, eax ; jmp rsp
0x00000000001298b3 : pop rcx ; pop rbx ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000001b13 : pop rcx ; pop rbx ; ret 0x2a63
0x0000000000113a0f : pop rcx ; ret
0x00000000000fa772 : pop rcx ; ret 0xc383
0x0000000000199034 : pop rcx ; test al, -0x13 ; jmp qword ptr [rdx]
0x0000000000134593 : pop rcx ; test dword ptr [rax], ebp ; add byte ptr [rcx + 0x5c], al ; jmp rax
0x0000000000143d58 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000ec0da : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000013efad : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000005d9d5 : pop rdi ; call qword ptr [rcx]
0x00000000000fafba : pop rdi ; call rax
0x0000000000187c2d : pop rdi ; cld ; call rdx
0x0000000000187c69 : pop rdi ; cld ; jmp qword ptr [rdx]
0x0000000000187bad : pop rdi ; cld ; jmp rsi
0x0000000000187c29 : pop rdi ; cld ; ljmp ptr [rdi + rbx*2] ; cld ; call rdx
0x0000000000043ab7 : pop rdi ; fmulp st(1) ; ret
0x0000000000145779 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000145589 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000176b5e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000179099 : pop rdi ; int1 ; jmp qword ptr [rax]
0x00000000000359c8 : pop rdi ; je 0x359df ; jmp 0x35993
0x00000000000fa91d : pop rdi ; jg 0xfa954 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000083c28 : pop rdi ; jmp rax
0x00000000001adbe4 : pop rdi ; js 0x1adbdf ; jmp qword ptr [rdx]
0x0000000000145026 : pop rdi ; lock mov qword ptr [rdi - 8], rcx ; ret
0x0000000000145064 : pop rdi ; lock mov qword ptr [rdi - 8], rdx ; ret
0x0000000000175b21 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x0000000000189c29 : pop rdi ; out dx, al ; call rsp
0x00000000001453a9 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001451d9 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001452d5 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000145221 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000001f7a6 : pop rdi ; pop rbp ; ret
0x0000000000022a0a : pop rdi ; ret
0x000000000018fad9 : pop rdi ; std ; jmp qword ptr [rdx]
0x00000000001a3cfc : pop rdi ; stosb byte ptr [rdi], al ; jmp qword ptr [rdx]
0x00000000001a4c15 : pop rdx ; add dword ptr [rax], eax ; sbb byte ptr [rdi - 0xd], ch ; jmp rax
0x00000000001398a6 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x000000000007a067 : pop rdx ; cdqe ; ret
0x0000000000187e45 : pop rdx ; cld ; call qword ptr [rdx + 0x12fffc59]
0x0000000000187e41 : pop rdx ; cld ; call qword ptr [rdx]
0x0000000000187fc1 : pop rdx ; cld ; call rax
0x0000000000187f81 : pop rdx ; cld ; jmp rax
0x00000000001ac64d : pop rdx ; cmc ; jmp qword ptr [rdx]
0x00000000001a75ec : pop rdx ; hlt ; jmp qword ptr [rdx]
0x0000000000179091 : pop rdx ; int1 ; inc dword ptr [rax] ; pop rbp ; int1 ; call qword ptr [rax]
0x0000000000003a4a : pop rdx ; int1 ; mov dl, 0x1e ; ret
0x0000000000176741 : pop rdx ; je 0x17670b ; ret 0xacfc
0x000000000000314d : pop rdx ; jmp 0xffffffffc25d05fb
0x000000000019613c : pop rdx ; jo 0x19612f ; jmp qword ptr [rdx]
0x0000000000177707 : pop rdx ; out -0xb, eax ; mov ch, -0x55 ; ret
0x000000000019d3d5 : pop rdx ; out dx, al ; jmp qword ptr [rdx]
0x0000000000108c83 : pop rdx ; pop r10 ; ret
0x00000000000832ff : pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000108ca9 : pop rdx ; pop rsi ; ret
0x0000000000001b8e : pop rdx ; ret
0x00000000000f78c2 : pop rdx ; sar edx, cl ; dec dword ptr [rax + 0x39] ; ret
0x0000000000177270 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000a4045 : pop rdx ; test al, -0x10 ; jne 0xa4079 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000013eeae : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018d899 : pop rsi ; clc ; jmp rsp
0x0000000000187d71 : pop rsi ; cld ; call qword ptr [rax]
0x0000000000187c31 : pop rsi ; cld ; inc dword ptr [rdx + 0x65] ; cld ; call rdx
0x0000000000187d6d : pop rsi ; cld ; jmp qword ptr [rax + 0x10fffc5e]
0x000000000003873b : pop rsi ; idiv r9 ; pop r15 ; ret
0x00000000000769f4 : pop rsi ; mov eax, 0xffffffff ; pop r15 ; ret
0x00000000000c484d : pop rsi ; mov rdi, qword ptr [rbp - 0x430] ; call r15
0x000000000004110b : pop rsi ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003e26b : pop rsi ; mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000101605 : pop rsi ; neg eax ; pop r15 ; ret
0x00000000000a5991 : pop rsi ; neg rax ; pop r15 ; ret
0x0000000000092835 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000019c544 : pop rsi ; out dx, al ; jmp qword ptr [rdx]
0x0000000000129524 : pop rsi ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000043ab5 : pop rsi ; pop r15 ; fmulp st(1) ; ret
0x0000000000083c26 : pop rsi ; pop r15 ; jmp rax
0x000000000001f7a4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000022a08 : pop rsi ; pop r15 ; ret
0x000000000001ff79 : pop rsi ; pop rbp ; ret
0x00000000000246f5 : pop rsi ; ret
0x00000000001066ae : pop rsi ; ret 0xffff
0x0000000000076529 : pop rsi ; sar rax, 2 ; ret
0x00000000000ee5d4 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d5a85 : pop rsi ; xor eax, eax ; pop r15 ; ret
0x000000000013a6f0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000139ba4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013b3f0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x00000000001a3eec : pop rsp ; add qword ptr [r8], r8 ; sub al, -0xe ; jmp rdx
0x00000000000813d3 : pop rsp ; and al, 0x28 ; call rax
0x00000000000b1315 : pop rsp ; and al, 0xfffffffffffffff0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000187db5 : pop rsp ; cld ; call rax
0x0000000000187e35 : pop rsp ; cld ; jmp qword ptr [rdx + 0x12fffc5b]
0x00000000001a89ec : pop rsp ; cwde ; add dword ptr [rax], eax ; sub esi, ebp ; jmp qword ptr [rcx]
0x0000000000189b21 : pop rsp ; in eax, dx ; call rsp
0x00000000001a14dc : pop rsp ; jae 0x1a14d3 ; jmp qword ptr [rdx]
0x0000000000070dc3 : pop rsp ; jmp rax
0x000000000005381c : pop rsp ; mov eax, 1 ; pop r13 ; ret
0x00000000000538e7 : pop rsp ; mov eax, edx ; pop rbx ; ret
0x00000000000af8c7 : pop rsp ; mov eax, r13d ; pop r13 ; pop r14 ; ret
0x0000000000072f77 : pop rsp ; mov eax, r13d ; pop r13 ; ret
0x000000000013da80 : pop rsp ; mov ebp, 0x63480003 ; ret 0xf66
0x000000000018e054 : pop rsp ; mov es, dword ptr [rdx] ; add byte ptr [rsi - 7], al ; jmp rsp
0x00000000000305d1 : pop rsp ; mov rax, rcx ; pop r13 ; ret
0x000000000007afa9 : pop rsp ; neg eax ; pop r13 ; ret
0x0000000000138580 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001955ff : pop rsp ; or cl, byte ptr [rdi + rax] ; or byte ptr [rbx + rcx + 2], al ; ret
0x000000000010d069 : pop rsp ; pop r13 ; jmp rax
0x0000000000094ce9 : pop rsp ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000bde89 : pop rsp ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x0000000000085cae : pop rsp ; pop r13 ; mov rax, rcx ; pop r14 ; ret
0x0000000000101601 : pop rsp ; pop r13 ; pop r14 ; neg eax ; pop r15 ; ret
0x0000000000043ab1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000083c22 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f7a0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022a04 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001ff75 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000246f1 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000076525 : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00000000000d5a81 : pop rsp ; pop r13 ; pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000006db2d : pop rsp ; pop r13 ; pop rbp ; ret
0x000000000001fef6 : pop rsp ; pop r13 ; ret
0x00000000000af881 : pop rsp ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x00000000000adc58 : pop rsp ; pop r14 ; ret
0x000000000003b873 : pop rsp ; pop rbp ; ret
0x000000000018da04 : pop rsp ; pop rbx ; add al, byte ptr [rax] ; test byte ptr [rbp - 8], dh ; jmp rsp
0x00000000000037ec : pop rsp ; ret
0x0000000000003151 : pop rsp ; ret 0x52c0
0x00000000000f0830 : pop rsp ; ret 0xffff
0x0000000000123245 : pop rsp ; sete al ; movzx eax, al ; ret
0x000000000011e1e0 : pop rsp ; sub eax, 1 ; pop r13 ; ret
0x000000000007c37b : pop rsp ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x00000000001a8ee5 : popfq ; add dword ptr [rax], eax ; fdiv dword ptr [rdx] ; cmc ; jmp qword ptr [rcx]
0x00000000001a8efd : popfq ; add dword ptr [rax], eax ; lock xor dh, ch ; jmp qword ptr [rcx]
0x000000000010b9b7 : popfq ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000179209 : popfq ; cld ; call qword ptr [rax]
0x0000000000109097 : popfq ; mov ebp, 0x3948002b ; ret 0x840f
0x0000000000097f4d : popfq ; mov rax, rdi ; ret
0x000000000004ff1b : popfq ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000019d4f4 : popfq ; pop rbx ; out dx, al ; jmp qword ptr [rdx]
0x0000000000178ad4 : popfq ; ret
0x0000000000117dbf : popfq ; ret 0x2a
0x00000000000a25c9 : popfq ; ret 0xea81
0x000000000013bdd0 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018e241 : popfq ; stc ; call rsp
0x00000000000f5fcf : popfq ; xchg eax, esp ; dec dword ptr [rcx - 0x75] ; jge 0xf5fdf ; call rbx
0x000000000014dab3 : psllq mm1, qword ptr [rdi] ; jg 0x14dacc ; ret
0x0000000000150583 : psllq mm1, qword ptr [rdi] ; jg 0x15059c ; ret
0x00000000001530a3 : psllq mm1, qword ptr [rdi] ; jg 0x1530bc ; ret
0x000000000009daa6 : psllq mm1, qword ptr [rdi] ; jg 0x9daba ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009db07 : psllq mm1, qword ptr [rdi] ; jg 0x9db1c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009e776 : psllq mm1, qword ptr [rdi] ; jg 0x9e78a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009e7d7 : psllq mm1, qword ptr [rdi] ; jg 0x9e7ec ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a0b86 : psllq mm1, qword ptr [rdi] ; jg 0xa0b9a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a0be7 : psllq mm1, qword ptr [rdi] ; jg 0xa0bfc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a1656 : psllq mm1, qword ptr [rdi] ; jg 0xa166a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a16b7 : psllq mm1, qword ptr [rdi] ; jg 0xa16cc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b4a1f : psubb mm1, qword ptr [rax - 0x77] ; ret
0x000000000006e562 : psubq mm7, mm7 ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000194a74 : push -0x17 ; jmp 0x194a7a
0x00000000000d9973 : push -0x3c76b690 ; mov edx, r8d ; jmp 0xd998b
0x0000000000002bdd : push -0x7329150 ; ret
0x0000000000178f78 : push -0x77000f4e ; mov dl, -0x10 ; call rax
0x00000000001630e4 : push -0x9ffffff ; ret 0x7501
0x00000000001a5e89 : push -0xc ; jmp qword ptr [rcx]
0x0000000000021bff : push -0xcfffff7 ; ret
0x00000000001795e5 : push -0xe ; inc eax ; push -0xe ; jmp rax
0x00000000001795d1 : push -0xe ; jmp qword ptr [rax]
0x00000000001795e9 : push -0xe ; jmp rax
0x00000000000a4037 : push -0xfb872b8 ; ret
0x000000000018736d : push -5 ; call qword ptr [rax + 0x10fffb82]
0x0000000000102a7f : push -8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e38e4 : push 0x2484b60f ; ret
0x0000000000110753 : push 0x2b02 ; jne 0x110722 ; jmp 0x11071a
0x000000000012038d : push 0x5c415d5b ; pop r13 ; ret
0x00000000001a5a6d : push 0x61600001 ; hlt ; jmp qword ptr [rax]
0x000000000017957d : push 0x6800fff2 ; call qword ptr [rax]
0x0000000000179581 : push 0x6810fff2 ; jmp qword ptr [rax]
0x00000000001795a1 : push 0x68b0fff2 ; call rax
0x00000000001795a9 : push 0x68f0fff2 ; call qword ptr [rax]
0x00000000001772e2 : push 0x6e ; ja 0x17726d ; ret 0x48f
0x00000000001ae0f4 : push 0x7c ; cmc ; jmp qword ptr [rdx]
0x00000000001ace3f : push 0xd1cfff5 ; add ch, byte ptr [rax - 0xb] ; jmp qword ptr [rdx]
0x00000000001ace87 : push 0xd1cfff5 ; clc ; cmc ; jmp qword ptr [rdx]
0x00000000001acdf7 : push 0xd1cfff5 ; cmc ; jmp qword ptr [rdx]
0x00000000001acf9f : push 0xd1cfff5 ; in eax, 0x67 ; cmc ; jmp qword ptr [rdx]
0x00000000001acf0f : push 0xd1cfff5 ; out dx, eax ; cmc ; jmp qword ptr [rdx]
0x00000000001acce7 : push 0xd1cfff5 ; ret
0x00000000001ad067 : push 0xd1cfff5 ; sbb al, 0x68 ; cmc ; jmp qword ptr [rdx]
0x00000000001a5c85 : push 1 ; add byte ptr [rax + 0x64], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001282de : push 2 ; add rdi, 0x68 ; jmp rcx
0x000000000000e568 : push 3 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004e16e : push 5 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000009e502 : push 5 ; add byte ptr [rax], al ; ret
0x000000000018725b : push qword ptr [rax + 0x18] ; sti ; inc dword ptr [rax + 0x19] ; sti ; call qword ptr [rax]
0x0000000000187b13 : push qword ptr [rax + 0x1f] ; cld ; inc eax ; and ah, bh ; call qword ptr [rax]
0x0000000000187fab : push qword ptr [rax + 0x40fffc54] ; push rsp ; cld ; jmp rax
0x0000000000188287 : push qword ptr [rax + 0x40fffc88] ; mov ah, bh ; call rax
0x00000000001885a7 : push qword ptr [rax + 0x40fffcab] ; stosd dword ptr [rdi], eax ; cld ; call rsi
0x000000000018877f : push qword ptr [rax + 0x40fffcaf] ; scasd eax, dword ptr [rdi] ; cld ; call rax
0x0000000000022020 : push qword ptr [rax + 0x48] ; add esp, 8 ; ret
0x0000000000187f77 : push qword ptr [rax + 0x5b] ; cld ; jmp rax
0x0000000000179553 : push qword ptr [rax + 0x66] ; jmp qword ptr [rax - 0x2f000d9a]
0x00000000001884eb : push qword ptr [rax + 0x7a] ; cld ; call qword ptr [rax]
0x000000000018735b : push qword ptr [rax + 0x7a] ; sti ; inc eax ; jnp 0x187366 ; call qword ptr [rax]
0x00000000001882e7 : push qword ptr [rax + 0x7b] ; cld ; jmp rax
0x0000000000189f3b : push qword ptr [rax + rbp*8 - 0x701c0000] ; out dx, al ; jmp rsp
0x00000000000fb25d : push qword ptr [rax + rcx + 0x5b] ; pop rbp ; ret
0x000000000018f0d3 : push qword ptr [rax + rdi*8 - 0x28bbffff] ; std ; jmp rsp
0x00000000000bdefe : push qword ptr [rax + rsi - 0x77] ; ret 0xe283
0x00000000001897db : push qword ptr [rax + rsi*4 - 0x1a7c0000] ; jmp 0x1897eb
0x0000000000179543 : push qword ptr [rax - 0x1f000d9b] ; call qword ptr gs:[rax]
0x0000000000187753 : push qword ptr [rax - 0x25] ; sti ; inc dword ptr [rax - 0x23] ; sti ; jmp qword ptr [rax]
0x00000000001793e7 : push qword ptr [rax - 0x2f000dad] ; push rbx ; jmp rax
0x00000000001877cf : push qword ptr [rax - 0x32] ; sti ; inc eax ; iretd ; sti ; call qword ptr [rax]
0x000000000017945b : push qword ptr [rax - 0x3f000dab] ; push rbp ; call rax
0x00000000001793a7 : push qword ptr [rax - 0x3f000dae] ; push rdx ; call rax
0x00000000001792d7 : push qword ptr [rax - 0x3f000db9] ; repne ; call rax
0x000000000017907f : push qword ptr [rax - 0x3f000eae] ; push rsp ; int1 ; call rax
0x00000000001875ef : push qword ptr [rax - 0x46] ; std ; call qword ptr [rcx]
0x00000000001874af : push qword ptr [rax - 0x53] ; std ; inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rax
0x00000000001791f3 : push qword ptr [rax - 0x6a] ; cld ; jmp rax
0x000000000018826f : push qword ptr [rax - 0x7c] ; cld ; jmp rax
0x0000000000187947 : push qword ptr [rax - 0xd] ; sti ; inc eax ; hlt ; sti ; call qword ptr [rax]
0x000000000018799b : push qword ptr [rax - 6] ; sti ; inc eax ; sti ; sti ; call qword ptr [rax]
0x000000000018724b : push qword ptr [rax] ; adc eax, 0x1600fffb ; sti ; call rax
0x000000000018784f : push qword ptr [rax] ; add edi, esp ; push rax ; add al, -4 ; call rax
0x00000000001884b7 : push qword ptr [rax] ; cmp esp, 0xfc80a0ff ; jmp qword ptr [rax]
0x000000000018849f : push qword ptr [rax] ; jl 0x1884a7 ; jmp qword ptr [rax + 0x10fffc7b]
0x000000000009d30f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001874e7 : push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; std ; call rax
0x00000000001872ff : push qword ptr [rax] ; push rcx ; sti ; call qword ptr [rax]
0x0000000000178ea3 : push qword ptr [rax] ; push rdx ; out dx, eax ; call qword ptr [rax]
0x0000000000187de3 : push qword ptr [rax] ; push rsi ; cld ; jmp qword ptr [rax + 0x10fffc55]
0x0000000000179203 : push qword ptr [rax] ; pushfq ; cld ; jmp qword ptr [rax + 0x10fffc9d]
0x0000000000164a68 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000007753b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x00000000000fd938 : push qword ptr [rbp + rax - 0x7d] ; ret 0x8901
0x0000000000188223 : push qword ptr [rbp + rax*4 - 0x7abb0004] ; cld ; call rsp
0x0000000000133c40 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x0000000000038bfe : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x0000000000112392 : push qword ptr [rbp - 0x15] ; pop rbx ; ret
0x000000000011ce3b : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000165f8c : push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x0000000000038516 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000007c941 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000189ebb : push qword ptr [rbp] ; add byte ptr [rdi], ah ; mov esi, ebp ; jmp rsp
0x00000000000c1945 : push qword ptr [rbx + 0x31] ; ret
0x00000000000cc128 : push qword ptr [rbx + 0x34] ; ret
0x0000000000036eac : push qword ptr [rbx + 1] ; ret
0x00000000000ebc29 : push qword ptr [rbx + 3] ; mov eax, edx ; ret
0x00000000000470b6 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x0000000000075bcc : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000189ab3 : push qword ptr [rbx + rax*8] ; add byte ptr [rdi + rdx*2 - 0x13], dl ; call rsp
0x00000000000fb2f2 : push qword ptr [rbx + rcx - 0xd] ; ret
0x000000000018e693 : push qword ptr [rbx + rdi*4 + 0x2e040002] ; cli ; jmp rsp
0x000000000017af3f : push qword ptr [rbx - 0x5c] ; cmc ; jmp rax
0x000000000017af3b : push qword ptr [rbx - 0x5c] ; cmc ; push qword ptr [rbx - 0x5c] ; cmc ; jmp rax
0x000000000018ec83 : push qword ptr [rcx + 2] ; add ah, dl ; ret 0xfffa
0x0000000000178f87 : push qword ptr [rcx - 0x71000f4c] ; mov bl, -0x10 ; call qword ptr [rdi]
0x00000000000ce4ea : push qword ptr [rcx] ; fild dword ptr [rbx - 0x6af0fd08] ; ret
0x000000000018753f : push qword ptr [rcx] ; mov ecx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x000000000018755f : push qword ptr [rcx] ; mov edx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x00000000000779a4 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000659ce : push qword ptr [rcx] ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000000724a6 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000cea03 : push qword ptr [rcx] ; shr cl, cl ; ret 0xfff9
0x00000000000ebcea : push qword ptr [rdi + 0x17] ; ret
0x00000000000ebd39 : push qword ptr [rdi + 0x18] ; ret
0x0000000000036bbe : push qword ptr [rdi + 0x19] ; ret
0x00000000000ebe9f : push qword ptr [rdi + 0x1a] ; ret
0x00000000000ebe46 : push qword ptr [rdi + 0x1b] ; ret
0x00000000000ebde2 : push qword ptr [rdi + 0x1f] ; ret
0x00000000000f3c08 : push qword ptr [rdi + 0x21] ; ret
0x00000000000ec24e : push qword ptr [rdi + 0x35] ; add rsp, 0x70 ; pop rbx ; ret
0x00000000000edcde : push qword ptr [rdi + 0x66] ; add rsp, 0x38 ; ret
0x00000000000f2960 : push qword ptr [rdi + 0x6f] ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000ec72e : push qword ptr [rdi + 0x71] ; ret
0x0000000000036f1b : push qword ptr [rdi + 1] ; ret
0x0000000000036e85 : push qword ptr [rdi + 2] ; ret
0x00000000000edb92 : push qword ptr [rdi + 3] ; cdqe ; ret
0x00000000000faf32 : push qword ptr [rdi + 3] ; pop rbx ; pop rbp ; ret
0x0000000000075f35 : push qword ptr [rdi + 8] ; ret
0x000000000002f6c3 : push qword ptr [rdi + rax - 0x77] ; fucompi st(0) ; ret
0x000000000018a2b3 : push qword ptr [rdi + rdi*8 - 0x3d5c0000] ; out dx, al ; jmp rsp
0x00000000001888f7 : push qword ptr [rdi - 4] ; jmp rsp
0x0000000000189f23 : push qword ptr [rdi] ; add byte ptr [rbp + rcx*4 - 0x12], dl ; jmp rsp
0x000000000018815b : push qword ptr [rdx + 0x42fffc86] ; xchg ah, bh ; call rdx
0x0000000000188653 : push qword ptr [rdx + 0x42fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rdx
0x0000000000187e67 : push qword ptr [rdx + 0x55] ; cld ; jmp rdx
0x000000000006f713 : push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x000000000018aceb : push qword ptr [rdx + rcx*2 - 0x1f9bffff] ; out dx, eax ; jmp rsp
0x000000000018d443 : push qword ptr [rdx + rsi + 0x12540002] ; clc ; call rsp
0x00000000001154b3 : push qword ptr [rdx - 0x3dbbf0fe] ; ret
0x0000000000188337 : push qword ptr [rdx - 0x7f] ; cld ; jmp rdx
0x00000000001873db : push qword ptr [rdx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rax
0x00000000001873d7 : push qword ptr [rdx] ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; push qword ptr [rdx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rax
0x00000000001880b7 : push qword ptr [rsi + 0x46fffc8a] ; mov bh, ah ; call rsi
0x000000000018b1db : push qword ptr [rsi + 1] ; add ah, al ; xchg eax, esi ; int1 ; call rsp
0x00000000000fd6e9 : push qword ptr [rsi + rax - 0x7d] ; ret 0x6601
0x0000000000179843 : push qword ptr [rsi + rcx*4 - 0x7223000e] ; call rdi
0x0000000000187f1f : push qword ptr [rsi + rdx*2 - 4] ; jmp rsp
0x00000000000759ed : push qword ptr [rsi + rsi*4 - 0xa] ; ret 0x7508
0x0000000000187cf7 : push qword ptr [rsp + 0x6444fffc] ; cld ; call rsp
0x000000000018871b : push qword ptr [rsp + rbp*4 - 0x53bb0004] ; cld ; call rsp
0x000000000018de93 : push qword ptr [rsp + rdi*2 + 0x12440002] ; stc ; jmp rsp
0x0000000000128376 : push r12 ; mov eax, 1 ; ret
0x000000000007bc8c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000080de3 : push rax ; adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000128cfd : push rax ; adc byte ptr [rax + 1], bh ; ret
0x000000000007d151 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000001208dd : push rax ; adc dh, dh ; ret 0x7401
0x0000000000187853 : push rax ; add al, -4 ; call rax
0x00000000001878d0 : push rax ; add bh, ah ; call qword ptr [rax]
0x000000000007bc8d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000741bc : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000000e0a0 : push rax ; add eax, 0 ; add byte ptr [rax], al ; ret
0x0000000000187918 : push rax ; add eax, 0x730fffc ; cld ; jmp qword ptr [rax]
0x00000000000b2e50 : push rax ; add eax, dword ptr [rdi + rcx + 0x48] ; ret 0x93ba
0x00000000000f85ca : push rax ; add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x0000000000187830 : push rax ; add edi, esp ; call qword ptr [rax]
0x000000000013479f : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x0000000000120172 : push rax ; and byte ptr [rdi + 1], bh ; call 0x12c419
0x0000000000187283 : push rax ; and ebx, edi ; jmp rax
0x000000000011200a : push rax ; call 0x11e223
0x000000000017936d : push rax ; call qword ptr [rax]
0x0000000000027d9a : push rax ; call rax
0x00000000000e44ec : push rax ; cli ; dec dword ptr [rax - 0x77] ; jmp 0x4cd0ce46
0x00000000001aba5d : push rax ; cmc ; jmp qword ptr [rdx]
0x0000000000187a4c : push rax ; cmp ah, bh ; jmp rax
0x000000000006f8eb : push rax ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x00000000000f1651 : push rax ; cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x00000000000fb2ef : push rax ; cmp edx, -1 ; je 0xfb307 ; ret
0x0000000000188a30 : push rax ; cmp esp, -1 ; nop ; test bh, ah ; call qword ptr [rax]
0x0000000000188980 : push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call rax
0x00000000001874c4 : push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call rax
0x00000000001aca20 : push rax ; in eax, dx ; cmc ; call qword ptr [rax]
0x0000000000178120 : push rax ; insb byte ptr [rdi], dx ; out dx, al ; call rax
0x00000000001b4d00 : push rax ; jg 0x1b4cfd ; call qword ptr [rdx]
0x00000000001791a3 : push rax ; jge 0x1791a7 ; call qword ptr [rax]
0x0000000000195464 : push rax ; jle 0x195456 ; jmp qword ptr [rdx]
0x0000000000193db0 : push rax ; jmp 0x193db6
0x0000000000179573 : push rax ; jmp qword ptr [eax]
0x00000000001b1f80 : push rax ; jrcxz 0x1b1f7c ; call qword ptr [rdi]
0x00000000001ac1d0 : push rax ; loope 0x1ac1cb ; call qword ptr [rcx]
0x000000000018763b : push rax ; loopne 0x18763e ; call rax
0x000000000002561b : push rax ; mov dword ptr [rdx + 0x54], eax ; ret
0x0000000000028a11 : push rax ; mov dword ptr [rsp + 8], eax ; call r12
0x0000000000029427 : push rax ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000128b76 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000002a3cf : push rax ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000107006 : push rax ; mov rsi, rdx ; call rax
0x0000000000188990 : push rax ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call rax
0x0000000000188988 : push rax ; movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call rax
0x000000000018781b : push rax ; or ah, bh ; call rax
0x0000000000128bdd : push rax ; or al, 0xffffffffffffffb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001247e5 : push rax ; or byte ptr [rax + 1], bh ; ret
0x0000000000021871 : push rax ; or byte ptr [rax], al ; add bl, ch ; or ecx, dword ptr [rax - 1] ; ret 0x9539
0x000000000012e13c : push rax ; or byte ptr [rbp - 0x14438a40], al ; ret 0x1f0f
0x000000000004e6f0 : push rax ; or byte ptr [rcx - 0x77], cl ; push rdi ; or bl, ch ; ret 0x8348
0x000000000004cd55 : push rax ; or byte ptr [rcx - 0x77], cl ; push rdi ; or cl, ch ; jmp rcx
0x0000000000080a7a : push rax ; or dh, dh ; ret 0x7404
0x0000000000080a96 : push rax ; or dh, dh ; ret 0xf04
0x000000000013848c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018711e : push rax ; pop r9 ; clc ; ret 0x6e1f
0x0000000000187fd0 : push rax ; pop rax ; cld ; call rax
0x0000000000187f73 : push rax ; pop rbx ; cld ; push qword ptr [rax + 0x5b] ; cld ; jmp rax
0x0000000000187fc8 : push rax ; pop rcx ; cld ; call rax
0x0000000000187bac : push rax ; pop rdi ; cld ; jmp rsi
0x0000000000187fc0 : push rax ; pop rdx ; cld ; call rax
0x000000000017908f : push rax ; pop rdx ; int1 ; inc dword ptr [rax] ; pop rbp ; int1 ; call qword ptr [rax]
0x0000000000187db4 : push rax ; pop rsp ; cld ; call rax
0x000000000018736b : push rax ; push -5 ; call qword ptr [rax + 0x10fffb82]
0x000000000017957c : push rax ; push 0x6800fff2 ; call qword ptr [rax]
0x000000000017936b : push rax ; push rax ; call qword ptr [rax]
0x0000000000179369 : push rax ; push rax ; push rax ; call qword ptr [rax]
0x00000000001793f3 : push rax ; push rbx ; call qword ptr [rax]
0x0000000000179387 : push rax ; push rcx ; jmp qword ptr [rax]
0x0000000000187fd8 : push rax ; push rdi ; cld ; call rax
0x00000000001793b7 : push rax ; push rdx ; inc dword ptr [rax] ; push rbx ; call qword ptr [rax]
0x0000000000179413 : push rax ; push rsp ; call qword ptr [rax]
0x0000000000187307 : push rax ; push rsp ; sti ; call rax
0x000000000017932b : push rax ; repne ; call qword ptr [rax]
0x00000000001792a7 : push rax ; repne ; inc dword ptr [rax] ; repne ; call qword ptr [rax]
0x000000000003610f : push rax ; ret
0x0000000000005ed8 : push rax ; ret 0x10
0x000000000013463c : push rax ; ret 0x28
0x0000000000005038 : push rax ; ret 0xf
0x00000000001b0e80 : push rax ; ret 0xfff6
0x00000000000b5cb1 : push rax ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000001ab520 : push rax ; sal ebp, cl ; jmp qword ptr [rsi]
0x000000000007d146 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000075aea : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000001031e1 : push rax ; sbb dh, dh ; ret 0x7504
0x0000000000188590 : push rax ; scasb al, byte ptr [rdi] ; cld ; jmp rax
0x0000000000108605 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000019b6ec : push rax ; stc ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001872fc : push rax ; sti ; push qword ptr [rax] ; push rcx ; sti ; call qword ptr [rax]
0x00000000001887a8 : push rax ; stosd dword ptr [rdi], eax ; cld ; jmp rax
0x00000000001879b4 : push rax ; sub eax, 0x2f30fffc ; cld ; call qword ptr [rax]
0x00000000001874cc : push rax ; test al, -3 ; call rax
0x00000000001791c3 : push rax ; xchg ah, bh ; call qword ptr [rax]
0x00000000000f5d1c : push rax ; xchg eax, edi ; dec dword ptr [rcx - 0x75] ; jge 0xf5d2c ; call rbx
0x0000000000188098 : push rax ; xchg esp, edi ; jmp rax
0x000000000007c93d : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x0000000000187ac8 : push rax ; xor eax, 0x3750fffc ; cld ; jmp rax
0x00000000000e4035 : push rbp ; adc byte ptr [rax + 0x63], cl ; ret
0x000000000012d0ed : push rbp ; adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x000000000012d245 : push rbp ; adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x0000000000165136 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000d8551 : push rbp ; add al, -0x73 ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000e4d43 : push rbp ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012450d : push rbp ; add byte ptr [rbx + 0x634801ea], al ; ret 0xd285
0x0000000000028ce8 : push rbp ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x00000000001b0e14 : push rbp ; and esi, esi ; jmp qword ptr [rdx]
0x0000000000179431 : push rbp ; call qword ptr [rax]
0x0000000000179461 : push rbp ; call rax
0x0000000000187de9 : push rbp ; cld ; call qword ptr [rax]
0x0000000000187e69 : push rbp ; cld ; jmp rdx
0x000000000018e869 : push rbp ; cli ; call rsp
0x0000000000189a81 : push rbp ; in eax, dx ; push rsp ; ret 0
0x000000000017945d : push rbp ; inc eax ; push rbp ; call rax
0x00000000001aab4c : push rbp ; int1 ; hlt ; jmp qword ptr [rdx]
0x0000000000001cb1 : push rbp ; je 0x1cdf ; ret
0x000000000018f796 : push rbp ; jmp 0x752614a5
0x0000000000179435 : push rbp ; jmp qword ptr [rax]
0x0000000000179465 : push rbp ; jmp rax
0x0000000000196f24 : push rbp ; jnp 0x196f17 ; jmp qword ptr [rdx]
0x0000000000068e6a : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rbx - 0x76ffffcb], esp ; ret 0x348
0x0000000000108279 : push rbp ; nop ; mov rdx, r14 ; call rax
0x000000000013cf18 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000107f01 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x0000000000081e28 : push rbp ; or dh, dh ; ret 0x7502
0x000000000012f689 : push rbp ; push rbx ; xor ebx, ebx ; call 0x12b926
0x0000000000105562 : push rbp ; sbb byte ptr [rcx - 0x75], al ; or r14b, r14b ; ret 0x7508
0x00000000001082fa : push rbp ; sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x00000000000025be : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x255b ; loop 0x25a6 ; ret 0x23cb
0x00000000000fd447 : push rbp ; sub al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000001057e5 : push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000025147 : push rbp ; test al, -0x18 ; ret 0xffa2
0x0000000000192624 : push rbp ; test ch, dl ; jmp qword ptr [rdx]
0x000000000010b7e0 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000008c94a : push rbp ; xor rax, rax ; ret
0x00000000000d5698 : push rbx ; adc byte ptr [rax + 0x39], cl ; ret 0x574
0x00000000000004b5 : push rbx ; add al, 4 ; ret 0x6080
0x00000000000f8b31 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x0000000000033973 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001040fc : push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x000000000012f650 : push rbx ; call 0x12b8f3
0x00000000001793bd : push rbx ; call qword ptr [rax]
0x00000000001793e9 : push rbx ; call rax
0x0000000000002043 : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000759b2 : push rbx ; je 0x75a16 ; pop rbp ; pop r12 ; ret
0x00000000000c327d : push rbx ; je 0xc3250 ; mov eax, 1 ; ret
0x00000000000c327c : push rbx ; je 0xc3251 ; mov eax, 1 ; ret
0x00000000001793c1 : push rbx ; jmp qword ptr [rax]
0x00000000001793ed : push rbx ; jmp rax
0x0000000000196a84 : push rbx ; jns 0x196a77 ; jmp qword ptr [rdx]
0x00000000000a401c : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000179fd5 : push rbx ; ljmp ptr [rcx - 2] ; call qword ptr [rcx]
0x000000000009eb62 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000006d8c5 : push rbx ; or al, 0xfffffffffffffff6 ; ret 0x7404
0x000000000006e002 : push rbx ; or al, 0xfffffffffffffff6 ; ret 0xf04
0x00000000000f6092 : push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000007beae : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00000000001793f1 : push rbx ; push rax ; push rbx ; call qword ptr [rax]
0x0000000000037b8c : push rbx ; ret
0x0000000000187305 : push rbx ; sti ; push rax ; push rsp ; sti ; call rax
0x000000000017673c : push rbx ; xchg eax, edx ; jae 0x17671b ; push rsi ; pop rdx ; je 0x176710 ; ret 0xacfc
0x00000000001af37c : push rbx ; xchg eax, esp ; cmc ; jmp qword ptr [rdx]
0x00000000000d825a : push rbx ; xor al, 0x39 ; ror byte ptr [rdi], 1 ; ret 0x538b
0x0000000000032019 : push rbx ; xor byte ptr [rcx], bh ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012f68a : push rbx ; xor ebx, ebx ; call 0x12b925
0x00000000001247cd : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x000000000018d895 : push rcx ; add al, byte ptr [rax] ; and al, 0x5e ; clc ; jmp rsp
0x000000000008c1fd : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000097822 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000018d588 : push rcx ; and edi, eax ; call rsp
0x00000000001759c5 : push rcx ; call qword ptr [rsi]
0x00000000000b42bb : push rcx ; fdiv qword ptr [rax] ; add byte ptr [rcx + 0x29], cl ; ret
0x00000000001adfd4 : push rcx ; jl 0x1adfcf ; jmp qword ptr [rdx]
0x0000000000179389 : push rcx ; jmp qword ptr [rax]
0x0000000000001b28 : push rcx ; jns 0x1b35 ; ret
0x0000000000192c94 : push rcx ; mov ch, dl ; jmp qword ptr [rdx]
0x00000000001873f4 : push rcx ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; jmp qword ptr [rcx]
0x0000000000178eb9 : push rcx ; out dx, eax ; call qword ptr [rax + 0x10ffef52]
0x00000000000e44eb : push rcx ; push rax ; cli ; dec dword ptr [rax - 0x77] ; jmp 0x4cd0ce47
0x0000000000179385 : push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x000000000019d0b6 : push rcx ; ret
0x0000000000187301 : push rcx ; sti ; call qword ptr [rax]
0x00000000001b1131 : push rcx ; sti ; call rsi
0x0000000000187420 : push rcx ; stosd dword ptr [rdi], eax ; std ; jmp rcx
0x00000000000a1a22 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000009ffb2 : push rdi ; adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000000c5548 : push rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000a1b80 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a41f6 : push rdi ; adc byte ptr [rbp + rcx*4 + 0x4e], cl ; adc byte ptr [rcx + 0x39], al ; ret
0x00000000000a1858 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a186a : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x0000000000097504 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000009fdfa : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000014dc19 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000097474 : push rdi ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000097464 : push rdi ; add al, 0x48 ; mov eax, edi ; ret
0x000000000002f7ec : push rdi ; add al, 0x72 ; or bl, dh ; ret
0x00000000000a182a : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009f07c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000009febc : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000a1888 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000001b7491 : push rdi ; call qword ptr [rcx]
0x0000000000145068 : push rdi ; clc ; ret
0x0000000000187e59 : push rdi ; cld ; call qword ptr [rdx]
0x0000000000187fd9 : push rdi ; cld ; call rax
0x0000000000187f99 : push rdi ; cld ; jmp rax
0x00000000001451e0 : push rdi ; cld ; ret
0x0000000000145d07 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014d4f9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000128bf5 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00000000000ae148 : push rdi ; fild word ptr [rcx + 0x29] ; ret
0x00000000000365c9 : push rdi ; fisttp dword ptr [rdi] ; ret
0x00000000000868fa : push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x000000000014d479 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000189ab9 : push rdi ; in eax, dx ; call rsp
0x000000000014d2ca : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001a1d54 : push rdi ; jge 0x1a1d4b ; jmp qword ptr [rdx]
0x0000000000194199 : push rdi ; jmp 0x19419d
0x000000000018fab7 : push rdi ; jmp 0xffffffffc82617c4
0x000000000014d35a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001183a6 : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000004e6f4 : push rdi ; or bl, ch ; ret 0x8348
0x0000000000035b0f : push rdi ; or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000000000a18cc : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a190a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a18aa : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000b0c25 : push rdi ; or byte ptr [rbp - 0x3c], dh ; ret
0x0000000000039c0a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000003847a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000131f22 : push rdi ; or byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x0000000000038481 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00000000000741c0 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000004cd59 : push rdi ; or cl, ch ; jmp rcx
0x000000000009f260 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000000a00b0 : push rdi ; or eax, 0x1d478d48 ; ret
0x0000000000072045 : push rdi ; pushfq ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x7200d
0x00000000000c56d7 : push rdi ; ret
0x00000000000d52ee : push rdi ; ret 0
0x0000000000161ffe : push rdi ; ret 0xff3
0x000000000003d69a : push rdi ; ret 0xffef
0x000000000012ef65 : push rdi ; sbb bl, dh ; ret
0x000000000012ef90 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x00000000001033e9 : push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000f61f2 : push rdi ; sbb byte ptr [rcx - 0xa], al ; ret 0x7401
0x00000000000355ac : push rdi ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000145f07 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000190381 : push rdi ; std ; jmp qword ptr [rax]
0x000000000014572a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000145b07 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000128c3d : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00000000000d0ab6 : push rdi ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000000f7a0c : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a1b60 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000008b36b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000e4053 : push rdx ; adc byte ptr [rax + 0x39], cl ; ret 0x930f
0x000000000018d8e5 : push rdx ; add al, byte ptr [rax] ; mov ah, 0x61 ; clc ; jmp rsp
0x0000000000059c5a : push rdx ; add byte ptr ss:[rsp + rax*2 - 0x75], ah ; and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x0000000000118b0e : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000001793ad : push rdx ; call rax
0x0000000000188333 : push rdx ; cmp esp, 0xfc8172ff ; jmp rdx
0x00000000000b42e2 : push rdx ; idiv bh ; dec dword ptr [rcx + 0x29] ; ret
0x00000000001793b9 : push rdx ; inc dword ptr [rax] ; push rbx ; call qword ptr [rax]
0x00000000001793a9 : push rdx ; inc eax ; push rdx ; call rax
0x0000000000179081 : push rdx ; int1 ; inc eax ; push rsp ; int1 ; call rax
0x0000000000179399 : push rdx ; jmp rax
0x000000000019638c : push rdx ; jno 0x19637f ; jmp qword ptr [rdx]
0x000000000018863c : push rdx ; mov al, -4 ; jmp rdx
0x0000000000179d7c : push rdx ; mov edx, 0xd9fcfff3 ; jmp rsp
0x0000000000188144 : push rdx ; mov esp, edi ; jmp rdx
0x0000000000087686 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x0000000000178e45 : push rdx ; out dx, eax ; call qword ptr [rax + 0x10ffef52]
0x0000000000178eb1 : push rdx ; out dx, eax ; call qword ptr [rax - 0x2f0010ae]
0x0000000000178e49 : push rdx ; out dx, eax ; call qword ptr [rax]
0x0000000000178eb5 : push rdx ; out dx, eax ; call rax
0x0000000000178e75 : push rdx ; out dx, eax ; inc dword ptr [rax] ; push rdx ; out dx, eax ; call qword ptr [rax]
0x0000000000178ea1 : push rdx ; out dx, eax ; push qword ptr [rax] ; push rdx ; out dx, eax ; call qword ptr [rax]
0x00000000001ac054 : push rdx ; pop rcx ; cmc ; jmp qword ptr [rdx]
0x0000000000117d02 : push rdx ; ret
0x000000000012a832 : push rdx ; ret 5
0x00000000000b348a : push rdx ; sbb dword ptr [rcx], esi ; add byte ptr [rcx], dh ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000018ef29 : push rdx ; sti ; call rsp
0x0000000000001b0d : push rdx ; test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x0000000000160c44 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000007512d : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000014deb1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000014df21 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000009da35 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000014de41 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000009d9d3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000160c59 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000145192 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000187fa1 : push rsi ; cld ; call rax
0x0000000000187de5 : push rsi ; cld ; jmp qword ptr [rax + 0x10fffc55]
0x0000000000187bb4 : push rsi ; cld ; jmp rsi
0x0000000000187f21 : push rsi ; cld ; jmp rsp
0x0000000000145901 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000145535 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000145715 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001458f5 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000145355 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000187e65 : push rsi ; cld ; push qword ptr [rdx + 0x55] ; cld ; jmp rdx
0x0000000000187f1d : push rsi ; cld ; push qword ptr [rsi + rdx*2 - 4] ; jmp rsp
0x00000000001772e0 : push rsi ; cli ; push 0x6e ; ja 0x17726f ; ret 0x48f
0x00000000001645a6 : push rsi ; cmc ; sub eax, edx ; ret
0x0000000000164596 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000189a91 : push rsi ; in eax, dx ; jmp qword ptr [rbx + rax*8]
0x0000000000179089 : push rsi ; int1 ; jmp rax
0x0000000000164566 : push rsi ; int1 ; sub eax, edx ; ret
0x0000000000106fe2 : push rsi ; je 0x106ff8 ; mov eax, 7 ; ret
0x0000000000194121 : push rsi ; jmp 0x194125
0x0000000000194139 : push rsi ; jmp 0x19413d
0x00000000000e506b : push rsi ; js 0xe50bf ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000e59c8 : push rsi ; js 0xe5a1c ; mov dword ptr [rdi + 0x100], edx ; ret
0x0000000000164556 : push rsi ; lock sub eax, edx ; ret
0x00000000001885d8 : push rsi ; lodsd eax, dword ptr [rsi] ; cld ; jmp rsi
0x0000000000050210 : push rsi ; or al, 0xffffffffffffff85 ; sal byte ptr [rbp + 5], -0xa ; ret 0x7450
0x00000000000928bd : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000b0c22 : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x3c], dh ; ret
0x000000000005b91d : push rsi ; or byte ptr [rdi + rcx - 0x4a], al ; cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000055125 : push rsi ; or byte ptr [rdi + rcx - 0x4a], al ; cmp byte ptr [rcx - 0x7d], cl ; ret
0x0000000000176740 : push rsi ; pop rdx ; je 0x17670c ; ret 0xacfc
0x00000000000363af : push rsi ; ret
0x00000000000de926 : push rsi ; ret 0x7408
0x00000000000de935 : push rsi ; ret 0x7420
0x0000000000098bfa : push rsi ; ret 0x7518
0x0000000000075816 : push rsi ; ret 0xffff
0x000000000012137f : push rsi ; ret 5
0x00000000001304aa : push rsi ; sbb byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x000000000019b854 : push rsi ; sti ; in eax, dx ; jmp qword ptr [rdx]
0x000000000010e25e : push rsi ; sub eax, dword ptr [rax] ; add ecx, ebp ; ret
0x0000000000164576 : push rsi ; sub eax, edx ; ret
0x00000000001880e0 : push rsi ; xchg ah, bh ; jmp rsi
0x00000000000f0947 : push rsi ; xor ax, ax ; ret
0x0000000000160c6e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018d448 : push rsp ; adc bh, al ; call rsp
0x00000000001b02e4 : push rsp ; adc dword ptr [rdx], eax ; add al, bh ; test dh, dh ; jmp rdx
0x00000000000503e2 : push rsp ; add cl, byte ptr es:[rax + 1] ; ret 0x8348
0x00000000001a45ad : push rsp ; add dword ptr [rax], eax ; and byte ptr [rbx], ch ; jmp rdx
0x000000000018af15 : push rsp ; add dword ptr [rax], eax ; lock ; jmp rsp
0x00000000001a72e4 : push rsp ; add dword ptr [rcx], 0xf4ca3800 ; jmp qword ptr [rcx]
0x000000000018f173 : push rsp ; add qword ptr [r8], r8 ; xor al, 0xffffffffffffffe1 ; std ; jmp rsp
0x0000000000107e7d : push rsp ; and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000107efd : push rsp ; and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000102d95 : push rsp ; and al, 0x18 ; mov edi, 0x2000004 ; call rax
0x0000000000102c98 : push rsp ; and al, 0x18 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000be782 : push rsp ; and al, 0x28 ; call rax
0x00000000000813ce : push rsp ; and al, 0x30 ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x00000000000f2fa6 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000036870 : push rsp ; and al, 0xfffffffffffffff0 ; mov dword ptr [rdi], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000039de0 : push rsp ; and al, 0xfffffffffffffff8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000039d9a : push rsp ; and al, 0xfffffffffffffffc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000e4eb5 : push rsp ; and al, 4 ; jmp 0xe4e80
0x00000000001a12e4 : push rsp ; and dword ptr [rcx], eax ; add al, bh ; ret
0x0000000000179415 : push rsp ; call qword ptr [rax]
0x000000000017940d : push rsp ; call rax
0x000000000018d859 : push rsp ; clc ; call rsp
0x0000000000187fad : push rsp ; cld ; inc dword ptr [rax + 0x54] ; cld ; jmp rax
0x0000000000187e31 : push rsp ; cld ; jmp qword ptr [rdx]
0x0000000000187fb1 : push rsp ; cld ; jmp rax
0x000000000018e7d0 : push rsp ; cli ; inc esp ; ret 2
0x00000000001888f3 : push rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; push qword ptr [rdi - 4] ; jmp rsp
0x0000000000189150 : push rsp ; fucomp st(2) ; jmp rsp
0x0000000000179085 : push rsp ; int1 ; call rax
0x00000000001a140c : push rsp ; jae 0x1a1403 ; jmp qword ptr [rdx]
0x0000000000188e88 : push rsp ; jb 0x188e78 ; call rsp
0x00000000000c3046 : push rsp ; jne 0xc2fd3 ; mov eax, 0x7d00 ; ret
0x0000000000106634 : push rsp ; lea ebp, dword ptr [rbx] ; add al, ch ; ret
0x0000000000097b4b : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000018a053 : push rsp ; lock add byte ptr [rax], al ; lahf ; out dx, al ; jmp rsp
0x000000000018820c : push rsp ; mov ah, bh ; jmp rsp
0x0000000000128377 : push rsp ; mov eax, 1 ; ret
0x000000000010495b : push rsp ; nop dword ptr [rax] ; sub eax, r8d ; ret
0x00000000001a8ee4 : push rsp ; popfq ; add dword ptr [rax], eax ; fdiv dword ptr [rdx] ; cmc ; jmp qword ptr [rcx]
0x0000000000179411 : push rsp ; push rax ; push rsp ; call qword ptr [rax]
0x0000000000189ab8 : push rsp ; push rdi ; in eax, dx ; call rsp
0x0000000000187f1b : push rsp ; push rsi ; cld ; push qword ptr [rsi + rdx*2 - 4] ; jmp rsp
0x0000000000198de4 : push rsp ; pushfq ; add byte ptr [rax], al ; js 0x198dc2 ; in eax, dx ; call rcx
0x000000000002561e : push rsp ; ret
0x0000000000189a83 : push rsp ; ret 0
0x00000000001ab3e4 : push rsp ; ret 1
0x000000000018e7b4 : push rsp ; ret 2
0x000000000012a828 : push rsp ; ret 5
0x00000000001ac7e4 : push rsp ; salc ; add dword ptr [rax], eax ; clc ; out -0xb, al ; call qword ptr [rax]
0x0000000000188704 : push rsp ; scasd eax, dword ptr [rdi] ; cld ; jmp rsp
0x0000000000187309 : push rsp ; sti ; call rax
0x00000000001a86e4 : push rsp ; xchg eax, ebp ; add dword ptr [rax], eax ; test al, 0x27 ; cmc ; jmp qword ptr [rcx]
0x00000000001a87e4 : push rsp ; xchg eax, esi ; add dword ptr [rax], eax ; cwde ; sub ch, dh ; jmp qword ptr [rcx]
0x00000000001af40c : push rsp ; xchg eax, esi ; cmc ; jmp qword ptr [rdx]
0x000000000013a3b0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000198de5 : pushfq ; add byte ptr [rax], al ; js 0x198dc1 ; in eax, dx ; call rcx
0x0000000000072046 : pushfq ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x7200c
0x000000000018aa0c : pushfq ; add dword ptr [r8], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; test al, -0x11 ; jmp rsp
0x00000000001a8df5 : pushfq ; add dword ptr [rax], eax ; mov byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a8dc5 : pushfq ; add dword ptr [rax], eax ; pop rax ; xor ch, dh ; jmp qword ptr [rcx]
0x00000000001a8dad : pushfq ; add dword ptr [rax], eax ; xor bpl, sil ; jmp qword ptr [rcx]
0x00000000001a302c : pushfq ; add dword ptr ds:[rax], eax ; jo 0x1a3034 ; int1 ; jmp qword ptr [rcx]
0x000000000018d6d4 : pushfq ; add r8b, byte ptr [rax] ; jnp 0x18d71d ; clc ; jmp rsp
0x000000000004563c : pushfq ; and al, 0xffffffffffffff90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x0000000000179205 : pushfq ; cld ; jmp qword ptr [rax + 0x10fffc9d]
0x000000000018e3d4 : pushfq ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, byte ptr [rax] ; adc al, -0x35 ; stc ; call rsp
0x000000000019cd2c : pushfq ; fild dword ptr [rax] ; add byte ptr [rax + 0x6c], al ; out dx, al ; call qword ptr [rsi]
0x00000000001b5d2c : pushfq ; imul eax, dword ptr [rdx], 0 ; jo 0x1b5d40 ; sti ; jmp qword ptr [rdx]
0x00000000001b5b2c : pushfq ; imul eax, dword ptr [rdx], 0xf79a5000 ; call qword ptr [rdx]
0x000000000019767c : pushfq ; jg 0x19766f ; jmp qword ptr [rdx]
0x0000000000189894 : pushfq ; mov bl, 0 ; add bh, bl ; or ah, ch ; jmp rsp
0x000000000018e864 : pushfq ; mov dword ptr [rdx], 0xfa55f400 ; call rsp
0x000000000007932c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000018ba00 : pushfq ; mov ebx, esi ; jmp rsp
0x000000000013b0b0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000139064 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x000000000019ee51 : pushfq ; out dx, eax ; call qword ptr [rdi]
0x0000000000187c28 : pushfq ; pop rdi ; cld ; ljmp ptr [rdi + rbx*2] ; cld ; call rdx
0x0000000000117ca0 : pushfq ; ret
0x0000000000048dd0 : pushfq ; ret 0x37
0x00000000001ab42c : pushfq ; ret 1
0x000000000018e7cc : pushfq ; ret 2
0x000000000018b9fc : pushfq ; sahf ; add dword ptr [rax], eax ; pushfq ; mov ebx, esi ; jmp rsp
0x00000000000b7d1c : rcl byte ptr [rax + 0x29000001], cl ; ret
0x00000000000b3051 : rcl byte ptr [rax + 0x39000001], cl ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000179368 : rcl byte ptr [rax - 0xe] ; push rax ; push rax ; call qword ptr [rax]
0x0000000000179464 : rcl byte ptr [rbp - 0xe] ; jmp rax
0x0000000000179460 : rcl byte ptr [rbp - 0xe], -1 ; rcl byte ptr [rbp - 0xe] ; jmp rax
0x00000000001793ec : rcl byte ptr [rbx - 0xe] ; jmp rax
0x0000000000179084 : rcl byte ptr [rcx + rsi*8 - 1], -0x30 ; push rsi ; int1 ; jmp rax
0x0000000000178eb8 : rcl byte ptr [rcx - 0x11] ; call qword ptr [rax + 0x10ffef52]
0x0000000000179384 : rcl byte ptr [rcx - 0xe], -1 ; lock push rcx ; jmp qword ptr [rax]
0x000000000019c5f0 : rcl byte ptr [rdi] ; out dx, al ; call qword ptr [rbx]
0x0000000000179410 : rcl byte ptr [rdx + rsi*8 - 1] ; lock push rsp ; call qword ptr [rax]
0x00000000001793b0 : rcl byte ptr [rdx - 0xe] ; jmp rax
0x00000000001793ac : rcl byte ptr [rdx - 0xe], -1 ; rcl byte ptr [rdx - 0xe] ; jmp rax
0x0000000000179088 : rcl byte ptr [rsi - 0xf] ; jmp rax
0x00000000001ab490 : rcl dl, -0xb ; jmp qword ptr [rsi]
0x0000000000081743 : rcl dword ptr [rip + 0x33da7f], -0x7d ; ret 0x8b01
0x000000000017673f : rcl dword ptr [rsi + 0x5a], cl ; je 0x17670d ; ret 0xacfc
0x000000000017a33c : rcl dword ptr [rsi - 0x6922000c], cl ; hlt ; jmp rdi
0x000000000017673b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x176711 ; ret 0xacfc
0x00000000001a7890 : rcr ah ; hlt ; jmp qword ptr [rcx]
0x0000000000036720 : rcr bl, 0x3f ; fsubp st(1) ; ret
0x0000000000038487 : rcr byte ptr [rbp + 0x5b] ; ret
0x000000000001ff72 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000010b852 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00000000000743ed : rcr byte ptr [rbx + 0x48], cl ; div ebp ; pop rbp ; pop r12 ; ret
0x000000000005360c : rcr byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000492f0 : rcr byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000005e3dc : rcr byte ptr [rbx + 0x5d] ; ret
0x00000000000717c9 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000245be : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000003c39e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000019d4ac : rcr byte ptr [rbx - 0x12] ; jmp qword ptr [rdx]
0x00000000000d281f : rcr byte ptr [rbx - 0x7d] ; loopne 0xd282c ; pop rbp ; ret
0x00000000000489f4 : rcr byte ptr [rbx - 9], -0x28 ; pop rbp ; ret
0x0000000000176b5d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000187ba8 : rcr byte ptr [rdi - 4], -1 ; push rax ; pop rdi ; cld ; jmp rsi
0x000000000018fc00 : rcr byte ptr [rdx - 0x17] ; call qword ptr [rax]
0x0000000000187c30 : rcr byte ptr [rsi - 4], cl ; inc dword ptr [rdx + 0x65] ; cld ; call rdx
0x0000000000187b0c : rcr byte ptr [rsp + rdi*8] ; jmp qword ptr [rax]
0x00000000001a79b0 : rcr ch ; hlt ; call rbx
0x00000000001a7950 : rcr ch, -0xc ; jmp qword ptr [rcx]
0x00000000000384b9 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000118796 : rcr dword ptr [rcx], -0x40 ; ret
0x00000000001a4a41 : rep ; jmp qword ptr [rbx]
0x000000000014594e : rep ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000164582 : rep ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000001792ad : repne ; call qword ptr [rax]
0x00000000001792dd : repne ; call rax
0x00000000001792a9 : repne ; inc dword ptr [rax] ; repne ; call qword ptr [rax]
0x0000000000179309 : repne ; inc dword ptr [rax] ; repne ; jmp qword ptr [rax]
0x00000000001792d9 : repne ; inc eax ; repne ; call rax
0x0000000000179301 : repne ; inc eax ; repne ; jmp rax
0x00000000001792b1 : repne ; jmp qword ptr [rax]
0x00000000001792a1 : repne ; jmp rax
0x0000000000145b4e : repne ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000164572 : repne ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000179329 : repne ; push rax ; repne ; call qword ptr [rax]
0x0000000000000937 : ret
0x000000000000ed60 : ret 0
0x0000000000005ed9 : ret 0x10
0x000000000002ef2b : ret 0x100
0x000000000002e7d8 : ret 0x101
0x00000000000816da : ret 0x1014
0x00000000000007bf : ret 0x102
0x000000000006e05f : ret 0x107
0x0000000000034a0a : ret 0x1074
0x0000000000041be4 : ret 0x1075
0x0000000000066273 : ret 0x11
0x0000000000080d52 : ret 0x110
0x000000000003845c : ret 0x114d
0x00000000000be404 : ret 0x1174
0x00000000000e46b9 : ret 0x11e8
0x00000000000a60b9 : ret 0x11e9
0x000000000000b321 : ret 0x12
0x000000000009924a : ret 0x13
0x0000000000048ff8 : ret 0x1345
0x00000000000db6e8 : ret 0x1376
0x000000000004947b : ret 0x13eb
0x0000000000033376 : ret 0x14
0x000000000003c338 : ret 0x1413
0x000000000008922d : ret 0x144
0x00000000000e1b83 : ret 0x1472
0x00000000000da12b : ret 0x1476
0x00000000000482e9 : ret 0x1477
0x0000000000097b89 : ret 0x147c
0x000000000005488b : ret 0x148
0x00000000000e3c9f : ret 0x148d
0x000000000007c952 : ret 0x149
0x00000000000ed048 : ret 0x14c
0x00000000000e0b5a : ret 0x15
0x000000000002a892 : ret 0x1565
0x00000000000363e0 : ret 0x1575
0x000000000008040b : ret 0x1589
0x000000000000a310 : ret 0x16
0x000000000003d75f : ret 0x1676
0x000000000003c536 : ret 0x1677
0x000000000006060f : ret 0x17
0x00000000000fbff3 : ret 0x17e8
0x00000000000b0513 : ret 0x17e9
0x000000000008c9b5 : ret 0x1876
0x0000000000047207 : ret 0x18b9
0x00000000000c82d1 : ret 0x18eb
0x000000000008c655 : ret 0x1974
0x00000000000c4d72 : ret 0x19eb
0x000000000000b8e8 : ret 0x1a
0x0000000000097164 : ret 0x1a75
0x00000000001770ba : ret 0x1ad4
0x000000000017584d : ret 0x1b49
0x00000000000fc822 : ret 0x1b72
0x00000000000ebe32 : ret 0x1b75
0x0000000000050bc3 : ret 0x1b8
0x0000000000001bf1 : ret 0x1bb7
0x0000000000022034 : ret 0x1be
0x000000000004c6fe : ret 0x1beb
0x0000000000003467 : ret 0x1bf9
0x0000000000170d40 : ret 0x1d4
0x00000000001714d8 : ret 0x1d5
0x000000000008c556 : ret 0x1d74
0x00000000000021c9 : ret 0x1dd4
0x00000000000c5b9a : ret 0x1e73
0x0000000000096599 : ret 0x1e75
0x0000000000026eb8 : ret 0x1f0f
0x00000000000c5be9 : ret 0x1f73
0x00000000000b7eb1 : ret 0x1fbf
0x000000000002ef3a : ret 0x200
0x00000000000e0761 : ret 0x2041
0x00000000000877cd : ret 0x2074
0x0000000000007298 : ret 0x21
0x0000000000035fae : ret 0x2148
0x00000000000f28e9 : ret 0x21e8
0x000000000008775b : ret 0x2275
0x0000000000087888 : ret 0x2288
0x000000000000e870 : ret 0x23
0x0000000000162162 : ret 0x2373
0x00000000000977fa : ret 0x2374
0x00000000000d99af : ret 0x237e
0x00000000000025c7 : ret 0x23cb
0x000000000016fd48 : ret 0x24
0x00000000000027b8 : ret 0x244f
0x00000000000a81b9 : ret 0x24eb
0x0000000000130a8a : ret 0x25
0x00000000000f88dc : ret 0x25eb
0x00000000000da061 : ret 0x267e
0x00000000000f89ad : ret 0x26eb
0x0000000000089846 : ret 0x2774
0x00000000001345ed : ret 0x28
0x000000000000054f : ret 0x2800
0x00000000000993e5 : ret 0x280f
0x000000000008c9a5 : ret 0x2876
0x0000000000136e9a : ret 0x287f
0x00000000000b5cba : ret 0x28f5
0x0000000000060989 : ret 0x29
0x00000000000aead8 : ret 0x2941
0x00000000000a7d22 : ret 0x2944
0x00000000000d878f : ret 0x2945
0x000000000003e720 : ret 0x2948
0x000000000004433f : ret 0x2949
0x0000000000093a05 : ret 0x294c
0x0000000000079ba6 : ret 0x294d
0x0000000000038be4 : ret 0x2973
0x000000000005e512 : ret 0x2975
0x0000000000124da2 : ret 0x29a0
0x0000000000117d41 : ret 0x2a
0x0000000000001b15 : ret 0x2a63
0x0000000000110ba2 : ret 0x2ae2
0x0000000000102bda : ret 0x2b
0x000000000010b1da : ret 0x2b34
0x00000000000b25de : ret 0x2b3c
0x0000000000024d46 : ret 0x2b49
0x000000000010f0ad : ret 0x2b5f
0x0000000000127ff2 : ret 0x2b74
0x00000000000a25d2 : ret 0x2b77
0x000000000010b8fa : ret 0x2b7e
0x0000000000058eab : ret 0x2bb
0x00000000000f2ba4 : ret 0x2c
0x000000000010192a : ret 0x2c14
0x00000000000fb9a2 : ret 0x2c34
0x0000000000083921 : ret 0x2c75
0x00000000000f934a : ret 0x2cb8
0x00000000000f11a2 : ret 0x2cdc
0x000000000003f9b1 : ret 0x2ce9
0x00000000000c1a92 : ret 0x2d0
0x000000000005e3a4 : ret 0x2d75
0x00000000000f1d64 : ret 0x2d77
0x000000000007de45 : ret 0x2e66
0x00000000000d4b6c : ret 0x2e9
0x00000000000fabc8 : ret 0x2eb
0x0000000000005b58 : ret 0x2f
0x00000000000868fe : ret 0x2f74
0x00000000000eb56b : ret 0x2fe8
0x000000000007ed98 : ret 0x2fe9
0x00000000000b0150 : ret 0x30
0x00000000000c0c3a : ret 0x3016
0x00000000000be362 : ret 0x303c
0x0000000000001b84 : ret 0x306a
0x00000000000bd24a : ret 0x307d
0x00000000000b3802 : ret 0x30d0
0x00000000000b320a : ret 0x30ec
0x000000000004a4a7 : ret 0x31
0x000000000011b2e7 : ret 0x3108
0x000000000006056c : ret 0x3145
0x0000000000126617 : ret 0x3148
0x000000000012624d : ret 0x314c
0x00000000000e4137 : ret 0x3173
0x00000000000fbad9 : ret 0x31e8
0x00000000000ea139 : ret 0x31e9
0x000000000004c59a : ret 0x31eb
0x0000000000092c56 : ret 0x32
0x0000000000071373 : ret 0x3275
0x00000000000587da : ret 0x32e9
0x000000000008347c : ret 0x33
0x00000000000872a2 : ret 0x337c
0x0000000000086496 : ret 0x33b6
0x0000000000071be1 : ret 0x34
0x0000000000097b69 : ret 0x347c
0x0000000000057d3a : ret 0x348
0x000000000007c9aa : ret 0x3486
0x0000000000086908 : ret 0x3574
0x0000000000052d11 : ret 0x36
0x000000000006f3c7 : ret 0x3675
0x0000000000048dd1 : ret 0x37
0x0000000000046d5c : ret 0x37aa
0x00000000000ec3d3 : ret 0x37e8
0x0000000000033eb7 : ret 0x38
0x000000000017699a : ret 0x3827
0x00000000000f613a : ret 0x3845
0x000000000010acf5 : ret 0x3875
0x000000000008c995 : ret 0x3876
0x000000000010ae2b : ret 0x3877
0x0000000000175026 : ret 0x38ae
0x000000000006f6df : ret 0x38b
0x0000000000037bae : ret 0x38d4
0x0000000000050ce2 : ret 0x38e8
0x000000000004786b : ret 0x3901
0x0000000000114825 : ret 0x3904
0x000000000002e8ca : ret 0x3922
0x0000000000118987 : ret 0x3941
0x00000000000d942d : ret 0x3944
0x00000000000613d7 : ret 0x3945
0x000000000003e9ab : ret 0x3948
0x000000000002ebb2 : ret 0x3949
0x00000000001050d0 : ret 0x394c
0x0000000000007238 : ret 0x3a
0x00000000000a1d92 : ret 0x3a01
0x000000000016214b : ret 0x3a73
0x0000000000031bc0 : ret 0x3ae8
0x0000000000019311 : ret 0x3b
0x000000000005bd89 : ret 0x3b01
0x00000000000d9190 : ret 0x3b42
0x000000000002c56a : ret 0x3b48
0x0000000000128062 : ret 0x3b74
0x00000000000f2c03 : ret 0x3b8
0x0000000000103c94 : ret 0x3bf
0x00000000000c5146 : ret 0x3c01
0x0000000000087741 : ret 0x3c75
0x00000000000e03f2 : ret 0x3d
0x0000000000036050 : ret 0x3d75
0x00000000000243a2 : ret 0x3d83
0x0000000000046e47 : ret 0x3dbe
0x000000000004fb6d : ret 0x3de8
0x00000000000a608d : ret 0x3de9
0x00000000000af376 : ret 0x3e89
0x0000000000070c3b : ret 0x3f7
0x00000000000242ce : ret 0x3f74
0x00000000000b1eb7 : ret 0x400
0x00000000000d484a : ret 0x4001
0x00000000000d5191 : ret 0x402
0x00000000000009f5 : ret 0x4021
0x00000000000e7df6 : ret 0x403c
0x000000000002280a : ret 0x4101
0x0000000000118b12 : ret 0x4102
0x0000000000064b75 : ret 0x4104
0x000000000004a1f8 : ret 0x4108
0x00000000000207ab : ret 0x4110
0x00000000000cff88 : ret 0x4118
0x00000000000c68f6 : ret 0x4164
0x00000000000895a0 : ret 0x4166
0x00000000000256de : ret 0x41c3
0x00000000001142b9 : ret 0x41e8
0x00000000000874ca : ret 0x4201
0x00000000000b2083 : ret 0x4240
0x000000000009898a : ret 0x4266
0x00000000000d9559 : ret 0x428b
0x00000000000b2ea2 : ret 0x428d
0x00000000000df3c1 : ret 0x42c7
0x000000000006125a : ret 0x439
0x00000000000ee1c0 : ret 0x43f6
0x0000000000070417 : ret 0x4401
0x00000000000c26c5 : ret 0x4408
0x0000000000000888 : ret 0x440c
0x0000000000000456 : ret 0x4412
0x000000000012ea38 : ret 0x4489
0x0000000000124522 : ret 0x448b
0x0000000000029e05 : ret 0x44c7
0x0000000000024829 : ret 0x44f6
0x00000000000507e7 : ret 0x4501
0x0000000000130cec : ret 0x4502
0x00000000000d93b2 : ret 0x4504
0x00000000000adbce : ret 0x4505
0x00000000000d87bd : ret 0x4510
0x00000000000eeb70 : ret 0x4574
0x00000000000eb3fd : ret 0x4576
0x00000000000c6570 : ret 0x45e9
0x00000000000cc3bf : ret 0x460f
0x00000000000a2a27 : ret 0x4675
0x00000000000adbf6 : ret 0x4701
0x0000000000175b24 : ret 0x474c
0x00000000000bce6b : ret 0x4775
0x0000000000092195 : ret 0x4788
0x00000000000c19c3 : ret 0x47e8
0x00000000000278a0 : ret 0x4801
0x0000000000027b4e : ret 0x4802
0x00000000000509e2 : ret 0x4803
0x0000000000027905 : ret 0x4804
0x000000000009274d : ret 0x4805
0x000000000002845a : ret 0x4806
0x00000000000feee2 : ret 0x4807
0x0000000000021828 : ret 0x4808
0x00000000000fed42 : ret 0x4809
0x00000000000ff002 : ret 0x480a
0x00000000000feba2 : ret 0x480b
0x00000000000b119e : ret 0x480e
0x0000000000039a66 : ret 0x4810
0x000000000002bfa0 : ret 0x4811
0x000000000012acf3 : ret 0x4812
0x00000000000fcc3d : ret 0x4814
0x0000000000081d0e : ret 0x4817
0x00000000000cd6c0 : ret 0x481e
0x00000000000b9573 : ret 0x4830
0x00000000000979bd : ret 0x4840
0x0000000000021f55 : ret 0x4847
0x00000000000c1b00 : ret 0x4864
0x0000000000036095 : ret 0x4866
0x00000000000a957e : ret 0x4890
0x00000000000f1810 : ret 0x48b
0x0000000000126ea4 : ret 0x48bf
0x000000000008957f : ret 0x48c3
0x000000000003cbc4 : ret 0x48d
0x00000000000234f1 : ret 0x48e9
0x00000000001772e6 : ret 0x48f
0x000000000007e4d5 : ret 0x48f0
0x000000000002a854 : ret 0x4901
0x0000000000092bb1 : ret 0x4902
0x0000000000035b5d : ret 0x4903
0x0000000000025d55 : ret 0x4904
0x0000000000125d85 : ret 0x4907
0x000000000004de85 : ret 0x4908
0x00000000000ac370 : ret 0x4909
0x0000000000138232 : ret 0x4910
0x00000000000aefa0 : ret 0x491e
0x0000000000086a41 : ret 0x49e8
0x00000000000038a3 : ret 0x49ec
0x00000000000f59ef : ret 0x4b01
0x000000000004a6a5 : ret 0x4b77
0x0000000000112271 : ret 0x4b78
0x000000000008738b : ret 0x4b80
0x0000000000029112 : ret 0x4c01
0x0000000000092911 : ret 0x4c02
0x00000000000685a2 : ret 0x4c04
0x0000000000032525 : ret 0x4c08
0x00000000000499ce : ret 0x4c10
0x00000000000501ff : ret 0x4c30
0x00000000000bd56c : ret 0x4c48
0x00000000000e75f6 : ret 0x4c6
0x0000000000128871 : ret 0x4c74
0x0000000000125d27 : ret 0x4c8b
0x000000000006823e : ret 0x4ce8
0x00000000000257e4 : ret 0x4d02
0x000000000010d47e : ret 0x4d04
0x000000000007e00f : ret 0x4d07
0x000000000003fdc6 : ret 0x4d09
0x000000000007e749 : ret 0x4d10
0x00000000001045db : ret 0x4d30
0x0000000000052d17 : ret 0x4d64
0x000000000004fccb : ret 0x4e0f
0x0000000000176d47 : ret 0x4e27
0x00000000000207a2 : ret 0x4eb
0x00000000000fb2ed : ret 0x5077
0x0000000000010a78 : ret 0x51
0x0000000000162134 : ret 0x5173
0x0000000000046f74 : ret 0x5174
0x0000000000003152 : ret 0x52c0
0x00000000000e7a48 : ret 0x52e9
0x000000000006e1ea : ret 0x5389
0x00000000000d8260 : ret 0x538b
0x000000000011231b : ret 0x53e9
0x0000000000122e9b : ret 0x53ff
0x00000000000adba1 : ret 0x5441
0x00000000000494c4 : ret 0x5474
0x0000000000097b49 : ret 0x547c
0x0000000000039d98 : ret 0x5489
0x0000000000129841 : ret 0x548d
0x0000000000174fac : ret 0x5508
0x0000000000002442 : ret 0x5576
0x00000000000b0cf1 : ret 0x5589
0x0000000000047557 : ret 0x5641
0x0000000000087727 : ret 0x5675
0x00000000000942da : ret 0x56e9
0x00000000000d569c : ret 0x574
0x000000000010ab32 : ret 0x577
0x0000000000177278 : ret 0x5803
0x0000000000074a0d : ret 0x5877
0x00000000000813a4 : ret 0x58b
0x0000000000174c80 : ret 0x591c
0x0000000000132e07 : ret 0x59e9
0x00000000000f921a : ret 0x5a4
0x0000000000003231 : ret 0x5a51
0x0000000000125499 : ret 0x5aa
0x00000000001759e7 : ret 0x5ae4
0x0000000000122413 : ret 0x5b1
0x00000000000e3d2c : ret 0x5ba
0x0000000000002f67 : ret 0x5bdb
0x0000000000096b6b : ret 0x5be9
0x00000000001057dd : ret 0x5bf
0x00000000000b39bb : ret 0x5c89
0x000000000000301d : ret 0x5cbe
0x00000000000f41e5 : ret 0x5e9
0x0000000000121d9c : ret 0x5ee8
0x00000000000af404 : ret 0x5ee9
0x00000000000004b9 : ret 0x6080
0x0000000000077a14 : ret 0x60e9
0x0000000000002705 : ret 0x617e
0x00000000000cc1a9 : ret 0x61e8
0x0000000000177712 : ret 0x62c1
0x0000000000040123 : ret 0x6348
0x0000000000053704 : ret 0x6349
0x00000000000a2a0a : ret 0x6375
0x000000000008b71f : ret 0x63be
0x00000000001175fa : ret 0x642
0x0000000000097b39 : ret 0x647c
0x00000000000b9b93 : ret 0x64b8
0x0000000000033bf8 : ret 0x65e9
0x00000000000d22b0 : ret 0x6601
0x0000000000097bea : ret 0x6610
0x000000000008c922 : ret 0x6620
0x000000000000280b : ret 0x6642
0x0000000000087a43 : ret 0x66c3
0x00000000000c14c4 : ret 0x676
0x00000000000d8d36 : ret 0x677e
0x0000000000174c9f : ret 0x67b2
0x00000000000b2e21 : ret 0x67ba
0x00000000000b2080 : ret 0x6948
0x00000000000d4af9 : ret 0x697e
0x0000000000074359 : ret 0x6ae9
0x00000000000c261a : ret 0x6b74
0x00000000000c3a69 : ret 0x6b8
0x0000000000003c8a : ret 0x6bba
0x00000000001039c2 : ret 0x6bf
0x0000000000186913 : ret 0x6e1f
0x0000000000121d8c : ret 0x6ee8
0x00000000001778a1 : ret 0x6f9
0x00000000000a44a8 : ret 0x6fe9
0x00000000000830a5 : ret 0x7075
0x00000000000344a4 : ret 0x70e9
0x00000000000fbf99 : ret 0x71e8
0x000000000004f3b6 : ret 0x71eb
0x0000000000021740 : ret 0x7401
0x0000000000037613 : ret 0x7402
0x000000000006d8c8 : ret 0x7404
0x0000000000075f7e : ret 0x7408
0x000000000006eda9 : ret 0x7420
0x000000000010bcef : ret 0x743
0x0000000000050217 : ret 0x7450
0x000000000010b8e0 : ret 0x747
0x0000000000098ed7 : ret 0x7501
0x00000000000375d4 : ret 0x7502
0x000000000008d10d : ret 0x7504
0x0000000000073a18 : ret 0x7508
0x00000000001630bb : ret 0x7510
0x000000000008d108 : ret 0x7518
0x00000000001630c8 : ret 0x7520
0x00000000000d4549 : ret 0x7540
0x00000000000f15e1 : ret 0x7577
0x000000000013411c : ret 0x75e9
0x0000000000161022 : ret 0x7677
0x00000000000b1091 : ret 0x76c
0x000000000005af56 : ret 0x76e9
0x0000000000024d3a : ret 0x774
0x00000000000c5f0c : ret 0x775
0x000000000002c0a7 : ret 0x7773
0x000000000006dea6 : ret 0x778d
0x00000000001084a0 : ret 0x77a
0x00000000000b2ef6 : ret 0x77e
0x00000000000f2a93 : ret 0x77e8
0x0000000000083235 : ret 0x7874
0x00000000000a6f7a : ret 0x7901
0x0000000000002eb4 : ret 0x793b
0x00000000000e1d8b : ret 0x79e9
0x000000000006df29 : ret 0x7a8b
0x0000000000117a07 : ret 0x7a8d
0x0000000000036525 : ret 0x7c7
0x00000000000ef6c3 : ret 0x7c83
0x00000000000dc896 : ret 0x7c8b
0x0000000000130090 : ret 0x7de9
0x000000000008c8b2 : ret 0x7e20
0x00000000000fc103 : ret 0x7e8
0x00000000000d997a : ret 0x7eb
0x0000000000087d0c : ret 0x7f10
0x000000000014b7ae : ret 0x80
0x0000000000088ee9 : ret 0x8000
0x0000000000033ddc : ret 0x8001
0x00000000000b4db3 : ret 0x8010
0x0000000000034adb : ret 0x8040
0x000000000009e0dd : ret 0x8072
0x00000000001165f8 : ret 0x8080
0x0000000000003864 : ret 0x80fc
0x0000000000042ca4 : ret 0x8136
0x000000000004568b : ret 0x8141
0x0000000000051eb3 : ret 0x8166
0x00000000000f1189 : ret 0x81e8
0x00000000000fc478 : ret 0x81e9
0x0000000000066618 : ret 0x820f
0x000000000011fd23 : ret 0x828d
0x00000000000cb425 : ret 0x82e9
0x00000000000d1869 : ret 0x82eb
0x000000000002d135 : ret 0x8301
0x0000000000113d99 : ret 0x8303
0x000000000001fbee : ret 0x8304
0x0000000000096df1 : ret 0x8305
0x000000000005618f : ret 0x8308
0x000000000004758c : ret 0x830f
0x000000000002e8f8 : ret 0x8310
0x000000000005259a : ret 0x832d
0x000000000001f5bf : ret 0x8341
0x000000000008c476 : ret 0x8348
0x0000000000051485 : ret 0x8349
0x0000000000135b3c : ret 0x8366
0x0000000000134364 : ret 0x8380
0x00000000000d885c : ret 0x839
0x00000000000d8acc : ret 0x83b
0x000000000009858b : ret 0x8401
0x00000000000536f6 : ret 0x8404
0x0000000000021a12 : ret 0x840f
0x00000000000499a1 : ret 0x841
0x000000000007e0c8 : ret 0x8441
0x0000000000079575 : ret 0x8445
0x00000000000cc6e3 : ret 0x84e9
0x000000000001fa6a : ret 0x84f
0x0000000000064e97 : ret 0x8501
0x000000000006d6ff : ret 0x8502
0x00000000000537c5 : ret 0x8504
0x000000000006e0fe : ret 0x8508
0x000000000002e0b8 : ret 0x850f
0x00000000000b310e : ret 0x8545
0x000000000006d91d : ret 0x8548
0x0000000000048fcf : ret 0x854d
0x00000000000cc6b9 : ret 0x8589
0x0000000000050a93 : ret 0x858b
0x00000000000fa24d : ret 0x85a
0x00000000000fa047 : ret 0x85c
0x000000000005cca9 : ret 0x85c6
0x000000000004b8de : ret 0x860f
0x0000000000036d42 : ret 0x870f
0x00000000001745be : ret 0x871e
0x000000000008c9c5 : ret 0x876
0x0000000000109ecc : ret 0x87e
0x00000000000ec183 : ret 0x87e8
0x00000000000226a5 : ret 0x8801
0x0000000000098c12 : ret 0x8802
0x00000000000c7c82 : ret 0x8804
0x00000000000c972d : ret 0x880f
0x00000000000b191f : ret 0x8840
0x000000000011b045 : ret 0x8841
0x000000000012648e : ret 0x8844
0x00000000000eacb6 : ret 0x8845
0x0000000000002594 : ret 0x88ad
0x000000000002da2d : ret 0x8901
0x000000000004bed5 : ret 0x8908
0x000000000004bf45 : ret 0x8910
0x00000000000af3c7 : ret 0x8941
0x0000000000037346 : ret 0x8944
0x0000000000021328 : ret 0x8948
0x0000000000021770 : ret 0x8949
0x000000000001f80f : ret 0x894c
0x000000000007e013 : ret 0x894d
0x00000000000390bb : ret 0x894e
0x000000000003d33d : ret 0x8966
0x000000000010480e : ret 0x89eb
0x000000000008c52a : ret 0x8a04
0x0000000000002537 : ret 0x8a4c
0x00000000000a4490 : ret 0x8aeb
0x0000000000025b77 : ret 0x8b01
0x0000000000106e0b : ret 0x8b02
0x00000000000a40df : ret 0x8b04
0x000000000002f7ae : ret 0x8b05
0x000000000010340e : ret 0x8b28
0x0000000000176dee : ret 0x8b36
0x000000000002e862 : ret 0x8b41
0x000000000004b6e1 : ret 0x8b44
0x0000000000095763 : ret 0x8b46
0x00000000000d30b8 : ret 0x8b47
0x0000000000022949 : ret 0x8b48
0x000000000002112c : ret 0x8b49
0x000000000003903e : ret 0x8b4a
0x0000000000031b45 : ret 0x8b4c
0x000000000006f5a8 : ret 0x8b64
0x00000000000e3eee : ret 0x8c0f
0x000000000000376e : ret 0x8cba
0x00000000000c7ec8 : ret 0x8d01
0x000000000005eb27 : ret 0x8d04
0x0000000000050e7a : ret 0x8d0f
0x00000000000b9bf2 : ret 0x8d41
0x00000000000b9a51 : ret 0x8d44
0x00000000000cfec9 : ret 0x8d47
0x0000000000021e08 : ret 0x8d48
0x0000000000031b5e : ret 0x8d49
0x000000000005f01f : ret 0x8d4a
0x00000000000aee81 : ret 0x8d4b
0x0000000000024b8b : ret 0x8d4c
0x0000000000051ea5 : ret 0x8d4d
0x000000000005fca2 : ret 0x8d89
0x0000000000027226 : ret 0x8e0f
0x0000000000061f1c : ret 0x8f0f
0x00000000000f316d : ret 0x8feb
0x0000000000044fdd : ret 0x9066
0x000000000002f79d : ret 0x90c3
0x00000000000dcb79 : ret 0x91e8
0x000000000013338f : ret 0x9274
0x00000000000e4057 : ret 0x930f
0x00000000000b2e55 : ret 0x93ba
0x0000000000085c8e : ret 0x93be
0x00000000000b19ff : ret 0x943a
0x00000000000e4061 : ret 0x944
0x00000000000436a6 : ret 0x948
0x000000000008b408 : ret 0x94c
0x0000000000021879 : ret 0x9539
0x0000000000032266 : ret 0x953d
0x0000000000175c13 : ret 0x9576
0x0000000000113312 : ret 0x9588
0x0000000000079213 : ret 0x95eb
0x00000000000e9082 : ret 0x962
0x000000000010d4d9 : ret 0x96eb
0x00000000000cc0d1 : ret 0x970f
0x0000000000003750 : ret 0x975
0x00000000000ec373 : ret 0x97e8
0x00000000000c5093 : ret 0x97e9
0x00000000000fa6ab : ret 0x9848
0x0000000000087775 : ret 0x9874
0x000000000005dd36 : ret 0x98e9
0x00000000000c5303 : ret 0x9aeb
0x00000000000ec77f : ret 0x9be
0x0000000000032c7d : ret 0x9be9
0x000000000005ddee : ret 0x9ce8
0x000000000009e0c0 : ret 0x9d72
0x0000000000056496 : ret 0x9d8b
0x00000000000b17c2 : ret 0x9e0f
0x00000000000f154f : ret 0x9e75
0x000000000002eaf1 : ret 0x9e8
0x000000000005c424 : ret 0xa
0x000000000005dd2e : ret 0xa0e9
0x00000000000fc169 : ret 0xa1e8
0x0000000000077fd2 : ret 0xa1eb
0x0000000000175903 : ret 0xa514
0x00000000000715da : ret 0xa6
0x00000000000a6027 : ret 0xa6eb
0x0000000000041bda : ret 0xa77
0x0000000000081753 : ret 0xa7e
0x00000000000c1963 : ret 0xa7e8
0x000000000013505e : ret 0xa802
0x00000000000512e5 : ret 0xa9e9
0x000000000003dcb4 : ret 0xaba
0x0000000000175d87 : ret 0xac65
0x0000000000176744 : ret 0xacfc
0x000000000004c3a0 : ret 0xb
0x00000000000fb659 : ret 0xb1e8
0x0000000000059d5a : ret 0xb2e9
0x00000000001ac481 : ret 0xb3
0x0000000000080c54 : ret 0xb48b
0x0000000000078d6e : ret 0xb4eb
0x000000000007279b : ret 0xb5eb
0x0000000000029547 : ret 0xb60f
0x00000000000852a4 : ret 0xb6e8
0x00000000000f9eb8 : ret 0xb6e9
0x0000000000078333 : ret 0xb6eb
0x00000000000298f5 : ret 0xb70f
0x0000000000037bee : ret 0xb74
0x000000000007e4f1 : ret 0xb76
0x0000000000036363 : ret 0xb8
0x000000000012ef5c : ret 0xb804
0x0000000000035fb1 : ret 0xb848
0x0000000000047255 : ret 0xb87f
0x00000000000d4dfa : ret 0xb880
0x00000000000b4a42 : ret 0xb8e9
0x00000000000715df : ret 0xb8eb
0x00000000000bed53 : ret 0xb9
0x000000000004fcce : ret 0xb941
0x00000000000cb162 : ret 0xb98
0x0000000000175c4e : ret 0xb9b9
0x00000000000ec87f : ret 0xb9eb
0x0000000000076213 : ret 0xba74
0x000000000005a770 : ret 0xbae8
0x00000000000c0101 : ret 0xbae9
0x000000000011dc81 : ret 0xbb74
0x000000000007204a : ret 0xbbeb
0x0000000000078bc4 : ret 0xbceb
0x00000000000c1e13 : ret 0xbd0
0x0000000000002464 : ret 0xbd07
0x000000000006010c : ret 0xbd83
0x00000000000520fa : ret 0xbe07
0x00000000000b957d : ret 0xbe41
0x00000000000c08d4 : ret 0xbe5
0x00000000001759a4 : ret 0xbe57
0x00000000000dae0f : ret 0xbe8
0x000000000007262f : ret 0xbfeb
0x000000000001feae : ret 0xc
0x000000000004c973 : ret 0xc0
0x0000000000088da9 : ret 0xc000
0x000000000011c021 : ret 0xc001
0x00000000000d7058 : ret 0xc030
0x0000000000020341 : ret 0xc031
0x0000000000047712 : ret 0xc083
0x000000000004f429 : ret 0xc085
0x0000000000029077 : ret 0xc101
0x00000000000360e7 : ret 0xc148
0x000000000011fc47 : ret 0xc166
0x00000000000370b3 : ret 0xc189
0x00000000000b7fe8 : ret 0xc1b
0x00000000000cc149 : ret 0xc1e8
0x000000000002ced5 : ret 0xc1e9
0x00000000000dbb23 : ret 0xc209
0x000000000003cbca : ret 0xc229
0x000000000003cd78 : ret 0xc269
0x00000000000e4d2b : ret 0xc283
0x0000000000162004 : ret 0xc2b2
0x00000000000dd160 : ret 0xc339
0x000000000004871b : ret 0xc35b
0x00000000000fa773 : ret 0xc383
0x0000000000133d69 : ret 0xc389
0x0000000000102beb : ret 0xc3f3
0x0000000000173842 : ret 0xc4c3
0x0000000000175558 : ret 0xc4ff
0x00000000000226c5 : ret 0xc601
0x00000000000e8895 : ret 0xc641
0x0000000000036b47 : ret 0xc748
0x00000000001318f4 : ret 0xc749
0x00000000000a2a61 : ret 0xc75
0x0000000000080eb8 : ret 0xc789
0x00000000000d2d73 : ret 0xc7e8
0x00000000000b008d : ret 0xc7e9
0x0000000000042cae : ret 0xc801
0x000000000008cf79 : ret 0xc88
0x000000000007bfa0 : ret 0xc883
0x000000000002a661 : ret 0xc889
0x00000000000c9271 : ret 0xc8d
0x00000000000e55f5 : ret 0xc8e9
0x00000000000d8304 : ret 0xc931
0x0000000000137391 : ret 0xc984
0x000000000011330b : ret 0xc985
0x00000000000f8801 : ret 0xc9e8
0x00000000000a6004 : ret 0xc9eb
0x00000000000877e6 : ret 0xc9ff
0x000000000013da4c : ret 0xca39
0x000000000002201a : ret 0xca7
0x0000000000037349 : ret 0xca81
0x00000000000cc6a7 : ret 0xca83
0x00000000000fab29 : ret 0xcad9
0x0000000000085364 : ret 0xcb8
0x000000000001f6ac : ret 0xcbeb
0x00000000000f0ee8 : ret 0xcc80
0x0000000000174fea : ret 0xcca7
0x00000000001770cd : ret 0xcd11
0x000000000009e090 : ret 0xcd72
0x00000000000338b1 : ret 0xce80
0x000000000001f842 : ret 0xce89
0x00000000000a6789 : ret 0xceb
0x000000000004f556 : ret 0xcee9
0x000000000013002a : ret 0xcf89
0x00000000000f457e : ret 0xcfeb
0x00000000000a751e : ret 0xd
0x00000000000ad73d : ret 0xd00
0x00000000000c2f12 : ret 0xd029
0x00000000000ad0e1 : ret 0xd06
0x000000000007de7d : ret 0xd075
0x0000000000036443 : ret 0xd089
0x00000000000d05c1 : ret 0xd101
0x000000000011323c : ret 0xd120
0x00000000000b1755 : ret 0xd138
0x000000000005a6ec : ret 0xd189
0x00000000000fc939 : ret 0xd1e8
0x00000000000355b0 : ret 0xd231
0x00000000000b7c94 : ret 0xd269
0x000000000003291d : ret 0xd284
0x00000000000dca0c : ret 0xd285
0x00000000000aac3d : ret 0xd2b
0x000000000003e370 : ret 0xd349
0x000000000000089a : ret 0xd5a4
0x00000000000ce01a : ret 0xd5e9
0x00000000000d8292 : ret 0xd675
0x000000000010be68 : ret 0xd72
0x00000000000f8b16 : ret 0xd74
0x00000000000f1c86 : ret 0xd77
0x00000000000fbd33 : ret 0xd7e8
0x0000000000048590 : ret 0xd7e9
0x00000000000fda45 : ret 0xd889
0x0000000000176b65 : ret 0xd8f
0x00000000001147a4 : ret 0xd975
0x00000000000d2e78 : ret 0xda29
0x0000000000108e53 : ret 0xda75
0x00000000000da087 : ret 0xda7f
0x000000000003666d : ret 0xdaf7
0x00000000000bcfdb : ret 0xdb31
0x0000000000124f02 : ret 0xdb78
0x00000000000cb8a5 : ret 0xdb84
0x00000000000b0440 : ret 0xdc00
0x0000000000176c46 : ret 0xdcd9
0x00000000000d99d2 : ret 0xdd7f
0x0000000000175bc2 : ret 0xde5d
0x000000000004753d : ret 0xde8
0x0000000000174951 : ret 0xde9e
0x000000000002c18a : ret 0xdf89
0x000000000000f329 : ret 0xe
0x0000000000088c69 : ret 0xe000
0x0000000000163079 : ret 0xe074
0x000000000003e2b5 : ret 0xe083
0x00000000000ee2db : ret 0xe0e9
0x0000000000121e9a : ret 0xe0ff
0x0000000000055e6e : ret 0xe181
0x00000000000603f9 : ret 0xe183
0x00000000000774d5 : ret 0xe274
0x0000000000028440 : ret 0xe281
0x00000000000288ee : ret 0xe283
0x00000000000e3925 : ret 0xe2c1
0x00000000000229e2 : ret 0xe2ff
0x0000000000057329 : ret 0xe3e9
0x00000000000be315 : ret 0xe6e9
0x0000000000176d66 : ret 0xe71f
0x00000000000f2b23 : ret 0xe7e8
0x00000000000702e2 : ret 0xe8
0x00000000000f0501 : ret 0xe801
0x00000000000af4f5 : ret 0xe877
0x00000000000e81c3 : ret 0xe883
0x0000000000021b64 : ret 0xe8c1
0x000000000002281b : ret 0xe901
0x000000000006d7ec : ret 0xe902
0x0000000000067c19 : ret 0xe908
0x000000000013a216 : ret 0xe910
0x00000000001750c7 : ret 0xe970
0x00000000000a609c : ret 0xe974
0x000000000004aade : ret 0xe9c0
0x00000000000b17c5 : ret 0xe9c1
0x0000000000192324 : ret 0xea6c
0x000000000003c54c : ret 0xea76
0x00000000000a25ca : ret 0xea81
0x000000000012ffbf : ret 0xea83
0x0000000000192994 : ret 0xea87
0x00000000000603f2 : ret 0xeac0
0x0000000000021a09 : ret 0xeac1
0x00000000000427d3 : ret 0xeae9
0x00000000000b7e20 : ret 0xeaf7
0x00000000000d8024 : ret 0xeb01
0x000000000006d6a0 : ret 0xeb02
0x000000000001fc23 : ret 0xeb04
0x0000000000057d5e : ret 0xeb08
0x0000000000138256 : ret 0xeb10
0x00000000000bf722 : ret 0xeb11
0x000000000003d7d2 : ret 0xeb75
0x00000000001738ec : ret 0xec16
0x0000000000177878 : ret 0xec2
0x00000000000da13f : ret 0xec77
0x0000000000130d19 : ret 0xec7c
0x00000000000d8e32 : ret 0xece9
0x00000000000addd8 : ret 0xed77
0x0000000000197ccc : ret 0xed81
0x0000000000199e6e : ret 0xedbc
0x0000000000189df0 : ret 0xee7d
0x000000000006d5b4 : ret 0xee83
0x000000000008068c : ret 0xee9
0x00000000001321aa : ret 0xeed2
0x00000000000e57a5 : ret 0xeeeb
0x000000000018a420 : ret 0xeef5
0x000000000017751a : ret 0xef32
0x000000000006d3ee : ret 0xef83
0x0000000000022275 : ret 0xefc1
0x0000000000005039 : ret 0xf
0x0000000000088b29 : ret 0xf000
0x0000000000030f7f : ret 0xf01
0x000000000007cc53 : ret 0xf02
0x000000000005a84b : ret 0xf039
0x000000000006e005 : ret 0xf04
0x0000000000098bf3 : ret 0xf077
0x0000000000127dfa : ret 0xf086
0x0000000000113f4a : ret 0xf0b4
0x0000000000093ac9 : ret 0xf0e9
0x00000000001011d1 : ret 0xf0eb
0x0000000000087cc2 : ret 0xf10
0x000000000010efaa : ret 0xf104
0x0000000000097c4c : ret 0xf188
0x0000000000077b50 : ret 0xf189
0x000000000010324a : ret 0xf1c1
0x00000000000fba19 : ret 0xf1e8
0x00000000000985a5 : ret 0xf1eb
0x000000000011c65a : ret 0xf1f0
0x000000000011c15a : ret 0xf1f5
0x0000000000098ef4 : ret 0xf20
0x0000000000107ffa : ret 0xf284
0x0000000000179858 : ret 0xf28e
0x00000000000dba19 : ret 0xf2e9
0x000000000003a3a3 : ret 0xf301
0x00000000000375cc : ret 0xf304
0x00000000000eb1aa : ret 0xf342
0x00000000000f931a : ret 0xf367
0x00000000000e843a : ret 0xf36f
0x000000000010369a : ret 0xf375
0x00000000000e6c3a : ret 0xf387
0x00000000001154b8 : ret 0xf3c3
0x000000000004f627 : ret 0xf3f
0x000000000006f8f3 : ret 0xf40
0x000000000002c409 : ret 0xf41
0x00000000000afa07 : ret 0xf44
0x00000000000db0aa : ret 0xf443
0x00000000000262bf : ret 0xf48
0x00000000000d55aa : ret 0xf49e
0x00000000000508c1 : ret 0xf4a
0x00000000000d313a : ret 0xf4c2
0x00000000001acf0e : ret 0xf568
0x00000000001b0046 : ret 0xf5e0
0x00000000000e5d0d : ret 0xf601
0x00000000001ae438 : ret 0xf619
0x00000000000bdf0f : ret 0xf631
0x0000000000025002 : ret 0xf641
0x00000000000363fb : ret 0xf66
0x00000000000a2176 : ret 0xf685
0x00000000000b2e6c : ret 0xf741
0x000000000003da4f : ret 0xf748
0x00000000000b243c : ret 0xf749
0x000000000011387a : ret 0xf75c
0x00000000000f439a : ret 0xf7db
0x00000000000a433a : ret 0xf7dd
0x00000000000ecc13 : ret 0xf7e8
0x00000000000d25fc : ret 0xf7e9
0x00000000000889e9 : ret 0xf800
0x00000000000aab1a : ret 0xf84f
0x0000000000174830 : ret 0xf869
0x00000000000a5084 : ret 0xf883
0x0000000000032b31 : ret 0xf889
0x000000000008d63a : ret 0xf94a
0x00000000000fe16a : ret 0xf961
0x000000000008b53a : ret 0xf96b
0x00000000000e2e8a : ret 0xf980
0x00000000000a6c8e : ret 0xf983
0x00000000001226ab : ret 0xf9e9
0x00000000000e537a : ret 0xfa41
0x000000000008918d : ret 0xfa80
0x0000000000042327 : ret 0xfa81
0x000000000004f5c4 : ret 0xfac1
0x00000000000621aa : ret 0xfbd2
0x00000000000888a9 : ret 0xfc00
0x00000000000f4911 : ret 0xfc07
0x000000000005c6aa : ret 0xfc2d
0x0000000000089629 : ret 0xfc3
0x00000000000c457a : ret 0xfc4f
0x0000000000187c54 : ret 0xfc61
0x0000000000188140 : ret 0xfc89
0x0000000000188630 : ret 0xfcaa
0x0000000000188638 : ret 0xfcb0
0x00000000000d17e8 : ret 0xfd83
0x0000000000030f51 : ret 0xfdf
0x0000000000088769 : ret 0xfe00
0x00000000000bc78a : ret 0xfe60
0x00000000000a88fb : ret 0xfe9
0x00000000000a8f65 : ret 0xfeb
0x0000000000036679 : ret 0xfeb8
0x00000000000c3a7a : ret 0xfef1
0x0000000000088629 : ret 0xff00
0x000000000014d321 : ret 0xff2
0x000000000011578a : ret 0xff2e
0x00000000000988ba : ret 0xff3
0x0000000000048e79 : ret 0xff31
0x000000000009732e : ret 0xff41
0x0000000000087724 : ret 0xff48
0x000000000001f935 : ret 0xff49
0x00000000000884e9 : ret 0xff80
0x000000000011ad36 : ret 0xff81
0x000000000005ce3b : ret 0xff82
0x00000000000cf9f3 : ret 0xff83
0x000000000006ba62 : ret 0xff8f
0x000000000002514a : ret 0xffa2
0x00000000000c604a : ret 0xffa9
0x0000000000048711 : ret 0xffb8
0x0000000000043a38 : ret 0xffbf
0x00000000000883a9 : ret 0xffc0
0x00000000000a798e : ret 0xffc1
0x000000000012a03a : ret 0xffd9
0x0000000000081dda : ret 0xffdb
0x0000000000088269 : ret 0xffe0
0x0000000000045e4a : ret 0xffe1
0x00000000001a4971 : ret 0xffe7
0x00000000000e2f68 : ret 0xffe9
0x0000000000061011 : ret 0xffec
0x0000000000198a19 : ret 0xffed
0x0000000000178995 : ret 0xffee
0x000000000003d69c : ret 0xffef
0x000000000003f7f2 : ret 0xfff0
0x000000000004453a : ret 0xfff1
0x0000000000051700 : ret 0xfff2
0x00000000000b8a33 : ret 0xfff3
0x0000000000061e35 : ret 0xfff5
0x000000000010c7c7 : ret 0xfff6
0x000000000004203a : ret 0xfff7
0x000000000005083d : ret 0xfff8
0x00000000000cea07 : ret 0xfff9
0x0000000000030e1b : ret 0xfffa
0x00000000000cb60d : ret 0xfffb
0x000000000004da5a : ret 0xfffc
0x000000000008be7a : ret 0xfffd
0x0000000000027e1e : ret 0xfffe
0x00000000000c301a : ret 0xffff
0x000000000018bf15 : ret 1
0x0000000000001010 : ret 2
0x000000000000ec88 : ret 3
0x0000000000045f13 : ret 4
0x000000000002d032 : ret 5
0x0000000000085b16 : ret 6
0x00000000000018ec : ret 7
0x000000000008caa5 : ret 8
0x00000000000e064e : ret 9
0x000000000019becc : retf -0x11cd ; jmp qword ptr [rdx]
0x00000000001995cc : retf -0x1248 ; jmp qword ptr [rdx]
0x0000000000196514 : retf -0x128e ; jmp qword ptr [rdx]
0x0000000000195ce4 : retf -0x1292 ; jmp qword ptr [rdx]
0x000000000001f6a7 : retf -0x31c7 ; cmovge eax, edx ; jmp 0x1f67f
0x000000000018826c : retf -0x37c ; push qword ptr [rax - 0x7c] ; cld ; jmp rax
0x0000000000090a0f : retf -0x7af1 ; call qword ptr [rsi]
0x000000000017a7a5 : retf -0xc ; and al, 0xffffffffffffffcb ; hlt ; call rcx
0x000000000017a731 : retf -0xc ; ror edx, 1 ; hlt ; call rcx
0x00000000001877c5 : retf -5 ; ror bl, 1 ; sti ; jmp qword ptr [rax]
0x0000000000188ae5 : retf 0 ; lahf ; jno 0x188ada ; jmp rsp
0x00000000001abbc5 : retf 1 ; sbb dl, bl ; cmc ; call qword ptr [rax]
0x00000000001abca5 : retf ; add dword ptr [rax], eax ; pop rax ; fdivrp st(5) ; call qword ptr [rax]
0x000000000017a72d : retf ; hlt ; call rcx
0x00000000001b1dc6 : retf ; idiv bh ; sbb al, 0xd ; cmp dh, dh ; jmp qword ptr [rdx]
0x000000000018b361 : retf ; int1 ; call rsp
0x0000000000196edc : retf ; jp 0x196ecf ; jmp qword ptr [rdx]
0x000000000018ab49 : retf ; out dx, eax ; call rsp
0x000000000018e3d9 : retf ; stc ; call rsp
0x00000000001877c9 : retf ; sti ; jmp qword ptr [rax]
0x00000000001980b4 : retf ; test ebp, ebp ; jmp qword ptr [rdx]
0x0000000000117afc : rol ah, 0x2a ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x0000000000187774 : rol ah, 1 ; sti ; jmp qword ptr [rax]
0x0000000000097aed : rol bl, -0x70 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a47cd : rol bl, -0x70 ; mov eax, 1 ; ret
0x00000000000a1e55 : rol bl, 0x48 ; mov eax, edi ; ret
0x0000000000075d9c : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000008cb1d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000008924e : rol bl, 1 ; xor edx, edx ; mov eax, edx ; ret
0x00000000000486e7 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x0000000000098892 : rol byte ptr [rax + 0x48], -0x7d ; ret 0x4840
0x0000000000089842 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000172700 : rol byte ptr [rax + rax], 0 ; ret 4
0x00000000000c6e8c : rol byte ptr [rax - 0x6bf0a207], cl ; ret 0x8d48
0x00000000000a439d : rol byte ptr [rax*4 + 0x751089d2], -0xd ; ret
0x000000000010caa6 : rol byte ptr [rax*4 + 0x753089f6], -0x16 ; ret
0x000000000007920d : rol byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x3e], al ; jmp 0x791b1
0x0000000000160f2d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000189a35 : rol byte ptr [rax], 0 ; xor al, 0x4d ; in eax, dx ; jmp rsp
0x000000000005e71c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000001210a3 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call qword ptr [r11]
0x00000000000f8255 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b2097 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000036d50 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00000000000bac74 : rol byte ptr [rbp + 0x31], cl ; fild dword ptr [rbp + 0x31] ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000fabc2 : rol byte ptr [rbp + 0x490f48d2], -0x3e ; jmp 0xfabd3
0x00000000000944b2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000089869 : rol byte ptr [rbp - 0x149d8a2e], 1 ; ror byte ptr [rcx + 0x39], 1 ; ret
0x0000000000064de5 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x0000000000037919 : rol byte ptr [rbp - 0x3f6bf02e], -0x3d ; xor eax, eax ; ret
0x00000000000201c1 : rol byte ptr [rbp - 0x6af0be40], cl ; ret 0x8341
0x00000000000f63f0 : rol byte ptr [rbp - 0x77], -9 ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000001791c0 : rol byte ptr [rbp - 0x790f0004], 1 ; cld ; call qword ptr [rax]
0x00000000000c8017 : rol byte ptr [rbp - 0x7b], cl ; rol byte ptr [rcx + 0xf], -0x6b ; ret 0x8944
0x00000000000cd2ad : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8944
0x00000000000cdd82 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8b48
0x00000000000ce013 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0xd5e9
0x00000000001176b9 : rol byte ptr [rbx + rbx*2], 1 ; ret
0x00000000000711e7 : rol byte ptr [rbx + rcx*4 + 3], 0xf ; xchg eax, esp ; ret 0xdaf7
0x00000000000a55c6 : rol byte ptr [rbx + rcx*4], 0x10 ; test edx, edx ; jne 0xa55c9 ; ret
0x00000000000384bb : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x000000000010b7a9 : rol byte ptr [rbx - 0x24e6fe08], -0x7d ; ret
0x00000000000fe564 : rol byte ptr [rbx - 0x69f0f601], -0x40 ; ret
0x000000000002fdd1 : rol byte ptr [rbx - 0x6bf07f19], -0x40 ; ret
0x00000000000c6c84 : rol byte ptr [rbx - 0x6bf0fe06], -0x40 ; ret
0x0000000000027d9c : rol byte ptr [rbx - 0x76befb08], 1 ; ret
0x000000000003449b : rol byte ptr [rbx - 0x77cfc20], cl ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x0000000000121ce5 : rol byte ptr [rbx], -0x7d ; ret 0x8303
0x00000000000a3a92 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000114d0d : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000f7052 : rol byte ptr [rbx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000000b84bb : rol byte ptr [rcx + 0x29], 1 ; ret
0x000000000004b85e : rol byte ptr [rcx + 0x39], 1 ; ret
0x000000000005e541 : rol byte ptr [rcx + 0x5c], 1 ; ret
0x0000000000070dc1 : rol byte ptr [rcx + 0x5c], cl ; jmp rax
0x0000000000094ced : rol byte ptr [rcx + 0x5e], 1 ; ret
0x00000000000a25c1 : rol byte ptr [rcx + 0xbfff], cl ; add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x00000000000201c3 : rol byte ptr [rcx + 0xf], -0x6b ; ret 0x8341
0x00000000000d46be : rol byte ptr [rcx + 0xf], -0x6b ; ret 0x840f
0x00000000000c801a : rol byte ptr [rcx + 0xf], -0x6b ; ret 0x8944
0x0000000000080c38 : rol byte ptr [rcx + 0xf], -0x6c ; ret
0x00000000000891ed : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x8341
0x00000000000b2e68 : rol byte ptr [rcx + 0xf], cl ; ret 0xf741
0x00000000000aee48 : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret
0x00000000000960e0 : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0x5474
0x00000000000d4af5 : rol byte ptr [rcx + rax*2], 0x39 ; ret 0x697e
0x00000000000bbfc8 : rol byte ptr [rcx + rbp - 0x16], 0xf ; ret 0x144
0x00000000000baf63 : rol byte ptr [rcx + rbp - 0x1e], 0xf ; ret 0x144
0x00000000001049ca : rol byte ptr [rcx + rbp - 0x38], 1 ; ret
0x000000000002bb49 : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000000db8ce : rol byte ptr [rcx - 0x77], 1 ; ret
0x000000000012347b : rol byte ptr [rcx - 0x77], cl ; ror byte ptr [rcx + rcx*4 - 1], -0x77 ; ret
0x0000000000096dee : rol byte ptr [rcx - 0x7d], cl ; ret 0x8305
0x00000000000b7eaa : rol byte ptr [rcx - 0x7d], cl ; stc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbf
0x00000000001025e2 : rol byte ptr [rcx], -0x3a ; jmp qword ptr [rax]
0x0000000000106f59 : rol byte ptr [rcx], -0x77 ; ret 0x8948
0x00000000000d4847 : rol byte ptr [rcx], -0x7d ; ret 0x4001
0x00000000000a2427 : rol byte ptr [rcx], -0x7d ; ret 0x4101
0x000000000002d132 : rol byte ptr [rcx], -0x7d ; ret 0x8301
0x00000000000373a5 : rol byte ptr [rcx], -9 ; ret 0
0x000000000018bedd : rol byte ptr [rcx], 0 ; add al, 0x2a ; cmc ; jmp rsp
0x00000000000a3a72 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000e42f9 : rol byte ptr [rcx], 0x39 ; ret
0x0000000000047252 : rol byte ptr [rcx], 0x39 ; ret 0xb87f
0x00000000000dd15a : rol byte ptr [rcx], 0x39 ; ror byte ptr [rdi], 1 ; ret 0xc339
0x000000000003816a : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x38169 ; xor eax, eax ; ret
0x000000000003824a : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x38249 ; xor eax, eax ; ret
0x000000000018c15d : rol byte ptr [rcx], 1 ; add byte ptr [rsp + rsi - 0xa], al ; jmp rsp
0x00000000000cc30c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x0000000000188094 : rol byte ptr [rdi - 0x78af0004], -4 ; jmp rax
0x00000000001792dc : rol byte ptr [rdi - 0xe], -1 ; rol byte ptr [rdi - 0xe], 1 ; jmp rax
0x00000000001792e0 : rol byte ptr [rdi - 0xe], 1 ; jmp rax
0x00000000000a3ad2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000da42e : rol byte ptr [rdx + 0x39], 0x34 ; xchg dword ptr [rbx + rbp*8 + 0x39], edi ; ret 0xc189
0x00000000000234a3 : rol byte ptr [rdx], -0x77 ; add al, 0x24 ; call rbx
0x00000000000a3a82 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000018e785 : rol byte ptr [rdx], 0 ; xor al, 0x3d ; cli ; call rsp
0x00000000000c28c6 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; mov eax, esi ; ret
0x00000000000fafb5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000001b7c80 : rol byte ptr [rdx], cl ; add byte ptr [rax], al ; ret 6
0x00000000000b4ee6 : rol byte ptr [rip + 0x16e], 1 ; ret
0x0000000000065c6e : rol byte ptr [rsi - 0x77], 0x2c ; cmp dword ptr [rcx], ebp ; ret
0x00000000001792a0 : rol byte ptr [rsi - 0xe], 1 ; jmp rax
0x00000000000a3ac2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000001b5e00 : rol byte ptr [rsi], 1 ; sti ; jmp qword ptr [rdx]
0x00000000000375c7 : rol cl, -0x17 ; add esi, esi ; ret 0xf304
0x0000000000173840 : rol cl, -0x3e ; ret
0x000000000012adf8 : rol cl, 1 ; call 0xffffffff80d5a514
0x000000000012afc2 : rol cl, 1 ; call 0xffffffff80d5a6de
0x000000000012b06f : rol cl, 1 ; call 0xffffffff80d5a78b
0x00000000000b2d66 : rol cl, 1 ; clc ; add eax, 0x89d02944 ; ret
0x00000000000b2f5b : rol cl, 1 ; clc ; add eax, 0xfd02944 ; scasd eax, dword ptr [rdi] ; ret
0x0000000000046ccf : rol cl, 1 ; loopne 0x46cf8 ; or eax, esi ; ret
0x00000000001a1740 : rol dh, -0xf ; call qword ptr [rbx]
0x0000000000111d01 : rol dh, 2 ; add byte ptr [rcx + 0x5c], al ; ret
0x00000000000551bb : rol dword ptr [r9 + 0x39], 1 ; ror byte ptr [rdi], -0x73 ; ret
0x00000000000a3a1c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x00000000000e2961 : rol dword ptr [rax], 0 ; add byte ptr [rax - 0x78], al ; mov ah, 0x24 ; ret 0
0x00000000000d4ca7 : rol dword ptr [rax], 0 ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x0000000000097ae7 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00000000000551bc : rol dword ptr [rcx + 0x39], 1 ; ror byte ptr [rdi], -0x73 ; ret
0x00000000000603eb : rol dword ptr [rcx + 0xf], -0x4a ; or al, 0xffffff89 ; ret 0xeac0
0x00000000000e405d : rol dword ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x944
0x0000000000034522 : rol dword ptr [rcx], -0x7d ; cli ; or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x000000000018bef5 : rol dword ptr [rcx], 0 ; test byte ptr [rdx], bh ; cmc ; call rsp
0x00000000000d828f : rol dword ptr [rcx], 0x39 ; ret 0xd675
0x00000000000359c5 : rol dword ptr [rcx], 0x3c ; pop rdi ; je 0x359e2 ; jmp 0x35996
0x000000000010ca08 : rol dword ptr [rcx], 0x45 ; test eax, eax ; jne 0x10ca00 ; ret
0x00000000000980b7 : rol dword ptr [rcx], 0x48 ; sub eax, 1 ; jne 0x980b9 ; ret
0x0000000000049b0a : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000001ac335 : rol dword ptr [rcx], 1 ; add byte ptr [rax - 0x1d], ch ; cmc ; jmp rbx
0x00000000001ac31d : rol dword ptr [rcx], 1 ; add byte ptr [rax - 0x1d], dh ; cmc ; call qword ptr [rax]
0x00000000001ac535 : rol dword ptr [rcx], cl ; add al, bh ; in eax, -0xb ; call qword ptr [rax]
0x00000000001ac565 : rol dword ptr [rcx], cl ; add al, ch ; in eax, -0xb ; call qword ptr [rbx]
0x00000000001ac54d : rol dword ptr [rcx], cl ; add al, dh ; in eax, -0xb ; call qword ptr [rax]
0x000000000009faa9 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x0000000000118bb6 : rol dword ptr [rdx], 0x41 ; mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x00000000001b40dc : rol eax, -0xa ; jmp qword ptr [rdx]
0x0000000000037775 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x0000000000037774 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000187780 : ror al, -5 ; call qword ptr [rax]
0x000000000010d182 : ror ax, 8 ; ret
0x00000000001877d4 : ror bh, -5 ; call qword ptr [rax]
0x00000000001a1a40 : ror bh, 1 ; int1 ; call rsi
0x00000000001877c8 : ror bl, 1 ; sti ; jmp qword ptr [rax]
0x000000000003b9c8 : ror byte ptr [r15], -0x7c ; ret 1
0x0000000000037594 : ror byte ptr [rax + 0x21], 1 ; add al, -0x29 ; xor eax, eax ; ret
0x0000000000037776 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x0000000000036092 : ror byte ptr [rax + 0x21], cl ; ret 0x4866
0x000000000008c992 : ror byte ptr [rax + 0x29], -0x3e ; jbe 0x8c9d9 ; add rax, rdi ; ret
0x00000000000896ef : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000098ece : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000f1d72 : ror byte ptr [rax + 0x39], -0x2a ; ja 0xf1d87 ; ret
0x00000000000fc835 : ror byte ptr [rax + 0x39], -0x36 ; cmovae rax, rsi ; ret
0x0000000000108688 : ror byte ptr [rax + 0x39], -6 ; setae al ; ret
0x00000000000cc30e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000393ff : ror byte ptr [rax + 0x39], 1 ; ret 0x8948
0x0000000000038f17 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000b17bf : ror byte ptr [rax + 0x39], 1 ; ret 0x9e0f
0x000000000002600a : ror byte ptr [rax + 0x39], cl ; ret
0x000000000009860b : ror byte ptr [rax + 0x48c07503], -0x7d ; ret
0x00000000001097ca : ror byte ptr [rax + 0x48e97507], -0x77 ; clc ; ret
0x00000000000c87e6 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000b57fa : ror byte ptr [rax + 0x63], cl ; adc al, -0x69 ; add rdx, rdi ; jmp rdx
0x0000000000046e65 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000f85ce : ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x00000000000fabc4 : ror byte ptr [rax + 0xf], cl ; ret 0x2eb
0x00000000000a4a44 : ror byte ptr [rax + 0xf], cl ; ret 0x8548
0x00000000000fa622 : ror byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000011deb8 : ror byte ptr [rax + 0xf], cl ; ret 0x8b4c
0x0000000000097c33 : ror byte ptr [rax + 1], -8 ; add rax, r8 ; ret
0x000000000009438c : ror byte ptr [rax + 1], -8 ; add rax, rcx ; ret
0x000000000008b299 : ror byte ptr [rax + 1], -8 ; ret
0x0000000000118b83 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000000a6099 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000000896ec : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000054dcf : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000002], eax ; ret 0x8908
0x000000000004becc : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000005], esi ; ret 0x8908
0x000000000004bf3c : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000005], esi ; ret 0x8910
0x000000000003c86a : ror byte ptr [rax + 9], -0x30 ; ret
0x00000000000fb163 : ror byte ptr [rax + 9], 1 ; lock or rax, rdi ; ret
0x000000000008cb15 : ror byte ptr [rax - 0x2d], -6 ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000b0df5 : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc2345743
0x00000000000b5cb2 : ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000b1013 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000c3260 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000008c952 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000008c982 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000097b22 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x000000000008c972 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000010b95c : ror byte ptr [rax - 0x73], 1 ; cmp eax, 0xfffffe8c ; call rax
0x00000000000f9eb2 : ror byte ptr [rax - 0x76b7ffd4], cl ; ret 0xb6e9
0x000000000010b7e2 : ror byte ptr [rax - 0x77], -0x1b ; pop rbp ; ret
0x0000000000125298 : ror byte ptr [rax - 0x77], -0x2a ; add rdi, 0x10 ; jmp rcx
0x0000000000122329 : ror byte ptr [rax - 0x77], -0x3d ; jne 0x1222cb ; xor eax, eax ; pop rbx ; ret
0x0000000000097769 : ror byte ptr [rax - 0x77], 0xa ; ret
0x000000000003ccc8 : ror byte ptr [rax - 0x77], 0xf ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000010b8f6 : ror byte ptr [rax - 0x77], 1 ; adc eax, 0x2b7ec2 ; pop rbp ; ret
0x000000000008634c : ror byte ptr [rax - 0x77], 1 ; ret
0x0000000000050cdf : ror byte ptr [rax - 0x77], 1 ; ret 0x38e8
0x000000000003d33a : ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x0000000000079e25 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000b49f5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000035319 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000128406 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x00000000000711e4 : ror byte ptr [rax - 0x7b], cl ; rol byte ptr [rbx + rcx*4 + 3], 0xf ; xchg eax, esp ; ret 0xdaf7
0x0000000000097b82 : ror byte ptr [rax - 0x7d], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000097b62 : ror byte ptr [rax - 0x7d], -0x16 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000097b42 : ror byte ptr [rax - 0x7d], -0x16 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000003cde4 : ror byte ptr [rax - 0x7d], -0x3c ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007663f : ror byte ptr [rax - 0x7d], -0x3c ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000eda80 : ror byte ptr [rax - 0x7d], -0x3c ; movzx rax, al ; ret
0x000000000003c1dd : ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000046554 : ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x0000000000136cfd : ror byte ptr [rax - 0x7d], -0x3c ; pop rax ; ret
0x000000000012a5b8 : ror byte ptr [rax - 0x7d], -0x3c ; pop rbx ; pop rbp ; ret
0x00000000001374f1 : ror byte ptr [rax - 0x7d], -0x3c ; ret
0x00000000000517b9 : ror byte ptr [rax - 0x7d], -0x3c ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000012f487 : ror byte ptr [rax - 0x7d], -0x3c ; sbb byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x00000000001143e3 : ror byte ptr [rax - 0x7d], -0x3c ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c14ce : ror byte ptr [rax - 0x7d], -6 ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x00000000000f578e : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rdx + rax + 0x5b], dh ; ret
0x0000000000081d66 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2916585
0x000000000012f43c : ror byte ptr [rax - 0x7d], 1 ; in al, dx ; or byte ptr [rax - 0x77], 0xd0 ; pop rbx ; ret
0x000000000003f4c6 : ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000003c2b0 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000000509df : ror byte ptr [rax - 0x7d], 1 ; ret 0x4803
0x000000000010d31d : ror byte ptr [rax - 0x7d], 1 ; ret 0xf01
0x00000000000724a8 : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000ec223 : ror byte ptr [rax - 0x7d], cl ; in al, dx ; jo 0xec225 ; ret 0x4840
0x0000000000047ce0 : ror byte ptr [rax - 0x7d], cl ; ret
0x000000000002954a : ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000028457 : ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x000000000009e0b6 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000007442a : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000118c01 : ror byte ptr [rax], -0x3d ; nop dword ptr [rax] ; ret
0x00000000000a79d2 : ror byte ptr [rax], -0x7d ; ret 0x4801
0x000000000008b5f4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000095a5e : ror byte ptr [rbp + 0x29], cl ; ret 0x8b46
0x00000000000472fd : ror byte ptr [rbp - 0x75], 1 ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000048ea4 : ror byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc031
0x00000000000a5ff4 : ror byte ptr [rbp - 0x7bf0febe], 1 ; ret 0
0x0000000000131fa7 : ror byte ptr [rbx + 0x453b0840], cl ; or byte ptr [rdi], 0x94 ; ret 0xea83
0x00000000001a8250 : ror byte ptr [rbx], -0xb ; jmp qword ptr [rcx]
0x00000000000c2ffa : ror byte ptr [rbx], 1 ; mov ax, 0xfde8 ; jne 0xc2fd4 ; ret
0x00000000000c82cb : ror byte ptr [rcx + 0x29], cl ; cli ; sub r10, rax ; jmp 0xc82f2
0x00000000000f2032 : ror byte ptr [rcx + 0x29], cl ; fimul dword ptr [rcx + 0x39] ; ret 0x820f
0x000000000008986f : ror byte ptr [rcx + 0x39], 1 ; ret
0x00000000000ebe2f : ror byte ptr [rcx + 0x39], 1 ; ret 0x1b75
0x00000000000a4407 : ror byte ptr [rcx + 0x48c47503], -0x7d ; ret
0x000000000012347e : ror byte ptr [rcx + rcx*4 - 1], -0x77 ; ret
0x00000000000366b4 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000007bfaf : ror byte ptr [rcx - 0x3b7cb7ed], 1 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000369ee : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x00000000001183a4 : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000001248b1 : ror byte ptr [rcx - 0x77], 0 ; mov eax, 1 ; ret
0x00000000000b13dc : ror byte ptr [rcx - 0x77], 1 ; ret 0x8948
0x0000000000092d10 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x000000000009dc9f : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000096057 : ror byte ptr [rcx - 0x7d], 1 ; ret 0xe901
0x00000000000c1a8f : ror byte ptr [rcx - 0x7f], cl ; ret 0x2d0
0x00000000000a43a0 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000b0c50 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x00000000000fb13c : ror byte ptr [rcx], -8 ; ret
0x000000000008d309 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x0000000000179348 : ror byte ptr [rdi - 0xe], 1 ; push rax ; repne ; call qword ptr [rax]
0x00000000000c325d : ror byte ptr [rdi], -0x4a ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000005e0fb : ror byte ptr [rdi], -0x4a ; sal bh, -0x28 ; pop rbx ; ret
0x00000000000cc39f : ror byte ptr [rdi], -0x4a ; sal bh, -0x28 ; ret
0x00000000000ee07a : ror byte ptr [rdi], -0x4a ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x000000000001f892 : ror byte ptr [rdi], -0x6b ; ret
0x0000000000077a11 : ror byte ptr [rdi], -0x6b ; ret 0x60e9
0x00000000001235bd : ror byte ptr [rdi], -0x6b ; ret 0x8348
0x00000000001227c2 : ror byte ptr [rdi], -0x6b ; ret 0xd089
0x0000000000077976 : ror byte ptr [rdi], -0x6b ; ret 0xd284
0x000000000006e9d5 : ror byte ptr [rdi], -0x6b ; ret 0xdaf7
0x00000000000a5081 : ror byte ptr [rdi], -0x6b ; ret 0xf883
0x000000000012a25f : ror byte ptr [rdi], -0x6c ; ret 0x3d83
0x00000000000b191c : ror byte ptr [rdi], -0x6c ; ret 0x8840
0x0000000000021e05 : ror byte ptr [rdi], -0x6c ; ret 0x8d48
0x00000000000b19fc : ror byte ptr [rdi], -0x6c ; ret 0x943a
0x000000000013d9ee : ror byte ptr [rdi], -0x6c ; ret 0xc085
0x000000000005a6e9 : ror byte ptr [rdi], -0x6c ; ret 0xd189
0x00000000000c2f0f : ror byte ptr [rdi], -0x6e ; ret 0xd029
0x00000000000551bf : ror byte ptr [rdi], -0x73 ; ret
0x000000000013135f : ror byte ptr [rdi], -0x77 ; ret
0x0000000000132c17 : ror byte ptr [rdi], -0x78 ; ret 0
0x000000000007044f : ror byte ptr [rdi], -0x78 ; ret 1
0x0000000000157f6a : ror byte ptr [rdi], -0x7b ; call qword ptr [rbx]
0x0000000000095e73 : ror byte ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000097aac : ror byte ptr [rdi], -0x7b ; jge 0x97aba ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009c901 : ror byte ptr [rdi], -0x7b ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000009af16 : ror byte ptr [rdi], -0x7b ; ret
0x0000000000099247 : ror byte ptr [rdi], -0x7b ; ret 0x13
0x00000000000d7551 : ror byte ptr [rdi], -0x7b ; ret 2
0x00000000000e32c8 : ror byte ptr [rdi], -0x7b ; ret 8
0x00000000000ae7aa : ror byte ptr [rdi], -0x7b ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000048da4 : ror byte ptr [rdi], -0x7c ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000094e91 : ror byte ptr [rdi], -0x7c ; add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000003b9d6 : ror byte ptr [rdi], -0x7c ; ret
0x00000000000de9e2 : ror byte ptr [rdi], -0x7c ; ret 0
0x000000000003b9c9 : ror byte ptr [rdi], -0x7c ; ret 1
0x000000000007e1ac : ror byte ptr [rdi], 0x1f ; add bl, dh ; ret
0x000000000003532e : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x35318 ; ret
0x00000000000d825d : ror byte ptr [rdi], 1 ; ret 0x538b
0x00000000000de98e : ror byte ptr [rdi], 1 ; ret 0x8944
0x00000000000dd15d : ror byte ptr [rdi], 1 ; ret 0xc339
0x00000000000b2f61 : ror byte ptr [rdi], 1 ; scasd eax, dword ptr [rdi] ; ret
0x00000000000b2e1e : ror byte ptr [rdi], 1 ; scasd eax, dword ptr [rdi] ; ret 0x67ba
0x000000000004999e : ror byte ptr [rdi], 1 ; xchg eax, ebx ; ret 0x841
0x0000000000097bcd : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000f8c80 : ror byte ptr [rdi], cl ; ret 0x66c3
0x00000000000fa6a8 : ror byte ptr [rdi], cl ; ret 0x9848
0x0000000000048718 : ror byte ptr [rdi], cl ; ret 0xc35b
0x00000000000dba16 : ror byte ptr [rdi], cl ; ret 0xf2e9
0x00000000001004cf : ror byte ptr [rdi], cl ; test eax, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010059f : ror byte ptr [rdi], cl ; test esi, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e6da6 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000b1ad9 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000dbb20 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc209
0x00000000000b1752 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd138
0x000000000008672d : ror byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000001aeebe : ror byte ptr [rdx + 0xd1cfff5], 1 ; stc ; mov ch, dh ; jmp qword ptr [rdx]
0x0000000000179328 : ror byte ptr [rsi - 0xe], 1 ; push rax ; repne ; call qword ptr [rax]
0x00000000000cc2d9 : ror dword ptr [r8 + 0x39], -0xd ; ja 0xcc279 ; pop rbx ; pop rbp ; ret
0x00000000000cc2da : ror dword ptr [rax + 0x39], -0xd ; ja 0xcc278 ; pop rbx ; pop rbp ; ret
0x000000000012f8bd : ror dword ptr [rax + 0x4800154c], -0x7d ; ret 0x4101
0x00000000000c2a31 : ror dword ptr [rax + 0x63], cl ; ret
0x00000000000f852c : ror dword ptr [rax + 0xf], cl ; ret
0x000000000013db38 : ror dword ptr [rax + 1], -8 ; ret
0x000000000013d9f8 : ror dword ptr [rax + 1], -8 ; sub rax, rsi ; ret
0x000000000003df74 : ror dword ptr [rax + 1], 1 ; ret 0x8b48
0x0000000000132732 : ror dword ptr [rax + 1], cl ; ret
0x000000000012bb12 : ror dword ptr [rax - 0x39], 1 ; ret 0xfffe
0x000000000007548e : ror dword ptr [rax - 0x73], 0x41 ; adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x00000000000d5695 : ror dword ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 0x39], cl ; ret 0x574
0x00000000000f8b3d : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000002ab8c : ror dword ptr [rax - 0x77], 1 ; fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000000e2ec2 : ror dword ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000298f2 : ror dword ptr [rax - 0x77], 1 ; ret 0xb70f
0x00000000000c7354 : ror dword ptr [rax - 0x77], cl ; ret
0x0000000000074c0d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x74c07 ; ret
0x000000000007b9bd : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7b9b7 ; ret
0x00000000000396b5 : ror dword ptr [rax - 0x7d], cl ; in al, dx ; cmp dh, dh ; ret 0x7401
0x00000000000d2759 : ror dword ptr [rcx + 0x47892c47], 0x30 ; ret
0x000000000002641e : ror dword ptr [rcx + 0x7b808], 1 ; add byte ptr [rax], al ; jmp 0x263f3
0x0000000000051ea2 : ror dword ptr [rcx + 1], 1 ; ret 0x8d4d
0x000000000003e7f5 : ror dword ptr [rcx - 0x3f], cl ; sti ; add cl, byte ptr [rcx + 0x29] ; ret
0x00000000000c87a1 : ror dword ptr [rcx - 0x77], cl ; ret 0x1f0f
0x0000000000163077 : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000097a45 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], -8 ; ret
0x000000000003e36d : ror dword ptr [rdi], -0x6b ; ret 0xd349
0x00000000000f0ee5 : ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x00000000000d3a49 : ror dword ptr [rdi], -0x6e ; ret 0xd138
0x0000000000161798 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161ea4 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161c76 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x0000000000162da0 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161bf6 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000161f34 : ror dword ptr [rdi], -0x7b ; je 0x161f44 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161a2b : ror dword ptr [rdi], -0x7b ; jno 0x161a40 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161af3 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161770 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000012feb4 : ror dword ptr [rdi], -0x7c ; wait ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000134b6b : ror dword ptr [rdi], 0x1f ; add bl, sil ; ret
0x00000000000ee05c : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x00000000000b3057 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000082566 : ror dword ptr [rdi], cl ; xchg dword ptr [rcx - 0x9fffffb], edi ; ret
0x0000000000080b5a : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x000000000010d183 : ror eax, 8 ; ret
0x000000000017a730 : ror edx, 1 ; hlt ; call rcx
0x0000000000074c0c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x74c08 ; ret
0x000000000007b9bc : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x7b9b8 ; ret
0x000000000006230b : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x111743], al ; call qword ptr [rax]
0x0000000000061fbc : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x116b43], al ; call qword ptr [rax]
0x000000000018b9fd : sahf ; add dword ptr [rax], eax ; pushfq ; mov ebx, esi ; jmp rsp
0x00000000000cb69e : sahf ; fdivp st(3) ; dec dword ptr [rax + 1] ; ret
0x0000000000196bb1 : sahf ; in eax, dx ; call rbx
0x00000000000025c2 : sahf ; jl 0x2557 ; loop 0x25a2 ; ret 0x23cb
0x00000000000025c1 : sahf ; jl 0x2558 ; loop 0x25a3 ; ret 0x23cb
0x00000000001883ec : sahf ; jp 0x1883f2 ; ljmp ptr [rsi] ; jp 0x1883f6 ; call rsp
0x0000000000187570 : sahf ; mov edx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x000000000013e96e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000019d841 : sahf ; out dx, al ; jmp qword ptr [rcx]
0x00000000000f06ee : sahf ; ret
0x00000000000b7eb0 : sahf ; ret 0x1fbf
0x0000000000117dae : sahf ; ret 0x2a
0x0000000000175025 : sahf ; ret 0x38ae
0x00000000000b17c4 : sahf ; ret 0xe9c1
0x000000000000243f : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x000000000012308e : sahf ; test eax, 0x8948fff4 ; fucompi st(0) ; salc ; ret
0x0000000000190970 : sal ah, -0x17 ; call qword ptr [rdx]
0x000000000018794c : sal ah, -5 ; call qword ptr [rax]
0x0000000000187940 : sal al, 1 ; sti ; jmp qword ptr [rax]
0x00000000000f2dbd : sal bh, -0x28 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a295 : sal bh, -0x28 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000012a874 : sal bh, -0x28 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000102aa2 : sal bh, -0x28 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005e0fe : sal bh, -0x28 ; pop rbx ; ret
0x0000000000022b1a : sal bh, -0x28 ; ret
0x00000000000b4ee4 : sal bh, -0x30 ; add eax, 0x16e ; ret
0x00000000000a2716 : sal bh, -0xf ; pop rbx ; mov eax, eax ; ret
0x0000000000088ee7 : sal bh, 1 ; ret 0x8000
0x0000000000088da7 : sal bh, 1 ; ret 0xc000
0x0000000000088c67 : sal bh, 1 ; ret 0xe000
0x0000000000088b27 : sal bh, 1 ; ret 0xf000
0x00000000000889e7 : sal bh, 1 ; ret 0xf800
0x00000000000888a7 : sal bh, 1 ; ret 0xfc00
0x0000000000088767 : sal bh, 1 ; ret 0xfe00
0x0000000000088627 : sal bh, 1 ; ret 0xff00
0x00000000000884e7 : sal bh, 1 ; ret 0xff80
0x00000000000883a7 : sal bh, 1 ; ret 0xffc0
0x0000000000088267 : sal bh, 1 ; ret 0xffe0
0x0000000000088127 : sal bh, 1 ; ret 0xfff0
0x0000000000087fe7 : sal bh, 1 ; ret 0xfff8
0x0000000000087ea7 : sal bh, 1 ; ret 0xfffc
0x0000000000087d67 : sal bh, 1 ; ret 0xfffe
0x0000000000187994 : sal bh, 1 ; sti ; jmp qword ptr [rax]
0x000000000004f1bc : sal bh, cl ; int1 ; add r8d, eax ; mov eax, r8d ; ret
0x000000000002c4e3 : sal bh, cl ; test byte ptr [rax - 0x75], 5 ; ret
0x0000000000179c61 : sal bl, 1 ; jmp qword ptr [rax]
0x000000000003851b : sal bl, 1 ; ret
0x00000000000a421f : sal byte ptr [rax + rbx + 0x49], -0x7d ; ret 0x4908
0x00000000000e2e81 : sal byte ptr [rax + rdi + 0xf], -0x4a ; xor byte ptr [rax - 0x77], cl ; ret 0xf980
0x0000000000129f25 : sal byte ptr [rax + rsi*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x000000000008c948 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000008b670 : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 8 ; ret
0x000000000005dad0 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x0000000000050213 : sal byte ptr [rbp + 5], -0xa ; ret 0x7450
0x0000000000108697 : sal byte ptr [rbp + 6], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000036ab7 : sal byte ptr [rbp + 6], -0xd ; ret
0x0000000000108d74 : sal byte ptr [rbp + 9], -0xd ; ret
0x0000000000122224 : sal byte ptr [rbp + 9], 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000120356 : sal byte ptr [rbp + rax + 0x48], -0x77 ; out dx, eax ; call rax
0x00000000001273e6 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000121f25 : sal byte ptr [rbp + rax + 0x4c], cl ; mov edi, esp ; call rdx
0x0000000000089351 : sal byte ptr [rbp + rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000097658 : sal byte ptr [rbp + rbp*8 + 0x41], 1 ; cmp eax, ecx ; je 0x97651 ; ret
0x0000000000041bdf : sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x000000000007d105 : sal byte ptr [rbp - 0x10], -0xd ; ret
0x0000000000097545 : sal byte ptr [rbp - 0x10], cl ; ret
0x000000000003816e : sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x0000000000108f7e : sal byte ptr [rbp - 0x11], cl ; leave ; ret
0x00000000000a1fc0 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000074c10 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000009780a : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000010ca0c : sal byte ptr [rbp - 0x17], -0xd ; ret
0x000000000012c526 : sal byte ptr [rbp - 0x19], cl ; pop rbx ; ret
0x0000000000097877 : sal byte ptr [rbp - 0x1a], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000975ea : sal byte ptr [rbp - 0x1d], -0xd ; ret
0x0000000000098a3b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], -0x38 ; ret
0x00000000000c6be0 : sal byte ptr [rbp - 0x21], cl ; ret
0x00000000000c6bb6 : sal byte ptr [rbp - 0x24], cl ; ret
0x0000000000035333 : sal byte ptr [rbp - 0x27], cl ; ret
0x00000000000a40fa : sal byte ptr [rbp - 0x35], -0xd ; ret
0x000000000010907c : sal byte ptr [rbp - 0x3f], -0x37 ; ret
0x000000000012e13f : sal byte ptr [rbp - 0x44], -0x15 ; ret 0x1f0f
0x00000000000e4eb0 : sal byte ptr [rbp - 0x60], cl ; mov edx, dword ptr [r12 + 4] ; jmp 0xe4e85
0x0000000000097f4b : sal byte ptr [rbp - 0x63], 0x48 ; mov eax, edi ; ret
0x000000000008768a : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000a55cb : sal byte ptr [rbp - 0xe], cl ; ret
0x0000000000108c80 : sal byte ptr [rbp - 0xf], 0x5a ; pop r10 ; ret
0x00000000000f3dc2 : sal byte ptr [rbx + rax + 0x48], -0x77 ; adc bl, dh ; ret
0x0000000000089812 : sal byte ptr [rbx + rbx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000c0f49 : sal byte ptr [rbx + rcx + 0x48], -0x7d ; ret
0x00000000000f4555 : sal byte ptr [rbx + rcx + 0x48], -0x7d ; ret 0x4808
0x000000000012b8a2 : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x00000000000317f1 : sal byte ptr [rbx + rdx + 0x48], -0x7d ; ret 0x4901
0x0000000000187a84 : sal byte ptr [rbx], 1 ; cld ; call rax
0x0000000000120dea : sal byte ptr [rcx + 0x48], -0x75 ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006a97c : sal byte ptr [rcx + 0x48], -0x77 ; ret
0x0000000000104072 : sal byte ptr [rcx + rcx + 0x48], -0x75 ; adc byte ptr [rax + 0x39], cl ; ret
0x0000000000104947 : sal byte ptr [rcx + rcx - 0x77], cl ; ret 0xeac1
0x000000000012b82d : sal byte ptr [rcx + rdx*8 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000108686 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], -6 ; setae al ; ret
0x000000000002c4e1 : sal byte ptr [rcx], 1 ; sal bh, cl ; test byte ptr [rax - 0x75], 5 ; ret
0x0000000000187354 : sal byte ptr [rdi - 5], 1 ; jmp qword ptr [rax]
0x000000000002173c : sal byte ptr [rdx + rax*2 - 0xa], cl ; ret 0x7401
0x000000000013db33 : sal byte ptr [rdx + rbx*8 + 0x48], 0x63 ; ror dword ptr [rax + 1], -8 ; ret
0x0000000000089623 : sal byte ptr [rdx + rcx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000098ed3 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x0000000000087883 : sal byte ptr [rdx + rdx + 0x48], -1 ; ret 0x2288
0x0000000000097bcb : sal byte ptr [rdx + rdx*8 + 0xf], -0x43 ; ror byte ptr [rax + 1], -8 ; ret
0x0000000000131277 : sal byte ptr [rsi + rax + 0x31], -0x40 ; ret
0x00000000001252fa : sal byte ptr [rsi + rax + 0x48], -0x73 ; jge 0x125318 ; call rax
0x000000000012c5aa : sal byte ptr [rsi + rax + 0x48], -0x73 ; jge 0x12c5c8 ; call rax
0x000000000012ccb3 : sal byte ptr [rsi + rax + 0x48], -0x73 ; jge 0x12ccd1 ; call rax
0x000000000012831e : sal byte ptr [rsi + rax + 0x48], -0x73 ; jnp 0x128394 ; call rax
0x0000000000128d4e : sal byte ptr [rsi + rax + 0x48], -0x73 ; jnp 0x128db4 ; call rax
0x00000000000895c7 : sal byte ptr [rsi + rsi*2 + 0x48], cl ; bsf eax, edx ; ret
0x00000000001879e8 : sal byte ptr [rsi], 1 ; cld ; call rax
0x00000000001879e4 : sal byte ptr [rsp + rdi*8], 1 ; call rax
0x00000000001ab431 : sal ch, cl ; jmp qword ptr [rsi]
0x00000000000a2639 : sal dh, -0x3a ; lock je 0xa260a ; movzx eax, dl ; pop rbx ; ret
0x00000000000d2951 : sal dh, -0x3f ; add dword ptr [rbp - 0x79], esi ; pop rbx ; ret
0x00000000000fad95 : sal dh, cl ; and al, 0x29 ; or byte ptr [rdi], 0x95 ; ret 0xcfeb
0x0000000000097635 : sal dword ptr [rax + rsi*8 - 0xd], 1 ; ret
0x00000000000365a1 : sal dword ptr [rbp + 0xc], 0x48 ; add esp, 8 ; ret
0x00000000000362c6 : sal dword ptr [rbp + 7], 0x48 ; add esp, 8 ; ret
0x00000000000a3c58 : sal dword ptr [rbp - 0x1b], 1 ; sub eax, r8d ; nop ; ret
0x00000000000432e6 : sal dword ptr [rcx + 0x48], 0x39 ; ret
0x0000000000097767 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x000000000008950d : sal dword ptr [rcx], 1 ; ret
0x00000000000375c5 : sal dword ptr [rcx], 1 ; rol cl, -0x17 ; add esi, esi ; ret 0xf304
0x000000000019529c : sal dword ptr [rsi - 0x14], cl ; jmp qword ptr [rdx]
0x00000000001a0a9d : sal eax, 1 ; jmp qword ptr [rdx]
0x000000000018bff1 : sal ebp, -1 ; mov ah, -0x38 ; add dword ptr [rax], eax ; ret 0xfff5
0x00000000001ab4d9 : sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001a1db9 : sal ecx, 1 ; jmp qword ptr [rbx]
0x000000000017b4ad : sal esi, 1 ; dec dword ptr [rcx + rdx*8] ; idiv bh ; ret
0x000000000018eac5 : salc ; add al, byte ptr [rax] ; mov ah, -0x67 ; cli ; jmp rsp
0x00000000001ac7cd : salc ; add dword ptr [rax], eax ; add bh, ah ; cmc ; call qword ptr [rax]
0x00000000000acf92 : salc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x00000000001630b6 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000001ac7e5 : salc ; add dword ptr [rax], eax ; clc ; out -0xb, al ; call qword ptr [rax]
0x00000000001ac7b5 : salc ; add dword ptr [rax], eax ; or bh, ah ; cmc ; call qword ptr [rax]
0x000000000001f6a5 : salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f681
0x000000000012529b : salc ; add rdi, 0x10 ; jmp rcx
0x0000000000143726 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000165e51 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007ea23 : salc ; call qword ptr [rax]
0x0000000000019560 : salc ; call qword ptr [rdi]
0x0000000000107009 : salc ; call rax
0x000000000019c0c4 : salc ; cmp dh, ch ; jmp qword ptr [rdx]
0x00000000001b1e14 : salc ; cmp esi, esi ; jmp qword ptr [rdx]
0x0000000000118b4f : salc ; ja 0x118b3c ; mov eax, 0xffffffff ; ret
0x00000000000f1d75 : salc ; ja 0xf1d84 ; ret
0x000000000002e192 : salc ; jmp r14
0x0000000000083442 : salc ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x0000000000075f30 : salc ; mov eax, 0xffffffff ; ja 0x75f49 ; ret
0x000000000008924c : salc ; mov eax, edx ; ret
0x0000000000001bec : salc ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000a4239 : salc ; mov rax, rdi ; nop dword ptr [rax] ; ret
0x000000000018a361 : salc ; out dx, al ; call rsp
0x000000000019dbb9 : salc ; out dx, al ; jmp rdx
0x00000000000e4705 : salc ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000022d4 : salc ; ret
0x00000000000025c6 : salc ; ret 0x23cb
0x00000000001954ac : salc ; shr esp, 1 ; jmp qword ptr [rdx]
0x000000000018ef69 : salc ; sti ; call rsp
0x00000000001885b0 : salc ; stosb byte ptr [rdi], al ; cld ; inc dword ptr [rsi - 0x4f] ; cld ; call rsi
0x00000000001379a3 : salc ; sub byte ptr [rax], al ; test eax, eax ; jne 0x1379b9 ; xor eax, eax ; ret
0x00000000001379d3 : salc ; sub byte ptr [rax], al ; test eax, eax ; jne 0x1379e9 ; xor eax, eax ; ret
0x0000000000137a03 : salc ; sub byte ptr [rax], al ; test eax, eax ; jne 0x137a19 ; xor eax, eax ; ret
0x0000000000137a33 : salc ; sub byte ptr [rax], al ; test eax, eax ; jne 0x137a49 ; xor eax, eax ; ret
0x0000000000137a63 : salc ; sub byte ptr [rax], al ; test eax, eax ; jne 0x137a79 ; xor eax, eax ; ret
0x00000000001a233c : salc ; test esi, ecx ; jmp qword ptr [rdx]
0x0000000000177b01 : sar bh, 1 ; jmp qword ptr [rdi]
0x000000000004c595 : sar bh, cl ; dec dword ptr [rax - 0x77] ; ret 0x31eb
0x000000000005a42d : sar bh, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000187771 : sar bl, -1 ; rol ah, 1 ; sti ; jmp qword ptr [rax]
0x00000000001879a0 : sar bl, -5 ; call qword ptr [rax]
0x00000000000d2e41 : sar byte ptr [rax + 0x25], -0x77 ; ret 0x8b49
0x00000000001364b2 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012f5a1 : sar byte ptr [rax + 1], cl ; jne 0x12f5b8 ; ret
0x000000000012f5e1 : sar byte ptr [rax + 1], cl ; jne 0x12f5f8 ; ret
0x0000000000084657 : sar byte ptr [rax + 6], -0xd ; ret
0x0000000000071f6c : sar byte ptr [rax + 9], -0xd ; ret
0x0000000000187520 : sar byte ptr [rax - 0x44ee0003], -3 ; call qword ptr [rcx]
0x00000000000d2925 : sar byte ptr [rax], 0xe ; je 0xd28b8 ; pop rbx ; ret
0x00000000000e36ac : sar byte ptr [rbp - 0x437f000d], 0x24 ; ret
0x00000000000faf83 : sar byte ptr [rdi + rdi + 0x74], 1 ; ret
0x0000000000002b61 : sar byte ptr [rdx], cl ; adc al, -0x19 ; ret
0x00000000000f6d66 : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x00000000000c289c : sar byte ptr [rsi + 2], 1 ; ret
0x00000000001759bf : sar byte ptr [rsi + rax*2], -8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001791a0 : sar byte ptr [rsp + rdi*8 - 1], 1 ; lock jge 0x1791aa ; call qword ptr [rax]
0x00000000000565f4 : sar ch, -1 ; dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000018f049 : sar ch, 1 ; jmp rsp
0x00000000000e5653 : sar ch, cl ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000005a42c : sar dil, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000000b23ec : sar dl, 0x30 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3145
0x00000000000f7967 : sar dl, cl ; dec dword ptr [rax + 0x39] ; ret
0x0000000000187500 : sar dword ptr [rax - 0x44ee0003], 1 ; std ; call qword ptr [rcx]
0x0000000000087583 : sar dword ptr [rcx + 0x33], 0 ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000001a1b66 : sar dword ptr [rcx + rsi*8 - 1], cl ; sbb al, 0xd ; mov ch, 0x7b ; int1 ; jmp qword ptr [rdx]
0x0000000000036681 : sar eax, 0x10 ; ret
0x000000000003634b : sar eax, 0x1f ; not eax ; and eax, ecx ; ret
0x00000000000c0299 : sar eax, 0x1f ; pop rbx ; ret
0x0000000000133994 : sar eax, 0x1f ; ret
0x000000000003663a : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x0000000000035f8d : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000003a9d : sar eax, 1 ; cmp eax, ecx ; mov bl, -9 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000075c7c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000077d40 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000739fa : sar eax, 2 ; ret
0x00000000000a448b : sar eax, 2 ; sub rdx, rax ; jmp 0xa4422
0x000000000010b71d : sar eax, 6 ; ret
0x00000000001877a1 : sar ebx, cl ; call qword ptr [rax - 0x1f00042c]
0x0000000000175723 : sar ecx, 1 ; jnp 0x1756e4 ; ret
0x000000000004c6f9 : sar edi, 1 ; dec dword ptr [rax - 0x77] ; ret 0x1beb
0x0000000000069293 : sar edi, 1 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000003c814 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000003c827 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x00000000000f78c3 : sar edx, cl ; dec dword ptr [rax + 0x39] ; ret
0x000000000008cb17 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000075c7b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000035f8c : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x00000000000739f9 : sar rax, 2 ; ret
0x00000000000a448a : sar rax, 2 ; sub rdx, rax ; jmp 0xa4423
0x000000000010b71c : sar rax, 6 ; ret
0x000000000008cb16 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000022d7a : sbb ah, byte ptr [rax] ; call rax
0x0000000000029afc : sbb al, -0x15 ; ret 0x8948
0x00000000001ab5ac : sbb al, -0x3c ; add dword ptr [rax], eax ; mov al, -0x2d ; cmc ; jmp qword ptr [rsi]
0x000000000017d004 : sbb al, -0x43 ; cli ; jmp rsp
0x00000000000d1763 : sbb al, -0x48 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001a8dac : sbb al, -0x64 ; add dword ptr [rax], eax ; xor bpl, sil ; jmp qword ptr [rcx]
0x00000000000e3738 : sbb al, -0x66 ; add rbx, r10 ; jmp rbx
0x00000000001a79ac : sbb al, -0x78 ; add dword ptr [rax], eax ; rcr ch ; hlt ; call rbx
0x00000000001a2104 : sbb al, -0x7b ; int1 ; jmp qword ptr [rdx]
0x00000000000f4853 : sbb al, -0x7d ; ret
0x00000000000b78d2 : sbb al, -3 ; dec dword ptr [rax - 0x77] ; jmp 0x48ce022c
0x0000000000187b0d : sbb al, -4 ; jmp qword ptr [rax]
0x00000000001a12e0 : sbb al, 0 ; add byte ptr [rax], al ; push rsp ; and dword ptr [rcx], eax ; add al, bh ; ret
0x000000000019b3e0 : sbb al, 0 ; add byte ptr [rax], al ; push rsp ; ret 0
0x00000000000cc1d9 : sbb al, 0 ; add byte ptr [rax], al ; syscall ; neg eax ; ret
0x00000000001a0fac : sbb al, 0x1e ; add dword ptr [rax], eax ; adc byte ptr [rsi - 0xf], al ; call qword ptr [rdx]
0x000000000010700e : sbb al, 0x20 ; je 0x107076 ; xor eax, eax ; pop rbx ; ret
0x000000000010700d : sbb al, 0x20 ; je 0x107077 ; xor eax, eax ; pop rbx ; ret
0x0000000000101104 : sbb al, 0x2c ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000bec7c : sbb al, 0x30 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000019c22c : sbb al, 0x3b ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a31ac : sbb al, 0x40 ; add dword ptr [rax], eax ; and byte ptr [rdx + rsi*8], al ; jmp rdx
0x0000000000002f64 : sbb al, 0x44 ; nop ; ret 0x5bdb
0x0000000000193aac : sbb al, 0x49 ; add byte ptr [rax], al ; jo 0x193aea ; jmp 0x193aba
0x0000000000193dac : sbb al, 0x4c ; add byte ptr [rax], al ; push rax ; jmp 0x193dba
0x00000000001a45ac : sbb al, 0x54 ; add dword ptr [rax], eax ; and byte ptr [rbx], ch ; jmp rdx
0x00000000001ad06c : sbb al, 0x68 ; cmc ; jmp qword ptr [rdx]
0x00000000001ac1cc : sbb al, 0x72 ; add dword ptr [rax], eax ; push rax ; loope 0x1ac1cf ; call qword ptr [rcx]
0x0000000000196bac : sbb al, 0x7a ; add byte ptr [rax], al ; loopne 0x196b57 ; in eax, dx ; call rbx
0x000000000019ba94 : sbb al, 0xa ; out dx, al ; jmp qword ptr [rdx]
0x0000000000000454 : sbb al, 0xc ; ret 0x4412
0x00000000001a9dd2 : sbb al, 0xd ; adc al, -0x1f ; hlt ; jmp qword ptr [rdx]
0x000000000019a78a : sbb al, 0xd ; adc al, -0x27 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019b972 : sbb al, 0xd ; adc bh, ah ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019c152 : sbb al, 0xd ; adc bh, byte ptr [rcx] ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ad43a : sbb al, 0xd ; adc ebp, dword ptr [rcx - 0xb] ; jmp qword ptr [rdx]
0x00000000001abefa : sbb al, 0xd ; adc ebx, dword ptr [rcx - 0xb] ; jmp qword ptr [rdx]
0x00000000001ab8ca : sbb al, 0xd ; adc esp, dword ptr [rbx + rdi*8] ; jmp qword ptr [rdx]
0x000000000019aa5a : sbb al, 0xd ; adc esp, ebp ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ad892 : sbb al, 0xd ; add byte ptr [rdx - 0xb], dh ; jmp qword ptr [rdx]
0x0000000000195a92 : sbb al, 0xd ; add byte ptr [rsi - 0x13], ch ; jmp qword ptr [rdx]
0x00000000001ace42 : sbb al, 0xd ; add ch, byte ptr [rax - 0xb] ; jmp qword ptr [rdx]
0x00000000001aa41a : sbb al, 0xd ; add ch, cl ; hlt ; jmp qword ptr [rdx]
0x000000000019bfa2 : sbb al, 0xd ; add dword ptr [rdi], esi ; out dx, al ; jmp qword ptr [rdx]
0x000000000019a54a : sbb al, 0xd ; add eax, ebx ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000195a4a : sbb al, 0xd ; add ebp, dword ptr [rsi - 0x13] ; jmp qword ptr [rdx]
0x0000000000190d6a : sbb al, 0xd ; add r10b, r13b ; jmp qword ptr [rdx]
0x0000000000196482 : sbb al, 0xd ; and al, 0x71 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019bc8a : sbb al, 0xd ; and ch, byte ptr [rax] ; out dx, al ; jmp qword ptr [rdx]
0x000000000019b732 : sbb al, 0xd ; and cl, bh ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001aa4a2 : sbb al, 0xd ; and cl, ch ; hlt ; jmp qword ptr [rdx]
0x0000000000195b92 : sbb al, 0xd ; and ebp, dword ptr [rsi - 0x13] ; jmp qword ptr [rdx]
0x000000000019bfea : sbb al, 0xd ; and esi, dword ptr [rdi] ; out dx, al ; jmp qword ptr [rdx]
0x000000000019976a : sbb al, 0xd ; call 0x2319852e
0x000000000019a622 : sbb al, 0xd ; call 0x23199405
0x00000000001b6aca : sbb al, 0xd ; call 0x231b620a
0x00000000001ace8a : sbb al, 0xd ; clc ; cmc ; jmp qword ptr [rdx]
0x000000000019b89a : sbb al, 0xd ; cld ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001afe4a : sbb al, 0xd ; cmc ; fcompi st(5) ; jmp qword ptr [rdx]
0x00000000001aba12 : sbb al, 0xd ; cmc ; jmp qword ptr [rdx]
0x00000000001adcc2 : sbb al, 0xd ; cmc ; js 0x1adcc1 ; jmp qword ptr [rdx]
0x00000000001af2ea : sbb al, 0xd ; cmp al, -0x6d ; cmc ; jmp qword ptr [rdx]
0x000000000019bc42 : sbb al, 0xd ; cmp al, 0x28 ; out dx, al ; jmp qword ptr [rdx]
0x000000000019c10a : sbb al, 0xd ; cmp bh, byte ptr [rcx] ; out dx, al ; jmp qword ptr [rdx]
0x00000000001abf8a : sbb al, 0xd ; cmp bl, byte ptr [rcx - 0xb] ; jmp qword ptr [rdx]
0x00000000001a755a : sbb al, 0xd ; cmp byte ptr [rbx - 0xc], ah ; jmp qword ptr [rdx]
0x00000000001b1dca : sbb al, 0xd ; cmp dh, dh ; jmp qword ptr [rdx]
0x0000000000193eea : sbb al, 0xd ; cmp ebx, ebp ; jmp qword ptr [rdx]
0x0000000000196fea : sbb al, 0xd ; cmp edi, dword ptr [rbx - 0x13] ; jmp qword ptr [rdx]
0x000000000019c1e2 : sbb al, 0xd ; cmp r13, rsi ; jmp qword ptr [rdx]
0x000000000019c19a : sbb al, 0xd ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp esi, ebp ; jmp qword ptr [rdx]
0x0000000000198fea : sbb al, 0xd ; cmpsb byte ptr [rsi], byte ptr [rdi] ; movsd dword ptr [rdi], dword ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a214a : sbb al, 0xd ; cmpsb byte ptr [rsi], byte ptr [rdi] ; test esi, ecx ; jmp qword ptr [rdx]
0x00000000001a0c02 : sbb al, 0xd ; cmpsd dword ptr [rsi], dword ptr [rdi] ; fdiv st(0) ; jmp qword ptr [rdx]
0x0000000000193f32 : sbb al, 0xd ; cwde ; cmp ch, bl ; jmp qword ptr [rdx]
0x0000000000194f52 : sbb al, 0xd ; cwde ; jbe 0x194f48 ; jmp qword ptr [rdx]
0x00000000001961ca : sbb al, 0xd ; cwde ; jo 0x1961c1 ; jmp qword ptr [rdx]
0x00000000001a052a : sbb al, 0xd ; cwde ; mov ch, -0x10 ; jmp qword ptr [rdx]
0x000000000019d38a : sbb al, 0xd ; fcomp qword ptr [rcx - 0x12] ; jmp qword ptr [rdx]
0x00000000001afeda : sbb al, 0xd ; fcompi st(5) ; jmp qword ptr [rdx]
0x000000000019628a : sbb al, 0xd ; fdiv dword ptr [rax - 0x13] ; jmp qword ptr [rdx]
0x00000000001a98ea : sbb al, 0xd ; fdivr st(4), st(0) ; jmp qword ptr [rdx]
0x0000000000196342 : sbb al, 0xd ; fidiv word ptr [rax - 0x13] ; jmp qword ptr [rdx]
0x00000000001abe72 : sbb al, 0xd ; fstp qword ptr [rax - 0xb] ; jmp qword ptr [rdx]
0x00000000001aff6a : sbb al, 0xd ; fstp st(7), st(0) ; cmc ; jmp qword ptr [rdx]
0x000000000019a742 : sbb al, 0xd ; fstpnce st(0), st(0) ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001aa22a : sbb al, 0xd ; fsubp st(0) ; hlt ; jmp qword ptr [rdx]
0x000000000019bd1a : sbb al, 0xd ; fsubr dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdx]
0x000000000019a66a : sbb al, 0xd ; fsubr st(5) ; jmp qword ptr [rdx]
0x00000000001a9fe2 : sbb al, 0xd ; fucom st(6) ; hlt ; jmp qword ptr [rdx]
0x0000000000199f72 : sbb al, 0xd ; fucomi st(5) ; jmp qword ptr [rdx]
0x00000000001a75a2 : sbb al, 0xd ; hlt ; jmp qword ptr [rdx]
0x00000000001a06b2 : sbb al, 0xd ; hlt ; mov ch, -0x10 ; jmp qword ptr [rdx]
0x00000000001a0bba : sbb al, 0xd ; imul ebx, eax, -0x10 ; jmp qword ptr [rdx]
0x00000000001aaa72 : sbb al, 0xd ; in al, -0x10 ; hlt ; jmp qword ptr [rdx]
0x00000000001aef52 : sbb al, 0xd ; in al, -0x78 ; cmc ; jmp qword ptr [rdx]
0x00000000001a2762 : sbb al, 0xd ; in al, -0x79 ; int1 ; jmp qword ptr [rdx]
0x0000000000198022 : sbb al, 0xd ; in al, -0x7b ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001aff22 : sbb al, 0xd ; in al, dx ; fcompi st(5) ; jmp qword ptr [rdx]
0x00000000001981ba : sbb al, 0xd ; in al, dx ; test ebp, ebp ; jmp qword ptr [rdx]
0x00000000001acfa2 : sbb al, 0xd ; in eax, 0x67 ; cmc ; jmp qword ptr [rdx]
0x000000000019541a : sbb al, 0xd ; in eax, 0x7d ; in al, dx ; jmp qword ptr [rdx]
0x0000000000195ada : sbb al, 0xd ; in eax, dx ; insd dword ptr [rdi], dx ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000195192 : sbb al, 0xd ; in eax, dx ; jbe 0x195188 ; jmp qword ptr [rdx]
0x00000000001969f2 : sbb al, 0xd ; in eax, dx ; js 0x1969e9 ; jmp qword ptr [rdx]
0x00000000001ae98a : sbb al, 0xd ; in eax, dx ; xchg ebp, esi ; jmp qword ptr [rdx]
0x00000000001a268a : sbb al, 0xd ; in eax, dx ; xchg ecx, esi ; jmp qword ptr [rdx]
0x00000000001ad63a : sbb al, 0xd ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rdx]
0x00000000001aaaba : sbb al, 0xd ; insb byte ptr [rdi], dx ; int1 ; hlt ; jmp qword ptr [rdx]
0x00000000001aa152 : sbb al, 0xd ; insd dword ptr [rdi], dx ; out -0xc, eax ; jmp qword ptr [rdx]
0x00000000001b0fd2 : sbb al, 0xd ; insd dword ptr [rdi], dx ; sub esi, esi ; jmp qword ptr [rdx]
0x0000000000195682 : sbb al, 0xd ; int1 ; fsub st(4), st(0) ; jmp qword ptr [rdx]
0x0000000000194a2a : sbb al, 0xd ; jae 0x194a1a ; jmp 0x194a34
0x0000000000195f8a : sbb al, 0xd ; jae 0x196003 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000197422 : sbb al, 0xd ; jae 0x1974aa ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a166a : sbb al, 0xd ; jae 0x1a1665 ; jmp qword ptr [rdx]
0x00000000001aa6ba : sbb al, 0xd ; jae 0x1aa6ae ; hlt ; jmp qword ptr [rdx]
0x00000000001adb52 : sbb al, 0xd ; jae 0x1adbd3 ; cmc ; jmp qword ptr [rdx]
0x00000000001964ca : sbb al, 0xd ; jb 0x1964c1 ; jmp qword ptr [rdx]
0x00000000001a1452 : sbb al, 0xd ; jb 0x1a14ce ; int1 ; jmp qword ptr [rdx]
0x00000000001a2532 : sbb al, 0xd ; jb 0x1a24c2 ; int1 ; jmp qword ptr [rdx]
0x00000000001aed22 : sbb al, 0xd ; jb 0x1aecb3 ; cmc ; jmp qword ptr [rdx]
0x0000000000194f0a : sbb al, 0xd ; jbe 0x194f00 ; jmp qword ptr [rdx]
0x0000000000197732 : sbb al, 0xd ; jbe 0x1976bb ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019a81a : sbb al, 0xd ; jbe 0x19a80c ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000195f42 : sbb al, 0xd ; jg 0x195fbb ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000196052 : sbb al, 0xd ; jg 0x1960cb ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ae4f2 : sbb al, 0xd ; jg 0x1ae47b ; cmc ; jmp qword ptr [rdx]
0x0000000000196182 : sbb al, 0xd ; jge 0x1961fb ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001974ca : sbb al, 0xd ; jge 0x197552 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ada1a : sbb al, 0xd ; jge 0x1ada9b ; cmc ; jmp qword ptr [rdx]
0x000000000019777a : sbb al, 0xd ; jl 0x197704 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019b5ca : sbb al, 0xd ; jl 0x19b5d0 ; jmp qword ptr [rdx]
0x00000000001a1f0a : sbb al, 0xd ; jl 0x1a1f90 ; int1 ; jmp qword ptr [rdx]
0x00000000001ada62 : sbb al, 0xd ; jl 0x1adae3 ; cmc ; jmp qword ptr [rdx]
0x00000000001adee2 : sbb al, 0xd ; jl 0x1adee1 ; jmp qword ptr [rdx]
0x00000000001adf2a : sbb al, 0xd ; jl 0x1adf29 ; jmp qword ptr [rdx]
0x00000000001adf8a : sbb al, 0xd ; jl 0x1adf89 ; jmp qword ptr [rdx]
0x00000000001ae01a : sbb al, 0xd ; jl 0x1ae019 ; jmp qword ptr [rdx]
0x000000000019600a : sbb al, 0xd ; jle 0x196083 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a3c22 : sbb al, 0xd ; jle 0x1a3bcd ; jmp qword ptr [rdx]
0x0000000000195bda : sbb al, 0xd ; jne 0x195c51 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000199912 : sbb al, 0xd ; jno 0x1998d4 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ad84a : sbb al, 0xd ; jno 0x1ad849 ; jmp qword ptr [rdx]
0x0000000000196fa2 : sbb al, 0xd ; jnp 0x196f99 ; jmp qword ptr [rdx]
0x0000000000196a3a : sbb al, 0xd ; jns 0x196a31 ; jmp qword ptr [rdx]
0x0000000000196b4a : sbb al, 0xd ; jns 0x196bcd ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001958ea : sbb al, 0xd ; jo 0x19595e ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019a6b2 : sbb al, 0xd ; jo 0x19a693 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ad782 : sbb al, 0xd ; jo 0x1ad781 ; jmp qword ptr [rdx]
0x00000000001add0a : sbb al, 0xd ; jo 0x1add8c ; cmc ; jmp qword ptr [rdx]
0x000000000019427a : sbb al, 0xd ; jp 0x194215 ; jmp 0x194284
0x00000000001a1c82 : sbb al, 0xd ; jp 0x1a1d07 ; int1 ; jmp qword ptr [rdx]
0x00000000001aa672 : sbb al, 0xd ; jp 0x1aa665 ; hlt ; jmp qword ptr [rdx]
0x00000000001950ca : sbb al, 0xd ; js 0x195149 ; in al, dx ; jmp qword ptr [rdx]
0x00000000001adac2 : sbb al, 0xd ; js 0x1adb43 ; cmc ; jmp qword ptr [rdx]
0x000000000019752a : sbb al, 0xd ; lahf ; jg 0x197521 ; jmp qword ptr [rdx]
0x000000000019d462 : sbb al, 0xd ; lcall ptr [rbx - 0x12] ; jmp qword ptr [rdx]
0x0000000000197572 : sbb al, 0xd ; lea edi, dword ptr [rdi - 0x13] ; jmp qword ptr [rdx]
0x00000000001acc62 : sbb al, 0xd ; lea esp, dword ptr [rdi - 0xb] ; jmp qword ptr [rdx]
0x000000000019b7c2 : sbb al, 0xd ; leave ; cli ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001b05ca : sbb al, 0xd ; lock ; cmc ; jmp qword ptr [rdx]
0x000000000019aaea : sbb al, 0xd ; lock ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000196cd2 : sbb al, 0xd ; lock jp 0x196cc9 ; jmp qword ptr [rdx]
0x00000000001aee7a : sbb al, 0xd ; lock mov ch, dh ; jmp qword ptr [rdx]
0x00000000001abe2a : sbb al, 0xd ; lock pop rax ; cmc ; jmp qword ptr [rdx]
0x0000000000196d82 : sbb al, 0xd ; lodsb al, byte ptr [rsi] ; jp 0x196d79 ; jmp qword ptr [rdx]
0x00000000001975ea : sbb al, 0xd ; lodsd eax, dword ptr [rsi] ; jg 0x1975e1 ; jmp qword ptr [rdx]
0x0000000000197632 : sbb al, 0xd ; lodsd eax, dword ptr [rsi] ; jg 0x197629 ; jmp qword ptr [rdx]
0x000000000019bdf2 : sbb al, 0xd ; loope 0x19be2e ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a2602 : sbb al, 0xd ; loope 0x1a2592 ; int1 ; jmp qword ptr [rdx]
0x00000000001a9d42 : sbb al, 0xd ; loope 0x1a9d40 ; jmp qword ptr [rdx]
0x00000000001aea7a : sbb al, 0xd ; loope 0x1aea0a ; cmc ; jmp qword ptr [rdx]
0x00000000001aedf2 : sbb al, 0xd ; loope 0x1aed83 ; cmc ; jmp qword ptr [rdx]
0x0000000000196dca : sbb al, 0xd ; loopne 0x196e4d ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ae892 : sbb al, 0xd ; loopne 0x1ae820 ; cmc ; jmp qword ptr [rdx]
0x00000000001b004a : sbb al, 0xd ; loopne 0x1b0049 ; jmp qword ptr [rdx]
0x00000000001b00f2 : sbb al, 0xd ; loopne 0x1b00f1 ; jmp qword ptr [rdx]
0x000000000019681a : sbb al, 0xd ; mov ah, 0x75 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019bd62 : sbb al, 0xd ; mov al, 0x2e ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ac27a : sbb al, 0xd ; mov al, 0x59 ; cmc ; jmp qword ptr [rdx]
0x0000000000195c9a : sbb al, 0xd ; mov al, 0x6e ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a15ba : sbb al, 0xd ; mov bh, 0x73 ; int1 ; jmp qword ptr [rdx]
0x00000000001a1b0a : sbb al, 0xd ; mov bh, 0x7b ; int1 ; jmp qword ptr [rdx]
0x00000000001aa8ba : sbb al, 0xd ; mov bl, -0x15 ; hlt ; jmp qword ptr [rdx]
0x000000000019c422 : sbb al, 0xd ; mov bl, 0x49 ; out dx, al ; jmp qword ptr [rdx]
0x000000000019c07a : sbb al, 0xd ; mov byte ptr [rdi], dh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a06fa : sbb al, 0xd ; mov ch, -0x10 ; jmp qword ptr [rdx]
0x00000000001aa32a : sbb al, 0xd ; mov ch, -0x18 ; hlt ; jmp qword ptr [rdx]
0x000000000019be3a : sbb al, 0xd ; mov ch, 0x33 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a1b6a : sbb al, 0xd ; mov ch, 0x7b ; int1 ; jmp qword ptr [rdx]
0x00000000001abde2 : sbb al, 0xd ; mov cl, 0x58 ; cmc ; jmp qword ptr [rdx]
0x0000000000197162 : sbb al, 0xd ; mov cl, 0x7b ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001976ea : sbb al, 0xd ; mov cl, 0x7f ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a9a62 : sbb al, 0xd ; mov dh, -0x24 ; hlt ; jmp qword ptr [rdx]
0x0000000000195082 : sbb al, 0xd ; mov dh, byte ptr [rsi - 0x14] ; jmp qword ptr [rdx]
0x000000000019597a : sbb al, 0xd ; mov dword ptr [rbx - 0x13], gs ; jmp qword ptr [rdx]
0x000000000019c302 : sbb al, 0xd ; mov dword ptr [rsi], edi ; out dx, al ; jmp qword ptr [rdx]
0x000000000019867a : sbb al, 0xd ; mov ebp, ebp ; jmp qword ptr [rdx]
0x00000000001973da : sbb al, 0xd ; mov edi, dword ptr [rdi - 0x13] ; jmp qword ptr [rdx]
0x0000000000194f9a : sbb al, 0xd ; mov esi, dword ptr [rsi - 0x14] ; jmp qword ptr [rdx]
0x0000000000193802 : sbb al, 0xd ; movsb byte ptr [rdi], byte ptr [rsi] ; adc ebp, ebx ; jmp qword ptr [rdx]
0x00000000001a18ca : sbb al, 0xd ; movsd dword ptr [rdi], dword ptr [rsi] ; je 0x1a18c5 ; jmp qword ptr [rdx]
0x00000000001a9b7a : sbb al, 0xd ; neg ch ; hlt ; jmp qword ptr [rdx]
0x000000000019aa12 : sbb al, 0xd ; or ah, ch ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ad7ca : sbb al, 0xd ; or al, 0x71 ; cmc ; jmp qword ptr [rdx]
0x000000000019b582 : sbb al, 0xd ; or al, dh ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001affb2 : sbb al, 0xd ; or esp, eax ; cmc ; jmp qword ptr [rdx]
0x000000000019806a : sbb al, 0xd ; out -0x7b, eax ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001aa072 : sbb al, 0xd ; out -0xc, eax ; jmp qword ptr [rdx]
0x000000000019b92a : sbb al, 0xd ; out -5, eax ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019c032 : sbb al, 0xd ; out 0x36, eax ; out dx, al ; jmp qword ptr [rdx]
0x00000000001aeb9a : sbb al, 0xd ; out dx, al ; xchg ebp, esi ; jmp qword ptr [rdx]
0x00000000001acf12 : sbb al, 0xd ; out dx, eax ; cmc ; jmp qword ptr [rdx]
0x000000000019a5da : sbb al, 0xd ; out dx, eax ; xlatb ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a1f52 : sbb al, 0xd ; outsd dx, dword ptr [rsi] ; jge 0x1a1f4d ; jmp qword ptr [rdx]
0x00000000001adb9a : sbb al, 0xd ; outsd dx, dword ptr [rsi] ; js 0x1adb99 ; jmp qword ptr [rdx]
0x000000000019d3d2 : sbb al, 0xd ; pop r10 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001abf42 : sbb al, 0xd ; pop r9 ; cmc ; jmp qword ptr [rdx]
0x000000000019d342 : sbb al, 0xd ; pop rax ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ac412 : sbb al, 0xd ; pop rbx ; cmc ; jmp qword ptr [rdx]
0x000000000019aaa2 : sbb al, 0xd ; pop rbx ; lock in eax, dx ; jmp qword ptr [rdx]
0x000000000019d41a : sbb al, 0xd ; pop rbx ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ac00a : sbb al, 0xd ; pop rcx ; cmc ; jmp qword ptr [rdx]
0x00000000001aab02 : sbb al, 0xd ; pop rcx ; int1 ; hlt ; jmp qword ptr [rdx]
0x00000000001aa02a : sbb al, 0xd ; pop rcx ; out -0xc, eax ; jmp qword ptr [rdx]
0x0000000000199032 : sbb al, 0xd ; pop rcx ; test al, -0x13 ; jmp qword ptr [rdx]
0x00000000001adbe2 : sbb al, 0xd ; pop rdi ; js 0x1adbe1 ; jmp qword ptr [rdx]
0x00000000001a3cfa : sbb al, 0xd ; pop rdi ; stosb byte ptr [rdi], al ; jmp qword ptr [rdx]
0x00000000001a75ea : sbb al, 0xd ; pop rdx ; hlt ; jmp qword ptr [rdx]
0x000000000019613a : sbb al, 0xd ; pop rdx ; jo 0x196131 ; jmp qword ptr [rdx]
0x000000000019c542 : sbb al, 0xd ; pop rsi ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a14da : sbb al, 0xd ; pop rsp ; jae 0x1a14d5 ; jmp qword ptr [rdx]
0x000000000019d4f2 : sbb al, 0xd ; popfq ; pop rbx ; out dx, al ; jmp qword ptr [rdx]
0x0000000000194a72 : sbb al, 0xd ; push -0x17 ; jmp 0x194a7c
0x00000000001ae0f2 : sbb al, 0xd ; push 0x7c ; cmc ; jmp qword ptr [rdx]
0x0000000000195462 : sbb al, 0xd ; push rax ; jle 0x195458 ; jmp qword ptr [rdx]
0x000000000019b6ea : sbb al, 0xd ; push rax ; stc ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001b0e12 : sbb al, 0xd ; push rbp ; and esi, esi ; jmp qword ptr [rdx]
0x00000000001aab4a : sbb al, 0xd ; push rbp ; int1 ; hlt ; jmp qword ptr [rdx]
0x0000000000196f22 : sbb al, 0xd ; push rbp ; jnp 0x196f19 ; jmp qword ptr [rdx]
0x0000000000192622 : sbb al, 0xd ; push rbp ; test ch, dl ; jmp qword ptr [rdx]
0x0000000000196a82 : sbb al, 0xd ; push rbx ; jns 0x196a79 ; jmp qword ptr [rdx]
0x00000000001af37a : sbb al, 0xd ; push rbx ; xchg eax, esp ; cmc ; jmp qword ptr [rdx]
0x00000000001adfd2 : sbb al, 0xd ; push rcx ; jl 0x1adfd1 ; jmp qword ptr [rdx]
0x0000000000192c92 : sbb al, 0xd ; push rcx ; mov ch, dl ; jmp qword ptr [rdx]
0x00000000001a1d52 : sbb al, 0xd ; push rdi ; jge 0x1a1d4d ; jmp qword ptr [rdx]
0x000000000019638a : sbb al, 0xd ; push rdx ; jno 0x196381 ; jmp qword ptr [rdx]
0x00000000001ac052 : sbb al, 0xd ; push rdx ; pop rcx ; cmc ; jmp qword ptr [rdx]
0x000000000019b852 : sbb al, 0xd ; push rsi ; sti ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a140a : sbb al, 0xd ; push rsp ; jae 0x1a1405 ; jmp qword ptr [rdx]
0x00000000001af40a : sbb al, 0xd ; push rsp ; xchg eax, esi ; cmc ; jmp qword ptr [rdx]
0x000000000019767a : sbb al, 0xd ; pushfq ; jg 0x197671 ; jmp qword ptr [rdx]
0x000000000019d4aa : sbb al, 0xd ; rcr byte ptr [rbx - 0x12] ; jmp qword ptr [rdx]
0x0000000000193f7a : sbb al, 0xd ; ret
0x0000000000192322 : sbb al, 0xd ; ret 0xea6c
0x0000000000192992 : sbb al, 0xd ; ret 0xea87
0x0000000000197cca : sbb al, 0xd ; ret 0xed81
0x000000000019beca : sbb al, 0xd ; retf -0x11cd ; jmp qword ptr [rdx]
0x00000000001995ca : sbb al, 0xd ; retf -0x1248 ; jmp qword ptr [rdx]
0x0000000000196512 : sbb al, 0xd ; retf -0x128e ; jmp qword ptr [rdx]
0x0000000000195ce2 : sbb al, 0xd ; retf -0x1292 ; jmp qword ptr [rdx]
0x0000000000196eda : sbb al, 0xd ; retf ; jp 0x196ed1 ; jmp qword ptr [rdx]
0x00000000001980b2 : sbb al, 0xd ; retf ; test ebp, ebp ; jmp qword ptr [rdx]
0x00000000001b40da : sbb al, 0xd ; rol eax, -0xa ; jmp qword ptr [rdx]
0x000000000019529a : sbb al, 0xd ; sal dword ptr [rsi - 0x14], cl ; jmp qword ptr [rdx]
0x000000000019c0c2 : sbb al, 0xd ; salc ; cmp dh, ch ; jmp qword ptr [rdx]
0x00000000001b1e12 : sbb al, 0xd ; salc ; cmp esi, esi ; jmp qword ptr [rdx]
0x00000000001954aa : sbb al, 0xd ; salc ; shr esp, 1 ; jmp qword ptr [rdx]
0x00000000001a233a : sbb al, 0xd ; salc ; test esi, ecx ; jmp qword ptr [rdx]
0x00000000001a2102 : sbb al, 0xd ; sbb al, -0x7b ; int1 ; jmp qword ptr [rdx]
0x000000000019c22a : sbb al, 0xd ; sbb al, 0x3b ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ad06a : sbb al, 0xd ; sbb al, 0x68 ; cmc ; jmp qword ptr [rdx]
0x000000000019ba92 : sbb al, 0xd ; sbb al, 0xa ; out dx, al ; jmp qword ptr [rdx]
0x0000000000193e5a : sbb al, 0xd ; sbb byte ptr [rsi], dh ; jmp 0x193e64
0x0000000000194e32 : sbb al, 0xd ; sbb dh, byte ptr [rsi - 0x14] ; jmp qword ptr [rdx]
0x00000000001ae23a : sbb al, 0xd ; sbb dword ptr [rdi - 0xb], edi ; jmp qword ptr [rdx]
0x00000000001a9d8a : sbb al, 0xd ; sbb esp, ecx ; hlt ; jmp qword ptr [rdx]
0x0000000000190fc2 : sbb al, 0xd ; scasd eax, dword ptr [rdi] ; or al, 0xffffffffffffffea ; jmp qword ptr [rdx]
0x000000000019a8aa : sbb al, 0xd ; shr ecx, cl ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000196c8a : sbb al, 0xd ; stc ; jp 0x196c81 ; jmp qword ptr [rdx]
0x00000000001aeec2 : sbb al, 0xd ; stc ; mov ch, dh ; jmp qword ptr [rdx]
0x000000000019bf12 : sbb al, 0xd ; stc ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ac64a : sbb al, 0xd ; stc ; pop rdx ; cmc ; jmp qword ptr [rdx]
0x0000000000192d6a : sbb al, 0xd ; std ; mov edx, ebp ; jmp qword ptr [rdx]
0x00000000001a04e2 : sbb al, 0xd ; stosb byte ptr [rdi], al ; mov ch, -0x10 ; jmp qword ptr [rdx]
0x00000000001a041a : sbb al, 0xd ; stosd dword ptr [rdi], eax ; mov ch, -0x10 ; jmp qword ptr [rdx]
0x000000000019870a : sbb al, 0xd ; sub al, -0x75 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019384a : sbb al, 0xd ; sub al, 0x14 ; jmp 0x193854
0x0000000000196b02 : sbb al, 0xd ; sub byte ptr [rdx - 0x13], bh ; jmp qword ptr [rdx]
0x00000000001941ea : sbb al, 0xd ; sub byte ptr [rdx - 0x15], al ; jmp qword ptr [rdx]
0x000000000019c5d2 : sbb al, 0xd ; sub ecx, dword ptr [rsi - 0x12] ; jmp qword ptr [rdx]
0x00000000001b1062 : sbb al, 0xd ; sub esi, r14d ; jmp qword ptr [rdx]
0x00000000001b10aa : sbb al, 0xd ; sub r14d, esi ; jmp qword ptr [rdx]
0x00000000001b101a : sbb al, 0xd ; sub r14d, r14d ; jmp qword ptr [rdx]
0x000000000019ba02 : sbb al, 0xd ; test al, -5 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000195932 : sbb al, 0xd ; test al, 0x6b ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019678a : sbb al, 0xd ; test al, 0x74 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a1e32 : sbb al, 0xd ; test dword ptr [rbp - 0xf], edi ; jmp qword ptr [rdx]
0x00000000001a22f2 : sbb al, 0xd ; test r14d, r9d ; jmp qword ptr [rdx]
0x00000000001a1f9a : sbb al, 0xd ; wait ; jge 0x1a1f95 ; jmp qword ptr [rdx]
0x00000000001b053a : sbb al, 0xd ; wait ; out dx, eax ; cmc ; jmp qword ptr [rdx]
0x00000000001a21da : sbb al, 0xd ; wait ; test esi, ecx ; jmp qword ptr [rdx]
0x00000000001b6b72 : sbb al, 0xd ; wait ; xor al, 0xfffffffffffffff7 ; jmp qword ptr [rdx]
0x00000000001937ba : sbb al, 0xd ; xchg eax, ebp ; adc ebp, ebx ; jmp qword ptr [rdx]
0x00000000001a2192 : sbb al, 0xd ; xchg eax, ebp ; test esi, ecx ; jmp qword ptr [rdx]
0x000000000019b80a : sbb al, 0xd ; xchg eax, ebx ; cli ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a1602 : sbb al, 0xd ; xchg eax, edi ; jae 0x1a15fd ; jmp qword ptr [rdx]
0x000000000019ba4a : sbb al, 0xd ; xchg eax, edi ; or esi, ebp ; jmp qword ptr [rdx]
0x000000000019c4fa : sbb al, 0xd ; xchg eax, edi ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a1d9a : sbb al, 0xd ; xchg eax, edx ; jge 0x1a1d95 ; jmp qword ptr [rdx]
0x0000000000196242 : sbb al, 0xd ; xchg eax, edx ; jo 0x196239 ; jmp qword ptr [rdx]
0x00000000001b013a : sbb al, 0xd ; xchg eax, edx ; loopne 0x1b0139 ; jmp qword ptr [rdx]
0x0000000000192e42 : sbb al, 0xd ; xchg eax, edx ; mov edx, ebp ; jmp qword ptr [rdx]
0x00000000001ab95a : sbb al, 0xd ; xchg eax, esi ; cmc ; jmp qword ptr [rdx]
0x00000000001aa872 : sbb al, 0xd ; xchg ebx, ebp ; hlt ; jmp qword ptr [rdx]
0x00000000001951da : sbb al, 0xd ; xlatb ; jbe 0x1951d0 ; jmp qword ptr [rdx]
0x00000000001aef9a : sbb al, 0xd ; xlatb ; mov ch, dh ; jmp qword ptr [rdx]
0x00000000001a27aa : sbb al, 0xd ; xlatb ; xchg ecx, esi ; jmp qword ptr [rdx]
0x00000000001b6fc2 : sbb al, 0xd ; xor al, byte ptr [rsi - 9] ; jmp qword ptr [rdx]
0x000000000019c392 : sbb al, 0xd ; xor byte ptr [rax - 0x12], al ; jmp qword ptr [rdx]
0x00000000001963d2 : sbb al, 0xd ; xor dh, byte ptr [rcx - 0x13] ; jmp qword ptr [rdx]
0x00000000001ab882 : sbb al, 0xd ; xor dword ptr [rbx + rdi*8], esp ; jmp qword ptr [rdx]
0x00000000001a398a : sbb al, 0xd ; xor dword ptr [rcx - 0xe], edi ; jmp qword ptr [rdx]
0x000000000019a8f2 : sbb al, 0xd ; xor ebp, edx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a39d2 : sbb al, 0xd ; xor edi, dword ptr [rcx - 0xe] ; jmp qword ptr [rdx]
0x00000000001a9e62 : sbb al, 0xd ; xor esp, ecx ; hlt ; jmp qword ptr [rdx]
0x00000000000a422c : sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x000000000018a845 : sbb al, byte ptr [rcx] ; add byte ptr [rdi + 0x4a], cl ; out dx, eax ; call rsp
0x00000000001b0c1d : sbb al, byte ptr [rdx] ; add byte ptr [rax], dl ; mov ch, -0xa ; call qword ptr [rdi]
0x0000000000187265 : sbb bh, bl ; jmp rax
0x00000000000d171a : sbb bh, byte ptr [rax + 2] ; ret
0x0000000000199766 : sbb bh, byte ptr [rdx + 0xd1cffed] ; call 0x23198532
0x0000000000195618 : sbb bh, ch ; in al, dx ; call qword ptr [rax]
0x00000000001ad328 : sbb bl, bh ; cmc ; call qword ptr [rax]
0x000000000018725d : sbb bl, bh ; inc dword ptr [rax + 0x19] ; sti ; call qword ptr [rax]
0x00000000001744a5 : sbb bl, byte ptr [rsi] ; ret
0x0000000000026eb6 : sbb bl, ch ; ret 0x1f0f
0x00000000000ebd3b : sbb bl, dh ; ret
0x000000000010ef4b : sbb bpl, byte ptr [r11] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000092afb : sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x000000000012f32d : sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x000000000007313e : sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x000000000012efc2 : sbb byte ptr [r8 + 1], r15b ; ret
0x000000000016513a : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000a1aa4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a1ac6 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a1b04 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000073153 : sbb byte ptr [r9 + r9*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012d0e9 : sbb byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x000000000012d241 : sbb byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x000000000007313f : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000037340 : sbb byte ptr [rax + 0x450f4402], ch ; ret 0x8944
0x000000000012ef91 : sbb byte ptr [rax + 1], bh ; ret
0x0000000000023291 : sbb byte ptr [rax - 0x77], cl ; cwde ; call rcx
0x000000000007e32a : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000e5af0 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000001033ea : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000bce68 : sbb byte ptr [rax - 0x77], cl ; ret 0x4775
0x00000000000e8f97 : sbb byte ptr [rax - 0x77], cl ; ret 0x4c6
0x0000000000053701 : sbb byte ptr [rax - 0x77], cl ; ret 0x6349
0x00000000001223da : sbb byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000ee437 : sbb byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000b59b1 : sbb byte ptr [rax - 0x7bf0f706], al ; ret
0x00000000000827cb : sbb byte ptr [rax - 0x7d], cl ; call 0xffffffffc28d6fdb
0x00000000000827ca : sbb byte ptr [rax - 0x7d], cl ; call 0xffffffffc28d6fdc
0x0000000000083b3f : sbb byte ptr [rax - 0x7d], cl ; call 0xffffffffc28d834f
0x0000000000083b3e : sbb byte ptr [rax - 0x7d], cl ; call 0xffffffffc28d8350
0x00000000000799d6 : sbb byte ptr [rax - 0x7d], cl ; cli ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000daec3 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000ee5d5 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000009269e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000834f7 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000009269d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000112db1 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000007c57a : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001044e0 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000073a2b : sbb byte ptr [rax], al ; setne al ; ret
0x0000000000002440 : sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000a1aa5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a1ac7 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a1b05 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000019f8d8 : sbb byte ptr [rbp - 0x10], bl ; call qword ptr [rdx]
0x00000000000d3f19 : sbb byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000a4bb7 : sbb byte ptr [rbx + 0x48], 0x29 ; call 0xffffffffc3668d25
0x00000000001312bf : sbb byte ptr [rbx + 0x5c71840], cl ; ret
0x00000000000a4672 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000a44e0 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000730b2 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008750a : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000012f32e : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000003d15a : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000375d7 : sbb byte ptr [rbx + 0xb7501e2], al ; xor eax, eax ; nop ; ret
0x000000000002acc8 : sbb byte ptr [rbx - 0x14dbdbbc], cl ; ret 0x8948
0x0000000000029af8 : sbb byte ptr [rbx - 0x14e3dbbc], cl ; ret 0x8948
0x000000000007d147 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000083446 : sbb byte ptr [rbx - 0x3d], bl ; xor eax, eax ; pop rbx ; ret
0x00000000001311ce : sbb byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000ec75f : sbb byte ptr [rbx - 0x7663dbbc], cl ; ret 0xdaf7
0x00000000000ec86f : sbb byte ptr [rbx - 0x76ebdbbc], cl ; ret 0xdaf7
0x0000000000187b08 : sbb byte ptr [rbx], -4 ; call rax
0x000000000008b8e4 : sbb byte ptr [rbx], ah ; or eax, dword ptr [rax] ; ret
0x00000000001a81a8 : sbb byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x000000000012ef03 : sbb byte ptr [rcx + 0x1b02857], cl ; ret
0x00000000000e5b76 : sbb byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000075aeb : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000001304ab : sbb byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000073154 : sbb byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000105563 : sbb byte ptr [rcx - 0x75], al ; or r14b, r14b ; ret 0x7508
0x00000000000b035e : sbb byte ptr [rcx - 0x75], cl ; jge 0xb0369 ; call r12
0x000000000012d0ea : sbb byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x000000000012d242 : sbb byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x00000000001082fb : sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x0000000000097356 : sbb byte ptr [rcx - 0x76b703b9], cl ; clc ; ret
0x00000000000a4221 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000000f61f3 : sbb byte ptr [rcx - 0xa], al ; ret 0x7401
0x00000000001a6298 : sbb byte ptr [rcx - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001a09c5 : sbb byte ptr [rcx], al ; add byte ptr [rax + 0x14], bl ; int1 ; jmp qword ptr [rax]
0x00000000001a0a25 : sbb byte ptr [rcx], al ; add byte ptr [rax + 0x15], bh ; int1 ; jmp qword ptr [rcx]
0x00000000000f1be0 : sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000001037fe : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000102d97 : sbb byte ptr [rdi + 0x2000004], bh ; call rax
0x00000000001a4c18 : sbb byte ptr [rdi - 0xd], ch ; jmp rax
0x000000000005e0c8 : sbb byte ptr [rdi], cl ; mov dh, -0x40 ; neg eax ; ret
0x000000000012f48b : sbb byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x00000000000355ad : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000832fe : sbb byte ptr [rdx + 0x5b], bl ; pop rbp ; jmp rax
0x0000000000002047 : sbb byte ptr [rdx - 0x1a], dl ; ret
0x00000000001b0a7d : sbb byte ptr [rdx], al ; add al, ah ; mov cl, -0xa ; jmp qword ptr [rcx]
0x00000000001b0a65 : sbb byte ptr [rdx], al ; add al, bl ; mov cl, -0xa ; call qword ptr [rcx]
0x00000000000f69cc : sbb byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000013607d : sbb byte ptr [rip - 0x3fcf0000], al ; pop rbx ; pop rbp ; ret
0x000000000013604b : sbb byte ptr [rip - 0x76b80000], al ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000019c02e : sbb byte ptr [rsi + rbp*8 - 1], bl ; sbb al, 0xd ; out 0x36, eax ; out dx, al ; jmp qword ptr [rdx]
0x000000000017bb08 : sbb byte ptr [rsi - 0x73470006], cl ; cli ; call rax
0x00000000000fd702 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x00000000000fd701 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000193e5c : sbb byte ptr [rsi], dh ; jmp 0x193e62
0x000000000012d9f2 : sbb ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000109ec4 : sbb ch, bh ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x0000000000084652 : sbb ch, byte ptr [rbx - 0x3f7affcd] ; js 0x84669 ; ret
0x000000000010ef4c : sbb ch, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000179ce8 : sbb cl, al ; jmp rcx
0x000000000019a118 : sbb cl, bh ; in eax, dx ; call qword ptr [rax]
0x0000000000130bc8 : sbb cl, byte ptr [rax + 0x39] ; ret
0x0000000000125f9e : sbb cl, byte ptr [rax - 0x3f] ; out dx, al ; add cl, byte ptr [rcx - 0x77] ; ret 0xc148
0x0000000000133716 : sbb cl, byte ptr [rax - 0x7d] ; ret
0x00000000000c97a2 : sbb cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000011d803 : sbb cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x00000000000a67e8 : sbb cl, byte ptr [rcx - 0x7d] ; ret
0x000000000009e4ff : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x0000000000138bfd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013ad6d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001387ed : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001382f9 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000138b09 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013ed0a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000013e52a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000013e91a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013e13a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013b8cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013b0ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000013857d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013a88d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00000000001388bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000138bd9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013e2d9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000138ca9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013b3ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013abcd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013a3ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000013b58d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000138a5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013824d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000013864d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000013e7ca : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013dfea : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013f0fa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000138b2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000013831d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000013a6ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001383bf : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013871d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000013a823 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013b523 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013b043 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013e6cb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013effb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013898d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013b863 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013ab63 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000013a683 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013b383 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000013e81b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013e03b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001383e3 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001ac5b8 : sbb dh, ah ; cmc ; call qword ptr [rax]
0x00000000000ebea1 : sbb dh, bl ; ret
0x00000000000bee04 : sbb dh, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000194e34 : sbb dh, byte ptr [rsi - 0x14] ; jmp qword ptr [rdx]
0x00000000000efc5b : sbb dh, dh ; ret
0x00000000001031e2 : sbb dh, dh ; ret 0x7504
0x00000000001876f0 : sbb dl, -5 ; inc dword ptr [rax - 0x24] ; sti ; jmp qword ptr [rax]
0x00000000001ad288 : sbb dl, bh ; cmc ; call qword ptr [rax]
0x00000000001abbc8 : sbb dl, bl ; cmc ; call qword ptr [rax]
0x00000000000f5e52 : sbb dl, byte ptr [rsi - 0x74b6000e] ; call rbx
0x000000000010f04b : sbb dword ptr [r11], ebp ; add byte ptr [rax - 0x77], cl ; ret 0xb9
0x000000000013c028 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d16f3 : sbb dword ptr [rax + 1], edi ; ret
0x00000000000f8af6 : sbb dword ptr [rax - 0x77], ecx ; ret 0xf66
0x000000000013bfb1 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013c029 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000c3045 : sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x00000000001ac6d6 : sbb dword ptr [rbx - 0xb], 0x2e0d1cff ; pop rbx ; cmc ; jmp qword ptr [rdx]
0x000000000010f04c : sbb dword ptr [rbx], ebp ; add byte ptr [rax - 0x77], cl ; ret 0xb9
0x0000000000176d5d : sbb dword ptr [rbx], edx ; mov ch, -0x67 ; in eax, -1 ; lahf ; mov dh, -0x39 ; ret 0xe71f
0x0000000000118b0a : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000011c24b : sbb dword ptr [rcx - 0x80], eax ; jmp qword ptr [rbx]
0x00000000000b348b : sbb dword ptr [rcx], esi ; add byte ptr [rcx], dh ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x00000000001ae23c : sbb dword ptr [rdi - 0xb], edi ; jmp qword ptr [rdx]
0x000000000011d0d3 : sbb dword ptr [rdi], ebx ; sub al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x000000000009fc1e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000001caf : sbb dword ptr [rdx + 0x55], esp ; je 0x1ce1 ; ret
0x000000000015f37c : sbb eax, -1 ; ret
0x000000000010b97b : sbb eax, 0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000187271 : sbb eax, 0x1e30fffb ; sti ; jmp qword ptr [rax]
0x0000000000187b4d : sbb eax, 0x1e90fffc ; cld ; jmp rax
0x00000000000fd271 : sbb eax, 0x2c208a ; pop rbx ; ret
0x00000000001a0ebd : sbb eax, 0x3f300001 ; int1 ; jmp qword ptr [rcx]
0x00000000001a0ed5 : sbb eax, 0x3f480001 ; int1 ; jmp qword ptr [rcx]
0x00000000001a0f5d : sbb eax, 0x40400001 ; int1 ; call rsi
0x000000000009e589 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x0000000000107002 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x000000000009fcdd : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x000000000005898d : sbb eax, 0x8348ffff ; ret 0xeb08
0x00000000000f8b7a : sbb eax, 0x86887 ; mov rax, rbx ; pop rbx ; ret
0x000000000004290e : sbb eax, 0x89000001 ; ret
0x000000000013bdd1 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013be49 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000007290 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x21
0x0000000000045b68 : sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x00000000001980ae : sbb eax, dword ptr [rsi + 0xd1cffed] ; retf ; test ebp, ebp ; jmp qword ptr [rdx]
0x0000000000125520 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x00000000000384ba : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000118797 : sbb eax, eax ; ret
0x0000000000164a85 : sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000187261 : sbb ebx, edi ; call qword ptr [rax]
0x0000000000036bc0 : sbb ebx, esi ; ret
0x00000000000537d0 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x00000000000db704 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000127fcc : sbb edi, dword ptr [rdi + 5] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000019e159 : sbb edi, ebp ; call qword ptr [rax]
0x0000000000187b09 : sbb edi, esp ; call rax
0x00000000000025bf : sbb esi, dword ptr [rdx] ; sahf ; jl 0x255a ; loop 0x25a5 ; ret 0x23cb
0x00000000000ebe48 : sbb esi, ebx ; ret
0x00000000001a9d8c : sbb esp, ecx ; hlt ; jmp qword ptr [rdx]
0x000000000015f37b : sbb rax, -1 ; ret
0x0000000000139d52 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000005c034 : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013ed5e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x0000000000019530 : scasb al, byte ptr [rdi] ; call qword ptr [rdi]
0x000000000018864d : scasb al, byte ptr [rdi] ; cld ; jmp qword ptr [rdx]
0x0000000000188591 : scasb al, byte ptr [rdi] ; cld ; jmp rax
0x00000000001a69f9 : scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000000f7f37 : scasb al, byte ptr [rdi] ; jg 0xf7f48 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000f419e : scasb al, byte ptr [rdi] ; jrcxz 0xf41d6 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x0000000000063658 : scasb al, byte ptr [rdi] ; ret
0x0000000000002f62 : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000010c4be : scasb al, byte ptr [rdi] ; sub esi, ebp ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x000000000003d335 : scasd eax, dword ptr [rdi] ; adc byte ptr [rax + 1], r9b ; ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x000000000013ee5d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000c6d42 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ae7ad : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000019a115 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; sbb cl, bh ; in eax, dx ; call qword ptr [rax]
0x00000000000b215f : scasd eax, dword ptr [rdi] ; add eax, esi ; ret
0x0000000000166b39 : scasd eax, dword ptr [rdi] ; and eax, 0xf31e7500 ; ret
0x0000000000188649 : scasd eax, dword ptr [rdi] ; cld ; call qword ptr [rdx + 0x22fffcae]
0x00000000001885c5 : scasd eax, dword ptr [rdi] ; cld ; call qword ptr [rsi]
0x0000000000188785 : scasd eax, dword ptr [rdi] ; cld ; call rax
0x0000000000188781 : scasd eax, dword ptr [rdi] ; cld ; inc dword ptr [rax - 0x51] ; cld ; call rax
0x0000000000188705 : scasd eax, dword ptr [rdi] ; cld ; jmp rsp
0x0000000000190fc4 : scasd eax, dword ptr [rdi] ; or al, 0xffffffffffffffea ; jmp qword ptr [rdx]
0x000000000011d4bb : scasd eax, dword ptr [rdi] ; or bl, ch ; ret 0x4890
0x000000000018a169 : scasd eax, dword ptr [rdi] ; out dx, al ; call rsp
0x0000000000189bf0 : scasd eax, dword ptr [rdi] ; pop rbx ; out dx, al ; jmp rsp
0x000000000012b86c : scasd eax, dword ptr [rdi] ; pop rbx ; ret
0x000000000003a2ec : scasd eax, dword ptr [rdi] ; ret
0x00000000000b2e20 : scasd eax, dword ptr [rdi] ; ret 0x67ba
0x00000000000a2434 : scasd eax, dword ptr [rdi] ; ret 0x8341
0x00000000000b7b6d : scasd eax, dword ptr [rdi] ; ret 0x8941
0x0000000000035b13 : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000000000b9a50 : scasd eax, dword ptr [rdi] ; ret 0x8d44
0x00000000000355af : scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000001065ad : scasd eax, dword ptr [rdi] ; ret 0xffff
0x0000000000002bab : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efad ; ret
0x000000000000258c : scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000000fd735 : seta al ; movzx eax, al ; neg eax ; ret
0x00000000000ee078 : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x000000000010868c : setae al ; ret
0x00000000000fe568 : setbe al ; ret
0x0000000000123246 : sete al ; movzx eax, al ; ret
0x000000000002fdd5 : sete al ; ret
0x000000000004d5df : sete cl ; call 0x49885
0x000000000010480c : sete dl ; jmp 0x10479c
0x00000000000d1867 : setg dl ; jmp 0xd17f0
0x000000000005e0f9 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000cc39d : setne al ; movzx eax, al ; neg eax ; ret
0x00000000000f5839 : setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000037556 : setne al ; movzx eax, al ; ret
0x0000000000073a2d : setne al ; ret
0x00000000000cc3bd : setne dl ; cmovbe eax, edx ; ret
0x00000000000a6787 : setne dl ; jmp 0xa679a
0x00000000000a8f63 : setne dl ; jmp 0xa8f79
0x00000000000ab637 : setne dl ; jmp 0xab64a
0x00000000000fad9b : setne dl ; jmp 0xfad71
0x00000000000faa85 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000089958 : sgdt ptr [rax] ; ret
0x00000000001a2a50 : shl ah, -0xf ; jmp rsi
0x0000000000187644 : shl ah, 1 ; sti ; call rax
0x0000000000187b18 : shl byte ptr [rax], -4 ; call qword ptr [rax]
0x00000000001874b8 : shl byte ptr [rbp + rdi*8 - 0x25a2f01], 1 ; call rax
0x0000000000188984 : shl byte ptr [rbp - 0x5aaf0004], 1 ; cld ; call rax
0x0000000000188994 : shl byte ptr [rbx - 0x5caf0004], 1 ; cld ; call rax
0x0000000000187b60 : shl byte ptr [rbx], 1 ; cld ; jmp qword ptr [rax]
0x00000000000363f9 : shl byte ptr [rcx], cl ; ret 0xf66
0x00000000001874c8 : shl byte ptr [rdi - 0x57af0003], 1 ; std ; call rax
0x0000000000179570 : shl byte ptr [rdi - 0xe], -1 ; jmp qword ptr [eax]
0x00000000001a8700 : shl byte ptr [rdi], -0xb ; jmp qword ptr [rcx]
0x000000000017952c : shl byte ptr [rdx + rsi*8 - 1], -0x20 ; call qword ptr fs:[rax]
0x00000000000a1edf : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000036063 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x000000000016212b : shl byte ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000087ac5 : shl byte ptr [rsi + 0xf], -0x15 ; ret 0xf66
0x0000000000163073 : shl byte ptr [rsi + 0xf], -0x29 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000162142 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000036480 : shl byte ptr [rsi + 0xf], 1 ; outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x000000000008b3a6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008b3b7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000097a08 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000162021 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001874c0 : shl byte ptr [rsi - 0x58af0003], 1 ; std ; call rax
0x000000000018897c : shl byte ptr [rsi - 0x59af0004], 1 ; cld ; call rax
0x00000000000a559d : shl byte ptr [rsi - 0x70], -0x3d ; mov eax, 1 ; ret
0x000000000018898c : shl byte ptr [rsp + rdi*8 - 0x35baf01], 1 ; call rax
0x0000000000187648 : shl dh, 1 ; sti ; call rax
0x0000000000187640 : shl dl, 1 ; sti ; call rax
0x000000000016fd40 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000001758a8 : shl dword ptr [rdi - 5], 1 ; ret
0x00000000001620a6 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a1d3b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x000000000008b3a2 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000016215d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000162146 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016212f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000160beb : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001620c1 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008c76c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000097c48 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x0000000000161f81 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000046cd0 : shl eax, 0x1e ; or eax, esi ; ret
0x0000000000118d9a : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x0000000000118bfd : shl eax, 4 ; add eax, 8 ; ret
0x000000000010d1df : shl eax, 8 ; or eax, esi ; bswap eax ; ret
0x0000000000037733 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000038aac : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000038a37 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000038a06 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000003c866 : shl edx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x00000000000dc6bb : shl edx, 2 ; xor esi, esi ; call 0x8d049
0x0000000000021f58 : shl edx, 4 ; lea rdi, qword ptr [r14 + rdx] ; call rax
0x0000000000118dcc : shl esi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000038aab : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000038a36 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000038a05 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000037732 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000003c865 : shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x0000000000021f57 : shl rdx, 4 ; lea rdi, qword ptr [r14 + rdx] ; call rax
0x0000000000118dcb : shl rsi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000001954f5 : shr ah, cl ; jmp qword ptr [rdx]
0x000000000001feab : shr al, -0x58 ; ret 0xc
0x00000000001065e6 : shr al, 0x24 ; ret
0x00000000000f78c0 : shr al, 0x5a ; sar edx, cl ; dec dword ptr [rax + 0x39] ; ret
0x00000000001066ac : shr al, 0x5e ; ret 0xffff
0x00000000000cc6b0 : shr al, 1 ; ljmp 0x85000409, -0x7640 ; ret 0x8589
0x0000000000132e01 : shr al, cl ; add eax, dword ptr [rax] ; add byte ptr [rcx], al ; ret 0x59e9
0x0000000000108606 : shr ax, 0xe ; and eax, 1 ; ret
0x0000000000049788 : shr bl, -0x14 ; mov rax, rsi ; nop ; ret
0x0000000000137501 : shr bl, -0x25 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001874d0 : shr byte ptr [rax - 0x56af0003], 1 ; std ; jmp rax
0x00000000001874ec : shr byte ptr [rbp + rdi*8 - 0x2472201], 1 ; call qword ptr [rcx]
0x00000000001887a4 : shr byte ptr [rbx - 0x54af0004], -4 ; jmp rax
0x0000000000179634 : shr byte ptr [rbx - 0xe], -1 ; shr byte ptr [rbx - 0xe], 1 ; jmp rax
0x0000000000179638 : shr byte ptr [rbx - 0xe], 1 ; jmp rax
0x000000000011d15c : shr byte ptr [rcx - 0x3fce000a], 1 ; ret
0x0000000000098a3f : shr byte ptr [rcx], -0x38 ; ret
0x000000000002bc28 : shr byte ptr [rcx], cl ; ret
0x000000000008cb1b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000ee07d : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x000000000018858c : shr byte ptr [rsi - 0x51af0004], -4 ; jmp rax
0x00000000001a8cc0 : shr byte ptr [rsi], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000000cb51c : shr cl, -9 ; idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000188cc1 : shr cl, 1 ; call rsp
0x000000000011ba14 : shr cl, 1 ; ret 0xfffe
0x000000000010d4d2 : shr cl, 1 ; sub eax, 0x89ffffff ; ret 0x96eb
0x00000000000cea05 : shr cl, cl ; ret 0xfff9
0x0000000000028e1b : shr dword ptr [rax + rax], -0x77 ; ret 0xe283
0x00000000001346a5 : shr dword ptr [rax], 0 ; call qword ptr [rax]
0x00000000001a3cf6 : shr dword ptr [rbp + 0xd1cfff3], 1 ; pop rdi ; stosb byte ptr [rdi], al ; jmp qword ptr [rdx]
0x000000000018741c : shr dword ptr [rdx - 0x54ae0003], -3 ; jmp rcx
0x000000000004d5e1 : shr eax, -0x67 ; ret 0xffff
0x000000000010d218 : shr eax, 0x18 ; ret
0x0000000000036371 : shr eax, 0x1f ; ret
0x0000000000162fec : shr eax, 0x20 ; cmp ecx, eax ; jne 0x162fff ; xor eax, eax ; ret
0x0000000000035fc0 : shr eax, 0x3f ; ret
0x00000000000fb138 : shr eax, 0xc ; xor al, al ; or eax, edi ; ret
0x00000000000a264a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000108607 : shr eax, 0xe ; and eax, 1 ; ret
0x0000000000074162 : shr eax, 4 ; and eax, 1 ; ret
0x0000000000118da0 : shr eax, 4 ; ret
0x0000000000074172 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000a2629 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000003756f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000fe8f8 : shr eax, cl ; and eax, 1 ; nop dword ptr [rax] ; ret
0x0000000000198de9 : shr ebp, 1 ; call rcx
0x000000000019a8ac : shr ecx, cl ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000038bbc : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000038b41 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000038b10 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000f733c : shr ecx, cl ; ret
0x00000000000d2526 : shr ecx, cl ; ret 0xfff8
0x00000000000d38fc : shr ecx, cl ; ret 0xfffc
0x0000000000075d83 : shr edx, 2 ; sub eax, edx ; ret
0x000000000012fbfa : shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000002f7e9 : shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2f800 ; ret
0x0000000000071e00 : shr esi, 4 ; and esi, 1 ; mov eax, esi ; ret
0x0000000000071f00 : shr esi, 5 ; and esi, 1 ; mov eax, esi ; ret
0x00000000001954ad : shr esp, 1 ; jmp qword ptr [rdx]
0x0000000000038bbb : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000038b40 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000038b0f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000011ba13 : shr r9b, 1 ; ret 0xfffe
0x0000000000035fbf : shr rax, 0x3f ; ret
0x00000000000fb137 : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x0000000000118d9f : shr rax, 4 ; ret
0x0000000000075d82 : shr rdx, 2 ; sub eax, edx ; ret
0x000000000012fbf9 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000974f1 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000097451 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000235d5 : sldt word ptr [r8] ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x00000000000235d6 : sldt word ptr [rax] ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x000000000016ef05 : sldt word ptr [rax] ; ret 0xf
0x00000000000aed14 : stc ; add dword ptr [rax], eax ; add al, ch ; ret
0x00000000000b7ead : stc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbf
0x000000000019e03a : stc ; call qword ptr [rax]
0x000000000018de32 : stc ; call rsp
0x00000000000efc83 : stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000f3263 : stc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000865a6 : stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000096499 : stc ; dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000009695b : stc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000019a119 : stc ; in eax, dx ; call qword ptr [rax]
0x000000000019b6ed : stc ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018e3ea : stc ; inc dword ptr [rax + rbp*4 - 0x303bfffe] ; stc ; call rsp
0x000000000018e042 : stc ; inc dword ptr [rbp + rcx*4 + 0x65440002] ; stc ; call rsp
0x000000000010a21f : stc ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x00000000000f4899 : stc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000018e502 : stc ; inc dword ptr [rdi + rbp*4 - 0x33bfffe] ; stc ; call rsp
0x000000000013de12 : stc ; je 0x13ddde ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013f4a2 : stc ; je 0x13f46e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000007e1db : stc ; je 0x7e015 ; ret
0x000000000018e37a : stc ; jmp qword ptr [rbp + 2]
0x000000000018de9a : stc ; jmp rsp
0x0000000000175724 : stc ; jnp 0x1756e3 ; ret
0x000000000008734b : stc ; jnp 0x8738a ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000196c8c : stc ; jp 0x196c7f ; jmp qword ptr [rdx]
0x000000000018e3d2 : stc ; lcall ptr [rdi - 0x34ebfffe] ; stc ; call rsp
0x000000000018e052 : stc ; lcall ptr [rsi + rcx*4 + 2] ; add byte ptr [rsi - 7], al ; jmp rsp
0x000000000018e2a2 : stc ; ljmp ptr [rdi + rbx*4 - 0x583bfffe] ; stc ; jmp rsp
0x00000000001aeec4 : stc ; mov ch, dh ; jmp qword ptr [rdx]
0x0000000000145f08 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000097755 : stc ; mov qword ptr [rdx], rcx ; ret
0x000000000011bf02 : stc ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000973d3 : stc ; mov rax, rdi ; ret
0x0000000000071a42 : stc ; mov rdi, r13 ; xor r8d, r8d ; call r12
0x000000000019bf14 : stc ; out dx, al ; jmp qword ptr [rdx]
0x000000000003873e : stc ; pop r15 ; ret
0x00000000001ac64c : stc ; pop rdx ; cmc ; jmp qword ptr [rdx]
0x0000000000038bfd : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000018de92 : stc ; push qword ptr [rsp + rdi*2 + 0x12440002] ; stc ; jmp rsp
0x000000000019ef55 : std ; add byte ptr [rax], al ; mov byte ptr [rdi - 5], al ; call qword ptr [rax]
0x000000000019ef85 : std ; add byte ptr [rax], al ; test al, 0x68 ; sti ; call qword ptr [rax]
0x0000000000112aba : std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x000000000017929a : std ; call qword ptr [rax]
0x000000000018752e : std ; call qword ptr [rbp + 0x11fffdb8]
0x00000000001875fa : std ; call qword ptr [rcx]
0x000000000018758e : std ; call qword ptr [rsi + 0x11fffdb9]
0x000000000017a035 : std ; call qword ptr [rsi]
0x000000000017929e : std ; call rax
0x00000000001874fe : std ; call rcx
0x00000000000dfeb4 : std ; dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000000e5654 : std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000b78d3 : std ; dec dword ptr [rax - 0x77] ; jmp 0x48ce022b
0x0000000000122899 : std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000072ff7 : std ; dec dword ptr [rax - 0x7f] ; ret
0x00000000000367ed : std ; fstp st(1) ; ret
0x000000000019a211 : std ; in eax, dx ; jmp rax
0x000000000018f042 : std ; inc dword ptr [rax + rsi*2] ; add byte ptr [rax + rdx*8], al ; std ; jmp rsp
0x00000000001874b2 : std ; inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rax
0x0000000000109ec5 : std ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x000000000018744e : std ; inc dword ptr [rsi] ; test eax, 0xa986fffd ; std ; call qword ptr [rsi]
0x000000000018751e : std ; inc eax ; mov eax, 0xbb11fffd ; std ; call qword ptr [rcx]
0x0000000000179256 : std ; jmp qword ptr [rax - 0x3d]
0x0000000000190382 : std ; jmp qword ptr [rax]
0x0000000000187402 : std ; jmp qword ptr [rcx + 0x21fffda7]
0x000000000018740a : std ; jmp qword ptr [rcx + 0x21fffda8]
0x00000000001873f6 : std ; jmp qword ptr [rcx]
0x00000000001901fa : std ; jmp qword ptr [rdi]
0x000000000018fada : std ; jmp qword ptr [rdx]
0x000000000018750e : std ; jmp qword ptr [rsi + 0x11fffdb8]
0x000000000017925a : std ; jmp rax
0x00000000001873be : std ; jmp rcx
0x000000000018f04a : std ; jmp rsp
0x00000000000c2fff : std ; jne 0xc2fcf ; ret
0x00000000001873b6 : std ; ljmp ptr [rsi - 0x4f00025b] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rcx
0x0000000000192d6c : std ; mov edx, ebp ; jmp qword ptr [rdx]
0x000000000014572b : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000018f0d2 : std ; push qword ptr [rax + rdi*8 - 0x28bbffff] ; std ; jmp rsp
0x00000000001875ee : std ; push qword ptr [rax - 0x46] ; std ; call qword ptr [rcx]
0x00000000001874ae : std ; push qword ptr [rax - 0x53] ; std ; inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rax
0x00000000001874e6 : std ; push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; std ; call rax
0x000000000018753e : std ; push qword ptr [rcx] ; mov ecx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x000000000018755e : std ; push qword ptr [rcx] ; mov edx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x00000000001873da : std ; push qword ptr [rdx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rax
0x00000000001873d6 : std ; push qword ptr [rdx] ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; push qword ptr [rdx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rax
0x000000000018f172 : std ; push rsp ; add qword ptr [r8], r8 ; xor al, 0xffffffffffffffe1 ; std ; jmp rsp
0x00000000000aa821 : std ; xor byte ptr [rax - 0x77], cl ; call 0x4ccd3d40
0x00000000000849d1 : sti ; adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000084bb1 : sti ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret
0x000000000019ed6d : sti ; add byte ptr [rax], al ; cwde ; out dx, eax ; jmp rdi
0x000000000003e7f8 : sti ; add cl, byte ptr [rcx + 0x29] ; ret
0x00000000000b84f4 : sti ; add eax, 0x2941c229 ; ret
0x000000000018736e : sti ; call qword ptr [rax + 0x10fffb82]
0x0000000000187376 : sti ; call qword ptr [rax + 0x10fffb85]
0x000000000018737e : sti ; call qword ptr [rax + 0x10fffb88]
0x0000000000187386 : sti ; call qword ptr [rax + 0x10fffb8b]
0x000000000018738e : sti ; call qword ptr [rax + 0x10fffb8e]
0x0000000000187396 : sti ; call qword ptr [rax + 0x10fffb91]
0x000000000018739e : sti ; call qword ptr [rax + 0x10fffb94]
0x000000000018768a : sti ; call qword ptr [rax + 0x20fffbe8]
0x0000000000187982 : sti ; call qword ptr [rax - 0x1f00040e]
0x00000000001877a2 : sti ; call qword ptr [rax - 0x1f00042c]
0x00000000001877b6 : sti ; call qword ptr [rax - 0x1f00043a]
0x0000000000187342 : sti ; call qword ptr [rax - 0x1f00048e]
0x000000000018776e : sti ; call qword ptr [rax - 0x2f000440]
0x0000000000187686 : sti ; call qword ptr [rax - 0x6f00041a]
0x0000000000187322 : sti ; call qword ptr [rax]
0x00000000001a54a1 : sti ; call qword ptr [rsi]
0x0000000000187772 : sti ; call rax
0x00000000000dc6c3 : sti ; call rcx
0x00000000001b1132 : sti ; call rsi
0x000000000018ef2a : sti ; call rsp
0x00000000001ad329 : sti ; cmc ; call qword ptr [rax]
0x00000000000c1b62 : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000cb6a0 : sti ; dec dword ptr [rax + 1] ; ret
0x00000000000c1b29 : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000006a978 : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + 0x48], -0x77 ; ret
0x0000000000132e30 : sti ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000af909 : sti ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000019b855 : sti ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018725e : sti ; inc dword ptr [rax + 0x19] ; sti ; call qword ptr [rax]
0x00000000001872b6 : sti ; inc dword ptr [rax + 0x31] ; sti ; jmp rax
0x00000000001872d6 : sti ; inc dword ptr [rax + 0x3e] ; sti ; jmp rax
0x00000000001876ee : sti ; inc dword ptr [rax + 0x40fffbda] ; fdiv st(3), st(0) ; jmp qword ptr [rax]
0x000000000018733e : sti ; inc dword ptr [rax + 0x71] ; sti ; call qword ptr [rax - 0x1f00048e]
0x00000000001876da : sti ; inc dword ptr [rax - 0x20] ; sti ; jmp qword ptr [rax]
0x0000000000187756 : sti ; inc dword ptr [rax - 0x23] ; sti ; jmp qword ptr [rax]
0x00000000001876f2 : sti ; inc dword ptr [rax - 0x24] ; sti ; jmp qword ptr [rax]
0x000000000018770e : sti ; inc dword ptr [rax - 0x26] ; sti ; inc dword ptr [rax] ; fdiv st(3), st(0) ; jmp rax
0x000000000018779e : sti ; inc dword ptr [rax - 0x2d] ; sti ; call qword ptr [rax - 0x1f00042c]
0x000000000018798e : sti ; inc dword ptr [rax - 0x2f00040a] ; idiv ebx ; jmp qword ptr [rax]
0x000000000018793a : sti ; inc dword ptr [rax - 0x2f000411] ; lock sti ; jmp qword ptr [rax]
0x00000000001877c2 : sti ; inc dword ptr [rax - 0x2f000436] ; retf ; sti ; jmp qword ptr [rax]
0x000000000018734e : sti ; inc dword ptr [rax - 0x2f00048a] ; ja 0x18735b ; jmp qword ptr [rax]
0x00000000001877b2 : sti ; inc dword ptr [rax - 0x3b] ; sti ; call qword ptr [rax - 0x1f00043a]
0x000000000018797e : sti ; inc dword ptr [rax - 0xf] ; sti ; call qword ptr [rax - 0x1f00040e]
0x000000000018727e : sti ; inc dword ptr [rax] ; and ebx, edi ; push rax ; and ebx, edi ; jmp rax
0x0000000000187712 : sti ; inc dword ptr [rax] ; fdiv st(3), st(0) ; jmp rax
0x00000000001876fa : sti ; inc dword ptr [rax] ; loopne 0x1876ff ; jmp rax
0x000000000018794a : sti ; inc eax ; hlt ; sti ; call qword ptr [rax]
0x00000000001877d2 : sti ; inc eax ; iretd ; sti ; call qword ptr [rax]
0x000000000018735e : sti ; inc eax ; jnp 0x187363 ; call qword ptr [rax]
0x000000000018799e : sti ; inc eax ; sti ; sti ; call qword ptr [rax]
0x000000000017abb8 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x00000000001a2f89 : sti ; int1 ; jmp qword ptr [rcx]
0x000000000007bffb : sti ; je 0x7c00f ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101f0a : sti ; jmp 0x101c53
0x0000000000187276 : sti ; jmp qword ptr [rax]
0x00000000001ab886 : sti ; jmp qword ptr [rdx]
0x00000000001abaa2 : sti ; jmp qword ptr [rsi]
0x00000000001872da : sti ; jmp rax
0x00000000000d2ee7 : sti ; lcall ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x000000000006e563 : sti ; lcall ptr [rbx - 0x77] ; call 0xffffffffc36326d1
0x0000000000145b08 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001875c0 : sti ; mov eax, 0xbb11fffd ; std ; call qword ptr [rcx]
0x00000000001875e0 : sti ; mov ecx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x000000000009739d : sti ; mov rax, rdi ; ret
0x000000000018a4a9 : sti ; out dx, al ; jmp rsp
0x000000000018725a : sti ; push qword ptr [rax + 0x18] ; sti ; inc dword ptr [rax + 0x19] ; sti ; call qword ptr [rax]
0x000000000018735a : sti ; push qword ptr [rax + 0x7a] ; sti ; inc eax ; jnp 0x187367 ; call qword ptr [rax]
0x0000000000187752 : sti ; push qword ptr [rax - 0x25] ; sti ; inc dword ptr [rax - 0x23] ; sti ; jmp qword ptr [rax]
0x00000000001877ce : sti ; push qword ptr [rax - 0x32] ; sti ; inc eax ; iretd ; sti ; call qword ptr [rax]
0x0000000000187946 : sti ; push qword ptr [rax - 0xd] ; sti ; inc eax ; hlt ; sti ; call qword ptr [rax]
0x000000000018799a : sti ; push qword ptr [rax - 6] ; sti ; inc eax ; sti ; sti ; call qword ptr [rax]
0x000000000018724a : sti ; push qword ptr [rax] ; adc eax, 0x1600fffb ; sti ; call rax
0x00000000001872fe : sti ; push qword ptr [rax] ; push rcx ; sti ; call qword ptr [rax]
0x0000000000187282 : sti ; push rax ; and ebx, edi ; jmp rax
0x000000000018763a : sti ; push rax ; loopne 0x18763f ; call rax
0x000000000018736a : sti ; push rax ; push -5 ; call qword ptr [rax + 0x10fffb82]
0x0000000000187306 : sti ; push rax ; push rsp ; sti ; call rax
0x00000000001758aa : sti ; ret
0x0000000000043a37 : sti ; ret 0xffbf
0x00000000000a8f62 : sti ; setne dl ; jmp 0xa8f7a
0x00000000001879a1 : sti ; sti ; call qword ptr [rax]
0x000000000002e697 : sti ; test rax, rax ; je 0x2e6a5 ; call rax
0x000000000018bc0d : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; je 0x18bc2b ; hlt ; call rsp
0x00000000001885b1 : stosb byte ptr [rdi], al ; cld ; inc dword ptr [rsi - 0x4f] ; cld ; call rsi
0x0000000000175d84 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000001a6801 : stosb byte ptr [rdi], al ; hlt ; call qword ptr [rbx]
0x00000000001a3cb5 : stosb byte ptr [rdi], al ; jmp qword ptr [rdx]
0x00000000001a04e4 : stosb byte ptr [rdi], al ; mov ch, -0x10 ; jmp qword ptr [rdx]
0x0000000000179ce4 : stosb byte ptr [rdi], al ; mov ebx, 0xc81afff3 ; jmp rcx
0x0000000000179cd8 : stosb byte ptr [rdi], al ; mov ebx, 0xc8edfff3 ; dec ebp ; ret 0xfff3
0x0000000000179c40 : stosb byte ptr [rdi], al ; mov ebx, 0xcc89fff3 ; dec ebp ; ret 0xfff3
0x00000000000e078f : stosb byte ptr [rdi], al ; or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x0000000000117c92 : stosb byte ptr [rdi], al ; ret
0x0000000000117d92 : stosb byte ptr [rdi], al ; ret 0x2a
0x00000000001a5690 : stosb byte ptr [rdi], al ; ret 0xffe7
0x00000000000f5fc2 : stosb byte ptr [rdi], al ; xchg eax, esp ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000007e009 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x0000000000188669 : stosd dword ptr [rdi], eax ; cld ; call qword ptr [rdx]
0x00000000001885ad : stosd dword ptr [rdi], eax ; cld ; call rsi
0x00000000001885a9 : stosd dword ptr [rdi], eax ; cld ; inc dword ptr [rax - 0x55] ; cld ; call rsi
0x00000000001885e9 : stosd dword ptr [rdi], eax ; cld ; jmp qword ptr [rsi]
0x00000000001887a9 : stosd dword ptr [rdi], eax ; cld ; jmp rax
0x0000000000197ad9 : stosd dword ptr [rdi], eax ; in eax, dx ; call qword ptr [rcx]
0x00000000001a041c : stosd dword ptr [rdi], eax ; mov ch, -0x10 ; jmp qword ptr [rdx]
0x000000000008b791 : stosd dword ptr [rdi], eax ; ret
0x0000000000187421 : stosd dword ptr [rdi], eax ; std ; jmp rcx
0x00000000001874e5 : stosd dword ptr [rdi], eax ; std ; push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; std ; call rax
0x0000000000084653 : stosd dword ptr [rdi], eax ; xor eax, dword ptr [rax] ; test eax, eax ; js 0x84668 ; ret
0x00000000000840e3 : str word ptr [rax + 0x63] ; adc al, -0x48 ; add rax, rdx ; jmp rax
0x0000000000129395 : str word ptr [rax - 0x77] ; ret 0x8348
0x0000000000087291 : str word ptr [rax - 0x77] ; ret 0xff31
0x0000000000177271 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000001ab718 : sub ah, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001ab4bc : sub al, -0x3d ; add dword ptr [rax], eax ; lock sal ch, cl ; jmp qword ptr [rsi]
0x00000000001a8cbc : sub al, -0x65 ; add dword ptr [rax], eax ; shr byte ptr [rsi], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001a89bc : sub al, -0x68 ; add dword ptr [rax], eax ; adc byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a81bc : sub al, -0x70 ; add dword ptr [rax], eax ; xor byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x000000000019870c : sub al, -0x75 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a78bc : sub al, -0x79 ; add dword ptr [rax], eax ; xor ch, bl ; hlt ; jmp qword ptr [rcx]
0x000000000018b64c : sub al, -0x7c ; add dword ptr [rax], eax ; xchg eax, esp ; ret
0x00000000000d8353 : sub al, -0x7d ; ret 0x4801
0x00000000001a8a81 : sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001a3ef0 : sub al, -0xe ; jmp rdx
0x0000000000187a75 : sub al, -4 ; inc dword ptr [rax + 0x2e] ; cld ; jmp qword ptr [rax]
0x0000000000187a95 : sub al, -4 ; inc dword ptr [rax] ; cld ; jmp rax
0x00000000000fd363 : sub al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000ff642 : sub al, 0 ; add byte ptr [rax + rax], al ; add al, ch ; ret
0x00000000000fd3b5 : sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000136ba0 : sub al, 0 ; add byte ptr [rax], al ; jmp rax
0x0000000000198a40 : sub al, 0 ; add byte ptr [rax], al ; mov ah, -0x68 ; add byte ptr [rax], al ; pop rax ; ret 0xffed
0x00000000000fa982 : sub al, 0 ; add rsp, 0x18 ; ret
0x00000000000f30d3 : sub al, 0 ; add rsp, 8 ; ret
0x00000000000fd448 : sub al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000f48dc : sub al, 0 ; jne 0xf52ea ; ret
0x00000000000fa18d : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8622] ; ret
0x00000000000f9fcd : sub al, 0 ; lea rax, qword ptr [rip + 0x2c87e2] ; ret
0x00000000000fe065 : sub al, 0 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000fd94d : sub al, 0 ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000f3169 : sub al, 0 ; mov rdx, rax ; jmp 0xf3103
0x00000000000f457a : sub al, 0 ; mov rdx, rax ; jmp 0xf4554
0x00000000000f4166 : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fa38c : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd274 : sub al, 0 ; pop rbx ; ret
0x00000000000f52de : sub al, 0 ; ret
0x000000000019384c : sub al, 0x14 ; jmp 0x193852
0x00000000001a0ebc : sub al, 0x1d ; add dword ptr [rax], eax ; xor byte ptr [rdi], bh ; int1 ; jmp qword ptr [rcx]
0x0000000000111113 : sub al, 0x2b ; add byte ptr [rbx + rcx*4 + 0x2d], cl ; ret
0x000000000007ed93 : sub al, 0x34 ; add byte ptr [rax - 0x77], cl ; ret 0x2fe9
0x00000000000a3702 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x000000000007b8eb : sub al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000013449b : sub al, 0x48 ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000187c2c : sub al, 0x5f ; cld ; call rdx
0x00000000001a60bc : sub al, 0x6f ; add dword ptr [rax], eax ; lock adc al, -7 ; call qword ptr [rax]
0x00000000000c5352 : sub al, 0x74 ; cmp eax, dword ptr [rax - 0x6bf08406] ; ret 0xb60f
0x00000000000c5141 : sub al, 0x74 ; fmul qword ptr [rax - 0x7d] ; ret 0x3c01
0x000000000011be7a : sub al, 0x74 ; or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a3705 : sub al, 0x75 ; pop rax ; ret
0x00000000001a6ebc : sub al, 0x7d ; add dword ptr [rax], eax ; jo 0x1a6e84 ; hlt ; jmp qword ptr [rcx]
0x0000000000161773 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001a1db5 : sub al, 1 ; add byte ptr [rax - 0x2f], bh ; int1 ; jmp qword ptr [rbx]
0x000000000018d325 : sub al, 2 ; add byte ptr [rcx + rax - 8], dh ; jmp rsp
0x000000000019f8bc : sub al, 7 ; add dword ptr [rax], eax ; and byte ptr [rbp - 0x10], bl ; call qword ptr [rax]
0x0000000000080d91 : sub al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000011fab4 : sub al, byte ptr [r8] ; pop rbx ; ret
0x0000000000197526 : sub al, byte ptr [rax + 0xd1cffed] ; lahf ; jg 0x197525 ; jmp qword ptr [rdx]
0x00000000000355fa : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; pop rbx ; ret
0x0000000000112cd3 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000001195b4 : sub al, byte ptr [rax] ; jne 0x119630 ; add rsp, 8 ; ret
0x000000000010f222 : sub al, byte ptr [rax] ; mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
0x000000000011cdf5 : sub al, byte ptr [rax] ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x11ce09 ; ret
0x000000000011d0d5 : sub al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x000000000011f9f6 : sub al, byte ptr [rax] ; pop rbx ; ret
0x0000000000112e55 : sub al, byte ptr [rax] ; ret
0x000000000011c95e : sub al, byte ptr [rax] ; test eax, eax ; je 0x11c96e ; ret
0x0000000000120724 : sub al, byte ptr [rax] ; test eax, eax ; je 0x120736 ; ret
0x0000000000120723 : sub al, byte ptr [rax] ; test eax, eax ; je 0x120737 ; ret
0x000000000018d2a5 : sub al, byte ptr [rdx] ; add byte ptr [rsi + rdi*8 - 9], dh ; call rsp
0x00000000001298b1 : sub al, ch ; pop rcx ; pop rbx ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000018793c : sub bh, -5 ; call rax
0x0000000000187a91 : sub bh, ah ; jmp qword ptr [rax]
0x0000000000187ab1 : sub bh, ah ; jmp rax
0x00000000001a3e88 : sub bh, bl ; call qword ptr [rdx]
0x00000000001a2f88 : sub bl, bh ; int1 ; jmp qword ptr [rcx]
0x0000000000035642 : sub bl, byte ptr [rsi - 0x3fce0002] ; pop rbx ; ret
0x00000000000a36f6 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x000000000012f281 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e2de0 : sub byte ptr [r8 - 0x77], r9b ; ret
0x0000000000134337 : sub byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x000000000003734f : sub byte ptr [rax + 0x44c88904], 0xf ; ret 0x8d48
0x0000000000128c3e : sub byte ptr [rax + 1], bh ; ret
0x000000000012f282 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e9ef7 : sub byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax - 0x77] ; ret
0x000000000012f32a : sub byte ptr [rax - 0x75], cl ; sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x00000000000fbf40 : sub byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000b5f5d : sub byte ptr [rax - 0x77], cl ; jmp 0x48cde8b3
0x00000000000b62b4 : sub byte ptr [rax - 0x77], cl ; jmp 0x4ccdec0a
0x0000000000124a49 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000000e2de1 : sub byte ptr [rax - 0x77], cl ; ret
0x0000000000134338 : sub byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000026eb3 : sub byte ptr [rax - 0x77], cl ; sbb bl, ch ; ret 0x1f0f
0x000000000002acc5 : sub byte ptr [rax - 0x77], cl ; sbb byte ptr [rbx - 0x14dbdbbc], cl ; ret 0x8948
0x0000000000029af5 : sub byte ptr [rax - 0x77], cl ; sbb byte ptr [rbx - 0x14e3dbbc], cl ; ret 0x8948
0x0000000000071698 : sub byte ptr [rax - 0x78], al ; cmp dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; ret
0x0000000000074193 : sub byte ptr [rax - 0x78], r8b ; cmp dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; ret
0x00000000000d0ab7 : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000001a87d0 : sub byte ptr [rax], -0xb ; jmp qword ptr [rcx]
0x00000000000022d1 : sub byte ptr [rax], 0x10 ; salc ; ret
0x00000000001352c1 : sub byte ptr [rax], al ; add byte ptr [rcx], 0 ; add dh, dh ; ret
0x000000000013452f : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000001344ea : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001346a6 : sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000102bac : sub byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000134645 : sub byte ptr [rax], al ; jmp rax
0x0000000000136c95 : sub byte ptr [rax], al ; mov rax, qword ptr [rax + 0x108] ; jmp rax
0x000000000013463e : sub byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2884b9] ; jmp rax
0x0000000000134595 : sub byte ptr [rax], al ; pop r12 ; jmp rax
0x00000000001379a4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1379b8 ; xor eax, eax ; ret
0x00000000001379d4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1379e8 ; xor eax, eax ; ret
0x0000000000137a04 : sub byte ptr [rax], al ; test eax, eax ; jne 0x137a18 ; xor eax, eax ; ret
0x0000000000137a34 : sub byte ptr [rax], al ; test eax, eax ; jne 0x137a48 ; xor eax, eax ; ret
0x0000000000137a64 : sub byte ptr [rax], al ; test eax, eax ; jne 0x137a78 ; xor eax, eax ; ret
0x0000000000137a94 : sub byte ptr [rax], al ; test eax, eax ; jne 0x137aa8 ; xor eax, eax ; ret
0x00000000000022d2 : sub byte ptr [rax], dl ; salc ; ret
0x00000000000a36fa : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000a36f9 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000da639 : sub byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000d1782 : sub byte ptr [rbp - 0xf], dh ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x000000000010679e : sub byte ptr [rbx + 0x2b8bef35], cl ; add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000000b324a : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000021d4b : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000005da6b : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000012dd97 : sub byte ptr [rbx + 0xf], bl ; mov dh, -0x40 ; pop rbp ; ret
0x00000000000d5963 : sub byte ptr [rbx + rcx*4 + 0x76], cl ; xor byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000136b73 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000136b72 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000001879d0 : sub byte ptr [rbx], -4 ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x00000000000a36f7 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000001a89d8 : sub byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000b42ed : sub byte ptr [rcx + 0x39], cl ; ret
0x00000000000a9025 : sub byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000080ac2 : sub byte ptr [rcx + rcx*4 + 0x62], cl ; and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000012f357 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a473d : sub byte ptr [rcx + rcx*4 - 0x12], cl ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000083f28 : sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000104997 : sub byte ptr [rcx + rcx*4 - 0x38], al ; sub eax, edx ; ret
0x000000000008139c : sub byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x0000000000036aa5 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; jmp rdx
0x00000000000cca02 : sub byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000001a1a3d : sub byte ptr [rcx], al ; add al, dl ; iretd ; int1 ; call rsi
0x00000000001a91b8 : sub byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000106867 : sub byte ptr [rcx], ch ; ret 0x8941
0x00000000000718a7 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000e25b7 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000064de3 : sub byte ptr [rcx], dh ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x0000000000106866 : sub byte ptr [rcx], r13b ; ret 0x8941
0x0000000000109140 : sub byte ptr [rdi + 0x1002b], bh ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000012284c : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000000a6843 : sub byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000196b04 : sub byte ptr [rdx - 0x13], bh ; jmp qword ptr [rdx]
0x00000000001941ec : sub byte ptr [rdx - 0x15], al ; jmp qword ptr [rdx]
0x00000000000b3752 : sub byte ptr [rip + 0x440f4800], cl ; ret 0x8d48
0x000000000019d1b2 : sub byte ptr [rsi + 0x300e4105], al ; add dword ptr [rsi], 2 ; ret
0x0000000000191968 : sub byte ptr [rsi - 0x16], dl ; jmp qword ptr [rdi]
0x00000000001a8c48 : sub byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000002be8 : sub byte ptr [rsi], cl ; and byte ptr [rsi - 0x32], dh ; clc ; ret
0x0000000000197527 : sub ch, -1 ; sbb al, 0xd ; lahf ; jg 0x197524 ; jmp qword ptr [rdx]
0x00000000001975e7 : sub ch, -1 ; sbb al, 0xd ; lodsd eax, dword ptr [rsi] ; jg 0x1975e4 ; jmp qword ptr [rdx]
0x000000000019762f : sub ch, -1 ; sbb al, 0xd ; lodsd eax, dword ptr [rsi] ; jg 0x19762c ; jmp qword ptr [rdx]
0x00000000001973d7 : sub ch, -1 ; sbb al, 0xd ; mov edi, dword ptr [rdi - 0x13] ; jmp qword ptr [rdx]
0x000000000002bf82 : sub ch, byte ptr [rax + rdx - 0x2076b800] ; call r12
0x00000000001a8849 : sub ch, dh ; call qword ptr [rax]
0x00000000001a8789 : sub ch, dh ; call qword ptr [rcx]
0x00000000001a87d1 : sub ch, dh ; jmp qword ptr [rcx]
0x00000000000362c5 : sub cl, al ; jne 0x362d8 ; add rsp, 8 ; ret
0x00000000000365a0 : sub cl, al ; jne 0x365b8 ; add rsp, 8 ; ret
0x0000000000036148 : sub cl, al ; ret
0x00000000000d22f3 : sub cl, byte ptr [rax + 0x39] ; ret 0x870f
0x00000000000bdf0a : sub cl, byte ptr [rax - 0x77] ; loope 0xbde9d ; ret 0xf631
0x00000000000e7df3 : sub cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x403c
0x00000000000f7a0d : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a8931 : sub dh, ch ; jmp qword ptr [rcx]
0x000000000019bc45 : sub dh, ch ; jmp qword ptr [rdx]
0x000000000018bee1 : sub dh, ch ; jmp rsp
0x000000000002a88c : sub dl, byte ptr [rip + 0x3d8d4800] ; ret 0x1565
0x0000000000093296 : sub dword ptr [rax - 0x77], ecx ; jmp 0x4ccbbbf0
0x000000000012b8b5 : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000012c4c5 : sub dword ptr [rax], eax ; cmp dword ptr fs:[rax], 0x18 ; je 0x12c4d8 ; ret
0x0000000000125b5c : sub dword ptr [rax], eax ; jne 0x125be7 ; jmp 0x125b74
0x000000000012b7dc : sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000121e95 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000131274 : sub dword ptr [rax], eax ; test eax, eax ; je 0x131288 ; xor eax, eax ; ret
0x0000000000131273 : sub dword ptr [rax], eax ; test eax, eax ; je 0x131289 ; xor eax, eax ; ret
0x000000000015b263 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x0000000000143d57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x143d6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143ea7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x143ebd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143ff7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14400d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144147 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14415d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144297 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1442ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001443e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1443fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144537 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14454d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144687 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14469d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001447d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1447ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144927 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14493d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144a77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x144a8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144bc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x144bdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144d17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x144d2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144e67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x144e7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144fb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x144fcd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146727 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14673d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146877 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14688d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001469c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1469dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146b17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x146b2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146c67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x146c7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146db7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x146dcd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146f07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x146f1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000147057 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14706d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001471a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1471bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001472f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14730d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000147447 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14745d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000147597 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1475ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001476e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1476fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000147837 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14784d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000147987 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14799d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001490f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14910d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149247 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14925d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149397 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1493ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001494e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1494fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149637 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14964d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149787 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14979d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001498d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1498ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149a27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x149a3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149b77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x149b8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149cc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x149cdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149e17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x149e2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149f67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x149f7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014a0b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14a0cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014a207 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14a21d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014a357 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14a36d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000000258b : sub dword ptr [rdi + 0x2009646], -0x7a ; out dx, al ; ret 0x88ad
0x0000000000143cb3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143caf : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000143d5d : sub dword ptr [rdi], esp ; jmp r9
0x0000000000162dc9 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000112d53 : sub dword ptr [rdx], edx ; sub eax, dword ptr [rax] ; call rax
0x0000000000161f56 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000012b8b4 : sub dword ptr ss:[rax], eax ; add rsp, 8 ; ret
0x000000000012b8d6 : sub eax, -0x80 ; add rsp, 8 ; ret
0x000000000012f0ca : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e3d55 : sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x00000000001879f5 : sub eax, 0x2f00fffc ; cld ; jmp rax
0x00000000001879b5 : sub eax, 0x2f30fffc ; cld ; call qword ptr [rax]
0x0000000000080dda : sub eax, 0x448d48fe ; ret
0x00000000000b4e6f : sub eax, 0x48ffffd1 ; add esp, 0x18 ; ret
0x0000000000036389 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x00000000000e6fcf : sub eax, 0x85ffffff ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000f9951 : sub eax, 0x89000862 ; ret 0xe8c1
0x00000000000fd00f : sub eax, 0x89480008 ; ret 0xff31
0x000000000010db84 : sub eax, 0x8948002b ; ret 0x8b48
0x00000000000961ff : sub eax, 0x89ffff19 ; ret
0x000000000010d4d4 : sub eax, 0x89ffffff ; ret 0x96eb
0x0000000000077536 : sub eax, 0xf8830000 ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000012a945 : sub eax, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000046ff7 : sub eax, 1 ; cmp rax, rbx ; jne 0x46ff9 ; pop rbx ; ret
0x00000000000980ba : sub eax, 1 ; jne 0x980b6 ; ret
0x000000000002c994 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000011e1e1 : sub eax, 1 ; pop r13 ; ret
0x00000000000384bf : sub eax, 1 ; ret
0x000000000010d0d9 : sub eax, dword ptr [eax] ; add rsp, 0x28 ; jmp rax
0x0000000000197ad5 : sub eax, dword ptr [rax] ; add al, bh ; stosd dword ptr [rdi], eax ; in eax, dx ; call qword ptr [rcx]
0x0000000000110755 : sub eax, dword ptr [rax] ; add byte ptr [rbp - 0x3e], dh ; jmp 0x110718
0x0000000000109142 : sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000010e25f : sub eax, dword ptr [rax] ; add ecx, ebp ; ret
0x000000000010d0da : sub eax, dword ptr [rax] ; add rsp, 0x28 ; jmp rax
0x000000000011248a : sub eax, dword ptr [rax] ; call rax
0x0000000000108eff : sub eax, dword ptr [rax] ; cmp rdx, rax ; jne 0x108ee8 ; ret
0x00000000000fff2f : sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
0x000000000010b8fc : sub eax, dword ptr [rax] ; pop rbp ; ret
0x00000000001086c4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1086d8 ; xor eax, eax ; ret
0x00000000001086f4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108708 ; xor eax, eax ; ret
0x0000000000108724 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108738 ; xor eax, eax ; ret
0x0000000000108754 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108768 ; xor eax, eax ; ret
0x0000000000108784 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108798 ; xor eax, eax ; ret
0x00000000001087b4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1087c8 ; xor eax, eax ; ret
0x00000000001087e4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1087f8 ; xor eax, eax ; ret
0x0000000000108814 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108828 ; xor eax, eax ; ret
0x0000000000108844 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108858 ; xor eax, eax ; ret
0x0000000000108874 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108888 ; xor eax, eax ; ret
0x00000000001088a4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1088b8 ; xor eax, eax ; ret
0x00000000001088d4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1088e8 ; xor eax, eax ; ret
0x0000000000108904 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108918 ; xor eax, eax ; ret
0x0000000000108934 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108948 ; xor eax, eax ; ret
0x0000000000108964 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108978 ; xor eax, eax ; ret
0x0000000000108994 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1089a8 ; xor eax, eax ; ret
0x00000000001089c4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1089d8 ; xor eax, eax ; ret
0x00000000001089f4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108a08 ; xor eax, eax ; ret
0x0000000000108a24 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108a38 ; xor eax, eax ; ret
0x0000000000108a54 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108a68 ; xor eax, eax ; ret
0x0000000000108ab4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108ac8 ; xor eax, eax ; ret
0x0000000000108ae4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108af8 ; xor eax, eax ; ret
0x0000000000108b14 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108b28 ; xor eax, eax ; ret
0x0000000000108b44 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108b58 ; xor eax, eax ; ret
0x0000000000108b74 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108b88 ; xor eax, eax ; ret
0x0000000000108ba4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108bb8 ; xor eax, eax ; ret
0x0000000000108bd4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108be8 ; xor eax, eax ; ret
0x0000000000108c04 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108c18 ; xor eax, eax ; ret
0x0000000000108c34 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108c48 ; xor eax, eax ; ret
0x0000000000109155 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x109168 ; ret
0x00000000000306ff : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a2833 : sub eax, dword ptr [rcx + r8*4] ; je 0xa2817 ; ret
0x00000000000a2834 : sub eax, dword ptr [rcx + rax*4] ; je 0xa2816 ; ret
0x000000000007dc0e : sub eax, dword ptr [rdi + 0x18] ; ret
0x0000000000073b15 : sub eax, dword ptr [rdi + 0x20] ; ret
0x0000000000073a05 : sub eax, dword ptr [rdi + 0x38] ; ret
0x00000000000763e5 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000073b06 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00000000000739f6 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000a27ec : sub eax, dword ptr [rdx + rcx*4] ; je 0xa27d6 ; ret
0x00000000001b1c9d : sub eax, dword ptr [rdx] ; add byte ptr [rax], dl ; fdivr st(6), st(0) ; jmp qword ptr [rbx]
0x000000000007d123 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000039d31 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000001049b1 : sub eax, eax ; mov eax, r8d ; ret
0x00000000000a3c5c : sub eax, eax ; nop ; ret
0x00000000000a3c11 : sub eax, eax ; ret
0x000000000007c37d : sub eax, ebp ; pop r13 ; pop r14 ; ret
0x00000000000a4973 : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a4bba : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000007c989 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000088f4c : sub eax, ecx ; ret
0x00000000000896f1 : sub eax, edi ; ret
0x00000000000a4488 : sub eax, edi ; sar rax, 2 ; sub rdx, rax ; jmp 0xa4425
0x000000000003c819 : sub eax, edx ; ret
0x000000000003667f : sub eax, edx ; sar eax, 0x10 ; ret
0x000000000003636f : sub eax, edx ; shr eax, 0x1f ; ret
0x0000000000035fbd : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000071a5a : sub eax, esi ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000007579e : sub eax, esi ; pop r14 ; pop r15 ; ret
0x0000000000104b72 : sub eax, esi ; ret
0x0000000000079e79 : sub eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a3c5b : sub eax, r8d ; nop ; ret
0x00000000000a3c10 : sub eax, r8d ; ret
0x00000000001049cb : sub eax, r9d ; ret
0x0000000000175b1e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000118aa0 : sub ebx, dword ptr [rbx + 0x5d] ; ret
0x00000000001063f3 : sub ebx, dword ptr [rbx - 0x76b7fff9] ; ret 0x894c
0x00000000001745b5 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000002f63 : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000007faf7 : sub ecx, dword ptr [rax + 0x39] ; ret
0x00000000000f77ec : sub ecx, dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000003c6e4 : sub ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000009e241 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000082234 : sub ecx, dword ptr [rax] ; add ebx, ebp ; ret
0x00000000000be054 : sub ecx, dword ptr [rcx + rcx*4 - 1] ; call r14
0x00000000000849d4 : sub ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000019c5d4 : sub ecx, dword ptr [rsi - 0x12] ; jmp qword ptr [rdx]
0x000000000010491c : sub ecx, eax ; mov eax, ecx ; ret
0x00000000000a2a8c : sub edi, 0x10 ; add rax, rdi ; ret
0x000000000018d5f9 : sub edi, eax ; jmp rsp
0x000000000018cac1 : sub edi, esi ; jmp rsp
0x0000000000187a31 : sub edi, esp ; call rax
0x00000000000c4d6d : sub edi, esp ; dec dword ptr [rax - 0x77] ; ret 0x19eb
0x00000000001879d1 : sub edi, esp ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x00000000001879f1 : sub edi, esp ; jmp qword ptr [rax]
0x000000000007d150 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007d145 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000118622 : sub edx, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008c994 : sub edx, eax ; jbe 0x8c9d7 ; add rax, rdi ; ret
0x000000000008c9a4 : sub edx, eax ; jbe 0x8c9d9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008c9b4 : sub edx, eax ; jbe 0x8c9d9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008c9c4 : sub edx, eax ; jbe 0x8c9d9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a448f : sub edx, eax ; jmp 0xa441e
0x00000000000c82d0 : sub edx, eax ; jmp 0xc82ed
0x000000000002079e : sub edx, ebx ; inc rdx ; jmp 0x207ad
0x000000000003663d : sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000018e679 : sub edx, edi ; call rsp
0x00000000000c82cd : sub edx, edi ; sub r10, rax ; jmp 0xc82f0
0x0000000000079752 : sub edx, esi ; mov rdi, rbx ; call rax
0x0000000000097f0a : sub esi, 1 ; jne 0x97f07 ; xor eax, eax ; ret
0x0000000000097fd2 : sub esi, 1 ; jne 0x97fcf ; xor eax, eax ; ret
0x00000000001188ee : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x0000000000134177 : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], -0x3c ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000010c4bf : sub esi, ebp ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x00000000001a89c1 : sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a45b1 : sub esi, ebx ; jmp rdx
0x000000000018cb11 : sub esi, edi ; call rsp
0x000000000001f6a4 : sub esi, edx ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f682
0x00000000001af449 : sub esi, esi ; jmp qword ptr [rcx]
0x00000000001b0fd5 : sub esi, esi ; jmp qword ptr [rdx]
0x00000000001b1064 : sub esi, r14d ; jmp qword ptr [rdx]
0x000000000001f661 : sub esp, -0x80 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012f43e : sub esp, -0x80 ; mov rax, rdx ; pop rbx ; ret
0x00000000000a44de : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116eb4 : sub esp, -0x80 ; pop rbx ; ret
0x0000000000116ec1 : sub esp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x0000000000135486 : sub esp, 0x188 ; call 0xc1758
0x0000000000085b11 : sub esp, 8 ; call 0xf1dc5
0x00000000000af76f : sub esp, eax ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x00000000000c82cf : sub r10, rax ; jmp 0xc82ee
0x00000000000c82cc : sub r10, rdi ; sub r10, rax ; jmp 0xc82f1
0x0000000000118621 : sub r10d, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000af76e : sub r12d, eax ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x00000000001b10ac : sub r14d, esi ; jmp qword ptr [rdx]
0x00000000001b101c : sub r14d, r14d ; jmp qword ptr [rdx]
0x000000000007c988 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000011f9f5 : sub r8b, byte ptr [rax] ; pop rbx ; ret
0x00000000001049b0 : sub r8d, eax ; mov eax, r8d ; ret
0x0000000000082233 : sub r9, qword ptr [rax] ; add ebx, ebp ; ret
0x000000000012b8d5 : sub rax, -0x80 ; add rsp, 8 ; ret
0x00000000000980b9 : sub rax, 1 ; jne 0x980b7 ; ret
0x00000000000a2113 : sub rax, 1 ; ret
0x000000000007dc0d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000073b14 : sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000073a04 : sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000763e4 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000073b05 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00000000000739f5 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x0000000000079e78 : sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007c37c : sub rax, r13 ; pop r13 ; pop r14 ; ret
0x0000000000071a59 : sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000007579d : sub rax, r14 ; pop r14 ; pop r15 ; ret
0x00000000000a4bb9 : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000896f0 : sub rax, rdi ; ret
0x00000000000a4487 : sub rax, rdi ; sar rax, 2 ; sub rdx, rax ; jmp 0xa4426
0x000000000003c82d : sub rax, rdx ; ret
0x0000000000035fbc : sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000013d9fc : sub rax, rsi ; ret
0x00000000000a2a8b : sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000008c993 : sub rdx, rax ; jbe 0x8c9d8 ; add rax, rdi ; ret
0x00000000000a448e : sub rdx, rax ; jmp 0xa441f
0x000000000002079d : sub rdx, rbx ; inc rdx ; jmp 0x207ae
0x0000000000079751 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000097f09 : sub rsi, 1 ; jne 0x97f08 ; xor eax, eax ; ret
0x0000000000097fd1 : sub rsi, 1 ; jne 0x97fd0 ; xor eax, eax ; ret
0x000000000012f43d : sub rsp, -0x80 ; mov rax, rdx ; pop rbx ; ret
0x00000000000a44dd : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116eb3 : sub rsp, -0x80 ; pop rbx ; ret
0x0000000000116ec0 : sub rsp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x0000000000135485 : sub rsp, 0x188 ; call 0xc1759
0x0000000000085b10 : sub rsp, 8 ; call 0xf1dc6
0x00000000000360a0 : subps xmm0, xmm1 ; ret
0x000000000003609f : subsd xmm0, xmm1 ; ret
0x0000000000036404 : subss xmm0, xmm1 ; ret
0x0000000000119c61 : syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000cc1dd : syscall ; neg eax ; ret
0x0000000000108ca7 : syscall ; pop rdx ; pop rsi ; ret
0x00000000000c28d5 : syscall ; ret
0x00000000000faf7f : syscall ; test rax, rax ; jl 0xfafce ; je 0xfaf92 ; ret
0x000000000007ddf6 : sysenter
0x0000000000115093 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x840f
0x00000000001897e0 : test ah, ch ; jmp 0x1897e6
0x00000000000bcfd4 : test ah, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x00000000001037f1 : test ah, dl ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000a4019 : test al, -0x10 ; jne 0xa4078 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a4018 : test al, -0x10 ; jne 0xa4079 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000018aa11 : test al, -0x11 ; jmp rsp
0x0000000000199035 : test al, -0x13 ; jmp qword ptr [rdx]
0x0000000000025148 : test al, -0x18 ; ret 0xffa2
0x00000000001a7938 : test al, -0x23 ; hlt ; jmp qword ptr [rcx]
0x00000000001ab478 : test al, -0x2e ; cmc ; jmp qword ptr [rsi]
0x0000000000178f68 : test al, -0x4e ; lock inc eax ; mov dl, -0x10 ; jmp qword ptr [rax]
0x0000000000179118 : test al, -0x68 ; int1 ; jmp rax
0x0000000000174e77 : test al, -0x69 ; xchg eax, esp ; ret
0x0000000000195dc8 : test al, -0x6f ; in eax, dx ; jmp qword ptr [rax]
0x00000000001874cd : test al, -3 ; call rax
0x0000000000187409 : test al, -3 ; jmp qword ptr [rcx + 0x21fffda8]
0x000000000018740d : test al, -3 ; jmp qword ptr [rcx]
0x000000000019ba04 : test al, -5 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019e098 : test al, -9 ; out dx, al ; call qword ptr [rax]
0x000000000012b937 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001248ca : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000002cbe0 : test al, 0 ; add byte ptr [rax], al ; ret
0x0000000000193658 : test al, 0 ; jmp 0x19365e
0x000000000019ae68 : test al, 0x17 ; out dx, al ; call qword ptr [rcx]
0x00000000001a86e8 : test al, 0x27 ; cmc ; jmp qword ptr [rcx]
0x000000000012da0b : test al, 0x2e ; add eax, 0x3d8d4800 ; ret
0x00000000000d4f91 : test al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000be483 : test al, 0x48 ; mov edi, dword ptr [rbp - 0x68] ; call r14
0x000000000011f9f4 : test al, 0x4c ; sub al, byte ptr [rax] ; pop rbx ; ret
0x000000000019ef88 : test al, 0x68 ; sti ; call qword ptr [rax]
0x0000000000195934 : test al, 0x6b ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019678c : test al, 0x74 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a8238 : test al, 0xb ; cmc ; jmp qword ptr [rcx]
0x000000000018e3ed : test al, 2 ; add ah, al ; iretd ; stc ; call rsp
0x0000000000082972 : test al, ah ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000104994 : test al, al ; je 0x1049c9 ; mov eax, r9d ; sub eax, edx ; ret
0x00000000000975e9 : test al, al ; jne 0x975d5 ; ret
0x00000000000976e0 : test al, al ; jne 0x976ce ; xor eax, eax ; ret
0x0000000000097f4a : test al, al ; jne 0x97ef2 ; mov rax, rdi ; ret
0x0000000000098a3a : test al, al ; jne 0x98a28 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000001097c9 : test al, al ; mov byte ptr [rdi], al ; jne 0x1097c1 ; mov rax, rdi ; ret
0x0000000000109989 : test al, al ; mov byte ptr [rdi], al ; jne 0x109981 ; mov rax, r10 ; ret
0x0000000000070214 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000001ab714 : test al, ch ; add dword ptr [rax], eax ; sub ah, dl ; cmc ; jmp qword ptr [rsi]
0x000000000018bef4 : test al, cl ; add dword ptr [rax], eax ; test byte ptr [rdx], bh ; cmc ; call rsp
0x0000000000095212 : test al, dh ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001889f5 : test bh, ah ; call qword ptr [rax + 0x10fffc85]
0x0000000000188a35 : test bh, ah ; call qword ptr [rax]
0x0000000000188131 : test bh, ah ; call qword ptr [rdx]
0x00000000001791bd : test bh, ah ; call rax
0x0000000000188071 : test bh, ah ; inc dword ptr [rax - 0x75] ; cld ; call rax
0x000000000018812d : test bh, ah ; jmp qword ptr [rdx + 0x12fffc84]
0x00000000001880b1 : test bh, ah ; jmp qword ptr [rsi]
0x0000000000188271 : test bh, ah ; jmp rax
0x000000000018826d : test bh, ah ; push qword ptr [rax - 0x7c] ; cld ; jmp rax
0x00000000001148a6 : test bh, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000187375 : test bh, bl ; call qword ptr [rax + 0x10fffb85]
0x00000000000f36e0 : test bl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000001223c4 : test bl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000002104e : test bl, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x894c
0x000000000013044b : test byte ptr [rax + 0x1000001], al ; ret 0x894c
0x000000000002fd96 : test byte ptr [rax + 0x200], bh ; ret
0x00000000000c343a : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x0000000000128365 : test byte ptr [rax + 0x63], 0x34 ; mov al, 0x48 ; add eax, esi ; jmp rax
0x0000000000128bc5 : test byte ptr [rax + 0x63], 0xc ; mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000b050c : test byte ptr [rax + 0xf], 0x45 ; ret 0x8948
0x00000000000c9be3 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000dcfe0 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000195614 : test byte ptr [rax + rax], ah ; sbb bh, ch ; in al, dx ; call qword ptr [rax]
0x00000000000fa3ea : test byte ptr [rax + rax], ch ; add rsp, 8 ; ret
0x00000000000fa38b : test byte ptr [rax + rax], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000048589 : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xd7e9
0x00000000000b1b99 : test byte ptr [rax + rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0x000000000018e3ec : test byte ptr [rax - 0x303bfffe], ch ; stc ; call rsp
0x000000000002412b : test byte ptr [rax - 0x39], cl ; ret
0x00000000000f5be8 : test byte ptr [rax - 0x74b6000e], bl ; call rbx
0x000000000002c4e5 : test byte ptr [rax - 0x75], 5 ; ret
0x00000000001880c8 : test byte ptr [rax - 0x77790004], -4 ; call qword ptr [rsi]
0x00000000000f683e : test byte ptr [rax - 0x77], -0x11 ; call rbx
0x000000000011e77f : test byte ptr [rax - 0x77], -0x21 ; mov qword ptr [rsp], rcx ; call r12
0x00000000000dc576 : test byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000000ad983 : test byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e391d : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe2c1
0x00000000000eb06c : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8b49
0x000000000016324a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000015b3fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x000000000009d96a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009e93a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000015b42a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000009e95a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009e96a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x000000000015b46a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000009e9aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007d3fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000015b40a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009e94a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x0000000000021c09 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000071d0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000005dada : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000046cda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000097b9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000104918 : test byte ptr [rax], al ; add byte ptr [rax], al ; sub ecx, eax ; mov eax, ecx ; ret
0x000000000018e044 : test byte ptr [rbp + 0x65440002], cl ; stc ; call rsp
0x00000000001a3714 : test byte ptr [rbp + 1], al ; add byte ptr [rax - 0x7a], bh ; jmp qword ptr [rax]
0x0000000000024059 : test byte ptr [rbp + rcx*4 + 0x2c], cl ; ret
0x000000000018da08 : test byte ptr [rbp - 8], dh ; jmp rsp
0x000000000010700c : test byte ptr [rbx + 0x1c], 0x20 ; je 0x107078 ; xor eax, eax ; pop rbx ; ret
0x0000000000188dd0 : test byte ptr [rbx - 0x16], ah ; jmp rsp
0x00000000000a57f0 : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f3738 : test byte ptr [rbx], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000000250d1 : test byte ptr [rbx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000018a728 : test byte ptr [rbx], bh ; out dx, eax ; call rsp
0x0000000000190d66 : test byte ptr [rbx], cl ; ljmp 0x4d0d1cff, -0x1600 ; jmp qword ptr [rdx]
0x00000000000a5c90 : test byte ptr [rbx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f367f : test byte ptr [rcx + rax - 0x7cb80000], bh ; ret 0x3c01
0x00000000000f361f : test byte ptr [rcx + rax - 0x7cb80000], dl ; ret 0x3c01
0x000000000008bcce : test byte ptr [rcx + rax - 0x7cb80000], dl ; ret 0xe901
0x0000000000085c1f : test byte ptr [rcx + rax], bh ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00000000000393b4 : test byte ptr [rcx + rcx*4 - 9], -0x18 ; ret
0x0000000000102be4 : test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x000000000003fea6 : test byte ptr [rcx - 0x47], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x000000000006e792 : test byte ptr [rcx - 0x76ffffff], cl ; ret 0xe283
0x000000000013435e : test byte ptr [rcx - 0x7d000000], bl ; ret 0x8380
0x00000000000bd3ea : test byte ptr [rcx - 0x7d], -0x3c ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000010d1f5 : test byte ptr [rcx], -0x10 ; bswap eax ; ret
0x00000000001383e6 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018b655 : test byte ptr [rcx], al ; add ah, al ; ret
0x00000000000abc0d : test byte ptr [rcx], al ; add eax, 0xb8480000 ; ret 0xffff
0x000000000018b654 : test byte ptr [rcx], r8b ; add ah, al ; ret
0x00000000000897a4 : test byte ptr [rdi + 0x48000000], dl ; bsf eax, edx ; ret
0x00000000001a8114 : test byte ptr [rdi + 0xa780001], cl ; cmc ; call rsp
0x0000000000096e70 : test byte ptr [rdi + 0xffffffd], bl ; mov dh, 0x45 ; ret
0x000000000018e504 : test byte ptr [rdi - 0x33bfffe], ch ; stc ; call rsp
0x000000000019a114 : test byte ptr [rdi - 0x6e80000], ch ; in eax, dx ; call qword ptr [rax]
0x00000000000eacaf : test byte ptr [rdi*8 - 0x76b70001], ch ; ret 0x8845
0x00000000000c5167 : test byte ptr [rdi*8 - 0x7cb70001], al ; ret 0xeb02
0x0000000000079572 : test byte ptr [rdi], -0x6b ; ret 0x8445
0x00000000000db9f6 : test byte ptr [rdi], -0x6b ; ret 0xd284
0x00000000000e939e : test byte ptr [rdi], -0x7b ; ret
0x00000000000656c8 : test byte ptr [rdi], -0x7b ; ret 0xfff2
0x000000000003a9bb : test byte ptr [rdi], -0x7c ; ret
0x00000000000f5f0a : test byte ptr [rdi], -0x7c ; ret 0
0x0000000000073a52 : test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000073a62 : test byte ptr [rdi], 8 ; sete al ; ret
0x0000000000191914 : test byte ptr [rdi], ah ; add byte ptr [rax], al ; mov byte ptr [rbp - 0x16], dl ; jmp qword ptr [rcx]
0x000000000009e2e8 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000000000018a3bc : test byte ptr [rdi], al ; add dword ptr [rax], eax ; and al, 0xffffffffffffffec ; out dx, al ; call rsp
0x000000000018bc0c : test byte ptr [rdx + 0x13740001], ch ; hlt ; call rsp
0x000000000002fd24 : test byte ptr [rdx + 0x200], al ; ret
0x0000000000096e5d : test byte ptr [rdx + 0xffffffd], dh ; mov dh, 0x45 ; ret 0x8349
0x00000000001a4c14 : test byte ptr [rdx + 1], bl ; add byte ptr [rax], bl ; outsd dx, dword ptr [rsi] ; jmp rax
0x00000000000c7177 : test byte ptr [rdx - 0x76fffffd], dl ; ret 0x8349
0x0000000000093dd4 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000018bef8 : test byte ptr [rdx], bh ; cmc ; call rsp
0x0000000000028cf0 : test byte ptr [rdx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000e7ded : test byte ptr [rip + 0x3c000017], bh ; sub cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x403c
0x0000000000021997 : test byte ptr [rip + 0x5b000001], dl ; pop rbp ; pop r12 ; ret
0x000000000004290d : test byte ptr [rip - 0x76ffffff], bl ; ret
0x00000000000e6fce : test byte ptr [rip - 0x7a000001], ch ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000001a8814 : test byte ptr [rsi + 0x28c80001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000000b3cb6 : test byte ptr [rsi], -4 ; dec dword ptr [rax + 0x39] ; ret
0x00000000001a3014 : test byte ptr [rsi], bh ; add dword ptr [rax], eax ; pop rax ; sti ; int1 ; jmp qword ptr [rcx]
0x00000000000a7c54 : test byte ptr [rsi], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000fad96 : test byte ptr [rsp + 0x29], -0x80 ; setne dl ; jmp 0xfad76
0x0000000000048da6 : test byte ptr [rsp + rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000a2612 : test ch, -0x10 ; je 0xa260b ; movzx eax, cl ; pop rbx ; ret
0x0000000000192625 : test ch, dl ; jmp qword ptr [rdx]
0x000000000010d1de : test cl, -0x20 ; or byte ptr [rcx], cl ; lock bswap eax ; ret
0x00000000000d2952 : test cl, 1 ; jne 0xd28e4 ; pop rbx ; ret
0x0000000000098599 : test cl, cl ; je 0x98561 ; mov byte ptr [r10 + 1], 0 ; ret
0x0000000000097590 : test cl, cl ; jne 0x97585 ; ret
0x00000000000a1d9f : test cl, cl ; jne 0xa1d94 ; ret
0x00000000000a1e4f : test cl, cl ; jne 0xa1e44 ; ret
0x00000000000a210f : test cl, cl ; jne 0xa2108 ; sub rax, 1 ; ret
0x00000000000a263a : test dh, -0x10 ; je 0xa2609 ; movzx eax, dl ; pop rbx ; ret
0x00000000000a263a : test dh, -0x10 ; je 0xa260b ; movzx eax, dl ; pop rbx ; ret
0x0000000000128084 : test dh, al ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000001790d9 : test dh, cl ; call rax
0x00000000001b02e9 : test dh, dh ; jmp rdx
0x0000000000097740 : test dh, dh ; jne 0x97737 ; mov qword ptr [rdx], rcx ; ret
0x00000000000256d5 : test dh, dh ; mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x00000000001630d4 : test dl, 0x40 ; jne 0x163099 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000163102 : test dl, 4 ; jne 0x163099 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000018eac4 : test dl, dh ; add al, byte ptr [rax] ; mov ah, -0x67 ; cli ; jmp rsp
0x00000000000acf91 : test dl, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000000000009801e : test dl, dl ; cmovne rax, rdi ; ret
0x0000000000035332 : test dl, dl ; jne 0x35314 ; ret
0x0000000000097544 : test dl, dl ; jne 0x9753d ; ret
0x00000000000a1fbf : test dl, dl ; jne 0xa1fb8 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000c6bb5 : test dl, dl ; jne 0xc6b9a ; ret
0x00000000000c6bdf : test dl, dl ; jne 0xc6bc7 ; ret
0x000000000010b4e8 : test dword ptr [rax + 0x29], 0x89c701c8 ; ret 0x850f
0x000000000008d5d9 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x000000000009e61b : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000009fb2b : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x000000000009fa2b : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x00000000000a3fd7 : test dword ptr [rax + rax - 0x72b80000], edx ; lock ; ret
0x000000000004dcd1 : test dword ptr [rax - 0x16000006], ebx ; ret
0x0000000000054dd2 : test dword ptr [rax - 0x7c000002], eax ; ret 0x8908
0x000000000004becf : test dword ptr [rax - 0x7c000005], esi ; ret 0x8908
0x000000000004bf3f : test dword ptr [rax - 0x7c000005], esi ; ret 0x8910
0x00000000000da080 : test dword ptr [rax - 0x7d], 0x394101c0 ; ret 0xda7f
0x00000000000c41e9 : test dword ptr [rax - 0x8ffffff], esp ; ret
0x00000000000c56ef : test dword ptr [rax - 0x900000c], eax ; ret
0x000000000010c989 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x10c95f
0x0000000000084432 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x0000000000134594 : test dword ptr [rax], ebp ; add byte ptr [rcx + 0x5c], al ; jmp rax
0x0000000000084431 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000009255f : test dword ptr [rbp - 0xc000004], esp ; ret
0x00000000001a1e34 : test dword ptr [rbp - 0xf], edi ; jmp qword ptr [rdx]
0x0000000000097aae : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001346c9 : test dword ptr [rbx + 0x48000001], edx ; add esp, 8 ; ret
0x0000000000001b0e : test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00000000000b3510 : test dword ptr [rbx + 1], eax ; add byte ptr [rax], al ; jmp 0xb352c
0x00000000000a3610 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000a3f08 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000015b348 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000015b328 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000015b240 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000009fc20 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000161a57 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161ea6 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000053d48 : test dword ptr [rbx - 0x17ffffff], esp ; pop rsi ; ret
0x0000000000002b5f : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000097a18 : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000fc390 : test dword ptr [rbx], ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008c90a : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x000000000008d2f0 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x000000000015b04a : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000161a2d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009e202 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000016193d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016184d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a3657 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000164f87 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000a3627 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000015b3ea : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x000000000018c92d : test dword ptr [rcx], 0xf703b400 ; call rsp
0x00000000000c4eb5 : test dword ptr [rcx], 0xfa800000 ; jnp 0xc4ed5 ; xchg eax, esp ; ret 0xb60f
0x00000000000a3f6a : test dword ptr [rcx], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; lock ; ret
0x00000000000ea7a3 : test dword ptr [rcx], edx ; or al, byte ptr [rax] ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x000000000008363d : test dword ptr [rdi + 0x48000022], esp ; mov eax, ebx ; pop rbx ; ret
0x000000000008d4da : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x0000000000063a63 : test dword ptr [rdi + rax*8 + 0x6ae9ffff], esi ; ret 0xffff
0x0000000000037553 : test dword ptr [rdi + rax*8], edx ; setne al ; movzx eax, al ; ret
0x000000000009e367 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x000000000009e347 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x0000000000092375 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x00000000000377b6 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x000000000008d177 : test dword ptr [rdi], ecx ; or al, 0 ; ret
0x000000000003c8f0 : test dword ptr [rdx + 0x48000001], ebp ; add esp, 8 ; ret
0x000000000009e501 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000009f909 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x000000000007d493 : test dword ptr [rdx + rax], ebp ; add bl, dh ; ret
0x0000000000162da2 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161772 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000004e7f1 : test dword ptr [rdx + rdi*8 + 0x1ffff], eax ; add byte ptr [rax], al ; jmp rax
0x000000000004ba58 : test dword ptr [rdx + rdi*8 + 0x1ffff], ebp ; add byte ptr [rax], al ; jmp rax
0x000000000004e93d : test dword ptr [rdx + rdi*8 + 0x1ffff], edx ; add byte ptr [rax], al ; jmp rax
0x000000000004ed25 : test dword ptr [rdx + rdi*8 + 0xffff], edx ; add byte ptr [rax], al ; jmp rax
0x00000000000611f1 : test dword ptr [rdx], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000015b307 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x0000000000117da6 : test dword ptr [rdx], ebx ; add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; sahf ; ret 0x2a
0x00000000000a3fad : test dword ptr [rsi + 0x48000000], edi ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000164912 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009e325 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000009e305 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x000000000009e21d : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x000000000009265e : test dword ptr [rsi - 0xc000005], esp ; ret
0x00000000000703a3 : test dword ptr [rsi - 0xcfffffc], esp ; ret
0x000000000007e9c7 : test dword ptr [rsi], ebp ; imul eax, dword ptr [rax], 0 ; ret
0x000000000011be15 : test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000161c78 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x0000000000176b60 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000014b7a6 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000036431 : test eax, 0x7fffff ; je 0x3642e ; ret
0x0000000000117e03 : test eax, 0x8900006a ; ret 0x8b48
0x00000000000c0903 : test eax, 0x890005df ; ret 0x8b48
0x0000000000020943 : test eax, 0x89000a7d ; ret 0xc031
0x000000000012308f : test eax, 0x8948fff4 ; fucompi st(0) ; salc ; ret
0x0000000000187451 : test eax, 0xa986fffd ; std ; call qword ptr [rsi]
0x000000000011d15d : test eax, 0xc031fff6 ; ret
0x000000000017abb6 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x0000000000109158 : test eax, eax ; je 0x109165 ; ret
0x000000000010abea : test eax, eax ; je 0x10ac00 ; add rsp, 8 ; ret
0x00000000001120bd : test eax, eax ; je 0x1120cd ; mov rdi, rbx ; call rax
0x00000000001123a4 : test eax, eax ; je 0x1123b4 ; mov rdi, rbx ; call rax
0x000000000011c960 : test eax, eax ; je 0x11c96c ; ret
0x000000000011f9c1 : test eax, eax ; je 0x11f9d1 ; mov rdi, rsp ; call rax
0x000000000011fa9c : test eax, eax ; je 0x11faac ; mov rdi, rsp ; call rax
0x0000000000120355 : test eax, eax ; je 0x120365 ; mov rdi, rbp ; call rax
0x0000000000120726 : test eax, eax ; je 0x120734 ; ret
0x00000000001213f3 : test eax, eax ; je 0x121403 ; mov rdi, r14 ; call rax
0x0000000000121671 : test eax, eax ; je 0x121681 ; mov rdi, rbx ; call rax
0x000000000012511b : test eax, eax ; je 0x12512b ; mov rdi, r12 ; call rax
0x00000000001252f9 : test eax, eax ; je 0x12530b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001275d6 : test eax, eax ; je 0x1275e6 ; mov rdi, rbp ; call rax
0x00000000001277f6 : test eax, eax ; je 0x127806 ; mov rdi, rbp ; call rax
0x000000000012831d : test eax, eax ; je 0x12832f ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00000000001289dc : test eax, eax ; je 0x1289ec ; mov rdi, r12 ; call rax
0x0000000000128d4d : test eax, eax ; je 0x128d5f ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000012b82c : test eax, eax ; je 0x12b80a ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000012b7fd : test eax, eax ; je 0x12b80d ; pop rbx ; ret
0x000000000012b869 : test eax, eax ; je 0x12b821 ; pop rbx ; ret
0x000000000012c5a9 : test eax, eax ; je 0x12c5bb ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012ccb2 : test eax, eax ; je 0x12ccc4 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000131276 : test eax, eax ; je 0x131286 ; xor eax, eax ; ret
0x0000000000138df3 : test eax, eax ; je 0x138dff ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000139dd8 : test eax, eax ; je 0x139de4 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000022088 : test eax, eax ; je 0x22092 ; jmp rax
0x00000000000220b8 : test eax, eax ; je 0x220c2 ; jmp rax
0x000000000002d06e : test eax, eax ; je 0x2d078 ; call rax
0x000000000002e699 : test eax, eax ; je 0x2e6a3 ; call rax
0x00000000000793ad : test eax, eax ; je 0x793bd ; pop rbx ; ret
0x0000000000084337 : test eax, eax ; je 0x84341 ; call rax
0x0000000000089350 : test eax, eax ; je 0x89361 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c1a3c : test eax, eax ; je 0xc1a46 ; call rax
0x00000000000c1c49 : test eax, eax ; je 0xc1c57 ; call rax
0x00000000000f26ec : test eax, eax ; je 0xf26f7 ; ret
0x00000000000f3dc1 : test eax, eax ; je 0xf3dd0 ; mov qword ptr [rax], rdx ; ret
0x00000000000f81eb : test eax, eax ; je 0xf8290 ; call rax
0x00000000000f8362 : test eax, eax ; je 0xf8468 ; call rax
0x00000000000faf82 : test eax, eax ; jl 0xfafcb ; je 0xfaf8f ; ret
0x0000000000108696 : test eax, eax ; jne 0x1086a9 ; mov eax, 1 ; ret
0x00000000001086c6 : test eax, eax ; jne 0x1086d6 ; xor eax, eax ; ret
0x00000000001086f6 : test eax, eax ; jne 0x108706 ; xor eax, eax ; ret
0x0000000000108726 : test eax, eax ; jne 0x108736 ; xor eax, eax ; ret
0x0000000000108756 : test eax, eax ; jne 0x108766 ; xor eax, eax ; ret
0x0000000000108786 : test eax, eax ; jne 0x108796 ; xor eax, eax ; ret
0x00000000001087b6 : test eax, eax ; jne 0x1087c6 ; xor eax, eax ; ret
0x00000000001087e6 : test eax, eax ; jne 0x1087f6 ; xor eax, eax ; ret
0x0000000000108816 : test eax, eax ; jne 0x108826 ; xor eax, eax ; ret
0x0000000000108846 : test eax, eax ; jne 0x108856 ; xor eax, eax ; ret
0x0000000000108876 : test eax, eax ; jne 0x108886 ; xor eax, eax ; ret
0x00000000001088a6 : test eax, eax ; jne 0x1088b6 ; xor eax, eax ; ret
0x00000000001088d6 : test eax, eax ; jne 0x1088e6 ; xor eax, eax ; ret
0x0000000000108906 : test eax, eax ; jne 0x108916 ; xor eax, eax ; ret
0x0000000000108936 : test eax, eax ; jne 0x108946 ; xor eax, eax ; ret
0x0000000000108966 : test eax, eax ; jne 0x108976 ; xor eax, eax ; ret
0x0000000000108996 : test eax, eax ; jne 0x1089a6 ; xor eax, eax ; ret
0x00000000001089c6 : test eax, eax ; jne 0x1089d6 ; xor eax, eax ; ret
0x00000000001089f6 : test eax, eax ; jne 0x108a06 ; xor eax, eax ; ret
0x0000000000108a26 : test eax, eax ; jne 0x108a36 ; xor eax, eax ; ret
0x0000000000108a56 : test eax, eax ; jne 0x108a66 ; xor eax, eax ; ret
0x0000000000108ab6 : test eax, eax ; jne 0x108ac6 ; xor eax, eax ; ret
0x0000000000108ae6 : test eax, eax ; jne 0x108af6 ; xor eax, eax ; ret
0x0000000000108b16 : test eax, eax ; jne 0x108b26 ; xor eax, eax ; ret
0x0000000000108b46 : test eax, eax ; jne 0x108b56 ; xor eax, eax ; ret
0x0000000000108b76 : test eax, eax ; jne 0x108b86 ; xor eax, eax ; ret
0x0000000000108ba6 : test eax, eax ; jne 0x108bb6 ; xor eax, eax ; ret
0x0000000000108bd6 : test eax, eax ; jne 0x108be6 ; xor eax, eax ; ret
0x0000000000108c06 : test eax, eax ; jne 0x108c16 ; xor eax, eax ; ret
0x0000000000108c36 : test eax, eax ; jne 0x108c46 ; xor eax, eax ; ret
0x0000000000108c7f : test eax, eax ; jne 0x108c7b ; pop rdx ; pop r10 ; ret
0x0000000000108d73 : test eax, eax ; jne 0x108d85 ; ret
0x000000000010907b : test eax, eax ; jne 0x109045 ; leave ; ret
0x000000000010ca0b : test eax, eax ; jne 0x10c9fd ; ret
0x000000000011cdfa : test eax, eax ; jne 0x11ce04 ; ret
0x0000000000125506 : test eax, eax ; jne 0x125514 ; ret
0x000000000012c796 : test eax, eax ; jne 0x12c7a4 ; ret
0x000000000012e13e : test eax, eax ; jne 0x12e103 ; jmp 0x12e10b
0x00000000001379a6 : test eax, eax ; jne 0x1379b6 ; xor eax, eax ; ret
0x00000000001379d6 : test eax, eax ; jne 0x1379e6 ; xor eax, eax ; ret
0x0000000000137a06 : test eax, eax ; jne 0x137a16 ; xor eax, eax ; ret
0x0000000000137a36 : test eax, eax ; jne 0x137a46 ; xor eax, eax ; ret
0x0000000000137a66 : test eax, eax ; jne 0x137a76 ; xor eax, eax ; ret
0x0000000000137a96 : test eax, eax ; jne 0x137aa6 ; xor eax, eax ; ret
0x0000000000166296 : test eax, eax ; jne 0x1662a5 ; ret
0x0000000000036ab6 : test eax, eax ; jne 0x36ac5 ; ret
0x000000000005dacf : test eax, eax ; jne 0x5dae8 ; mov rax, rbx ; pop rbx ; ret
0x000000000007d104 : test eax, eax ; jne 0x7d0fd ; ret
0x00000000000875cf : test eax, eax ; jne 0x875c6 ; xor eax, eax ; ret
0x000000000008b66f : test eax, eax ; jne 0x8b688 ; add rsp, 8 ; ret
0x000000000008c947 : test eax, eax ; jne 0x8c9a7 ; xor rax, rax ; ret
0x0000000000097ae8 : test eax, eax ; jne 0x97b66 ; xor eax, eax ; ret
0x00000000000a40f9 : test eax, eax ; jne 0xa40cd ; ret
0x00000000000a41c6 : test eax, eax ; jne 0xa41be ; xor eax, eax ; ret
0x00000000000a5589 : test eax, eax ; jne 0xa5548 ; nop dword ptr [rax] ; ret
0x00000000000f9f5f : test eax, eax ; jne 0xf9f37 ; xor eax, eax ; pop rbx ; ret
0x00000000000fa120 : test eax, eax ; jne 0xfa0f7 ; xor eax, eax ; pop rbx ; ret
0x0000000000071f6b : test eax, eax ; js 0x71f7d ; ret
0x0000000000084656 : test eax, eax ; js 0x84665 ; ret
0x00000000000d4ca6 : test eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000001004d1 : test eax, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000198025 : test ebp, ebp ; jmp qword ptr [rdx]
0x00000000000a8f5e : test ebp, ebp ; mov rbx, r15 ; setne dl ; jmp 0xa8f7e
0x000000000008c870 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000019266d : test ebp, edx ; jmp qword ptr [rdx]
0x000000000010ae36 : test ebx, ebx ; jne 0x10ae48 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000165dfb : test ebx, ebx ; jne 0x165df0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016624f : test ebx, ebx ; jne 0x166246 ; pop rbx ; ret
0x00000000000743c4 : test ebx, ebx ; jne 0x743d8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001630c2 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000001630cf : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000005a0b0 : test ebx, esp ; ret
0x000000000002d3f5 : test ecx, ecx ; je 0x2d3ff ; call rcx
0x000000000005e218 : test ecx, ecx ; je 0x5e225 ; ret
0x00000000000a40e3 : test ecx, ecx ; jne 0xa40dd ; ret
0x00000000001049c5 : test ecx, ecx ; jns 0x1049a1 ; mov eax, edx ; sub eax, r9d ; ret
0x00000000000a3b48 : test ecx, ecx ; mov dword ptr [r8 + 4], ecx ; jne 0xa3b21 ; ret
0x00000000000a2913 : test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0xa290f ; ret
0x0000000000187379 : test edi, ebx ; call qword ptr [rax]
0x0000000000112391 : test edi, edi ; jne 0x112385 ; pop rbx ; ret
0x0000000000165f8b : test edi, edi ; jne 0x165f7f ; pop rbx ; ret
0x000000000010d212 : test edi, edi ; js 0x10d229 ; mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000059430 : test edi, edi ; ret 0xffff
0x00000000001889f9 : test edi, esp ; call qword ptr [rax]
0x0000000000188229 : test edi, esp ; call rsp
0x0000000000188225 : test edi, esp ; inc dword ptr [rbp + rax*4 - 4] ; call rsp
0x00000000001880a9 : test edi, esp ; jmp qword ptr [rax]
0x00000000001791c1 : test edi, esp ; push rax ; xchg ah, bh ; call qword ptr [rax]
0x0000000000083668 : test edx, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000085343 : test edx, edi ; je 0x85356 ; pop rbx ; ret
0x00000000000f8c7f : test edx, edx ; cmovne eax, edx ; ret
0x0000000000048717 : test edx, edx ; cmovns eax, edx ; pop rbx ; ret
0x00000000000fabc3 : test edx, edx ; cmovns rax, rdx ; jmp 0xfabd2
0x0000000000121f24 : test edx, edx ; je 0x121f34 ; mov rdi, r12 ; call rdx
0x00000000001273e5 : test edx, edx ; je 0x1273f5 ; mov rdi, rbp ; call rdx
0x0000000000165b84 : test edx, edx ; je 0x165b8e ; call rdx
0x0000000000165c8d : test edx, edx ; je 0x165c9c ; call rdx
0x0000000000073e4a : test edx, edx ; je 0x73e61 ; mov eax, 0xffffffff ; ret
0x000000000007f0f3 : test edx, edx ; je 0x7f0fd ; call rdx
0x0000000000089579 : test edx, edx ; je 0x89587 ; bsf eax, edx ; ret
0x0000000000089579 : test edx, edx ; je 0x89588 ; bsf eax, edx ; ret
0x0000000000089622 : test edx, edx ; je 0x89637 ; bsf rax, rdx ; ret
0x0000000000089622 : test edx, edx ; je 0x89638 ; bsf rax, rdx ; ret
0x00000000000895c6 : test edx, edx ; je 0x89648 ; bsf rax, rdx ; ret
0x0000000000089811 : test edx, edx ; je 0x89837 ; bsf rax, rdx ; ret
0x0000000000089811 : test edx, edx ; je 0x89838 ; bsf rax, rdx ; ret
0x00000000000c1bc1 : test edx, edx ; je 0xc1bcf ; call rdx
0x0000000000108f7d : test edx, edx ; jne 0x108f75 ; leave ; ret
0x000000000012c525 : test edx, edx ; jne 0x12c515 ; pop rbx ; ret
0x0000000000074c0f : test edx, edx ; jne 0x74c05 ; ret
0x000000000007b9bf : test edx, edx ; jne 0x7b9b5 ; ret
0x0000000000087689 : test edx, edx ; jne 0x87685 ; ret
0x00000000000a55ca : test edx, edx ; jne 0xa55c5 ; ret
0x0000000000021b5b : test edx, edx ; jns 0x21a42 ; jmp 0x21b30
0x00000000000a439f : test edx, edx ; mov dword ptr [rax], edx ; jne 0xa439f ; ret
0x00000000000b0c4f : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xb0c50 ; ret
0x000000000012f5a0 : test edx, edx ; mov eax, 1 ; jne 0x12f5b9 ; ret
0x000000000012f5e0 : test edx, edx ; mov eax, 1 ; jne 0x12f5f9 ; ret
0x000000000003791a : test edx, edx ; sete al ; ret
0x00000000001630b5 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000001ae84d : test esi, ebp ; jmp qword ptr [rdx]
0x00000000001a2105 : test esi, ecx ; jmp qword ptr [rdx]
0x00000000001005a1 : test esi, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002c980 : test esi, esi ; je 0x2c94e ; pop rbx ; ret
0x000000000012f6dc : test esi, esi ; jle 0x12f71e ; call 0x12b8f6
0x000000000012f69d : test esi, esi ; jne 0x12f6b6 ; call 0x12b8f6
0x0000000000089701 : test esi, esi ; jne 0x89710 ; xor rax, rax ; ret
0x00000000000948ce : test esi, esi ; jne 0x948e1 ; jmp 0x9489b
0x000000000010caa8 : test esi, esi ; mov dword ptr [rax], esi ; jne 0x10ca9f ; ret
0x0000000000087642 : test esp, esp ; jne 0x8766d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a6782 : test esp, esp ; mov r13, r14 ; setne dl ; jmp 0xa679f
0x00000000000ab632 : test esp, esp ; mov r13, r14 ; setne dl ; jmp 0xab64f
0x00000000000377b5 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x0000000000087641 : test r12, r12 ; jne 0x8766e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a6781 : test r12d, r12d ; mov r13, r14 ; setne dl ; jmp 0xa67a0
0x00000000000ab631 : test r12d, r12d ; mov r13, r14 ; setne dl ; jmp 0xab650
0x000000000012f6db : test r14d, r14d ; jle 0x12f71f ; call 0x12b8f7
0x000000000012f69c : test r14d, r14d ; jne 0x12f6b7 ; call 0x12b8f7
0x00000000001a22f4 : test r14d, r9d ; jmp qword ptr [rdx]
0x0000000000188228 : test r15d, esp ; call rsp
0x000000000010907a : test r8, r8 ; jne 0x109046 ; leave ; ret
0x00000000000975e8 : test r8b, r8b ; jne 0x975d6 ; ret
0x00000000000976df : test r8b, r8b ; jne 0x976cf ; xor eax, eax ; ret
0x0000000000097f49 : test r8b, r8b ; jne 0x97ef3 ; mov rax, rdi ; ret
0x0000000000138df2 : test r8d, r8d ; je 0x138e00 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000139dd7 : test r8d, r8d ; je 0x139de5 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000010ca0a : test r8d, r8d ; jne 0x10c9fe ; ret
0x00000000000a40f8 : test r8d, r8d ; jne 0xa40ce ; ret
0x00000000000a5588 : test r8d, r8d ; jne 0xa5549 ; nop dword ptr [rax] ; ret
0x0000000000109157 : test rax, rax ; je 0x109166 ; ret
0x000000000010abe9 : test rax, rax ; je 0x10ac01 ; add rsp, 8 ; ret
0x00000000001120bc : test rax, rax ; je 0x1120ce ; mov rdi, rbx ; call rax
0x00000000001123a3 : test rax, rax ; je 0x1123b5 ; mov rdi, rbx ; call rax
0x000000000011f9c0 : test rax, rax ; je 0x11f9d2 ; mov rdi, rsp ; call rax
0x000000000011fa9b : test rax, rax ; je 0x11faad ; mov rdi, rsp ; call rax
0x0000000000120354 : test rax, rax ; je 0x120366 ; mov rdi, rbp ; call rax
0x00000000001213f2 : test rax, rax ; je 0x121404 ; mov rdi, r14 ; call rax
0x0000000000121670 : test rax, rax ; je 0x121682 ; mov rdi, rbx ; call rax
0x000000000012511a : test rax, rax ; je 0x12512c ; mov rdi, r12 ; call rax
0x00000000001252f8 : test rax, rax ; je 0x12530c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001275d5 : test rax, rax ; je 0x1275e7 ; mov rdi, rbp ; call rax
0x00000000001277f5 : test rax, rax ; je 0x127807 ; mov rdi, rbp ; call rax
0x000000000012831c : test rax, rax ; je 0x128330 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00000000001289db : test rax, rax ; je 0x1289ed ; mov rdi, r12 ; call rax
0x0000000000128d4c : test rax, rax ; je 0x128d60 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000012b7fc : test rax, rax ; je 0x12b80e ; pop rbx ; ret
0x000000000012b868 : test rax, rax ; je 0x12b822 ; pop rbx ; ret
0x000000000012c5a8 : test rax, rax ; je 0x12c5bc ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012ccb1 : test rax, rax ; je 0x12ccc5 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000022087 : test rax, rax ; je 0x22093 ; jmp rax
0x00000000000220b7 : test rax, rax ; je 0x220c3 ; jmp rax
0x000000000002d06d : test rax, rax ; je 0x2d079 ; call rax
0x000000000002e698 : test rax, rax ; je 0x2e6a4 ; call rax
0x00000000000793ac : test rax, rax ; je 0x793be ; pop rbx ; ret
0x0000000000084336 : test rax, rax ; je 0x84342 ; call rax
0x000000000008934f : test rax, rax ; je 0x89362 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c1a3b : test rax, rax ; je 0xc1a47 ; call rax
0x00000000000c1c48 : test rax, rax ; je 0xc1c58 ; call rax
0x00000000000f26eb : test rax, rax ; je 0xf26f8 ; ret
0x00000000000f3dc0 : test rax, rax ; je 0xf3dd1 ; mov qword ptr [rax], rdx ; ret
0x00000000000f81ea : test rax, rax ; je 0xf8291 ; call rax
0x00000000000f8361 : test rax, rax ; je 0xf8469 ; call rax
0x00000000000faf81 : test rax, rax ; jl 0xfafcc ; je 0xfaf90 ; ret
0x000000000007d103 : test rax, rax ; jne 0x7d0fe ; ret
0x00000000000875ce : test rax, rax ; jne 0x875c7 ; xor eax, eax ; ret
0x00000000000f9f5e : test rax, rax ; jne 0xf9f38 ; xor eax, eax ; pop rbx ; ret
0x00000000000fa11f : test rax, rax ; jne 0xfa0f8 ; xor eax, eax ; pop rbx ; ret
0x000000000010ae35 : test rbx, rbx ; jne 0x10ae49 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000165dfa : test rbx, rbx ; jne 0x165df1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016624e : test rbx, rbx ; jne 0x166247 ; pop rbx ; ret
0x00000000000743c3 : test rbx, rbx ; jne 0x743d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002d3f4 : test rcx, rcx ; je 0x2d400 ; call rcx
0x0000000000112390 : test rdi, rdi ; jne 0x112386 ; pop rbx ; ret
0x0000000000165f8a : test rdi, rdi ; jne 0x165f80 ; pop rbx ; ret
0x0000000000085342 : test rdx, rdi ; je 0x85357 ; pop rbx ; ret
0x0000000000121f23 : test rdx, rdx ; je 0x121f35 ; mov rdi, r12 ; call rdx
0x00000000001273e4 : test rdx, rdx ; je 0x1273f6 ; mov rdi, rbp ; call rdx
0x0000000000165b83 : test rdx, rdx ; je 0x165b8f ; call rdx
0x0000000000165c8c : test rdx, rdx ; je 0x165c9d ; call rdx
0x000000000007f0f2 : test rdx, rdx ; je 0x7f0fe ; call rdx
0x0000000000089621 : test rdx, rdx ; je 0x89638 ; bsf rax, rdx ; ret
0x0000000000089621 : test rdx, rdx ; je 0x89639 ; bsf rax, rdx ; ret
0x00000000000895c5 : test rdx, rdx ; je 0x89649 ; bsf rax, rdx ; ret
0x0000000000089810 : test rdx, rdx ; je 0x89838 ; bsf rax, rdx ; ret
0x0000000000089810 : test rdx, rdx ; je 0x89839 ; bsf rax, rdx ; ret
0x00000000000c1bc0 : test rdx, rdx ; je 0xc1bd0 ; call rdx
0x0000000000108f7c : test rdx, rdx ; jne 0x108f76 ; leave ; ret
0x000000000012c524 : test rdx, rdx ; jne 0x12c516 ; pop rbx ; ret
0x0000000000074c0e : test rdx, rdx ; jne 0x74c06 ; ret
0x000000000007b9be : test rdx, rdx ; jne 0x7b9b6 ; ret
0x0000000000087688 : test rdx, rdx ; jne 0x87686 ; ret
0x0000000000089700 : test rsi, rsi ; jne 0x89711 ; xor rax, rax ; ret
0x00000000000948cd : test rsi, rsi ; jne 0x948e2 ; jmp 0x9489c
0x000000000009773f : test sil, sil ; jne 0x97738 ; mov qword ptr [rdx], rcx ; ret
0x0000000000002b5e : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000007b2a7 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000013de11 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001005f9 : wait ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012feb7 : wait ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000001a8d7d : wait ; add dword ptr [rax], eax ; loopne 0x1a8db7 ; cmc ; jmp qword ptr [rcx]
0x00000000001a8cbd : wait ; add dword ptr [rax], eax ; shr byte ptr [rsi], 1 ; cmc ; jmp qword ptr [rcx]
0x000000000005d994 : wait ; call qword ptr [rcx]
0x00000000001a1f9c : wait ; jge 0x1a1f93 ; jmp qword ptr [rdx]
0x00000000001b053c : wait ; out dx, eax ; cmc ; jmp qword ptr [rdx]
0x000000000008b7b1 : wait ; ret
0x0000000000117da1 : wait ; ret 0x2a
0x00000000001a21dc : wait ; test esi, ecx ; jmp qword ptr [rdx]
0x00000000001b6b74 : wait ; xor al, 0xfffffffffffffff7 ; jmp qword ptr [rdx]
0x00000000000a19dd : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a1a5f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a1b61 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000002bb0 : xabort -0xd ; ret
0x0000000000002bac : xbegin 0xfffffffff8c6efac ; ret
0x0000000000188a39 : xchg ah, bh ; call qword ptr [rax + 0x10fffc87]
0x00000000001880a5 : xchg ah, bh ; call qword ptr [rax + 0x20fffc85]
0x00000000001791c5 : xchg ah, bh ; call qword ptr [rax]
0x0000000000188161 : xchg ah, bh ; call rdx
0x000000000018815d : xchg ah, bh ; inc dword ptr [rdx - 0x7a] ; cld ; call rdx
0x00000000001880e1 : xchg ah, bh ; jmp rsi
0x0000000000138bff : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000139423 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013ad6f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001387ef : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000139513 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000139333 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001382fb : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002e85b : xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000000831c2 : xchg al, ch ; xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000138b0b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013ed0c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000013e52c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000013e91c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013e13c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000ae824 : xchg bh, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x894c
0x0000000000140c3d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013f741 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000140941 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000140041 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000140341 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013fa39 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000139d7b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000013b8cf : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000fa193 : xchg byte ptr [rax + rax], ch ; ret
0x000000000013b0af : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000013857f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013a88f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00000000001388bf : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000001398d3 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000067c16 : xchg byte ptr [rax - 0x7d], cl ; ret 0xe908
0x0000000000187be0 : xchg byte ptr [rax - 4], ah ; call qword ptr [rsi]
0x0000000000138bdb : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013e2db : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000138cab : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013b3ef : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000139063 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000013abcf : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013a3af : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000198706 : xchg byte ptr [rbx + 0xd1cffed], cl ; sub al, -0x75 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000013b58f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000138a5f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000139ab3 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000139243 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000013824f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000004721f : xchg byte ptr [rcx + 1], cl ; lock cmp ecx, 0x2f ; jmp r8
0x0000000000139c93 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000012a036 : xchg byte ptr [rcx], al ; add al, ch ; ret 0xffd9
0x00000000001a788d : xchg byte ptr [rcx], al ; add al, dl ; fdivr st(4), st(0) ; jmp qword ptr [rcx]
0x000000000008329e : xchg byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000013864f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00000000000c4c11 : xchg byte ptr [rdi - 0xa000000], bh ; ret
0x000000000013e7cc : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013dfec : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013f0fc : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000138b2f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000139ba3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013831f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000013a6ef : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001383c1 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001394e5 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001395d5 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001393f5 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013871f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000072796 : xchg byte ptr [rsi - 0x3d770000], dl ; jmp 0x72758
0x000000000013fce6 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a825 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013b525 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000140be6 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001402e6 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013ffe6 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000013b045 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013e6cd : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013f9de : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013effd : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013898f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000139153 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x0000000000198175 : xchg ch, ch ; jmp qword ptr [rdx]
0x000000000013d07f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013ce9f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013d877 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013c797 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013d697 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000095ee4 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x894c
0x00000000001790dd : xchg cl, dh ; jmp qword ptr [rax]
0x000000000013b865 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013ab65 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000013a685 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013b385 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000013e81d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000002591 : xchg dh, ch ; ret 0x88ad
0x000000000013e03d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001383e5 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000139305 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000139125 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000139215 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000139035 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00000000001a3719 : xchg dl, dh ; jmp qword ptr [rax]
0x00000000001a3731 : xchg dl, dh ; jmp qword ptr [rcx]
0x00000000000b8e16 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000f9fd3 : xchg dword ptr [rax + rax], ebp ; ret
0x00000000000dd48b : xchg dword ptr [rax - 0x76fffff4], esi ; ret 0x8d48
0x000000000006798f : xchg dword ptr [rax - 0x7cfffffe], esi ; ret 0x8308
0x0000000000191076 : xchg dword ptr [rax], ebp ; ljmp 0x4a0d1cff, -0x15d9 ; jmp qword ptr [rdx]
0x0000000000023af4 : xchg dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x00000000000a40f7 : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], -0xd ; ret
0x000000000002da27 : xchg dword ptr [rbp - 0x7c000004], esi ; ret 0x8901
0x00000000000da432 : xchg dword ptr [rbx + rbp*8 + 0x39], edi ; ret 0xc189
0x0000000000068e6d : xchg dword ptr [rbx - 0x76ffffcb], esp ; ret 0x348
0x000000000005c84e : xchg dword ptr [rbx - 0x77000000], esi ; ret 0x348
0x000000000017482c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000000e5901 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000005c530 : xchg dword ptr [rcx - 0x77000000], esi ; ret 0x348
0x0000000000082568 : xchg dword ptr [rcx - 0x9fffffb], edi ; ret
0x00000000001a7905 : xchg dword ptr [rcx], eax ; add byte ptr [rax - 0x23], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a78d5 : xchg dword ptr [rcx], eax ; add byte ptr [rax - 0x23], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a78d4 : xchg dword ptr [rcx], r8d ; add byte ptr [rax - 0x23], cl ; hlt ; jmp qword ptr [rcx]
0x0000000000065f35 : xchg dword ptr [rdi - 0x7cfffff4], ebx ; ret 0x8308
0x0000000000108c7d : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x108c7d ; pop rdx ; pop r10 ; ret
0x00000000000faa84 : xchg dword ptr [rdi], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001875b0 : xchg dword ptr [rdx - 0x44ee0003], edi ; std ; call qword ptr [rcx]
0x000000000005a24b : xchg dword ptr [rsi - 0x76fffffe], ebp ; ret 0x348
0x00000000001749cb : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000013c3d8 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x00000000001937bc : xchg eax, ebp ; adc ebp, ebx ; jmp qword ptr [rdx]
0x0000000000027229 : xchg eax, ebp ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x00000000000be523 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000060565 : xchg eax, ebp ; add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x000000000018937d : xchg eax, ebp ; add byte ptr [rax], al ; and al, 5 ; jmp 0x189389
0x00000000001a86fd : xchg eax, ebp ; add dword ptr [rax], eax ; shl byte ptr [rdi], -0xb ; jmp qword ptr [rcx]
0x00000000001a86e5 : xchg eax, ebp ; add dword ptr [rax], eax ; test al, 0x27 ; cmc ; jmp qword ptr [rcx]
0x0000000000188a61 : xchg eax, ebp ; cld ; call qword ptr [rax + 0x10fffc96]
0x00000000001791f1 : xchg eax, ebp ; cld ; push qword ptr [rax - 0x6a] ; cld ; jmp rax
0x00000000000f5ef4 : xchg eax, ebp ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000017a395 : xchg eax, ebp ; hlt ; call rdx
0x000000000017a391 : xchg eax, ebp ; hlt ; dec eax ; xchg eax, ebp ; hlt ; call rdx
0x0000000000177703 : xchg eax, ebp ; in al, dx ; lock ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, -0x55 ; ret
0x0000000000187530 : xchg eax, ebp ; mov eax, 0xbb11fffd ; std ; call qword ptr [rcx]
0x00000000000020c3 : xchg eax, ebp ; ret
0x00000000000e0760 : xchg eax, ebp ; ret 0x2041
0x000000000003e71f : xchg eax, ebp ; ret 0x2948
0x00000000000aa827 : xchg eax, ebp ; ret 0x294c
0x00000000000b23f1 : xchg eax, ebp ; ret 0x3145
0x00000000000cc3be : xchg eax, ebp ; ret 0x460f
0x000000000006e1e9 : xchg eax, ebp ; ret 0x5389
0x00000000000960e3 : xchg eax, ebp ; ret 0x5474
0x0000000000129840 : xchg eax, ebp ; ret 0x548d
0x0000000000077a13 : xchg eax, ebp ; ret 0x60e9
0x00000000000201c6 : xchg eax, ebp ; ret 0x8341
0x0000000000048fc5 : xchg eax, ebp ; ret 0x8348
0x00000000000d46c1 : xchg eax, ebp ; ret 0x840f
0x000000000007e0c7 : xchg eax, ebp ; ret 0x8441
0x0000000000079574 : xchg eax, ebp ; ret 0x8445
0x0000000000048fce : xchg eax, ebp ; ret 0x854d
0x00000000000c801d : xchg eax, ebp ; ret 0x8944
0x00000000000cfec8 : xchg eax, ebp ; ret 0x8d47
0x000000000008221e : xchg eax, ebp ; ret 0x948
0x0000000000032265 : xchg eax, ebp ; ret 0x953d
0x0000000000032c7c : xchg eax, ebp ; ret 0x9be9
0x000000000003e1a5 : xchg eax, ebp ; ret 0xb60f
0x0000000000048ea9 : xchg eax, ebp ; ret 0xc031
0x00000000000dbb22 : xchg eax, ebp ; ret 0xc209
0x00000000000b008c : xchg eax, ebp ; ret 0xc7e9
0x000000000011330a : xchg eax, ebp ; ret 0xc985
0x00000000000a6788 : xchg eax, ebp ; ret 0xceb
0x00000000000fad9c : xchg eax, ebp ; ret 0xcfeb
0x00000000001227c4 : xchg eax, ebp ; ret 0xd089
0x000000000011323b : xchg eax, ebp ; ret 0xd120
0x00000000000b1754 : xchg eax, ebp ; ret 0xd138
0x000000000003291c : xchg eax, ebp ; ret 0xd284
0x000000000003e36f : xchg eax, ebp ; ret 0xd349
0x000000000006e9d7 : xchg eax, ebp ; ret 0xdaf7
0x000000000003e2b4 : xchg eax, ebp ; ret 0xe083
0x00000000000e3924 : xchg eax, ebp ; ret 0xe2c1
0x00000000000b243b : xchg eax, ebp ; ret 0xf749
0x00000000000a5083 : xchg eax, ebp ; ret 0xf883
0x00000000000a8f64 : xchg eax, ebp ; ret 0xfeb
0x0000000000048e78 : xchg eax, ebp ; ret 0xff31
0x00000000001235dc : xchg eax, ebp ; ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x000000000005e0fa : xchg eax, ebp ; ror byte ptr [rdi], -0x4a ; sal bh, -0x28 ; pop rbx ; ret
0x00000000000cc39e : xchg eax, ebp ; ror byte ptr [rdi], -0x4a ; sal bh, -0x28 ; ret
0x00000000000f2dbc : xchg eax, ebp ; sal bh, -0x28 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a294 : xchg eax, ebp ; sal bh, -0x28 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000132e2f : xchg eax, ebp ; sti ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001a2194 : xchg eax, ebp ; test esi, ecx ; jmp qword ptr [rdx]
0x0000000000002b5d : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x00000000000f4897 : xchg eax, ebp ; xor bh, cl ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000007e4bb : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000001a8495 : xchg eax, ebx ; add dword ptr [rax], eax ; cmp byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x0000000000160bc0 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000003905 : xchg eax, ebx ; and cl, ah ; ret
0x0000000000188a1d : xchg eax, ebx ; cld ; call qword ptr [rax + 0x10fffc94]
0x0000000000188a5d : xchg eax, ebx ; cld ; call qword ptr [rax]
0x000000000019b80c : xchg eax, ebx ; cli ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001af2a5 : xchg eax, ebx ; cmc ; jmp qword ptr [rdx]
0x0000000000194dd9 : xchg eax, ebx ; in al, dx ; jmp qword ptr [rcx]
0x000000000010b069 : xchg eax, ebx ; int1 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000009d82c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000143862 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000075494 : xchg eax, ebx ; ret 0x3948
0x000000000003a36f : xchg eax, ebx ; ret 0x3949
0x000000000003a657 : xchg eax, ebx ; ret 0x8348
0x00000000000499a0 : xchg eax, ebx ; ret 0x841
0x00000000000e4060 : xchg eax, ebx ; ret 0x944
0x0000000000063a40 : xchg eax, ebx ; ret 0xffff
0x000000000018739d : xchg eax, ebx ; sti ; call qword ptr [rax + 0x10fffb94]
0x000000000012232e : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x000000000007af2f : xchg eax, ecx ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000006ddd6 : xchg eax, ecx ; add rcx, rdx ; jmp rcx
0x0000000000188a19 : xchg eax, ecx ; cld ; call qword ptr [rax]
0x0000000000195e41 : xchg eax, ecx ; in eax, dx ; call qword ptr [rax]
0x0000000000195dc9 : xchg eax, ecx ; in eax, dx ; jmp qword ptr [rax]
0x0000000000070cd3 : xchg eax, ecx ; loope 0x70d10 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000013b971 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000021bfe : xchg eax, ecx ; push -0xcfffff7 ; ret
0x00000000000f08db : xchg eax, ecx ; ret
0x0000000000187399 : xchg eax, ecx ; sti ; call qword ptr [rax]
0x0000000000087290 : xchg eax, ecx ; str word ptr [rax - 0x77] ; ret 0xff31
0x000000000013a09f : xchg eax, ecx ; sub eax, edx ; ret
0x00000000000e75f0 : xchg eax, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x4c6
0x000000000005fecb : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x111743], al ; call qword ptr [rax]
0x00000000000601df : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x116b43], al ; call qword ptr [rax]
0x00000000001893d5 : xchg eax, edi ; add byte ptr [rax], al ; and al, 0x13 ; jmp 0x1893e1
0x000000000007262b : xchg eax, edi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x725f5
0x000000000007262a : xchg eax, edi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x725f6
0x00000000000e59cc : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000005da95 : xchg eax, edi ; add byte ptr ss:[rbx + 0x5d], bl ; ret
0x0000000000084a0d : xchg eax, edi ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000001a898d : xchg eax, edi ; add dword ptr [rax], eax ; loopne 0x1a89c2 ; cmc ; jmp qword ptr [rcx]
0x000000000018b8f5 : xchg eax, edi ; add dword ptr [rax], eax ; xor al, 0x72 ; jmp rsp
0x00000000000b57fe : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x0000000000188a29 : xchg eax, edi ; cld ; call qword ptr [rax]
0x00000000001ab111 : xchg eax, edi ; cmc ; call rsp
0x00000000000f5d2b : xchg eax, edi ; dec dword ptr [rax - 0x75] ; jge 0xf5d39 ; call rbx
0x00000000000f5d2a : xchg eax, edi ; dec dword ptr [rax - 0x75] ; jge 0xf5d3a ; call rbx
0x00000000000f5c8a : xchg eax, edi ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000f5d1d : xchg eax, edi ; dec dword ptr [rcx - 0x75] ; jge 0xf5d2b ; call rbx
0x000000000017a309 : xchg eax, edi ; hlt ; jmp rbx
0x00000000001a1604 : xchg eax, edi ; jae 0x1a15fb ; jmp qword ptr [rdx]
0x000000000019ba4c : xchg eax, edi ; or esi, ebp ; jmp qword ptr [rdx]
0x0000000000083a45 : xchg eax, edi ; out -1, al ; dec dword ptr [rax - 0x77] ; ret 0x3d83
0x000000000019c4fc : xchg eax, edi ; out dx, al ; jmp qword ptr [rdx]
0x0000000000166185 : xchg eax, edi ; ret 0x25
0x00000000000fd736 : xchg eax, edi ; ror byte ptr [rdi], -0x4a ; sal bh, -0x28 ; ret
0x00000000000ee079 : xchg eax, edi ; ror byte ptr [rdi], -0x4a ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000c2f0e : xchg eax, edi ; ror byte ptr [rdi], -0x6e ; ret 0xd029
0x00000000000f0ee4 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x00000000000d3a48 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xd138
0x0000000000174e78 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000072a86 : xchg eax, edx ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x72a4c
0x000000000019841d : xchg eax, edx ; add byte ptr [rax], al ; or byte ptr [rdx - 0x18], bh ; call rdx
0x000000000004b97d : xchg eax, edx ; add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x850f
0x0000000000188a59 : xchg eax, edx ; cld ; call qword ptr [rax + 0x10fffc93]
0x0000000000039a3a : xchg eax, edx ; idiv edi ; dec ecx ; ret
0x00000000000c55ac : xchg eax, edx ; idiv edi ; push rsi ; ret
0x0000000000195e89 : xchg eax, edx ; in eax, dx ; jmp rsp
0x0000000000106225 : xchg eax, edx ; int1 ; dec dword ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x000000000017673d : xchg eax, edx ; jae 0x17671a ; push rsi ; pop rdx ; je 0x17670f ; ret 0xacfc
0x00000000001a1d9c : xchg eax, edx ; jge 0x1a1d93 ; jmp qword ptr [rdx]
0x000000000019427d : xchg eax, edx ; jmp 0x194281
0x00000000001942c5 : xchg eax, edx ; jmp 0x1942c9
0x0000000000196244 : xchg eax, edx ; jo 0x196237 ; jmp qword ptr [rdx]
0x00000000001b013c : xchg eax, edx ; loopne 0x1b0137 ; jmp qword ptr [rdx]
0x0000000000192e44 : xchg eax, edx ; mov edx, ebp ; jmp qword ptr [rdx]
0x0000000000187e50 : xchg eax, edx ; pop rax ; cld ; call qword ptr [rdx]
0x0000000000187e48 : xchg eax, edx ; pop rcx ; cld ; call qword ptr [rdx]
0x0000000000187c68 : xchg eax, edx ; pop rdi ; cld ; jmp qword ptr [rdx]
0x0000000000187e40 : xchg eax, edx ; pop rdx ; cld ; call qword ptr [rdx]
0x0000000000187e58 : xchg eax, edx ; push rdi ; cld ; call qword ptr [rdx]
0x000000000012017a : xchg eax, edx ; ret 0
0x00000000000af3c6 : xchg eax, edx ; ret 0x8941
0x00000000000ee05e : xchg eax, edx ; ret 0x970f
0x00000000000f0ee7 : xchg eax, edx ; ret 0xcc80
0x00000000000c2f11 : xchg eax, edx ; ret 0xd029
0x00000000000d3a4b : xchg eax, edx ; ret 0xd138
0x000000000017482f : xchg eax, edx ; ret 0xf869
0x000000000013d9ed : xchg eax, edx ; ror byte ptr [rdi], -0x6c ; ret 0xc085
0x000000000018864c : xchg eax, edx ; scasb al, byte ptr [rdi] ; cld ; jmp qword ptr [rdx]
0x0000000000138df7 : xchg eax, edx ; sub eax, edx ; ret
0x0000000000188154 : xchg eax, edx ; xchg esp, edi ; jmp qword ptr [rdx]
0x000000000005eabd : xchg eax, esi ; adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x0000000000160ec0 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018939d : xchg eax, esi ; add byte ptr [rax], al ; adc al, 0xc ; jmp 0x1893a9
0x0000000000058b77 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014cfa3 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000072797 : xchg eax, esi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x72757
0x000000000000258e : xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000001a8845 : xchg eax, esi ; add dword ptr [rax], eax ; call 0x111a7d7b
0x000000000018b90d : xchg eax, esi ; add dword ptr [rax], eax ; cwde ; je 0x18b90c ; call rsp
0x00000000001a87e5 : xchg eax, esi ; add dword ptr [rax], eax ; cwde ; sub ch, dh ; jmp qword ptr [rcx]
0x00000000001a87fd : xchg eax, esi ; add dword ptr [rax], eax ; mov al, 0x28 ; cmc ; jmp qword ptr [rcx]
0x00000000001a87cd : xchg eax, esi ; add dword ptr [rax], eax ; sub byte ptr [rax], -0xb ; jmp qword ptr [rcx]
0x0000000000045e96 : xchg eax, esi ; call qword ptr [rbx]
0x0000000000188a25 : xchg eax, esi ; cld ; call qword ptr [rax + 0x10fffc97]
0x0000000000188a65 : xchg eax, esi ; cld ; call qword ptr [rax]
0x00000000001791f5 : xchg eax, esi ; cld ; jmp rax
0x00000000001ab95c : xchg eax, esi ; cmc ; jmp qword ptr [rdx]
0x00000000000f5dcd : xchg eax, esi ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000f5e60 : xchg eax, esi ; dec dword ptr [rcx - 0x75] ; jge 0xf5e6e ; call rbx
0x000000000017a339 : xchg eax, esi ; hlt ; call rbx
0x000000000017a335 : xchg eax, esi ; hlt ; dec ecx ; xchg eax, esi ; hlt ; call rbx
0x000000000017a3b9 : xchg eax, esi ; hlt ; jmp qword ptr [rdx]
0x000000000017a341 : xchg eax, esi ; hlt ; jmp rdi
0x000000000017a3b5 : xchg eax, esi ; hlt ; lcall ptr [rax] ; xchg eax, esi ; hlt ; jmp qword ptr [rdx]
0x000000000018b1e1 : xchg eax, esi ; int1 ; call rsp
0x000000000018f74e : xchg eax, esi ; jmp 0x7926145d
0x00000000000a51a6 : xchg eax, esi ; jnp 0xa51e0 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000160f7d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000187590 : xchg eax, esi ; mov ecx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x0000000000160edb : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000c6c44 : xchg eax, esi ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000011198f : xchg eax, esi ; ret
0x000000000008922c : xchg eax, esi ; ret 0x144
0x0000000000166166 : xchg eax, esi ; ret 0x25
0x000000000010a7ec : xchg eax, esi ; ret 0x394c
0x000000000007e0c0 : xchg eax, esi ; ret 0x8348
0x00000000001770cc : xchg eax, esi ; ret 0xcd11
0x0000000000160f2c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000bab68 : xchg eax, esi ; ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x0000000000096498 : xchg eax, esi ; stc ; dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000001885e8 : xchg eax, esi ; stosd dword ptr [rdi], eax ; cld ; jmp qword ptr [rsi]
0x000000000018d5f4 : xchg eax, esp ; add al, byte ptr ds:[rax] ; xchg eax, esp ; sub edi, eax ; jmp rsp
0x00000000000a3fd8 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; lock ; ret
0x00000000000e2a6f : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x000000000018acbc : xchg eax, esp ; add dword ptr [r8], r8d ; xchg eax, esp ; fucomi st(7) ; jmp rsp
0x00000000000f3620 : xchg eax, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000008bccf : xchg eax, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001a5724 : xchg eax, esp ; add dword ptr gs:[rax], eax ; cmp byte ptr [rsi], al ; hlt ; jmp rdx
0x000000000018d704 : xchg eax, esp ; add r8b, byte ptr [rax] ; adc al, 0x3f ; clc ; jmp rsp
0x00000000000aad1c : xchg eax, esp ; and al, 0x74 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x0000000000045b65 : xchg eax, esp ; and al, 0xffffffffffffff84 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x00000000000e2a6d : xchg eax, esp ; and al, 0xffffffffffffff94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000272f6 : xchg eax, esp ; and al, 0xffffffffffffffb0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000003ff77 : xchg eax, esp ; and al, 0xffffffffffffffb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000074858 : xchg eax, esp ; and al, 0xfffffffffffffff0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000018a6f4 : xchg eax, esp ; and al, byte ptr [rcx] ; add byte ptr [rsi + rsi], al ; out dx, eax ; call rsp
0x00000000001a1724 : xchg eax, esp ; and eax, 0xc6b80001 ; int1 ; call qword ptr [rbx]
0x0000000000019500 : xchg eax, esp ; call qword ptr [rdi]
0x0000000000188a21 : xchg eax, esp ; cld ; call qword ptr [rax]
0x00000000001af335 : xchg eax, esp ; cmc ; jmp qword ptr [rdx]
0x00000000000f5fde : xchg eax, esp ; dec dword ptr [rax - 0x75] ; jge 0xf5fec ; call rbx
0x00000000000f5fc3 : xchg eax, esp ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000f5fec : xchg eax, esp ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000000f5fd0 : xchg eax, esp ; dec dword ptr [rcx - 0x75] ; jge 0xf5fde ; call rbx
0x000000000018acc0 : xchg eax, esp ; fucomi st(7) ; jmp rsp
0x0000000000189ed4 : xchg eax, esp ; in eax, 0 ; add byte ptr [rdx + rcx*4], al ; out dx, al ; call rsp
0x0000000000196531 : xchg eax, esp ; in eax, dx ; jmp rsi
0x00000000001a6a24 : xchg eax, esp ; js 0x1a6a2f ; add al, cl ; scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a9124 : xchg eax, esp ; lahf ; add dword ptr [rax], eax ; cwde ; cmp ch, dh ; jmp qword ptr [rcx]
0x000000000019e224 : xchg eax, esp ; lock add byte ptr [rax], al ; mov byte ptr [rbp - 0x11], al ; jmp qword ptr [rsi]
0x00000000001ad324 : xchg eax, esp ; loope 0x1ad32f ; add byte ptr [rax], bl ; sti ; cmc ; call qword ptr [rax]
0x00000000000c1b58 : xchg eax, esp ; mov eax, 0x8948fffb ; ret
0x000000000018be4c : xchg eax, esp ; mov ecx, 0xd7340001 ; hlt ; jmp rsp
0x0000000000109a5b : xchg eax, esp ; nop dword ptr [rax] ; mov rax, rdi ; pop rbx ; ret
0x00000000001ae434 : xchg eax, esp ; out dx, al ; add dword ptr [rax], eax ; ret 0xf619
0x000000000019d549 : xchg eax, esp ; out dx, al ; call qword ptr [rdx]
0x000000000018ef28 : xchg eax, esp ; push rdx ; sti ; call rsp
0x00000000001772df : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x177270 ; ret 0x48f
0x000000000001f4c3 : xchg eax, esp ; ret
0x000000000008040a : xchg eax, esp ; ret 0x1589
0x00000000000a81ca : xchg eax, esp ; ret 0x294c
0x00000000000b25dd : xchg eax, esp ; ret 0x2b3c
0x00000000000cf717 : xchg eax, esp ; ret 0x38b
0x00000000000e03f1 : xchg eax, esp ; ret 0x3d
0x000000000012a261 : xchg eax, esp ; ret 0x3d83
0x00000000000e7df5 : xchg eax, esp ; ret 0x403c
0x00000000000c656f : xchg eax, esp ; ret 0x45e9
0x00000000000344a3 : xchg eax, esp ; ret 0x70e9
0x00000000000ef6c2 : xchg eax, esp ; ret 0x7c83
0x0000000000047b13 : xchg eax, esp ; ret 0x8341
0x00000000000c4a55 : xchg eax, esp ; ret 0x8548
0x00000000000b191e : xchg eax, esp ; ret 0x8840
0x00000000000cd2b3 : xchg eax, esp ; ret 0x8944
0x00000000000b27a6 : xchg eax, esp ; ret 0x894c
0x000000000010480d : xchg eax, esp ; ret 0x89eb
0x00000000000cdd88 : xchg eax, esp ; ret 0x8b48
0x0000000000021e07 : xchg eax, esp ; ret 0x8d48
0x00000000000b19fe : xchg eax, esp ; ret 0x943a
0x0000000000029546 : xchg eax, esp ; ret 0xb60f
0x00000000000d7057 : xchg eax, esp ; ret 0xc030
0x0000000000021f01 : xchg eax, esp ; ret 0xc031
0x000000000013d9f0 : xchg eax, esp ; ret 0xc085
0x000000000005a6eb : xchg eax, esp ; ret 0xd189
0x000000000004a560 : xchg eax, esp ; ret 0xd284
0x00000000000ce019 : xchg eax, esp ; ret 0xd5e9
0x00000000000711ec : xchg eax, esp ; ret 0xdaf7
0x000000000012ffbe : xchg eax, esp ; ret 0xea83
0x000000000008068b : xchg eax, esp ; ret 0xee9
0x00000000000a6c8d : xchg eax, esp ; ret 0xf983
0x00000000000d17e7 : xchg eax, esp ; ret 0xfd83
0x00000000000cf9f2 : xchg eax, esp ; ret 0xff83
0x00000000000a47cc : xchg eax, esp ; rol bl, -0x70 ; mov eax, 1 ; ret
0x000000000018bedc : xchg eax, esp ; rol byte ptr [rcx], 0 ; add al, 0x2a ; cmc ; jmp rsp
0x00000000000b7c9e : xchg eax, esp ; ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000eda7f : xchg eax, esp ; ror byte ptr [rax - 0x7d], -0x3c ; movzx rax, al ; ret
0x0000000000046553 : xchg eax, esp ; ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x000000000012f486 : xchg eax, esp ; ror byte ptr [rax - 0x7d], -0x3c ; sbb byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x00000000001a0a24 : xchg eax, esp ; sbb byte ptr [rcx], al ; add byte ptr [rax + 0x15], bh ; int1 ; jmp qword ptr [rcx]
0x000000000004d5e0 : xchg eax, esp ; shr eax, -0x67 ; ret 0xffff
0x00000000001873a1 : xchg eax, esp ; sti ; call qword ptr [rax]
0x000000000018d5f8 : xchg eax, esp ; sub edi, eax ; jmp rsp
0x000000000018cb10 : xchg eax, esp ; sub esi, edi ; call rsp
0x000000000018939c : xchg eax, esp ; xchg eax, esi ; add byte ptr [rax], al ; adc al, 0xc ; jmp 0x1893aa
0x00000000001ac924 : xchg eax, esp ; xlatb ; add dword ptr [rax], eax ; fsubr st(2) ; cmc ; jmp qword ptr [rax]
0x000000000018df00 : xchg eax, esp ; xor edi, ecx ; jmp rsp
0x0000000000096497 : xchg eax, r14d ; stc ; dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000594ee : xchg ebp, eax ; add eax, 0x83480000 ; ret
0x00000000001982bd : xchg ebp, ebp ; jmp qword ptr [rdx]
0x0000000000122898 : xchg ebp, edi ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000005351e : xchg ebp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001ae98d : xchg ebp, esi ; jmp qword ptr [rdx]
0x00000000001aa874 : xchg ebx, ebp ; hlt ; jmp qword ptr [rdx]
0x000000000018737d : xchg ebx, edi ; call qword ptr [rax + 0x10fffb88]
0x00000000001a2445 : xchg ecx, esi ; jmp qword ptr [rdx]
0x00000000000fa4ec : xchg edi, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000018d049 : xchg edi, esi ; jmp rsp
0x00000000000abeb9 : xchg edi, esp ; idiv edi ; dec dword ptr [rcx - 0x7d] ; ret 0x4104
0x00000000001926fd : xchg edx, ebp ; jmp qword ptr [rdx]
0x00000000001a37c1 : xchg edx, esi ; jmp qword ptr [rcx]
0x00000000000ad982 : xchg esi, esi ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000001b03e1 : xchg esi, esi ; jmp qword ptr [rdi]
0x00000000000d4e42 : xchg esp, ecx ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x8d01
0x00000000001889fd : xchg esp, edi ; call qword ptr [rax + 0x10fffc88]
0x0000000000188a3d : xchg esp, edi ; call qword ptr [rax]
0x0000000000188155 : xchg esp, edi ; jmp qword ptr [rdx]
0x0000000000188099 : xchg esp, edi ; jmp rax
0x0000000000122897 : xchg r13d, r15d ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000008728f : xchg rax, r9 ; str word ptr [rax - 0x77] ; ret 0xff31
0x0000000000188160 : xchg spl, dil ; call rdx
0x000000000000ec81 : xlatb ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000019c90d : xlatb ; add byte ptr [rax], al ; jo 0x19c947 ; out dx, al ; call qword ptr [rsi]
0x0000000000171d69 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000001ac925 : xlatb ; add dword ptr [rax], eax ; fsubr st(2) ; cmc ; jmp qword ptr [rax]
0x0000000000143729 : xlatb ; add r9, r11 ; jmp r9
0x0000000000021a9e : xlatb ; cmp dword ptr [rax], eax ; pop r12 ; ret
0x000000000018be51 : xlatb ; hlt ; jmp rsp
0x000000000019a595 : xlatb ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001951dc : xlatb ; jbe 0x1951ce ; jmp qword ptr [rdx]
0x000000000004967b : xlatb ; jbe 0x49679 ; nop ; mov rax, rsi ; pop rbx ; ret
0x0000000000085344 : xlatb ; je 0x85355 ; pop rbx ; ret
0x000000000018f706 : xlatb ; jmp 0xffffffff8a261415
0x0000000000108d89 : xlatb ; jmp rax
0x000000000011888c : xlatb ; jne 0x118868 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000000f8f06 : xlatb ; jne 0xf8eff ; mov rax, qword ptr [rax + 8] ; ret
0x00000000001758a3 : xlatb ; jo 0x17591f ; mov ebp, 0xfb67d10d ; ret
0x0000000000049942 : xlatb ; mov byte ptr [rsi], al ; jne 0x49928 ; mov rax, rsi ; ret
0x00000000001aef9c : xlatb ; mov ch, dh ; jmp qword ptr [rdx]
0x0000000000118b86 : xlatb ; mov qword ptr [r9], rdi ; ret
0x000000000007ea4f : xlatb ; neg rdi ; call qword ptr [rax]
0x00000000001ad066 : xlatb ; push 0xd1cfff5 ; sbb al, 0x68 ; cmc ; jmp qword ptr [rdx]
0x0000000000087a19 : xlatb ; ret
0x000000000008959f : xlatb ; ret 0x4166
0x0000000000176d46 : xlatb ; ret 0x4e27
0x0000000000003230 : xlatb ; ret 0x5a51
0x000000000008b407 : xlatb ; ret 0x94c
0x000000000008c76f : xlatb ; ret 0xc085
0x0000000000087a10 : xlatb ; ret 0xc148
0x0000000000097c4b : xlatb ; ret 0xf188
0x00000000000944b1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000097ae6 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000009dc9e : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000163076 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000097a44 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], -8 ; ret
0x0000000000088ee6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000088da6 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000088c66 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000088b26 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000000889e6 : xlatb ; sal bh, 1 ; ret 0xf800
0x00000000000888a6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000088766 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000088626 : xlatb ; sal bh, 1 ; ret 0xff00
0x00000000000884e6 : xlatb ; sal bh, 1 ; ret 0xff80
0x00000000000883a6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000088266 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000088126 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000087fe6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000087ea6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000087d66 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000163072 : xlatb ; shl byte ptr [rsi + 0xf], -0x29 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000008b3a5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008b3b6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000018f0d9 : xlatb ; std ; jmp rsp
0x00000000000f3168 : xlatb ; sub al, 0 ; mov rdx, rax ; jmp 0xf3104
0x00000000001a27ac : xlatb ; xchg ecx, esi ; jmp qword ptr [rdx]
0x00000000000815fb : xlatb ; xor eax, dword ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x0000000000037598 : xlatb ; xor eax, eax ; ret
0x00000000000c56f0 : xor ah, 0xff ; push rsi ; ret
0x000000000009d498 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000009d42e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x0000000000187a5d : xor ah, bh ; inc dword ptr [rax + 0x32] ; cld ; call qword ptr [rax]
0x0000000000187a7d : xor ah, bh ; inc dword ptr [rax] ; xor bh, ah ; call rax
0x00000000001873d8 : xor ah, byte ptr [rbp - 0x59cd0003] ; std ; call rax
0x00000000000025c0 : xor ah, byte ptr [rsi] ; sahf ; jl 0x2559 ; loop 0x25a4 ; ret 0x23cb
0x00000000001b0e90 : xor al, 0 ; add byte ptr [rax], al ; add al, 0x1d ; add al, byte ptr [rax] ; ret 0xfff6
0x000000000007d4b9 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007decd : xor al, 0 ; add dword ptr [rbx - 0xd], ebx ; ret
0x000000000007d454 : xor al, 0 ; add dword ptr [rip + 0x344567], 1 ; ret
0x000000000007b505 : xor al, 0 ; jne 0x7d4e4 ; ret
0x000000000007d490 : xor al, 0 ; jne 0x7d70d ; ret
0x000000000007e9c4 : xor al, 0 ; jne 0x85503 ; ret
0x000000000007d3d5 : xor al, 0 ; ret
0x000000000007ea6e : xor al, 0 ; xor edi, edi ; mov qword ptr [rsp + 8], rcx ; call qword ptr [rax]
0x000000000007ea1d : xor al, 0 ; xor edi, edi ; mov r14, rdx ; call qword ptr [rax]
0x00000000001a09c4 : xor al, 0x18 ; add dword ptr [rax], eax ; pop rax ; adc al, -0xf ; jmp qword ptr [rax]
0x0000000000083445 : xor al, 0x18 ; pop rbx ; ret
0x000000000017482a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000008394c : xor al, 0x24 ; jmp rax
0x00000000000948cb : xor al, 0x24 ; test rsi, rsi ; jne 0x948e4 ; jmp 0x9489e
0x00000000000c28c4 : xor al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; mov eax, esi ; ret
0x00000000000ff714 : xor al, 0x2c ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000031c4c : xor al, 0x39 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000002041 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000d825b : xor al, 0x39 ; ror byte ptr [rdi], 1 ; ret 0x538b
0x000000000018e788 : xor al, 0x3d ; cli ; call rsp
0x0000000000097b6b : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x0000000000189a38 : xor al, 0x4d ; in eax, dx ; jmp rsp
0x000000000010d0d8 : xor al, 0x67 ; sub eax, dword ptr [rax] ; add rsp, 0x28 ; jmp rax
0x0000000000195dc4 : xor al, 0x6c ; add byte ptr [rax], al ; test al, -0x6f ; in eax, dx ; jmp qword ptr [rax]
0x00000000001b5ec4 : xor al, 0x6d ; add al, byte ptr [rax] ; cmp byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x00000000001a62c4 : xor al, 0x71 ; add dword ptr [rax], eax ; jns 0x1a62c6 ; jmp qword ptr [rcx]
0x000000000018b8f8 : xor al, 0x72 ; jmp rsp
0x000000000018c160 : xor al, 0xfffffff6 ; jmp rsp
0x00000000000a26d1 : xor al, 0xffffffffffffff81 ; add rcx, rsi ; jmp rcx
0x00000000000a2691 : xor al, 0xffffffffffffff82 ; add rdx, rsi ; jmp rdx
0x0000000000020bf2 : xor al, 0xffffffffffffff89 ; inc dword ptr [rdi + 4] ; ret
0x00000000001a8ac4 : xor al, 0xffffffffffffff99 ; add dword ptr [rax], eax ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001a8dc4 : xor al, 0xffffffffffffff9c ; add dword ptr [rax], eax ; pop rax ; xor ch, dh ; jmp qword ptr [rcx]
0x0000000000128368 : xor al, 0xffffffffffffffb0 ; add rax, rsi ; jmp rax
0x000000000002e18e : xor al, 0xffffffffffffffb2 ; add r14, r10 ; jmp r14
0x00000000001ab5c4 : xor al, 0xffffffffffffffc4 ; add dword ptr [rax], eax ; or ah, al ; clc ; jmp qword ptr [rsi]
0x00000000001abbc4 : xor al, 0xffffffffffffffca ; add dword ptr [rax], eax ; sbb dl, bl ; cmc ; call qword ptr [rax]
0x000000000018be50 : xor al, 0xffffffffffffffd7 ; hlt ; jmp rsp
0x0000000000175a0a : xor al, 0xffffffffffffffd8 ; ret
0x000000000018f178 : xor al, 0xffffffffffffffe1 ; std ; jmp rsp
0x000000000018c161 : xor al, 0xfffffffffffffff6 ; jmp rsp
0x00000000001b6acd : xor al, 0xfffffffffffffff7 ; jmp qword ptr [rdx]
0x00000000001872c1 : xor al, 0xfffffffffffffffb ; jmp qword ptr [rax]
0x0000000000187a65 : xor al, 0xfffffffffffffffc ; call qword ptr [rax]
0x00000000001879e5 : xor al, 0xfffffffffffffffc ; call rax
0x00000000000a3628 : xor al, 1 ; add byte ptr [rax], al ; ret
0x000000000018de30 : xor al, 2 ; stc ; call rsp
0x00000000000fb13b : xor al, al ; or eax, edi ; ret
0x00000000000e50a3 : xor al, al ; ret
0x00000000000ebc8a : xor al, byte ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000018d445 : xor al, byte ptr [rdx] ; add byte ptr [rdx + rdx - 8], dl ; call rsp
0x00000000001b6fc4 : xor al, byte ptr [rsi - 9] ; jmp qword ptr [rdx]
0x0000000000107ff8 : xor al, ch ; ret 0xf284
0x0000000000179298 : xor al, ch ; std ; call qword ptr [rax]
0x00000000000f0948 : xor ax, ax ; ret
0x000000000008b657 : xor ax, word ptr [rax] ; add rsp, 8 ; ret
0x000000000008b615 : xor ax, word ptr [rax] ; ret
0x0000000000187a61 : xor bh, ah ; call qword ptr [rax]
0x00000000001879e1 : xor bh, ah ; call rax
0x0000000000031e5e : xor bh, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f4898 : xor bh, cl ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000018cbc1 : xor bh, dh ; jmp rsp
0x000000000008c9cc : xor bl, al ; nop ; xor rax, rax ; ret
0x00000000001085b2 : xor bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001a8db0 : xor bpl, sil ; jmp qword ptr [rcx]
0x00000000000a371c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000008c88d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000111f32 : xor byte ptr [r8 + 1], dil ; pop rbx ; ret
0x0000000000047147 : xor byte ptr [r8 - 0x75], r9b ; jg 0x471bd ; xor eax, eax ; ret
0x00000000000d582f : xor byte ptr [r9], sil ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000072d3b : xor byte ptr [rax + 0x29], cl ; ret
0x000000000004433c : xor byte ptr [rax + 0x29], cl ; ret 0x2949
0x00000000000d5967 : xor byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000087a3f : xor byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000087921 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000111f33 : xor byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000097b46 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000019c394 : xor byte ptr [rax - 0x12], al ; jmp qword ptr [rdx]
0x000000000011fae7 : xor byte ptr [rax - 0x73], cl ; add eax, 0x2a4bb1 ; pop rbx ; ret
0x000000000011faaf : xor byte ptr [rax - 0x73], cl ; add eax, 0x2a4be9 ; pop rbx ; ret
0x000000000011f9f0 : xor byte ptr [rax - 0x73], cl ; add eax, 0x2a4ca8 ; pop rbx ; ret
0x0000000000047488 : xor byte ptr [rax - 0x75], cl ; jbe 0x47504 ; xor eax, eax ; ret
0x0000000000047148 : xor byte ptr [rax - 0x75], cl ; jg 0x471bc ; xor eax, eax ; ret
0x0000000000047487 : xor byte ptr [rax - 0x75], r9b ; jbe 0x47505 ; xor eax, eax ; ret
0x000000000008784f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000012f41a : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x00000000000aa822 : xor byte ptr [rax - 0x77], cl ; call 0x4ccd3d3f
0x00000000000b6076 : xor byte ptr [rax - 0x77], cl ; jmp 0x48cde9cc
0x00000000000b690e : xor byte ptr [rax - 0x77], cl ; jmp 0x4ccdf264
0x00000000000b699a : xor byte ptr [rax - 0x77], cl ; jmp 0x4ccdf2f0
0x00000000000b6a1b : xor byte ptr [rax - 0x77], cl ; jmp 0x4ccdf371
0x00000000000b793b : xor byte ptr [rax - 0x77], cl ; jmp 0x4cce0291
0x00000000000dde89 : xor byte ptr [rax - 0x77], cl ; ret
0x00000000000b6e17 : xor byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000e68b0 : xor byte ptr [rax - 0x77], cl ; ret 0x8b44
0x000000000006d5b1 : xor byte ptr [rax - 0x77], cl ; ret 0xee83
0x00000000000e2e87 : xor byte ptr [rax - 0x77], cl ; ret 0xf980
0x00000000001260ab : xor byte ptr [rax - 0x7d], cl ; ret
0x00000000000ea88e : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001af960 : xor byte ptr [rax - 0xa], bl ; call qword ptr [rdi]
0x0000000000187320 : xor byte ptr [rax - 5], ah ; call qword ptr [rax]
0x00000000000e50dc : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000008b698 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000021ee3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000031c9d : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000036ad3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000a26f5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000075981 : xor byte ptr [rax], al ; je 0x75998 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a1bf7 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a3720 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000a371f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000891e9 : xor byte ptr [rbp + rcx*4 + 0x48], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x8341
0x000000000010caab : xor byte ptr [rbp - 0x16], dh ; ret
0x000000000008434a : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c37e3 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019ca6f : xor byte ptr [rbx + 0xae60206], al ; ret
0x000000000008d53b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000007c93e : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000001887dc : xor byte ptr [rbx - 0x5d4f0004], ah ; cld ; jmp qword ptr [rax]
0x0000000000187850 : xor byte ptr [rbx], al ; cld ; push rax ; add al, -4 ; call rax
0x00000000000a371d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000001a81c0 : xor byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000000a85fb : xor byte ptr [rcx + 0x39], cl ; ret 0x840f
0x0000000000001b20 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x00000000000ca8eb : xor byte ptr [rcx + 0x5d], al ; pop r14 ; pop r15 ; ret
0x00000000000cf9ec : xor byte ptr [rcx + 0xf40247c], cl ; xchg eax, esp ; ret 0xff83
0x00000000000813d0 : xor byte ptr [rcx + rcx*4 + 0x5c], al ; and al, 0x28 ; call rax
0x00000000001884b8 : xor byte ptr [rcx - 0x7f5f0004], al ; cld ; jmp qword ptr [rax]
0x0000000000187300 : xor byte ptr [rcx - 5], dl ; call qword ptr [rax]
0x00000000000e25d2 : xor byte ptr [rcx], 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116ec3 : xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x00000000000f130c : xor byte ptr [rcx], 0xc0 ; ret
0x00000000000e2b7d : xor byte ptr [rcx], al ; ret
0x000000000003201a : xor byte ptr [rcx], bh ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d5830 : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000fe562 : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], -0x40 ; ret
0x00000000000d1772 : xor byte ptr [rcx], dl ; je 0xd1786 ; xor eax, eax ; ret
0x000000000018791c : xor byte ptr [rdi], al ; cld ; jmp qword ptr [rax]
0x00000000001a0ec0 : xor byte ptr [rdi], bh ; int1 ; jmp qword ptr [rcx]
0x00000000001879b8 : xor byte ptr [rdi], ch ; cld ; call qword ptr [rax]
0x0000000000093aa4 : xor byte ptr [rdx + 0xe], 0x2a ; ret
0x0000000000178ea4 : xor byte ptr [rdx - 0x11], dl ; call qword ptr [rax]
0x00000000001790d4 : xor byte ptr [rdx - 0x7b7f000f], al ; int1 ; call rax
0x0000000000192877 : xor byte ptr [rdx], al ; ret
0x000000000018724c : xor byte ptr [rip + 0x1600fffb], dl ; sti ; call rax
0x00000000001a04de : xor byte ptr [rsi + 0xd1cfff0], dh ; stosb byte ptr [rdi], al ; mov ch, -0x10 ; jmp qword ptr [rdx]
0x00000000001a21d6 : xor byte ptr [rsi + 0xd1cfff1], al ; wait ; test esi, ecx ; jmp qword ptr [rdx]
0x0000000000160c6f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008b36c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008c88e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000191550 : xor byte ptr [rsi - 0x16], cl ; call qword ptr [rdx]
0x0000000000187de4 : xor byte ptr [rsi - 4], dl ; jmp qword ptr [rax + 0x10fffc55]
0x0000000000187350 : xor byte ptr [rsi - 5], 0xff ; sal byte ptr [rdi - 5], 1 ; jmp qword ptr [rax]
0x00000000001878b8 : xor byte ptr [rsi], al ; cld ; call qword ptr [rax]
0x0000000000187274 : xor byte ptr [rsi], bl ; sti ; jmp qword ptr [rax]
0x0000000000179204 : xor byte ptr [rsp + rdi*8 - 0x3625f01], bl ; call qword ptr [rax]
0x00000000001a78c0 : xor ch, bl ; hlt ; jmp qword ptr [rcx]
0x0000000000187634 : xor ch, bl ; sti ; call qword ptr [rax]
0x000000000017406d : xor ch, ch ; call rax
0x0000000000174069 : xor ch, ch ; inc dword ptr [rax] ; xor ch, ch ; call rax
0x0000000000174065 : xor ch, ch ; jmp qword ptr [rax]
0x0000000000174061 : xor ch, ch ; lcall ptr [rax + 0x32] ; in eax, dx ; jmp qword ptr [rax]
0x00000000000a1988 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a199e : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a19c0 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a19de : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a19fe : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a1a24 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a1a40 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a1a60 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a1a80 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a1aa6 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a1ac8 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a1ae6 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a1b06 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a1b22 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a1b42 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a1b62 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a1b82 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a1ba8 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a1bf8 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a18ce : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a18ec : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a190c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a192e : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a194e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a196e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a1804 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a1816 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a182c : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a1844 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a185a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a186c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a188a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a1896 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a18ac : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a17f0 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000018f3c9 : xor ch, cl ; call qword ptr [rcx]
0x00000000001a8db1 : xor ch, dh ; jmp qword ptr [rcx]
0x0000000000191239 : xor ch, dl ; call qword ptr [rcx]
0x00000000001283af : xor cl, byte ptr [rax - 0x77] ; jp 0x1283c1 ; ret
0x00000000001283c7 : xor cl, byte ptr [rax - 0x77] ; jp 0x1283d9 ; ret
0x0000000000128c0f : xor cl, byte ptr [rax - 0x77] ; jp 0x128c21 ; ret
0x0000000000128c27 : xor cl, byte ptr [rax - 0x77] ; jp 0x128c39 ; ret
0x0000000000128c57 : xor cl, byte ptr [rax - 0x77] ; jp 0x128c69 ; ret
0x0000000000046f9d : xor cl, byte ptr [rax - 0x77] ; ret 0x8d48
0x00000000000b0e06 : xor cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000000b8bce : xor cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000001241a0 : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000d1787 : xor cl, byte ptr [rax] ; xor eax, eax ; ret
0x000000000010d47b : xor cl, byte ptr [rcx - 0x7d] ; ret 0x4d04
0x0000000000080408 : xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x0000000000104101 : xor cl, ch ; ret
0x000000000003f7f0 : xor cl, ch ; ret 0xfff0
0x000000000009d310 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000187990 : xor dh, 0xfb ; call rax
0x000000000018cc11 : xor dh, bh ; call rsp
0x00000000001963d4 : xor dh, byte ptr [rcx - 0x13] ; jmp qword ptr [rdx]
0x00000000001a8ee9 : xor dh, ch ; jmp qword ptr [rcx]
0x000000000019bdad : xor dh, ch ; jmp qword ptr [rdx]
0x0000000000187a60 : xor dil, spl ; call qword ptr [rax]
0x000000000003060d : xor dl, byte ptr [rax + rax] ; movsxd rax, dword ptr [rdx + r12*4] ; add rdx, rax ; jmp rdx
0x00000000000e3161 : xor dword ptr [rax - 0x75], ecx ; adc byte ptr [rax + 0x39], cl ; ret
0x00000000000e919f : xor dword ptr [rax - 0x77], ecx ; ret
0x000000000009773e : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x000000000004c59c : xor dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000b11fb : xor dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000000000b2ca3 : xor dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000087413 : xor dword ptr [rbx + 0x33], edi ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x00000000001ab884 : xor dword ptr [rbx + rdi*8], esp ; jmp qword ptr [rdx]
0x0000000000187540 : xor dword ptr [rcx - 0x44ee0003], edi ; std ; call qword ptr [rcx]
0x00000000001a398c : xor dword ptr [rcx - 0xe], edi ; jmp qword ptr [rdx]
0x000000000010a9bf : xor dword ptr [rcx], 0xffffffc0 ; ret
0x0000000000187560 : xor dword ptr [rdx - 0x44ee0003], edi ; std ; call qword ptr [rcx]
0x000000000018d40d : xor dword ptr [rdx], eax ; add byte ptr [rdi + rcx], dl ; clc ; call rsp
0x00000000000462d6 : xor eax, 0x195 ; call rax
0x00000000000f1122 : xor eax, 0x20 ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000007033b : xor eax, 0x30 ; call rax
0x000000000006601c : xor eax, 0x358f3f ; call rax
0x0000000000064734 : xor eax, 0x35a827 ; call rax
0x000000000005f2b8 : xor eax, 0x35fca3 ; call rax
0x0000000000055f46 : xor eax, 0x369015 ; call rax
0x000000000004ef74 : xor eax, 0x36ffe7 ; call rax
0x0000000000187ac9 : xor eax, 0x3750fffc ; cld ; jmp rax
0x0000000000049e30 : xor eax, 0x37512b ; call rax
0x0000000000187aa9 : xor eax, 0x3790fffc ; cld ; jmp qword ptr [rax]
0x000000000006d918 : xor eax, 0x48b4800 ; ret 0x8548
0x00000000000e4877 : xor eax, 0x48fffff6 ; add esp, 0x18 ; ret
0x00000000000ec250 : xor eax, 0x70c48348 ; pop rbx ; ret
0x000000000010439e : xor eax, 0x8548fff8 ; ror byte ptr [rdi], -0x6b ; ret
0x000000000007034f : xor eax, 0x8994eb00 ; ret 0x8b48
0x00000000000cb89c : xor eax, 0x8bffffff ; mov byte ptr [r9 - 0x77], r8b ; ret 0xdb84
0x00000000000703a0 : xor eax, 0xa6850f00 ; add al, 0 ; add bl, dh ; ret
0x00000000001b6ac7 : xor eax, 0xd1cfff7 ; call 0x231b620d
0x00000000001b6ac6 : xor eax, 0xd1cfff7 ; call 0x231b620e
0x000000000000245d : xor eax, 0xdd410018 ; out -0x57, al ; ret 0xbd07
0x000000000007d00b : xor eax, 0xffffe480 ; call rax
0x000000000007cc0b : xor eax, 0xffffe880 ; call rax
0x000000000007b95b : xor eax, 0xfffffb30 ; call rax
0x0000000000070697 : xor eax, 0xfffffcd4 ; call rax
0x000000000007b6f3 : xor eax, 0xfffffd98 ; call rax
0x00000000001280c3 : xor eax, 0xffffffff ; mov rdx, rax ; jmp 0x12808f
0x0000000000021ee0 : xor eax, dword ptr [0x30] ; call rax
0x0000000000036ad0 : xor eax, dword ptr [0x30] ; jmp rax
0x00000000001301f1 : xor eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000831c4 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000086926 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000008665e : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r12 ; ret
0x0000000000086811 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008c56c : xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x00000000000868c4 : xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000008b658 : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000831b3 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x000000000008b60f : xor eax, dword ptr [rax] ; mov qword ptr [rip + 0x336658], rax ; ret
0x000000000008734d : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000008b616 : xor eax, dword ptr [rax] ; ret
0x0000000000084654 : xor eax, dword ptr [rax] ; test eax, eax ; js 0x84667 ; ret
0x00000000000815fc : xor eax, dword ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x0000000000104b4a : xor eax, dword ptr [rcx + rcx*4 - 0x40] ; sub eax, r9d ; ret
0x00000000000aead5 : xor eax, dword ptr [rcx - 0x77] ; ret 0x2941
0x00000000000a4369 : xor eax, dword ptr [rdi] ; or al, 0 ; ret
0x000000000010667d : xor eax, eax ; add r13, 0x30 ; call 0x102918
0x000000000007d18b : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000126aa0 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000084d4e : xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000b4f72 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001143e2 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012a45a : xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x000000000012a5b7 : xor eax, eax ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000001374f0 : xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000136cfc : xor eax, eax ; add rsp, 0x58 ; ret
0x000000000003c1dc : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000083ff0 : xor eax, eax ; add rsp, 8 ; ret
0x000000000002fdd0 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x00000000001066ab : xor eax, eax ; call 0x102914
0x000000000001feaa : xor eax, eax ; call 0xec15d
0x0000000000071a47 : xor eax, eax ; call r12
0x000000000012e679 : xor eax, eax ; call r8
0x000000000012e6c3 : xor eax, eax ; call rcx
0x000000000012f420 : xor eax, eax ; call rdx
0x00000000000486e6 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x486f8 ; pop rbx ; ret
0x00000000000d2924 : xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xd28b9 ; pop rbx ; ret
0x00000000000fe563 : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000c6c83 : xor eax, eax ; cmp edx, 1 ; sete al ; ret
0x00000000000f578d : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0xf57a0 ; pop rbx ; ret
0x00000000000c14cd : xor eax, eax ; cmp rdx, -1 ; cmovne rax, rdx ; ret
0x00000000000fc834 : xor eax, eax ; cmp rdx, rcx ; cmovae rax, rsi ; ret
0x0000000000108687 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000000f1d71 : xor eax, eax ; cmp rsi, rdx ; ja 0xf1d88 ; ret
0x00000000000cb51b : xor eax, eax ; jmp 0xcad22
0x00000000000df3be : xor eax, eax ; jmp 0xdf387
0x00000000001221c0 : xor eax, eax ; jmp rcx
0x0000000000111d00 : xor eax, eax ; mov byte ptr [rdx], 0 ; pop r12 ; ret
0x00000000001183a3 : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x000000000003ccb7 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000003ccc7 : xor eax, eax ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 8], rdx ; ret
0x0000000000097768 : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000010b7e1 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000106648 : xor eax, eax ; mov rdi, r14 ; call 0x102917
0x0000000000125297 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000003d34d : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00000000000375dd : xor eax, eax ; nop ; ret
0x000000000007aed2 : xor eax, eax ; pop r12 ; ret
0x00000000000af884 : xor eax, eax ; pop r14 ; ret
0x00000000000d5a86 : xor eax, eax ; pop r15 ; ret
0x0000000000120093 : xor eax, eax ; pop rbp ; jmp rcx
0x0000000000121840 : xor eax, eax ; pop rbp ; jmp rdx
0x000000000010b851 : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000245bd : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003c39d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073ff4 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000035646 : xor eax, eax ; pop rbx ; ret
0x00000000000bd95e : xor eax, eax ; pop rdx ; ret
0x0000000000037576 : xor eax, eax ; ret
0x0000000000098a3e : xor eax, eax ; sub eax, ecx ; ret
0x0000000000073a50 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000073a60 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000d2950 : xor eax, eax ; test cl, 1 ; jne 0xd28e6 ; pop rbx ; ret
0x00000000000a2638 : xor eax, eax ; test dh, -0x10 ; je 0xa260b ; movzx eax, dl ; pop rbx ; ret
0x000000000009801c : xor eax, eax ; test dl, dl ; cmovne rax, rdi ; ret
0x00000000000fabc1 : xor eax, eax ; test edx, edx ; cmovns rax, rdx ; jmp 0xfabd4
0x0000000000037918 : xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000003cfad : xor eax, edx ; ret
0x000000000003c817 : xor eax, edx ; sub eax, edx ; ret
0x000000000003c82b : xor eax, edx ; sub rax, rdx ; ret
0x000000000002f51c : xor ebp, ebp ; jmp 0x2f528
0x00000000000a6024 : xor ebp, ebp ; mov edx, eax ; jmp 0xa5fd3
0x00000000000a8864 : xor ebp, ebp ; mov edx, eax ; jmp 0xa8813
0x00000000000aaf14 : xor ebp, ebp ; mov edx, eax ; jmp 0xaaec3
0x000000000019a8f4 : xor ebp, edx ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019bdf5 : xor ebp, esi ; jmp qword ptr [rdx]
0x000000000006f0b9 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000193ab1 : xor ebx, ebp ; call rdx
0x000000000012f68b : xor ebx, ebx ; call 0x12b924
0x00000000000de590 : xor ebx, ebx ; xor r10d, r10d ; jmp 0xde5b2
0x00000000001872b9 : xor ebx, edi ; jmp rax
0x00000000000c310e : xor ebx, esi ; ret
0x00000000000c5b2f : xor ecx, 0xffffffff ; dec dword ptr [rax - 0x77] ; ret 0x8d49
0x0000000000038f61 : xor ecx, dword ptr [rax + 0x39] ; ret
0x00000000000bac8c : xor ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001047db : xor ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000bda3e : xor ecx, ecx ; jmp 0xbda08
0x000000000018dee9 : xor ecx, edi ; call rsp
0x000000000011db4e : xor edi, dword ptr [0x30] ; call rax
0x00000000001a39d4 : xor edi, dword ptr [rcx - 0xe] ; jmp qword ptr [rdx]
0x000000000018df01 : xor edi, ecx ; jmp rsp
0x00000000000815fe : xor edi, edi ; call qword ptr [rax]
0x000000000007ea70 : xor edi, edi ; mov qword ptr [rsp + 8], rcx ; call qword ptr [rax]
0x000000000007ea1f : xor edi, edi ; mov r14, rdx ; call qword ptr [rax]
0x000000000018e6f9 : xor edi, edx ; jmp rsp
0x0000000000187a85 : xor edi, esp ; call rax
0x0000000000031c9a : xor edx, dword ptr [0x30] ; call rdx
0x0000000000001b0c : xor edx, dword ptr [rdx - 0x7b] ; mov bl, -0x12 ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000000234a0 : xor edx, edx ; add eax, 2 ; mov dword ptr [rsp], eax ; call rbx
0x00000000000b55b1 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x0000000000074429 : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000de593 : xor edx, edx ; jmp 0xde5af
0x0000000000089250 : xor edx, edx ; mov eax, edx ; ret
0x000000000009780d : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000007c619 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000008b5f3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000070dc0 : xor edx, edx ; pop r12 ; jmp rax
0x00000000000743ec : xor edx, edx ; pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x00000000000fad94 : xor edx, edx ; test byte ptr [rsp + 0x29], -0x80 ; setne dl ; jmp 0xfad78
0x0000000000083441 : xor esi, edx ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x00000000000dc6be : xor esi, esi ; call 0x8d046
0x00000000000f6862 : xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000000f6887 : xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000f68ab : xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000000f68cb : xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000f683d : xor esi, esi ; mov rdi, rbp ; call rbx
0x000000000001fea8 : xor esi, esi ; xor eax, eax ; call 0xec15f
0x000000000018bc81 : xor esi, esp ; jmp rsp
0x00000000001a9e64 : xor esp, ecx ; hlt ; jmp qword ptr [rdx]
0x00000000001879dd : xor esp, edi ; jmp rax
0x00000000000c81c1 : xor esp, esp ; jmp 0xc818b
0x000000000012f687 : xor esp, esp ; push rbp ; push rbx ; xor ebx, ebx ; call 0x12b928
0x00000000000de592 : xor r10d, r10d ; jmp 0xde5b0
0x00000000000c81c0 : xor r12d, r12d ; jmp 0xc818c
0x000000000012f686 : xor r12d, r12d ; push rbp ; push rbx ; xor ebx, ebx ; call 0x12b929
0x0000000000071a46 : xor r8d, r8d ; call r12
0x0000000000104100 : xor r9b, bpl ; ret
0x00000000000d1786 : xor r9b, byte ptr [rax] ; xor eax, eax ; ret
0x00000000000f1121 : xor rax, 0x20 ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x0000000000021edf : xor rax, qword ptr [0x30] ; call rax
0x0000000000036acf : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000021ede : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000036ace : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000089705 : xor rax, rax ; ret
0x000000000003c82a : xor rax, rdx ; sub rax, rdx ; ret
0x000000000011db4d : xor rdi, qword ptr [0x30] ; call rax
0x000000000011db4c : xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000031c99 : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000031c98 : xor rdx, qword ptr fs:[0x30] ; call rdx
0x0000000000070dbf : xor rdx, rdx ; pop r12 ; jmp rax

Unique gadgets found: 21559
