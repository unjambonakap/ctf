Gadgets information
============================================================
0x00000000001036b9 : adc ah, bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000016e8d0 : adc ah, bl ; sti ; jmp rax
0x000000000007f83a : adc ah, byte ptr [rax - 0x6f990002] ; pop rbx ; ret
0x000000000016fffc : adc al, -0x15 ; call qword ptr [rax]
0x000000000014c171 : adc al, -0x16 ; test rdx, rdx ; je 0x14c181 ; call rdx
0x0000000000002b67 : adc al, -0x19 ; ret
0x0000000000160a20 : adc al, -0x34 ; hlt ; jmp rdi
0x0000000000068319 : adc al, -0x34 ; str word ptr [rax - 0x77] ; ret 0x8948
0x00000000000343e4 : adc al, -0x39 ; setne al ; movzx eax, al ; ret
0x0000000000034404 : adc al, -0x39 ; xor eax, eax ; ret
0x0000000000045418 : adc al, -0x3e ; jmp 0x453ba
0x000000000007cf99 : adc al, -0x48 ; add rax, rdx ; jmp rax
0x0000000000031a7d : adc al, -0x49 ; add rdx, rdi ; jmp rdx
0x00000000000b8fdd : adc al, -0x50 ; add rax, rdx ; jmp rax
0x000000000018fe4c : adc al, -0x56 ; add dword ptr [rax], eax ; and byte ptr [rbp - 9], ah ; jmp rdx
0x00000000000bc959 : adc al, -0x58 ; add rax, rdx ; jmp rax
0x0000000000055bc9 : adc al, -0x60 ; add rax, rdx ; jmp rax
0x000000000005ec6a : adc al, -0x68 ; add rax, rdx ; jmp rax
0x000000000012a4a1 : adc al, -0x6d ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000055b1e : adc al, -0x6f ; add rcx, rdx ; jmp rcx
0x0000000000121970 : adc al, -0x6f ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000012009e : adc al, -0x6f ; sub eax, edx ; ret
0x0000000000068997 : adc al, -0x70 ; add rax, rdx ; jmp rax
0x00000000000eb948 : adc al, -0x76 ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000006eb5e : adc al, -0x76 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000d7cc0 : adc al, -0x78 ; add rax, rdx ; jmp rax
0x000000000018db4c : adc al, -0x79 ; add dword ptr [rax], eax ; mov bpl, -0xa ; jmp rdx
0x00000000001726a5 : adc al, -0xa ; call rax
0x00000000000b3003 : adc al, -1 ; pop rbx ; lea rax, qword ptr [rax + rdx*8] ; ret
0x000000000016e425 : adc al, -5 ; call qword ptr [rax]
0x000000000018f001 : adc al, -9 ; call rdi
0x00000000001204df : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120549 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d4a1a : adc al, 0 ; add byte ptr [rax], al ; add dword ptr [rbp + 7], esi ; ret
0x00000000001816a0 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0
0x0000000000177c40 : adc al, 0 ; add byte ptr [rax], al ; or al, 0x28 ; add byte ptr [rax], al ; js 0x177c15 ; jmp 0x177c54
0x00000000000e088e : adc al, 0 ; add byte ptr [rax], al ; sub eax, edx ; ret
0x0000000000020145 : adc al, 0 ; ret
0x000000000012a4a5 : adc al, 0x13 ; jmp rdx
0x00000000000903f5 : adc al, 0x16 ; sub eax, edx ; ret
0x0000000000176e4c : adc al, 0x1a ; add byte ptr [rax], al ; jo 0x176eb7 ; jmp 0x176e5a
0x000000000018714c : adc al, 0x1d ; add dword ptr [rax], eax ; xor ebp, esi ; call qword ptr [rax]
0x000000000018784c : adc al, 0x24 ; add dword ptr [rax], eax ; nop ; cmc ; jmp qword ptr [rcx]
0x00000000000e0fea : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000035687 : adc al, 0x24 ; mov rsi, r13 ; mov rdi, r12 ; call r14
0x000000000002ec9e : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000099633 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000078c51 : adc al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000096d70 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000097bc3 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000008fd9b : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000020035 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000506cf : adc al, 0x4c ; add edx, edi ; call qword ptr [r11 + rax*8]
0x000000000018a44c : adc al, 0x50 ; add dword ptr [rax], eax ; push rax ; in eax, -0xb ; jmp qword ptr [rcx]
0x000000000018ac4c : adc al, 0x58 ; add dword ptr [rax], eax ; xor bh, dh ; cmc ; jmp qword ptr [rcx]
0x0000000000080167 : adc al, 0xa ; jmp r10
0x0000000000090563 : adc al, 0xa ; sub eax, edx ; ret
0x000000000018604c : adc al, 0xc ; add dword ptr [rax], eax ; xor byte ptr [rbp - 0xc], bh ; call qword ptr [rdx]
0x00000000000a7ae2 : adc al, 0xe ; jne 0xa7add ; ret
0x000000000011e1b1 : adc al, 0xe ; sub eax, edx ; ret
0x0000000000097739 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x000000000019554c : adc al, 1 ; add al, byte ptr [rax] ; add byte ptr [rsi - 8], dh ; call qword ptr [rax]
0x0000000000171ab9 : adc al, 1 ; add byte ptr [rax - 0x5f], al ; jmp qword ptr [rax]
0x000000000014bbc8 : adc al, 1 ; add byte ptr [rax], al ; ret
0x0000000000031ae5 : adc al, 3 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008f7d6 : adc al, 7 ; cmp edx, ecx ; je 0x8f7d7 ; ret
0x000000000008f702 : adc al, 7 ; test dl, dl ; jne 0x8f6ff ; ret
0x000000000016fedc : adc al, al ; jmp 0x16fee2
0x0000000000176665 : adc al, byte ptr [rax] ; add byte ptr [rax + 0x5a], bh ; std ; jmp qword ptr [rdi]
0x0000000000120687 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001206f1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000005598 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000041af5 : adc al, byte ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000002d46e : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + r12*4] ; add rdx, rax ; jmp rdx
0x0000000000031a79 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rdi + rsi*4] ; add rdx, rdi ; jmp rdx
0x0000000000005cc4 : adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret
0x00000000001866fd : adc al, byte ptr [rcx] ; add al, al ; stosd dword ptr [rdi], eax ; hlt ; jmp qword ptr [rcx]
0x0000000000175271 : adc al, byte ptr [rcx] ; add byte ptr [rax - 0x38], dl ; cld ; call qword ptr [rax]
0x000000000018669d : adc al, byte ptr [rcx] ; add byte ptr [rax - 0x55], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001866b5 : adc al, byte ptr [rcx] ; add byte ptr [rax - 0x55], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000186685 : adc al, byte ptr [rcx] ; add byte ptr [rax - 0x55], cl ; hlt ; jmp qword ptr [rcx]
0x0000000000175261 : adc al, byte ptr [rcx] ; add byte ptr [rax], al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp rax
0x0000000000186655 : adc al, byte ptr [rcx] ; add byte ptr [rax], bl ; stosd dword ptr [rdi], eax ; hlt ; jmp qword ptr [rcx]
0x000000000018666d : adc al, byte ptr [rcx] ; add byte ptr [rax], dh ; stosd dword ptr [rdi], eax ; hlt ; jmp qword ptr [rcx]
0x0000000000092264 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x000000000018669c : adc al, byte ptr fs:[rcx] ; add byte ptr [rax - 0x55], ah ; hlt ; jmp qword ptr [rcx]
0x00000000000f10d8 : adc al, ch ; ret 0xf2e3
0x0000000000175d10 : adc bh, -0x16 ; call qword ptr [rax]
0x000000000016ec8d : adc bh, ah ; call qword ptr [rax - 0x1f0003ed]
0x00000000001938c1 : adc bh, al ; call qword ptr [rdx]
0x000000000016e41d : adc bh, bl ; push qword ptr [rax] ; adc edi, ebx ; jmp qword ptr [rax]
0x000000000016e834 : adc bh, bl ; sti ; call qword ptr [rax]
0x000000000016f4e8 : adc bh, byte ptr [rax - 4] ; call qword ptr [rdx + 0x12fffc77]
0x0000000000003aa7 : adc bh, byte ptr [rax] ; cwde ; ret
0x000000000016f4d0 : adc bh, byte ptr [rbx - 4] ; call qword ptr [rdx + 0x12fffc7a]
0x000000000016f4e0 : adc bh, byte ptr [rcx - 4] ; call qword ptr [rdx + 0x12fffc78]
0x000000000009bdd8 : adc bh, byte ptr [rcx] ; ja 0x9bdec ; cmove rax, rcx ; ret
0x000000000016f4d8 : adc bh, byte ptr [rdx - 4] ; call qword ptr [rdx + 0x12fffc79]
0x0000000000184f20 : adc bh, cl ; call rdi
0x00000000000cc409 : adc bh, dh ; ret 0x30f
0x00000000000fe262 : adc bh, dh ; ret 0x8080
0x0000000000170da0 : adc bl, al ; add byte ptr [rax], al ; adc cl, ch ; out dx, eax ; push qword ptr [rax] ; ret
0x000000000010ae2d : adc bl, al ; nop ; mov dword ptr [rsi], 0xb ; ret
0x00000000000335a8 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000016e564 : adc bl, byte ptr [rdi - 0x601d0003] ; std ; jmp rdx
0x000000000016f9f8 : adc bl, byte ptr [rsp + rdi*8 - 0x3647d01] ; call qword ptr [rdx]
0x0000000000085c05 : adc bl, ch ; call 0xffffffffc3d8e55a
0x000000000007fe45 : adc bl, ch ; call 0xffffffffc400879a
0x0000000000081645 : adc bl, ch ; call 0xffffffffc4009f9a
0x0000000000178c30 : adc bl, ch ; jmp 0x178c36
0x0000000000178c60 : adc bl, ch ; jmp 0x178c66
0x0000000000043132 : adc bl, ch ; jno 0x43188 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000096356 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000956c6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000095737 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000095697 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000e2ab7 : adc bl, dh ; ret
0x0000000000096355 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000956c5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000074993 : adc byte ptr [r11 + 0x21], sil ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000074976 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000014cdfd : adc byte ptr [r13 + 0x5b0575c0], r8b ; ret
0x00000000000f4ab1 : adc byte ptr [r13 - 0xcf68a40], r8b ; ret
0x000000000007fa92 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000000c08f2 : adc byte ptr [r8 + 0x39], cl ; ret
0x000000000011d227 : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000b3c88 : adc byte ptr [r8 + r9*4 + 0x73], al ; adc cl, byte ptr [rax + 1] ; ret
0x0000000000077768 : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000b9e85 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000995ac : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000995ce : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009960c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009968e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000220a1 : adc byte ptr [r9], dil ; adc byte ptr [rax + 0xf], cl ; ret
0x000000000010cc09 : adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x00000000000c08f3 : adc byte ptr [rax + 0x39], cl ; ret
0x00000000000e98cf : adc byte ptr [rax + 0x39], cl ; ret 0x1b72
0x000000000007a2d6 : adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000e98ce : adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x0000000000032e8a : adc byte ptr [rax + 0x48d00148], al ; shr eax, 0x3f ; ret
0x000000000011d228 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000000220a5 : adc byte ptr [rax + 0xf], cl ; ret
0x0000000000074487 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000e6e04 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000010e4d6 : adc byte ptr [rax + 1], bh ; ret
0x000000000009a58e : adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000000437ae : adc byte ptr [rax + 1], cl ; ret
0x000000000008fd96 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000b3809 : adc byte ptr [rax + 1], cl ; ret 0x8349
0x000000000011168d : adc byte ptr [rax + 1], dil ; ret
0x0000000000066395 : adc byte ptr [rax + rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xba66
0x0000000000110bd1 : adc byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000b3c89 : adc byte ptr [rax + rcx*4 + 0x73], al ; adc cl, byte ptr [rax + 1] ; ret
0x00000000000997b4 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000996b2 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x0000000000099630 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000099df3 : adc byte ptr [rax - 0x2f], cl ; call 0xffffffffc3162b4f
0x00000000000eb945 : adc byte ptr [rax - 0x73], cl ; adc al, -0x76 ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000002c743 : adc byte ptr [rax - 0x73], cl ; add al, -0x4e ; mov eax, dword ptr [rdi + rax] ; ret
0x000000000008a754 : adc byte ptr [rax - 0x73], cl ; jg 0x8a771 ; jne 0x8a748 ; ret
0x000000000009bb4f : adc byte ptr [rax - 0x73], cl ; lock ; ret
0x00000000000eb713 : adc byte ptr [rax - 0x73], cl ; or al, 0xffffffffffffffb1 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000eb944 : adc byte ptr [rax - 0x73], r9b ; adc al, -0x76 ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000020038 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000f07a7 : adc byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x000000000008b40c : adc byte ptr [rax - 0x75], cl ; je 0x8b43d ; and byte ptr [rax + 0x39], cl ; ret
0x000000000008ab7a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000010d1cb : adc byte ptr [rax - 0x76be05ad], cl ; ror byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000950ac : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000007e9c3 : adc byte ptr [rax - 0x77], cl ; enter 0x5d5b, 0x41 ; pop rsp ; ret
0x000000000006e027 : adc byte ptr [rax - 0x77], cl ; jo 0x6e045 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000001095eb : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000007f8e2 : adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000008f475 : adc byte ptr [rax - 0x77], cl ; ret
0x00000000000f025c : adc byte ptr [rax - 0x77], cl ; ret 0x1bf
0x0000000000077769 : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000d4e3d : adc byte ptr [rax - 0x77], cl ; ret 0x349
0x000000000011d2f9 : adc byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000010d400 : adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000007b109 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000010d04b : adc byte ptr [rax - 0x77], cl ; ret 0x94c
0x000000000012701f : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000013eba7 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7b ; call qword ptr [rbx]
0x000000000013ebe3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7b ; ret
0x0000000000090e54 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7b ; ret 0x13
0x0000000000056009 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c74de : adc byte ptr [rax - 0x7d], cl ; ret 0x4501
0x000000000007e3a3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000007d7c4 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000f1113 : adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000001025c4 : adc byte ptr [rax - 0x7d], cl ; ret 0x8304
0x000000000002b70e : adc byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000016e528 : adc byte ptr [rax - 0x7e6f0005], al ; sti ; call qword ptr [rax]
0x00000000000749ba : adc byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000e02db : adc byte ptr [rax - 1], bh ; ret
0x00000000000dfffb : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000672ac : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000075274 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000122901 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120891 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000ff78 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000000ddc9c : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000003751c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000010adba : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x0000000000109535 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000009a293 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001629cd : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000067ad4 : adc byte ptr [rax], al ; add byte ptr [rax], al ; test ecx, ecx ; je 0x67ae9 ; ret
0x000000000017652d : adc byte ptr [rax], al ; add byte ptr [rax], dh ; jmp 0x176539
0x00000000000f4f1b : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f0b73 : adc byte ptr [rax], al ; je 0xf0b86 ; xor eax, eax ; ret
0x000000000005105f : adc byte ptr [rax], al ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, r12 ; jmp rax
0x000000000005ebf4 : adc byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000005ec66 : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000040642 : adc byte ptr [rax], al ; ret
0x000000000016f1d0 : adc byte ptr [rax], bh ; cld ; call qword ptr [rax + 0x10fffc39]
0x000000000016ec68 : adc byte ptr [rax], ch ; cld ; push rax ; sub esp, edi ; jmp rax
0x00000000001747d4 : adc byte ptr [rax], cl ; cli ; call qword ptr [rax]
0x00000000000995ad : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000995cf : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009960d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009968f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000099791 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000ce93e : adc byte ptr [rbp + 0x39], cl ; ret 0x850f
0x000000000014cdfe : adc byte ptr [rbp + 0x5b0575c0], al ; ret
0x00000000000856c8 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x000000000008a758 : adc byte ptr [rbp - 0x1b], dh ; ret
0x000000000002fb2b : adc byte ptr [rbp - 0x7cfeecac], cl ; ret
0x00000000000f4ab2 : adc byte ptr [rbp - 0xcf68a40], al ; ret
0x000000000009bef2 : adc byte ptr [rbp - 0xd], dh ; ret
0x000000000016f1b4 : adc byte ptr [rbp - 4], al ; call qword ptr [rax + 0x10fffc46]
0x000000000016f440 : adc byte ptr [rbp - 4], dh ; call rax
0x000000000016f110 : adc byte ptr [rbp - 4], dl ; call qword ptr [rax + 0x10fffc54]
0x000000000016e520 : adc byte ptr [rbp - 5], bh ; call qword ptr [rax + 0x10fffb7e]
0x00000000000df72f : adc byte ptr [rbx + 0x1374a1f8], al ; neg eax ; pop rbx ; ret
0x0000000000074994 : adc byte ptr [rbx + 0x21], dh ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007b240 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000022261 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001776a3 : adc byte ptr [rbx + 0xa540202], al ; ret
0x000000000017c877 : adc byte ptr [rbx + 0xa], al ; ret
0x0000000000179d6c : adc byte ptr [rbx + 0xab20202], al ; ret
0x0000000000074977 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x000000000016e508 : adc byte ptr [rbx + rdi*8 - 1], dh ; nop ; jne 0x16e511 ; call qword ptr [rax]
0x0000000000182a63 : adc byte ptr [rbx - 0x1ff1b8fe], al ; add dword ptr [rdx], eax ; ret
0x0000000000077292 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000071567 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x71581 ; ret
0x0000000000099f50 : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x000000000016e530 : adc byte ptr [rbx - 0x7b6f0005], al ; sti ; call qword ptr [rax]
0x00000000000f74ea : adc byte ptr [rbx - 0x7cb603ba], cl ; ret 0x8510
0x00000000000f4c46 : adc byte ptr [rbx - 0x7d], bl ; loopne 0xf4c5f ; pop rbp ; pop r12 ; ret
0x000000000015ff94 : adc byte ptr [rbx - 0xd], ah ; jmp qword ptr [rax]
0x000000000014cb5c : adc byte ptr [rbx - 0xd], bl ; ret
0x000000000016f120 : adc byte ptr [rbx - 4], dl ; call qword ptr [rax + 0x10fffc52]
0x0000000000174af4 : adc byte ptr [rbx - 6], dl ; jmp rax
0x000000000016f1d8 : adc byte ptr [rbx], bh ; cld ; call qword ptr [rax + 0x10fffc3c]
0x0000000000181100 : adc byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x000000000016f184 : adc byte ptr [rbx], dh ; cld ; call qword ptr [rax + 0x10fffc34]
0x000000000003e306 : adc byte ptr [rcx + 0x39], cl ; ret
0x000000000009d965 : adc byte ptr [rcx + 0x5e], al ; pop r15 ; ret
0x000000000017e804 : adc byte ptr [rcx + 0xa], al ; ret
0x000000000009e4d1 : adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf983
0x00000000000d1d2c : adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000099712 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000996f2 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000057397 : adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000078b97 : adc byte ptr [rcx - 0x7d], al ; ret
0x000000000007b9f2 : adc byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000011e233 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000121dd7 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016f1e8 : adc byte ptr [rcx - 4], al ; call qword ptr [rax + 0x10fffc42]
0x000000000016e500 : adc byte ptr [rcx - 5], dh ; call qword ptr [rax + 0x10fffb72]
0x0000000000186465 : adc byte ptr [rcx], al ; add byte ptr [rax - 0x6e], bh ; hlt ; jmp qword ptr [rdi]
0x00000000001864e5 : adc byte ptr [rcx], al ; add byte ptr [rax], cl ; cdq ; hlt ; call rcx
0x00000000000a6bd4 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000220a2 : adc byte ptr [rcx], bh ; adc byte ptr [rax + 0xf], cl ; ret
0x000000000016f194 : adc byte ptr [rcx], bh ; cld ; call qword ptr [rax + 0x10fffc3a]
0x000000000009d0e9 : adc byte ptr [rcx], bh ; jne 0x9d0e6 ; ret
0x00000000000c3c86 : adc byte ptr [rcx], bh ; ret 0x4b88
0x00000000000370fe : adc byte ptr [rcx], ch ; ret 0xfa69
0x0000000000077295 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000187190 : adc byte ptr [rcx], dh ; cmc ; call qword ptr [rax]
0x0000000000029589 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000e0980 : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], -0x2a ; ja 0xe09b9 ; ret
0x000000000010f8ef : adc byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], -0x3c ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000f03c3 : adc byte ptr [rdi + 0x2000004], bh ; call rax
0x000000000017b6a5 : adc byte ptr [rdi + 0xa], ch ; ret
0x000000000015fe84 : adc byte ptr [rdi - 0xd], dl ; jmp qword ptr [rax]
0x000000000016e510 : adc byte ptr [rdi - 5], dh ; call qword ptr [rax + 0x10fffb78]
0x000000000016ec9c : adc byte ptr [rdi], -4 ; call rax
0x000000000016ec04 : adc byte ptr [rdi], ah ; cld ; push rax ; sub ah, bh ; call rax
0x000000000016f1a4 : adc byte ptr [rdi], bh ; cld ; call qword ptr [rax + 0x10fffc40]
0x00000000000f8bfa : adc byte ptr [rdi], cl ; mov bh, -0x3a ; or eax, edi ; bswap eax ; ret
0x000000000002cb45 : adc byte ptr [rdi], cl ; mov bh, -0x40 ; ret
0x000000000007fa93 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000141c88 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000149cf3 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000011f421 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011f511 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011f331 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000126c4b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012574f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000012694f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012604f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012634f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000125a47 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011fd79 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000011f8d1 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000011f061 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000011fab1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011f241 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000011fc91 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011fba1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011f4e3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f5d3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f3f3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000125cf4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001268f4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126bf4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001262f4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000125ff4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001259ec : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f151 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000012307d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000122e9d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000123875 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000122795 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000123695 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f303 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f123 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f213 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f033 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00000000000342b3 : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5489
0x00000000000d1d35 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5408
0x00000000000de69b : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8440
0x0000000000003905 : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x000000000012a999 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001709f4 : adc byte ptr [rdx - 0x11], dh ; jmp qword ptr [rax]
0x00000000000e34ec : adc byte ptr [rdx - 0x3f7a0001], 0x74 ; sbb al, -0x7d ; ret
0x000000000005c992 : adc byte ptr [rdx - 0x76b30001], dh ; imul ebx ; ret 0xbd80
0x000000000016f1ac : adc byte ptr [rdx - 4], al ; call qword ptr [rax + 0x10fffc43]
0x000000000016f128 : adc byte ptr [rdx - 4], dl ; call qword ptr [rax + 0x10fffc51]
0x000000000016e518 : adc byte ptr [rdx - 5], bh ; call qword ptr [rax + 0x10fffb7b]
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000010686f : adc byte ptr [rdx], al ; je 0x10687c ; ret
0x000000000017e44c : adc byte ptr [rdx], al ; pop rbp ; ret
0x000000000016fd3c : adc byte ptr [rdx], bl ; jmp 0x16fd42
0x00000000001483db : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f1c8 : adc byte ptr [rip + 0x3690fffc], dh ; cld ; call qword ptr [rax]
0x0000000000037344 : adc byte ptr [rip + 0x3ff], ah ; xor eax, ecx ; ret
0x000000000011a63d : adc byte ptr [rip - 0x3fcf0000], al ; pop rbx ; ret
0x000000000014828a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x0000000000147885 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000802b5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000860cb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000958ab : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000958aa : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000018f14a : adc byte ptr [rsi + rcx - 0x70], dh ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001612d0 : adc byte ptr [rsi - 0xb], bh ; call qword ptr [rax + 0x10fff57e]
0x00000000001612cc : adc byte ptr [rsi - 0xb], bh ; call qword ptr [rax]
0x00000000001612ec : adc byte ptr [rsi - 0xb], bh ; call rax
0x00000000001612c4 : adc byte ptr [rsi - 0xb], bh ; jmp qword ptr [rax]
0x0000000000160048 : adc byte ptr [rsi - 0xd], ah ; jmp qword ptr [rax]
0x00000000001742c4 : adc byte ptr [rsi - 7], dh ; call qword ptr [rax]
0x000000000016eb80 : adc byte ptr [rsi], ah ; cld ; call rax
0x000000000016e3e8 : adc byte ptr [rsi], al ; sti ; jmp rax
0x000000000016f1e0 : adc byte ptr [rsi], bh ; cld ; call qword ptr [rax + 0x10fffc3f]
0x00000000001876b0 : adc byte ptr [rsi], bh ; cmc ; jmp qword ptr [rcx]
0x000000000016f18c : adc byte ptr [rsi], dh ; cld ; call qword ptr [rax + 0x10fffc37]
0x000000000003736a : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x000000000016f1f0 : adc byte ptr [rsp + rdi*8 - 1], al ; nop ; cld ; call qword ptr [rax]
0x000000000016f118 : adc byte ptr [rsp + rdi*8 - 1], dl ; nop ; push rbx ; cld ; call qword ptr [rax]
0x000000000016f19c : adc byte ptr [rsp + rdi*8], bh ; call qword ptr [rax + 0x10fffc3d]
0x00000000000a80da : adc byte ptr [rsp - 0x10], al ; ret
0x00000000000444af : adc byte ptr [rsp - 4], al ; ret
0x00000000000444f5 : adc byte ptr [rsp - 8], al ; ret
0x0000000000125cf7 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000173f7c : adc ch, ch ; clc ; call qword ptr [rax]
0x000000000016129d : adc ch, dh ; call qword ptr [rax]
0x000000000017003c : adc cl, -0x15 ; call rax
0x000000000016e838 : adc cl, ah ; sti ; call qword ptr [rax]
0x0000000000161a60 : adc cl, bh ; cmc ; call qword ptr [rax]
0x00000000000c07aa : adc cl, byte ptr [r8 - 0x7d] ; ret
0x00000000000a8aed : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000a8a6f : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000b3c8d : adc cl, byte ptr [rax + 1] ; ret
0x000000000009069d : adc cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000e1e58 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000009d23f : adc cl, byte ptr [rax - 0x7d] ; ret
0x000000000007fe35 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000000787ba : adc cl, byte ptr [rdi] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000cbf01 : adc cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x0000000000170da4 : adc cl, ch ; out dx, eax ; push qword ptr [rax] ; ret
0x000000000017007c : adc dh, -0x15 ; jmp rax
0x0000000000172d15 : adc dh, bh ; call rax
0x0000000000170984 : adc dh, bh ; in eax, dx ; jmp qword ptr [rax]
0x00000000000855d4 : adc dh, bh ; ret
0x0000000000161269 : adc dh, ch ; call qword ptr [rdi]
0x00000000001121da : adc dh, dh ; ret 0x7401
0x00000000000246e2 : adc dh, dh ; ret 0x8b01
0x00000000000022d3 : adc dh, dl ; ret
0x000000000016e7e0 : adc dh, dl ; sti ; call rax
0x000000000016e41c : adc dil, bl ; push qword ptr [rax] ; adc edi, ebx ; jmp qword ptr [rax]
0x000000000016ec8c : adc dil, spl ; call qword ptr [rax - 0x1f0003ed]
0x0000000000177c20 : adc dl, al ; jmp 0x177c24
0x0000000000171994 : adc dl, bl ; int1 ; jmp rax
0x0000000000162848 : adc dl, byte ptr [rbp - 9] ; call qword ptr [rbx - 0x290008a8]
0x0000000000178b70 : adc dl, ch ; jmp 0x178b76
0x000000000006fca5 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000014c6cb : adc dword ptr [rax - 0x75], ecx ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000f4cfb : adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp - 0x11], cl ; leave ; ret
0x00000000000d366b : adc dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c4549 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x00000000000bfde3 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x000000000007fa97 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000012429b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x0000000000176615 : adc dword ptr [rax], eax ; add al, bh ; xor ebp, ebx ; call qword ptr [rdx]
0x0000000000120827 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000122799 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000090ba : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000014c66b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x00000000000a98bb : adc dword ptr [rbp + 0x2f], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000374f2 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000037db7 : adc dword ptr [rcx + 0x5e], eax ; pop r15 ; ret
0x00000000001865d5 : adc dword ptr [rcx], eax ; add byte ptr [rax], bl ; stosd dword ptr [rdi], eax ; hlt ; call qword ptr [rbx]
0x0000000000186615 : adc dword ptr [rcx], eax ; add byte ptr [rax], bl ; stosd dword ptr [rdi], eax ; hlt ; call qword ptr [rsi]
0x000000000011625e : adc dword ptr [rcx], eax ; ja 0x116292 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000000ed596 : adc dword ptr [rcx], esi ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000032f74 : adc dword ptr [rdi], ecx ; ret
0x0000000000032f3d : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x00000000000332c2 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x0000000000120826 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000009a58a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x000000000014c68b : adc eax, 0x2534f8 ; je 0x14c69a ; ret
0x000000000011ab67 : adc eax, 0x283a44 ; add rsp, 8 ; ret
0x00000000001130b9 : adc eax, 0x28f442 ; mov qword ptr fs:[rax], rdx ; ret
0x000000000010b292 : adc eax, 0x2918a9 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000001128a2 : adc eax, 0x2949 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000ea38f : adc eax, 0x2b2f2c ; je 0xea3a0 ; pop rbp ; ret
0x00000000000e31fe : adc eax, 0x2bd28d ; add rsp, 8 ; ret
0x00000000000347dd : adc eax, 0x3688aa ; ret
0x000000000002ce86 : adc eax, 0x370065 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002bc19 : adc eax, 0x3730bf ; ret
0x000000000009b21a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000da516 : adc eax, 0x433b0000 ; or al, 0x74 ; ret 0x9066
0x000000000017695d : adc eax, 0x4ba00000 ; jmp 0x176969
0x00000000001769ed : adc eax, 0x52300000 ; jmp 0x1769f9
0x0000000000096058 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x000000000009776c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x0000000000057498 : adc eax, 0x83480000 ; ret
0x00000000001203b1 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000106767 : adc eax, 0x89480006 ; ret 0x1be
0x0000000000106793 : adc eax, 0x89480006 ; ret 0x46c7
0x000000000009b51a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000006a9e8 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000123ffe : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001225b9 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000033374 : adc eax, dword ptr [rax] ; movaps xmm0, xmm1 ; ret
0x0000000000032eae : adc eax, dword ptr [rax] ; orpd xmm0, xmm1 ; ret
0x000000000002bc6d : adc eax, dword ptr [rax] ; ret
0x00000000000c1ffc : adc eax, dword ptr [rbx + 0x67403f8] ; ret
0x00000000000f5a18 : adc eax, dword ptr [rbx] ; add dh, dh ; ret 0x7540
0x00000000000d14a5 : adc eax, dword ptr [rcx + rcx*8 + 0x63480f75] ; ret 0x8948
0x00000000001867fd : adc eax, dword ptr [rcx] ; add byte ptr [rax - 0x53], al ; hlt ; call rdx
0x0000000000186795 : adc eax, dword ptr [rcx] ; add byte ptr [rax - 0x53], cl ; hlt ; call qword ptr [rdi]
0x0000000000171a81 : adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; push rsi ; call rax
0x00000000001867e5 : adc eax, dword ptr [rcx] ; add byte ptr [rax], bh ; lodsd eax, dword ptr [rsi] ; hlt ; call qword ptr [rdx]
0x0000000000092268 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000001259ef : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000042ae9 : adc eax, eax ; ret
0x0000000000042c26 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x000000000015bf85 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000000f8010 : adc ebp, ebx ; ret 0x1f0f
0x00000000001611d1 : adc ebp, esi ; call qword ptr [rax]
0x0000000000161251 : adc ebp, esi ; call rdi
0x00000000001626b4 : adc ebx, dword ptr [rdx - 9] ; call qword ptr [rbx]
0x0000000000183779 : adc ebx, esi ; call rdx
0x00000000001177ca : adc ecx, dword ptr [rax + 0x39] ; ret
0x000000000002bc5b : adc ecx, dword ptr [rax - 0x75] ; cli ; ret
0x000000000007723c : adc ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000000abe76 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000002e86b : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x000000000009bbc4 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x00000000000e6148 : adc ecx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000009e2bb : adc ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000a2d4b : adc ecx, dword ptr [rcx - 0x7d] ; ret 0x4901
0x0000000000092434 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x0000000000092454 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x0000000000092474 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00000000000922be : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000006b5da : adc ecx, ebp ; add dword ptr [eax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000016e421 : adc edi, ebx ; jmp qword ptr [rax]
0x000000000016ec91 : adc edi, esp ; jmp rax
0x00000000000fe3d0 : adc edx, dword ptr [rcx - 0x76b7fffa] ; ret 0xff31
0x000000000015d49e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, -0x39 ; ret 0xe71f
0x000000000009db11 : adc esi, dword ptr [rsp + rcx - 0x77] ; ret 0xc8eb
0x000000000018b331 : adc esi, esi ; call rdi
0x000000000006b38b : adc esi, esi ; ret 0x7520
0x0000000000076d41 : adc esi, esi ; ret 0xf02
0x00000000000f69ad : adc esi, esi ; ret 0xf20
0x0000000000125bd2 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000122720 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000041af4 : adc r8b, byte ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000186684 : adc r8b, byte ptr [rcx] ; add byte ptr [rax - 0x55], cl ; hlt ; jmp qword ptr [rcx]
0x0000000000042c25 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000855d3 : adc sil, r15b ; ret
0x00000000001036b8 : adc spl, r15b ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019551b : add ah, ah ; add byte ptr [rdx], al ; add al, ah ; jne 0x195523 ; call qword ptr [rdi]
0x000000000018d61b : add ah, ah ; add dword ptr [rcx], 0xf6aa8000 ; call qword ptr [rax]
0x000000000018a41b : add ah, ah ; add qword ptr [r8], r8 ; and ch, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a01b : add ah, ah ; add qword ptr [r8], rax ; and cl, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018781b : add ah, ah ; and eax, dword ptr [rcx] ; add byte ptr [rax + 0x42], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000184f1b : add ah, ah ; cli ; add byte ptr [rax], al ; adc bh, cl ; call rdi
0x000000000018a330 : add ah, ah ; cmc ; jmp qword ptr [rcx]
0x000000000019301b : add ah, ah ; fild dword ptr [rcx] ; add byte ptr [rax], dh ; clc ; call qword ptr [rcx]
0x000000000017bd1b : add ah, ah ; push 0x20400000 ; out dx, eax ; jmp qword ptr [rax]
0x000000000018a91b : add ah, ah ; push rsp ; add dword ptr [rax], eax ; in eax, dx ; cmc ; jmp qword ptr [rbx]
0x0000000000176e1b : add ah, ah ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x5e], ah ; jmp 0x176e2b
0x000000000017891b : add ah, ah ; xor al, 0 ; add al, dh ; in eax, -0x15 ; jmp rsp
0x0000000000178a1b : add ah, ah ; xor eax, 0xe9600000 ; jmp 0x178a2b
0x00000000001866fb : add ah, al ; adc al, byte ptr [rcx] ; add al, al ; stosd dword ptr [rdi], eax ; hlt ; jmp qword ptr [rcx]
0x00000000001867fb : add ah, al ; adc eax, dword ptr [rcx] ; add byte ptr [rax - 0x53], al ; hlt ; call rdx
0x00000000001794fb : add ah, al ; add byte ptr [rax], al ; loopne 0x17957c ; in al, dx ; call rsi
0x00000000001882fb : add ah, al ; add dword ptr cs:[rax], eax ; lock jl 0x188300 ; call qword ptr [rbx]
0x000000000018a2fb : add ah, al ; add qword ptr [rax], r8 ; shl bl, 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001779fb : add ah, al ; and eax, 0xbeb00000 ; jmp 0x177a0b
0x00000000001844fb : add ah, al ; lock add byte ptr [rax], al ; add byte ptr [rbx - 0xd], al ; jmp qword ptr [rcx]
0x00000000001810fb : add ah, al ; mov esp, 0x2b100000 ; cli ; call qword ptr [rdi]
0x00000000001861fb : add ah, al ; or eax, 0x8fc00001 ; hlt ; jmp qword ptr [rax]
0x000000000018a5fb : add ah, al ; push rcx ; add dword ptr [rax], eax ; nop ; out -0xb, eax ; jmp qword ptr [rcx]
0x00000000001917fb : add ah, al ; ret
0x000000000017f2fb : add ah, al ; sahf ; add byte ptr [rax], al ; add ch, bh ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000184733 : add ah, bh ; add byte ptr [rax], al ; cmp byte ptr [rbp - 0xd], dl ; call qword ptr [rax]
0x0000000000187b33 : add ah, bh ; add dword ptr es:[rax], eax ; or byte ptr [rdi - 0xb], cl ; jmp qword ptr [rcx]
0x000000000009a1ee : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000009a20e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000018a433 : add ah, bh ; add qword ptr [r8], r8 ; cmp ch, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000187833 : add ah, bh ; and eax, dword ptr [rcx] ; add byte ptr [rax + 0x42], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000193033 : add ah, bh ; fild dword ptr [rcx] ; add byte ptr [rax], bh ; clc ; call qword ptr [rbx]
0x000000000009a2a6 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000009a1cd : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x000000000016eaa9 : add ah, bh ; jmp rax
0x0000000000190133 : add ah, bh ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; jo 0x19013a ; jmp qword ptr [rcx]
0x0000000000181433 : add ah, bh ; mov edi, 0xa3280000 ; int1 ; jmp rsi
0x0000000000180f33 : add ah, bh ; mov edx, 0xb5380000 ; sti ; call qword ptr [rax]
0x000000000016ea89 : add ah, bh ; push qword ptr [rax] ; add bh, ah ; jmp qword ptr [rax]
0x0000000000176e33 : add ah, bh ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x5e], ch ; jmp 0x176e43
0x0000000000178a33 : add ah, bh ; xor eax, 0xe9680000 ; jmp 0x178a43
0x0000000000176613 : add ah, bl ; adc dword ptr [rax], eax ; add al, bh ; xor ebp, ebx ; call qword ptr [rdx]
0x0000000000186613 : add ah, bl ; adc dword ptr [rcx], eax ; add byte ptr [rax], bl ; stosd dword ptr [rdi], eax ; hlt ; call qword ptr [rsi]
0x000000000017a113 : add ah, bl ; add byte ptr [rax], r8b ; xor bpl, bpl ; call rdi
0x0000000000189913 : add ah, bl ; add dword ptr [rax], r8d ; mov cl, al ; cmc ; call qword ptr [rdx]
0x000000000018a313 : add ah, bl ; add qword ptr [rax], r8 ; call 0x22189908
0x0000000000187513 : add ah, bl ; and byte ptr [rcx], al ; add byte ptr [rax + 0x3b], bh ; cmc ; jmp qword ptr [rcx]
0x000000000017c913 : add ah, bl ; je 0x17c91f ; add byte ptr [rax + 0x49], bl ; out dx, eax ; jmp rbx
0x000000000018ab13 : add ah, bl ; push rsi ; add dword ptr [rax], eax ; sbb al, dh ; cmc ; jmp qword ptr [rcx]
0x0000000000191713 : add ah, bl ; ret 1
0x0000000000192813 : add ah, bl ; rol dword ptr [rcx], cl ; add al, bh ; loop 0x19281a ; jmp qword ptr [rax]
0x000000000017dc15 : add ah, byte ptr [rbp + 0xa] ; ret
0x000000000017eb84 : add ah, byte ptr [rbx + 0xa] ; ret
0x0000000000041f76 : add ah, byte ptr [rcx] ; ret 0x854d
0x00000000000922bb : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x0000000000184823 : add ah, ch ; add byte ptr [rax], al ; or byte ptr [rdi - 0xd], dl ; jmp rdx
0x0000000000178b23 : add ah, ch ; add byte ptr ss:[rax], al ; call 0x1717771e
0x000000000018a123 : add ah, ch ; add qword ptr [rax], r8 ; sbb dl, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000189f23 : add ah, ch ; add qword ptr [rax], rax ; fcom st(1) ; cmc ; jmp qword ptr [rcx]
0x000000000018de23 : add ah, ch ; mov dword ptr [rcx], eax ; add byte ptr [rax], bl ; ret
0x0000000000177d23 : add ah, ch ; sub byte ptr [rax], al ; add al, bh ; ret
0x000000000018d603 : add ah, cl ; add dword ptr [rcx], 0xf6aa8800 ; call qword ptr [rax]
0x000000000018a403 : add ah, cl ; add qword ptr [r8], r8 ; or ch, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a003 : add ah, cl ; add qword ptr [r8], rax ; or cl, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000177603 : add ah, cl ; and dword ptr [rax], eax ; add byte ptr [rax - 0x56], bl ; jmp 0x177613
0x0000000000178e03 : add ah, cl ; cmp dword ptr [rax], eax ; add al, bl ; jmp 0x178e13
0x0000000000180f03 : add ah, cl ; mov edx, 0x94180000 ; sti ; call qword ptr [rax]
0x000000000018a703 : add ah, cl ; push rdx ; add dword ptr [rax], eax ; sbb cl, ch ; cmc ; jmp qword ptr [rcx]
0x0000000000187103 : add ah, cl ; sbb al, 1 ; add byte ptr [rax + 0x31], cl ; cmc ; call qword ptr [rsi]
0x0000000000176e03 : add ah, cl ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x5e], bl ; jmp 0x176e13
0x0000000000188103 : add ah, cl ; sub al, 1 ; add byte ptr [rax + 0x73], bh ; cmc ; jmp rbx
0x0000000000178a03 : add ah, cl ; xor eax, 0xe9480000 ; jmp 0x178a13
0x000000000017652b : add ah, dh ; adc byte ptr [rax], al ; add byte ptr [rax], dh ; jmp 0x17653b
0x000000000018a32b : add ah, dh ; add qword ptr [rax], r8 ; add ah, ah ; cmc ; jmp qword ptr [rcx]
0x000000000017cbd3 : add ah, dh ; and dword ptr [rax], eax ; add byte ptr [rax + 0x54], ch ; out dx, eax ; jmp qword ptr [rbx]
0x000000000019372b : add ah, dh ; loop 0x193738 ; add byte ptr [rax + 0xb], ah ; clc ; call qword ptr [rdx]
0x000000000017dd2b : add ah, dh ; mov byte ptr [rax], al ; add byte ptr [rax - 0x77], dh ; out dx, eax ; call qword ptr [rcx]
0x000000000017f92b : add ah, dh ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; nop ; and esi, eax ; jmp qword ptr [rax]
0x000000000017af90 : add ah, dh ; out dx, al ; call qword ptr [rax]
0x000000000018ab2b : add ah, dh ; push rsi ; add dword ptr [rax], eax ; xor al, dh ; cmc ; jmp qword ptr [rcx]
0x000000000019182b : add ah, dh ; ret
0x000000000019282b : add ah, dh ; rol dword ptr [rcx], cl ; add byte ptr [rax], al ; jrcxz 0x192832 ; jmp qword ptr [rax]
0x000000000018a10b : add ah, dl ; add qword ptr [rax], r8 ; add dl, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000189f0b : add ah, dl ; add qword ptr [rax], rax ; rcl cl, -0xb ; jmp qword ptr [rcx]
0x0000000000188d0b : add ah, dl ; cmp byte ptr [rcx], al ; add byte ptr [rax - 0x71], dh ; cmc ; jmp qword ptr [rsi]
0x000000000018100b : add ah, dl ; mov ebx, 0x48400000 ; int1 ; call rsp
0x000000000017af0b : add ah, dl ; pop rdx ; add byte ptr [rax], al ; mov al, -0xd ; out dx, al ; jmp qword ptr [rax]
0x000000000018200b : add ah, dl ; retf ; add byte ptr [rax], al ; mov al, 0x2b ; call qword ptr [rax]
0x000000000017720b : add ah, dl ; sbb eax, 0x7ab00000 ; jmp 0x17721b
0x000000000002a2af : add al, -0x10 ; test rax, rax ; je 0x2a2bf ; call rax
0x00000000000bfc07 : add al, -0x17 ; ret
0x0000000000042b7d : add al, -0x22 ; lea r9, qword ptr [rdx] ; jmp 0x42bd9
0x000000000004427d : add al, -0x22 ; lea r9, qword ptr [rdx] ; jmp 0x442d9
0x0000000000034427 : add al, -0x29 ; xor eax, eax ; ret
0x0000000000182a3c : add al, -0x2a ; add byte ptr [rax], al ; rcr byte ptr [rdi - 0xe] ; jmp qword ptr [rcx]
0x00000000000b3008 : add al, -0x30 ; ret
0x000000000018193c : add al, -0x3b ; add byte ptr [rax], al ; nop ; mov bh, -0xf ; jmp qword ptr [rax]
0x000000000009bdf3 : add al, -0x3d ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000010b299 : add al, -0x3e ; jmp rax
0x000000000009a199 : add al, -0x42 ; add rsi, rax ; jmp rsi
0x00000000001161c3 : add al, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000002cda8 : add al, -0x48 ; ret
0x000000000002c746 : add al, -0x4e ; mov eax, dword ptr [rdi + rax] ; ret
0x000000000002d472 : add al, -0x5e ; add rdx, rax ; jmp rdx
0x000000000015fa84 : add al, -0x67 ; lock push qword ptr [rdx + rbx*4 - 0x10] ; call rsp
0x0000000000045eaa : add al, -0x70 ; add rax, qword ptr [rbp - 0x4b8] ; jmp rax
0x0000000000051063 : add al, -0x70 ; add rax, r12 ; jmp rax
0x0000000000194c13 : add al, -0x72 ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x000000000009d0e7 : add al, -0x75 ; adc byte ptr [rcx], bh ; jne 0x9d0e8 ; ret
0x0000000000092314 : add al, -0x75 ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000e9679 : add al, -0x75 ; and al, 0xc ; add rsp, 0x18 ; ret
0x0000000000020348 : add al, -0x75 ; cmp al, 0x24 ; add rsp, 0x28 ; jmp rax
0x000000000009bbc8 : add al, -0x75 ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x000000000004f020 : add al, -0x75 ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000008f5b2 : add al, -0x76 ; add r10, rax ; jmp r10
0x000000000009a37b : add al, -0x76 ; je 0x9a365 ; ret
0x000000000008f567 : add al, -0x77 ; cld ; mov rax, rdi ; ret
0x00000000000c5d04 : add al, -0x77 ; ret
0x00000000001443f6 : add al, -0x78 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000009232b : add al, -0x78 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000000aec02 : add al, -0x79 ; add rdi, r8 ; jmp rdi
0x0000000000110920 : add al, -0x79 ; add rdi, rax ; jmp rdi
0x000000000009bbde : add al, -0x79 ; test r8d, r8d ; jne 0x9bbb8 ; ret
0x0000000000042601 : add al, -0x7a ; add rax, rsi ; jmp rax
0x000000000004f2b5 : add al, -0x7b ; fild dword ptr [rcx + 0xf] ; lahf ; ret 0x8e0f
0x000000000009a412 : add al, -0x7b ; leave ; mov dword ptr [rdx], ecx ; jne 0x9a410 ; ret
0x000000000009beee : add al, -0x7b ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000f8009 : add al, -0x7c ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0xf7fde
0x000000000008d1d8 : add al, -0x7c ; leave ; jne 0x8d1b3 ; mov rax, rdi ; ret
0x0000000000071432 : add al, -0x7d ; loop 0x7143d ; mov eax, edx ; ret
0x0000000000073624 : add al, -0x7d ; loopne 0x7362d ; ret
0x000000000004f7fe : add al, -0x7d ; ret
0x000000000008f4ea : add al, -0x7e ; add r10, rax ; jmp r10
0x00000000000688cc : add al, -0x7e ; add rax, rdx ; jmp rax
0x00000000000209be : add al, -0x7e ; add rdx, rax ; jmp rdx
0x000000000009a378 : add al, -0x7e ; sub eax, dword ptr [rdx + rcx*4] ; je 0x9a368 ; ret
0x0000000000087f17 : add al, -0x7e ; sub eax, ecx ; ret
0x00000000000690f2 : add al, -0x7f ; add rcx, rax ; jmp rcx
0x000000000009a3c3 : add al, -0x7f ; je 0x9a3a5 ; ret
0x000000000012009b : add al, -0x7f ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000009a3bf : add al, -0x7f ; sub eax, dword ptr [rcx + r8*4] ; je 0x9a3a9 ; ret
0x0000000000121973 : add al, -0x7f ; sub eax, edx ; ret
0x0000000000085689 : add al, -0xa ; ret 0x7408
0x0000000000171c9d : add al, -0xd ; call rax
0x0000000000134bc3 : add al, -0xd ; movq qword ptr [rdi], mm1 ; ret
0x0000000000067adb : add al, -0xd ; ret
0x000000000017166d : add al, -0xf ; jmp qword ptr [rax]
0x000000000016e3e1 : add al, -5 ; inc dword ptr [rax + 5] ; sti ; call qword ptr [rax]
0x0000000000172c15 : add al, -9 ; jmp qword ptr [rax]
0x0000000000025661 : add al, 0 ; add bh, dh ; ret 0
0x0000000000065b08 : add al, 0 ; add byte ptr [rax + 0xf], cl ; ret 0xba66
0x00000000000eeef7 : add al, 0 ; add byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000065a29 : add al, 0 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax + 0xf] ; ret 0xba66
0x0000000000041e93 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000f3e23 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011e96d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001234b9 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e991 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011d606 : add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000049f8 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3b
0x00000000000e7360 : add al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000009b5a3 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000011099b : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000006704f : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000029f24 : add al, 0 ; add byte ptr [rbx + rcx*4 + 0xd], al ; ret 0x378d
0x00000000000d334e : add al, 0 ; add byte ptr [rbx - 0x7bf00220], al ; ret
0x00000000000d0413 : add al, 0 ; add byte ptr [rcx], bh ; ret 0xf74
0x00000000000f03c5 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x0000000000043ca5 : add al, 0 ; add cl, ch ; ret
0x00000000000c975d : add al, 0 ; add dh, dh ; ret 0xf08
0x000000000008f6b4 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000008f624 : add al, 0 ; mov rax, rdi ; ret
0x0000000000040641 : add al, 0x10 ; add bl, dh ; ret
0x000000000009d964 : add al, 0x10 ; pop r14 ; pop r15 ; ret
0x0000000000037db6 : add al, 0x11 ; pop r14 ; pop r15 ; ret
0x000000000009a23d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000eb94b : add al, 0x16 ; ret
0x00000000000903f1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00000000000814fa : add al, 0x17 ; sub eax, ecx ; ret
0x000000000018733c : add al, 0x1f ; add dword ptr [rax], eax ; xor byte ptr [rcx], bh ; cmc ; call qword ptr [rcx]
0x00000000001151da : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000006a702 : add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x4375
0x000000000008cbd0 : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000010f879 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000dab2d : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000000eaee4 : add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000eaf45 : add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000010002b : add al, 0x24 ; call rax
0x000000000007e92e : add al, 0x24 ; je 0x7e9f8 ; call rax
0x000000000009bc33 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002060a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e8243 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x000000000002005c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002d10b : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000002dbf4 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x0000000000099469 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009947b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000839ee : add al, 0x31 ; ret
0x0000000000101fd4 : add al, 0x31 ; ror byte ptr [rax - 0x7d], -0x3c ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000838ea : add al, 0x37 ; ret
0x00000000000c58df : add al, 0x39 ; ret 0xec7f
0x000000000006ea2f : add al, 0x3a ; ret
0x00000000000200db : add al, 0x48 ; add edi, ebp ; call rax
0x00000000000d9f63 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008f6c5 : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000008f6d5 : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000097a0b : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000008f675 : add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x0000000000103b0e : add al, 0x48 ; lea eax, dword ptr [rdi + rsi + 8] ; ret
0x00000000001443f9 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000014440b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x000000000006e6f3 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000006c988 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x000000000013485a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000006d46c : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000006d612 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000006e344 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000008f635 : add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000008f5c5 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000081cc4 : add al, 0x48 ; xor eax, eax ; ret
0x000000000009c6f0 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x000000000018a13c : add al, 0x4d ; add dword ptr [rax], eax ; xor dl, ah ; cmc ; jmp qword ptr [rcx]
0x00000000000f1469 : add al, 0x4e ; lea esp, dword ptr [rbx + rcx] ; jmp 0xf1482
0x00000000000f4344 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000018a53c : add al, 0x51 ; add dword ptr [rax], eax ; jo 0x18a52f ; cmc ; jmp qword ptr [rcx]
0x00000000000c5e09 : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000a837b : add al, 0x5b ; ret
0x000000000018be47 : add al, 0x5c ; ret
0x00000000000a892a : add al, 0x60 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000177d3f : add al, 0x60 ; ret
0x0000000000177c9f : add al, 0x63 ; ret
0x0000000000144407 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009234c : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000194357 : add al, 0x66 ; ret
0x000000000002c75d : add al, 0x72 ; or bl, dh ; ret
0x00000000000c2595 : add al, 0x74 ; pop rax ; cmp al, 0x11 ; je 0xc25a9 ; xor eax, eax ; ret
0x00000000000c8a4c : add al, 0x75 ; mov cl, -0x75 ; pop rax ; or bh, dh ; ret
0x0000000000103656 : add al, 0x75 ; push rdi ; test edx, edx ; jne 0x103698 ; ret
0x000000000009b652 : add al, 0x75 ; ret
0x00000000000df2a2 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000002cb20 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002cb40 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002ca80 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002cb00 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002ca20 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002cac0 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002ca60 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002caa0 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002cbc0 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002ca40 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002cae0 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002ca00 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x000000000017d89f : add al, 0x79 ; ret
0x0000000000180567 : add al, 0x7b ; ret
0x00000000000c257f : add al, 0x7c ; out dx, al ; ret
0x00000000000eb719 : add al, 0xa ; ret
0x000000000002ca25 : add al, 0xf ; mov bh, -0x40 ; ret
0x000000000011e1ad : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000123a1b : add al, 0xf ; sub rax, r8 ; ret
0x00000000000d643a : add al, 0xf ; test byte ptr [rsi - 0x76000003], cl ; ret 0xdb31
0x000000000009b125 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x0000000000095e2b : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x0000000000068485 : add al, 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000c136c : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009b158 : add al, 1 ; add byte ptr [rax], al ; ret
0x0000000000067a90 : add al, 1 ; ret
0x0000000000067afa : add al, 1 ; xor eax, eax ; ret
0x0000000000174299 : add al, 2 ; add al, al ; jo 0x17429e ; jmp qword ptr [rax]
0x000000000019563c : add al, 2 ; add al, byte ptr [rax] ; loopne 0x1956be ; clc ; call rcx
0x000000000000a718 : add al, 2 ; add byte ptr [rax], al ; and al, byte ptr [rax] ; or al, 0 ; push rax ; ret
0x0000000000195875 : add al, 2 ; add byte ptr [rax], cl ; jnp 0x195879 ; jmp qword ptr [rsi]
0x00000000001742c1 : add al, 2 ; add byte ptr [rax], dl ; jbe 0x1742c6 ; call qword ptr [rax]
0x000000000018f837 : add al, 2 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000001862df : add al, 2 ; jle 0x1862f1 ; ret
0x000000000018f447 : add al, 2 ; pop rdi ; ret
0x00000000001850d7 : add al, 2 ; ret
0x000000000017cca8 : add al, 2 ; ret 0xe0a
0x0000000000148ae7 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000004b7 : add al, 4 ; ret 0x6080
0x000000000001ce59 : add al, 7 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x39
0x000000000001cc91 : add al, 7 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x39
0x0000000000095f78 : add al, 7 ; add byte ptr [rax], al ; ret
0x000000000007fecd : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000002c749 : add al, 7 ; ret
0x000000000008f79f : add al, 7 ; test r8b, r8b ; jne 0x8f788 ; ret
0x0000000000072ed3 : add al, 8 ; add byte ptr [rax], al ; ret
0x000000000009055f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000000a8243 : add al, 8 ; ret
0x000000000009a2c3 : add al, 9 ; pop rbx ; div esi ; mov eax, eax ; ret
0x00000000001739ab : add al, ah ; clc ; call qword ptr [rax]
0x0000000000173903 : add al, ah ; clc ; call rax
0x0000000000173fc3 : add al, ah ; cli ; clc ; call rax
0x000000000017940f : add al, ah ; cli ; jmp qword ptr [rcx]
0x00000000001720ab : add al, ah ; hlt ; jmp qword ptr [rax]
0x0000000000170403 : add al, ah ; in al, dx ; call qword ptr [rax]
0x0000000000171763 : add al, ah ; int1 ; call rax
0x0000000000173c2b : add al, ah ; ja 0x173c2b ; call rax
0x0000000000170573 : add al, ah ; jae 0x170567 ; call qword ptr [rax]
0x00000000001794ff : add al, ah ; jb 0x1794f3 ; call rsi
0x0000000000178d8f : add al, ah ; jmp 0x178d97
0x0000000000178dbf : add al, ah ; jmp 0x178dc7
0x0000000000178def : add al, ah ; jmp 0x178df7
0x000000000019551f : add al, ah ; jne 0x19551f ; call qword ptr [rdi]
0x000000000019563f : add al, ah ; jne 0x19563f ; call rcx
0x000000000019290f : add al, ah ; jrcxz 0x19290e ; call qword ptr [rbx]
0x0000000000174d5b : add al, ah ; js 0x174d5d ; jmp rax
0x000000000017116b : add al, ah ; lock ; jmp qword ptr [rax]
0x0000000000173e1b : add al, ah ; lodsd eax, dword ptr [rsi] ; clc ; call rax
0x0000000000174d93 : add al, ah ; mov edi, edx ; call rax
0x0000000000172603 : add al, ah ; out dx, eax ; cmc ; jmp rax
0x0000000000174b1b : add al, ah ; push rbp ; cli ; call qword ptr [rax]
0x000000000000cd77 : add al, ah ; ret
0x000000000000e0c7 : add al, ah ; ret 0x11
0x000000000001ce5f : add al, ah ; ret 0x39
0x0000000000171b93 : add al, ah ; ret 0xfff2
0x0000000000191e9f : add al, ah ; ret 0xfff7
0x000000000019239f : add al, ah ; sal edi, 1 ; jmp qword ptr [rax]
0x0000000000174e2b : add al, ah ; test al, -6 ; call qword ptr [rax]
0x0000000000171403 : add al, ah ; test esi, eax ; jmp rax
0x000000000017e1ef : add al, ah ; xchg eax, ebx ; out dx, eax ; jmp qword ptr [rax]
0x00000000001938bf : add al, al ; adc bh, al ; call qword ptr [rdx]
0x0000000000172d13 : add al, al ; adc dh, bh ; call rax
0x0000000000171c9b : add al, al ; add al, -0xd ; call rax
0x000000000017166b : add al, al ; add al, -0xf ; jmp qword ptr [rax]
0x00000000001716d3 : add al, al ; and dh, cl ; jmp qword ptr [rax]
0x0000000000170d9b : add al, al ; call 0xffffffffc3280d97
0x0000000000172503 : add al, al ; cmc ; jmp qword ptr [rax]
0x000000000018787f : add al, al ; cmc ; jmp qword ptr [rcx]
0x00000000001724f3 : add al, al ; cmp ebp, esi ; jmp qword ptr [rax]
0x000000000018a3bf : add al, al ; in al, -0xb ; jmp qword ptr [rcx]
0x0000000000171f43 : add al, al ; in eax, dx ; call qword ptr [rax]
0x0000000000170963 : add al, al ; in eax, dx ; call rax
0x000000000018c49f : add al, al ; jg 0x18c49d ; jmp qword ptr [rsi]
0x000000000018838f : add al, al ; jge 0x18838c ; call rdx
0x000000000017d6cf : add al, al ; jno 0x17d6c6 ; jmp rax
0x000000000017429b : add al, al ; jo 0x17429c ; jmp qword ptr [rax]
0x00000000001720db : add al, al ; pop rax ; hlt ; jmp rax
0x000000000001d087 : add al, al ; ret
0x000000000017369b : add al, al ; ret 0xfff7
0x0000000000174dd3 : add al, al ; sahf ; cli ; call rax
0x0000000000189f0f : add al, al ; sal ebp, 1 ; jmp qword ptr [rcx]
0x0000000000174e93 : add al, al ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x000000000017185b : add al, al ; stosb byte ptr [rdi], al ; int1 ; jmp rax
0x00000000001866ff : add al, al ; stosd dword ptr [rdi], eax ; hlt ; jmp qword ptr [rcx]
0x000000000017069b : add al, al ; test ch, ah ; jmp rax
0x0000000000173243 : add al, al ; xchg bh, dh ; call rax
0x000000000017e05f : add al, al ; xchg eax, edx ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017083b : add al, al ; xor al, 0xffffffffffffffed ; jmp qword ptr [rax]
0x0000000000183fef : add al, al ; xor dh, bl ; call qword ptr [rdx]
0x0000000000193039 : add al, bh ; call qword ptr [rbx]
0x0000000000193021 : add al, bh ; call qword ptr [rcx]
0x0000000000187bf7 : add al, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000190137 : add al, bh ; jo 0x190136 ; jmp qword ptr [rcx]
0x0000000000192817 : add al, bh ; loop 0x192816 ; jmp qword ptr [rax]
0x000000000001d12f : add al, bh ; ret
0x000000000001cea7 : add al, bh ; ret 0x39
0x00000000001810e7 : add al, bh ; sub edx, edi ; jmp qword ptr [rdi]
0x000000000018b8c7 : add al, bh ; sub esi, esi ; call rdi
0x0000000000176617 : add al, bh ; xor ebp, ebx ; call qword ptr [rdx]
0x000000000018f497 : add al, bl ; cmp bh, dh ; jmp qword ptr [rdi]
0x000000000018f537 : add al, bl ; cmp edi, esi ; jmp rax
0x000000000018c4b7 : add al, bl ; jg 0x18c4b5 ; jmp qword ptr [rsi]
0x0000000000178da7 : add al, bl ; jmp 0x178daf
0x0000000000178dd7 : add al, bl ; jmp 0x178ddf
0x0000000000178e07 : add al, bl ; jmp 0x178e0f
0x00000000000c540e : add al, bl ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000009627b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000001d0cf : add al, bl ; ret
0x000000000001ce47 : add al, bl ; ret 0x39
0x0000000000189f27 : add al, bl ; sal ebp, 1 ; jmp qword ptr [rcx]
0x0000000000126ad2 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000174d79 : add al, byte ptr [r8] ; mov al, -0x7e ; cli ; jmp rax
0x000000000007fe31 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x00000000001747d2 : add al, byte ptr [rax] ; adc byte ptr [rax], cl ; cli ; call qword ptr [rax]
0x0000000000174af2 : add al, byte ptr [rax] ; adc byte ptr [rbx - 6], dl ; jmp rax
0x00000000001742c2 : add al, byte ptr [rax] ; adc byte ptr [rsi - 7], dh ; call qword ptr [rax]
0x00000000001746aa : add al, byte ptr [rax] ; add al, ch ; stc ; call qword ptr [rax]
0x0000000000174f8a : add al, byte ptr [rax] ; add bh, cl ; cli ; call qword ptr [rax]
0x0000000000025655 : add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x000000000002cb77 : add al, byte ptr [rax] ; add bl, dh ; ret
0x00000000000e8246 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5f], bl ; call rax
0x0000000000084ba3 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000008b87e : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000007b487 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000a9320 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011eb0d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000bd9e1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000121731 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011eb31 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000040b66 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], -0x3a ; jmp qword ptr [rax]
0x000000000017478a : add al, byte ptr [rax] ; add byte ptr [rax], -6 ; call qword ptr [rax]
0x000000000010efcf : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x000000000011151f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000110c7f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x00000000000629ef : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x5ecf6
0x00000000000e52a2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000109f24 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000b8052 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000011315d : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000010e920 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbp ; call 0x10abd9
0x00000000001151dc : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000ea415 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000009b583 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000b374a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000006dcc0 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000034c29 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000014b2f4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000bd962 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], al ; ret 0x870f
0x00000000000ed9e3 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000000aacb9 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; shr bl, cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x8d4c
0x000000000017421a : add al, byte ptr [rax] ; add byte ptr [rdi - 7], dl ; jmp qword ptr [rax]
0x000000000000a719 : add al, byte ptr [rax] ; add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; push rax ; ret
0x00000000000086d9 : add al, byte ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret
0x000000000019554e : add al, byte ptr [rax] ; add byte ptr [rsi - 8], dh ; call qword ptr [rax]
0x00000000000d4b1c : add al, byte ptr [rax] ; add dh, dh ; ret 0xf01
0x000000000004fc10 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x0000000000174a62 : add al, byte ptr [rax] ; and byte ptr [rbx - 6], al ; jmp rax
0x000000000017488a : add al, byte ptr [rax] ; and byte ptr [rdx], 0xfa ; call qword ptr [rax]
0x0000000000174ffa : add al, byte ptr [rax] ; and ch, dl ; cli ; call rax
0x00000000001749d2 : add al, byte ptr [rax] ; cmp byte ptr [rbx], -6 ; call rax
0x000000000017499a : add al, byte ptr [rax] ; cmp edx, edi ; call qword ptr [rax]
0x000000000017427a : add al, byte ptr [rax] ; insb byte ptr [rdi], dx ; stc ; jmp rax
0x00000000001745ea : add al, byte ptr [rax] ; jo 0x1745bc ; stc ; call qword ptr [rax]
0x00000000001746ea : add al, byte ptr [rax] ; jo 0x1746e6 ; stc ; jmp qword ptr [rax]
0x0000000000174782 : add al, byte ptr [rax] ; jo 0x17478a ; stc ; call rax
0x000000000019568e : add al, byte ptr [rax] ; jo 0x19570e ; clc ; call rdi
0x00000000001956f6 : add al, byte ptr [rax] ; jp 0x1956f8 ; call qword ptr [rdi]
0x000000000008f695 : add al, byte ptr [rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000174c9a : add al, byte ptr [rax] ; lock cli ; jmp rax
0x0000000000174882 : add al, byte ptr [rax] ; lock sbb bh, dl ; jmp rax
0x000000000017457a : add al, byte ptr [rax] ; loopne 0x174544 ; stc ; jmp qword ptr [rax]
0x0000000000174972 : add al, byte ptr [rax] ; loopne 0x1749b0 ; cli ; jmp rax
0x0000000000174b1a : add al, byte ptr [rax] ; loopne 0x174b78 ; cli ; call qword ptr [rax]
0x0000000000174d92 : add al, byte ptr [rax] ; loopne 0x174d26 ; cli ; call rax
0x0000000000174e2a : add al, byte ptr [rax] ; loopne 0x174ddb ; cli ; call qword ptr [rax]
0x0000000000174d5a : add al, byte ptr [rax] ; loopne 0x174ddb ; cli ; jmp rax
0x0000000000174d59 : add al, byte ptr [rax] ; loopne 0x174ddc ; cli ; jmp rax
0x000000000019551e : add al, byte ptr [rax] ; loopne 0x19559c ; clc ; call qword ptr [rdi]
0x000000000019563e : add al, byte ptr [rax] ; loopne 0x1956bc ; clc ; call rcx
0x000000000017469a : add al, byte ptr [rax] ; mov al, -0x19 ; stc ; jmp rax
0x00000000001743fa : add al, byte ptr [rax] ; mov al, -0x68 ; stc ; call qword ptr [rax]
0x00000000001743c2 : add al, byte ptr [rax] ; mov al, -0x6c ; stc ; jmp rax
0x0000000000174d7a : add al, byte ptr [rax] ; mov al, -0x7e ; cli ; jmp rax
0x0000000000174b0a : add al, byte ptr [rax] ; mov al, 0x55 ; cli ; jmp rax
0x000000000017428a : add al, byte ptr [rax] ; mov al, 0x6f ; stc ; call rax
0x00000000000733e1 : add al, byte ptr [rax] ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008f605 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x00000000001477fb : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000174a92 : add al, byte ptr [rax] ; nop ; cli ; jmp qword ptr [rax]
0x00000000001743ea : add al, byte ptr [rax] ; nop ; cwde ; stc ; jmp rax
0x000000000017475a : add al, byte ptr [rax] ; nop ; sti ; stc ; jmp rax
0x0000000000174e1a : add al, byte ptr [rax] ; nop ; test al, -6 ; jmp rax
0x000000000017494a : add al, byte ptr [rax] ; nop ; xor al, 0xfffffffffffffffa ; call qword ptr [rax]
0x0000000000195876 : add al, byte ptr [rax] ; or byte ptr [rbx - 8], bh ; jmp qword ptr [rsi]
0x00000000000fd299 : add al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e6d62 : add al, byte ptr [rax] ; pop rbx ; ret
0x00000000001748e2 : add al, byte ptr [rax] ; push rax ; sub edi, edx ; jmp qword ptr [rax]
0x0000000000174372 : add al, byte ptr [rax] ; push rax ; xchg eax, ecx ; stc ; call qword ptr [rax]
0x0000000000174382 : add al, byte ptr [rax] ; push rax ; xchg eax, edx ; stc ; jmp rax
0x000000000017463a : add al, byte ptr [rax] ; rcr al ; stc ; jmp rax
0x000000000017423a : add al, byte ptr [rax] ; shl byte ptr [rbx - 7], 1 ; jmp rax
0x0000000000174802 : add al, byte ptr [rax] ; xor byte ptr [rdi], cl ; cli ; jmp qword ptr [rax]
0x000000000017464a : add al, byte ptr [rax] ; xor cl, bl ; stc ; jmp qword ptr [rax]
0x0000000000107c8c : add al, byte ptr [rbx + 0x5d4101e8] ; pop r14 ; ret
0x00000000000a9595 : add al, byte ptr [rbx - 0x50f0fe16] ; ret 0x8941
0x00000000000c5d0c : add al, byte ptr [rbx - 0x76bef71d] ; ret 0xceb
0x00000000000a8cd6 : add al, byte ptr [rcx + 0x29] ; ret
0x00000000000f49fe : add al, byte ptr [rcx + 0x39] ; ret
0x0000000000176ae0 : add al, byte ptr [rcx + 0xa] ; ret
0x00000000000d315a : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8944
0x00000000001038f4 : add al, byte ptr [rcx - 0x77] ; add byte ptr [rcx + 0x11894dd0], cl ; ret
0x000000000001cca9 : add al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x39
0x000000000019563d : add al, byte ptr [rdx] ; add al, ah ; jne 0x195641 ; call rcx
0x0000000000174279 : add al, byte ptr [rdx] ; add byte ptr [rax + 0x6c], al ; stc ; jmp rax
0x000000000019568d : add al, byte ptr [rdx] ; add byte ptr [rax + 0x77], dh ; clc ; call rdi
0x00000000001956f5 : add al, byte ptr [rdx] ; add byte ptr [rax + 0x7a], cl ; clc ; call qword ptr [rdi]
0x00000000000086d8 : add al, byte ptr [rdx] ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret
0x0000000000055fbd : add al, byte ptr [rdx] ; add byte ptr [rbx - 0x76be0008], al ; ret 0x850f
0x0000000000179d6e : add al, byte ptr [rdx] ; mov dl, 0xa ; ret
0x00000000001872f5 : add al, byte ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000017bfd5 : add al, byte ptr [rdx] ; pop rbp ; ret
0x000000000006aabf : add al, byte ptr [rip + 0x5b000000] ; ret
0x00000000001957cd : add al, byte ptr [rsi + rcx + 0x10] ; ret
0x000000000009607a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000016f2d4 : add al, byte ptr [rsp + rdi*8 - 0x37c6d01] ; jmp qword ptr [rdx]
0x0000000000174889 : add al, byte ptr cs:[rax] ; and byte ptr [rdx], 0xfa ; call qword ptr [rax]
0x0000000000174881 : add al, byte ptr cs:[rax] ; lock sbb bh, dl ; jmp rax
0x0000000000174b19 : add al, byte ptr ds:[rax] ; loopne 0x174b79 ; cli ; call qword ptr [rax]
0x0000000000174b09 : add al, byte ptr ds:[rax] ; mov al, 0x55 ; cli ; jmp rax
0x00000000001749d1 : add al, byte ptr ss:[rax] ; cmp byte ptr [rbx], -6 ; call rax
0x00000000000bae3e : add al, ch ; cmp al, 0x50 ; cld ; dec dword ptr [rax - 0x77] ; ret 0x1deb
0x00000000000c4e41 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000179287 : add al, ch ; in al, dx ; call rdi
0x000000000017a1f7 : add al, ch ; in eax, dx ; call rdi
0x000000000018a317 : add al, ch ; jrcxz 0x18a314 ; jmp qword ptr [rcx]
0x00000000000db690 : add al, ch ; lcall 0x85fffff8, -0x7640 ; ret
0x000000000018a0f7 : add al, ch ; loope 0x18a0f4 ; jmp qword ptr [rcx]
0x00000000000d799a : add al, ch ; nop ; cmc ; dec dword ptr [rcx - 0x77] ; ret 0x894c
0x000000000018ee57 : add al, ch ; or al, 0xfffffffffffffff7 ; call qword ptr [rax]
0x000000000017b637 : add al, ch ; or ebp, edi ; call qword ptr [rax]
0x000000000018a587 : add al, ch ; out -0xb, al ; jmp qword ptr [rcx]
0x0000000000181057 : add al, ch ; outsd dx, dword ptr [rsi] ; int1 ; jmp rbx
0x00000000000b30dd : add al, ch ; pop rbp ; ret
0x00000000000c4a3a : add al, ch ; push rax ; stosb byte ptr [rdi], al ; cmc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000bb7a9 : add al, ch ; rcr edx, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001844e7 : add al, ch ; rep ; jmp qword ptr [rcx]
0x000000000001d0ff : add al, ch ; ret
0x000000000001ce77 : add al, ch ; ret 0x39
0x0000000000020bb8 : add al, ch ; ret 0x5f2
0x000000000001fb68 : add al, ch ; ret 0x7a4
0x000000000006bf08 : add al, ch ; ret 0x88a
0x0000000000114258 : add al, ch ; ret 0xf190
0x00000000000b8138 : add al, ch ; ret 0xfc99
0x000000000003f868 : add al, ch ; ret 0xfed0
0x00000000001122c8 : add al, ch ; ret 0xffe2
0x00000000000e3251 : add al, ch ; ret 0xfff3
0x000000000010d866 : add al, ch ; ret 0xfff5
0x000000000002c958 : add al, ch ; ret 9
0x00000000000bbf24 : add al, ch ; sar edi, cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c808c : add al, ch ; scasb al, byte ptr [rdi] ; jae 0xc808e ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001746ac : add al, ch ; stc ; call qword ptr [rax]
0x00000000000b778f : add al, ch ; std ; sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000006996f : add al, ch ; stosd dword ptr [rdi], eax ; ret 0
0x000000000017c0e7 : add al, ch ; sub ch, bh ; jmp qword ptr [rdx]
0x00000000000a8920 : add al, ch ; sub dl, byte ptr [rax + 7] ; add byte ptr [rax - 0x39], cl ; ret 0x400
0x00000000000e30a9 : add al, ch ; xchg eax, ecx ; ret
0x00000000000f2584 : add al, ch ; xchg eax, esi ; lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000040596 : add al, ch ; xchg eax, esp ; ret
0x00000000000b77c6 : add al, ch ; xor al, 0xfffffffffffffffd ; sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000018a4c7 : add al, cl ; in eax, -0xb ; jmp qword ptr [rcx]
0x000000000017e8a0 : add al, cl ; out dx, eax ; call qword ptr [rsi]
0x000000000001d09f : add al, cl ; ret
0x0000000000189a37 : add al, cl ; ret 0xfff5
0x0000000000185077 : add al, cl ; sal ebx, 1 ; jmp rdx
0x0000000000190ba7 : add al, cl ; test dh, bh ; jmp qword ptr [rbx]
0x00000000001726a3 : add al, dh ; adc al, -0xa ; call rax
0x000000000017400b : add al, dh ; add ecx, edi ; jmp rax
0x0000000000173b53 : add al, dh ; clc ; call qword ptr [rax]
0x0000000000174c9b : add al, dh ; cli ; jmp rax
0x000000000018a3ef : add al, dh ; in al, -0xb ; jmp qword ptr [rcx]
0x000000000017891f : add al, dh ; in eax, -0x15 ; jmp rsp
0x000000000018c4cf : add al, dh ; jg 0x18c4cd ; jmp qword ptr [rsi]
0x00000000001882ff : add al, dh ; jl 0x1882fc ; call qword ptr [rbx]
0x00000000001712c3 : add al, dh ; jo 0x1712bb ; call rax
0x000000000016feb3 : add al, dh ; mov ah, -0x15 ; jmp rax
0x0000000000171f13 : add al, dh ; mov bh, -0xd ; call qword ptr [rax]
0x000000000017052b : add al, dh ; outsb dx, byte ptr [rsi] ; in al, dx ; call rax
0x0000000000176f9f : add al, dh ; pop rsi ; jmp 0x176fa7
0x000000000001d117 : add al, dh ; ret
0x000000000001ce8f : add al, dh ; ret 0x39
0x0000000000173e93 : add al, dh ; ret 0xfff8
0x0000000000174883 : add al, dh ; sbb bh, dl ; jmp rax
0x00000000001741b3 : add al, dh ; stc ; jmp qword ptr [rax]
0x0000000000173203 : add al, dh ; test dh, bh ; jmp rax
0x000000000016fe13 : add al, dh ; xchg bl, ch ; jmp qword ptr [rax]
0x0000000000174103 : add al, dh ; xor bh, cl ; call qword ptr [rax]
0x000000000019449f : add al, dl ; and al, bh ; jmp qword ptr [rcx]
0x0000000000173a2b : add al, dl ; clc ; call qword ptr [rax]
0x00000000001739d3 : add al, dl ; clc ; call rax
0x0000000000186b1f : add al, dl ; cmc ; hlt ; call qword ptr [rbx]
0x000000000017026b : add al, dl ; cmp al, -0x14 ; call qword ptr [rax]
0x000000000017463b : add al, dl ; fdivr st(1) ; jmp rax
0x00000000001702cb : add al, dl ; in al, dx ; jmp rax
0x000000000017137b : add al, dl ; jns 0x171373 ; jmp rax
0x00000000001721ab : add al, dl ; jns 0x1721a7 ; call rax
0x000000000018a2ff : add al, dl ; jrcxz 0x18a2fc ; jmp qword ptr [rcx]
0x0000000000171113 : add al, dl ; lock ; call qword ptr [rax]
0x000000000017297b : add al, dl ; mov ah, -0xa ; jmp qword ptr [rax]
0x0000000000174eeb : add al, dl ; mov ah, -6 ; call rax
0x000000000018dacf : add al, dl ; mov bl, -0xa ; call qword ptr [rcx]
0x00000000001889af : add al, dl ; mov ebp, esi ; jmp qword ptr [rcx]
0x0000000000171433 : add al, dl ; mov esi, eax ; jmp qword ptr [rax]
0x0000000000172cb3 : add al, dl ; or al, 0xfffffffffffffff7 ; jmp rax
0x000000000018a56f : add al, dl ; out -0xb, al ; jmp qword ptr [rcx]
0x000000000018aacf : add al, dl ; out dx, eax ; cmc ; jmp qword ptr [rcx]
0x0000000000182a3f : add al, dl ; pop rdi ; jmp qword ptr [rcx]
0x00000000001717eb : add al, dl ; pop rsi ; int1 ; call rax
0x00000000001844cf : add al, dl ; rep ; jmp qword ptr [rcx]
0x00000000000051ff : add al, dl ; ret
0x000000000001ce2f : add al, dl ; ret 0x39
0x000000000000a707 : add al, dl ; ret 0xd
0x0000000000175423 : add al, dl ; sar ebp, 1 ; jmp qword ptr [rax]
0x0000000000172de3 : add al, dl ; sbb esi, edi ; jmp qword ptr [rax]
0x0000000000171e1b : add al, dl ; test dh, bl ; jmp qword ptr [rax]
0x000000000016ea8d : add bh, ah ; jmp qword ptr [rax]
0x00000000001036b6 : add bh, al ; adc spl, r15b ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000c13dd : add bh, al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011d2f7 : add bh, bh ; adc byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000014cdaf : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000010e41c : add bh, bh ; loope 0x10e3b5 ; ret
0x000000000011d35f : add bh, bh ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000a7a85 : add bh, bh ; ret
0x000000000016ea44 : add bh, bh ; sti ; jmp rax
0x000000000016e3d5 : add bh, bl ; call rax
0x00000000000daac2 : add bh, byte ptr [rax + 0x16] ; jbe 0xdaad9 ; ret
0x00000000000d499c : add bh, byte ptr [rax + 0xf] ; je 0xd49b9 ; ret
0x0000000000044460 : add bh, byte ptr [rax + 1] ; ret
0x00000000000e81cb : add bh, byte ptr [rax - 1] ; pop rbx ; pop rbp ; ret
0x0000000000033acb : add bh, byte ptr [rax - 1] ; ret
0x000000000014b6c2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000001862e0 : add bh, byte ptr [rsi + 0xa] ; ret
0x0000000000174f8c : add bh, cl ; cli ; call qword ptr [rax]
0x00000000000fda7c : add bh, dh ; fsubr st(1) ; ret 0xfffd
0x00000000000c54b5 : add bh, dh ; ret
0x0000000000025663 : add bh, dh ; ret 0
0x0000000000025657 : add bh, dh ; ret 0xf800
0x000000000017008c : add bh, dl ; jmp 0x170092
0x000000000009b2a0 : add bl, al ; lea rax, qword ptr [rip + 0xabeb7] ; ret
0x000000000009be44 : add bl, al ; lea rax, qword ptr [rip + 0xaf893] ; ret
0x0000000000084e94 : add bl, al ; lea rax, qword ptr [rip + 0xc50d3] ; ret
0x00000000000b9dac : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000b8cdc : add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00000000000dfffd : add bl, al ; nop ; xor eax, eax ; ret
0x00000000000c23e1 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000346db : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000007fb9c : add bl, al ; ret
0x0000000000110dfe : add bl, al ; xor eax, eax ; ret
0x0000000000162397 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x00000000000bc633 : add bl, byte ptr [r11 + 0x5d] ; ret
0x0000000000177535 : add bl, byte ptr [rax + 0xa] ; ret
0x0000000000189729 : add bl, byte ptr [rbp + 0x283100e] ; ret
0x000000000018c39d : add bl, byte ptr [rbp + 0xa] ; ret
0x0000000000103799 : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bc634 : add bl, byte ptr [rbx + 0x5d] ; ret
0x000000000017bfdf : add bl, byte ptr [rcx + 0xa] ; ret
0x000000000017d715 : add bl, byte ptr [rdx + 0xa] ; ret
0x00000000000e2741 : add bl, byte ptr [rsi + rax*8 + 0x42] ; add dword ptr [rax + rcx*2 - 0x7d], ebx ; ret 0xe902
0x000000000016ede8 : add bl, byte ptr [rsp + rdi*8 - 1] ; xchg eax, edx ; pop rbx ; cld ; jmp qword ptr [rdx]
0x00000000000c32a9 : add bl, ch ; ret 0x1f0f
0x000000000007a22f : add bl, ch ; ret 0x8d48
0x0000000000173ecc : add bl, cl ; clc ; call rax
0x000000000009662f : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009663f : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000001fd8f : add bl, dh ; ret
0x000000000003177e : add bl, sil ; ret
0x0000000000183953 : add byte ptr [0x18180000], bl ; call rdi
0x0000000000177953 : add byte ptr [0xffffffffbd680000], bl ; jmp 0x177963
0x000000000007ebe2 : add byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x00000000000b8e67 : add byte ptr [r13 + rbp - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000102c21 : add byte ptr [r8 + 1], r9b ; ret
0x000000000006af41 : add byte ptr [r8 - 0x77], r9b ; ret 0x894c
0x00000000000b5924 : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000d87f2 : add byte ptr [r8 - 0x7d], r9b ; ret 0xc702
0x0000000000009969 : add byte ptr [r8], al ; and al, byte ptr [rax] ; or al, 0 ; ret
0x00000000000702c6 : add byte ptr [r8], al ; cmp eax, -1 ; jne 0x702d9 ; pop rbx ; ret
0x0000000000179d9d : add byte ptr [r8], al ; mov al, -0x55 ; in al, dx ; jmp qword ptr [rbx]
0x0000000000071670 : add byte ptr [r8], al ; mov edx, eax ; jmp 0x7161a
0x0000000000071fe0 : add byte ptr [r8], al ; mov edx, eax ; jmp 0x71f8a
0x0000000000179d85 : add byte ptr [r8], al ; test al, -0x55 ; in al, dx ; call qword ptr [rdi]
0x000000000017a1f5 : add byte ptr [r8], r8b ; call 0xffffffffd8178f4f
0x000000000009db30 : add byte ptr [r9], r8b ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0x9dae9
0x00000000000a0160 : add byte ptr [r9], r8b ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa0119
0x00000000000a25f0 : add byte ptr [r9], r8b ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa25a9
0x000000000007e267 : add byte ptr [rax + 0x16], bh ; ret
0x0000000000193e1f : add byte ptr [rax + 0x1a], ah ; clc ; call qword ptr [rcx]
0x000000000003324b : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x000000000017bd1f : add byte ptr [rax + 0x20], al ; out dx, eax ; jmp qword ptr [rax]
0x0000000000194457 : add byte ptr [rax + 0x20], bh ; clc ; call qword ptr [rdx]
0x00000000000b8d9f : add byte ptr [rax + 0x20], bh ; ret
0x0000000000174093 : add byte ptr [rax + 0x20], dl ; stc ; jmp rax
0x000000000017240b : add byte ptr [rax + 0x21], ah ; cmc ; jmp rax
0x0000000000183b5f : add byte ptr [rax + 0x21], dl ; call rdi
0x0000000000170143 : add byte ptr [rax + 0x24], al ; in al, dx ; jmp rax
0x000000000014be2f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x0000000000046996 : add byte ptr [rax + 0x29], cl ; fmul dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret 0x894c
0x0000000000074fcc : add byte ptr [rax + 0x29], cl ; fmul dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret 0x8d48
0x000000000004fe56 : add byte ptr [rax + 0x29], cl ; ret
0x0000000000101a68 : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000acb0b : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000119c8f : add byte ptr [rax + 0x29], cl ; ret 0x8341
0x000000000004ced8 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000016fd7b : add byte ptr [rax + 0x2a], ah ; jmp 0x16fd83
0x00000000001748e3 : add byte ptr [rax + 0x2b], dl ; cli ; jmp qword ptr [rax]
0x0000000000174903 : add byte ptr [rax + 0x2d], ah ; cli ; jmp rax
0x000000000017a117 : add byte ptr [rax + 0x30], cl ; in eax, dx ; call rdi
0x0000000000183f5f : add byte ptr [rax + 0x31], ah ; jmp qword ptr [rcx]
0x000000000018714f : add byte ptr [rax + 0x31], al ; cmc ; call qword ptr [rax]
0x0000000000187107 : add byte ptr [rax + 0x31], cl ; cmc ; call qword ptr [rsi]
0x00000000001740fb : add byte ptr [rax + 0x32], al ; stc ; call rax
0x000000000018405f : add byte ptr [rax + 0x33], dl ; jmp qword ptr [rcx]
0x000000000017384b : add byte ptr [rax + 0x38fff801], dh ; ret 1
0x000000000017499b : add byte ptr [rax + 0x39], al ; cli ; call qword ptr [rax]
0x0000000000187387 : add byte ptr [rax + 0x39], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000f80c3 : add byte ptr [rax + 0x39], cl ; enter 0x577, -0x17 ; ret 0xfa44
0x00000000000210bf : add byte ptr [rax + 0x39], cl ; pop rax ; and byte ptr [rax - 0x77], cl ; ret 0x5374
0x0000000000036ae6 : add byte ptr [rax + 0x39], cl ; ret
0x0000000000078c92 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000002adae : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000000a9b64 : add byte ptr [rax + 0x39], cl ; ret 0x940f
0x000000000008e2c1 : add byte ptr [rax + 0x39], cl ; ret 0xc748
0x00000000000f4c01 : add byte ptr [rax + 0x39], cl ; ret 0xd975
0x00000000000f4cc0 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x000000000007a4f9 : add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8349
0x000000000009032e : add byte ptr [rax + 0x39], cl ; sal dword ptr [rbp - 0xc], 1 ; ret
0x0000000000187517 : add byte ptr [rax + 0x3b], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000187477 : add byte ptr [rax + 0x3b], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000171ff3 : add byte ptr [rax + 0x3b], dl ; hlt ; call qword ptr [rax]
0x000000000017200b : add byte ptr [rax + 0x3e], ah ; hlt ; jmp rax
0x00000000000b8def : add byte ptr [rax + 0x40], bh ; ret
0x0000000000173863 : add byte ptr [rax + 0x40fff80b], al ; ret
0x00000000000dde47 : add byte ptr [rax + 0x415d5b0a], dh ; pop rsp ; pop r13 ; ret
0x00000000001843c7 : add byte ptr [rax + 0x41], bl ; jmp qword ptr [rcx]
0x000000000018781f : add byte ptr [rax + 0x42], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000187837 : add byte ptr [rax + 0x42], bh ; cmc ; jmp qword ptr [rcx]
0x000000000016e2cd : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x000000000017088b : add byte ptr [rax + 0x45], dh ; in eax, dx ; jmp qword ptr [rax]
0x000000000018100f : add byte ptr [rax + 0x48], al ; int1 ; call rsp
0x000000000017c917 : add byte ptr [rax + 0x49], bl ; out dx, eax ; jmp rbx
0x0000000000174aab : add byte ptr [rax + 0x4a], al ; cli ; jmp rax
0x00000000001879a7 : add byte ptr [rax + 0x4a], ch ; cmc ; jmp qword ptr [rcx]
0x000000000018798f : add byte ptr [rax + 0x4a], dl ; cmc ; jmp qword ptr [rcx]
0x000000000018463f : add byte ptr [rax + 0x4b], al ; jmp rcx
0x00000000001720a3 : add byte ptr [rax + 0x4e], dh ; hlt ; call rax
0x0000000000187b97 : add byte ptr [rax + 0x4f], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000187b67 : add byte ptr [rax + 0x4f], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000187c57 : add byte ptr [rax + 0x50], ch ; cmc ; jmp qword ptr [rdi]
0x0000000000170dab : add byte ptr [rax + 0x50ffefe9], dl ; ret
0x000000000017ff5f : add byte ptr [rax + 0x54], al ; cli ; call qword ptr [rax]
0x000000000017cbd7 : add byte ptr [rax + 0x54], ch ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001709cb : add byte ptr [rax + 0x56], ah ; out dx, al ; call qword ptr [rax]
0x000000000000d347 : add byte ptr [rax + 0x57], dh ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001827af : add byte ptr [rax + 0x58], dl ; call qword ptr [rcx]
0x0000000000172543 : add byte ptr [rax + 0x59], ah ; cmc ; call rax
0x0000000000176667 : add byte ptr [rax + 0x5a], bh ; std ; jmp qword ptr [rdi]
0x0000000000194ee7 : add byte ptr [rax + 0x5c], ch ; clc ; jmp qword ptr [rcx]
0x0000000000174bbb : add byte ptr [rax + 0x5e], ah ; cli ; jmp rax
0x0000000000176e1f : add byte ptr [rax + 0x5e], ah ; jmp 0x176e27
0x0000000000176e67 : add byte ptr [rax + 0x5e], bh ; jmp 0x176e6f
0x0000000000176e07 : add byte ptr [rax + 0x5e], bl ; jmp 0x176e0f
0x0000000000176e37 : add byte ptr [rax + 0x5e], ch ; jmp 0x176e3f
0x0000000000176e4f : add byte ptr [rax + 0x5e], dh ; jmp 0x176e57
0x0000000000176d5f : add byte ptr [rax + 0x5e], dl ; jmp 0x176d67
0x0000000000176def : add byte ptr [rax + 0x5e], dl ; jmp 0x176df7
0x00000000000e8248 : add byte ptr [rax + 0x5f], bl ; call rax
0x000000000017d087 : add byte ptr [rax + 0x5f], bl ; out dx, eax ; call rbx
0x0000000000174bfb : add byte ptr [rax + 0x61], ah ; cli ; jmp qword ptr [rax]
0x0000000000174c3b : add byte ptr [rax + 0x63], al ; cli ; jmp qword ptr [rax]
0x000000000007cf96 : add byte ptr [rax + 0x63], cl ; adc al, -0x48 ; add rax, rdx ; jmp rax
0x0000000000031a7a : add byte ptr [rax + 0x63], cl ; adc al, -0x49 ; add rdx, rdi ; jmp rdx
0x000000000005ec67 : add byte ptr [rax + 0x63], cl ; adc al, -0x68 ; add rax, rdx ; jmp rax
0x00000000000c9b94 : add byte ptr [rax + 0x63], cl ; adc al, -0x70 ; add rax, rdx ; jmp rax
0x00000000000d7cbd : add byte ptr [rax + 0x63], cl ; adc al, -0x78 ; add rax, rdx ; jmp rax
0x000000000009a196 : add byte ptr [rax + 0x63], cl ; add al, -0x42 ; add rsi, rax ; jmp rsi
0x0000000000051060 : add byte ptr [rax + 0x63], cl ; add al, -0x70 ; add rax, r12 ; jmp rax
0x000000000011091d : add byte ptr [rax + 0x63], cl ; add al, -0x79 ; add rdi, rax ; jmp rdi
0x00000000000425fe : add byte ptr [rax + 0x63], cl ; add al, -0x7a ; add rax, rsi ; jmp rax
0x0000000000068fbb : add byte ptr [rax + 0x63], cl ; add al, -0x7e ; add rax, rdx ; jmp rax
0x000000000005ebf5 : add byte ptr [rax + 0x63], cl ; add al, -0x7e ; add rdx, rax ; jmp rdx
0x00000000000690ef : add byte ptr [rax + 0x63], cl ; add al, -0x7f ; add rcx, rax ; jmp rcx
0x00000000000c8dbc : add byte ptr [rax + 0x63], cl ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000068a4c : add byte ptr [rax + 0x63], cl ; or al, 0xffffffffffffff88 ; add rax, rcx ; jmp rax
0x00000000000c943a : add byte ptr [rax + 0x63], cl ; ret
0x000000000006843a : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000000f2fb0 : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x000000000004f0fa : add byte ptr [rax + 0x63], cl ; ret 0x8948
0x00000000001058b7 : add byte ptr [rax + 0x63], cl ; ret 0x8949
0x000000000006914b : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000000c23af : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000006e9ff : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000000bfb98 : add byte ptr [rax + 0x63], cl ; ret 0xb60f
0x000000000016fdf3 : add byte ptr [rax + 0x64], al ; jmp 0x16fdfb
0x00000000000b84df : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x0000000000174cdb : add byte ptr [rax + 0x68], al ; cli ; jmp rax
0x00000000000b84ff : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x0000000000172563 : add byte ptr [rax + 0x6a], al ; cmc ; call rax
0x00000000000b84ef : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x000000000017427b : add byte ptr [rax + 0x6c], al ; stc ; jmp rax
0x00000000000b850f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000000b873f : add byte ptr [rax + 0x6f], bh ; syscall ; ret
0x0000000000170563 : add byte ptr [rax + 0x72], dl ; in al, dx ; call rax
0x0000000000173bb3 : add byte ptr [rax + 0x73], ah ; clc ; jmp rax
0x0000000000188107 : add byte ptr [rax + 0x73], bh ; cmc ; jmp rbx
0x000000000007fe2f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000019568f : add byte ptr [rax + 0x77], dh ; clc ; call rdi
0x00000000001705eb : add byte ptr [rax + 0x78], dh ; in al, dx ; call rax
0x0000000000096b7f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000001956f7 : add byte ptr [rax + 0x7a], cl ; clc ; call qword ptr [rdi]
0x0000000000170643 : add byte ptr [rax + 0x7b], al ; in al, dx ; jmp qword ptr [rax]
0x0000000000170a73 : add byte ptr [rax + 0x7d], ah ; out dx, eax ; jmp qword ptr [rax]
0x00000000001721bb : add byte ptr [rax + 0x7d], al ; hlt ; jmp qword ptr [rax]
0x00000000000b8cd7 : add byte ptr [rax + 0x7e], bh ; ret
0x00000000000b8c2a : add byte ptr [rax + 0x7f], bh ; ret
0x000000000019372f : add byte ptr [rax + 0xb], ah ; clc ; call qword ptr [rdx]
0x00000000001700f3 : add byte ptr [rax + 0xb], dh ; in al, dx ; call qword ptr [rax]
0x00000000001723b3 : add byte ptr [rax + 0xd], ah ; cmc ; call rax
0x00000000000e862f : add byte ptr [rax + 0xe4], bh ; syscall ; ret
0x00000000001776a0 : add byte ptr [rax + 0xe], dl ; adc byte ptr [rbx + 0xa540202], al ; ret
0x000000000002cac4 : add byte ptr [rax + 0xf], al ; mov bh, -0x40 ; ret
0x0000000000083855 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000390df : add byte ptr [rax + 0xf], cl ; mov esi, 0x8348016b ; ret
0x00000000000e17d8 : add byte ptr [rax + 0xf], cl ; ret
0x00000000000b7110 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000848f2 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000024aff : add byte ptr [rax + 0xf], cl ; ret 0x8545
0x000000000004c076 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000dd844 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000a9dca : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000065b0a : add byte ptr [rax + 0xf], cl ; ret 0xba66
0x00000000000532f8 : add byte ptr [rax + 0xf], cl ; ret 0xbd83
0x00000000000a83b2 : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000008d22a : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000025474 : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x00000000000b8c7e : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000010528c : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x0000000000035063 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xc748
0x00000000000b8cef : add byte ptr [rax + 0xfc17], bh ; ret
0x0000000000173843 : add byte ptr [rax + 1], ah ; clc ; dec dword ptr [rax] ; ret 1
0x00000000000ddd5c : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000002915f : add byte ptr [rax + 1], bh ; ret
0x000000000018f493 : add byte ptr [rax + 1], bl ; add al, bl ; cmp bh, dh ; jmp qword ptr [rdi]
0x0000000000084ba5 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000387f6 : add byte ptr [rax + 1], cl ; ret
0x00000000000a7ea4 : add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000072ebe : add byte ptr [rax + 1], dil ; ret
0x000000000010b4bf : add byte ptr [rax + 2], bh ; ret
0x00000000001834af : add byte ptr [rax + 7], ah ; call qword ptr [rbx]
0x00000000000b8ef6 : add byte ptr [rax + 7], bh ; ret
0x0000000000183497 : add byte ptr [rax + 7], bl ; call qword ptr [rbx]
0x000000000018347f : add byte ptr [rax + 7], dl ; call qword ptr [rsi]
0x000000000017403b : add byte ptr [rax + 9], ah ; stc ; jmp qword ptr [rax]
0x000000000018949b : add byte ptr [rax + rax*2 + 1], ah ; add byte ptr [rax], dh ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x000000000002e867 : add byte ptr [rax + rax*8 - 0x7cb7ec8c], al ; ret 0x4901
0x00000000000961fc : add byte ptr [rax + rax], 0 ; ret
0x0000000000007337 : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019178f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000000049f7 : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3b
0x000000000006704e : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000000ed5f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000191827 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; hlt ; ret
0x000000000007b089 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000349c4 : add byte ptr [rax + rax], cl ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000005cc5 : add byte ptr [rax + rax], cl ; push rax ; ret
0x000000000000996d : add byte ptr [rax + rax], cl ; ret
0x0000000000170088 : add byte ptr [rax + rax], dh ; add bh, dl ; jmp 0x170096
0x00000000001916d7 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000019167f : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; ret 1
0x000000000018169f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0
0x000000000009bb25 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000177cb3 : add byte ptr [rax + rbp], bh ; add byte ptr [rax], ch ; ret
0x0000000000177c43 : add byte ptr [rax + rbp], cl ; add byte ptr [rax], al ; js 0x177c12 ; jmp 0x177c51
0x0000000000177c83 : add byte ptr [rax + rbp], cl ; add byte ptr [rax], bl ; ret
0x000000000018ac4b : add byte ptr [rax + rbx*2], dl ; add dword ptr [rax], eax ; xor bh, dh ; cmc ; jmp qword ptr [rcx]
0x00000000000e35bd : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x00000000000407c6 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x0000000000178c5b : add byte ptr [rax + rdi], ah ; add byte ptr [rax], al ; adc bl, ch ; jmp 0x178c6b
0x0000000000178c43 : add byte ptr [rax + rdi], cl ; add byte ptr [rax], al ; sbb bl, ch ; jmp 0x178c53
0x00000000001864e3 : add byte ptr [rax + rdx - 0x66f7ffff], ch ; hlt ; call rcx
0x000000000018a4c3 : add byte ptr [rax + rdx*2 - 0x1a37ffff], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018a44b : add byte ptr [rax + rdx*2], dl ; add dword ptr [rax], eax ; push rax ; in eax, -0xb ; jmp qword ptr [rcx]
0x0000000000186463 : add byte ptr [rax + rdx], ch ; add dword ptr [rax], eax ; js 0x186404 ; hlt ; jmp qword ptr [rdi]
0x00000000001884f3 : add byte ptr [rax + rsi - 0x7f77ffff], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001884db : add byte ptr [rax + rsi - 0x7f8fffff], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001884c3 : add byte ptr [rax + rsi - 0x7fa7ffff], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018c49b : add byte ptr [rax + rsi*2 + 1], ah ; add al, al ; jg 0x18c4a1 ; jmp qword ptr [rsi]
0x000000000018c4b3 : add byte ptr [rax + rsi*2 + 1], bh ; add al, bl ; jg 0x18c4b9 ; jmp qword ptr [rsi]
0x000000000018c46b : add byte ptr [rax + rsi*2], dh ; add dword ptr [rax], eax ; nop ; jg 0x18c471 ; jmp qword ptr [rsi]
0x00000000001844cb : add byte ptr [rax + rsi*8 + 0x42d00000], dl ; jmp qword ptr [rcx]
0x00000000001844e3 : add byte ptr [rax + rsi*8 + 0x42e80000], ch ; jmp qword ptr [rcx]
0x000000000019449b : add byte ptr [rax + rsi*8 + 1], ah ; add al, dl ; and al, bh ; jmp qword ptr [rcx]
0x0000000000194453 : add byte ptr [rax + rsi*8], bl ; add dword ptr [rax], eax ; js 0x194482 ; clc ; call qword ptr [rdx]
0x000000000018ab5f : add byte ptr [rax - 0x10], ah ; cmc ; jmp qword ptr [rcx]
0x000000000018ab47 : add byte ptr [rax - 0x10], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000170a44 : add byte ptr [rax - 0x11], bh ; jmp qword ptr [rax]
0x00000000001719b3 : add byte ptr [rax - 0x13], ah ; int1 ; call rax
0x000000000018a91f : add byte ptr [rax - 0x13], al ; cmc ; jmp qword ptr [rbx]
0x0000000000170dcb : add byte ptr [rax - 0x13], al ; out dx, eax ; call qword ptr [rax]
0x0000000000170dc3 : add byte ptr [rax - 0x14], ah ; out dx, eax ; call rax
0x0000000000100bf0 : add byte ptr [rax - 0x168b7f80], -0x77 ; ret 0x894c
0x000000000010ff17 : add byte ptr [rax - 0x178b7f80], -0x77 ; ret 0x8948
0x0000000000178a1f : add byte ptr [rax - 0x17], ah ; jmp 0x178a27
0x0000000000178a37 : add byte ptr [rax - 0x17], ch ; jmp 0x178a3f
0x0000000000185797 : add byte ptr [rax - 0x17], ch ; jmp qword ptr [rbx]
0x000000000018a737 : add byte ptr [rax - 0x17], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000178a07 : add byte ptr [rax - 0x17], cl ; jmp 0x178a0f
0x000000000002ea4d : add byte ptr [rax - 0x188b7f80], -0x77 ; ret 0x8b4c
0x000000000018a68f : add byte ptr [rax - 0x18], dl ; cmc ; call qword ptr [rsi]
0x000000000018a5e7 : add byte ptr [rax - 0x19], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018a5b7 : add byte ptr [rax - 0x19], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000170d73 : add byte ptr [rax - 0x1a], ah ; out dx, eax ; push qword ptr [rax] ; ret 0
0x0000000000181d77 : add byte ptr [rax - 0x1a], bl ; int1 ; jmp rax
0x000000000018a53f : add byte ptr [rax - 0x1a], dh ; cmc ; jmp qword ptr [rcx]
0x000000000018a44f : add byte ptr [rax - 0x1b], dl ; cmc ; jmp qword ptr [rcx]
0x000000000018a377 : add byte ptr [rax - 0x1c], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018a26f : add byte ptr [rax - 0x1d], ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a287 : add byte ptr [rax - 0x1d], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018a16f : add byte ptr [rax - 0x1e], dl ; cmc ; call qword ptr [rax]
0x000000000017869f : add byte ptr [rax - 0x1f], al ; jmp 0x1786a7
0x00000000001786b7 : add byte ptr [rax - 0x1f], cl ; jmp 0x1786bf
0x0000000000171c83 : add byte ptr [rax - 0x1f], dh ; call rax
0x0000000000170d13 : add byte ptr [rax - 0x22], dl ; out dx, eax ; jmp rax
0x0000000000170703 : add byte ptr [rax - 0x25], ah ; in al, dx ; call qword ptr [rax]
0x0000000000171c63 : add byte ptr [rax - 0x26], ah ; call rax
0x0000000000034541 : add byte ptr [rax - 0x2d], cl ; loopne 0x34597 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000017194b : add byte ptr [rax - 0x2e], dl ; int1 ; call rax
0x0000000000189e97 : add byte ptr [rax - 0x2f], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000170c8b : add byte ptr [rax - 0x2f], dh ; out dx, eax ; call rax
0x000000000016ffeb : add byte ptr [rax - 0x30], al ; jmp 0x16fff3
0x000000000017a967 : add byte ptr [rax - 0x30], bl ; out dx, al ; jmp qword ptr [rcx]
0x000000000016ffab : add byte ptr [rax - 0x31], ah ; jmp 0x16ffb3
0x00000000001753e3 : add byte ptr [rax - 0x32], al ; std ; call qword ptr [rax]
0x0000000000171be3 : add byte ptr [rax - 0x32], dl ; jmp qword ptr [rax]
0x0000000000173ed3 : add byte ptr [rax - 0x34], dh ; clc ; jmp qword ptr [rax]
0x000000000016ff03 : add byte ptr [rax - 0x37], dh ; jmp 0x16ff0b
0x00000000001745eb : add byte ptr [rax - 0x37], dh ; stc ; call qword ptr [rax]
0x0000000000175273 : add byte ptr [rax - 0x38], dl ; cld ; call qword ptr [rax]
0x00000000000a6e54 : add byte ptr [rax - 0x39], cl ; ret
0x00000000000a89d5 : add byte ptr [rax - 0x39], cl ; ret 0
0x00000000000a8925 : add byte ptr [rax - 0x39], cl ; ret 0x400
0x000000000001fe93 : add byte ptr [rax - 0x39], cl ; ret 0x800
0x000000000006b066 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000009b58f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000009b56f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000009b5cf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000009b57f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000009b5bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000171b7b : add byte ptr [rax - 0x3e], al ; jmp qword ptr [rax]
0x0000000000177c47 : add byte ptr [rax - 0x3e], bh ; jmp 0x177c4d
0x0000000000033585 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x00000000000332ae : add byte ptr [rax - 0x3f91f09a], al ; ret
0x00000000000b6b09 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000173e8b : add byte ptr [rax - 0x3f], dh ; clc ; call rax
0x0000000000174f3b : add byte ptr [rax - 0x40], ah ; cli ; call rax
0x00000000001779b7 : add byte ptr [rax - 0x42], bl ; jmp 0x1779bf
0x0000000000173e7b : add byte ptr [rax - 0x43], al ; clc ; call qword ptr [rax]
0x0000000000177957 : add byte ptr [rax - 0x43], ch ; jmp 0x17795f
0x0000000000171b33 : add byte ptr [rax - 0x45], al ; call qword ptr [rax]
0x0000000000170be3 : add byte ptr [rax - 0x45], al ; out dx, eax ; jmp rax
0x00000000000ac9f5 : add byte ptr [rax - 0x46], cl ; ret
0x0000000000038af0 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000055f48 : add byte ptr [rax - 0x49f0a206], al ; ret 0x840f
0x0000000000174ebb : add byte ptr [rax - 0x4f], ah ; cli ; jmp rax
0x00000000001893f7 : add byte ptr [rax - 0x52], bl ; cmc ; jmp qword ptr [rcx]
0x000000000018940f : add byte ptr [rax - 0x52], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001706d3 : add byte ptr [rax - 0x52], dl ; in al, dx ; call rax
0x0000000000171edb : add byte ptr [rax - 0x52], dl ; jmp rax
0x00000000001867ff : add byte ptr [rax - 0x53], al ; hlt ; call rdx
0x0000000000186797 : add byte ptr [rax - 0x53], cl ; hlt ; call qword ptr [rdi]
0x000000000018669f : add byte ptr [rax - 0x55], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001866b7 : add byte ptr [rax - 0x55], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000186687 : add byte ptr [rax - 0x55], cl ; hlt ; jmp qword ptr [rcx]
0x0000000000177607 : add byte ptr [rax - 0x56], bl ; jmp 0x17760f
0x0000000000181577 : add byte ptr [rax - 0x57], bl ; int1 ; jmp qword ptr [rdi]
0x000000000018158f : add byte ptr [rax - 0x57], dh ; int1 ; call qword ptr [rsi]
0x0000000000173de3 : add byte ptr [rax - 0x5c], ah ; clc ; call rax
0x000000000017754f : add byte ptr [rax - 0x5e], al ; jmp 0x177557
0x0000000000171abb : add byte ptr [rax - 0x5f], al ; jmp qword ptr [rax]
0x0000000000172303 : add byte ptr [rax - 0x60], dl ; hlt ; call qword ptr [rax]
0x0000000000174ddb : add byte ptr [rax - 0x61], ah ; cli ; call qword ptr [rax]
0x000000000018904f : add byte ptr [rax - 0x61], ah ; cmc ; jmp qword ptr [rcx]
0x00000000000bf797 : add byte ptr [rax - 0x6bf0d405], al ; ret 0xfb80
0x0000000000177337 : add byte ptr [rax - 0x6c], bl ; jmp 0x17733f
0x0000000000186467 : add byte ptr [rax - 0x6e], bh ; hlt ; jmp qword ptr [rdi]
0x0000000000174383 : add byte ptr [rax - 0x6e], dl ; stc ; jmp rax
0x0000000000174373 : add byte ptr [rax - 0x6f], dl ; stc ; call qword ptr [rax]
0x000000000018268f : add byte ptr [rax - 0x70], dl ; cld ; jmp qword ptr [rbx]
0x0000000000188d0f : add byte ptr [rax - 0x71], dh ; cmc ; jmp qword ptr [rsi]
0x00000000000f0a8a : add byte ptr [rax - 0x71f0ffc8], al ; ret
0x00000000001811bf : add byte ptr [rax - 0x72], dh ; int1 ; call qword ptr [rsi]
0x000000000002bc67 : add byte ptr [rax - 0x73], cl ; add eax, 0x138e47 ; ret
0x000000000002013f : add byte ptr [rax - 0x73], cl ; add eax, 0x144484 ; ret
0x000000000002014f : add byte ptr [rax - 0x73], cl ; add eax, 0x1465db ; ret
0x0000000000020bfe : add byte ptr [rax - 0x73], cl ; and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x000000000009bb6f : add byte ptr [rax - 0x73], cl ; clc ; ret
0x000000000009bb7f : add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000010029f : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2a1a35 ; call rax
0x000000000009bb5f : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000010ff94 : add byte ptr [rax - 0x73], cl ; jo 0x10ffda ; mov rdi, rcx ; jmp r8
0x000000000009b9fc : add byte ptr [rax - 0x73], cl ; lock ; ret
0x0000000000035c50 : add byte ptr [rax - 0x73], cl ; lock pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000eeef9 : add byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000079cc6 : add byte ptr [rax - 0x73], cl ; ret
0x000000000003fd1d : add byte ptr [rax - 0x73], cl ; xor eax, 0x1cb ; call rax
0x000000000006b738 : add byte ptr [rax - 0x73], cl ; xor eax, 0x20 ; call rax
0x00000000000771a8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe700 ; call rax
0x0000000000076cf8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffebb0 ; call rax
0x0000000000075e38 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffa70 ; call rax
0x0000000000075bf0 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcb8 ; call rax
0x000000000006b9f0 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd68 ; call rax
0x00000000001706bb : add byte ptr [rax - 0x74], al ; in al, dx ; call qword ptr [rax]
0x0000000000170ae3 : add byte ptr [rax - 0x74], al ; out dx, eax ; jmp rax
0x0000000000188a8f : add byte ptr [rax - 0x74], dh ; cmc ; jmp qword ptr [rcx]
0x000000000010b296 : add byte ptr [rax - 0x75], cl ; add al, -0x3e ; jmp rax
0x00000000000e721f : add byte ptr [rax - 0x75], cl ; add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000b6c42 : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000011d236 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x0000000000036ad1 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000aa4ff : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000011acbf : add byte ptr [rax - 0x75], cl ; add eax, 0x280d79 ; jmp rax
0x000000000011ad32 : add byte ptr [rax - 0x75], cl ; add eax, 0x283876 ; call qword ptr [rax]
0x000000000011a735 : add byte ptr [rax - 0x75], cl ; add eax, 0x283e73 ; call qword ptr [rax]
0x0000000000100a87 : add byte ptr [rax - 0x75], cl ; add eax, 0x29dfe1 ; ret
0x00000000000774df : add byte ptr [rax - 0x75], cl ; add eax, 0x3271d9 ; ret
0x000000000002934f : add byte ptr [rax - 0x75], cl ; add eax, 0x3757a9 ; ret
0x000000000002167f : add byte ptr [rax - 0x75], cl ; add eax, 0x381241 ; ret
0x000000000002166f : add byte ptr [rax - 0x75], cl ; add eax, 0x381259 ; ret
0x00000000000e19ae : add byte ptr [rax - 0x75], cl ; and al, 0xffffffb0 ; ret
0x000000000006f918 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000c441f : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000773e9 : add byte ptr [rax - 0x75], cl ; imul ecx, dword ptr [rax], -0x15 ; ret
0x000000000007cd5f : add byte ptr [rax - 0x75], cl ; je 0x7cd91 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rcx
0x00000000000ba570 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffbd8 ; call r15
0x00000000000c545f : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x00000000000e7217 : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000010aa14 : add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; call rbx
0x0000000000079f17 : add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x000000000012bdcf : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000ea77e : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000007c81f : add byte ptr [rax - 0x75], cl ; xor al, 0x24 ; jmp rax
0x000000000005ef7d : add byte ptr [rax - 0x75], cl ; xor eax, 0x33dfab ; call rax
0x0000000000055a05 : add byte ptr [rax - 0x75], cl ; xor eax, 0x347523 ; call rax
0x00000000000554a1 : add byte ptr [rax - 0x75], cl ; xor eax, 0x347a87 ; call rax
0x000000000005010d : add byte ptr [rax - 0x75], cl ; xor eax, 0x34ce1b ; call rax
0x000000000004a3f9 : add byte ptr [rax - 0x75], cl ; xor eax, 0x352b2f ; call rax
0x0000000000044e4d : add byte ptr [rax - 0x75], cl ; xor eax, 0x3580db ; call rax
0x0000000000173d1b : add byte ptr [rax - 0x75], dl ; clc ; call qword ptr [rax]
0x0000000000075287 : add byte ptr [rax - 0x76b77f36], al ; ret
0x00000000000e2d3e : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x000000000006a704 : add byte ptr [rax - 0x76b80000], al ; ret 0x4375
0x0000000000188967 : add byte ptr [rax - 0x77], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000ffe00 : add byte ptr [rax - 0x77], bl ; rcr byte ptr [rcx + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000011d224 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000011d3df : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000007f92e : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x00000000000f5c9f : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x0000000000036a4f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x000000000007750f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000733e2 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000672ae : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000007efe9 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; nop ; xor eax, eax ; ret
0x000000000007c553 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000007f26a : add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call rdx
0x000000000006e7b3 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000006e6b4 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000000bf32f : add byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x7d] ; ret
0x0000000000065a2b : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax + 0xf] ; ret 0xba66
0x000000000011cd09 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00000000000aa7d8 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000ecbd4 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000006d285 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x3a
0x000000000007a9b0 : add byte ptr [rax - 0x77], cl ; iretd ; mov qword ptr [rsp + 0x38], rcx ; call qword ptr [rax]
0x000000000006c55f : add byte ptr [rax - 0x77], cl ; jmp 0x48f54eb8
0x000000000006a1f5 : add byte ptr [rax - 0x77], cl ; mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x0000000000073bb3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x140 ; pop rbx ; ret
0x000000000007f52b : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000010e923 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x10abd6
0x000000000010b77c : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000109fd3 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000109e14 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000f3f81 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r13 ; call rax
0x000000000007ac59 : add byte ptr [rax - 0x77], cl ; push rsp ; and al, 0x28 ; xor edi, edi ; call qword ptr [rax]
0x000000000002c9b0 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000057878 : add byte ptr [rax - 0x77], cl ; ret 0x148
0x000000000010671a : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000041e95 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000006a9ea : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000041984 : add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x000000000006a707 : add byte ptr [rax - 0x77], cl ; ret 0x4375
0x0000000000106795 : add byte ptr [rax - 0x77], cl ; ret 0x46c7
0x000000000006ae5b : add byte ptr [rax - 0x77], cl ; ret 0x5e8b
0x00000000000bb795 : add byte ptr [rax - 0x77], cl ; ret 0x775
0x00000000000ce88c : add byte ptr [rax - 0x77], cl ; ret 0x7a80
0x000000000002e1ce : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000cc3d0 : add byte ptr [rax - 0x77], cl ; ret 0x84c6
0x00000000000edec3 : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x00000000000e2b77 : add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000006831c : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000a906f : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000006af42 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002b67f : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000006b5e8 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000b4b06 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000e1d5a : add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00000000000b41ae : add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x000000000006afef : add byte ptr [rax - 0x77], cl ; ret 0xb4e9
0x0000000000052778 : add byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000000445fe : add byte ptr [rax - 0x77], cl ; ret 0xc083
0x000000000003f8ab : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000009f81c : add byte ptr [rax - 0x77], cl ; ret 0xd929
0x00000000000407ca : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000000b327c : add byte ptr [rax - 0x77], cl ; ret 0xed31
0x000000000008b43d : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000397a8 : add byte ptr [rax - 0x77], cl ; ret 0xf929
0x000000000007f872 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000011d1dc : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000008f952 : add byte ptr [rax - 0x77], cl ; stc ; mov qword ptr [rdx], rcx ; ret
0x000000000010e4ec : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x10e504 ; ret
0x0000000000110d4c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x110d64 ; ret
0x0000000000110d64 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x110d7c ; ret
0x000000000011159c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1115b4 ; ret
0x00000000001115b4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1115cc ; ret
0x00000000001115e4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1115fc ; ret
0x000000000007e87f : add byte ptr [rax - 0x77], cl ; xor eax, 0x321289 ; ret
0x00000000000f8b47 : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x000000000018897f : add byte ptr [rax - 0x77], dh ; cmc ; jmp qword ptr [rcx]
0x000000000017dd2f : add byte ptr [rax - 0x77], dh ; out dx, eax ; call qword ptr [rcx]
0x00000000001888d7 : add byte ptr [rax - 0x78], bl ; cmc ; jmp qword ptr [rcx]
0x000000000017220b : add byte ptr [rax - 0x78], dh ; hlt ; call qword ptr [rax]
0x00000000001796cf : add byte ptr [rax - 0x79], dh ; in al, dx ; call rdx
0x000000000017db57 : add byte ptr [rax - 0x7a], cl ; out dx, eax ; jmp qword ptr [rcx]
0x000000000006add4 : add byte ptr [rax - 0x7af10000], al ; ret 0
0x0000000000182dd7 : add byte ptr [rax - 0x7b], cl ; jmp qword ptr [rcx]
0x0000000000092b23 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7b ; ret
0x00000000000658d3 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7c ; ret
0x0000000000113c13 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], cl ; pop rbx ; ret
0x0000000000038136 : add byte ptr [rax - 0x7c], al ; dec dword ptr [rdi] ; ret 0x8348
0x0000000000171e03 : add byte ptr [rax - 0x7c], dh ; call rax
0x0000000000173ca3 : add byte ptr [rax - 0x7c], dh ; clc ; jmp rax
0x0000000000145fb7 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000007b489 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000007e6fd : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000002c87a : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000007ac89 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000a636f : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx + 0xf] ; ret
0x00000000000fe99f : add byte ptr [rax - 0x7d], cl ; in al, dx ; xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x000000000014c8e6 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x14c8f7 ; ret
0x000000000002071c : add byte ptr [rax - 0x7d], cl ; ret
0x000000000007a1e7 : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000010564f : add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x000000000009999f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000e2267 : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000002437f : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000007b0a9 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000006b814 : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x00000000001186a7 : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000002f38d : add byte ptr [rax - 0x7d], cl ; ret 0x4504
0x000000000002f96c : add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x0000000000021495 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000007035b : add byte ptr [rax - 0x7d], cl ; ret 0x4803
0x00000000000c8daf : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000e9cea : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x000000000008fc5f : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x000000000002576e : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000028dbb : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000011e22f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001032c7 : add byte ptr [rax - 0x7d], cl ; ret 0x4c0c
0x0000000000084d9f : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000084d2f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000009f84f : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000c6e87 : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0x00000000000c9f8f : add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000002329c : add byte ptr [rax - 0x7d], cl ; ret 0x8801
0x00000000000bd9e3 : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000d87f3 : add byte ptr [rax - 0x7d], cl ; ret 0xc702
0x00000000000ff450 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x000000000002e185 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000787bc : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000005a8a7 : add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000000000011e253 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000044b07 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000009049f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], -0x7d ; ret 0x4840
0x0000000000040b68 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], -0x3a ; jmp qword ptr [rax]
0x000000000006b385 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], -0x75 ; adc esi, esi ; ret 0x7520
0x00000000000f69a7 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], -0x75 ; adc esi, esi ; ret 0xf20
0x0000000000029ff7 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], -0x7d ; ret 0x4801
0x000000000003c827 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], -0x7d ; ret 0x4801
0x000000000006dc1c : add byte ptr [rax - 0x7f], cl ; ret
0x00000000001323eb : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000006b6df : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000001884c7 : add byte ptr [rax - 0x80], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001884df : add byte ptr [rax - 0x80], dh ; cmc ; jmp qword ptr [rcx]
0x000000000015ff28 : add byte ptr [rax - 0xd], ah ; jmp qword ptr [rax]
0x000000000015fec0 : add byte ptr [rax - 0xd], bl ; call qword ptr [rax]
0x0000000000173f9b : add byte ptr [rax - 0xd], dh ; clc ; call rax
0x00000000001746eb : add byte ptr [rax - 0xd], dh ; stc ; jmp qword ptr [rax]
0x000000000017385b : add byte ptr [rax - 0xf0007fb], ah ; ret 1
0x000000000018c87f : add byte ptr [rax - 1], al ; sti ; jmp qword ptr [rsi]
0x000000000011c757 : add byte ptr [rax - 1], bh ; jmp 0x11c729
0x000000000011c4ba : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000000324ad : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000033afd : add byte ptr [rax - 1], bh ; ret
0x0000000000174783 : add byte ptr [rax - 1], dh ; stc ; call rax
0x000000000007763e : add byte ptr [rax - 1], dil ; ret
0x0000000000171a1b : add byte ptr [rax - 3], ah ; int1 ; jmp qword ptr [rax]
0x0000000000181953 : add byte ptr [rax*8 - 0x48680000], bl ; int1 ; call qword ptr [rax]
0x000000000018193b : add byte ptr [rax*8 - 0x48700000], al ; int1 ; jmp qword ptr [rax]
0x000000000018196b : add byte ptr [rax*8 - 0x48700000], dh ; int1 ; call qword ptr [rdx]
0x000000000017478c : add byte ptr [rax], -6 ; call qword ptr [rax]
0x000000000006bf05 : add byte ptr [rax], 0 ; add al, ch ; ret 0x88a
0x0000000000067b3b : add byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000005d099 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014cdab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000001161db : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000134bcb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000e7213 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000009bde3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000002ad43 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00000000000efae3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; sub eax, edi ; ret
0x00000000000df73b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000009a3cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008c62b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000006c1b7 : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000079b3b : add byte ptr [rax], 0 ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000009c86e : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000007c017 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000147b01 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000003381f : add byte ptr [rax], 0 ; ret
0x000000000017d47d : add byte ptr [rax], 0 ; xor byte ptr [rax - 0x11], ch ; jmp qword ptr [rsi]
0x000000000011d239 : add byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x000000000018b32f : add byte ptr [rax], ah ; adc esi, esi ; call rdi
0x000000000018745b : add byte ptr [rax], ah ; add dword ptr [rax], eax ; xor byte ptr [rbx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000f07ff : add byte ptr [rax], ah ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000174a63 : add byte ptr [rax], ah ; cli ; jmp rax
0x00000000001878af : add byte ptr [rax], ah ; cmc ; jmp qword ptr [rcx]
0x000000000017020b : add byte ptr [rax], ah ; cmp esp, ebp ; call rax
0x00000000001701cb : add byte ptr [rax], ah ; in al, dx ; call qword ptr [rax]
0x000000000018a41f : add byte ptr [rax], ah ; in eax, -0xb ; jmp qword ptr [rcx]
0x00000000001708fb : add byte ptr [rax], ah ; in eax, dx ; call qword ptr [rax]
0x0000000000162f6f : add byte ptr [rax], ah ; jg 0x162f75 ; inc dword ptr [rax] ; jg 0x162f79 ; jmp rax
0x000000000017d8bf : add byte ptr [rax], ah ; jnp 0x17d8b6 ; jmp qword ptr [rsi]
0x000000000018a01f : add byte ptr [rax], ah ; loope 0x18a01c ; jmp qword ptr [rcx]
0x000000000002cb04 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x0000000000170e83 : add byte ptr [rax], ah ; or al, 0xfffffffffffffff0 ; call rax
0x000000000001cf1f : add byte ptr [rax], ah ; ret
0x000000000001cc97 : add byte ptr [rax], ah ; ret 0x39
0x0000000000008967 : add byte ptr [rax], ah ; ret 0xe
0x00000000000063cf : add byte ptr [rax], ah ; ret 6
0x00000000001716a3 : add byte ptr [rax], ah ; sbb al, -0xf ; call rax
0x0000000000172d8b : add byte ptr [rax], ah ; sbb bh, dh ; call rax
0x0000000000175b2f : add byte ptr [rax], ah ; std ; jmp qword ptr [rdx]
0x0000000000183d6f : add byte ptr [rax], ah ; sub bl, dh ; call rdi
0x000000000017017b : add byte ptr [rax], ah ; xor ch, ah ; call qword ptr [rax]
0x000000000016fffa : add byte ptr [rax], al ; adc al, -0x15 ; call qword ptr [rax]
0x000000000018fe4a : add byte ptr [rax], al ; adc al, -0x56 ; add dword ptr [rax], eax ; and byte ptr [rbp - 9], ah ; jmp rdx
0x000000000018db4a : add byte ptr [rax], al ; adc al, -0x79 ; add dword ptr [rax], eax ; mov bpl, -0xa ; jmp rdx
0x000000000018169e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0
0x0000000000176e4a : add byte ptr [rax], al ; adc al, 0x1a ; add byte ptr [rax], al ; jo 0x176eb9 ; jmp 0x176e5c
0x000000000018714a : add byte ptr [rax], al ; adc al, 0x1d ; add dword ptr [rax], eax ; xor ebp, esi ; call qword ptr [rax]
0x000000000018784a : add byte ptr [rax], al ; adc al, 0x24 ; add dword ptr [rax], eax ; nop ; cmc ; jmp qword ptr [rcx]
0x000000000018a44a : add byte ptr [rax], al ; adc al, 0x50 ; add dword ptr [rax], eax ; push rax ; in eax, -0xb ; jmp qword ptr [rcx]
0x000000000018ac4a : add byte ptr [rax], al ; adc al, 0x58 ; add dword ptr [rax], eax ; xor bh, dh ; cmc ; jmp qword ptr [rcx]
0x000000000018604a : add byte ptr [rax], al ; adc al, 0xc ; add dword ptr [rax], eax ; xor byte ptr [rbp - 0xc], bh ; call qword ptr [rdx]
0x000000000019554a : add byte ptr [rax], al ; adc al, 1 ; add al, byte ptr [rax] ; add byte ptr [rsi - 8], dh ; call qword ptr [rax]
0x000000000016feda : add byte ptr [rax], al ; adc al, al ; jmp 0x16fee4
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000005cc2 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret
0x000000000018669a : add byte ptr [rax], al ; adc al, byte ptr fs:[rcx] ; add byte ptr [rax - 0x55], ah ; hlt ; jmp qword ptr [rcx]
0x0000000000175d0e : add byte ptr [rax], al ; adc bh, -0x16 ; call qword ptr [rax]
0x0000000000184f1e : add byte ptr [rax], al ; adc bh, cl ; call rdi
0x0000000000178c2e : add byte ptr [rax], al ; adc bl, ch ; jmp 0x178c38
0x0000000000178c5e : add byte ptr [rax], al ; adc bl, ch ; jmp 0x178c68
0x00000000001810fe : add byte ptr [rax], al ; adc byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x00000000001709f2 : add byte ptr [rax], al ; adc byte ptr [rdx - 0x11], dh ; jmp qword ptr [rax]
0x000000000016fd3a : add byte ptr [rax], al ; adc byte ptr [rdx], bl ; jmp 0x16fd44
0x000000000017003a : add byte ptr [rax], al ; adc cl, -0x15 ; call rax
0x0000000000170da2 : add byte ptr [rax], al ; adc cl, ch ; out dx, eax ; push qword ptr [rax] ; ret
0x000000000017007a : add byte ptr [rax], al ; adc dh, -0x15 ; jmp rax
0x0000000000170982 : add byte ptr [rax], al ; adc dh, bh ; in eax, dx ; jmp qword ptr [rax]
0x0000000000177c1e : add byte ptr [rax], al ; adc dl, al ; jmp 0x177c26
0x0000000000178b6e : add byte ptr [rax], al ; adc dl, ch ; jmp 0x178b78
0x0000000000186682 : add byte ptr [rax], al ; adc r8b, byte ptr [rcx] ; add byte ptr [rax - 0x55], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001917f9 : add byte ptr [rax], al ; add ah, al ; ret
0x0000000000191711 : add byte ptr [rax], al ; add ah, bl ; ret 1
0x000000000018de21 : add byte ptr [rax], al ; add ah, ch ; mov dword ptr [rcx], eax ; add byte ptr [rax], bl ; ret
0x0000000000177d21 : add byte ptr [rax], al ; add ah, ch ; sub byte ptr [rax], al ; add al, bh ; ret
0x000000000017af8e : add byte ptr [rax], al ; add ah, dh ; out dx, al ; call qword ptr [rax]
0x0000000000191829 : add byte ptr [rax], al ; add ah, dh ; ret
0x0000000000182a3a : add byte ptr [rax], al ; add al, -0x2a ; add byte ptr [rax], al ; rcr byte ptr [rdi - 0xe] ; jmp qword ptr [rcx]
0x000000000018193a : add byte ptr [rax], al ; add al, -0x3b ; add byte ptr [rax], al ; nop ; mov bh, -0xf ; jmp qword ptr [rax]
0x000000000018733a : add byte ptr [rax], al ; add al, 0x1f ; add dword ptr [rax], eax ; xor byte ptr [rcx], bh ; cmc ; call qword ptr [rcx]
0x000000000018a13a : add byte ptr [rax], al ; add al, 0x4d ; add dword ptr [rax], eax ; xor dl, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a53a : add byte ptr [rax], al ; add al, 0x51 ; add dword ptr [rax], eax ; jo 0x18a531 ; cmc ; jmp qword ptr [rcx]
0x000000000019563a : add byte ptr [rax], al ; add al, 2 ; add al, byte ptr [rax] ; loopne 0x1956c0 ; clc ; call rcx
0x000000000001d0e5 : add byte ptr [rax], al ; add al, ah ; ret
0x000000000001ce5d : add byte ptr [rax], al ; add al, ah ; ret 0x39
0x000000000001d085 : add byte ptr [rax], al ; add al, al ; ret
0x000000000001d12d : add byte ptr [rax], al ; add al, bh ; ret
0x000000000001cea5 : add byte ptr [rax], al ; add al, bh ; ret 0x39
0x000000000001d0cd : add byte ptr [rax], al ; add al, bl ; ret
0x000000000001ce45 : add byte ptr [rax], al ; add al, bl ; ret 0x39
0x00000000000b30db : add byte ptr [rax], al ; add al, ch ; pop rbp ; ret
0x000000000001d0fd : add byte ptr [rax], al ; add al, ch ; ret
0x000000000001ce75 : add byte ptr [rax], al ; add al, ch ; ret 0x39
0x0000000000020bb6 : add byte ptr [rax], al ; add al, ch ; ret 0x5f2
0x000000000001fb66 : add byte ptr [rax], al ; add al, ch ; ret 0x7a4
0x000000000006bf06 : add byte ptr [rax], al ; add al, ch ; ret 0x88a
0x0000000000114256 : add byte ptr [rax], al ; add al, ch ; ret 0xf190
0x00000000000b8136 : add byte ptr [rax], al ; add al, ch ; ret 0xfc99
0x00000000000e324f : add byte ptr [rax], al ; add al, ch ; ret 0xfff3
0x000000000002c956 : add byte ptr [rax], al ; add al, ch ; ret 9
0x00000000000e30a7 : add byte ptr [rax], al ; add al, ch ; xchg eax, ecx ; ret
0x0000000000040594 : add byte ptr [rax], al ; add al, ch ; xchg eax, esp ; ret
0x000000000017e89e : add byte ptr [rax], al ; add al, cl ; out dx, eax ; call qword ptr [rsi]
0x000000000001d09d : add byte ptr [rax], al ; add al, cl ; ret
0x000000000001d115 : add byte ptr [rax], al ; add al, dh ; ret
0x000000000001ce8d : add byte ptr [rax], al ; add al, dh ; ret 0x39
0x000000000001d0b5 : add byte ptr [rax], al ; add al, dl ; ret
0x000000000001ce2d : add byte ptr [rax], al ; add al, dl ; ret 0x39
0x000000000014cdad : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000010e41a : add byte ptr [rax], al ; add bh, bh ; loope 0x10e3b7 ; ret
0x00000000000c54b3 : add byte ptr [rax], al ; add bh, dh ; ret
0x000000000017008a : add byte ptr [rax], al ; add bh, dl ; jmp 0x170094
0x00000000000b9daa : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000001116ab : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000346d9 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000007fb9a : add byte ptr [rax], al ; add bl, al ; ret
0x0000000000110dfc : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x0000000000189727 : add byte ptr [rax], al ; add bl, byte ptr [rbp + 0x283100e] ; ret
0x00000000000c32a7 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000007a22d : add byte ptr [rax], al ; add bl, ch ; ret 0x8d48
0x000000000009662d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009663d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002ad45 : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000b8d9d : add byte ptr [rax], al ; add byte ptr [rax + 0x20], bh ; ret
0x000000000004fe54 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000acb09 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000004ced6 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x00000000000f80c1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; enter 0x577, -0x17 ; ret 0xfa44
0x000000000005015f : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000002adac : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000000a9b62 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x940f
0x000000000008e2bf : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xc748
0x000000000016e2cb : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00000000000c8dba : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000c9438 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000001058b5 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8949
0x000000000006e9fd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x0000000000096b7d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000b8c28 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x00000000000e17d6 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000000b710e : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000011a672 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000024afd : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8545
0x00000000000e2e5f : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000dd842 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000532f6 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xbd83
0x000000000008d228 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000025472 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x00000000000b8c7c : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000035061 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xc748
0x00000000000b8ced : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000ddd5a : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000002915d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000009a4c0 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000387f4 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000010b4bd : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000b8ef4 : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x000000000018347b : add byte ptr [rax], al ; add byte ptr [rax + 7], dl ; call qword ptr [rsi]
0x000000000019178d : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; pop rsp ; ret
0x0000000000191825 : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; hlt ; ret
0x00000000001916d5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000019167d : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; ret 1
0x000000000018169d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0
0x000000000009bb23 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000177cb1 : add byte ptr [rax], al ; add byte ptr [rax + rbp], bh ; add byte ptr [rax], ch ; ret
0x0000000000177c41 : add byte ptr [rax], al ; add byte ptr [rax + rbp], cl ; add byte ptr [rax], al ; js 0x177c14 ; jmp 0x177c53
0x0000000000177c81 : add byte ptr [rax], al ; add byte ptr [rax + rbp], cl ; add byte ptr [rax], bl ; ret
0x0000000000170a42 : add byte ptr [rax], al ; add byte ptr [rax - 0x11], bh ; jmp qword ptr [rax]
0x00000000000e0a2d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000332ac : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000002931b : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000bf795 : add byte ptr [rax], al ; add byte ptr [rax - 0x6bf0d405], al ; ret 0xfb80
0x00000000000f0a88 : add byte ptr [rax], al ; add byte ptr [rax - 0x71f0ffc8], al ; ret
0x000000000009bb6d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x000000000009bb7d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000009bb5d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000009ba9f : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; lock ; ret
0x0000000000079cc4 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ret
0x00000000000aa4fd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000000e19ac : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xffffffb0 ; ret
0x00000000000773e7 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; imul ecx, dword ptr [rax], -0x15 ; ret
0x00000000000e7215 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x0000000000079f15 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x000000000007c81d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor al, 0x24 ; jmp rax
0x000000000011d3dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000007750d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000007f268 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call rdx
0x00000000000bf32d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x7d] ; ret
0x00000000000aa7d6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000ecbd2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000006d283 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x3a
0x000000000007f529 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000010e921 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x10abd8
0x000000000010b77a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000030f89 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000106718 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000006ae59 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x5e8b
0x00000000000ce88a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x7a80
0x00000000000d49cd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000010b78c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000006b5e6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000006afed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb4e9
0x000000000009f81a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xd929
0x00000000000b327a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xed31
0x000000000008b43b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000397a6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf929
0x00000000000658d1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7c ; ret
0x0000000000113c11 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], cl ; pop rbx ; ret
0x0000000000038134 : add byte ptr [rax], al ; add byte ptr [rax - 0x7c], al ; dec dword ptr [rdi] ; ret 0x8348
0x000000000002a3e5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010564d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x000000000009999d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000e22cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000006b812 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000002f96a : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x0000000000021493 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000070359 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4803
0x00000000000c8dad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000e9ce8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x000000000002576c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000011fd53 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000084d9d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000084d2d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000a1e2d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000001218d1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000005b3fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000000000011fd7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000009049d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], -0x7d ; ret 0x4840
0x00000000000a3cad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], -0x7d ; ret 0x4801
0x0000000000133be4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000324ab : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000033afb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000017d47a : add byte ptr [rax], al ; add byte ptr [rax], 0 ; xor byte ptr [rax - 0x11], ch ; jmp qword ptr [rsi]
0x000000000001cf1d : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000001cc95 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x39
0x000000000018169c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0
0x000000000001d0e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret
0x000000000001ce5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x39
0x000000000001d083 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret
0x000000000001d12b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret
0x000000000001cea3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret 0x39
0x000000000001d0cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret
0x000000000001ce43 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret 0x39
0x000000000001d0fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000001ce73 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x39
0x00000000000e324d : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfff3
0x000000000001d09b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret
0x000000000001d113 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x000000000001ce8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x39
0x000000000001d0b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret
0x000000000001ce2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x39
0x000000000009663b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000007133b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000006e9fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000009bb6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x000000000009bb7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000009bb5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007c81b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor al, 0x24 ; jmp rax
0x000000000007750b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d49cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000f0eab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000006afeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb4e9
0x000000000002b79b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009999b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000e22cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000008dc7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x00000000000232eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c8dab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000084d9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000084d2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000a1e2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000005b3fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000000000001cf1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000001cc93 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x39
0x0000000000197ef0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000016e3ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bh ; cli ; call rax
0x000000000016d7aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000000733a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000a142 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x15
0x000000000001a5d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1656
0x00000000000106e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x19
0x00000000001563a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000004b02 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x0000000000000548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x000000000000559a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000000ff7a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000f3aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x00000000000078da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x35
0x00000000000059ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x37
0x00000000000049fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3b
0x000000000000cc02 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x48
0x000000000000bfa2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4e
0x00000000000079fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x0000000000197ab2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000197ef2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000000011d6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000000158a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000015e2f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, edi ; jrcxz 0x15e303 ; jmp qword ptr [rdi]
0x000000000015e372 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, edi ; jrcxz 0x15e383 ; jmp qword ptr [rdi]
0x000000000015e3f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, edi ; jrcxz 0x15e403 ; jmp qword ptr [rdi]
0x000000000001cf63 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x000000000001ccdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x39
0x000000000001cf03 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x000000000001cc7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x39
0x000000000001cf33 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x000000000001ccab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x39
0x000000000001ced3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x00000000000993fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001cf4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000001ccc3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x39
0x000000000001ceeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000001cc63 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x39
0x0000000000036c49 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000e43fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000099bdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000206bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000c286b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x000000000011e20b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008026b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016d7ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00000000000c313b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b48
0x000000000016e3bc : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bh ; cli ; call rax
0x000000000006a12b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000009b54c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000b2edc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000034854 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; ret
0x00000000000e1c9c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000019178c : add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000000e324e : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x1f4a6
0x000000000014cdac : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000011d5ac : add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x00000000001583cc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000015757c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000001d12c : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret
0x000000000001cea4 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x39
0x00000000000df587 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x00000000000e98e7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00000000000e17d5 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x000000000008d227 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000c2437 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x000000000001d00c : add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret
0x000000000001cdfc : add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x39
0x000000000017163a : add byte ptr [rax], al ; add byte ptr [rax], al ; int1 ; jmp qword ptr [rax]
0x000000000008a68a : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x8a699 ; ret
0x00000000001816cc : add byte ptr [rax], al ; add byte ptr [rax], al ; jl 0x1816db ; add byte ptr [rax], al ; pushfq ; ret 0
0x00000000000467af : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000009b7f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x9b7ef ; ret
0x0000000000149f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000149f2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000149f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000149f4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000149f5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000149e9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000149eac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000149ebc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000149ecc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000149edc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000149eec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000149efc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000149f0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009bb5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x000000000009bb7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x000000000009bb6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x0000000000149e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000014203c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x0000000000096b7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000009557c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009654c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x0000000000196cb8 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ch, 5 ; add byte ptr [rax], al ; ret
0x000000000009624c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000014207c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000014209c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000014206c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000da27c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009656c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009658c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009657c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000b8d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x20 ; ret
0x00000000000b8cec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000007643c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002915c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000010b4bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000001161dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000b3ccc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; ret
0x00000000000f8b7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edi ; bswap eax ; ret
0x0000000000069dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000f800b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0xf7fdc
0x0000000000134bcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000071084 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x00000000001420ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x0000000000116588 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000965ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000965bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000010ae9a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000e7214 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000b3bbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000774fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000007750c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000006aacc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x000000000007c81c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rsp] ; jmp rax
0x000000000014204c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009655c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000009662c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009663c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000134d1c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000001cff4 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000001cde4 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x39
0x000000000001fd89 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x0000000000116389 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000037a9b : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x000000000001cfc4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x000000000001cd3c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0x39
0x000000000008cbd2 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000ea408 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000036c4a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000076669 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000029a81 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000016d7ac : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000016e2ca : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000001cfac : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x000000000001cd24 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x39
0x000000000000733c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000e9e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000000a144 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x15
0x000000000001a5d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1656
0x00000000000106e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x19
0x000000000015739c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000157b34 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000001563a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000004b04 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000000054a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x000000000000559c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000000ff7c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000f3ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x00000000000078dc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x35
0x00000000000059bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x37
0x000000000001ccf4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x39
0x00000000000049fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3b
0x000000000000cc04 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x48
0x000000000000bfa4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4e
0x00000000000079fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x0000000000009efc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000197ef4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000000011d8 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000000158c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x0000000000191824 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; hlt ; ret
0x00000000000efae4 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub eax, edi ; ret
0x000000000015e2f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, edi ; jrcxz 0x15e301 ; jmp qword ptr [rdi]
0x000000000015e374 : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, edi ; jrcxz 0x15e381 ; jmp qword ptr [rdi]
0x000000000015e3f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, edi ; jrcxz 0x15e401 ; jmp qword ptr [rdi]
0x00000000001916d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000019167c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; ret 1
0x00000000000993fc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000036b52 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000003717c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008c62c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000001cf65 : add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x000000000001ccdd : add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x39
0x000000000001cf05 : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x000000000001cc7d : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x39
0x000000000001cf35 : add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x000000000001ccad : add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x39
0x000000000001ced5 : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x00000000000993fd : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001cf4d : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000001ccc5 : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x39
0x000000000001ceed : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000001cc65 : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x39
0x0000000000028f0e : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000aeadb : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000a58e6 : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret 0x1945
0x000000000004f07c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000006cf2f : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000d2010 : add byte ptr [rax], al ; add byte ptr [rbp + 0x6348ff55], cl ; ret 0x8d48
0x00000000000c30a2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x63], cl ; ret 0x148b
0x00000000001164f4 : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; ret
0x00000000000c8c5c : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x43], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000109f25 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x1c ; call qword ptr [rax]
0x000000000010a458 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x000000000009b7f3 : add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dh ; ret
0x0000000000042785 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000067ad5 : add byte ptr [rax], al ; add byte ptr [rbp - 0xcfb8b37], al ; ret
0x000000000009a209 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000f5206 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000105482 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f05f8], al ; ret 0x4589
0x000000000010545a : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f1ef8], al ; ret 0x4589
0x00000000001344ad : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000002948a : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000020194 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000227d6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000009db0c : add byte ptr [rax], al ; add byte ptr [rbx + 0xc7413f8], al ; mov edx, eax ; jmp 0x9dae9
0x00000000000a013c : add byte ptr [rax], al ; add byte ptr [rbx + 0xc7413f8], al ; mov edx, eax ; jmp 0xa0119
0x00000000000a25cc : add byte ptr [rax], al ; add byte ptr [rbx + 0xc7413f8], al ; mov edx, eax ; jmp 0xa25a9
0x0000000000036dad : add byte ptr [rax], al ; add byte ptr [rbx + 0xf48fffa], al ; ret
0x0000000000149c38 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00000000000d062b : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x2c], cl ; ret
0x000000000005143d : add byte ptr [rax], al ; add byte ptr [rbx - 0x110743], al ; call qword ptr [rax]
0x00000000000533e9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x113743], al ; call qword ptr [rax]
0x00000000000eb96e : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7f440], al ; push rsp ; ret 0x8940
0x00000000000ebdce : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7f540], al ; push rsp ; ret 0x8940
0x00000000000ebb0e : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7f640], al ; push rsp ; ret 0x8940
0x00000000000eba8e : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7f740], al ; push rsp ; ret 0x8940
0x00000000000ebcae : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7f840], al ; push rsp ; ret 0x8940
0x00000000000ebd3e : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7f940], al ; push rsp ; ret 0x8940
0x00000000000ebe5e : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7fa40], al ; push rsp ; ret 0x8940
0x00000000000ebf7e : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7fb40], al ; push rsp ; ret 0x8940
0x00000000000ebb9e : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7fc40], al ; push rsp ; ret 0x8940
0x00000000000eb9fe : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7fd40], al ; push rsp ; ret 0x8940
0x00000000000ebc1e : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7fe40], al ; push rsp ; ret 0x8940
0x0000000000036c4b : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000067e0f : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; lock pop rbp ; pop r12 ; ret
0x000000000004ee77 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000004266d : add byte ptr [rax], al ; add byte ptr [rbx - 0x78f0d007], al ; ret
0x00000000000c11dd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x00000000000e43fd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000001844fe : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], al ; jmp qword ptr [rcx]
0x0000000000079b3c : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000014209d : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000000b4fb0 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x000000000006bc75 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000000741b4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000000f63a4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x000000000014207d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x000000000009658d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x0000000000071085 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x00000000000bf1a9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000099eef : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000099bdd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000008f089 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x8947
0x0000000000177d81 : add byte ptr [rax], al ; add byte ptr [rcx + rbp], cl ; add al, bh ; ret
0x00000000000ef91d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*2 - 0x75], ah ; xor byte ptr [rax - 0x7d], cl ; ret 0xf601
0x0000000000066cd6 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000002dbf7 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000068df0 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000009c86f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000007c018 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000052076 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x6e358
0x0000000000184d69 : add byte ptr [rax], al ; add byte ptr [rcx + rdi*8], dh ; add byte ptr [rax], al ; ret
0x00000000000f68f9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x10c27c30], cl ; ret
0x000000000010f921 : add byte ptr [rax], al ; add byte ptr [rcx - 0x17f7dbbc], cl ; ret
0x00000000000da27d : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00000000000bb29d : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x7d], r9b ; ret 0x4808
0x0000000000040a63 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x00000000000d4359 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; push rbp ; and byte ptr [rcx - 0x7d], cl ; ret
0x00000000000a4144 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x00000000000ce27d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7cb76fec], cl ; ret 0x4801
0x00000000000206bd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000cd870 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000314f7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000c286d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x000000000011e20d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008026d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016d7ad : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x0000000000084ec0 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000084ee6 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000017b3ae : add byte ptr [rax], al ; add byte ptr [rcx], -0x11 ; jmp qword ptr [rbx]
0x00000000000c9ac1 : add byte ptr [rax], al ; add byte ptr [rcx], al ; fdivr dword ptr [rcx] ; ret
0x00000000000d4a1b : add byte ptr [rax], al ; add byte ptr [rcx], al ; jne 0xd4a2f ; ret
0x00000000000417a8 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x67e9
0x00000000000c313d : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b48
0x00000000000a6715 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000efae5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; clc ; ret
0x0000000000083d4c : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x000000000004defa : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x5489
0x00000000000b1a86 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x748d
0x00000000000afb05 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x0000000000123bdb : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xca39
0x00000000000afa6e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000e088f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x000000000009db33 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0x9dae6
0x00000000000a0163 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa0116
0x00000000000a25f3 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa25a6
0x000000000003663a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000081a07 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x00000000000b76f5 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x7f], cl ; ret 0x2d0
0x000000000009b262 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x000000000014bce2 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000007e274 : add byte ptr [rax], al ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x00000000000f5155 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x000000000009a165 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000134cad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000134d1d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000038cdd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000250c1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000084ddd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000b28d1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000b0e45 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x00000000000a4c2e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x1f0f
0x0000000000029bfe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00000000000c9472 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x833b
0x00000000000f535d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8348
0x000000000004032c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x000000000011c6be : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8964
0x0000000000040ce6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d48
0x00000000000c2438 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000d2541 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xaee9
0x000000000003a217 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc801
0x00000000000aedff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd801
0x00000000000413ce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xe9
0x00000000000d44cc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000001104d0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xda09
0x0000000000123b25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x00000000000c6fac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x0000000000067449 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd089
0x0000000000191e99 : add byte ptr [rax], al ; add byte ptr [rdx + rcx*8 + 1], ah ; add al, ah ; ret 0xfff7
0x000000000017919e : add byte ptr [rax], al ; add byte ptr [rdx - 0x14], al ; jmp rax
0x0000000000147b02 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000084cf2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000daac5 : add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x0000000000189a79 : add byte ptr [rax], al ; add byte ptr [rsi + rax*2 + 1], al ; add byte ptr [rax], dh ; ret
0x0000000000194326 : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x000000000017080a : add byte ptr [rax], al ; add byte ptr [rsi], ch ; in eax, dx ; jmp rax
0x00000000000da257 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x00000000000d499f : add byte ptr [rax], al ; add byte ptr [rsp + rcx - 0xd], dh ; ret
0x0000000000179d9a : add byte ptr [rax], al ; add byte ptr fs:[r8], al ; mov al, -0x55 ; in al, dx ; jmp qword ptr [rbx]
0x000000000017f2fe : add byte ptr [rax], al ; add ch, bh ; out dx, eax ; jmp qword ptr [rdx]
0x00000000000629f0 : add byte ptr [rax], al ; add cl, ch ; clc ; ret 0xffff
0x000000000006298f : add byte ptr [rax], al ; add cl, ch ; pop rcx ; ret
0x00000000000524ae : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000111e2c : add byte ptr [rax], al ; add cl, ch ; ret 0xfffb
0x00000000000e9630 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x0000000000175342 : add byte ptr [rax], al ; add cl, cl ; std ; call rax
0x000000000017163b : add byte ptr [rax], al ; add cl, dh ; jmp qword ptr [rax]
0x0000000000170c2a : add byte ptr [rax], al ; add dh, al ; out dx, eax ; call qword ptr [rax]
0x000000000016e3be : add byte ptr [rax], al ; add dh, bh ; cli ; call rax
0x00000000000ae4b8 : add byte ptr [rax], al ; add dh, dh ; ret
0x000000000006a12d : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000014b151 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000000c48c1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x000000000002b390 : add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x0000000000090b00 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x0000000000090b09 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00000000000f1ed0 : add byte ptr [rax], al ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x0000000000188277 : add byte ptr [rax], al ; add dl, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x00000000000f4261 : add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d4a1c : add byte ptr [rax], al ; add dword ptr [rbp + 7], esi ; ret
0x00000000000c0b56 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x7fe9
0x000000000009b54e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000084ba4 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000010efd1 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000111521 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000110c81 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x000000000010e414 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x00000000000b2ede : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000034856 : add byte ptr [rax], al ; add rsp, 0x10 ; ret
0x000000000010bec6 : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000034029 : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x0000000000033a36 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x00000000000331d6 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000334cb : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000033806 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000075b2c : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000f8b3b : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000010c90d : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000033d0a : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x00000000000407d1 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000083c5a : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x00000000000423b8 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, edx ; ret
0x00000000000216d7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000034cce : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000019178e : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x0000000000176d5a : add byte ptr [rax], al ; and al, 0x19 ; add byte ptr [rax], al ; push rax ; pop rsi ; jmp 0x176d6c
0x000000000018745a : add byte ptr [rax], al ; and al, 0x20 ; add dword ptr [rax], eax ; xor byte ptr [rbx], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000178c5a : add byte ptr [rax], al ; and al, 0x38 ; add byte ptr [rax], al ; adc bl, ch ; jmp 0x178c6c
0x000000000018a35a : add byte ptr [rax], al ; and al, 0x4f ; add dword ptr [rax], eax ; xor ah, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000170142 : add byte ptr [rax], al ; and al, 0xffffffec ; jmp rax
0x000000000017ff5a : add byte ptr [rax], al ; and al, 0xffffffffffffffab ; add byte ptr [rax], al ; push rsp ; cli ; call qword ptr [rax]
0x000000000018265a : add byte ptr [rax], al ; and al, 0xffffffffffffffd2 ; add byte ptr [rax], al ; mov al, 0x53 ; call qword ptr [rsi]
0x0000000000183b5a : add byte ptr [rax], al ; and al, 0xffffffffffffffe7 ; add byte ptr [rax], al ; push rax ; and ebx, esi ; call rdi
0x000000000018405a : add byte ptr [rax], al ; and al, 0xffffffffffffffec ; add byte ptr [rax], al ; push rax ; xor esi, ebx ; jmp qword ptr [rcx]
0x000000000018787a : add byte ptr [rax], al ; and al, 1 ; add al, al ; cmc ; jmp qword ptr [rcx]
0x000000000000a71a : add byte ptr [rax], al ; and al, byte ptr [rax] ; or al, 0 ; push rax ; ret
0x000000000000996a : add byte ptr [rax], al ; and al, byte ptr [rax] ; or al, 0 ; ret
0x0000000000170e82 : add byte ptr [rax], al ; and byte ptr [rax + rsi*8], cl ; call rax
0x0000000000183d6e : add byte ptr [rax], al ; and byte ptr [rax], ch ; call rdi
0x0000000000175b2e : add byte ptr [rax], al ; and byte ptr [rbp - 3], ah ; jmp qword ptr [rdx]
0x000000000017d8be : add byte ptr [rax], al ; and byte ptr [rbx - 0x11], bh ; jmp qword ptr [rsi]
0x00000000001716a2 : add byte ptr [rax], al ; and byte ptr [rcx + rsi*8], bl ; call rax
0x000000000017020a : add byte ptr [rax], al ; and byte ptr [rcx], bh ; in al, dx ; call rax
0x00000000001708fa : add byte ptr [rax], al ; and byte ptr [rdi - 0x13], cl ; call qword ptr [rax]
0x0000000000162f6e : add byte ptr [rax], al ; and byte ptr [rdi - 6], bh ; inc dword ptr [rax] ; jg 0x162f7a ; jmp rax
0x000000000017017a : add byte ptr [rax], al ; and byte ptr [rdx], dh ; in al, dx ; call qword ptr [rax]
0x00000000001701ca : add byte ptr [rax], al ; and byte ptr [rsi], dh ; in al, dx ; call qword ptr [rax]
0x0000000000170f43 : add byte ptr [rax], al ; and dh, al ; jmp qword ptr [rax]
0x000000000017bd1e : add byte ptr [rax], al ; and dil, bpl ; jmp qword ptr [rax]
0x00000000000e83af : add byte ptr [rax], al ; and eax, 0xfffff000 ; or eax, edi ; ret
0x000000000002cddb : add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000084dde : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000081d67 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000083854 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x000000000017b636 : add byte ptr [rax], al ; call 0x1117a54d
0x00000000000a891f : add byte ptr [rax], al ; call 0x11d959
0x0000000000178b26 : add byte ptr [rax], al ; call 0x1717771b
0x00000000000e3250 : add byte ptr [rax], al ; call 0x1f4a4
0x00000000001844e6 : add byte ptr [rax], al ; call 0x22183834
0x000000000017c0e6 : add byte ptr [rax], al ; call 0x2317b01c
0x0000000000177806 : add byte ptr [rax], al ; call 0x241763cb
0x00000000000eeece : add byte ptr [rax], al ; call 0x6d459
0x000000000006996e : add byte ptr [rax], al ; call 0x75c24
0x000000000007bf85 : add byte ptr [rax], al ; call 0x78204
0x0000000000179286 : add byte ptr [rax], al ; call 0xffffffffd8177ed9
0x000000000017a1f6 : add byte ptr [rax], al ; call 0xffffffffd8178f4e
0x0000000000181056 : add byte ptr [rax], al ; call 0xffffffffe41801d1
0x000000000011d2f6 : add byte ptr [rax], al ; call qword ptr [rax]
0x000000000014cdae : add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000155862 : add byte ptr [rax], al ; call qword ptr [rcx]
0x0000000000020060 : add byte ptr [rax], al ; call rax
0x000000000011d5ae : add byte ptr [rax], al ; call rcx
0x00000000001583ce : add byte ptr [rax], al ; call rdi
0x000000000002eca2 : add byte ptr [rax], al ; call rdx
0x000000000015757e : add byte ptr [rax], al ; call rsp
0x000000000001d12e : add byte ptr [rax], al ; clc ; ret
0x000000000001cea6 : add byte ptr [rax], al ; clc ; ret 0x39
0x00000000001810e6 : add byte ptr [rax], al ; clc ; sub edx, edi ; jmp qword ptr [rdi]
0x0000000000176616 : add byte ptr [rax], al ; clc ; xor ebp, ebx ; call qword ptr [rdx]
0x0000000000184732 : add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; cmp byte ptr [rbp - 0xd], dl ; call qword ptr [rax]
0x0000000000187b32 : add byte ptr [rax], al ; cld ; add dword ptr es:[rax], eax ; or byte ptr [rdi - 0xb], cl ; jmp qword ptr [rcx]
0x000000000018a432 : add byte ptr [rax], al ; cld ; add qword ptr [r8], r8 ; cmp ch, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000187832 : add byte ptr [rax], al ; cld ; and eax, dword ptr [rcx] ; add byte ptr [rax + 0x42], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000193032 : add byte ptr [rax], al ; cld ; fild dword ptr [rcx] ; add byte ptr [rax], bh ; clc ; call qword ptr [rbx]
0x000000000016eaa8 : add byte ptr [rax], al ; cld ; jmp rax
0x0000000000190132 : add byte ptr [rax], al ; cld ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; jo 0x19013b ; jmp qword ptr [rcx]
0x0000000000181432 : add byte ptr [rax], al ; cld ; mov edi, 0xa3280000 ; int1 ; jmp rsi
0x0000000000180f32 : add byte ptr [rax], al ; cld ; mov edx, 0xb5380000 ; sti ; call qword ptr [rax]
0x0000000000176e32 : add byte ptr [rax], al ; cld ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x5e], ch ; jmp 0x176e44
0x0000000000178a32 : add byte ptr [rax], al ; cld ; xor eax, 0xe9680000 ; jmp 0x178a44
0x00000000000df589 : add byte ptr [rax], al ; cmova eax, edx ; ret
0x00000000000e98e9 : add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x0000000000105d89 : add byte ptr [rax], al ; cmove ecx, eax ; jmp 0x105d59
0x00000000000e17d7 : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x000000000008d229 : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000112603 : add byte ptr [rax], al ; cmovne eax, edx ; add rsp, 0x78 ; ret
0x00000000000c2439 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000b8c7d : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000ef78f : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000183772 : add byte ptr [rax], al ; cmp al, -0x1d ; add byte ptr [rax], al ; or byte ptr [rcx], dl ; call rdx
0x0000000000182872 : add byte ptr [rax], al ; cmp al, -0x2c ; add byte ptr [rax], al ; cwde ; pop rax ; call qword ptr [rcx]
0x0000000000181d72 : add byte ptr [rax], al ; cmp al, -0x37 ; add byte ptr [rax], al ; pop rax ; out -0xf, al ; jmp rax
0x0000000000187472 : add byte ptr [rax], al ; cmp al, 0x20 ; add dword ptr [rax], eax ; cmp rsi, rbp ; jmp qword ptr [rcx]
0x000000000018a372 : add byte ptr [rax], al ; cmp al, 0x4f ; add dword ptr [rax], eax ; in al, -0xb ; jmp qword ptr [rcx]
0x000000000017cf72 : add byte ptr [rax], al ; cmp al, 0x7b ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x11], bl ; jmp qword ptr [rdi]
0x0000000000195872 : add byte ptr [rax], al ; cmp al, 4 ; add al, byte ptr [rax] ; or byte ptr [rbx - 8], bh ; jmp qword ptr [rsi]
0x0000000000171632 : add byte ptr [rax], al ; cmp bh, -0x10 ; jmp rax
0x0000000000145fb6 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000184736 : add byte ptr [rax], al ; cmp byte ptr [rbp - 0xd], dl ; call qword ptr [rax]
0x0000000000171063 : add byte ptr [rax], al ; cmp dh, al ; call rax
0x0000000000188d9a : add byte ptr [rax], al ; cmp dword ptr fs:[rcx], eax ; add byte ptr [rax], al ; xchg eax, ecx ; cmc ; jmp qword ptr [rsi]
0x00000000000702c7 : add byte ptr [rax], al ; cmp eax, -1 ; jne 0x702d8 ; pop rbx ; ret
0x000000000009db0d : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0x9db28 ; mov edx, eax ; jmp 0x9dae8
0x00000000000a013d : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xa0158 ; mov edx, eax ; jmp 0xa0118
0x00000000000a25cd : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xa25e8 ; mov edx, eax ; jmp 0xa25a8
0x000000000017919a : add byte ptr [rax], al ; cmp eax, 0x42000000 ; in al, dx ; jmp rax
0x00000000000b7990 : add byte ptr [rax], al ; cmp eax, 0xfffff001 ; jae 0xb79a3 ; ret
0x000000000009c1d7 : add byte ptr [rax], al ; cmp edi, 0x7f ; ja 0x9c1f1 ; mov eax, edi ; ret
0x00000000000b2bae : add byte ptr [rax], al ; cmp esi, 1 ; je 0xb2bc9 ; xor eax, eax ; ret
0x00000000000763de : add byte ptr [rax], al ; cmp qword ptr [rdi + 0x38], 0 ; je 0x763f9 ; ret
0x000000000006e495 : add byte ptr [rax], al ; cmp qword ptr [rsi + 0x30], 0 ; je 0x6e4a9 ; ret
0x00000000000b8d68 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xb8da8 ; ret
0x0000000000175263 : add byte ptr [rax], al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp rax
0x0000000000178756 : add byte ptr [rax], al ; cwde ; loop 0x17874b ; call qword ptr [rcx]
0x0000000000181956 : add byte ptr [rax], al ; cwde ; mov bh, -0xf ; call qword ptr [rax]
0x000000000017e6b6 : add byte ptr [rax], al ; cwde ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; call qword ptr [rdi]
0x0000000000182876 : add byte ptr [rax], al ; cwde ; pop rax ; call qword ptr [rcx]
0x00000000001827f6 : add byte ptr [rax], al ; cwde ; pop rax ; jmp qword ptr [rcx]
0x0000000000176ec6 : add byte ptr [rax], al ; cwde ; pop rsi ; jmp 0x176ed0
0x0000000000176f26 : add byte ptr [rax], al ; cwde ; pop rsi ; jmp 0x176f30
0x000000000001d00e : add byte ptr [rax], al ; cwde ; ret
0x000000000001cdfe : add byte ptr [rax], al ; cwde ; ret 0x39
0x000000000017da12 : add byte ptr [rax], al ; fadd qword ptr [rbp - 0x7df80000] ; out dx, eax ; call qword ptr [rdx]
0x0000000000189912 : add byte ptr [rax], al ; fadd qword ptr [rcx + rax] ; mov cl, al ; cmc ; call qword ptr [rdx]
0x0000000000181a12 : add byte ptr [rax], al ; fadd st(5), st(0) ; add byte ptr [rax], al ; cwde ; mov bh, -0xf ; call qword ptr [rax]
0x0000000000176612 : add byte ptr [rax], al ; fcom qword ptr [rcx] ; add byte ptr [rax], al ; clc ; xor ebp, ebx ; call qword ptr [rdx]
0x000000000018ab12 : add byte ptr [rax], al ; fcom qword ptr [rsi + 1] ; add byte ptr [rax], bl ; lock cmc ; jmp qword ptr [rcx]
0x000000000017c912 : add byte ptr [rax], al ; fdiv qword ptr [rax + rax] ; pop rax ; out dx, eax ; jmp rbx
0x0000000000178c12 : add byte ptr [rax], al ; fdiv qword ptr [rdi] ; add byte ptr [rax], al ; sbb bl, ch ; jmp 0x178c24
0x0000000000178da6 : add byte ptr [rax], al ; fdiv st(2) ; jmp 0x178db0
0x0000000000178dd6 : add byte ptr [rax], al ; fdiv st(2) ; jmp 0x178de0
0x0000000000178e06 : add byte ptr [rax], al ; fdiv st(2) ; jmp 0x178e10
0x000000000017a112 : add byte ptr [rax], al ; fmul qword ptr [rax + rax] ; xor bpl, bpl ; call rdi
0x000000000018a312 : add byte ptr [rax], al ; fmul qword ptr [rsi + 1] ; add al, ch ; jrcxz 0x18a319 ; jmp qword ptr [rcx]
0x0000000000033746 : add byte ptr [rax], al ; fstp st(1) ; ret
0x0000000000187512 : add byte ptr [rax], al ; fsub qword ptr [rax] ; add dword ptr [rax], eax ; js 0x18755e ; cmc ; jmp qword ptr [rcx]
0x000000000017652a : add byte ptr [rax], al ; hlt ; adc byte ptr [rax], al ; add byte ptr [rax], dh ; jmp 0x17653c
0x000000000018a32a : add byte ptr [rax], al ; hlt ; add qword ptr [rax], r8 ; add ah, ah ; cmc ; jmp qword ptr [rcx]
0x000000000017cbd2 : add byte ptr [rax], al ; hlt ; and dword ptr [rax], eax ; add byte ptr [rax + 0x54], ch ; out dx, eax ; jmp qword ptr [rbx]
0x000000000019372a : add byte ptr [rax], al ; hlt ; loop 0x193739 ; add byte ptr [rax + 0xb], ah ; clc ; call qword ptr [rdx]
0x000000000017dd2a : add byte ptr [rax], al ; hlt ; mov byte ptr [rax], al ; add byte ptr [rax - 0x77], dh ; out dx, eax ; call qword ptr [rcx]
0x000000000017f92a : add byte ptr [rax], al ; hlt ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; nop ; and esi, eax ; jmp qword ptr [rax]
0x000000000017af8f : add byte ptr [rax], al ; hlt ; out dx, al ; call qword ptr [rax]
0x000000000018ab2a : add byte ptr [rax], al ; hlt ; push rsi ; add dword ptr [rax], eax ; xor al, dh ; cmc ; jmp qword ptr [rcx]
0x000000000019182a : add byte ptr [rax], al ; hlt ; ret
0x000000000019282a : add byte ptr [rax], al ; hlt ; rol dword ptr [rcx], cl ; add byte ptr [rax], al ; jrcxz 0x192833 ; jmp qword ptr [rax]
0x000000000019301a : add byte ptr [rax], al ; in al, -0x25 ; add dword ptr [rax], eax ; jo 0x19302b ; clc ; call qword ptr [rcx]
0x000000000018a32f : add byte ptr [rax], al ; in al, -0xb ; jmp qword ptr [rcx]
0x0000000000184f1a : add byte ptr [rax], al ; in al, -6 ; add byte ptr [rax], al ; adc bh, cl ; call rdi
0x000000000019551a : add byte ptr [rax], al ; in al, 0 ; add al, byte ptr [rax] ; loopne 0x1955a0 ; clc ; call qword ptr [rdi]
0x0000000000186b1a : add byte ptr [rax], al ; in al, 0x16 ; add dword ptr [rax], eax ; sal ch, 1 ; hlt ; call qword ptr [rbx]
0x0000000000177c1a : add byte ptr [rax], al ; in al, 0x27 ; add byte ptr [rax], al ; adc dl, al ; jmp 0x177c2a
0x000000000017891a : add byte ptr [rax], al ; in al, 0x34 ; add byte ptr [rax], al ; lock in eax, -0x15 ; jmp rsp
0x000000000018a01a : add byte ptr [rax], al ; in al, 0x4b ; add dword ptr [rax], eax ; and cl, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a41a : add byte ptr [rax], al ; in al, 0x4f ; add dword ptr [rax], eax ; and ch, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a91a : add byte ptr [rax], al ; in al, 0x54 ; add dword ptr [rax], eax ; in eax, dx ; cmc ; jmp qword ptr [rbx]
0x000000000017bd1a : add byte ptr [rax], al ; in al, 0x68 ; add byte ptr [rax], al ; and dil, bpl ; jmp qword ptr [rax]
0x0000000000184822 : add byte ptr [rax], al ; in al, dx ; add byte ptr [rax], al ; or byte ptr [rdi - 0xd], dl ; jmp rdx
0x0000000000178b22 : add byte ptr [rax], al ; in al, dx ; add byte ptr ss:[rax], al ; call 0x1717771f
0x000000000018a122 : add byte ptr [rax], al ; in al, dx ; add qword ptr [rax], r8 ; sbb dl, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000189f22 : add byte ptr [rax], al ; in al, dx ; add qword ptr [rax], rax ; fcom st(1) ; cmc ; jmp qword ptr [rcx]
0x000000000017919f : add byte ptr [rax], al ; in al, dx ; jmp rax
0x000000000018de22 : add byte ptr [rax], al ; in al, dx ; mov dword ptr [rcx], eax ; add byte ptr [rax], bl ; ret
0x0000000000177d22 : add byte ptr [rax], al ; in al, dx ; sub byte ptr [rax], al ; add al, bh ; ret
0x000000000017080b : add byte ptr [rax], al ; in eax, dx ; jmp rax
0x0000000000170dca : add byte ptr [rax], al ; in eax, dx ; out dx, eax ; call qword ptr [rax]
0x00000000001879a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; and eax, 0x4a680001 ; cmc ; jmp qword ptr [rcx]
0x0000000000178da2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp dword ptr [rax], eax ; add al, bl ; jmp 0x178db4
0x0000000000190ba2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov bh, 1 ; add al, cl ; test dh, bh ; jmp qword ptr [rbx]
0x00000000001816a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0
0x000000000017163c : add byte ptr [rax], al ; int1 ; jmp qword ptr [rax]
0x0000000000174f8b : add byte ptr [rax], al ; iretd ; cli ; call qword ptr [rax]
0x00000000001712ea : add byte ptr [rax], al ; jbe 0x1712e4 ; call rax
0x000000000019554f : add byte ptr [rax], al ; jbe 0x19554f ; call qword ptr [rax]
0x00000000000daac6 : add byte ptr [rax], al ; jbe 0xdaad5 ; ret
0x0000000000176eaa : add byte ptr [rax], al ; je 0x176ed1 ; add byte ptr [rax], al ; nop ; pop rsi ; jmp 0x176ebc
0x000000000017b3aa : add byte ptr [rax], al ; je 0x17b416 ; add byte ptr [rax], al ; add byte ptr [rcx], -0x11 ; jmp qword ptr [rbx]
0x00000000001827aa : add byte ptr [rax], al ; je 0x18278a ; add byte ptr [rax], al ; push rax ; pop rax ; call qword ptr [rcx]
0x00000000001871aa : add byte ptr [rax], al ; je 0x1871d4 ; add dword ptr [rax], eax ; mov al, 0x68 ; stc ; call qword ptr [rax]
0x00000000001876aa : add byte ptr [rax], al ; je 0x1876d9 ; add dword ptr [rax], eax ; adc byte ptr [rsi], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001878aa : add byte ptr [rax], al ; je 0x1878db ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], al ; jmp qword ptr [rcx]
0x000000000018a0aa : add byte ptr [rax], al ; je 0x18a103 ; add dword ptr [rax], eax ; movsd dword ptr [rdi], dword ptr [rsi] ; loope 0x18a0b1 ; call qword ptr [rcx]
0x000000000018a4aa : add byte ptr [rax], al ; je 0x18a507 ; add dword ptr [rax], eax ; mov al, -0x1b ; cmc ; jmp qword ptr [rcx]
0x000000000018adaa : add byte ptr [rax], al ; je 0x18ae10 ; add dword ptr [rax], eax ; mov al, -5 ; cmc ; call qword ptr [rsi]
0x000000000018c87a : add byte ptr [rax], al ; je 0x18c889 ; add byte ptr [rax - 1], al ; sti ; jmp qword ptr [rsi]
0x0000000000193daa : add byte ptr [rax], al ; je 0x193da0 ; add dword ptr [rax], eax ; nop ; sbb eax, edi ; call qword ptr [rsi]
0x000000000006c4b7 : add byte ptr [rax], al ; je 0x6c4d1 ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x000000000007e217 : add byte ptr [rax], al ; je 0x7e224 ; ret
0x000000000007e275 : add byte ptr [rax], al ; je 0x7e285 ; ret
0x000000000007f626 : add byte ptr [rax], al ; je 0x7f634 ; ret
0x000000000008a68d : add byte ptr [rax], al ; je 0x8a696 ; ret
0x000000000008cb62 : add byte ptr [rax], al ; je 0x8cb79 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009bb24 : add byte ptr [rax], al ; je 0x9bb98 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000cf486 : add byte ptr [rax], al ; je 0xcf4c6 ; xor eax, eax ; ret
0x00000000000d49a0 : add byte ptr [rax], al ; je 0xd49b5 ; ret
0x00000000000da258 : add byte ptr [rax], al ; je 0xda265 ; ret
0x000000000014bce3 : add byte ptr [rax], al ; jg 0x14bcf6 ; neg eax ; ret
0x000000000009b263 : add byte ptr [rax], al ; jg 0x9b26f ; neg eax ; ret
0x0000000000149c39 : add byte ptr [rax], al ; jl 0x149c46 ; neg eax ; ret
0x00000000001786b2 : add byte ptr [rax], al ; jl 0x1786f1 ; add byte ptr [rax], al ; loope 0x1786af ; call qword ptr [rcx]
0x000000000017d082 : add byte ptr [rax], al ; jl 0x17d090 ; add byte ptr [rax + 0x5f], bl ; out dx, eax ; call rbx
0x000000000017d0b2 : add byte ptr [rax], al ; jl 0x17d13b ; add byte ptr [rax], al ; or byte ptr [rdx - 0x11], ah ; jmp qword ptr [rax]
0x000000000017e6b2 : add byte ptr [rax], al ; jl 0x17e651 ; add byte ptr [rax], al ; cwde ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; call qword ptr [rdi]
0x00000000001816ce : add byte ptr [rax], al ; jl 0x1816d9 ; add byte ptr [rax], al ; pushfq ; ret 0
0x00000000001819b2 : add byte ptr [rax], al ; jl 0x181984 ; add byte ptr [rax], al ; cwde ; mov bh, -0xf ; call qword ptr [rax]
0x00000000001866b2 : add byte ptr [rax], al ; jl 0x1866d1 ; add dword ptr [rax], eax ; js 0x18666e ; hlt ; jmp qword ptr [rcx]
0x00000000001877b2 : add byte ptr [rax], al ; jl 0x1877e2 ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], al ; jmp qword ptr [rcx]
0x000000000018a5b2 : add byte ptr [rax], al ; jl 0x18a610 ; add dword ptr [rax], eax ; out -0xb, eax ; jmp qword ptr [rcx]
0x000000000018c4b2 : add byte ptr [rax], al ; jl 0x18c52f ; add dword ptr [rax], eax ; fdivr dword ptr [rdi - 0xa] ; jmp qword ptr [rsi]
0x000000000018f3b2 : add byte ptr [rax], al ; jl 0x18f35e ; add dword ptr [rax], eax ; call 0x1818eafd
0x000000000018f8b2 : add byte ptr [rax], al ; jl 0x18f863 ; add dword ptr [rax], eax ; cmp byte ptr [rax - 9], cl ; call qword ptr [rdi]
0x000000000001f489 : add byte ptr [rax], al ; jmp 0x1f409
0x00000000000629f1 : add byte ptr [rax], al ; jmp 0x5ecf4
0x00000000000661cd : add byte ptr [rax], al ; jmp 0x62467
0x000000000007a22e : add byte ptr [rax], al ; jmp 0x7a1f7
0x00000000000c32a8 : add byte ptr [rax], al ; jmp 0xc3271
0x00000000000c4ef9 : add byte ptr [rax], al ; jmp 0xc4ea6
0x00000000000ed4fc : add byte ptr [rax], al ; jmp 0xed1fa
0x00000000000ee968 : add byte ptr [rax], al ; jmp 0xee87f
0x000000000002d10f : add byte ptr [rax], al ; jmp rax
0x000000000010e41b : add byte ptr [rax], al ; jmp rcx
0x00000000001164f5 : add byte ptr [rax], al ; jne 0x116504 ; ret
0x0000000000116535 : add byte ptr [rax], al ; jne 0x116544 ; ret
0x000000000003811f : add byte ptr [rax], al ; jne 0x38168 ; add rsp, 8 ; ret
0x000000000003aa0f : add byte ptr [rax], al ; jne 0x3aa58 ; add rsp, 8 ; ret
0x000000000003d33f : add byte ptr [rax], al ; jne 0x3d388 ; add rsp, 8 ; ret
0x000000000009b7f4 : add byte ptr [rax], al ; jne 0x9b7ed ; ret
0x000000000009dd2f : add byte ptr [rax], al ; jne 0x9dd78 ; add rsp, 8 ; ret
0x00000000000a036f : add byte ptr [rax], al ; jne 0xa03b8 ; add rsp, 8 ; ret
0x00000000000a27ef : add byte ptr [rax], al ; jne 0xa2838 ; add rsp, 8 ; ret
0x0000000000170642 : add byte ptr [rax], al ; jnp 0x170638 ; jmp qword ptr [rax]
0x000000000016ff02 : add byte ptr [rax], al ; jo 0x16fed4 ; jmp 0x16ff0c
0x00000000001700f2 : add byte ptr [rax], al ; jo 0x170106 ; in al, dx ; call qword ptr [rax]
0x00000000001705ea : add byte ptr [rax], al ; jo 0x17066b ; in al, dx ; call rax
0x000000000017088a : add byte ptr [rax], al ; jo 0x1708d8 ; in eax, dx ; jmp qword ptr [rax]
0x0000000000170c8a : add byte ptr [rax], al ; jo 0x170c64 ; out dx, eax ; call rax
0x0000000000176e4e : add byte ptr [rax], al ; jo 0x176eb5 ; jmp 0x176e58
0x00000000001796ce : add byte ptr [rax], al ; jo 0x17965e ; in al, dx ; call rdx
0x00000000001796cd : add byte ptr [rax], al ; jo 0x17965f ; in al, dx ; call rdx
0x000000000017dd2e : add byte ptr [rax], al ; jo 0x17dcc0 ; out dx, eax ; call qword ptr [rcx]
0x00000000001811be : add byte ptr [rax], al ; jo 0x181155 ; int1 ; call qword ptr [rsi]
0x000000000018158e : add byte ptr [rax], al ; jo 0x181540 ; int1 ; call qword ptr [rsi]
0x000000000018c49a : add byte ptr [rax], al ; jo 0x18c4a9 ; add al, al ; jg 0x18c4a2 ; jmp qword ptr [rsi]
0x0000000000175ebf : add byte ptr [rax], al ; jrcxz 0x175eb1 ; jmp rdi
0x000000000019282f : add byte ptr [rax], al ; jrcxz 0x19282e ; jmp qword ptr [rax]
0x0000000000170a43 : add byte ptr [rax], al ; js 0x170a3a ; jmp qword ptr [rax]
0x0000000000176666 : add byte ptr [rax], al ; js 0x1766c9 ; std ; jmp qword ptr [rdi]
0x0000000000176e66 : add byte ptr [rax], al ; js 0x176ecd ; jmp 0x176e70
0x0000000000177c46 : add byte ptr [rax], al ; js 0x177c0f ; jmp 0x177c4e
0x00000000000b8ef5 : add byte ptr [rax], al ; js 0xb8f05 ; ret
0x000000000010a069 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000109f26 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000010a459 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x0000000000149f1e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000149f2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000149f3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000149f4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000149f5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000149e7d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000149e9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000149eae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000149ebe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000149ece : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000149ede : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000149eee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000149e2a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000149efe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000149f0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009b9fb : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009bb5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x000000000009bb7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x000000000009bb6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x0000000000149e8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000002013e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x144484] ; ret
0x000000000002014e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x1465db] ; ret
0x000000000010029e : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a1a35] ; call rax
0x000000000003fd1c : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x000000000006b737 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x20] ; call rax
0x0000000000076cf7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1450] ; call rax
0x00000000000771a7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1900] ; call rax
0x000000000006b9ef : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x298] ; call rax
0x0000000000075bef : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x348] ; call rax
0x0000000000075e37 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x590] ; call rax
0x0000000000175343 : add byte ptr [rax], al ; leave ; std ; call rax
0x000000000019449a : add byte ptr [rax], al ; lock add dword ptr fs:[rax], eax ; shl byte ptr [rax], 1 ; clc ; jmp qword ptr [rcx]
0x000000000017891e : add byte ptr [rax], al ; lock in eax, -0x15 ; jmp rsp
0x00000000001712c2 : add byte ptr [rax], al ; lock jo 0x1712bc ; call rax
0x000000000016feb2 : add byte ptr [rax], al ; lock mov ah, -0x15 ; jmp rax
0x000000000017052a : add byte ptr [rax], al ; lock outsb dx, byte ptr [rsi] ; in al, dx ; call rax
0x0000000000176f9e : add byte ptr [rax], al ; lock pop rsi ; jmp 0x176fa8
0x000000000016fe12 : add byte ptr [rax], al ; lock xchg bl, ch ; jmp qword ptr [rax]
0x00000000001864e2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax], cl ; cdq ; hlt ; call rcx
0x00000000001867e2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; adc eax, dword ptr [rcx] ; add byte ptr [rax], bh ; lodsd eax, dword ptr [rsi] ; hlt ; call qword ptr [rdx]
0x000000000017c0e2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; call 0x2317b020
0x00000000001844e2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; lock add byte ptr [rax], al ; call 0x22183838
0x00000000001810e2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov esp, 0x29f80000 ; cli ; jmp qword ptr [rdi]
0x000000000018a5e2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rcx ; add dword ptr [rax], eax ; js 0x18a5da ; cmc ; jmp qword ptr [rcx]
0x00000000001902e2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; cmp byte ptr [rdi - 9], dh ; call rcx
0x000000000017fee2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; sub byte ptr [rsi - 0x10], bl ; jmp qword ptr [rsi]
0x000000000017e5e2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg eax, ecx ; add byte ptr [rax], al ; test al, -0x60 ; out dx, eax ; call rax
0x000000000018a10f : add byte ptr [rax], al ; loop 0x18a10c ; jmp qword ptr [rcx]
0x000000000017869e : add byte ptr [rax], al ; loope 0x178693 ; call qword ptr [rdx]
0x00000000001786b6 : add byte ptr [rax], al ; loope 0x1786ab ; call qword ptr [rcx]
0x0000000000170402 : add byte ptr [rax], al ; loopne 0x170459 ; in al, dx ; call qword ptr [rax]
0x0000000000170572 : add byte ptr [rax], al ; loopne 0x1705ee ; in al, dx ; call qword ptr [rax]
0x0000000000171762 : add byte ptr [rax], al ; loopne 0x1717b9 ; int1 ; call rax
0x0000000000178d8e : add byte ptr [rax], al ; loopne 0x178d89 ; jmp 0x178d98
0x0000000000178dbe : add byte ptr [rax], al ; loopne 0x178db9 ; jmp 0x178dc8
0x0000000000178dee : add byte ptr [rax], al ; loopne 0x178de9 ; jmp 0x178df8
0x000000000017940e : add byte ptr [rax], al ; loopne 0x17945c ; cli ; jmp qword ptr [rcx]
0x00000000001794fe : add byte ptr [rax], al ; loopne 0x179579 ; in al, dx ; call rsi
0x00000000001794fd : add byte ptr [rax], al ; loopne 0x17957a ; in al, dx ; call rsi
0x000000000017e1ee : add byte ptr [rax], al ; loopne 0x17e18a ; out dx, eax ; jmp qword ptr [rax]
0x000000000018347a : add byte ptr [rax], al ; loopne 0x183488 ; add byte ptr [rax + 7], dl ; call qword ptr [rsi]
0x0000000000183fea : add byte ptr [rax], al ; mov ah, -0x15 ; add byte ptr [rax], al ; sal byte ptr [rdx], -0xd ; call qword ptr [rdx]
0x00000000001903ea : add byte ptr [rax], al ; mov ah, -0x51 ; add dword ptr [rax], eax ; rcr bl ; clc ; call qword ptr [rax]
0x000000000017e1ea : add byte ptr [rax], al ; mov ah, -0x73 ; add byte ptr [rax], al ; loopne 0x17e18e ; out dx, eax ; jmp qword ptr [rax]
0x00000000001769ea : add byte ptr [rax], al ; mov ah, 0x15 ; add byte ptr [rax], al ; xor byte ptr [rdx - 0x15], dl ; call qword ptr [rax]
0x0000000000176dea : add byte ptr [rax], al ; mov ah, 0x19 ; add byte ptr [rax], al ; push rax ; pop rsi ; jmp 0x176dfc
0x0000000000177bea : add byte ptr [rax], al ; mov ah, 0x27 ; add byte ptr [rax], al ; rol cl, 1 ; jmp 0x177bfc
0x0000000000178dea : add byte ptr [rax], al ; mov ah, 0x39 ; add byte ptr [rax], al ; loopne 0x178ded ; jmp 0x178dfc
0x00000000001899ea : add byte ptr [rax], al ; mov ah, 0x45 ; add dword ptr [rax], eax ; add dl, al ; cmc ; call qword ptr [rax]
0x000000000018a3ea : add byte ptr [rax], al ; mov ah, 0x4f ; add dword ptr [rax], eax ; lock in al, -0xb ; jmp qword ptr [rcx]
0x000000000018a6ea : add byte ptr [rax], al ; mov ah, 0x52 ; add dword ptr [rax], eax ; add cl, ch ; cmc ; jmp qword ptr [rcx]
0x00000000001779fe : add byte ptr [rax], al ; mov al, -0x42 ; jmp 0x177a08
0x0000000000179d9e : add byte ptr [rax], al ; mov al, -0x55 ; in al, dx ; jmp qword ptr [rbx]
0x000000000017af0e : add byte ptr [rax], al ; mov al, -0xd ; out dx, al ; jmp qword ptr [rax]
0x000000000017fe6e : add byte ptr [rax], al ; mov al, -1 ; stc ; call qword ptr [rax]
0x000000000018200e : add byte ptr [rax], al ; mov al, 0x2b ; call qword ptr [rax]
0x000000000018265e : add byte ptr [rax], al ; mov al, 0x53 ; call qword ptr [rsi]
0x0000000000176f6e : add byte ptr [rax], al ; mov al, 0x5e ; jmp 0x176f78
0x00000000001829de : add byte ptr [rax], al ; mov al, 0x5e ; jmp qword ptr [rax]
0x000000000017720e : add byte ptr [rax], al ; mov al, 0x7a ; jmp 0x177218
0x00000000001709ba : add byte ptr [rax], al ; mov al, 1 ; out dx, al ; call qword ptr [rax]
0x000000000014439e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000014006e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000015e686 : add byte ptr [rax], al ; mov bl, 0x16 ; add byte ptr [rax], al ; ret 0x16
0x000000000014203e : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000c051e : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000008f5de : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000096b7e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000009557e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009654e : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x0000000000176e96 : add byte ptr [rax], al ; mov byte ptr [rsi - 0x15], bl ; call qword ptr [rdx]
0x0000000000196cba : add byte ptr [rax], al ; mov ch, 5 ; add byte ptr [rax], al ; ret
0x0000000000178a66 : add byte ptr [rax], al ; mov cl, ch ; jmp 0x178a70
0x000000000009624e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000018a4c2 : add byte ptr [rax], al ; mov dword ptr [rax + 1], ss ; add al, cl ; in eax, -0xb ; jmp qword ptr [rcx]
0x00000000001878c2 : add byte ptr [rax], al ; mov dword ptr [rcx + rax], fs ; add byte ptr [rax], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018b8c2 : add byte ptr [rax], al ; mov dword ptr [rcx + rax], fs ; clc ; sub esi, esi ; call rdi
0x000000000014207e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000014209e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000014208e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000014206e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000da27e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009656e : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000008f60e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000009658e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009659e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009657e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x0000000000176ec2 : add byte ptr [rax], al ; mov dword ptr [rdx], ds ; add byte ptr [rax], al ; cwde ; pop rsi ; jmp 0x176ed4
0x000000000004fa45 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000044392 : add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x000000000010ae3e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x000000000010ae7e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x000000000010ae6e : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000da9e4 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000b5090 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000009558e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000007e266 : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000000b8d9e : add byte ptr [rax], al ; mov eax, 0x20 ; ret
0x00000000000b84de : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00000000000b84fe : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00000000000b84ee : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00000000000b850e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000000b873e : add byte ptr [rax], al ; mov eax, 0x6f ; syscall ; ret
0x00000000000b8c29 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x00000000000e862e : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall ; ret
0x00000000000b8cee : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000011c756 : add byte ptr [rax], al ; mov eax, 0xffffffff ; jmp 0x11c72a
0x000000000011c4b9 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000324ac : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000033afc : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000ddd5b : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x000000000002915e : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000010b4be : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000014778e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007725e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000010adac : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000001161de : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000da26e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000072efe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000072ece : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00000000000b3cce : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; ret
0x000000000006ec3e : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x00000000000347ae : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x3688d2] ; ret
0x00000000000741b5 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e082a : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000006bc76 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007e800 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x00000000000f8b7e : add byte ptr [rax], al ; mov eax, edi ; bswap eax ; ret
0x0000000000020b2c : add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000edaeb : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x00000000000b4fb1 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004f137 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000021433 : add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000f63a5 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000067cb9 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000067fe2 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x0000000000198ba6 : add byte ptr [rax], al ; mov ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret 3
0x00000000000955be : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000001843c2 : add byte ptr [rax], al ; mov edi, gs ; add byte ptr [rax], al ; pop rax ; rep ; jmp qword ptr [rcx]
0x0000000000170ae2 : add byte ptr [rax], al ; mov edi, gs ; jmp rax
0x000000000010479d : add byte ptr [rax], al ; mov edi, r12d ; call 0xe0a87
0x000000000002142e : add byte ptr [rax], al ; mov edx, 8 ; mov eax, edx ; ret
0x00000000000f800d : add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0xf7fda
0x00000000001344ae : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000955ae : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000006d3e8 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x6d392
0x000000000006d58d : add byte ptr [rax], al ; mov edx, eax ; jmp 0x6d534
0x000000000006d726 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x6d6cb
0x0000000000071671 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71619
0x0000000000071fe1 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71f89
0x0000000000071086 : add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x00000000001787f2 : add byte ptr [rax], al ; mov esp, 0x18000033 ; jrcxz 0x1787ef ; jmp qword ptr [rsi]
0x0000000000180ff2 : add byte ptr [rax], al ; mov esp, 0x280000bb ; int1 ; jmp qword ptr [rbx]
0x00000000001956f2 : add byte ptr [rax], al ; mov esp, 0x48000202 ; jp 0x1956fc ; call qword ptr [rdi]
0x00000000001893f2 : add byte ptr [rax], al ; mov esp, 0x5800013f ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x000000000017fbf2 : add byte ptr [rax], al ; mov esp, 0x80000a7 ; lock ; call qword ptr [rax]
0x0000000000189df2 : add byte ptr [rax], al ; mov esp, 0x88000149 ; sal ch, 1 ; jmp rax
0x000000000018ddf2 : add byte ptr [rax], al ; mov esp, 0x88000189 ; ret 0xfff6
0x00000000001827f2 : add byte ptr [rax], al ; mov esp, 0x980000d3 ; pop rax ; jmp qword ptr [rcx]
0x000000000018ebf2 : add byte ptr [rax], al ; mov esp, 0x98000197 ; add esi, edi ; call qword ptr [rax]
0x0000000000177cf2 : add byte ptr [rax], al ; mov esp, 0xa8000028 ; ret
0x0000000000181ff2 : add byte ptr [rax], al ; mov esp, 0xb80000cb ; sub esi, edx ; call qword ptr [rax]
0x000000000017a1f2 : add byte ptr [rax], al ; mov esp, 0xe800004d ; in eax, dx ; call rdi
0x000000000018a0f2 : add byte ptr [rax], al ; mov esp, 0xe800014c ; loope 0x18a0f9 ; jmp qword ptr [rcx]
0x0000000000187bf2 : add byte ptr [rax], al ; mov esp, 0xf8000127 ; cmc ; jmp qword ptr [rcx]
0x00000000001706ba : add byte ptr [rax], al ; mov esp, gs ; call qword ptr [rax]
0x00000000000f3f80 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x000000000011d223 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000011d1db : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000011d3de : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001420be : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000001420de : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x00000000001420ee : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x00000000001420fe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000014210e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000014211e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000014212e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x00000000001420ce : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x00000000001420ae : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000010c46b : add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rcx ; ret
0x000000000008aec6 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000011658a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000965ae : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000965ce : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000965ee : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000965fe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009660e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009661e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000965de : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000965be : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000000443b0 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000071d8c : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000010e4eb : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000007e87e : add byte ptr [rax], al ; mov qword ptr [rip + 0x321289], rsi ; ret
0x000000000010adec : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000037613 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000da19c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x000000000010adbc : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x0000000000078008 : add byte ptr [rax], al ; mov qword ptr [rsi], rax ; mov rax, r9 ; ret
0x00000000000f8b46 : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000011315f : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000001f64c : add byte ptr [rax], al ; mov r12d, eax ; call 0xeb917
0x0000000000033a4c : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000009b56e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000009b57e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000009b58e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000009b59e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000009b5ae : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000009b5be : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000009b5ce : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000011d39e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000761b9 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000000702e0 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000076545 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000000e7216 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000036ad0 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000b3bbe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000709fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000774fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000011ad31 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x283876] ; call qword ptr [rax]
0x000000000011a734 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x283e73] ; call qword ptr [rax]
0x00000000000774de : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3271d9] ; ret
0x000000000002167e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x381241] ; ret
0x000000000002166e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x381259] ; ret
0x00000000000e19ad : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000007c64b : add byte ptr [rax], al ; mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c019 : add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000006a11e : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000074e39 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000672ad : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000036e5c : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000032444 : add byte ptr [rax], al ; mov rax, rcx ; pop rbx ; ret
0x000000000003244e : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000007750e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000011aeaa : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000006aace : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x000000000006b073 : add byte ptr [rax], al ; mov rax, rdx ; ret
0x00000000000773e8 : add byte ptr [rax], al ; mov rbp, qword ptr [rbx + 8] ; jmp 0x773ba
0x000000000010aa13 : add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; call rbx
0x0000000000068df1 : add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x000000000009c870 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x000000000002dbf8 : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000007ecdf : add byte ptr [rax], al ; mov rdi, r14 ; mov rdx, r15 ; call rax
0x0000000000052077 : add byte ptr [rax], al ; mov rdi, r15 ; call 0x6e357
0x000000000010e922 : add byte ptr [rax], al ; mov rdi, rbp ; call 0x10abd7
0x000000000010b77b : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x000000000003bde6 : add byte ptr [rax], al ; mov rdi, rbx ; call 0x88007
0x00000000001128a5 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001151de : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000955ee : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000005ef7c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x33dfab] ; call rax
0x0000000000055a04 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x347523] ; call rax
0x00000000000554a0 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x347a87] ; call rax
0x000000000005010c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x34ce1b] ; call rax
0x000000000004a3f8 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x352b2f] ; call rax
0x0000000000044e4c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x3580db] ; call rax
0x000000000007c81e : add byte ptr [rax], al ; mov rsi, qword ptr [rsp] ; jmp rax
0x000000000007f52a : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000007f269 : add byte ptr [rax], al ; mov rsi, rbx ; mov rdi, r13 ; call rdx
0x000000000014205e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000014204e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009655e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000008f67e : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000008f5ee : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000003765d : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x00000000000376a4 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x000000000009662e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009663e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000189eda : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add qword ptr [rax], rax ; nop ; sal ebp, 1 ; jmp qword ptr [rcx]
0x00000000001948da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; add dword ptr [rax], eax ; mov al, -0x7f ; sti ; jmp qword ptr [rdx]
0x00000000001916da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x00000000001884da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xor byte ptr [rcx], al ; add byte ptr [rax - 0x80], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001889da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, 0x8a300001 ; cmc ; jmp qword ptr [rcx]
0x0000000000068fba : add byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000425fd : add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000001036a6 : add byte ptr [rax], al ; movsxd rsi, esi ; mov byte ptr [rdi + rsi], 0 ; ret
0x0000000000076256 : add byte ptr [rax], al ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000000d4a3e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x000000000013463e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000134d1e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000134cae : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000fda22 : add byte ptr [rax], al ; neg eax ; mov r14d, eax ; jmp 0xfd9f5
0x000000000017f92e : add byte ptr [rax], al ; nop ; and esi, eax ; jmp qword ptr [rax]
0x0000000000173d8b : add byte ptr [rax], al ; nop ; clc ; call qword ptr [rax]
0x000000000017fe9e : add byte ptr [rax], al ; nop ; cli ; call qword ptr [rax]
0x0000000000170b42 : add byte ptr [rax], al ; nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, eax ; call rax
0x000000000017039a : add byte ptr [rax], al ; nop ; in al, dx ; call qword ptr [rax]
0x00000000001703fa : add byte ptr [rax], al ; nop ; in al, dx ; jmp rax
0x000000000017d9be : add byte ptr [rax], al ; nop ; jg 0x17d9b7 ; call rax
0x000000000016fdca : add byte ptr [rax], al ; nop ; jmp 0x16fdd4
0x000000000016fdda : add byte ptr [rax], al ; nop ; jmp 0x16fde4
0x0000000000170daa : add byte ptr [rax], al ; nop ; jmp 0xffffffffc3680da8
0x000000000018196e : add byte ptr [rax], al ; nop ; mov bh, -0xf ; call qword ptr [rdx]
0x000000000018193e : add byte ptr [rax], al ; nop ; mov bh, -0xf ; jmp qword ptr [rax]
0x000000000011427d : add byte ptr [rax], al ; nop ; mov eax, 2 ; ret
0x00000000000f8b8d : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x00000000001828be : add byte ptr [rax], al ; nop ; pop rcx ; call rdi
0x0000000000176eae : add byte ptr [rax], al ; nop ; pop rsi ; jmp 0x176eb8
0x000000000001cff6 : add byte ptr [rax], al ; nop ; ret
0x000000000001cde6 : add byte ptr [rax], al ; nop ; ret 0x39
0x00000000001707d2 : add byte ptr [rax], al ; nop ; sub ch, ch ; jmp rax
0x000000000017140a : add byte ptr [rax], al ; nop ; xchg eax, esi ; call qword ptr [rax]
0x0000000000115e59 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000001fd8b : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000011638b : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000177c42 : add byte ptr [rax], al ; or al, 0x28 ; add byte ptr [rax], al ; js 0x177c13 ; jmp 0x177c52
0x0000000000178c42 : add byte ptr [rax], al ; or al, 0x38 ; add byte ptr [rax], al ; sbb bl, ch ; jmp 0x178c54
0x000000000018a342 : add byte ptr [rax], al ; or al, 0x4f ; add dword ptr [rax], eax ; sbb ah, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a642 : add byte ptr [rax], al ; or al, 0x52 ; add dword ptr [rax], eax ; or al, ch ; cmc ; jmp qword ptr [rcx]
0x000000000018ab42 : add byte ptr [rax], al ; or al, 0x57 ; add dword ptr [rax], eax ; lock ; cmc ; jmp qword ptr [rcx]
0x0000000000182342 : add byte ptr [rax], al ; or al, 0xffffffffffffffcf ; add byte ptr [rax], al ; or byte ptr [rsi - 0xe], al ; jmp qword ptr [rcx]
0x00000000000368e1 : add byte ptr [rax], al ; or bl, ch ; ret
0x0000000000037a9d : add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000183776 : add byte ptr [rax], al ; or byte ptr [rcx], dl ; call rdx
0x000000000017fbf6 : add byte ptr [rax], al ; or byte ptr [rdi - 0x10], cl ; call qword ptr [rax]
0x0000000000184826 : add byte ptr [rax], al ; or byte ptr [rdi - 0xd], dl ; jmp rdx
0x000000000017d0b6 : add byte ptr [rax], al ; or byte ptr [rdx - 0x11], ah ; jmp qword ptr [rax]
0x0000000000182346 : add byte ptr [rax], al ; or byte ptr [rsi - 0xe], al ; jmp qword ptr [rcx]
0x000000000017e382 : add byte ptr [rax], al ; pop qword ptr [rax] ; add byte ptr [rax], cl ; xchg eax, edi ; out dx, eax ; call qword ptr [rdx]
0x0000000000181d76 : add byte ptr [rax], al ; pop rax ; out -0xf, al ; jmp rax
0x000000000017c916 : add byte ptr [rax], al ; pop rax ; out dx, eax ; jmp rbx
0x00000000000e8247 : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x000000000017d086 : add byte ptr [rax], al ; pop rax ; pop rdi ; out dx, eax ; call rbx
0x0000000000176e06 : add byte ptr [rax], al ; pop rax ; pop rsi ; jmp 0x176e10
0x00000000001843c6 : add byte ptr [rax], al ; pop rax ; rep ; jmp qword ptr [rcx]
0x000000000001cfc6 : add byte ptr [rax], al ; pop rax ; ret
0x000000000001cd3e : add byte ptr [rax], al ; pop rax ; ret 0x39
0x000000000017a966 : add byte ptr [rax], al ; pop rax ; shr dh, 1 ; jmp qword ptr [rcx]
0x0000000000177606 : add byte ptr [rax], al ; pop rax ; stosb byte ptr [rdi], al ; jmp 0x177610
0x0000000000177336 : add byte ptr [rax], al ; pop rax ; xchg eax, esp ; jmp 0x177340
0x000000000004efad : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004f07d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006cf30 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000ea40a : add byte ptr [rax], al ; pop rbp ; ret
0x000000000009a20a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x0000000000036c4c : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000004ee78 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000067e10 : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000004cfdc : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000006beba : add byte ptr [rax], al ; pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00000000000f5207 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000001fb1f : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fb4a : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000227d7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000029a83 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000c5d8e : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000016d7ae : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x0000000000186792 : add byte ptr [rax], al ; pop rsp ; adc eax, dword ptr [rcx] ; add byte ptr [rax - 0x53], cl ; hlt ; call qword ptr [rdi]
0x0000000000185792 : add byte ptr [rax], al ; pop rsp ; add eax, dword ptr [rcx] ; add byte ptr [rax - 0x17], ch ; jmp qword ptr [rbx]
0x0000000000189e92 : add byte ptr [rax], al ; pop rsp ; add qword ptr [rax], rax ; sal rbp, 1 ; jmp qword ptr [rcx]
0x0000000000183492 : add byte ptr [rax], al ; pop rsp ; loopne 0x1834a0 ; add byte ptr [rax + 7], bl ; call qword ptr [rbx]
0x000000000018a492 : add byte ptr [rax], al ; pop rsp ; push rax ; add dword ptr [rax], eax ; cwde ; in eax, -0xb ; jmp qword ptr [rcx]
0x0000000000191792 : add byte ptr [rax], al ; pop rsp ; ret
0x0000000000183b5e : add byte ptr [rax], al ; push rax ; and ebx, esi ; call rdi
0x0000000000170d12 : add byte ptr [rax], al ; push rax ; fsubp st(7) ; jmp rax
0x0000000000170562 : add byte ptr [rax], al ; push rax ; jb 0x170558 ; call rax
0x000000000017115a : add byte ptr [rax], al ; push rax ; lock ; jmp rax
0x000000000018268e : add byte ptr [rax], al ; push rax ; nop ; cld ; jmp qword ptr [rbx]
0x000000000017155a : add byte ptr [rax], al ; push rax ; out -0x10, al ; call qword ptr [rax]
0x000000000016e2cc : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000001827ae : add byte ptr [rax], al ; push rax ; pop rax ; call qword ptr [rcx]
0x0000000000176d5e : add byte ptr [rax], al ; push rax ; pop rsi ; jmp 0x176d68
0x0000000000176dee : add byte ptr [rax], al ; push rax ; pop rsi ; jmp 0x176df8
0x000000000001cfae : add byte ptr [rax], al ; push rax ; ret
0x000000000001cd26 : add byte ptr [rax], al ; push rax ; ret 0x39
0x00000000001706d2 : add byte ptr [rax], al ; push rax ; scasb al, byte ptr [rdi] ; in al, dx ; call rax
0x000000000018405e : add byte ptr [rax], al ; push rax ; xor esi, ebx ; jmp qword ptr [rcx]
0x00000000000f516e : add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000018a582 : add byte ptr [rax], al ; push rcx ; add dword ptr [rax], eax ; call 0x22189b7c
0x000000000017421b : add byte ptr [rax], al ; push rdi ; stc ; jmp qword ptr [rax]
0x000000000018aa82 : add byte ptr [rax], al ; push rsi ; add dword ptr [rax], eax ; mov bh, ch ; cmc ; jmp qword ptr [rcx]
0x0000000000171a83 : add byte ptr [rax], al ; push rsi ; call rax
0x000000000019568a : add byte ptr [rax], al ; push rsp ; add al, byte ptr [rdx] ; add byte ptr [rax + 0x77], dh ; clc ; call rdi
0x0000000000188a8a : add byte ptr [rax], al ; push rsp ; add dword ptr ss:[rax], eax ; jo 0x188a27 ; cmc ; jmp qword ptr [rcx]
0x000000000018798a : add byte ptr [rax], al ; push rsp ; and eax, 0x4a500001 ; cmc ; jmp qword ptr [rcx]
0x00000000001826ef : add byte ptr [rax], al ; push rsp ; call qword ptr [rax]
0x000000000017ff5e : add byte ptr [rax], al ; push rsp ; cli ; call qword ptr [rax]
0x0000000000178d8a : add byte ptr [rax], al ; push rsp ; cmp dword ptr [rax], eax ; add al, ah ; jmp 0x178d9c
0x000000000017b632 : add byte ptr [rax], al ; push rsp ; or al, 0 ; add al, ch ; or ebp, edi ; call qword ptr [rax]
0x000000000017af8a : add byte ptr [rax], al ; push rsp ; pop rbx ; add byte ptr [rax], al ; add ah, dh ; out dx, al ; call qword ptr [rax]
0x000000000018268a : add byte ptr [rax], al ; push rsp ; rol byte ptr [rax], cl ; add byte ptr [rax - 0x70], dl ; cld ; jmp qword ptr [rbx]
0x000000000018158a : add byte ptr [rax], al ; push rsp ; rol dword ptr [rax], 0 ; jo 0x181544 ; int1 ; call qword ptr [rsi]
0x000000000018718a : add byte ptr [rax], al ; push rsp ; sbb eax, 0x31100001 ; cmc ; call qword ptr [rax]
0x00000000001865d2 : add byte ptr [rax], al ; pushfq ; adc dword ptr [rcx], eax ; add byte ptr [rax], bl ; stosd dword ptr [rdi], eax ; hlt ; call qword ptr [rbx]
0x000000000017d5d2 : add byte ptr [rax], al ; pushfq ; add dword ptr [rax], 0xef6f2800 ; call qword ptr [rax]
0x0000000000178dd2 : add byte ptr [rax], al ; pushfq ; cmp dword ptr [rax], eax ; add al, bl ; jmp 0x178de4
0x0000000000182dd2 : add byte ptr [rax], al ; pushfq ; fld dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; jmp qword ptr [rcx]
0x0000000000191bd2 : add byte ptr [rax], al ; pushfq ; mov dword ptr [rcx], 0xf7b8d800 ; call qword ptr [rsi]
0x00000000001817d2 : add byte ptr [rax], al ; pushfq ; ret
0x00000000001816d2 : add byte ptr [rax], al ; pushfq ; ret 0
0x00000000001888d2 : add byte ptr [rax], al ; pushfq ; xor al, 1 ; add byte ptr [rax - 0x78], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000182a3e : add byte ptr [rax], al ; rcr byte ptr [rdi - 0xe] ; jmp qword ptr [rcx]
0x0000000000170cd2 : add byte ptr [rax], al ; rcr cl ; out dx, eax ; jmp rax
0x00000000001844ff : add byte ptr [rax], al ; rep ; jmp qword ptr [rcx]
0x0000000000000977 : add byte ptr [rax], al ; ret
0x000000000000e9e6 : add byte ptr [rax], al ; ret 0
0x000000000000f1ef : add byte ptr [rax], al ; ret 0x10
0x0000000000155966 : add byte ptr [rax], al ; ret 0x12
0x000000000000a146 : add byte ptr [rax], al ; ret 0x15
0x000000000015e68a : add byte ptr [rax], al ; ret 0x16
0x000000000001a5d6 : add byte ptr [rax], al ; ret 0x1656
0x00000000000106e6 : add byte ptr [rax], al ; ret 0x19
0x000000000015739e : add byte ptr [rax], al ; ret 0x1d4
0x0000000000157b36 : add byte ptr [rax], al ; ret 0x1d5
0x00000000001563a6 : add byte ptr [rax], al ; ret 0x24
0x0000000000004b06 : add byte ptr [rax], al ; ret 0x26
0x000000000000054c : add byte ptr [rax], al ; ret 0x2800
0x000000000000559e : add byte ptr [rax], al ; ret 0x31
0x000000000000ff7e : add byte ptr [rax], al ; ret 0x33
0x000000000000f3ae : add byte ptr [rax], al ; ret 0x34
0x00000000000078de : add byte ptr [rax], al ; ret 0x35
0x00000000000059be : add byte ptr [rax], al ; ret 0x37
0x000000000001ccf6 : add byte ptr [rax], al ; ret 0x39
0x00000000000049fe : add byte ptr [rax], al ; ret 0x3b
0x0000000000000886 : add byte ptr [rax], al ; ret 0x440c
0x000000000000cc06 : add byte ptr [rax], al ; ret 0x48
0x000000000000bfa6 : add byte ptr [rax], al ; ret 0x4e
0x00000000000079fe : add byte ptr [rax], al ; ret 0x53
0x0000000000155166 : add byte ptr [rax], al ; ret 0xc
0x0000000000155566 : add byte ptr [rax], al ; ret 0xf
0x00000000001899ef : add byte ptr [rax], al ; ret 0xfff5
0x0000000000000e1e : add byte ptr [rax], al ; ret 1
0x000000000000100e : add byte ptr [rax], al ; ret 2
0x00000000000011da : add byte ptr [rax], al ; ret 3
0x0000000000158d82 : add byte ptr [rax], al ; ret 4
0x000000000000158e : add byte ptr [rax], al ; ret 5
0x0000000000159182 : add byte ptr [rax], al ; ret 6
0x0000000000159382 : add byte ptr [rax], al ; ret 7
0x0000000000159582 : add byte ptr [rax], al ; ret 8
0x0000000000154d66 : add byte ptr [rax], al ; ret 9
0x0000000000173ecb : add byte ptr [rax], al ; retf ; clc ; call rax
0x0000000000158d7e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000001702ca : add byte ptr [rax], al ; rol byte ptr [rcx - 0x14], 1 ; jmp rax
0x00000000001844ce : add byte ptr [rax], al ; rol byte ptr [rdx - 0xd], 1 ; jmp qword ptr [rcx]
0x000000000019610e : add byte ptr [rax], al ; rol byte ptr [rdx], cl ; add byte ptr [rax], al ; ret
0x0000000000171112 : add byte ptr [rax], al ; rol byte ptr [rsi - 0x10], 1 ; call qword ptr [rax]
0x0000000000180c0e : add byte ptr [rax], al ; rol cl, -4 ; jmp qword ptr [rax]
0x0000000000177bee : add byte ptr [rax], al ; rol cl, 1 ; jmp 0x177bf8
0x000000000016ff12 : add byte ptr [rax], al ; ror dl, 1 ; jmp 0x16ff1c
0x0000000000183fee : add byte ptr [rax], al ; sal byte ptr [rdx], -0xd ; call qword ptr [rdx]
0x0000000000170962 : add byte ptr [rax], al ; sal dl, -0x13 ; call rax
0x000000000017137a : add byte ptr [rax], al ; sar byte ptr [rcx - 0x10], 1 ; jmp rax
0x000000000017026a : add byte ptr [rax], al ; sar byte ptr [rsp + rbp*8], 1 ; call qword ptr [rax]
0x0000000000194452 : add byte ptr [rax], al ; sbb al, -0x10 ; add dword ptr [rax], eax ; js 0x194483 ; clc ; call qword ptr [rdx]
0x0000000000183952 : add byte ptr [rax], al ; sbb al, -0x1b ; add byte ptr [rax], al ; sbb byte ptr [rax], bl ; call rdi
0x0000000000181952 : add byte ptr [rax], al ; sbb al, -0x3b ; add byte ptr [rax], al ; cwde ; mov bh, -0xf ; call qword ptr [rax]
0x0000000000181052 : add byte ptr [rax], al ; sbb al, -0x44 ; add byte ptr [rax], al ; call 0xffffffffe41801d5
0x000000000018fa52 : add byte ptr [rax], al ; sbb al, -0x5a ; add dword ptr [rax], eax ; sub byte ptr [rdi - 9], cl ; jmp qword ptr [rcx]
0x000000000018ee52 : add byte ptr [rax], al ; sbb al, -0x66 ; add dword ptr [rax], eax ; call 0x1118e572
0x000000000017db52 : add byte ptr [rax], al ; sbb al, -0x79 ; add byte ptr [rax], al ; xchg dil, bpl ; jmp qword ptr [rcx]
0x0000000000176f52 : add byte ptr [rax], al ; sbb al, 0x1b ; add byte ptr [rax], al ; test al, 0x5e ; jmp 0x176f64
0x0000000000177252 : add byte ptr [rax], al ; sbb al, 0x1e ; add byte ptr [rax], al ; test al, 0x7a ; jmp 0x177264
0x0000000000178752 : add byte ptr [rax], al ; sbb al, 0x33 ; add byte ptr [rax], al ; cwde ; loop 0x17874f ; call qword ptr [rcx]
0x0000000000189f52 : add byte ptr [rax], al ; sbb al, 0x4b ; add dword ptr [rax], eax ; or dl, dl ; cmc ; jmp qword ptr [rcx]
0x000000000018a852 : add byte ptr [rax], al ; sbb al, 0x54 ; add dword ptr [rax], eax ; mov bl, ch ; cmc ; jmp qword ptr [rcx]
0x00000000001787f6 : add byte ptr [rax], al ; sbb bl, ah ; jmp 0x178800
0x0000000000178c16 : add byte ptr [rax], al ; sbb bl, ch ; jmp 0x178c20
0x0000000000178c46 : add byte ptr [rax], al ; sbb bl, ch ; jmp 0x178c50
0x0000000000183956 : add byte ptr [rax], al ; sbb byte ptr [rax], bl ; call rdi
0x0000000000177dd6 : add byte ptr [rax], al ; sbb ch, al ; jmp 0x177de0
0x000000000018b45f : add byte ptr [rax], al ; sbb dh, dh ; call rdi
0x0000000000176f9a : add byte ptr [rax], al ; sbb eax, dword ptr fs:[rax] ; add al, dh ; pop rsi ; jmp 0x176fac
0x00000000000d4a2e : add byte ptr [rax], al ; setne al ; lea eax, dword ptr [rax + rax*8 + 5] ; ret
0x00000000001716d2 : add byte ptr [rax], al ; shl byte ptr [rdx], -0xf ; jmp qword ptr [rax]
0x0000000000170d9a : add byte ptr [rax], al ; shr al, -0x11 ; call qword ptr [rax]
0x000000000016ffea : add byte ptr [rax], al ; shr bl, 1 ; jmp rax
0x00000000000da106 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000017f2ff : add byte ptr [rax], al ; std ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017fe9a : add byte ptr [rax], al ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; nop ; cli ; call qword ptr [rax]
0x0000000000191826 : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; hlt ; ret
0x0000000000186462 : add byte ptr [rax], al ; sub al, 0x10 ; add dword ptr [rax], eax ; js 0x186405 ; hlt ; jmp qword ptr [rdi]
0x0000000000176662 : add byte ptr [rax], al ; sub al, 0x12 ; add byte ptr [rax], al ; js 0x1766cd ; std ; jmp qword ptr [rdi]
0x0000000000176e62 : add byte ptr [rax], al ; sub al, 0x1a ; add byte ptr [rax], al ; js 0x176ed1 ; jmp 0x176e74
0x0000000000187862 : add byte ptr [rax], al ; sub al, 0x24 ; add dword ptr [rax], eax ; test al, 0x42 ; cmc ; jmp qword ptr [rcx]
0x0000000000188962 : add byte ptr [rax], al ; sub al, 0x35 ; add dword ptr [rax], eax ; pop rax ; mov ebp, esi ; jmp qword ptr [rcx]
0x0000000000178a62 : add byte ptr [rax], al ; sub al, 0x36 ; add byte ptr [rax], al ; mov cl, ch ; jmp 0x178a74
0x0000000000189362 : add byte ptr [rax], al ; sub al, 0x3f ; add dword ptr [rax], eax ; cwde ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000017a962 : add byte ptr [rax], al ; sub al, 0x55 ; add byte ptr [rax], al ; pop rax ; shr dh, 1 ; jmp qword ptr [rcx]
0x0000000000177c82 : add byte ptr [rax], al ; sub byte ptr [rax], r8b ; add byte ptr [rax], bl ; ret
0x000000000017cf76 : add byte ptr [rax], al ; sub byte ptr [rdi - 0x11], bl ; jmp qword ptr [rdi]
0x000000000017d5d6 : add byte ptr [rax], al ; sub byte ptr [rdi - 0x11], ch ; call qword ptr [rax]
0x0000000000180ff6 : add byte ptr [rax], al ; sub byte ptr [rdx - 0xf], al ; jmp qword ptr [rbx]
0x000000000017fee6 : add byte ptr [rax], al ; sub byte ptr [rsi - 0x10], bl ; jmp qword ptr [rsi]
0x000000000014854c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000000efae6 : add byte ptr [rax], al ; sub eax, edi ; ret
0x00000000000e0890 : add byte ptr [rax], al ; sub eax, edx ; ret
0x00000000000abc1f : add byte ptr [rax], al ; sub eax, edx ; sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000003356d : add byte ptr [rax], al ; sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x0000000000177d82 : add byte ptr [rax], al ; sub qword ptr [rax], r8 ; add al, bh ; ret
0x00000000000769f6 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000081711 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000fe99e : add byte ptr [rax], al ; sub rsp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x00000000000daafb : add byte ptr [rax], al ; syscall ; neg eax ; ret
0x00000000000f49e5 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000000b84d3 : add byte ptr [rax], al ; syscall ; ret
0x00000000001938ba : add byte ptr [rax], al ; test ah, ah ; add dword ptr [rax], eax ; rcl byte ptr [rdx], -8 ; call qword ptr [rdx]
0x0000000000178786 : add byte ptr [rax], al ; test al, -0x1e ; jmp 0x178790
0x0000000000179d86 : add byte ptr [rax], al ; test al, -0x55 ; in al, dx ; call qword ptr [rdi]
0x000000000017e5e6 : add byte ptr [rax], al ; test al, -0x60 ; out dx, eax ; call rax
0x0000000000176f56 : add byte ptr [rax], al ; test al, 0x5e ; jmp 0x176f60
0x0000000000177256 : add byte ptr [rax], al ; test al, 0x7a ; jmp 0x177260
0x000000000017d8ba : add byte ptr [rax], al ; test byte ptr [rax + rax - 0x1084e000], al ; jmp qword ptr [rsi]
0x000000000017d9ba : add byte ptr [rax], al ; test byte ptr [rbp + 0x7f900000], al ; out dx, eax ; call rax
0x00000000001811ba : add byte ptr [rax], al ; test byte ptr [rbp - 0x71900000], bh ; int1 ; call qword ptr [rsi]
0x00000000000768e4 : add byte ptr [rax], al ; test byte ptr [rbx], -0x80 ; jne 0x768f8 ; pop rbx ; ret
0x0000000000178dba : add byte ptr [rax], al ; test byte ptr [rcx], bh ; add byte ptr [rax], al ; loopne 0x178dbd ; jmp 0x178dcc
0x000000000018a3ba : add byte ptr [rax], al ; test byte ptr [rdi + 1], cl ; add al, al ; in al, -0xb ; jmp qword ptr [rcx]
0x00000000001879ba : add byte ptr [rax], al ; test byte ptr [rip + 0x4a800001], ah ; cmc ; jmp qword ptr [rcx]
0x000000000017f2ba : add byte ptr [rax], al ; test byte ptr [rsi - 0x2c600000], bl ; cld ; call qword ptr [rdx]
0x00000000001845ba : add byte ptr [rax], al ; test dh, cl ; add byte ptr [rax], al ; xor byte ptr [rcx - 0xd], cl ; jmp qword ptr [rdi]
0x00000000001828ba : add byte ptr [rax], al ; test dl, ah ; add byte ptr [rax], al ; nop ; pop rcx ; call rdi
0x000000000010ad0f : add byte ptr [rax], al ; test eax, eax ; je 0x10ad28 ; xor eax, eax ; ret
0x0000000000067ad6 : add byte ptr [rax], al ; test ecx, ecx ; je 0x67ae7 ; ret
0x0000000000113c12 : add byte ptr [rax], al ; test rdx, rdx ; jne 0x113c08 ; pop rbx ; ret
0x0000000000182dd6 : add byte ptr [rax], al ; test rsi, rdx ; jmp qword ptr [rcx]
0x000000000017db56 : add byte ptr [rax], al ; xchg dil, bpl ; jmp qword ptr [rcx]
0x000000000015e5aa : add byte ptr [rax], al ; xchg eax, ebp ; jrcxz 0x15e5b7 ; push qword ptr [rax] ; jrcxz 0x15e5bb ; call rdi
0x0000000000188d9f : add byte ptr [rax], al ; xchg eax, ecx ; cmc ; jmp qword ptr [rsi]
0x000000000015e2f6 : add byte ptr [rax], al ; xchg eax, edi ; jrcxz 0x15e2ff ; jmp qword ptr [rdi]
0x000000000015e376 : add byte ptr [rax], al ; xchg eax, edi ; jrcxz 0x15e37f ; jmp qword ptr [rdi]
0x000000000015e3f6 : add byte ptr [rax], al ; xchg eax, edi ; jrcxz 0x15e3ff ; jmp qword ptr [rdi]
0x000000000017e34f : add byte ptr [rax], al ; xchg eax, edi ; out dx, eax ; call qword ptr [rdx]
0x000000000017e89a : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [rax], al ; add al, cl ; out dx, eax ; call qword ptr [rsi]
0x00000000001796ca : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [rax], al ; jo 0x179662 ; in al, dx ; call rdx
0x000000000018c4ca : add byte ptr [rax], al ; xchg eax, esp ; jo 0x18c4d9 ; add al, dh ; jg 0x18c4d2 ; jmp qword ptr [rsi]
0x00000000001844ca : add byte ptr [rax], al ; xchg eax, esp ; lock add byte ptr [rax], al ; rol byte ptr [rdx - 0xd], 1 ; jmp qword ptr [rcx]
0x000000000018aaca : add byte ptr [rax], al ; xchg eax, esp ; push rsi ; add dword ptr [rax], eax ; shr bh, 1 ; cmc ; jmp qword ptr [rcx]
0x000000000017feca : add byte ptr [rax], al ; xchg eax, esp ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; xor byte ptr [rsi - 0x10], bl ; call qword ptr [rax]
0x000000000018daca : add byte ptr [rax], al ; xchg eax, esp ; xchg byte ptr [rcx], al ; add al, dl ; mov bl, -0xa ; call qword ptr [rcx]
0x000000000017008b : add byte ptr [rax], al ; xlatb ; jmp 0x170093
0x00000000001916d6 : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000019167e : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; ret 1
0x0000000000176f6a : add byte ptr [rax], al ; xor al, 0x1b ; add byte ptr [rax], al ; mov al, 0x5e ; jmp 0x176f7c
0x000000000018716a : add byte ptr [rax], al ; xor al, 0x1d ; add dword ptr [rax], eax ; loopne 0x1871e3 ; stc ; call qword ptr [rax]
0x0000000000178b6a : add byte ptr [rax], al ; xor al, 0x37 ; add byte ptr [rax], al ; adc dl, ch ; jmp 0x178b7c
0x000000000018a16a : add byte ptr [rax], al ; xor al, 0x4d ; add dword ptr [rax], eax ; push rax ; loop 0x18a171 ; call qword ptr [rax]
0x000000000018a56a : add byte ptr [rax], al ; xor al, 0x51 ; add dword ptr [rax], eax ; shl dh, 1 ; cmc ; jmp qword ptr [rcx]
0x000000000018c46a : add byte ptr [rax], al ; xor al, 0x70 ; add dword ptr [rax], eax ; nop ; jg 0x18c472 ; jmp qword ptr [rsi]
0x000000000017fe6a : add byte ptr [rax], al ; xor al, 0xffffffffffffffaa ; add byte ptr [rax], al ; mov al, -1 ; stc ; call qword ptr [rax]
0x000000000018196a : add byte ptr [rax], al ; xor al, 0xffffffffffffffc5 ; add byte ptr [rax], al ; nop ; mov bh, -0xf ; call qword ptr [rdx]
0x0000000000183d6a : add byte ptr [rax], al ; xor al, 0xffffffffffffffe9 ; add byte ptr [rax], al ; and byte ptr [rax], ch ; call rdi
0x0000000000184d6a : add byte ptr [rax], al ; xor al, 0xfffffffffffffff9 ; add byte ptr [rax], al ; ret
0x0000000000188882 : add byte ptr [rax], al ; xor al, 1 ; add byte ptr [rax], cl ; mov ch, dh ; jmp qword ptr [rcx]
0x00000000000daad4 : add byte ptr [rax], al ; xor al, al ; ret
0x000000000017869a : add byte ptr [rax], al ; xor al, byte ptr fs:[rax] ; add byte ptr [rax - 0x1f], al ; jmp 0x1786ac
0x000000000017533a : add byte ptr [rax], al ; xor al, cl ; std ; call rax
0x000000000017a116 : add byte ptr [rax], al ; xor bpl, bpl ; call rdi
0x000000000017123a : add byte ptr [rax], al ; xor byte ptr [rax - 0x10], ch ; jmp qword ptr [rax]
0x000000000017d47e : add byte ptr [rax], al ; xor byte ptr [rax - 0x11], ch ; jmp qword ptr [rsi]
0x00000000001845be : add byte ptr [rax], al ; xor byte ptr [rcx - 0xd], cl ; jmp qword ptr [rdi]
0x00000000000e009a : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x0000000000170aa2 : add byte ptr [rax], al ; xor byte ptr [rdi - 0x11], bh ; jmp rax
0x000000000017059a : add byte ptr [rax], al ; xor byte ptr [rdi - 0x14], dh ; jmp rax
0x00000000001704c2 : add byte ptr [rax], al ; xor byte ptr [rdx - 0x14], ch ; jmp rax
0x00000000001769ee : add byte ptr [rax], al ; xor byte ptr [rdx - 0x15], dl ; call qword ptr [rax]
0x000000000017fece : add byte ptr [rax], al ; xor byte ptr [rsi - 0x10], bl ; call qword ptr [rax]
0x000000000017652e : add byte ptr [rax], al ; xor byte ptr [rsi], ch ; jmp 0x176538
0x00000000000993fe : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000170caa : add byte ptr [rax], al ; xor ch, dl ; out dx, eax ; call rax
0x000000000017534a : add byte ptr [rax], al ; xor cl, cl ; std ; jmp rax
0x0000000000161a3e : add byte ptr [rax], al ; xor dl, bh ; cmc ; push qword ptr [rax] ; cli ; cmc ; jmp rax
0x000000000018897a : add byte ptr [rax], al ; xor eax, 0x89700001 ; cmc ; jmp qword ptr [rcx]
0x000000000007dc2c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; ret
0x000000000011d9d6 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000b3756 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000010b56e : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000010b526 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000003663b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b3d5b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000036273 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000036296 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000753de : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x753f9 ; ret
0x0000000000037348 : add byte ptr [rax], al ; xor eax, ecx ; ret
0x000000000009db34 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0x9dae5
0x00000000000a0164 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa0115
0x00000000000a25f4 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa25a5
0x0000000000083bb1 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000028f0f : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000084d8d : add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000187473 : add byte ptr [rax], bh ; add dword ptr [rax], eax ; cmp rsi, rbp ; jmp qword ptr [rcx]
0x0000000000193037 : add byte ptr [rax], bh ; clc ; call qword ptr [rbx]
0x00000000001878c7 : add byte ptr [rax], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018a437 : add byte ptr [rax], bh ; in eax, -0xb ; jmp qword ptr [rcx]
0x00000000001902e7 : add byte ptr [rax], bh ; ja 0x1902e6 ; call rcx
0x00000000001892e7 : add byte ptr [rax], bh ; lodsb al, byte ptr [rsi] ; cmc ; call qword ptr [rdx]
0x00000000001867e7 : add byte ptr [rax], bh ; lodsd eax, dword ptr [rsi] ; hlt ; call qword ptr [rdx]
0x0000000000180f37 : add byte ptr [rax], bh ; mov ch, -5 ; call qword ptr [rax]
0x0000000000184737 : add byte ptr [rax], bh ; push rbp ; call qword ptr [rax]
0x000000000001cf67 : add byte ptr [rax], bh ; ret
0x000000000001ccdf : add byte ptr [rax], bh ; ret 0x39
0x0000000000183493 : add byte ptr [rax], bl ; add byte ptr [rax + 7], bl ; call qword ptr [rbx]
0x000000000018a347 : add byte ptr [rax], bl ; in al, -0xb ; jmp qword ptr [rcx]
0x000000000015fbc8 : add byte ptr [rax], bl ; jmp rax
0x00000000001787f7 : add byte ptr [rax], bl ; jrcxz 0x1787ea ; jmp qword ptr [rsi]
0x000000000018ab17 : add byte ptr [rax], bl ; lock cmc ; jmp qword ptr [rcx]
0x000000000018a127 : add byte ptr [rax], bl ; loop 0x18a124 ; jmp qword ptr [rcx]
0x000000000001cf07 : add byte ptr [rax], bl ; ret
0x000000000001cc7f : add byte ptr [rax], bl ; ret 0x39
0x0000000000183957 : add byte ptr [rax], bl ; sbb bl, dh ; call rdi
0x00000000001865d7 : add byte ptr [rax], bl ; stosd dword ptr [rdi], eax ; hlt ; call qword ptr [rbx]
0x0000000000186617 : add byte ptr [rax], bl ; stosd dword ptr [rdi], eax ; hlt ; call qword ptr [rsi]
0x0000000000186657 : add byte ptr [rax], bl ; stosd dword ptr [rdi], eax ; hlt ; jmp qword ptr [rcx]
0x0000000000180f07 : add byte ptr [rax], bl ; xchg eax, esp ; sti ; call qword ptr [rax]
0x000000000016eb44 : add byte ptr [rax], ch ; cld ; jmp rax
0x00000000001877b7 : add byte ptr [rax], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000180ff7 : add byte ptr [rax], ch ; int1 ; jmp qword ptr [rbx]
0x000000000017d5d7 : add byte ptr [rax], ch ; outsd dx, dword ptr [rsi] ; out dx, eax ; call qword ptr [rax]
0x000000000017cf77 : add byte ptr [rax], ch ; pop rdi ; out dx, eax ; jmp qword ptr [rdi]
0x000000000001cf37 : add byte ptr [rax], ch ; ret
0x000000000001ccaf : add byte ptr [rax], ch ; ret 0x39
0x00000000001893c7 : add byte ptr [rax], ch ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x0000000000183777 : add byte ptr [rax], cl ; adc ebx, esi ; call rdx
0x00000000000c4ef7 : add byte ptr [rax], cl ; add byte ptr [rax], al ; jmp 0xc4ea8
0x00000000001864e7 : add byte ptr [rax], cl ; cdq ; hlt ; call rcx
0x0000000000187b37 : add byte ptr [rax], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000187577 : add byte ptr [rax], cl ; cmp al, -0xb ; jmp qword ptr [rcx]
0x000000000018a407 : add byte ptr [rax], cl ; in eax, -0xb ; jmp qword ptr [rcx]
0x00000000000368e2 : add byte ptr [rax], cl ; jmp 0x368ac
0x0000000000195877 : add byte ptr [rax], cl ; jnp 0x195877 ; jmp qword ptr [rsi]
0x000000000017fbf7 : add byte ptr [rax], cl ; lock ; call qword ptr [rax]
0x000000000018a007 : add byte ptr [rax], cl ; loope 0x18a004 ; jmp qword ptr [rcx]
0x0000000000188887 : add byte ptr [rax], cl ; mov ch, dh ; jmp qword ptr [rcx]
0x000000000002ca64 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x0000000000184827 : add byte ptr [rax], cl ; push rdi ; jmp rdx
0x0000000000182347 : add byte ptr [rax], cl ; repne ; jmp qword ptr [rcx]
0x000000000001ced7 : add byte ptr [rax], cl ; ret
0x0000000000189f57 : add byte ptr [rax], cl ; sal ch, cl ; jmp qword ptr [rcx]
0x000000000017e387 : add byte ptr [rax], cl ; xchg eax, edi ; out dx, eax ; call qword ptr [rdx]
0x00000000001834ab : add byte ptr [rax], dh ; add byte ptr [rax + 7], ah ; call qword ptr [rbx]
0x000000000019301f : add byte ptr [rax], dh ; clc ; call qword ptr [rcx]
0x0000000000161a3f : add byte ptr [rax], dh ; cli ; cmc ; push qword ptr [rax] ; cli ; cmc ; jmp rax
0x000000000018733f : add byte ptr [rax], dh ; cmp ebp, esi ; call qword ptr [rcx]
0x00000000001724eb : add byte ptr [rax], dh ; cmp ebp, esi ; jmp rax
0x000000000018745f : add byte ptr [rax], dh ; cmp esi, ebp ; jmp qword ptr [rcx]
0x0000000000171adb : add byte ptr [rax], dh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rax
0x0000000000174dbb : add byte ptr [rax], dh ; cwde ; cli ; jmp qword ptr [rax]
0x000000000018ac4f : add byte ptr [rax], dh ; div ebp ; jmp qword ptr [rcx]
0x000000000017464b : add byte ptr [rax], dh ; fyl2xp1 ; jmp qword ptr [rax]
0x000000000018a35f : add byte ptr [rax], dh ; in al, -0xb ; jmp qword ptr [rcx]
0x00000000000993ff : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x0000000000171d63 : add byte ptr [rax], dh ; insd dword ptr [rdi], dx ; jmp qword ptr [rax]
0x000000000017059b : add byte ptr [rax], dh ; ja 0x17058f ; jmp rax
0x0000000000170aa3 : add byte ptr [rax], dh ; jg 0x170a9a ; jmp rax
0x000000000018604f : add byte ptr [rax], dh ; jge 0x18604b ; call qword ptr [rdx]
0x0000000000170dbb : add byte ptr [rax], dh ; jmp 0x170db4
0x000000000017652f : add byte ptr [rax], dh ; jmp 0x176537
0x00000000001751c3 : add byte ptr [rax], dh ; jno 0x1751c6 ; jmp qword ptr [rax]
0x000000000017534b : add byte ptr [rax], dh ; leave ; std ; jmp rax
0x000000000018ab2f : add byte ptr [rax], dh ; lock cmc ; jmp qword ptr [rcx]
0x000000000018a13f : add byte ptr [rax], dh ; loop 0x18a13c ; jmp qword ptr [rcx]
0x00000000001735bb : add byte ptr [rax], dh ; mov bl, -9 ; jmp rax
0x0000000000174333 : add byte ptr [rax], dh ; mov cl, bh ; call rax
0x00000000001889df : add byte ptr [rax], dh ; mov dh, ch ; jmp qword ptr [rcx]
0x0000000000194eaf : add byte ptr [rax], dh ; pop rsp ; clc ; call qword ptr [rax]
0x00000000001704c3 : add byte ptr [rax], dh ; push -0x14 ; jmp rax
0x00000000001769ef : add byte ptr [rax], dh ; push rdx ; jmp 0x1769f7
0x00000000001845bf : add byte ptr [rax], dh ; rep ; jmp qword ptr [rdi]
0x000000000000ac5f : add byte ptr [rax], dh ; ret
0x000000000001ccc7 : add byte ptr [rax], dh ; ret 0x39
0x00000000001718cb : add byte ptr [rax], dh ; ret 0xfff1
0x0000000000171b73 : add byte ptr [rax], dh ; ret 0xfff2
0x0000000000173693 : add byte ptr [rax], dh ; ret 0xfff7
0x0000000000189e7f : add byte ptr [rax], dh ; sal ebp, 1 ; jmp qword ptr [rcx]
0x000000000018949f : add byte ptr [rax], dh ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x0000000000171863 : add byte ptr [rax], dh ; scasd eax, dword ptr [rdi] ; int1 ; jmp qword ptr [rax]
0x000000000018666f : add byte ptr [rax], dh ; stosd dword ptr [rdi], eax ; hlt ; jmp qword ptr [rcx]
0x0000000000171cd3 : add byte ptr [rax], dh ; sub al, -0xd ; call rax
0x0000000000182dbf : add byte ptr [rax], dh ; test esi, edx ; jmp qword ptr [rcx]
0x00000000000f4f1a : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000067405 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000067413 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000001876af : add byte ptr [rax], dl ; cmc ; jmp qword ptr [rcx]
0x000000000017047b : add byte ptr [rax], dl ; in al, dx ; call qword ptr [rax]
0x0000000000173f7b : add byte ptr [rax], dl ; in eax, dx ; clc ; call qword ptr [rax]
0x0000000000184f1f : add byte ptr [rax], dl ; iretd ; call rdi
0x00000000001709f3 : add byte ptr [rax], dl ; jb 0x1709ea ; jmp qword ptr [rax]
0x00000000001742c3 : add byte ptr [rax], dl ; jbe 0x1742c4 ; call qword ptr [rax]
0x0000000000171d83 : add byte ptr [rax], dl ; je 0x171d7e ; jmp qword ptr [rax]
0x0000000000170da3 : add byte ptr [rax], dl ; jmp 0xffffffffc3480d9f
0x0000000000182b0f : add byte ptr [rax], dl ; jmp rax
0x000000000017293b : add byte ptr [rax], dl ; mov bl, -0xa ; jmp qword ptr [rax]
0x000000000002cb44 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x00000000001747d3 : add byte ptr [rax], dl ; or dl, bh ; call qword ptr [rax]
0x0000000000174af3 : add byte ptr [rax], dl ; push rbx ; cli ; jmp rax
0x000000000001ceef : add byte ptr [rax], dl ; ret
0x000000000001cc67 : add byte ptr [rax], dl ; ret 0x39
0x0000000000177c1f : add byte ptr [rax], dl ; ret 0xffeb
0x000000000016fd3b : add byte ptr [rax], dl ; sbb ch, bl ; jmp qword ptr [rax]
0x0000000000172d9b : add byte ptr [rax], dl ; sbb dh, bh ; jmp qword ptr [rax]
0x00000000001893af : add byte ptr [rax], dl ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001810ff : add byte ptr [rax], dl ; sub edi, edx ; call qword ptr [rdi]
0x000000000018718f : add byte ptr [rax], dl ; xor ebp, esi ; call qword ptr [rax]
0x0000000000189a78 : add byte ptr [rax], r8b ; add byte ptr [rsi + rax*2 + 1], al ; add byte ptr [rax], dh ; ret
0x00000000000efd65 : add byte ptr [rax], r8b ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000033805 : add byte ptr [rax], r8b ; add rsp, 0x20 ; pop rbx ; ret
0x000000000014c045 : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000006996d : add byte ptr [rax], r8b ; call 0x75c25
0x000000000011d2f5 : add byte ptr [rax], r8b ; call qword ptr [rax]
0x0000000000033745 : add byte ptr [rax], r8b ; fstp st(1) ; ret
0x00000000000c051d : add byte ptr [rax], r8b ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000008f5dd : add byte ptr [rax], r8b ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000008f60d : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000007e265 : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x000000000011c755 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; jmp 0x11c72b
0x00000000000347e5 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000b9da5 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x0000000000113c1d : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x000000000006ec3d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdx] ; ret
0x00000000000955ad : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000008aec5 : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x00000000000f8b45 : add byte ptr [rax], r8b ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000011d39d : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x000000000003244d : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x000000000008a665 : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000000955ed : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000076255 : add byte ptr [rax], r8b ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000109b5d : add byte ptr [rax], r8b ; pop rbx ; ret
0x00000000000c5d8d : add byte ptr [rax], r8b ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000068855 : add byte ptr [rax], r8b ; ret
0x000000000017a115 : add byte ptr [rax], r8b ; xor bpl, bpl ; call rdi
0x000000000011d9d5 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000ceb0d : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000c312d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036bad : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000036295 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000009b26d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x00000000000448ff : add byte ptr [rbp + 0x29], cl ; ret
0x00000000000a6737 : add byte ptr [rbp + 0x29dc75db], al ; ret
0x00000000000f2bad : add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015e5ab : add byte ptr [rbp + 0x30ffffe3], dl ; jrcxz 0x15e5ba ; call rdi
0x0000000000028f10 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000aeadd : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000f516f : add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], -0x1b ; pop rbp ; ret
0x00000000000a58e8 : add byte ptr [rbp + 0x39], cl ; ret 0x1945
0x0000000000040b3e : add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x0000000000038120 : add byte ptr [rbp + 0x3d], dh ; add rsp, 8 ; ret
0x000000000011ac15 : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x000000000004efae : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000004f07e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000001fc52 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000083c2e : add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x000000000006739e : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x00000000001879bb : add byte ptr [rbp + 0x4a800001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001879eb : add byte ptr [rbp + 0x60800001], dh ; stc ; call qword ptr [rax]
0x00000000000d2012 : add byte ptr [rbp + 0x6348ff55], cl ; ret 0x8d48
0x00000000000c30a4 : add byte ptr [rbp + 0x63], cl ; ret 0x148b
0x000000000002d2b2 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x18 ; ret
0x00000000000fb511 : add byte ptr [rbp + 0xb], dh ; jmp 0xfb541
0x000000000004329f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000004318f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000000ea17 : add byte ptr [rbp + 1], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001879a3 : add byte ptr [rbp + 1], ch ; add byte ptr [rax + 0x4a], ch ; cmc ; jmp qword ptr [rcx]
0x000000000018798b : add byte ptr [rbp + 1], dl ; add byte ptr [rax + 0x4a], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000036a7a : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x00000000000c20b9 : add byte ptr [rbp + 4], dh ; pop rbx ; ret
0x000000000011d278 : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x00000000001164f6 : add byte ptr [rbp + 7], dh ; ret
0x00000000000e1af5 : add byte ptr [rbp + 8], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001899eb : add byte ptr [rbp + rax*2 - 0x3dffffff], dh ; cmc ; call qword ptr [rax]
0x000000000017d9bb : add byte ptr [rbp + rax*4 + 0x7f900000], al ; out dx, eax ; call rax
0x00000000001819e3 : add byte ptr [rbp + rax*8 - 0x48680000], ch ; int1 ; call qword ptr [rax]
0x00000000001819cb : add byte ptr [rbp + rax*8 - 0x48700000], dl ; int1 ; call qword ptr [rdx]
0x00000000000b8e68 : add byte ptr [rbp + rbp - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000018718b : add byte ptr [rbp + rbx + 1], dl ; add byte ptr [rax], dl ; xor ebp, esi ; call qword ptr [rax]
0x000000000006c4b8 : add byte ptr [rbp + rcx - 0x77], dh ; ret 0xd089
0x000000000017a1f3 : add byte ptr [rbp + rcx*2 + 0x4ce80000], bh ; in eax, dx ; call rdi
0x00000000000c8c5e : add byte ptr [rbp + rcx*4 + 0x43], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000010a06a : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x0000000000109f27 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x1c ; call qword ptr [rax]
0x000000000010a45a : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00000000000a785f : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r12
0x00000000000c2c47 : add byte ptr [rbp + rcx*4 + 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000017e1eb : add byte ptr [rbp + rcx*4 - 0x6c200000], dh ; out dx, eax ; jmp qword ptr [rax]
0x00000000001811bb : add byte ptr [rbp + rdi*4 - 0x71900000], al ; int1 ; call qword ptr [rsi]
0x000000000016e664 : add byte ptr [rbp + rdi*8 - 0x25b6f01], ah ; jmp qword ptr [rax]
0x000000000017919b : add byte ptr [rbp + rdi], ah ; add byte ptr [rax], al ; in al, dx ; jmp rax
0x00000000001769eb : add byte ptr [rbp + rdx + 0x52300000], dh ; jmp 0x1769fb
0x00000000001829db : add byte ptr [rbp + rdx*8 + 0x5eb00000], ah ; jmp qword ptr [rax]
0x000000000018897b : add byte ptr [rbp + rsi + 1], al ; add byte ptr [rax - 0x77], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001889ab : add byte ptr [rbp + rsi + 1], dh ; add al, dl ; mov ebp, esi ; jmp qword ptr [rcx]
0x00000000001889db : add byte ptr [rbp + rsi - 0x75cfffff], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001949c3 : add byte ptr [rbp + rsi*8 - 0x7f07ffff], cl ; sti ; jmp qword ptr [rdx]
0x000000000009b7f5 : add byte ptr [rbp - 0x10], dh ; ret
0x000000000014c648 : add byte ptr [rbp - 0x3b], dh ; add rsp, 8 ; ret
0x000000000016fb30 : add byte ptr [rbp - 0x638f0004], bl ; cld ; jmp rax
0x0000000000038e6a : add byte ptr [rbp - 0x77], al ; fmul qword ptr [rcx - 0x77] ; dec byte ptr [rax - 0x77] ; ret
0x0000000000042787 : add byte ptr [rbp - 0x77], cl ; ret
0x000000000009d3e8 : add byte ptr [rbp - 0x7b], al ; in al, 0x75 ; ret 0x8944
0x000000000009d888 : add byte ptr [rbp - 0x7b], al ; in al, 0x75 ; ret 0x894c
0x00000000000c10ff : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000041ae7 : add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x000000000007d515 : add byte ptr [rbp - 0xcf98740], al ; ret
0x0000000000033995 : add byte ptr [rbp - 0xcf98a40], al ; ret
0x0000000000067ad7 : add byte ptr [rbp - 0xcfb8b37], al ; ret
0x000000000015fff0 : add byte ptr [rbp - 0xd], ah ; jmp qword ptr [rax]
0x00000000001779b3 : add byte ptr [rbp], bh ; add byte ptr [rax - 0x42], bl ; jmp 0x1779c3
0x0000000000120099 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000072eff : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x000000000009a20b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000702c8 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x00000000000ea4bd : add byte ptr [rbx + 0x2b62bc0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000018714b : add byte ptr [rbx + 0x31400001], dl ; cmc ; call qword ptr [rax]
0x00000000000c5d8f : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000077577 : add byte ptr [rbx + 0x3284a505], al ; add byte ptr [rcx], al ; ret
0x000000000002eb76 : add byte ptr [rbx + 0x37417335], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b86c8 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000f5208 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000004cfdd : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000955bf : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x00000000001443df : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x000000000014778f : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000979df : add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x000000000006bebb : add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000105484 : add byte ptr [rbx + 0x4f0f05f8], al ; ret 0x4589
0x000000000010545c : add byte ptr [rbx + 0x4f0f1ef8], al ; ret 0x4589
0x00000000001344af : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000007c6bf : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x00000000000226cd : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fb20 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000001fb4b : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000227d8 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000007362f : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x000000000010e1fe : add byte ptr [rbx + 0x634801ea], al ; ret 0xd285
0x0000000000095ca9 : add byte ptr [rbx + 0x63], cl ; or al, 0xffffffffffffff83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000177173 : add byte ptr [rbx + 0x64880000], bh ; jmp 0x177183
0x00000000000da26f : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x000000000018716b : add byte ptr [rbx + 0x68e00001], dh ; stc ; call qword ptr [rax]
0x0000000000072ecf : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x000000000009c1d8 : add byte ptr [rbx + 0xa777fff], al ; mov eax, edi ; ret
0x0000000000058410 : add byte ptr [rbx + 0xa880], cl ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000b2baf : add byte ptr [rbx + 0xb7401fe], al ; xor eax, eax ; ret
0x000000000009db0e : add byte ptr [rbx + 0xc7413f8], al ; mov edx, eax ; jmp 0x9dae7
0x00000000000a013e : add byte ptr [rbx + 0xc7413f8], al ; mov edx, eax ; jmp 0xa0117
0x00000000000a25ce : add byte ptr [rbx + 0xc7413f8], al ; mov edx, eax ; jmp 0xa25a7
0x0000000000036daf : add byte ptr [rbx + 0xf48fffa], al ; ret
0x000000000007132f : add byte ptr [rbx + 0xf89cfe1], al ; ret
0x00000000000007bc : add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001877b3 : add byte ptr [rbx + 1], bh ; add byte ptr [rax], ch ; cmc ; jmp qword ptr [rcx]
0x000000000019610b : add byte ptr [rbx + 2], cl ; add byte ptr [rax], al ; rol byte ptr [rdx], cl ; add byte ptr [rax], al ; ret
0x0000000000185793 : add byte ptr [rbx + rax + 1], bl ; add byte ptr [rax - 0x17], ch ; jmp qword ptr [rbx]
0x0000000000149c3a : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x0000000000198ba3 : add byte ptr [rbx + rax], bh ; add byte ptr [rax], al ; mov ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret 3
0x000000000017ff5b : add byte ptr [rbx + rbp*4], ah ; add byte ptr [rax], al ; push rsp ; cli ; call qword ptr [rax]
0x0000000000183feb : add byte ptr [rbx + rbp*8 + 0x32c00000], dh ; call qword ptr [rdx]
0x000000000017af8b : add byte ptr [rbx + rbx*2], dl ; add byte ptr [rax], al ; hlt ; out dx, al ; call qword ptr [rax]
0x0000000000176f9b : add byte ptr [rbx + rbx], ah ; add al, dh ; pop rsi ; jmp 0x176fab
0x0000000000176f53 : add byte ptr [rbx + rbx], bl ; add byte ptr [rax], al ; test al, 0x5e ; jmp 0x176f63
0x0000000000176f6b : add byte ptr [rbx + rbx], dh ; add byte ptr [rax], al ; mov al, 0x5e ; jmp 0x176f7b
0x00000000000ed55a : add byte ptr [rbx + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000f436a : add byte ptr [rbx + rcx - 0xd], dh ; ret
0x0000000000189f53 : add byte ptr [rbx + rcx*2], bl ; add dword ptr [rax], eax ; or dl, dl ; cmc ; jmp qword ptr [rcx]
0x00000000000d062d : add byte ptr [rbx + rcx*4 + 0x2c], cl ; ret
0x00000000000b5d86 : add byte ptr [rbx + rcx*4 + 0x35], cl ; ret 0x2e8b
0x0000000000044317 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000042c17 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000029f26 : add byte ptr [rbx + rcx*4 + 0xd], al ; ret 0x378d
0x0000000000181ff3 : add byte ptr [rbx + rcx*8 + 0x2bb80000], bh ; call qword ptr [rax]
0x000000000017cf73 : add byte ptr [rbx + rdi*2], bh ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x11], bl ; jmp qword ptr [rdi]
0x0000000000180ff3 : add byte ptr [rbx + rdi*4 + 0x42280000], bh ; int1 ; jmp qword ptr [rbx]
0x0000000000186793 : add byte ptr [rbx + rdx + 1], bl ; add byte ptr [rax - 0x53], cl ; hlt ; call qword ptr [rdi]
0x00000000001867e3 : add byte ptr [rbx + rdx - 0x52c7ffff], ch ; hlt ; call qword ptr [rdx]
0x00000000001827f3 : add byte ptr [rbx + rdx*8 + 0x58980000], bh ; jmp qword ptr [rcx]
0x00000000001827ab : add byte ptr [rbx + rdx*8], dh ; add byte ptr [rax + 0x58], dl ; call qword ptr [rcx]
0x00000000001787f3 : add byte ptr [rbx + rsi - 0x1ce80000], bh ; jmp 0x178803
0x0000000000178753 : add byte ptr [rbx + rsi], bl ; add byte ptr [rax], al ; cwde ; loop 0x17874e ; call qword ptr [rcx]
0x000000000005143f : add byte ptr [rbx - 0x110743], al ; call qword ptr [rax]
0x00000000000533eb : add byte ptr [rbx - 0x113743], al ; call qword ptr [rax]
0x0000000000100f20 : add byte ptr [rbx - 0x1f74b], cl ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xf685
0x00000000000b8497 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0xb84b1 ; ret
0x000000000007025f : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000009a28f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x000000000009a288 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000009a281 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x000000000009a27a : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000009a273 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x000000000009a26c : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x00000000000e6f6b : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x0000000000106bd6 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x106be8 ; ret
0x00000000000f4aaf : add byte ptr [rbx - 0x3f7aefb9], cl ; jne 0xf4ac9 ; ret
0x0000000000099fbe : add byte ptr [rbx - 0x50f0fe3e], al ; ror dword ptr [rdi], -0x51 ; ret 0x68e9
0x0000000000099fb0 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xda89
0x00000000000cb70c : add byte ptr [rbx - 0x6bf0a005], al ; ret 0xc085
0x0000000000040fdf : add byte ptr [rbx - 0x73], al ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000eb970 : add byte ptr [rbx - 0x74b7f440], al ; push rsp ; ret 0x8940
0x00000000000ebdd0 : add byte ptr [rbx - 0x74b7f540], al ; push rsp ; ret 0x8940
0x00000000000ebb10 : add byte ptr [rbx - 0x74b7f640], al ; push rsp ; ret 0x8940
0x00000000000eba90 : add byte ptr [rbx - 0x74b7f740], al ; push rsp ; ret 0x8940
0x00000000000ebcb0 : add byte ptr [rbx - 0x74b7f840], al ; push rsp ; ret 0x8940
0x00000000000ebd40 : add byte ptr [rbx - 0x74b7f940], al ; push rsp ; ret 0x8940
0x00000000000ebe60 : add byte ptr [rbx - 0x74b7fa40], al ; push rsp ; ret 0x8940
0x00000000000ebf80 : add byte ptr [rbx - 0x74b7fb40], al ; push rsp ; ret 0x8940
0x00000000000ebba0 : add byte ptr [rbx - 0x74b7fc40], al ; push rsp ; ret 0x8940
0x00000000000eba00 : add byte ptr [rbx - 0x74b7fd40], al ; push rsp ; ret 0x8940
0x00000000000ebc20 : add byte ptr [rbx - 0x74b7fe40], al ; push rsp ; ret 0x8940
0x0000000000036ad4 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000005addd : add byte ptr [rbx - 0x76be0008], al ; ret 0x1875
0x000000000005d8cd : add byte ptr [rbx - 0x76be0008], al ; ret 0x5e75
0x0000000000055fbf : add byte ptr [rbx - 0x76be0008], al ; ret 0x850f
0x000000000005768c : add byte ptr [rbx - 0x76be0008], al ; ret 0x8b48
0x000000000005de70 : add byte ptr [rbx - 0x76be0008], al ; ret 0xd75
0x0000000000067e11 : add byte ptr [rbx - 0x77], bl ; lock pop rbp ; pop r12 ; ret
0x000000000004ee79 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000003134b : add byte ptr [rbx - 0x77cfc20], al ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x854d
0x000000000004266f : add byte ptr [rbx - 0x78f0d007], al ; ret
0x000000000001ff7f : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], -0x6c ; ret 0x8d48
0x00000000000c3fdc : add byte ptr [rbx - 0x7ab3dbbc], cl ; ror byte ptr [rdi], -0x7b ; ret 0
0x00000000000d3350 : add byte ptr [rbx - 0x7bf00220], al ; ret
0x000000000014b2f6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000bc4ef : add byte ptr [rbx - 0x7cb7f3ad], cl ; ret
0x00000000000c11df : add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x00000000000d043f : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4408
0x000000000007a238 : add byte ptr [rbx - 0x7d], cl ; cmp al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000007a380 : add byte ptr [rbx - 0x7d], cl ; xor al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000e43ff : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000d04c3 : add byte ptr [rbx - 0x9b43], cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000004c614 : add byte ptr [rbx - 0xa773], cl ; dec dword ptr [rax - 0x77] ; ret 0x858b
0x000000000004cd1a : add byte ptr [rbx - 0xa773], cl ; dec dword ptr [rax - 0x77] ; ret 0xf5e9
0x000000000015ff90 : add byte ptr [rbx - 0xd], ah ; call qword ptr [rax]
0x0000000000184500 : add byte ptr [rbx - 0xd], al ; jmp qword ptr [rcx]
0x0000000000079b3e : add byte ptr [rbx - 0xd], bl ; ret
0x0000000000173054 : add byte ptr [rbx - 9], dl ; jmp rax
0x000000000018316b : add byte ptr [rbx*8 - 0x600000], dh ; jmp rsp
0x000000000016ea2c : add byte ptr [rbx], al ; cld ; jmp rax
0x0000000000183773 : add byte ptr [rbx], bh ; add byte ptr [rax], al ; or byte ptr [rcx], dl ; call rdx
0x00000000000da518 : add byte ptr [rbx], bh ; or al, 0x74 ; ret 0x9066
0x000000000016e47c : add byte ptr [rbx], bl ; sti ; push qword ptr [rax] ; cmp bl, bh ; call qword ptr [rax]
0x000000000016e43c : add byte ptr [rbx], cl ; sti ; push qword ptr [rax + 0x1c] ; sti ; call qword ptr [rax]
0x00000000000059b7 : add byte ptr [rbx], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x37
0x00000000001038f7 : add byte ptr [rcx + 0x11894dd0], cl ; ret
0x000000000004fa46 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00000000000a8a86 : add byte ptr [rcx + 0x29], cl ; ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x000000000010caea : add byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp - 0x77], 1 ; ret 0x334c
0x000000000010ccf2 : add byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp - 0x77], 1 ; ret 0x334d
0x000000000004f0f4 : add byte ptr [rcx + 0x34e04505], cl ; add byte ptr [rax + 0x63], cl ; ret 0x8948
0x000000000014209f : add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000000bd964 : add byte ptr [rcx + 0x39], al ; ret 0x870f
0x000000000003ea57 : add byte ptr [rcx + 0x39], cl ; ret
0x000000000003cb7f : add byte ptr [rcx + 0x39], cl ; ret 0x840f
0x000000000007a913 : add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x00000000000857c6 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x0000000000055410 : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00000000000b4fb2 : add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000db64e : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x0000000000033fd6 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000006c5a2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000000741b6 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000000f63a6 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x000000000014207f : add byte ptr [rcx + 0x4518811], cl ; ret
0x000000000009658f : add byte ptr [rcx + 0x4578817], cl ; ret
0x00000000000766a6 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x00000000000d10a6 : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x00000000000e493a : add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x00000000000c1385 : add byte ptr [rcx + 0x5bc03128], cl ; pop rbp ; pop r12 ; ret
0x0000000000071087 : add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x000000000012a49e : add byte ptr [rcx + 0x63], cl ; adc al, -0x6d ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001477fc : add byte ptr [rcx + 0x63], cl ; or al, 0xffffffffffffff93 ; add rcx, r11 ; jmp rcx
0x0000000000095438 : add byte ptr [rcx + 0x63], cl ; or al, 0xffffffffffffff93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000002cc0f : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x00000000000332f7 : add byte ptr [rcx + 0x7fffff], ch ; je 0x332f2 ; ret
0x000000000006d587 : add byte ptr [rcx + 0xdc1e8d6], cl ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x6d53a
0x00000000000bf1ab : add byte ptr [rcx + 0xf], al ; mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x00000000000596a2 : add byte ptr [rcx + 0xf], al ; mov dh, 0x75 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000099ef1 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000000ea22c : add byte ptr [rcx + 1], cl ; fmul qword ptr [rax + 0x39] ; ret
0x000000000008c0ff : add byte ptr [rcx + 1], cl ; ret
0x000000000008f08b : add byte ptr [rcx + 1], cl ; ret 0x8947
0x0000000000000881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x0000000000078c1e : add byte ptr [rcx + rax + 0x55], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000007d248 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x000000000017d5d3 : add byte ptr [rcx + rax*4 + 0x6f280000], bl ; out dx, eax ; call qword ptr [rax]
0x000000000018158b : add byte ptr [rcx + rax*8], dl ; add byte ptr [rax - 0x57], dh ; int1 ; call qword ptr [rsi]
0x000000000019554b : add byte ptr [rcx + rax], dl ; add al, byte ptr [rax] ; add byte ptr [rsi - 8], dh ; call qword ptr [rax]
0x0000000000050d3b : add byte ptr [rcx + rbp - 0x20], al ; jmp 0x50cdb
0x0000000000177dd3 : add byte ptr [rcx + rbp - 0x3ae80000], bl ; jmp 0x177de3
0x0000000000183d6b : add byte ptr [rcx + rbp*8], dh ; add byte ptr [rax], al ; and byte ptr [rax], ch ; call rdi
0x0000000000177d83 : add byte ptr [rcx + rbp], cl ; add al, bh ; ret
0x0000000000176deb : add byte ptr [rcx + rbx + 0x5e500000], dh ; jmp 0x176dfb
0x0000000000182dd3 : add byte ptr [rcx + rbx*8 - 0x7ab80000], bl ; jmp qword ptr [rcx]
0x0000000000182dbb : add byte ptr [rcx + rbx*8 - 0x7ad00000], al ; jmp qword ptr [rcx]
0x0000000000176d5b : add byte ptr [rcx + rbx], ah ; add byte ptr [rax], al ; push rax ; pop rsi ; jmp 0x176d6b
0x0000000000154d5f : add byte ptr [rcx + rcx + 0x9bf0000], bh ; add byte ptr [rax], al ; ret 9
0x0000000000189df3 : add byte ptr [rcx + rcx*2 - 0x2f77ffff], bh ; cmc ; jmp rax
0x00000000000ef91f : add byte ptr [rcx + rcx*2 - 0x75], ah ; xor byte ptr [rax - 0x7d], cl ; ret 0xf601
0x0000000000066cd8 : add byte ptr [rcx + rcx*4 + 0x24], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000001132d1 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00000000000594a0 : add byte ptr [rcx + rcx*4 + 0x30], al ; xor r8d, r8d ; jmp 0x557af
0x00000000000b5091 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000b515b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000008aec7 : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x000000000002040d : add byte ptr [rcx + rcx*4 + 0xd], al ; imul esp, dword ptr [rax + rdi], 0 ; pop rbx ; ret
0x000000000007aaea : add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [rax]
0x000000000002dbf9 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000021fed : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000010479e : add byte ptr [rcx + rcx*4 - 0x19], al ; call 0xe0a86
0x0000000000068df2 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000009c871 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000100025 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rax, qword ptr [rsp] ; call rax
0x000000000007c64c : add byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c01a : add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000052078 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x6e356
0x000000000007ece0 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rdx, r15 ; call rax
0x0000000000181d73 : add byte ptr [rcx + rcx*8], bh ; add byte ptr [rax], al ; pop rax ; out -0xf, al ; jmp rax
0x0000000000188d9b : add byte ptr [rcx + rdi + 1], ah ; add byte ptr [rax], al ; xchg eax, ecx ; cmc ; jmp qword ptr [rsi]
0x0000000000178dbb : add byte ptr [rcx + rdi - 0xd200000], al ; jmp 0x178dcb
0x0000000000178deb : add byte ptr [rcx + rdi - 0xd200000], dh ; jmp 0x178dfb
0x0000000000178dd3 : add byte ptr [rcx + rdi - 0xd280000], bl ; jmp 0x178de3
0x0000000000184d6b : add byte ptr [rcx + rdi*8], dh ; add byte ptr [rax], al ; ret
0x0000000000178da3 : add byte ptr [rcx + rdi], ch ; add al, bl ; jmp 0x178db3
0x0000000000178d8b : add byte ptr [rcx + rdi], dl ; add al, ah ; jmp 0x178d9b
0x00000000001865d3 : add byte ptr [rcx + rdx - 0x54e7ffff], bl ; hlt ; call qword ptr [rbx]
0x000000000018a5b3 : add byte ptr [rcx + rdx*2 + 1], bh ; add byte ptr [rax - 0x19], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018a583 : add byte ptr [rcx + rdx*2 + 1], cl ; add al, ch ; out -0xb, al ; jmp qword ptr [rcx]
0x000000000018a5e3 : add byte ptr [rcx + rdx*2 - 0x1887ffff], ch ; cmc ; jmp qword ptr [rcx]
0x000000000018a53b : add byte ptr [rcx + rdx*2], al ; add dword ptr [rax], eax ; jo 0x18a530 ; cmc ; jmp qword ptr [rcx]
0x000000000018a56b : add byte ptr [rcx + rdx*2], dh ; add dword ptr [rax], eax ; shl dh, 1 ; cmc ; jmp qword ptr [rcx]
0x000000000017e5e3 : add byte ptr [rcx + rdx*4 - 0x5f580000], ch ; out dx, eax ; call rax
0x00000000001885eb : add byte ptr [rcx + rsi - 0x7d2fffff], dh ; cmc ; jmp qword ptr [rcx]
0x000000000018c5bb : add byte ptr [rcx + rsi*2 + 0x18a00001], al ; stc ; jmp qword ptr [rsi]
0x000000000018c5eb : add byte ptr [rcx + rsi*2 + 0x18a00001], dh ; stc ; jmp qword ptr [rsi]
0x00000000001845bb : add byte ptr [rcx + rsi*8 + 0x49300000], al ; jmp qword ptr [rdi]
0x00000000000f68fb : add byte ptr [rcx - 0x10c27c30], cl ; ret
0x000000000010f923 : add byte ptr [rcx - 0x17f7dbbc], cl ; ret
0x000000000000245f : add byte ptr [rcx - 0x23], al ; out -0x57, al ; ret 0xbd07
0x00000000000bdf08 : add byte ptr [rcx - 0x28d773], cl ; dec dword ptr [rax + 0x63] ; ret 0x9589
0x00000000000a85ff : add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x000000000004063e : add byte ptr [rcx - 0x3a], al ; add al, 0x10 ; add bl, dh ; ret
0x00000000000b3731 : add byte ptr [rcx - 0x3b7cb739], cl ; or cl, ch ; ret
0x00000000000da27f : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00000000000a19ea : add byte ptr [rcx - 0x44], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000031117 : add byte ptr [rcx - 0x55551f], al ; call rcx
0x000000000016f720 : add byte ptr [rcx - 0x576f0004], ch ; cld ; jmp qword ptr [rax]
0x00000000000c6e4d : add byte ptr [rcx - 0x73], al ; add dword ptr [rcx], edi ; ret
0x00000000000ba867 : add byte ptr [rcx - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x00000000000b5921 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000035584 : add byte ptr [rcx - 0x75], cl ; cmp al, 0x24 ; call r14
0x00000000000bb29f : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x7d], r9b ; ret 0x4808
0x00000000001170af : add byte ptr [rcx - 0x75], cl ; push rdx ; sbb byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x0000000000040a65 : add byte ptr [rcx - 0x75], cl ; ret
0x00000000000f8657 : add byte ptr [rcx - 0x76f3dba4], cl ; ret 0x6ae9
0x000000000008f60f : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x00000000000d435b : add byte ptr [rcx - 0x77], al ; push rbp ; and byte ptr [rcx - 0x7d], cl ; ret
0x00000000000bceb4 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000057422 : add byte ptr [rcx - 0x77], al ; ret 0x8948
0x0000000000058453 : add byte ptr [rcx - 0x77], al ; ret 0x8b48
0x00000000000ab1a2 : add byte ptr [rcx - 0x77], cl ; or byte ptr [r11 + rcx*4 + 5], r9b ; ret 0x2f4c
0x00000000000451a8 : add byte ptr [rcx - 0x77], cl ; ret
0x00000000000425eb : add byte ptr [rcx - 0x77], cl ; ret 0x18b9
0x000000000004508d : add byte ptr [rcx - 0x77], cl ; ret 0x8944
0x00000000000a4146 : add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x000000000005035d : add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x00000000000ce27f : add byte ptr [rcx - 0x7cb76fec], cl ; ret 0x4801
0x00000000000206bf : add byte ptr [rcx - 0x7d], al ; ret
0x00000000000abb66 : add byte ptr [rcx - 0x7d], al ; stc ; add dword ptr [rdi], ecx ; sahf ; ret 0x2941
0x0000000000022906 : add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000314f9 : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000c286f : add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x00000000000f8d8f : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000005737b : add byte ptr [rcx - 0x7d], cl ; ret 0x490f
0x000000000003dedf : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000011e20f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008026f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000f3e5f : add byte ptr [rcx - 0x876b], cl ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000b849a : add byte ptr [rcx - 0xcf68130], cl ; ret
0x000000000015ff48 : add byte ptr [rcx - 0xd], ah ; jmp qword ptr [rax]
0x0000000000160188 : add byte ptr [rcx - 0xd], bh ; jmp qword ptr [rax]
0x000000000016d7af : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000016f170 : add byte ptr [rcx - 4], dl ; push qword ptr [rax + 0x50] ; cld ; jmp rax
0x000000000016e4a4 : add byte ptr [rcx - 5], cl ; jmp rax
0x0000000000084ec2 : add byte ptr [rcx - 9], cl ; ret 1
0x0000000000084ee8 : add byte ptr [rcx - 9], cl ; ret 2
0x000000000018a16b : add byte ptr [rcx*2 - 0x1dafffff], dh ; cmc ; call qword ptr [rax]
0x000000000018a13b : add byte ptr [rcx*2 - 0x1dcfffff], al ; cmc ; jmp qword ptr [rcx]
0x000000000017b3b0 : add byte ptr [rcx], -0x11 ; jmp qword ptr [rbx]
0x00000000001629cb : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000000c9abf : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx], al ; fdivr dword ptr [rcx] ; ret
0x000000000009db31 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0x9dae8
0x00000000000a0161 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa0118
0x00000000000a25f1 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa25a8
0x000000000002cdd9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x00000000000661cb : add byte ptr [rcx], al ; add byte ptr [rax], al ; jmp 0x62469
0x000000000011d23a : add byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x0000000000112a52 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000849f1 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000008170f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000c9ac3 : add byte ptr [rcx], al ; fdivr dword ptr [rcx] ; ret
0x00000000000f9bc0 : add byte ptr [rcx], al ; jmp 0xf999b
0x00000000000f9f60 : add byte ptr [rcx], al ; jmp 0xf9d53
0x00000000000d4a1d : add byte ptr [rcx], al ; jne 0xd4a2d ; ret
0x000000000002cb24 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x0000000000077dd4 : add byte ptr [rcx], al ; pop rbx ; ret
0x00000000001161cf : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000007757d : add byte ptr [rcx], al ; ret
0x00000000000417aa : add byte ptr [rcx], al ; ret 0x67e9
0x00000000000c313f : add byte ptr [rcx], al ; ret 0x8b48
0x00000000000201d4 : add byte ptr [rcx], bh ; ret
0x00000000000bf1b0 : add byte ptr [rcx], bh ; ret 0x840f
0x000000000007a8ee : add byte ptr [rcx], bh ; ret 0xa7e
0x00000000000bde81 : add byte ptr [rcx], bh ; ret 0xeb7c
0x00000000000d0415 : add byte ptr [rcx], bh ; ret 0xf74
0x00000000000efae7 : add byte ptr [rcx], ch ; clc ; ret
0x0000000000081a10 : add byte ptr [rcx], ch ; ret
0x000000000004defc : add byte ptr [rcx], ch ; ret 0x5489
0x00000000000b1a88 : add byte ptr [rcx], ch ; ret 0x748d
0x00000000000afb07 : add byte ptr [rcx], ch ; ret 0x8d41
0x0000000000123bdd : add byte ptr [rcx], ch ; ret 0xca39
0x000000000003356e : add byte ptr [rcx], ch ; ret 0xd089
0x00000000000e0891 : add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00000000000f8c11 : add byte ptr [rcx], cl ; clc ; bswap eax ; ret
0x00000000000c0ff4 : add byte ptr [rcx], cl ; ret
0x000000000003f8dc : add byte ptr [rcx], cl ; ret 0x840f
0x00000000000a2479 : add byte ptr [rcx], cl ; ret 0x9774
0x000000000009db35 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0x9dae4
0x00000000000a0165 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa0114
0x00000000000a25f5 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa25a4
0x000000000005ad87 : add byte ptr [rcx], dh ; inc dword ptr [rbp - 0x777af040] ; ret 0xffff
0x000000000003311f : add byte ptr [rcx], dh ; leave ; mov dword ptr [rdi], ecx ; ret
0x000000000010f1d0 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000003663c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000b4f57 : add byte ptr [rcx], dh ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000081a09 : add byte ptr [rcx], dh ; ret
0x000000000002cc1f : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], -0x40 ; ret
0x00000000000753df : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], -0x2e ; jne 0x753f8 ; ret
0x000000000003642b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000083bb2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00000000000b76f7 : add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x7f], cl ; ret 0x2d0
0x00000000000aacbb : add byte ptr [rcx], dh ; shr bl, cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x8d4c
0x00000000000d085e : add byte ptr [rcx], dil ; ret 0x840f
0x0000000000187bc3 : add byte ptr [rdi + 0x4fb80001], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000187bf3 : add byte ptr [rdi + 0x4ff80001], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001322fa : add byte ptr [rdi + 0x63], cl ; or al, 0xffffffffffffff8b ; add r9, r11 ; jmp r9
0x000000000007bf81 : add byte ptr [rdi + 0x8b8], bh ; call 0x78208
0x0000000000187b93 : add byte ptr [rdi + 1], bl ; add byte ptr [rax + 0x4f], bh ; cmc ; jmp qword ptr [rcx]
0x000000000009b264 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x000000000014bce4 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000007e276 : add byte ptr [rdi + rax - 0xd], dh ; ret
0x000000000017db53 : add byte ptr [rdi + rax*4], bl ; add byte ptr [rax], al ; xchg dil, bpl ; jmp qword ptr [rcx]
0x000000000018db4b : add byte ptr [rdi + rax*4], dl ; add dword ptr [rax], eax ; mov bpl, -0xa ; jmp rdx
0x000000000018838b : add byte ptr [rdi + rbp + 1], dl ; add al, al ; jge 0x188390 ; call rdx
0x00000000001903eb : add byte ptr [rdi + rbp*4 - 0x242fffff], dh ; clc ; call qword ptr [rax]
0x00000000001843c3 : add byte ptr [rdi + rbp*8 + 0x41580000], cl ; jmp qword ptr [rcx]
0x0000000000187383 : add byte ptr [rdi + rbx + 1], cl ; add byte ptr [rax + 0x39], ch ; cmc ; jmp qword ptr [rcx]
0x000000000018733b : add byte ptr [rdi + rbx], al ; add dword ptr [rax], eax ; xor byte ptr [rcx], bh ; cmc ; call qword ptr [rcx]
0x000000000015555f : add byte ptr [rdi + rcx + 0xfbf0000], bh ; add byte ptr [rax], al ; ret 0xf
0x00000000000447f7 : add byte ptr [rdi + rcx - 0x42], cl ; or dword ptr [rcx - 0x77], ecx ; ret 0x294d
0x00000000000d17cf : add byte ptr [rdi + rcx - 0x42], cl ; ret 0xf642
0x000000000008cdbd : add byte ptr [rdi + rcx - 0x4a], al ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000018a3eb : add byte ptr [rdi + rcx*2 - 0x1b0fffff], dh ; cmc ; jmp qword ptr [rcx]
0x000000000018a3bb : add byte ptr [rdi + rcx*2 - 0x1b3fffff], al ; cmc ; jmp qword ptr [rcx]
0x000000000018a35b : add byte ptr [rdi + rcx*2], ah ; add dword ptr [rax], eax ; xor ah, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a373 : add byte ptr [rdi + rcx*2], bh ; add dword ptr [rax], eax ; in al, -0xb ; jmp qword ptr [rcx]
0x000000000018a343 : add byte ptr [rdi + rcx*2], cl ; add dword ptr [rax], eax ; sbb ah, ah ; cmc ; jmp qword ptr [rcx]
0x000000000017e383 : add byte ptr [rdi + rcx*4], cl ; add byte ptr [rax], cl ; xchg eax, edi ; out dx, eax ; call qword ptr [rdx]
0x000000000019239b : add byte ptr [rdi + rcx*8 + 1], ah ; add al, ah ; sal edi, 1 ; jmp qword ptr [rax]
0x0000000000182343 : add byte ptr [rdi + rcx*8], cl ; add byte ptr [rax], al ; or byte ptr [rsi - 0xe], al ; jmp qword ptr [rcx]
0x000000000002ca24 : add byte ptr [rdi + rcx], al ; mov bh, -0x40 ; ret
0x000000000007ebce : add byte ptr [rdi + rdi + 0x4c], dh ; mov esi, esp ; mov rdi, rbx ; call rax
0x00000000001893ab : add byte ptr [rdi + rdi + 1], dh ; add byte ptr [rax], dl ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001893f3 : add byte ptr [rdi + rdi - 0x51a7ffff], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001893c3 : add byte ptr [rdi + rdi - 0x51d7ffff], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000189363 : add byte ptr [rdi + rdi], ch ; add dword ptr [rax], eax ; cwde ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000018ab43 : add byte ptr [rdi + rdx*2], cl ; add dword ptr [rax], eax ; lock ; cmc ; jmp qword ptr [rcx]
0x0000000000188beb : add byte ptr [rdi + rsi - 0x720fffff], dh ; cmc ; jmp rdx
0x0000000000190ba3 : add byte ptr [rdi + rsi*4 + 1], ch ; add al, cl ; test dh, bh ; jmp qword ptr [rbx]
0x0000000000178b6b : add byte ptr [rdi + rsi], dh ; add byte ptr [rax], al ; adc dl, ch ; jmp 0x178b7b
0x0000000000177beb : add byte ptr [rdi - 0x3e300000], dh ; jmp 0x177bfb
0x000000000015ff08 : add byte ptr [rdi - 0xd], bl ; jmp qword ptr [rax]
0x000000000015fe80 : add byte ptr [rdi - 0xd], dl ; call qword ptr [rax]
0x0000000000162f74 : add byte ptr [rdi - 6], bh ; jmp rax
0x000000000017421c : add byte ptr [rdi - 7], dl ; jmp qword ptr [rax]
0x0000000000183b5b : add byte ptr [rdi], ah ; add byte ptr [rax], al ; push rax ; and ebx, esi ; call rdi
0x000000000003344e : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000000206b0 : add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x00000000000f5157 : add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x0000000000133c76 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000009a167 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000000e98a1 : add byte ptr [rdi], cl ; mov bh, -1 ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000134caf : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000002cbbd : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2cb4e ; loopne 0x2cbce ; ret
0x00000000000eb11c : add byte ptr [rdi], cl ; mov bh, 4 ; js 0xeb0ad ; loopne 0xeb12d ; ret
0x0000000000076257 : add byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000134d1f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000038cdf : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000250c3 : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000008150f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000014780f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000084f6f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008fd1f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008fd2f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000008fd0f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000040f37 : add byte ptr [rdi], cl ; mov esi, 0x83480142 ; ret
0x000000000008c5ef : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000084dff : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000084def : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000084ddf : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000033267 : add byte ptr [rdi], cl ; push rsp ; ret
0x00000000000b28d3 : add byte ptr [rdi], cl ; ret
0x00000000000b0e47 : add byte ptr [rdi], cl ; ret 0x144
0x00000000000a4c30 : add byte ptr [rdi], cl ; ret 0x1f0f
0x0000000000029c00 : add byte ptr [rdi], cl ; ret 0x4389
0x00000000000c9474 : add byte ptr [rdi], cl ; ret 0x833b
0x0000000000112604 : add byte ptr [rdi], cl ; ret 0x8348
0x000000000004032e : add byte ptr [rdi], cl ; ret 0x8539
0x000000000011c6c0 : add byte ptr [rdi], cl ; ret 0x8964
0x0000000000040ce8 : add byte ptr [rdi], cl ; ret 0x8d48
0x00000000000c243a : add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000d2543 : add byte ptr [rdi], cl ; ret 0xaee9
0x00000000000c9914 : add byte ptr [rdi], cl ; ret 0xc639
0x000000000003a219 : add byte ptr [rdi], cl ; ret 0xc801
0x00000000000aee01 : add byte ptr [rdi], cl ; ret 0xd801
0x00000000000413d0 : add byte ptr [rdi], cl ; ret 0xe9
0x0000000000033375 : add byte ptr [rdi], cl ; sub cl, al ; ret
0x000000000002f966 : add byte ptr [rdi], cl ; test cl, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x000000000006487e : add byte ptr [rdi], cl ; test dword ptr [rcx], ebp ; ret
0x00000000000d44ce : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000004611a : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xbd83
0x00000000001104d2 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xda09
0x0000000000123b27 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x00000000000c6fae : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x000000000006744c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd089
0x00000000000f11ab : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfa80
0x0000000000109a8b : add byte ptr [rdx + 0x19], ch ; call qword ptr [rax]
0x000000000014439f : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x000000000014006f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000009799f : add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x000000000017695b : add byte ptr [rdx + 0x4ba00000], ah ; jmp 0x17696b
0x00000000000be7b7 : add byte ptr [rdx + 0x63], cl ; adc al, -0x50 ; add rax, rdx ; jmp rax
0x00000000000bc956 : add byte ptr [rdx + 0x63], cl ; adc al, -0x58 ; add rax, rdx ; jmp rax
0x000000000002d46f : add byte ptr [rdx + 0x63], cl ; add al, -0x5e ; add rdx, rax ; jmp rdx
0x00000000001876ab : add byte ptr [rdx + 1], dh ; add byte ptr [rax], dl ; cmc ; jmp qword ptr [rcx]
0x000000000002142f : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x00000000000ea393 : add byte ptr [rdx + rax + 0x5d], dh ; ret
0x00000000001956f3 : add byte ptr [rdx + rax + 0x7a480002], bh ; clc ; call qword ptr [rdi]
0x000000000019568b : add byte ptr [rdx + rax + 2], dl ; add byte ptr [rax + 0x77], dh ; clc ; call rdi
0x00000000001796cb : add byte ptr [rdx + rax*2 - 0x78900000], dl ; in al, dx ; call rdx
0x000000000017d6cb : add byte ptr [rdx + rax*4 + 0x71c00000], dl ; out dx, eax ; jmp rax
0x0000000000174298 : add byte ptr [rdx + rax], al ; add al, al ; jo 0x17429f ; jmp qword ptr [rax]
0x000000000019563b : add byte ptr [rdx + rax], al ; add al, byte ptr [rax] ; loopne 0x1956bf ; clc ; call rcx
0x000000000017fe6b : add byte ptr [rdx + rbp*4], dh ; add byte ptr [rax], al ; mov al, -1 ; stc ; call qword ptr [rax]
0x000000000018fe4b : add byte ptr [rdx + rbp*4], dl ; add dword ptr [rax], eax ; and byte ptr [rbp - 9], ah ; jmp rdx
0x00000000000332fc : add byte ptr [rdx + rbp*8 - 0xd], dh ; ret
0x0000000000176ec3 : add byte ptr [rdx + rbx + 0x5e980000], cl ; jmp 0x176ed3
0x0000000000176edb : add byte ptr [rdx + rbx + 0x5ea00000], ah ; jmp 0x176eeb
0x000000000018ee53 : add byte ptr [rdx + rbx*4], bl ; add dword ptr [rax], eax ; call 0x1118e571
0x0000000000176e63 : add byte ptr [rdx + rbx], ch ; add byte ptr [rax], al ; js 0x176ed0 ; jmp 0x176e73
0x0000000000176e4b : add byte ptr [rdx + rbx], dl ; add byte ptr [rax], al ; jo 0x176eb8 ; jmp 0x176e5b
0x000000000008cb63 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000189e7b : add byte ptr [rdx + rcx*2 + 1], al ; add byte ptr [rax], dh ; sal ebp, 1 ; jmp qword ptr [rcx]
0x0000000000189e93 : add byte ptr [rdx + rcx*2 + 1], bl ; add byte ptr [rax - 0x2f], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000189edb : add byte ptr [rdx + rcx*2 - 0x2e6fffff], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000191e9b : add byte ptr [rdx + rcx*8 + 1], ah ; add al, ah ; ret 0xfff7
0x0000000000188ef3 : add byte ptr [rdx + rdi - 0x6547ffff], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000194ee3 : add byte ptr [rdx + rdi*8 + 0x5c680001], ch ; clc ; jmp qword ptr [rcx]
0x0000000000194eab : add byte ptr [rdx + rdi*8 + 1], dh ; add byte ptr [rax], dh ; pop rsp ; clc ; call qword ptr [rax]
0x000000000015595f : add byte ptr [rdx + rdx + 0x12bf0000], bh ; add byte ptr [rax], al ; ret 0x12
0x000000000018669b : add byte ptr [rdx + rdx + 1], ah ; add byte ptr [rax - 0x55], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001866b3 : add byte ptr [rdx + rdx + 1], bh ; add byte ptr [rax - 0x55], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000186683 : add byte ptr [rdx + rdx + 1], cl ; add byte ptr [rax - 0x55], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001866e3 : add byte ptr [rdx + rdx - 0x5457ffff], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001866cb : add byte ptr [rdx + rdx - 0x546fffff], dl ; hlt ; jmp qword ptr [rcx]
0x000000000018a68b : add byte ptr [rdx + rdx*2 + 1], dl ; add byte ptr [rax - 0x18], dl ; cmc ; call qword ptr [rsi]
0x000000000018a6eb : add byte ptr [rdx + rdx*2 - 0x16ffffff], dh ; cmc ; jmp qword ptr [rcx]
0x000000000018a6bb : add byte ptr [rdx + rdx*2 - 0x175fffff], al ; cmc ; jmp qword ptr [rcx]
0x000000000018a643 : add byte ptr [rdx + rdx*2], cl ; add dword ptr [rax], eax ; or al, ch ; cmc ; jmp qword ptr [rcx]
0x00000000001826eb : add byte ptr [rdx + rdx*8 + 0x54000000], dh ; call qword ptr [rax]
0x000000000018265b : add byte ptr [rdx + rdx*8], ah ; add byte ptr [rax], al ; mov al, 0x53 ; call qword ptr [rsi]
0x000000000018268b : add byte ptr [rdx + rdx*8], dl ; add byte ptr [rax - 0x70], dl ; cld ; jmp qword ptr [rbx]
0x0000000000176663 : add byte ptr [rdx + rdx], ch ; add byte ptr [rax], al ; js 0x1766cc ; std ; jmp qword ptr [rdi]
0x000000000017869b : add byte ptr [rdx + rsi], ah ; add byte ptr [rax - 0x1f], al ; jmp 0x1786ab
0x00000000001786b3 : add byte ptr [rdx + rsi], bh ; add byte ptr [rax - 0x1f], cl ; jmp 0x1786c3
0x00000000001791a0 : add byte ptr [rdx - 0x14], al ; jmp rax
0x000000000016f228 : add byte ptr [rdx - 0x7e6f0004], al ; cld ; jmp qword ptr [rax]
0x000000000015fc7c : add byte ptr [rdx - 0xe], bh ; call qword ptr [rax]
0x00000000000edaf7 : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x00000000000edaf6 : add byte ptr [rdx - 1], dil ; mov eax, edx ; ret
0x000000000017a963 : add byte ptr [rdx*2 - 0x2fa80000], ch ; out dx, al ; jmp qword ptr [rcx]
0x000000000000a71b : add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; push rax ; ret
0x000000000000996b : add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; ret
0x000000000016ecbc : add byte ptr [rdx], ah ; cld ; inc dword ptr [rax + 0xd] ; cld ; call qword ptr [rax]
0x000000000019551d : add byte ptr [rdx], al ; add al, ah ; jne 0x195521 ; call qword ptr [rdi]
0x00000000000c13df : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e962e : add byte ptr [rdx], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x0000000000174219 : add byte ptr [rdx], al ; add byte ptr [rax], al ; push rdi ; stc ; jmp qword ptr [rax]
0x000000000002cb76 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000106826 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000000f03c7 : add byte ptr [rdx], al ; call rax
0x000000000002ca84 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x000000000016e3d4 : add byte ptr [rdx], al ; sti ; call rax
0x000000000000258f : add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x000000000010aa11 : add byte ptr [rdx], ch ; add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; call rbx
0x00000000000106df : add byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x19
0x00000000000f07e0 : add byte ptr [rdx], cl ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e5d8f : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000005cc3 : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret
0x000000000001076f : add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000000450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x00000000000e83b0 : add byte ptr [rip - 0x1000], ah ; or eax, edi ; ret
0x000000000010d007 : add byte ptr [rip - 0x76b40000], al ; ror dword ptr [rax - 0x7d], 1 ; ret
0x00000000000b7991 : add byte ptr [rip - 0xfff], bh ; jae 0xb79a2 ; ret
0x0000000000112e37 : add byte ptr [rsi + 0xe], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001239e5 : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000147b04 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000e47cd : add byte ptr [rsi + 0xf], ah ; ret
0x000000000008fc2c : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000084cf4 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000004aff : add byte ptr [rsi + 5], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x00000000000daac7 : add byte ptr [rsi + 6], dh ; ret
0x0000000000189a7b : add byte ptr [rsi + rax*2 + 1], al ; add byte ptr [rax], dh ; ret
0x000000000018dae3 : add byte ptr [rsi + rax*4 - 0x4c27ffff], ch ; idiv bh ; ret 1
0x000000000017f2bb : add byte ptr [rsi + rbx*4 - 0x2c600000], al ; cld ; call qword ptr [rdx]
0x0000000000177253 : add byte ptr [rsi + rbx], bl ; add byte ptr [rax], al ; test al, 0x7a ; jmp 0x177263
0x0000000000194328 : add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x000000000018a283 : add byte ptr [rsi + rcx*2 + 1], cl ; add byte ptr [rax - 0x1d], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018a2e3 : add byte ptr [rsi + rcx*2 - 0x1c47ffff], ch ; cmc ; jmp qword ptr [rcx]
0x000000000018a2cb : add byte ptr [rsi + rcx*2 - 0x1c5fffff], dl ; cmc ; jmp qword ptr [rcx]
0x000000000017e2d3 : add byte ptr [rsi + rcx*4 - 0x69780000], bl ; out dx, eax ; call qword ptr [rsi]
0x00000000001892e3 : add byte ptr [rsi + rdi - 0x53c7ffff], ch ; cmc ; call qword ptr [rdx]
0x0000000000179283 : add byte ptr [rsi + rdi], cl ; add al, ch ; in al, dx ; call rdi
0x000000000018aacb : add byte ptr [rsi + rdx*2 - 0x102fffff], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000182a3b : add byte ptr [rsi + rdx*8], al ; add byte ptr [rax], al ; rcr byte ptr [rdi - 0xe] ; jmp qword ptr [rcx]
0x0000000000188a8b : add byte ptr [rsi + rsi + 1], dl ; add byte ptr [rax - 0x74], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000188abb : add byte ptr [rsi + rsi - 0x735fffff], al ; cmc ; jmp qword ptr [rcx]
0x0000000000178a63 : add byte ptr [rsi + rsi], ch ; add byte ptr [rax], al ; mov cl, ch ; jmp 0x178a73
0x000000000015fde8 : add byte ptr [rsi - 0x608f0004], bl ; cld ; jmp rax
0x000000000002165d : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000188963 : add byte ptr [rsi - 0x76a7ffff], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000160044 : add byte ptr [rsi - 0xd], ah ; call qword ptr [rax]
0x0000000000171a84 : add byte ptr [rsi - 0xe], dl ; call rax
0x000000000016ef14 : add byte ptr [rsi - 4], bl ; call qword ptr [rax + 0x20fffc5d]
0x0000000000195550 : add byte ptr [rsi - 8], dh ; call qword ptr [rax]
0x000000000018fa53 : add byte ptr [rsi], bl ; add dword ptr [rax], eax ; sub byte ptr [rdi - 9], cl ; jmp qword ptr [rcx]
0x000000000017080c : add byte ptr [rsi], ch ; in eax, dx ; jmp rax
0x000000000017d047 : add byte ptr [rsi], cl ; sub ch, dl ; call rdx
0x00000000001938bb : add byte ptr [rsp + 0x12c00001], al ; clc ; call qword ptr [rdx]
0x00000000001878c3 : add byte ptr [rsp + 0x43380001], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018787b : add byte ptr [rsp + 1], al ; add al, al ; cmc ; jmp qword ptr [rcx]
0x00000000001878ab : add byte ptr [rsp + 1], dh ; add byte ptr [rax], ah ; cmc ; jmp qword ptr [rcx]
0x00000000000da259 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x0000000000057a12 : add byte ptr [rsp + rax*2 - 0x75], ah ; and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x000000000005789b : add byte ptr [rsp + rax*2 - 0x77], ah ; and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x000000000017d8bb : add byte ptr [rsp + rax*4 + 0x7b200000], al ; out dx, eax ; jmp qword ptr [rsi]
0x0000000000195873 : add byte ptr [rsp + rax], bh ; add al, byte ptr [rax] ; or byte ptr [rbx - 8], bh ; jmp qword ptr [rsi]
0x000000000017c0e3 : add byte ptr [rsp + rbp*2 + 0x2ae80000], ch ; out dx, eax ; jmp qword ptr [rdx]
0x000000000018405b : add byte ptr [rsp + rbp*8], ah ; add byte ptr [rax], al ; push rax ; xor esi, ebx ; jmp qword ptr [rcx]
0x000000000015515f : add byte ptr [rsp + rcx + 0xcbf0000], bh ; add byte ptr [rax], al ; ret 0xc
0x00000000000d49a1 : add byte ptr [rsp + rcx - 0xd], dh ; ret
0x000000000018a0f3 : add byte ptr [rsp + rcx*2 - 0x1e17ffff], bh ; cmc ; jmp qword ptr [rcx]
0x000000000017b633 : add byte ptr [rsp + rcx], dl ; add al, ch ; or ebp, edi ; call qword ptr [rax]
0x000000000018604b : add byte ptr [rsp + rcx], dl ; add dword ptr [rax], eax ; xor byte ptr [rbp - 0xc], bh ; call qword ptr [rdx]
0x000000000017d083 : add byte ptr [rsp + rdi*2], cl ; add byte ptr [rax + 0x5f], bl ; out dx, eax ; call rbx
0x00000000001810e3 : add byte ptr [rsp + rdi*4 + 0x29f80000], ch ; cli ; jmp qword ptr [rdi]
0x0000000000181053 : add byte ptr [rsp + rdi*4], bl ; add byte ptr [rax], al ; call 0xffffffffe41801d4
0x000000000018a853 : add byte ptr [rsp + rdx*2], bl ; add dword ptr [rax], eax ; mov bl, ch ; cmc ; jmp qword ptr [rcx]
0x00000000001828bb : add byte ptr [rsp + rdx*8 + 0x59900000], al ; call rdi
0x0000000000182873 : add byte ptr [rsp + rdx*8], bh ; add byte ptr [rax], al ; cwde ; pop rax ; call qword ptr [rcx]
0x0000000000188883 : add byte ptr [rsp + rsi + 1], cl ; add byte ptr [rax], cl ; mov ch, dh ; jmp qword ptr [rcx]
0x00000000001888d3 : add byte ptr [rsp + rsi - 0x77a7ffff], bl ; cmc ; jmp qword ptr [rcx]
0x000000000018c87b : add byte ptr [rsp + rsi*2 + 1], al ; add byte ptr [rax - 1], al ; sti ; jmp qword ptr [rsi]
0x00000000001948db : add byte ptr [rsp + rsi*8 - 0x7e4fffff], ah ; sti ; jmp qword ptr [rdx]
0x0000000000187863 : add byte ptr [rsp], ch ; add dword ptr [rax], eax ; test al, 0x42 ; cmc ; jmp qword ptr [rcx]
0x000000000018784b : add byte ptr [rsp], dl ; add dword ptr [rax], eax ; nop ; cmc ; jmp qword ptr [rcx]
0x00000000000b8c6d : add byte ptr cs:[rax - 0x39], cl ; ret 0xffff
0x00000000000b4b05 : add byte ptr cs:[rax - 0x77], cl ; ret 0x8d48
0x00000000000b41ad : add byte ptr cs:[rax - 0x77], cl ; ret 0x9ce9
0x000000000004a5b7 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b5d85 : add byte ptr cs:[rbx + rcx*4 + 0x35], cl ; ret 0x2e8b
0x0000000000179285 : add byte ptr ds:[rax], al ; call 0xffffffffd8177eda
0x00000000000e4f3d : add byte ptr ds:[rdi + rax - 0xd], dh ; ret
0x00000000000345fa : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000179d9c : add byte ptr fs:[r8], al ; mov al, -0x55 ; in al, dx ; jmp qword ptr [rbx]
0x0000000000184d68 : add byte ptr fs:[rax], al ; add byte ptr [rcx + rdi*8], dh ; add byte ptr [rax], al ; ret
0x0000000000191e98 : add byte ptr fs:[rax], al ; add byte ptr [rdx + rcx*8 + 1], ah ; add al, ah ; ret 0xfff7
0x00000000000753b0 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000009d3e7 : add byte ptr gs:[rbp - 0x7b], al ; in al, 0x75 ; ret 0x8944
0x000000000009d887 : add byte ptr gs:[rbp - 0x7b], al ; in al, 0x75 ; ret 0x894c
0x000000000006cd44 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000036ae5 : add byte ptr ss:[rax + 0x39], cl ; ret
0x0000000000030e3b : add byte ptr ss:[rax - 0x77], cl ; ret
0x0000000000178b25 : add byte ptr ss:[rax], al ; call 0x1717771c
0x0000000000178a65 : add byte ptr ss:[rax], al ; mov cl, ch ; jmp 0x178a71
0x0000000000033994 : add byte ptr ss:[rbp - 0xcf98a40], al ; ret
0x000000000008b984 : add ch, al ; xchg byte ptr [rcx - 0x76b70001], dl ; ret 0xc031
0x000000000017f300 : add ch, bh ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000033747 : add ch, bl ; fpatan ; ret
0x000000000016e850 : add ch, bl ; sti ; jmp rax
0x000000000015dfdc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000017c375 : add ch, byte ptr [rax + 0x41380e0a] ; ret
0x000000000015dfdd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000017adda : add ch, byte ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000016f7cc : add ch, byte ptr [rbx - 0x556d0004] ; cld ; jmp qword ptr [rdx]
0x00000000000a8d4f : add ch, byte ptr [rcx] ; ret 0x48d
0x000000000006eafa : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000181168 : add ch, byte ptr [rdi + 0x41280e0a] ; ret
0x000000000018c99c : add ch, byte ptr [rdx + 0x41200e0a] ; ret
0x000000000005acdd : add ch, cl ; cmp dword ptr [rbx - 0x7cb70001], edi ; ret 0xeb08
0x0000000000062e18 : add ch, cl ; lodsb al, byte ptr [rsi] ; sar bh, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000079fc0 : add ch, cl ; ret
0x000000000005de90 : add ch, cl ; ret 0xffff
0x0000000000034456 : add cl, -0x17 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x0000000000001587 : add cl, al ; add eax, 0 ; add byte ptr [rax], al ; ret 5
0x000000000007142f : add cl, al ; ljmp 0x1e28304, -0x2f77 ; ret
0x000000000007152f : add cl, al ; ljmp 0x1e28305, -0x2f77 ; ret
0x00000000000922fc : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x00000000000445c7 : add cl, byte ptr [r9 + r9*4 - 0x3e] ; jmp 0x445e5
0x0000000000038b27 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000a09cc : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x0000000000038b53 : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000102d2b : add cl, byte ptr [rax + 0x39] ; ret 0x1f72
0x00000000000532ad : add cl, byte ptr [rax + 0x39] ; ret 0x237f
0x0000000000102d1d : add cl, byte ptr [rax + 0x39] ; ret 0x2d72
0x000000000017b8d8 : add cl, byte ptr [rax + 0xa] ; ret
0x000000000017e885 : add cl, byte ptr [rax + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000006fca9 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000008ee66 : add cl, byte ptr [rax - 0x39] ; ret 0xffff
0x0000000000079e88 : add cl, byte ptr [rax - 0x73] ; push rsp ; ret
0x00000000000eba03 : add cl, byte ptr [rax - 0x75] ; push rsp ; ret 0x8940
0x00000000000922fd : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000008f547 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000b4a83 : add cl, byte ptr [rax - 0x77] ; lock add rsp, 8 ; ret
0x00000000000c8dbf : add cl, byte ptr [rax - 0x77] ; ret
0x00000000000ac99b : add cl, byte ptr [rax - 0x77] ; ret 0x8d48
0x0000000000077242 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], -0xd ; ret
0x00000000000e31f2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], -0x7d ; ret 0x4808
0x000000000007fdc0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000000e2501 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00000000000c1892 : add cl, byte ptr [rax - 0x7d] ; ret 0x6601
0x00000000000a5f08 : add cl, byte ptr [rax - 0x7d] ; ret 0xc71e
0x000000000007fe23 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x00000000000c1a50 : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x0000000000115fa5 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x00000000000532e6 : add cl, byte ptr [rax - 9] ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000000c5cff : add cl, byte ptr [rbp + rcx*4 + 0x4c] ; lahf ; add al, -0x77 ; ret
0x0000000000134af2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000445c8 : add cl, byte ptr [rcx + rcx*4 - 0x3e] ; jmp 0x445e4
0x0000000000041148 : add cl, byte ptr [rcx - 0x7d] ; ret 0xe901
0x0000000000040829 : add cl, byte ptr [rcx - 0x7d] ; ret 0xf01
0x000000000002ca44 : add cl, byte ptr [rdi] ; mov bh, -0x40 ; ret
0x00000000000db807 : add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000d3eea : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x00000000001239eb : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000099f53 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000629f2 : add cl, ch ; clc ; ret 0xffff
0x000000000018a6f0 : add cl, ch ; cmc ; jmp qword ptr [rcx]
0x0000000000062991 : add cl, ch ; pop rcx ; ret
0x00000000000e3f06 : add cl, ch ; push rsp ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000043ca7 : add cl, ch ; ret
0x0000000000030721 : add cl, ch ; ret 0xffec
0x0000000000111e2e : add cl, ch ; ret 0xfffb
0x00000000000e9632 : add cl, ch ; ret 0xfffe
0x0000000000175344 : add cl, cl ; std ; call rax
0x000000000017163d : add cl, dh ; jmp qword ptr [rax]
0x000000000016e958 : add dh, -5 ; call rax
0x00000000001857ea : add dh, ah ; ret
0x0000000000031490 : add dh, al ; add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000196887 : add dh, al ; add eax, 0x29f0000 ; add byte ptr [rax], al ; ret
0x00000000000e2b6c : add dh, al ; inc dword ptr [r8] ; ret
0x00000000000c051f : add dh, al ; or byte ptr [r10], r8b ; xor eax, eax ; ret
0x0000000000170c2c : add dh, al ; out dx, eax ; call qword ptr [rax]
0x000000000016e3c0 : add dh, bh ; cli ; call rax
0x000000000016239b : add dh, bh ; jmp rdi
0x00000000001583c7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000134ca3 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000c087d : add dh, bl ; ret
0x000000000009943b : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000001101a2 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000017a7fd : add dh, byte ptr [rcx + 0xa] ; ret
0x00000000000c893d : add dh, byte ptr [rcx] ; imul al ; stosd dword ptr [rdi], eax ; retf ; sti ; call rcx
0x00000000001101a1 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a5ecd : add dh, dh ; enter 0xf03, -0x7b ; ret 7
0x0000000000044c4f : add dh, dh ; ret
0x0000000000085678 : add dh, dh ; ret 0x7404
0x000000000006a12f : add dh, dh ; ret 0x7420
0x0000000000149d27 : add dh, dh ; ret 0x7501
0x0000000000149d34 : add dh, dh ; ret 0x7502
0x0000000000149d41 : add dh, dh ; ret 0x7504
0x0000000000149cf9 : add dh, dh ; ret 0x7510
0x0000000000149d06 : add dh, dh ; ret 0x7520
0x000000000008543a : add dh, dh ; ret 0x7540
0x000000000010368f : add dh, dh ; ret 0xc602
0x00000000000d4b1e : add dh, dh ; ret 0xf01
0x000000000002b392 : add dh, dh ; ret 0xf04
0x0000000000077f6f : add dh, dh ; ret 0xf08
0x0000000000090b02 : add dh, dh ; ret 0xf20
0x0000000000090b0b : add dh, dh ; ret 0xf40
0x00000000000f1a36 : add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x00000000000f1ed2 : add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x000000000011d35e : add dil, dil ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000a7a84 : add dil, r15b ; ret
0x000000000018a110 : add dl, ah ; cmc ; jmp qword ptr [rcx]
0x00000000001899f0 : add dl, al ; cmc ; call qword ptr [rax]
0x000000000017478d : add dl, bh ; call qword ptr [rax]
0x000000000017bfaf : add dl, byte ptr [rbp + 0xa] ; ret
0x0000000000188279 : add dl, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x000000000017e7ed : add dl, byte ptr [rdi + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001957c1 : add dl, byte ptr [rsi + rcx + 0x10] ; ret
0x0000000000032fff : add dl, dh ; mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x00000000000e328c : add dl, dl ; sub eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000006b5dc : add dword ptr [eax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000099f81 : add dword ptr [r11 + 0x5d], ebx ; pop r12 ; pop r13 ; ret
0x000000000018001c : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000038ce2 : add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000006d081 : add dword ptr [r8 - 0x7d], r9d ; ret
0x000000000007c579 : add dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000172181 : add dword ptr [r8], eax ; mov al, 0x76 ; hlt ; jmp rax
0x000000000009018b : add dword ptr [r8], eax ; ret
0x00000000001899ed : add dword ptr [r8], r8d ; add dl, al ; cmc ; call qword ptr [rax]
0x0000000000189b85 : add dword ptr [r8], r8d ; fadd st(5) ; cmc ; call qword ptr [rsi]
0x00000000000c283e : add dword ptr [r9 + 0x39], eax ; ret
0x00000000000ee950 : add dword ptr [r9 - 0x7d], ecx ; ret 0xeb08
0x00000000000c05c8 : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x00000000001443a1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000000c7636 : add dword ptr [rax + 0x39], ecx ; int1 ; jne 0xc7628 ; ret
0x000000000007a23e : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000044b18 : add dword ptr [rax + 0x39], ecx ; ret 0x8840
0x0000000000043bbd : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x00000000000ca5d0 : add dword ptr [rax + 0x39], ecx ; ret 0xe077
0x00000000000c84a7 : add dword ptr [rax + 0x39], ecx ; ret 0xe375
0x00000000000379ba : add dword ptr [rax + 0x39], ecx ; ret 0xe875
0x0000000000037ba5 : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x00000000000a64ac : add dword ptr [rax + 0x39], ecx ; ret 0xee75
0x000000000008f05b : add dword ptr [rax + 0x39], ecx ; ret 0xef72
0x00000000000a6263 : add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x0000000000090800 : add dword ptr [rax + 0x39], ecx ; ret 0xf077
0x00000000000a61f1 : add dword ptr [rax + 0x39], ecx ; ret 0xf175
0x000000000004290b : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x00000000000ba86a : add dword ptr [rax + 0x39], r9d ; ret
0x00000000000def4e : add dword ptr [rax + 0x63], ecx ; ret 0x148
0x00000000000e46ab : add dword ptr [rax + 0x63], ecx ; ret 0x5589
0x000000000010e201 : add dword ptr [rax + 0x63], ecx ; ret 0xd285
0x00000000000ef8a7 : add dword ptr [rax + 0xf], eax ; ret 0xfc3
0x0000000000057657 : add dword ptr [rax + 1], ecx ; ret
0x000000000001fe22 : add dword ptr [rax + 1], ecx ; ret 0x8948
0x0000000000032156 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000c0543 : add dword ptr [rax + 1], edi ; ret
0x00000000000e2744 : add dword ptr [rax + r9*2 - 0x7d], ebx ; ret 0xe902
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x000000000010bd95 : add dword ptr [rax + rcx + 0x31], esi ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000e2745 : add dword ptr [rax + rcx*2 - 0x7d], ebx ; ret 0xe902
0x0000000000090365 : add dword ptr [rax + rcx*4 + 1], eax ; jne 0x90357 ; ret
0x00000000000b9c0e : add dword ptr [rax - 0x6bf08406], eax ; ret 0xb60f
0x000000000002dd3a : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x00000000000ebc23 : add dword ptr [rax - 0x75], ecx ; push rsp ; ret 0x8940
0x00000000000922d6 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000140002 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000008f536 : add dword ptr [rax - 0x77], ecx ; clc ; ret
0x000000000007631b : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000007367d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000818a1 : add dword ptr [rax - 0x77], ecx ; ret
0x00000000000dd727 : add dword ptr [rax - 0x77], ecx ; ret 0x3948
0x00000000001036e0 : add dword ptr [rax - 0x78], eax ; ja 0x1036eb ; ret
0x0000000000145fba : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x0000000000021aff : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c4d56 : add dword ptr [rax - 0x7d], ecx ; ret 0x3920
0x0000000000040bd4 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000c5bec : add dword ptr [rax - 0x7d], ecx ; ret 0x4104
0x00000000000eaa17 : add dword ptr [rax - 0x7d], ecx ; ret 0x4120
0x00000000000ce712 : add dword ptr [rax - 0x7d], ecx ; ret 0x4404
0x000000000002f3f0 : add dword ptr [rax - 0x7d], ecx ; ret 0x4408
0x0000000000024029 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000023ac1 : add dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x0000000000116699 : add dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x00000000000be58b : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000023581 : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x00000000000250b4 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x00000000000b2ea3 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c48
0x00000000000ce93a : add dword ptr [rax - 0x7d], ecx ; ret 0x4d10
0x00000000000c9c45 : add dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x00000000000d15df : add dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x0000000000023320 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000000def63 : add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x00000000000c735c : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], -0x7d ; ret 0x4001
0x00000000000eada6 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; fmul dword ptr [rax - 0x77] ; ret 0xc148
0x000000000000f3a8 : add dword ptr [rax], 0 ; add byte ptr [rax], al ; ret 0x34
0x000000000017d5d5 : add dword ptr [rax], 0xef6f2800 ; call qword ptr [rax]
0x00000000000ea784 : add dword ptr [rax], 1 ; ret
0x000000000018718e : add dword ptr [rax], eax ; adc byte ptr [rcx], dh ; cmc ; call qword ptr [rax]
0x00000000001876ae : add dword ptr [rax], eax ; adc byte ptr [rsi], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000173f7a : add dword ptr [rax], eax ; adc ch, ch ; clc ; call qword ptr [rax]
0x0000000000171992 : add dword ptr [rax], eax ; adc dl, bl ; int1 ; jmp rax
0x000000000018a32e : add dword ptr [rax], eax ; add ah, ah ; cmc ; jmp qword ptr [rcx]
0x000000000014202c : add dword ptr [rax], eax ; add bl, al ; ret
0x0000000000173eca : add dword ptr [rax], eax ; add bl, cl ; clc ; call rax
0x000000000006a1fa : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000006b5dd : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000068438 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x000000000009b9fa : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; lock ; ret
0x00000000000b2ce7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000cc3ce : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x84c6
0x00000000000cd2c6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000002b67d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000007c57a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000002071a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007b0a7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000000379b4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000028db9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000011ecad : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002e183 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000012515f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011ec01 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000bf888 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000006dc1a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000021491 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001583ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000015757a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000001573a2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000015739a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000157b32 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000009b7f1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dh ; ret
0x00000000000e6e6d : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007ef63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000014bce1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x14bcf8 ; neg eax ; ret
0x000000000009b261 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x9b271 ; neg eax ; ret
0x0000000000149c37 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x149c48 ; neg eax ; ret
0x000000000007a22c : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x7a1f9
0x00000000000c32a6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xc3273
0x0000000000045cda : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000001164f3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x116506 ; ret
0x0000000000116533 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x116546 ; ret
0x00000000000b8ef3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; js 0xb8f07 ; ret
0x0000000000044390 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x000000000010e593 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000007e7fe : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000010c469 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rcx ; ret
0x00000000000443ae : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000010adea : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000068def : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x000000000004f07b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006cf2e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000010f2d2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000227d5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000006e521 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000029161 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000067aee : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009db32 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0x9dae7
0x00000000000a0162 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa0117
0x00000000000a25f2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa25a7
0x00000000000c954e : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000dc696 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000001fb49 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000173052 : add dword ptr [rax], eax ; add byte ptr [rbx - 9], dl ; jmp rax
0x000000000007ecde : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 9], cl ; mov rdx, r15 ; call rax
0x00000000000c6e4b : add dword ptr [rax], eax ; add byte ptr [rcx - 0x73], al ; add dword ptr [rcx], edi ; ret
0x0000000000022904 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000bde7f : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0xeb7c
0x00000000000c9912 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xc639
0x0000000000005cc1 : add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret
0x000000000008fc2a : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000171a82 : add dword ptr [rax], eax ; add byte ptr [rsi - 0xe], dl ; call rax
0x000000000018a6ee : add dword ptr [rax], eax ; add cl, ch ; cmc ; jmp qword ptr [rcx]
0x0000000000149d25 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000149d32 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x0000000000149d3f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000149cf7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000149d04 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000149d11 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000077f6d : add dword ptr [rax], eax ; add dh, dh ; ret 0xf08
0x000000000018a10e : add dword ptr [rax], eax ; add dl, ah ; cmc ; jmp qword ptr [rcx]
0x00000000001899ee : add dword ptr [rax], eax ; add dl, al ; cmc ; call qword ptr [rax]
0x00000000000e358d : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x000000000004fca5 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x000000000018fe4e : add dword ptr [rax], eax ; and byte ptr [rbp - 9], ah ; jmp rdx
0x00000000001878ae : add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], al ; jmp qword ptr [rcx]
0x000000000018a41e : add dword ptr [rax], eax ; and ch, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a01e : add dword ptr [rax], eax ; and cl, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018ee56 : add dword ptr [rax], eax ; call 0x1118e56e
0x000000000018f3b6 : add dword ptr [rax], eax ; call 0x1818eaf9
0x000000000018a0f6 : add dword ptr [rax], eax ; call 0x221896e3
0x000000000018a316 : add dword ptr [rax], eax ; call 0x22189905
0x000000000018a586 : add dword ptr [rax], eax ; call 0x22189b78
0x0000000000187bf6 : add dword ptr [rax], eax ; clc ; cmc ; jmp qword ptr [rcx]
0x0000000000190136 : add dword ptr [rax], eax ; clc ; jo 0x190137 ; jmp qword ptr [rcx]
0x0000000000192816 : add dword ptr [rax], eax ; clc ; loop 0x192817 ; jmp qword ptr [rax]
0x000000000018b8c6 : add dword ptr [rax], eax ; clc ; sub esi, esi ; call rdi
0x000000000018f8b6 : add dword ptr [rax], eax ; cmp byte ptr [rax - 9], cl ; call qword ptr [rdi]
0x00000000001878c6 : add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xb], al ; jmp qword ptr [rcx]
0x000000000018739e : add dword ptr [rax], eax ; cmp byte ptr [rcx], -0xb ; jmp qword ptr [rsi]
0x00000000001902e6 : add dword ptr [rax], eax ; cmp byte ptr [rdi - 9], dh ; call rcx
0x000000000018a436 : add dword ptr [rax], eax ; cmp ch, ah ; cmc ; jmp qword ptr [rcx]
0x000000000009032d : add dword ptr [rax], eax ; cmp rcx, rdx ; jne 0x90330 ; ret
0x0000000000187476 : add dword ptr [rax], eax ; cmp rsi, rbp ; jmp qword ptr [rcx]
0x000000000018ebf6 : add dword ptr [rax], eax ; cwde ; add esi, edi ; call qword ptr [rax]
0x000000000018a496 : add dword ptr [rax], eax ; cwde ; in eax, -0xb ; jmp qword ptr [rcx]
0x0000000000189366 : add dword ptr [rax], eax ; cwde ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000193e96 : add dword ptr [rax], eax ; cwde ; sbb bh, al ; jmp qword ptr [rcx]
0x0000000000189b86 : add dword ptr [rax], eax ; fadd st(5) ; cmc ; call qword ptr [rsi]
0x0000000000189f26 : add dword ptr [rax], eax ; fcom st(1) ; cmc ; jmp qword ptr [rcx]
0x000000000018c4b6 : add dword ptr [rax], eax ; fdivr dword ptr [rdi - 0xa] ; jmp qword ptr [rsi]
0x000000000018a376 : add dword ptr [rax], eax ; in al, -0xb ; jmp qword ptr [rcx]
0x000000000018a91e : add dword ptr [rax], eax ; in eax, dx ; cmc ; jmp qword ptr [rbx]
0x00000000001721ba : add dword ptr [rax], eax ; jge 0x1721b8 ; jmp qword ptr [rax]
0x0000000000041ae6 : add dword ptr [rax], eax ; jne 0x41ae8 ; mov rax, rbx ; pop rbx ; ret
0x0000000000171c82 : add dword ptr [rax], eax ; jo 0x171c6c ; call rax
0x0000000000171e02 : add dword ptr [rax], eax ; jo 0x171d8f ; call rax
0x00000000001720a2 : add dword ptr [rax], eax ; jo 0x1720f9 ; hlt ; call rax
0x000000000017220a : add dword ptr [rax], eax ; jo 0x17219b ; hlt ; call qword ptr [rax]
0x0000000000173ca2 : add dword ptr [rax], eax ; jo 0x173c2f ; clc ; jmp rax
0x0000000000173e8a : add dword ptr [rax], eax ; jo 0x173e54 ; clc ; call rax
0x0000000000173ed2 : add dword ptr [rax], eax ; jo 0x173ea7 ; clc ; jmp qword ptr [rax]
0x0000000000173f9a : add dword ptr [rax], eax ; jo 0x173f96 ; clc ; call rax
0x00000000001884de : add dword ptr [rax], eax ; jo 0x188467 ; cmc ; jmp qword ptr [rcx]
0x000000000018897e : add dword ptr [rax], eax ; jo 0x188910 ; cmc ; jmp qword ptr [rcx]
0x0000000000188a8e : add dword ptr [rax], eax ; jo 0x188a23 ; cmc ; jmp qword ptr [rcx]
0x0000000000188d0e : add dword ptr [rax], eax ; jo 0x188ca6 ; cmc ; jmp qword ptr [rsi]
0x000000000018940e : add dword ptr [rax], eax ; jo 0x1893c5 ; cmc ; jmp qword ptr [rcx]
0x000000000018a53e : add dword ptr [rax], eax ; jo 0x18a52d ; cmc ; jmp qword ptr [rcx]
0x000000000019301e : add dword ptr [rax], eax ; jo 0x193027 ; clc ; call qword ptr [rcx]
0x0000000000186466 : add dword ptr [rax], eax ; js 0x186401 ; hlt ; jmp qword ptr [rdi]
0x00000000001866b6 : add dword ptr [rax], eax ; js 0x18666a ; hlt ; jmp qword ptr [rcx]
0x0000000000187516 : add dword ptr [rax], eax ; js 0x18755a ; cmc ; jmp qword ptr [rcx]
0x0000000000187836 : add dword ptr [rax], eax ; js 0x187881 ; cmc ; jmp qword ptr [rcx]
0x0000000000187b96 : add dword ptr [rax], eax ; js 0x187bee ; cmc ; jmp qword ptr [rcx]
0x0000000000188106 : add dword ptr [rax], eax ; js 0x188182 ; cmc ; jmp rbx
0x000000000018a286 : add dword ptr [rax], eax ; js 0x18a272 ; cmc ; jmp qword ptr [rcx]
0x000000000018a5e6 : add dword ptr [rax], eax ; js 0x18a5d6 ; cmc ; jmp qword ptr [rcx]
0x0000000000193036 : add dword ptr [rax], eax ; js 0x19303f ; clc ; call qword ptr [rbx]
0x0000000000194456 : add dword ptr [rax], eax ; js 0x19447f ; clc ; call qword ptr [rdx]
0x000000000018ab46 : add dword ptr [rax], eax ; lock ; cmc ; jmp qword ptr [rcx]
0x00000000001726a2 : add dword ptr [rax], eax ; lock adc al, -0xa ; call rax
0x000000000017400a : add dword ptr [rax], eax ; lock add ecx, edi ; jmp rax
0x0000000000173b52 : add dword ptr [rax], eax ; lock clc ; call qword ptr [rax]
0x000000000018a3ee : add dword ptr [rax], eax ; lock in al, -0xb ; jmp qword ptr [rcx]
0x000000000018c4ce : add dword ptr [rax], eax ; lock jg 0x18c4ce ; jmp qword ptr [rsi]
0x00000000001882fe : add dword ptr [rax], eax ; lock jl 0x1882fd ; call qword ptr [rbx]
0x0000000000171f12 : add dword ptr [rax], eax ; lock mov bh, -0xd ; call qword ptr [rax]
0x00000000001741b2 : add dword ptr [rax], eax ; lock stc ; jmp qword ptr [rax]
0x0000000000173202 : add dword ptr [rax], eax ; lock test dh, bh ; jmp rax
0x0000000000174102 : add dword ptr [rax], eax ; lock xor bh, cl ; call qword ptr [rax]
0x00000000001867fe : add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; hlt ; call rdx
0x0000000000186796 : add dword ptr [rax], eax ; lodsq rax, qword ptr [rsi] ; hlt ; call qword ptr [rdi]
0x0000000000171dda : add dword ptr [rax], eax ; loopne 0x171d65 ; jmp qword ptr [rax]
0x00000000001720aa : add dword ptr [rax], eax ; loopne 0x172102 ; hlt ; jmp qword ptr [rax]
0x0000000000172602 : add dword ptr [rax], eax ; loopne 0x1725fa ; cmc ; jmp rax
0x0000000000173902 : add dword ptr [rax], eax ; loopne 0x173951 ; clc ; call rax
0x00000000001739aa : add dword ptr [rax], eax ; loopne 0x1739fd ; clc ; call qword ptr [rax]
0x0000000000173c2a : add dword ptr [rax], eax ; loopne 0x173caa ; clc ; call rax
0x0000000000173e1a : add dword ptr [rax], eax ; loopne 0x173dd0 ; clc ; call rax
0x0000000000173eb2 : add dword ptr [rax], eax ; loopne 0x173e82 ; clc ; call qword ptr [rax]
0x0000000000173fc2 : add dword ptr [rax], eax ; loopne 0x173fc5 ; clc ; call rax
0x000000000018716e : add dword ptr [rax], eax ; loopne 0x1871df ; stc ; call qword ptr [rax]
0x000000000018572e : add dword ptr [rax], eax ; mov al, -0x1a ; call qword ptr [rbx]
0x000000000018a4ae : add dword ptr [rax], eax ; mov al, -0x1b ; cmc ; jmp qword ptr [rcx]
0x000000000018937e : add dword ptr [rax], eax ; mov al, -0x53 ; cmc ; jmp qword ptr [rcx]
0x0000000000173d4a : add dword ptr [rax], eax ; mov al, -0x74 ; clc ; call rax
0x000000000017258a : add dword ptr [rax], eax ; mov al, -0x75 ; cmc ; jmp rax
0x00000000001948de : add dword ptr [rax], eax ; mov al, -0x7f ; sti ; jmp qword ptr [rdx]
0x000000000018adae : add dword ptr [rax], eax ; mov al, -5 ; cmc ; call qword ptr [rsi]
0x00000000001739a2 : add dword ptr [rax], eax ; mov al, 0x4a ; clc ; jmp rax
0x0000000000172082 : add dword ptr [rax], eax ; mov al, 0x4b ; hlt ; call qword ptr [rax]
0x0000000000173a5a : add dword ptr [rax], eax ; mov al, 0x50 ; clc ; jmp qword ptr [rax]
0x000000000017254a : add dword ptr [rax], eax ; mov al, 0x60 ; cmc ; jmp qword ptr [rax]
0x00000000001871ae : add dword ptr [rax], eax ; mov al, 0x68 ; stc ; call qword ptr [rax]
0x0000000000172182 : add dword ptr [rax], eax ; mov al, 0x76 ; hlt ; jmp rax
0x0000000000189df6 : add dword ptr [rax], eax ; mov al, dl ; cmc ; jmp rax
0x000000000018aa86 : add dword ptr [rax], eax ; mov bh, ch ; cmc ; jmp qword ptr [rcx]
0x000000000018a856 : add dword ptr [rax], eax ; mov bl, ch ; cmc ; jmp qword ptr [rcx]
0x000000000018db4e : add dword ptr [rax], eax ; mov bpl, -0xa ; jmp rdx
0x0000000000189916 : add dword ptr [rax], eax ; mov cl, al ; cmc ; call qword ptr [rdx]
0x00000000001732f2 : add dword ptr [rax], eax ; mov esi, edi ; jmp qword ptr [rax]
0x000000000008fa25 : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000008f951 : add dword ptr [rax], eax ; mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x0000000000100024 : add dword ptr [rax], eax ; mov rdi, r12 ; mov rax, qword ptr [rsp] ; call rax
0x000000000018a0ae : add dword ptr [rax], eax ; movsd dword ptr [rdi], dword ptr [rsi] ; loope 0x18a0ad ; call qword ptr [rcx]
0x0000000000173972 : add dword ptr [rax], eax ; nop ; clc ; jmp qword ptr [rax]
0x000000000018784e : add dword ptr [rax], eax ; nop ; cmc ; jmp qword ptr [rcx]
0x000000000018752e : add dword ptr [rax], eax ; nop ; cmp esi, ebp ; jmp qword ptr [rcx]
0x000000000018c46e : add dword ptr [rax], eax ; nop ; jg 0x18c46e ; jmp qword ptr [rsi]
0x0000000000173c42 : add dword ptr [rax], eax ; nop ; jns 0x173c44 ; jmp qword ptr [rax]
0x000000000018a5fe : add dword ptr [rax], eax ; nop ; out -0xb, eax ; jmp qword ptr [rcx]
0x0000000000173aea : add dword ptr [rax], eax ; nop ; pop rsi ; clc ; call qword ptr [rax]
0x0000000000171cea : add dword ptr [rax], eax ; nop ; rep ; call rax
0x0000000000189ede : add dword ptr [rax], eax ; nop ; sal ebp, 1 ; jmp qword ptr [rcx]
0x0000000000193dae : add dword ptr [rax], eax ; nop ; sbb eax, edi ; call qword ptr [rsi]
0x0000000000172dca : add dword ptr [rax], eax ; nop ; sbb esi, edi ; call rax
0x00000000001866ce : add dword ptr [rax], eax ; nop ; stosd dword ptr [rdi], eax ; hlt ; jmp qword ptr [rcx]
0x0000000000173cb2 : add dword ptr [rax], eax ; nop ; test bh, al ; call qword ptr [rax]
0x000000000018647e : add dword ptr [rax], eax ; nop ; xchg eax, edx ; hlt ; call rsp
0x000000000018a646 : add dword ptr [rax], eax ; or al, ch ; cmc ; jmp qword ptr [rcx]
0x0000000000187b36 : add dword ptr [rax], eax ; or byte ptr [rdi - 0xb], cl ; jmp qword ptr [rcx]
0x000000000018a406 : add dword ptr [rax], eax ; or ch, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a006 : add dword ptr [rax], eax ; or cl, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000189f56 : add dword ptr [rax], eax ; or dl, dl ; cmc ; jmp qword ptr [rcx]
0x000000000018a5b6 : add dword ptr [rax], eax ; out -0xb, eax ; jmp qword ptr [rcx]
0x00000000001888d6 : add dword ptr [rax], eax ; pop rax ; mov ch, dh ; jmp qword ptr [rcx]
0x0000000000188966 : add dword ptr [rax], eax ; pop rax ; mov ebp, esi ; jmp qword ptr [rcx]
0x00000000001893f6 : add dword ptr [rax], eax ; pop rax ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x0000000000031492 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000172562 : add dword ptr [rax], eax ; push -0xb ; call rax
0x0000000000174092 : add dword ptr [rax], eax ; push rax ; and cl, bh ; jmp rax
0x000000000018798e : add dword ptr [rax], eax ; push rax ; cmc ; jmp qword ptr [rcx]
0x0000000000171ff2 : add dword ptr [rax], eax ; push rax ; cmp esi, esp ; call qword ptr [rax]
0x000000000018a44e : add dword ptr [rax], eax ; push rax ; in eax, -0xb ; jmp qword ptr [rcx]
0x000000000018a16e : add dword ptr [rax], eax ; push rax ; loop 0x18a16d ; call qword ptr [rax]
0x0000000000173d1a : add dword ptr [rax], eax ; push rax ; mov edi, eax ; call qword ptr [rax]
0x00000000001736a2 : add dword ptr [rax], eax ; push rax ; ret
0x0000000000171b82 : add dword ptr [rax], eax ; push rax ; ret 0xfff2
0x000000000017194a : add dword ptr [rax], eax ; push rax ; sal cl, cl ; call rax
0x0000000000171eda : add dword ptr [rax], eax ; push rax ; scasb al, byte ptr [rdi] ; jmp rax
0x0000000000173212 : add dword ptr [rax], eax ; push rax ; test esi, edi ; call qword ptr [rax]
0x00000000001938be : add dword ptr [rax], eax ; rcl byte ptr [rdx], -8 ; call qword ptr [rdx]
0x0000000000172d12 : add dword ptr [rax], eax ; rcl byte ptr [rdx], -9 ; call rax
0x0000000000171c52 : add dword ptr [rax], eax ; rcl ch, -0xe ; jmp qword ptr [rax]
0x0000000000175422 : add dword ptr [rax], eax ; rcl cl ; std ; jmp qword ptr [rax]
0x0000000000189f0e : add dword ptr [rax], eax ; rcl cl, -0xb ; jmp qword ptr [rcx]
0x00000000001903ee : add dword ptr [rax], eax ; rcr bl ; clc ; call qword ptr [rax]
0x00000000001717ea : add dword ptr [rax], eax ; rcr byte ptr [rsi - 0xf] ; call rax
0x000000000007fc89 : add dword ptr [rax], eax ; ret
0x0000000000195ae2 : add dword ptr [rax], eax ; ret 0x502
0x0000000000171b7a : add dword ptr [rax], eax ; ret 0xfff2
0x00000000001718fa : add dword ptr [rax], eax ; ror ah, 1 ; int1 ; jmp qword ptr [rax]
0x0000000000173a2a : add dword ptr [rax], eax ; ror byte ptr [rbp - 8], 1 ; call qword ptr [rax]
0x00000000001739d2 : add dword ptr [rax], eax ; ror byte ptr [rbx - 8], 1 ; call rax
0x0000000000172cb2 : add dword ptr [rax], eax ; ror byte ptr [rdi + rsi*8], 1 ; jmp rax
0x0000000000186b1e : add dword ptr [rax], eax ; sal ch, 1 ; hlt ; call qword ptr [rbx]
0x0000000000189e96 : add dword ptr [rax], eax ; sal rbp, 1 ; jmp qword ptr [rcx]
0x0000000000172bca : add dword ptr [rax], eax ; sar bl, -0xa ; jmp rax
0x00000000001721aa : add dword ptr [rax], eax ; sar byte ptr [rcx - 0xc], 1 ; call rax
0x00000000001724f2 : add dword ptr [rax], eax ; sar byte ptr [rcx], -0xb ; jmp qword ptr [rax]
0x0000000000172502 : add dword ptr [rax], eax ; sar byte ptr [rsi], -0xb ; jmp qword ptr [rax]
0x000000000018a346 : add dword ptr [rax], eax ; sbb ah, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018b50e : add dword ptr [rax], eax ; sbb al, -0xa ; call rdx
0x000000000018ab16 : add dword ptr [rax], eax ; sbb al, dh ; cmc ; jmp qword ptr [rcx]
0x000000000018a706 : add dword ptr [rax], eax ; sbb cl, ch ; cmc ; jmp qword ptr [rcx]
0x000000000018a126 : add dword ptr [rax], eax ; sbb dl, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a3be : add dword ptr [rax], eax ; shl ah, -0xb ; jmp qword ptr [rcx]
0x000000000018a2fe : add dword ptr [rax], eax ; shl bl, 1 ; cmc ; jmp qword ptr [rcx]
0x000000000019449e : add dword ptr [rax], eax ; shl byte ptr [rax], 1 ; clc ; jmp qword ptr [rcx]
0x000000000017246a : add dword ptr [rax], eax ; shl byte ptr [rdi], 1 ; cmc ; jmp rax
0x000000000018a56e : add dword ptr [rax], eax ; shl dh, 1 ; cmc ; jmp qword ptr [rcx]
0x000000000018aace : add dword ptr [rax], eax ; shr bh, 1 ; cmc ; jmp qword ptr [rcx]
0x0000000000171f42 : add dword ptr [rax], eax ; shr ch, -0xd ; call qword ptr [rax]
0x0000000000186686 : add dword ptr [rax], eax ; stosq qword ptr [rdi], rax ; hlt ; jmp qword ptr [rcx]
0x00000000001877b6 : add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], al ; jmp qword ptr [rcx]
0x000000000018fa56 : add dword ptr [rax], eax ; sub byte ptr [rdi - 9], cl ; jmp qword ptr [rcx]
0x00000000001866e6 : add dword ptr [rax], eax ; test al, -0x55 ; hlt ; jmp qword ptr [rcx]
0x0000000000188826 : add dword ptr [rax], eax ; test al, -0x79 ; cmc ; jmp qword ptr [rbx]
0x0000000000187866 : add dword ptr [rax], eax ; test al, 0x42 ; cmc ; jmp qword ptr [rcx]
0x000000000018a35e : add dword ptr [rax], eax ; xor ah, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018ab2e : add dword ptr [rax], eax ; xor al, dh ; cmc ; jmp qword ptr [rcx]
0x000000000018ac4e : add dword ptr [rax], eax ; xor bh, dh ; cmc ; jmp qword ptr [rcx]
0x0000000000189a7e : add dword ptr [rax], eax ; xor bl, al ; cmc ; jmp rax
0x000000000018604e : add dword ptr [rax], eax ; xor byte ptr [rbp - 0xc], bh ; call qword ptr [rdx]
0x0000000000171d62 : add dword ptr [rax], eax ; xor byte ptr [rbp - 0xd], ch ; jmp qword ptr [rax]
0x0000000000171cd2 : add dword ptr [rax], eax ; xor byte ptr [rbx + rsi*8], ch ; call rax
0x000000000018745e : add dword ptr [rax], eax ; xor byte ptr [rbx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001751c2 : add dword ptr [rax], eax ; xor byte ptr [rcx - 5], dh ; jmp qword ptr [rax]
0x000000000018733e : add dword ptr [rax], eax ; xor byte ptr [rcx], bh ; cmc ; call qword ptr [rcx]
0x00000000001724ea : add dword ptr [rax], eax ; xor byte ptr [rcx], bh ; cmc ; jmp rax
0x0000000000171ca2 : add dword ptr [rax], eax ; xor byte ptr [rdi], al ; jmp qword ptr [rax]
0x0000000000172fd2 : add dword ptr [rax], eax ; xor byte ptr [rsi - 9], al ; call rax
0x0000000000171952 : add dword ptr [rax], eax ; xor ch, dl ; int1 ; jmp qword ptr [rax]
0x0000000000189e7e : add dword ptr [rax], eax ; xor cl, dl ; cmc ; jmp qword ptr [rcx]
0x00000000001740fa : add dword ptr [rax], eax ; xor dil, cl ; call rax
0x000000000018a13e : add dword ptr [rax], eax ; xor dl, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018714e : add dword ptr [rax], eax ; xor ebp, esi ; call qword ptr [rax]
0x0000000000187106 : add dword ptr [rax], eax ; xor rbp, rsi ; call qword ptr [rsi]
0x000000000008a653 : add dword ptr [rax], edi ; ret 0x4788
0x000000000005ebf3 : add dword ptr [rax], edx ; add byte ptr [rax + 0x63], cl ; add al, -0x7e ; add rdx, rax ; jmp rdx
0x00000000001721b9 : add dword ptr [rax], r8d ; jge 0x1721b9 ; jmp qword ptr [rax]
0x0000000000172209 : add dword ptr [rax], r8d ; jo 0x17219c ; hlt ; call qword ptr [rax]
0x0000000000189915 : add dword ptr [rax], r8d ; mov cl, al ; cmc ; call qword ptr [rdx]
0x00000000001721a9 : add dword ptr [rax], r8d ; sar byte ptr [rcx - 0xc], 1 ; call rax
0x0000000000189a7d : add dword ptr [rax], r8d ; xor bl, al ; cmc ; jmp rax
0x0000000000026509 : add dword ptr [rbp + 0x39], ecx ; ret 0x3776
0x0000000000026508 : add dword ptr [rbp + 0x39], r9d ; ret 0x3776
0x00000000001038e6 : add dword ptr [rbp + 0x75020254], ecx ; ret
0x00000000000afecc : add dword ptr [rbp + 1], ecx ; ret
0x00000000000d4a1e : add dword ptr [rbp + 7], esi ; ret
0x0000000000106b69 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000009b827 : add dword ptr [rbp - 0x1a], esi ; ret
0x0000000000090368 : add dword ptr [rbp - 0x1b], esi ; ret
0x0000000000042934 : add dword ptr [rbp - 0x1f], esi ; mov eax, 1 ; ret
0x00000000000b30d1 : add dword ptr [rbp - 0x24], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000090138 : add dword ptr [rbp - 0x43], esi ; nop dword ptr [rax + rax] ; ret
0x00000000000569be : add dword ptr [rbp - 0x7b], eax ; dec dword ptr [rax - 0x77] ; ret 0x2274
0x0000000000134b62 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000008d8fa : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x00000000000bff9f : add dword ptr [rbx + 0x294803e0], eax ; ret 0x8d48
0x00000000000c719a : add dword ptr [rbx + 0x294903e0], eax ; ret 0x149
0x00000000000026fe : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x000000000007a8e8 : add dword ptr [rbx + 0x32290105], ecx ; add byte ptr [rcx], bh ; ret 0xa7e
0x00000000000fd188 : add dword ptr [rbx + 0x460f09fb], eax ; ret
0x0000000000099f82 : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; ret
0x0000000000026baa : add dword ptr [rbx + 0x9413fe0], eax ; ret 0x394c
0x00000000001853d6 : add dword ptr [rbx + rax], 0x3f ; add dword ptr [rdx], ecx ; ret
0x00000000000c5d09 : add dword ptr [rbx + rcx*4 + 2], ecx ; and ebx, 8 ; mov r10d, eax ; jmp 0xc5d2a
0x0000000000031c21 : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000c6b1a : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x0000000000077dd5 : add dword ptr [rbx - 0xd], ebx ; ret
0x0000000000185baa : add dword ptr [rbx], eax ; ret 0xa05
0x0000000000195ce0 : add dword ptr [rbx], ecx ; ret
0x000000000010e581 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x000000000009bd0f : add dword ptr [rcx + 0x39], eax ; ret
0x000000000005578c : add dword ptr [rcx + 0x39], eax ; ret 0x850f
0x0000000000083fd7 : add dword ptr [rcx + 0x39], ecx ; ret 0x672
0x00000000000c07ef : add dword ptr [rcx + 0x5d], eax ; pop r14 ; pop r15 ; ret
0x0000000000107c8f : add dword ptr [rcx + 0x5d], eax ; pop r14 ; ret
0x00000000000f2053 : add dword ptr [rcx + 0xf], ecx ; mov esi, 0x89482404 ; ret 0xe883
0x000000000018c0b6 : add dword ptr [rcx + rbp*2], 0xa ; ret
0x0000000000021933 : add dword ptr [rcx + rcx*4 + 0x7d], ecx ; test al, -0x18 ; ret
0x000000000009b824 : add dword ptr [rcx + rcx*4 + 1], eax ; jne 0x9b817 ; ret
0x00000000001038c4 : add dword ptr [rcx + rcx*8 + 0x6348e775], eax ; ret 0xc741
0x000000000008e941 : add dword ptr [rcx + rdi - 0x3e], ecx ; jne 0x8e939 ; or byte ptr [rdi], sil ; ret
0x000000000002c3f2 : add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x00000000000c5554 : add dword ptr [rcx + rdi*4 - 0x7d], esi ; jrcxz 0xc556b ; je 0xc54ee ; pop rbx ; ret
0x000000000011539c : add dword ptr [rcx + rdx*2 + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c23da : add dword ptr [rcx - 0x1d], edi ; mov eax, 1 ; ret
0x0000000000041533 : add dword ptr [rcx - 0x3a], eax ; jmp qword ptr [r8]
0x0000000000076389 : add dword ptr [rcx - 0x3b7cb7fd], ecx ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000092316 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000c5cf8 : add dword ptr [rcx - 0x77], eax ; ret
0x0000000000038efd : add dword ptr [rcx - 0x77], ecx ; fimul word ptr [rax - 0x77] ; ret
0x000000000003b8a1 : add dword ptr [rcx - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x000000000003e19d : add dword ptr [rcx - 0x77], ecx ; fisttp word ptr [rax - 0x77] ; ret
0x0000000000040826 : add dword ptr [rcx - 0x78], eax ; add cl, byte ptr [rcx - 0x7d] ; ret 0xf01
0x0000000000024e9f : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000027c24 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x000000000010388f : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000009e2bf : add dword ptr [rcx - 0x7d], ecx ; ret 0x4104
0x0000000000027c0b : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x00000000000ee951 : add dword ptr [rcx - 0x7d], ecx ; ret 0xeb08
0x0000000000029976 : add dword ptr [rcx - 0x7d], ecx ; shr dword ptr [rax + 0x41], 0x39 ; ret
0x000000000018d61d : add dword ptr [rcx], 0xf6aa8000 ; call qword ptr [rax]
0x000000000018d605 : add dword ptr [rcx], 0xf6aa8800 ; call qword ptr [rax]
0x000000000018d5ed : add dword ptr [rcx], 0xf6aa9000 ; call qword ptr [rax]
0x00000000001717e9 : add dword ptr [rcx], eax ; add al, dl ; pop rsi ; int1 ; call rax
0x000000000009ba5b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000007a0ea : add dword ptr [rcx], eax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000000c541d : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00000000000c5407 : add dword ptr [rcx], ebx ; sal bh, -0x30 ; and eax, 2 ; ret
0x00000000000c6e51 : add dword ptr [rcx], edi ; ret
0x00000000000c3c2f : add dword ptr [rcx], edi ; ret 0x5a7e
0x00000000000426e8 : add dword ptr [rcx], edi ; ret 0x894c
0x00000000000cec39 : add dword ptr [rcx], edi ; ret 0x8c0f
0x00000000000c1ab9 : add dword ptr [rcx], edi ; ret 0xe37c
0x0000000000102d43 : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x00000000001161c0 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x00000000001161d0 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000011625f : add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000014c8ea : add dword ptr [rdi + 3], esi ; ret
0x000000000008bc17 : add dword ptr [rdi - 0x1a], edi ; ret
0x000000000008cd2c : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016e584 : add dword ptr [rdi - 0x602e0003], ebx ; std ; call rcx
0x000000000017f31b : add dword ptr [rdi], 2 ; lodsb al, byte ptr [rsi] ; ret
0x000000000018430b : add dword ptr [rdi], 2 ; ret
0x0000000000189a0b : add dword ptr [rdi], 2 ; ret 0x42c3
0x000000000001ce71 : add dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x39
0x000000000010495f : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000000c0b58 : add dword ptr [rdi], ecx ; lahf ; ret 0x7fe9
0x000000000002cb25 : add dword ptr [rdi], ecx ; mov bh, -0x40 ; ret
0x00000000000abb6a : add dword ptr [rdi], ecx ; sahf ; ret 0x2941
0x00000000000a9598 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8941
0x0000000000099fb3 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x0000000000099fc1 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], -0x51 ; ret 0x68e9
0x0000000000141e7e : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000d4b18 : add dword ptr [rdi], ecx ; test dword ptr [rcx - 0x9fffffe], ecx ; ret 0xf01
0x0000000000070355 : add dword ptr [rdi], ecx ; test edx, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4803
0x00000000000bc6c3 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x840
0x0000000000100031 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000000000041320 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x543a
0x00000000000413b8 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xca38
0x0000000000099eb4 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x000000000009a3c0 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x00000000000922d4 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x000000000014be32 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000067a8e : add dword ptr [rdx + 4], 1 ; ret
0x0000000000067af8 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000ea4fb : add dword ptr [rdx + rax*2], 1 ; ret
0x000000000018f836 : add dword ptr [rdx + rax], -0x59 ; ret
0x000000000017d7c6 : add dword ptr [rdx + rax], -0xa ; ret
0x00000000001850d6 : add dword ptr [rdx + rax], 0x48 ; ret
0x000000000018f446 : add dword ptr [rdx + rax], 0x5f ; ret
0x00000000000a931f : add dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001776b5 : add dword ptr [rdx], 0x44 ; ret
0x0000000000183344 : add dword ptr [rdx], 0x4a ; ret
0x000000000019432c : add dword ptr [rdx], 0x51 ; ret
0x000000000018974c : add dword ptr [rdx], 0x53 ; ret
0x000000000017d8cc : add dword ptr [rdx], 0x54 ; ret
0x000000000018c8d3 : add dword ptr [rdx], 0x5b ; ret
0x0000000000179614 : add dword ptr [rdx], 0x63 ; ret
0x000000000018ecc4 : add dword ptr [rdx], 0x65 ; ret
0x000000000018972d : add dword ptr [rdx], 0x67 ; ret
0x000000000017f024 : add dword ptr [rdx], 0x6c ; ret
0x0000000000179d64 : add dword ptr [rdx], 0x6f ; ret
0x000000000018ece5 : add dword ptr [rdx], 0x7f ; ret
0x0000000000179d6d : add dword ptr [rdx], 2 ; mov dl, 0xa ; ret
0x00000000001872f4 : add dword ptr [rdx], 2 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000017bfd4 : add dword ptr [rdx], 2 ; pop rbp ; ret
0x000000000019554d : add dword ptr [rdx], eax ; add byte ptr [rax], al ; jbe 0x195551 ; call qword ptr [rax]
0x0000000000182a69 : add dword ptr [rdx], eax ; ret
0x00000000001853da : add dword ptr [rdx], ecx ; ret
0x0000000000077dcf : add dword ptr [rip + 0x327cc2], 1 ; pop rbx ; ret
0x0000000000077578 : add dword ptr [rip + 0x3284a5], 1 ; ret
0x000000000017cca3 : add dword ptr [rip + 0x4e00e55], 2 ; ret 0xe0a
0x0000000000092265 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x0000000000180577 : add dword ptr [rsi + rax*4], 3 ; mov dword ptr [rdx], es ; push rdx ; ret
0x000000000017e80f : add dword ptr [rsi + rcx + 0x10], ecx ; push rcx ; ret
0x000000000017adde : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000000922e7 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000001857e8 : add dword ptr [rsi], 2 ; hlt ; ret
0x000000000018c150 : add dword ptr [rsi], 2 ; pop rsi ; ret
0x000000000018001d : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00000000001882fd : add dword ptr cs:[rax], eax ; lock jl 0x1882fe ; call qword ptr [rbx]
0x0000000000126bf7 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187b35 : add dword ptr es:[rax], eax ; or byte ptr [rdi - 0xb], cl ; jmp qword ptr [rcx]
0x0000000000171d61 : add dword ptr es:[rax], eax ; xor byte ptr [rbp - 0xd], ch ; jmp qword ptr [rax]
0x000000000018b8c5 : add dword ptr fs:[rax], eax ; clc ; sub esi, esi ; call rdi
0x0000000000172601 : add dword ptr fs:[rax], eax ; loopne 0x1725fb ; cmc ; jmp rax
0x00000000000c46bc : add dword ptr gs:[rax - 0x7d], ecx ; ret
0x00000000000c5406 : add dword ptr gs:[rcx], ebx ; sal bh, -0x30 ; and eax, 2 ; ret
0x0000000000188a8d : add dword ptr ss:[rax], eax ; jo 0x188a24 ; cmc ; jmp qword ptr [rcx]
0x0000000000171ff1 : add dword ptr ss:[rax], eax ; push rax ; cmp esi, esp ; call qword ptr [rax]
0x0000000000004b01 : add eax, 0 ; add byte ptr [rax], al ; ret 0x26
0x0000000000001589 : add eax, 0 ; add byte ptr [rax], al ; ret 5
0x0000000000102d66 : add eax, 0x10 ; ret
0x0000000000081f16 : add eax, 0x10585 ; ret
0x000000000007fc86 : add eax, 0x10bf5 ; ret
0x000000000003493a : add eax, 0x10c48348 ; ret
0x000000000002bc6a : add eax, 0x138e47 ; ret
0x0000000000020142 : add eax, 0x144484 ; ret
0x0000000000020152 : add eax, 0x1465db ; ret
0x00000000000ab3e0 : add eax, 0x16e ; ret
0x0000000000084e7c : add eax, 0x1f ; ret
0x00000000001831cc : add eax, 0x2300e44 ; ret 0xe0a
0x000000000011acc2 : add eax, 0x280d79 ; jmp rax
0x000000000011ac71 : add eax, 0x280dc2 ; pop rbp ; pop r12 ; jmp rax
0x000000000011ac11 : add eax, 0x280e1a ; pop rbp ; pop r12 ; jmp rax
0x000000000011ad35 : add eax, 0x283876 ; call qword ptr [rax]
0x000000000011a738 : add eax, 0x283e73 ; call qword ptr [rax]
0x0000000000113222 : add eax, 0x289c31 ; add rsp, 8 ; ret
0x00000000001131f2 : add eax, 0x289cc9 ; add rsp, 8 ; ret
0x0000000000113192 : add eax, 0x289db1 ; add rsp, 8 ; ret
0x00000000001131c2 : add eax, 0x289df1 ; add rsp, 8 ; ret
0x0000000000083d4b : add eax, 0x29000000 ; ret
0x00000000000abba9 : add eax, 0x2907f9c1 ; ret 0xf089
0x0000000000106d82 : add eax, 0x296239 ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000109b8a : add eax, 0x298819 ; add rsp, 8 ; ret
0x0000000000109b71 : add eax, 0x298832 ; test eax, eax ; je 0x109b89 ; ret
0x00000000001091f6 : add eax, 0x299145 ; add rsp, 8 ; ret
0x00000000001091c6 : add eax, 0x299175 ; add rsp, 8 ; ret
0x00000000001091aa : add eax, 0x299191 ; add rsp, 8 ; ret
0x000000000010680b : add eax, 0x29b834 ; test eax, eax ; je 0x106821 ; ret
0x0000000000100a8a : add eax, 0x29dfe1 ; ret
0x0000000000100220 : add eax, 0x29e833 ; add rsp, 8 ; ret
0x0000000000196889 : add eax, 0x29f0000 ; add byte ptr [rax], al ; ret
0x00000000000f8b27 : add eax, 0x2a8adc ; add rsp, 0x28 ; jmp rax
0x00000000000f5289 : add eax, 0x2ac352 ; pop rbp ; ret
0x00000000000eae82 : add eax, 0x2b1fa9 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000e49c0 : add eax, 0x2bbc1b ; add rsp, 0x18 ; ret
0x00000000000e496c : add eax, 0x2bbcaf ; pop rbp ; pop r12 ; ret
0x00000000000e43e8 : add eax, 0x2bc1a3 ; add rsp, 8 ; ret
0x00000000000e4389 : add eax, 0x2bc222 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e1d56 : add eax, 0x2bcc25 ; mov rdx, rax ; jmp 0xe1cf6
0x00000000000e1cc0 : add eax, 0x2bccbb ; add rsp, 8 ; ret
0x00000000000e328b : add eax, 0x2bd200 ; add rsp, 8 ; ret
0x0000000000141f04 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000a9984 : add eax, 0x2f910f ; add rsp, 8 ; ret
0x000000000018001b : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x00000000000f59d9 : add eax, 0x31862 ; ret
0x00000000000f5aa9 : add eax, 0x31b32 ; ret
0x0000000000083bd7 : add eax, 0x31bfec ; add rsp, 8 ; ret
0x000000000007c0b0 : add eax, 0x320deb ; mov qword ptr [rax], rdi ; ret
0x000000000007abaa : add eax, 0x3221d9 ; xor edi, edi ; call qword ptr [rax]
0x000000000007aae6 : add eax, 0x32229d ; mov rdi, r13 ; call qword ptr [rax]
0x000000000007c0c1 : add eax, 0x3239be ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000774e2 : add eax, 0x3271d9 ; ret
0x0000000000077dd0 : add eax, 0x327cc2 ; add dword ptr [rbx - 0xd], ebx ; ret
0x00000000000775e6 : add eax, 0x328439 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000067365 : add eax, 0x338656 ; pop rbx ; pop rbp ; ret
0x00000000000347f4 : add eax, 0x36888f ; mov eax, edx ; ret
0x00000000000347b1 : add eax, 0x3688d2 ; ret
0x00000000000347a1 : add eax, 0x3688e6 ; ret
0x0000000000037462 : add eax, 0x36b5af ; add rsp, 8 ; ret
0x000000000002c6ad : add eax, 0x3706f6 ; mov qword ptr [rax], rdx ; ret
0x0000000000029352 : add eax, 0x3757a9 ; ret
0x000000000001fc4e : add eax, 0x37d5e5 ; pop rbp ; pop r12 ; ret
0x0000000000021682 : add eax, 0x381241 ; ret
0x0000000000021672 : add eax, 0x381259 ; ret
0x00000000000205f1 : add eax, 0x38228a ; ret
0x000000000011d27a : add eax, 0x38c48348 ; ret
0x0000000000078ec5 : add eax, 0x39480000 ; ret
0x0000000000113d85 : add eax, 0x3d8d4800 ; ret
0x0000000000196fb5 : add eax, 0x3ef0000 ; add byte ptr [rax], al ; ret
0x0000000000144438 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x00000000001400e8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000095646 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000104961 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x000000000008f57a : add eax, 0x48fb4789 ; mov eax, edi ; ret
0x000000000011da57 : add eax, 0x48fffbc9 ; add esp, 0x18 ; ret
0x00000000001444b9 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000140129 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x00000000000f5ad3 : add eax, 0x56238 ; ret
0x000000000006aac0 : add eax, 0x5b000000 ; ret
0x0000000000154989 : add eax, 0x5bd0000 ; add byte ptr [rax], al ; ret 5
0x0000000000158f7d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x00000000000d6c5d : add eax, 0x5d000000 ; pop r12 ; ret
0x000000000008a6a7 : add eax, 0x5fb4 ; ret
0x000000000016e3e5 : add eax, 0x610fffb ; sti ; jmp rax
0x000000000010e20d : add eax, 0x634816eb ; ret 0x448b
0x000000000016e9f1 : add eax, 0x720fffc ; cld ; jmp qword ptr [rax]
0x00000000000233da : add eax, 0x74c08500 ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000000000c08f8 : add eax, 0x75c08548 ; ret 0x8948
0x000000000009b755 : add eax, 0x75d13948 ; in eax, 0x44 ; sub eax, eax ; ret
0x0000000000085c92 : add eax, 0x79 ; ret
0x0000000000095e4e : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x0000000000099eae : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00000000000dc55b : add eax, 0x83480000 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000011e89d : add eax, 0x83480000 ; ret 0x4910
0x00000000001213f1 : add eax, 0x83480000 ; ret 0xe910
0x000000000011e7f1 : add eax, 0x83480000 ; ret 0xeb10
0x000000000014443b : add eax, 0x8428d48 ; ret
0x00000000000d6740 : add eax, 0x89000000 ; ret 0x440f
0x000000000010d008 : add eax, 0x894c0000 ; ror dword ptr [rax - 0x7d], 1 ; ret
0x00000000000f5159 : add eax, 0x89c78944 ; ret
0x00000000000ff4b7 : add eax, 0x8b002a27 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000974f2 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x000000000008a6bb : add eax, 0x9fc90 ; ret
0x0000000000083e83 : add eax, 0x9fd88 ; ret
0x0000000000083b13 : add eax, 0x9ffc8 ; ret
0x00000000001131e6 : add eax, 0xa0 ; add rsp, 8 ; ret
0x0000000000085639 : add eax, 0xa1fb2 ; ret
0x0000000000081673 : add eax, 0xa2328 ; ret
0x0000000000113216 : add eax, 0xa8 ; add rsp, 8 ; ret
0x000000000009b2a4 : add eax, 0xabeb7 ; ret
0x000000000009be40 : add eax, 0xacfdb ; ret
0x000000000009be48 : add eax, 0xaf893 ; ret
0x000000000009be2c : add eax, 0xbbff ; ret
0x00000000000837f6 : add eax, 0xbc985 ; ret
0x0000000000085b26 : add eax, 0xbd1d5 ; ret
0x0000000000081566 : add eax, 0xbd465 ; ret
0x0000000000085c46 : add eax, 0xbe8c5 ; ret
0x000000000011a63e : add eax, 0xc0310000 ; pop rbx ; ret
0x000000000014883a : add eax, 0xc0310000 ; ret
0x0000000000000451 : add eax, 0xc1c107c ; ret 0x4412
0x0000000000084e90 : add eax, 0xc294b ; ret
0x00000000001444bd : add eax, 0xc428d48 ; ret
0x0000000000096c8d : add eax, 0xc478d48 ; ret
0x0000000000084e98 : add eax, 0xc50d3 ; ret
0x00000000000854a3 : add eax, 0xc6878 ; ret
0x000000000002f759 : add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000009b29c : add eax, 0xc81f ; ret
0x000000000007fe73 : add eax, 0xc9dd8 ; ret
0x0000000000097acd : add eax, 0xd478d48 ; ret
0x000000000007e754 : add eax, 0xe8000000 ; ret
0x0000000000114255 : add eax, 0xe8000000 ; ret 0xf190
0x000000000002c955 : add eax, 0xe8000000 ; ret 9
0x0000000000134b53 : add eax, 0xf7f0ff3 ; ret
0x0000000000195cdb : add eax, 0xffff0000 ; add dword ptr [rbx], ecx ; ret
0x000000000008bbe3 : add eax, 0xfffffad8 ; add rsp, 8 ; ret
0x000000000008bbcc : add eax, 0xfffffaef ; ret
0x00000000000ea72c : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000ea76c : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x0000000000085acb : add eax, 1 ; ret
0x000000000009b538 : add eax, 2 ; ret
0x000000000009b551 : add eax, 3 ; ret
0x00000000000800d6 : add eax, 5 ; ret
0x0000000000085cf5 : add eax, 6 ; ret
0x00000000000c5423 : add eax, 8 ; ret
0x0000000000081f62 : add eax, 9 ; ret
0x0000000000020609 : add eax, dword ptr [0] ; ret
0x000000000003f866 : add eax, dword ptr [rax] ; add al, ch ; ret 0xfed0
0x0000000000105ad9 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011ea3d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121591 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011ea61 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000010f29e : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010c90b : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000ea116 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000f4fd7 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000e52bc : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000003bde4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x88009
0x000000000009b593 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000101f54 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x00000000000368e0 : add eax, dword ptr [rax] ; add byte ptr [rax], cl ; jmp 0x368ae
0x00000000000c7b5f : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000003cb7d : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0x840f
0x00000000001132cf : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00000000000f49f5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000c0ff2 : add eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret
0x00000000000e17a7 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000009a1f0 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000009a210 : add eax, dword ptr [rax] ; ret
0x0000000000045ead : add eax, dword ptr [rbp - 0x4b8] ; jmp rax
0x000000000004dc5a : add eax, dword ptr [rbp - 0x60f0be13] ; ret 0xf641
0x000000000004f24f : add eax, dword ptr [rbp - 0x60f0be25] ; ret 0x67e
0x0000000000102255 : add eax, dword ptr [rbx + 0x2948fce0] ; ret
0x0000000000183beb : add eax, dword ptr [rbx + 0xa810204] ; ret
0x00000000000c0ad4 : add eax, dword ptr [rbx - 0x6bf0f903] ; ret 0xfd83
0x000000000003134e : add eax, dword ptr [rbx - 0x6bf0fc08] ; ret 0x854d
0x00000000000699da : add eax, dword ptr [rbx - 0x76fefbbe] ; ret 0xc4f6
0x00000000001036dd : add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x1036ee ; ret
0x0000000000141ec9 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000176ada : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa410204], al ; ret
0x000000000017b8d2 : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa480204], al ; ret
0x00000000001046b0 : add eax, dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0xf45
0x0000000000099eba : add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x0000000000171859 : add eax, dword ptr [rcx] ; add al, al ; stosb byte ptr [rdi], al ; int1 ; jmp rax
0x0000000000185795 : add eax, dword ptr [rcx] ; add byte ptr [rax - 0x17], ch ; jmp qword ptr [rbx]
0x00000000001751c1 : add eax, dword ptr [rcx] ; add byte ptr [rax], dh ; jno 0x1751c8 ; jmp qword ptr [rax]
0x0000000000171861 : add eax, dword ptr [rcx] ; add byte ptr [rax], dh ; scasd eax, dword ptr [rdi] ; int1 ; jmp qword ptr [rax]
0x0000000000032430 : add eax, dword ptr [rdi + 0x20] ; pop rbx ; ret
0x000000000011d9ca : add eax, dword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00000000000eb718 : add eax, dword ptr [rdx + rcx] ; ret
0x0000000000141fc9 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000195cda : add eax, dword ptr [rip - 0x10000] ; add dword ptr [rbx], ecx ; ret
0x000000000017c4ba : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000001858a5 : add eax, dword ptr [rsi + 0x80e4802] ; ret
0x000000000017a192 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000017d7c2 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xa ; ret
0x00000000001850d2 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], 0x48 ; ret
0x00000000000eb94a : add eax, dword ptr [rsi + rdx] ; ret
0x000000000004a888 : add eax, eax ; ret
0x0000000000038b6b : add eax, eax ; sub rdx, rax ; jmp 0x38ba2
0x000000000003b486 : add eax, eax ; sub rdx, rax ; jmp 0x3b4bd
0x000000000003dd84 : add eax, eax ; sub rdx, rax ; jmp 0x3ddbc
0x00000000000a2e8c : add eax, eax ; sub rdx, rax ; jmp 0xa2ebd
0x000000000007d24a : add eax, ebp ; jmp rax
0x00000000000ba4d8 : add eax, ebp ; ret 0xf64f
0x00000000000dabed : add eax, ecx ; cmp rdi, rsi ; ja 0xdab90 ; pop rbx ; ret
0x0000000000068a52 : add eax, ecx ; jmp rax
0x0000000000084baa : add eax, ecx ; ret
0x000000000008fe45 : add eax, edi ; add rax, r8 ; ret
0x0000000000084ba7 : add eax, edi ; add rax, rcx ; ret
0x0000000000173845 : add eax, edi ; dec dword ptr [rax] ; ret 1
0x000000000008385b : add eax, edi ; ret
0x00000000001239fb : add eax, edi ; sub rax, r8 ; ret
0x0000000000123c50 : add eax, edi ; sub rax, rdx ; ret
0x000000000010bd3d : add eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000dac1d : add eax, edx ; cmp rdi, rsi ; ja 0xdac18 ; ret
0x0000000000055bcc : add eax, edx ; jmp rax
0x000000000010bd5e : add eax, edx ; ret
0x0000000000032e8d : add eax, edx ; shr rax, 0x3f ; ret
0x0000000000081cae : add eax, edx ; sub rax, rdi ; ret
0x00000000000e17a5 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000042604 : add eax, esi ; jmp rax
0x00000000000a8bc9 : add eax, esi ; ret
0x0000000000051066 : add eax, esp ; jmp rax
0x000000000004a887 : add eax, r8d ; ret
0x000000000004a548 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000a8190 : add ebp, dword ptr [rcx] ; ret
0x00000000001093d8 : add ebp, dword ptr [rcx] ; ret 0x8166
0x000000000003b67d : add ebp, ebx ; or byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ab912 : add ebp, ecx ; ret 0xfffb
0x000000000000314e : add ebp, esi ; mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x00000000001063ea : add ebx, dword ptr [r11 + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000011d3e2 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000001063eb : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000a82e5 : add ebx, eax ; mov qword ptr [rbp], rbx ; call r12
0x00000000000f434c : add ebx, eax ; nop ; xor eax, eax ; ret
0x0000000000042c61 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000e232d : add ebx, ebp ; and ecx, dword ptr [rax - 0x7d] ; ret 0x3c01
0x000000000000374e : add ebx, ebp ; in al, -0x12 ; jne 0x3734 ; ret 0x975
0x0000000000058742 : add ebx, ebp ; mov cl, byte ptr [rax - 0x77] ; ret 0xd6eb
0x00000000000e2b69 : add ebx, ecx ; sub eax, dword ptr [rax] ; mov byte ptr [rcx - 1], 0 ; ret
0x000000000016e3d1 : add ebx, edi ; inc dword ptr [rax] ; add bh, bl ; call rax
0x0000000000134d13 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000114fbb : add ebx, esp ; add r15d, 1 ; call r14
0x00000000000855a8 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x85599 ; ret
0x00000000000d9e9f : add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000c7634 : add ecx, 1 ; cmp rcx, rsi ; jne 0xc762a ; ret
0x000000000009236a : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x00000000000fe236 : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x0000000000078902 : add ecx, dword ptr [rax + 0x29] ; ret
0x000000000008d8fd : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x00000000000ff424 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x00000000000fece7 : add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000bffa2 : add ecx, dword ptr [rax + 0x29] ; ret 0x8d48
0x0000000000103adc : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x00000000000ebba3 : add ecx, dword ptr [rax - 0x75] ; push rsp ; ret 0x8940
0x00000000000e2ab4 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x000000000009023a : add ecx, dword ptr [rax - 0x77] ; clc ; jne 0x90254 ; ret
0x000000000009bfaa : add ecx, dword ptr [rax - 0x77] ; clc ; jne 0x9bfc4 ; ret
0x000000000008f55a : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x00000000000aacbf : add ecx, dword ptr [rax - 0x77] ; ret 0x8d4c
0x00000000000e67f5 : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], cl ; ret 0xc148
0x000000000006c316 : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], -0x6c ; ret 0xdaf7
0x00000000000ac853 : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000008cd96 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000073223 : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x00000000000f1049 : add ecx, dword ptr [rbp + 1] ; call 0x48d199a4
0x000000000008eed7 : add ecx, dword ptr [rbp - 0x76b7feb8] ; ret
0x000000000011d6a9 : add ecx, dword ptr [rbp - 0x88] ; call rax
0x0000000000134a82 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000c719d : add ecx, dword ptr [rcx + 0x29] ; ret 0x149
0x00000000000955e4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000de697 : add ecx, dword ptr [rcx + 0xf102474] ; xchg eax, esp ; ret 0x8440
0x00000000000f1bc0 : add ecx, dword ptr [rcx + rcx*4 - 0x5b] ; push -0x76000001 ; ret 0x8948
0x0000000000103683 : add ecx, dword ptr [rcx - 0x54b70c37] ; ret
0x000000000009236b : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000194c15 : add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x0000000000095e10 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x0000000000031351 : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x854d
0x0000000000187d27 : add ecx, dword ptr [rdx] ; ret
0x00000000000690f5 : add ecx, eax ; jmp rcx
0x00000000000a8df2 : add ecx, eax ; mov qword ptr [rdi + 0x20], rcx ; pop rbx ; pop rbp ; ret
0x00000000000f0aff : add ecx, ebp ; ret
0x00000000000ef286 : add ecx, ebp ; ret 0xfffd
0x000000000012a36b : add ecx, ebx ; jmp r9
0x0000000000147802 : add ecx, ebx ; jmp rcx
0x00000000000e4eb4 : add ecx, ebx ; ret
0x00000000000e4b88 : add ecx, ebx ; ret 0x3944
0x00000000000ce8a3 : add ecx, ecx ; jmp rcx
0x000000000017400d : add ecx, edi ; jmp rax
0x0000000000055b21 : add ecx, edx ; jmp rcx
0x000000000009a264 : add ecx, esi ; jmp rcx
0x000000000010efad : add edi, 0x10 ; jmp rcx
0x000000000010951f : add edi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000010b56a : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000111524 : add edi, 0x58 ; jmp rcx
0x0000000000110c84 : add edi, 0x68 ; jmp rcx
0x000000000010e417 : add edi, 0xc8 ; jmp rcx
0x0000000000114fbe : add edi, 1 ; call r14
0x000000000008f534 : add edi, 1 ; mov rax, rdi ; ret
0x00000000000b9ee3 : add edi, 1 ; test dl, dl ; jne 0xb9ed1 ; ret
0x000000000008f545 : add edi, 2 ; mov rax, rdi ; ret
0x000000000008f558 : add edi, 3 ; mov rax, rdi ; ret
0x000000000008f565 : add edi, 4 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x000000000008f578 : add edi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x000000000008f502 : add edi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x000000000014bf13 : add edi, dword ptr [rbp + 0x10] ; call rbx
0x00000000001853d8 : add edi, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x00000000000aec05 : add edi, eax ; jmp rdi
0x00000000001038d4 : add edi, eax ; mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x00000000000200dd : add edi, ebp ; call rax
0x000000000017b3b1 : add edi, ebp ; jmp qword ptr [rbx]
0x0000000000114d7c : add edi, edi ; movsxd rdi, edi ; mov byte ptr [rdx + rdi], 0 ; ret
0x000000000012a368 : add edi, edx ; add r9, r11 ; jmp r9
0x0000000000034235 : add edi, esi ; ret 0
0x000000000016ea0d : add edi, esp ; call qword ptr [rax]
0x000000000016e9ed : add edi, esp ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x000000000016ea2d : add edi, esp ; jmp rax
0x00000000001032e9 : add edx, 0xc ; cmp rdx, r8 ; jne 0x1032da ; ret
0x0000000000103891 : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000062e1f : add edx, 8 ; jmp 0x62dea
0x000000000017e672 : add edx, dword ptr [rdi + 0x380e0a01] ; ret
0x000000000008fd48 : add edx, eax ; jl 0x8fdb7 ; add rax, rdi ; ret
0x000000000008fd58 : add edx, eax ; jl 0x8fdb9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008fd78 : add edx, eax ; jl 0x8fdb9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008fd98 : add edx, eax ; jl 0x8fdb9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000008f4ed : add edx, eax ; jmp r10
0x00000000000209c1 : add edx, eax ; jmp rdx
0x00000000000437f2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000c1347 : add edx, ecx ; jmp rdx
0x00000000000506d1 : add edx, edi ; call qword ptr [r11 + rax*8]
0x0000000000031a80 : add edx, edi ; jmp rdx
0x00000000000a8065 : add edx, esi ; mov rax, rdx ; add rsp, 0x18 ; ret
0x0000000000102d41 : add esi, 1 ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000099499 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000001782a3 : add esi, dword ptr [rbp + 0x41380e01] ; ret
0x0000000000187d25 : add esi, dword ptr [rcx] ; add ecx, dword ptr [rdx] ; ret
0x0000000000103ab4 : add esi, dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000112730 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], -0x3c ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000003755c : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000010b282 : add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x00000000000c1fff : add esi, dword ptr [rsi + rax - 0xd] ; ret
0x00000000000206ae : add esi, eax ; add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x000000000008fa23 : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00000000000f0afa : add esi, eax ; and al, 0xc ; add ecx, ebp ; ret
0x0000000000040b6c : add esi, eax ; jmp qword ptr [rax]
0x000000000002aead : add esi, eax ; jmp rsi
0x0000000000115ee3 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000001709bd : add esi, ebp ; call qword ptr [rax]
0x0000000000031c96 : add esi, ebx ; jmp rsi
0x0000000000134c33 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000011cc13 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000dad9c : add esi, ebx ; ret
0x0000000000034459 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000018ebf9 : add esi, edi ; call qword ptr [rax]
0x0000000000149c3c : add esi, edi ; fadd st(3) ; ret
0x000000000009a2a9 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000012a365 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000000c0877 : add esi, esi ; or esi, r10d ; jne 0xc0888 ; ret
0x00000000000c54d3 : add esi, esi ; ret
0x000000000006ae3f : add esi, esi ; ret 0x7420
0x00000000000ca371 : add esi, esi ; ret 0xf04
0x00000000000e16af : add esp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000e6e02 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000007ee94 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000116453 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000006bd73 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000002225f : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033ea0 : add esp, 0x10 ; pop rbx ; ret
0x000000000003484a : add esp, 0x10 ; ret
0x0000000000029587 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a6921 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000849ef : add esp, 0x100 ; ret
0x000000000008170d : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000067403 : add esp, 0x1000 ; pop rbx ; ret
0x0000000000067411 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x000000000003402c : add esp, 0x108 ; ret
0x00000000000dc38e : add esp, 0x120 ; pop rbx ; ret
0x0000000000034262 : add esp, 0x140 ; pop rbx ; ret
0x0000000000033a39 : add esp, 0x148 ; ret
0x0000000000109d2b : add esp, 0x18 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000e0fed : add esp, 0x18 ; mov eax, edx ; ret
0x00000000000d5e5e : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007eaf6 : add esp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x0000000000067976 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x00000000001153e6 : add esp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000001163cc : add esp, 0x18 ; movzx eax, al ; ret
0x000000000007fad8 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010a00d : add esp, 0x18 ; pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x00000000000331d9 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000002161b : add esp, 0x18 ; ret
0x0000000000041bb8 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000db9d7 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000044b32 : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x000000000006b6d4 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033809 : add esp, 0x20 ; pop rbx ; ret
0x000000000010fc89 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000db982 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000002034d : add esp, 0x28 ; jmp rax
0x000000000011d2ec : add esp, 0x28 ; mov rax, rdx ; ret
0x00000000001135bc : add esp, 0x28 ; pop rbp ; pop r12 ; ret
0x000000000001feca : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000067329 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000036b32 : add esp, 0x28 ; ret
0x0000000000067331 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000b93a1 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010918b : add esp, 0x30 ; pop rbx ; ret
0x0000000000101821 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000112734 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000b49c7 : add esp, 0x38 ; ret
0x0000000000109f40 : add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000342dc : add esp, 0x40 ; pop rbx ; ret
0x00000000000eaf48 : add esp, 0x40 ; ret
0x0000000000109e98 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e6158 : add esp, 0x408 ; ret
0x00000000000449dc : add esp, 0x440 ; pop rbx ; ret
0x00000000000dca32 : add esp, 0x48 ; movzx eax, al ; ret
0x000000000010c7f7 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000104963 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000e189a : add esp, 0x48 ; ret
0x000000000011a63b : add esp, 0x510 ; xor eax, eax ; pop rbx ; ret
0x00000000000db85b : add esp, 0x58 ; ret
0x00000000000e05ff : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x000000000009c0ab : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cf8a2 : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000db89f : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000011363c : add esp, 0x68 ; ret
0x0000000000112609 : add esp, 0x78 ; ret
0x000000000004f133 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000071422 : add esp, 0x80 ; mov eax, edx ; ret
0x000000000006c8f9 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x000000000007c015 : add esp, 0x80 ; mov rax, r8 ; ret
0x000000000003ffc3 : add esp, 0x80 ; pop rbx ; ret
0x0000000000067b39 : add esp, 0x80 ; ret
0x000000000003626f : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x00000000000340e2 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000113b05 : add esp, 0x88 ; ret
0x00000000000e9932 : add esp, 0x90 ; pop rbx ; ret
0x00000000000743b0 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000067453 : add esp, 0x98 ; ret
0x0000000000112357 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000034b3d : add esp, 0xa8 ; ret
0x00000000000a8b05 : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x0000000000067fde : add esp, 0xd0 ; mov eax, esi ; pop rbx ; ret
0x00000000000b356e : add esp, 0xd0 ; pop rbx ; ret
0x0000000000033d0d : add esp, 0xd0 ; ret
0x00000000000407d4 : add esp, 0xd8 ; ret
0x00000000000f2d0c : add esp, 0xe8 ; pop rbx ; pop rbp ; ret
0x000000000010f263 : add esp, 8 ; add eax, 2 ; ret
0x00000000000749ed : add esp, 8 ; cdqe ; ret
0x0000000000083c5d : add esp, 8 ; jmp rax
0x000000000010381d : add esp, 8 ; lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x00000000000bc62e : add esp, 8 ; lea rax, qword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000bc526 : add esp, 8 ; lea rax, qword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x000000000004a492 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000006c7fd : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000a6c58 : add esp, 8 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x0000000000020b18 : add esp, 8 ; mov eax, edi ; neg eax ; ret
0x000000000006a8ce : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000423bb : add esp, 8 ; mov eax, edx ; ret
0x0000000000068124 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000003656b : add esp, 8 ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x00000000000bc481 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000030e6e : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000abb24 : add esp, 8 ; mov rax, rdx ; ret
0x000000000006c04b : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000011516c : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000736e9 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000010c6d7 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000003fff6 : add esp, 8 ; movzx eax, al ; ret
0x0000000000105fda : add esp, 8 ; movzx eax, ax ; ret
0x000000000010bd59 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000006e380 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000022b69 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000202b9 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000033f63 : add esp, 8 ; pop rbx ; ret
0x0000000000034cd1 : add esp, 8 ; ret
0x000000000011a481 : add esp, 8 ; sar eax, 0x1f ; ret
0x00000000001164c4 : add esp, 8 ; shr eax, 0x1f ; ret
0x00000000000227b0 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000d133c : add esp, 8 ; xor eax, eax ; ret
0x000000000016eaad : add esp, edi ; call rax
0x000000000016ea29 : add esp, edi ; inc dword ptr [rax] ; add edi, esp ; jmp rax
0x000000000016ea09 : add esp, edi ; push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x00000000000fd187 : add qword ptr [r11 + 0x460f09fb], r8 ; ret
0x000000000018a41d : add qword ptr [r8], r8 ; and ch, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a435 : add qword ptr [r8], r8 ; cmp ch, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a375 : add qword ptr [r8], r8 ; in al, -0xb ; jmp qword ptr [rcx]
0x000000000018a3ed : add qword ptr [r8], r8 ; lock in al, -0xb ; jmp qword ptr [rcx]
0x000000000018a405 : add qword ptr [r8], r8 ; or ch, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a16d : add qword ptr [r8], r8 ; push rax ; loop 0x18a16e ; call qword ptr [rax]
0x000000000018a345 : add qword ptr [r8], r8 ; sbb ah, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a3bd : add qword ptr [r8], r8 ; shl ah, -0xb ; jmp qword ptr [rcx]
0x000000000018a35d : add qword ptr [r8], r8 ; xor ah, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a13d : add qword ptr [r8], r8 ; xor dl, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000020719 : add qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000005cc0 : add qword ptr [r8], rax ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret
0x000000000018a01d : add qword ptr [r8], rax ; and cl, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000189df5 : add qword ptr [r8], rax ; mov al, dl ; cmc ; jmp rax
0x000000000018a005 : add qword ptr [r8], rax ; or cl, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000189f55 : add qword ptr [r8], rax ; or dl, dl ; cmc ; jmp qword ptr [rcx]
0x00000000000dd726 : add qword ptr [rax - 0x77], r9 ; ret 0x3948
0x000000000008eed9 : add qword ptr [rax - 0x77], rcx ; ret
0x0000000000024028 : add qword ptr [rax - 0x7d], rcx ; ret 0x4801
0x0000000000023580 : add qword ptr [rax - 0x7d], rcx ; ret 0x4901
0x000000000018a32d : add qword ptr [rax], r8 ; add ah, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a10d : add qword ptr [rax], r8 ; add dl, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a0f5 : add qword ptr [rax], r8 ; call 0x221896e4
0x000000000018a315 : add qword ptr [rax], r8 ; call 0x22189906
0x000000000018a285 : add qword ptr [rax], r8 ; js 0x18a273 ; cmc ; jmp qword ptr [rcx]
0x000000000018a0ad : add qword ptr [rax], r8 ; movsd dword ptr [rdi], dword ptr [rsi] ; loope 0x18a0ae ; call qword ptr [rcx]
0x000000000018a125 : add qword ptr [rax], r8 ; sbb dl, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a2fd : add qword ptr [rax], r8 ; shl bl, 1 ; cmc ; jmp qword ptr [rcx]
0x0000000000189f25 : add qword ptr [rax], rax ; fcom st(1) ; cmc ; jmp qword ptr [rcx]
0x0000000000189edd : add qword ptr [rax], rax ; nop ; sal ebp, 1 ; jmp qword ptr [rcx]
0x0000000000189f0d : add qword ptr [rax], rax ; rcl cl, -0xb ; jmp qword ptr [rcx]
0x0000000000189e95 : add qword ptr [rax], rax ; sal rbp, 1 ; jmp qword ptr [rcx]
0x0000000000189e7d : add qword ptr [rax], rax ; xor cl, dl ; cmc ; jmp qword ptr [rcx]
0x000000000007a0e9 : add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x0000000000141e7d : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000008f4ec : add r10, rax ; jmp r10
0x0000000000134d12 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134ca2 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134c32 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000114fbd : add r15d, 1 ; call r14
0x0000000000123620 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011fab4 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000008f694 : add r8b, byte ptr [r8] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000008f604 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x0000000000174c99 : add r8b, byte ptr [rax] ; lock cli ; jmp rax
0x0000000000174d91 : add r8b, byte ptr [rax] ; loopne 0x174d27 ; cli ; call rax
0x000000000011d6a8 : add r9, qword ptr [rbp - 0x88] ; call rax
0x000000000012a36a : add r9, r11 ; jmp r9
0x0000000000102d1c : add r9b, byte ptr [rax + 0x39] ; ret 0x2d72
0x00000000001267d2 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000141f03 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x000000000009b540 : add rax, 1 ; ret
0x000000000009b537 : add rax, 2 ; ret
0x000000000009b550 : add rax, 3 ; ret
0x0000000000020608 : add rax, qword ptr [0] ; ret
0x0000000000045eac : add rax, qword ptr [rbp - 0x4b8] ; jmp rax
0x000000000003242f : add rax, qword ptr [rdi + 0x20] ; pop rbx ; ret
0x000000000011d9c9 : add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x0000000000020607 : add rax, qword ptr fs:[0] ; ret
0x0000000000051065 : add rax, r12 ; jmp rax
0x000000000007d249 : add rax, r13 ; jmp rax
0x000000000008fe47 : add rax, r8 ; ret
0x000000000008f654 : add rax, r9 ; jmp rax
0x0000000000038b6a : add rax, rax ; sub rdx, rax ; jmp 0x38ba3
0x000000000003b485 : add rax, rax ; sub rdx, rax ; jmp 0x3b4be
0x000000000003dd83 : add rax, rax ; sub rdx, rax ; jmp 0x3ddbd
0x00000000000a2e8b : add rax, rax ; sub rdx, rax ; jmp 0xa2ebe
0x0000000000068a51 : add rax, rcx ; jmp rax
0x0000000000084ba9 : add rax, rcx ; ret
0x000000000008fe44 : add rax, rdi ; add rax, r8 ; ret
0x0000000000084ba6 : add rax, rdi ; add rax, rcx ; ret
0x000000000008385a : add rax, rdi ; ret
0x00000000001239fa : add rax, rdi ; sub rax, r8 ; ret
0x0000000000123c4f : add rax, rdi ; sub rax, rdx ; ret
0x0000000000055bcb : add rax, rdx ; jmp rax
0x0000000000032e8c : add rax, rdx ; shr rax, 0x3f ; ret
0x0000000000081cad : add rax, rdx ; sub rax, rdi ; ret
0x0000000000042603 : add rax, rsi ; jmp rax
0x0000000000114fba : add rbx, r12 ; add r15d, 1 ; call r14
0x00000000000a82e4 : add rbx, rax ; mov qword ptr [rbp], rbx ; call r12
0x00000000000f1048 : add rcx, qword ptr [r13 + 1] ; call 0x48d199a5
0x0000000000147801 : add rcx, r11 ; jmp rcx
0x00000000000ce8a2 : add rcx, r9 ; jmp rcx
0x00000000000690f4 : add rcx, rax ; jmp rcx
0x00000000000a8df1 : add rcx, rax ; mov qword ptr [rdi + 0x20], rcx ; pop rbx ; pop rbp ; ret
0x0000000000055b20 : add rcx, rdx ; jmp rcx
0x000000000009a263 : add rcx, rsi ; jmp rcx
0x000000000010efac : add rdi, 0x10 ; jmp rcx
0x000000000010951e : add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000010b569 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000111523 : add rdi, 0x58 ; jmp rcx
0x0000000000110c83 : add rdi, 0x68 ; jmp rcx
0x000000000010e416 : add rdi, 0xc8 ; jmp rcx
0x000000000008f533 : add rdi, 1 ; mov rax, rdi ; ret
0x00000000000b9ee2 : add rdi, 1 ; test dl, dl ; jne 0xb9ed2 ; ret
0x000000000008f544 : add rdi, 2 ; mov rax, rdi ; ret
0x000000000008f557 : add rdi, 3 ; mov rax, rdi ; ret
0x000000000014bf12 : add rdi, qword ptr [r13 + 0x10] ; call rbx
0x00000000000aec04 : add rdi, r8 ; jmp rdi
0x0000000000110922 : add rdi, rax ; jmp rdi
0x00000000001038d3 : add rdi, rax ; mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x00000000000200dc : add rdi, rbp ; call rax
0x000000000012a367 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000062e1e : add rdx, 8 ; jmp 0x62deb
0x00000000000506d0 : add rdx, r15 ; call qword ptr [r11 + rax*8]
0x00000000000437f1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000008fd47 : add rdx, rax ; jl 0x8fdb8 ; add rax, rdi ; ret
0x00000000000209c0 : add rdx, rax ; jmp rdx
0x00000000000c1346 : add rdx, rcx ; jmp rdx
0x0000000000031a7f : add rdx, rdi ; jmp rdx
0x0000000000102d40 : add rsi, 1 ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000031c95 : add rsi, r11 ; jmp rsi
0x000000000002aeac : add rsi, r8 ; jmp rsi
0x000000000009a19b : add rsi, rax ; jmp rsi
0x0000000000115ee2 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000007ee93 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000116452 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000006bd72 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000002225e : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033e9f : add rsp, 0x10 ; pop rbx ; ret
0x0000000000034849 : add rsp, 0x10 ; ret
0x00000000000a6920 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000849ee : add rsp, 0x100 ; ret
0x0000000000067402 : add rsp, 0x1000 ; pop rbx ; ret
0x000000000003402b : add rsp, 0x108 ; ret
0x00000000000dc38d : add rsp, 0x120 ; pop rbx ; ret
0x0000000000034261 : add rsp, 0x140 ; pop rbx ; ret
0x0000000000033a38 : add rsp, 0x148 ; ret
0x0000000000109d2a : add rsp, 0x18 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000e0fec : add rsp, 0x18 ; mov eax, edx ; ret
0x00000000000d5e5d : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007eaf5 : add rsp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x0000000000067975 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x00000000001153e5 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000001163cb : add rsp, 0x18 ; movzx eax, al ; ret
0x00000000000331d8 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000002161a : add rsp, 0x18 ; ret
0x0000000000041bb7 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000044b31 : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x000000000006b6d3 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033808 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000db981 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000002034c : add rsp, 0x28 ; jmp rax
0x000000000011d2eb : add rsp, 0x28 ; mov rax, rdx ; ret
0x00000000001135bb : add rsp, 0x28 ; pop rbp ; pop r12 ; ret
0x0000000000067328 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000036b31 : add rsp, 0x28 ; ret
0x0000000000067330 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000b93a0 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010918a : add rsp, 0x30 ; pop rbx ; ret
0x0000000000112733 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000b49c6 : add rsp, 0x38 ; ret
0x0000000000109f3f : add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000342db : add rsp, 0x40 ; pop rbx ; ret
0x00000000000eaf47 : add rsp, 0x40 ; ret
0x00000000000e6157 : add rsp, 0x408 ; ret
0x00000000000449db : add rsp, 0x440 ; pop rbx ; ret
0x00000000000dca31 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000104962 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000e1899 : add rsp, 0x48 ; ret
0x00000000000db85a : add rsp, 0x58 ; ret
0x00000000000e05fe : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x000000000009c0aa : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000db89e : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000011363b : add rsp, 0x68 ; ret
0x0000000000112608 : add rsp, 0x78 ; ret
0x0000000000071421 : add rsp, 0x80 ; mov eax, edx ; ret
0x000000000003ffc2 : add rsp, 0x80 ; pop rbx ; ret
0x0000000000067b38 : add rsp, 0x80 ; ret
0x00000000000340e1 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000113b04 : add rsp, 0x88 ; ret
0x00000000000e9931 : add rsp, 0x90 ; pop rbx ; ret
0x00000000000743af : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000067452 : add rsp, 0x98 ; ret
0x0000000000112356 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000034b3c : add rsp, 0xa8 ; ret
0x00000000000b356d : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000033d0c : add rsp, 0xd0 ; ret
0x00000000000407d3 : add rsp, 0xd8 ; ret
0x00000000000f2d0b : add rsp, 0xe8 ; pop rbx ; pop rbp ; ret
0x000000000010f262 : add rsp, 8 ; add eax, 2 ; ret
0x00000000000749ec : add rsp, 8 ; cdqe ; ret
0x0000000000083c5c : add rsp, 8 ; jmp rax
0x000000000004a491 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000006c7fc : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000a6c57 : add rsp, 8 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x0000000000020b17 : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x000000000006a8cd : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000423ba : add rsp, 8 ; mov eax, edx ; ret
0x0000000000068123 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000003656a : add rsp, 8 ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x00000000000bc480 : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000030e6d : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000abb23 : add rsp, 8 ; mov rax, rdx ; ret
0x000000000006c04a : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000011516b : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000736e8 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000010c6d6 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000003fff5 : add rsp, 8 ; movzx eax, al ; ret
0x0000000000105fd9 : add rsp, 8 ; movzx eax, ax ; ret
0x000000000010bd58 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000006e37f : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000202b8 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000033f62 : add rsp, 8 ; pop rbx ; ret
0x0000000000034cd0 : add rsp, 8 ; ret
0x000000000011a480 : add rsp, 8 ; sar eax, 0x1f ; ret
0x00000000001164c3 : add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000227af : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000d133b : add rsp, 8 ; xor eax, eax ; ret
0x000000000008a70e : add sil, sil ; ret 0x7404
0x00000000000d4da6 : add sil, sil ; ret 0xf01
0x00000000000ea783 : add word ptr [rax], 1 ; ret
0x00000000000ea4fa : add word ptr [rdx + rax*2], 1 ; ret
0x00000000000333f1 : addps xmm0, xmm1 ; ret
0x00000000000333f0 : addss xmm0, xmm1 ; ret
0x0000000000092b21 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7b ; ret
0x0000000000007338 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000008cbd1 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000009bc66 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000177c18 : and al, 0 ; add byte ptr [rax], al ; in al, 0x27 ; add byte ptr [rax], al ; adc dl, al ; jmp 0x177c2c
0x000000000018de20 : and al, 0 ; add byte ptr [rax], al ; in al, dx ; mov dword ptr [rcx], eax ; add byte ptr [rax], bl ; ret
0x000000000011d150 : and al, 0 ; add byte ptr [rax], al ; jmp rax
0x0000000000191790 : and al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x0000000000177d80 : and al, 0 ; add byte ptr [rax], al ; sub qword ptr [rax], r8 ; add al, bh ; ret
0x00000000000355cb : and al, 0x10 ; call r14
0x00000000000b45e3 : and al, 0x10 ; call rax
0x00000000000335a7 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x00000000000f03c2 : and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x00000000000e54ab : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001095ea : and al, 0x10 ; mov rdi, rbp ; call r14
0x00000000000f02bb : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000081a0e : and al, 0x14 ; add byte ptr [rcx], ch ; ret
0x000000000011d2e9 : and al, 0x18 ; add rsp, 0x28 ; mov rax, rdx ; ret
0x000000000007c1b3 : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000109fda : and al, 0x18 ; call qword ptr [rax]
0x000000000002003c : and al, 0x18 ; call rax
0x000000000010e944 : and al, 0x18 ; call rcx
0x00000000000f3801 : and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000000f391e : and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000008f51d : and al, 0x18 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x00000000000b45de : and al, 0x18 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000009cc67 : and al, 0x18 ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x000000000009c9af : and al, 0x18 ; mov rdi, r12 ; mov r9, r14 ; call rbx
0x00000000000d89ea : and al, 0x18 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000176d5c : and al, 0x19 ; add byte ptr [rax], al ; push rax ; pop rsi ; jmp 0x176d6a
0x0000000000109e1b : and al, 0x1c ; call qword ptr [rax]
0x0000000000000975 : and al, 0x20 ; add byte ptr [rax], al ; ret
0x00000000000cc3cc : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x84c6
0x00000000000cd2c4 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000018745c : and al, 0x20 ; add dword ptr [rax], eax ; xor byte ptr [rbx], bh ; cmc ; jmp qword ptr [rcx]
0x000000000009c654 : and al, 0x20 ; call rbx
0x000000000010e74f : and al, 0x20 ; call rcx
0x000000000009c2a4 : and al, 0x20 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000a880a : and al, 0x20 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000002516f : and al, 0x20 ; mov rcx, qword ptr [r13] ; call qword ptr [rbx]
0x000000000015c124 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000011d276 : and al, 0x28 ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000038b68 : and al, 0x28 ; add rax, rax ; sub rdx, rax ; jmp 0x38ba5
0x0000000000038b67 : and al, 0x28 ; add rax, rax ; sub rdx, rax ; jmp 0x38ba6
0x000000000007ab1a : and al, 0x28 ; call rcx
0x000000000009c168 : and al, 0x28 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000028a95 : and al, 0x28 ; mov rcx, qword ptr [rbp] ; call qword ptr [rbx]
0x000000000007cd63 : and al, 0x28 ; mov rdi, rbp ; call rcx
0x000000000007ac5d : and al, 0x28 ; xor edi, edi ; call qword ptr [rax]
0x00000000000fc614 : and al, 0x2a ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000010d06e : and al, 0x30 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000003dd81 : and al, 0x30 ; add rax, rax ; sub rdx, rax ; jmp 0x3ddbf
0x00000000000c8c16 : and al, 0x30 ; call 0x84ea4
0x00000000000c8c15 : and al, 0x30 ; call 0x84ea5
0x000000000010a45e : and al, 0x30 ; call qword ptr [rax]
0x000000000009c442 : and al, 0x30 ; call r12
0x000000000007ab15 : and al, 0x30 ; mov qword ptr [rsp + 0x28], r14 ; call rcx
0x0000000000116359 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x0000000000027b25 : and al, 0x30 ; mov rcx, qword ptr [rbp] ; call qword ptr [rbx]
0x000000000009cb45 : and al, 0x30 ; mov rdi, rbp ; call rbx
0x0000000000178c5c : and al, 0x38 ; add byte ptr [rax], al ; adc bl, ch ; jmp 0x178c6a
0x000000000003b483 : and al, 0x38 ; add rax, rax ; sub rdx, rax ; jmp 0x3b4c0
0x000000000003b482 : and al, 0x38 ; add rax, rax ; sub rdx, rax ; jmp 0x3b4c1
0x000000000007a9b7 : and al, 0x38 ; call qword ptr [rax]
0x000000000007a9df : and al, 0x38 ; call rax
0x00000000000e1895 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000c8c11 : and al, 0x38 ; mov qword ptr [rsp + 0x30], r9 ; call 0x84ea9
0x0000000000112fd1 : and al, 0x3a ; call qword ptr [rax]
0x00000000000237ea : and al, 0x40 ; call r14
0x0000000000023f47 : and al, 0x40 ; call r15
0x00000000000236e9 : and al, 0x40 ; call rbx
0x000000000007a9da : and al, 0x40 ; mov qword ptr [rsp + 0x38], rdx ; call rax
0x0000000000035588 : and al, 0x41 ; call rsi
0x00000000000a2475 : and al, 0x44 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x9774
0x00000000000295b4 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0feb : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x000000000010f87a : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000dab2e : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000006b6d2 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002034b : and al, 0x48 ; add esp, 0x28 ; jmp rax
0x00000000000eaee5 : and al, 0x48 ; add esp, 0x38 ; ret
0x00000000000eaf46 : and al, 0x48 ; add esp, 0x40 ; ret
0x00000000000249f0 : and al, 0x48 ; call r14
0x0000000000023ca6 : and al, 0x48 ; call r15
0x0000000000023bb9 : and al, 0x48 ; call rbx
0x000000000011d14d : and al, 0x48 ; mov eax, dword ptr [rax + 0xe0] ; jmp rax
0x000000000009bc34 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000237e5 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r14
0x0000000000023f42 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000000236e4 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000008c9cc : and al, 0x48 ; test esi, esi ; jne 0x8c9e3 ; jmp 0x8c99d
0x0000000000035688 : and al, 0x4c ; mov esi, ebp ; mov rdi, r12 ; call r14
0x000000000018a35c : and al, 0x4f ; add dword ptr [rax], eax ; xor ah, ah ; cmc ; jmp qword ptr [rcx]
0x00000000000249eb : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000023ca1 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000023bb4 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x0000000000023479 : and al, 0x50 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003f8d8 : and al, 0x54 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x0000000000162718 : and al, 0x56 ; idiv edi ; adc ebx, dword ptr [rdx - 9] ; call qword ptr [rbx]
0x00000000000de695 : and al, 0x58 ; add ecx, dword ptr [rcx + 0xf102474] ; xchg eax, esp ; ret 0x8440
0x000000000011327c : and al, 0x5d ; pop r12 ; ret
0x0000000000025e7b : and al, 0x60 ; call qword ptr [rbx]
0x00000000000f3bcb : and al, 0x60 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000000c9910 : and al, 0x61 ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xc639
0x0000000000024ca3 : and al, 0x68 ; call r15
0x000000000010aa34 : and al, 0x68 ; call rax
0x000000000002508f : and al, 0x68 ; call rbx
0x000000000011d604 : and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000025e76 : and al, 0x70 ; mov rdi, qword ptr [rsp + 0x60] ; call qword ptr [rbx]
0x0000000000024c9e : and al, 0x70 ; mov rdi, qword ptr [rsp + 0x68] ; call r15
0x000000000002508a : and al, 0x70 ; mov rdi, qword ptr [rsp + 0x68] ; call rbx
0x0000000000116cfb : and al, 0xb ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f146c : and al, 0xb ; jmp 0xf147f
0x00000000000f0afd : and al, 0xc ; add ecx, ebp ; ret
0x0000000000033e9d : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c2f24 : and al, 0xc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000036efd : and al, 0xc ; add rsp, 0x18 ; ret
0x000000000011d29f : and al, 0xc ; add rsp, 0x38 ; ret
0x00000000000bda43 : and al, 0xf ; xchg eax, esp ; ret 0xca09
0x00000000000e19b1 : and al, 0xffffffb0 ; ret
0x0000000000044537 : and al, 0xffffffec ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000170144 : and al, 0xffffffec ; jmp rax
0x000000000003381a : and al, 0xfffffff0 ; and eax, 0x8000 ; ret
0x0000000000033696 : and al, 0xfffffff0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000033676 : and al, 0xfffffff0 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000033736 : and al, 0xfffffff0 ; mov dword ptr [rdi], edx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000a80db : and al, 0xfffffff0 ; ret
0x00000000000444f6 : and al, 0xfffffff8 ; ret
0x00000000000444b0 : and al, 0xfffffffc ; ret
0x000000000009c86d : and al, 0xffffffffffffff80 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000ae4b6 : and al, 0xffffffffffffff81 ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000038f21 : and al, 0xffffffffffffff83 ; ljmp 0x9fa8330, -0x68f1 ; ret 0xd284
0x000000000009ea37 : and al, 0xffffffffffffff83 ; ret
0x00000000000c9467 : and al, 0xffffffffffffff83 ; ret 0x4801
0x00000000000ea76b : and al, 0xffffffffffffff83 ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x000000000002989c : and al, 0xffffffffffffff89 ; ret
0x00000000000b39a5 : and al, 0xffffffffffffff89 ; ret 0x8b49
0x00000000000cc407 : and al, 0xffffffffffffff8b ; adc bh, dh ; ret 0x30f
0x000000000002576a : and al, 0xffffffffffffff8f ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000030f87 : and al, 0xffffffffffffff98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000028f0c : and al, 0xffffffffffffff98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000cd86e : and al, 0xffffffffffffff98 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000417a6 : and al, 0xffffffffffffff98 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x67e9
0x000000000009bb4b : and al, 0xffffffffffffffa8 ; lock jne 0x9bb69 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000017ff5c : and al, 0xffffffffffffffab ; add byte ptr [rax], al ; push rsp ; cli ; call qword ptr [rax]
0x00000000000e19b2 : and al, 0xffffffffffffffb0 ; ret
0x00000000000d9bc5 : and al, 0xffffffffffffffc0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000040ce4 : and al, 0xffffffffffffffc0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d48
0x00000000000021c5 : and al, 0xffffffffffffffc7 ; jno 0x2216 ; ret 0x1dd4
0x000000000018265c : and al, 0xffffffffffffffd2 ; add byte ptr [rax], al ; mov al, 0x53 ; call qword ptr [rsi]
0x0000000000183b5c : and al, 0xffffffffffffffe7 ; add byte ptr [rax], al ; push rax ; and ebx, esi ; call rdi
0x00000000000db805 : and al, 0xffffffffffffffe8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000003360c : and al, 0xffffffffffffffe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003369b : and al, 0xffffffffffffffe8 ; fstp xword ptr [rdi] ; ret
0x0000000000104e9a : and al, 0xffffffffffffffe8 ; mov dword ptr [rsi], eax ; mov eax, 1 ; ret
0x000000000003367b : and al, 0xffffffffffffffe8 ; ret
0x0000000000039318 : and al, 0xffffffffffffffe8 ; ret 0x9d
0x00000000000fe1b8 : and al, 0xffffffffffffffe8 ; ret 0xfffa
0x000000000018405c : and al, 0xffffffffffffffec ; add byte ptr [rax], al ; push rax ; xor esi, ebx ; jmp qword ptr [rcx]
0x0000000000044538 : and al, 0xffffffffffffffec ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000170145 : and al, 0xffffffffffffffec ; jmp rax
0x000000000006dc18 : and al, 0xfffffffffffffff0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000003381b : and al, 0xfffffffffffffff0 ; and eax, 0x8000 ; ret
0x0000000000033697 : and al, 0xfffffffffffffff0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000033677 : and al, 0xfffffffffffffff0 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000033737 : and al, 0xfffffffffffffff0 ; mov dword ptr [rdi], edx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000a80d6 : and al, 0xfffffffffffffff0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000a80dc : and al, 0xfffffffffffffff0 ; ret
0x0000000000160e8c : and al, 0xfffffffffffffff5 ; hlt ; lcall ptr [rsp + rsi*8 - 0xc] ; call rsi
0x0000000000172445 : and al, 0xfffffffffffffff5 ; jmp rax
0x000000000008a816 : and al, 0xfffffffffffffff8 ; jne 0x8a6f2 ; ret
0x00000000000444f1 : and al, 0xfffffffffffffff8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000000444f7 : and al, 0xfffffffffffffff8 ; ret
0x00000000000ef65f : and al, 0xfffffffffffffff9 ; dec dword ptr [rax - 0x77] ; ret
0x000000000016e455 : and al, 0xfffffffffffffffb ; push qword ptr [rax] ; sti ; call rax
0x000000000016ec61 : and al, 0xfffffffffffffffc ; inc dword ptr [rax + 0x26] ; cld ; call qword ptr [rax]
0x00000000000444ab : and al, 0xfffffffffffffffc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000444b1 : and al, 0xfffffffffffffffc ; ret
0x0000000000033847 : and al, 0xfffffffffffffffe ; fldcw word ptr [rsp - 2] ; ret
0x000000000003384b : and al, 0xfffffffffffffffe ; ret
0x000000000010002c : and al, 0xffffffffffffffff ; rol byte ptr [rbx - 0x6bf0fe05], 1 ; ret
0x000000000018787d : and al, 1 ; add al, al ; cmc ; jmp qword ptr [rcx]
0x00000000001878ad : and al, 1 ; add byte ptr [rax], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001878c5 : and al, 1 ; add byte ptr [rax], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001746e9 : and al, 2 ; add byte ptr [rax - 0xd], dh ; stc ; jmp qword ptr [rax]
0x0000000000020347 : and al, 4 ; mov edi, dword ptr [rsp] ; add rsp, 0x28 ; jmp rax
0x0000000000095f58 : and al, 7 ; add byte ptr [rax], al ; ret
0x00000000000a6936 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002d2cf : and al, 8 ; add rsp, 0x18 ; ret
0x000000000010bab7 : and al, 8 ; call qword ptr [rax]
0x000000000007f932 : and al, 8 ; call qword ptr [rdx]
0x00000000000202fc : and al, 8 ; call rax
0x000000000010aa18 : and al, 8 ; call rbx
0x00000000000336ca : and al, 8 ; fscale ; fstp st(1) ; ret
0x00000000000481f9 : and al, 8 ; jmp 0x481c2
0x00000000001078f3 : and al, 8 ; jne 0x1078e8 ; add rsp, 0x18 ; ret
0x00000000000c5e05 : and al, 8 ; mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006a338 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000000e383c : and al, 8 ; mov rdi, rax ; xor eax, eax ; call 0x4fa59
0x000000000011540f : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000cb895 : and al, 8 ; or ecx, ebp ; ret
0x00000000000335ab : and al, 8 ; ret
0x000000000011635e : and al, 8 ; xor eax, eax ; call rdx
0x000000000016e8b8 : and al, ah ; sti ; jmp qword ptr [rax]
0x0000000000194459 : and al, bh ; call qword ptr [rdx]
0x00000000001944a1 : and al, bh ; jmp qword ptr [rcx]
0x00000000000334c9 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000000a71c : and al, byte ptr [rax] ; or al, 0 ; push rax ; ret
0x000000000000996c : and al, byte ptr [rax] ; or al, 0 ; ret
0x0000000000171cd1 : and al, byte ptr [rcx] ; add byte ptr [rax], dh ; sub al, -0xd ; call rax
0x00000000001876ad : and al, byte ptr [rcx] ; add byte ptr [rax], dl ; cmc ; jmp qword ptr [rcx]
0x000000000007fe3a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000000ad7c8 : and al, ch ; ret 0x5b
0x00000000000d0b58 : and al, ch ; ret 0xf5c7
0x00000000000feba8 : and al, ch ; ret 0xf684
0x00000000000e438a : and al, dl ; sub eax, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002cb22 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002cb42 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002ca82 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002cb02 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002ca22 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002cac2 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002ca62 : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002caa2 : and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000016ecbd : and bh, ah ; inc dword ptr [rax + 0xd] ; cld ; call qword ptr [rax]
0x0000000000164551 : and bh, bl ; jmp rax
0x00000000001608c0 : and bh, byte ptr [rax - 0x4980000c] ; hlt ; jmp rsp
0x0000000000002f64 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000016f4c8 : and bh, byte ptr [rsp + rdi*8 - 1] ; xchg eax, edx ; jnp 0x16f4d2 ; call qword ptr [rdx]
0x000000000017bd21 : and bh, ch ; jmp qword ptr [rax]
0x000000000017488d : and bh, dl ; call qword ptr [rax]
0x000000000016e7dc : and bl, 0xfb ; call qword ptr [rax]
0x0000000000096537 : and bl, al ; nop dword ptr [rax] ; ret
0x00000000000a8df6 : and byte ptr [r11 + 0x5d], r11b ; ret
0x000000000007265a : and byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000997b6 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000ce0d2 : and byte ptr [r8], r8b ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000076124 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x000000000003dfed : and byte ptr [rax + 0x29], cl ; ret 0x2949
0x000000000007ead5 : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000008b411 : and byte ptr [rax + 0x39], cl ; ret
0x000000000010bdd3 : and byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc031
0x000000000002400c : and byte ptr [rax + 0x63], cl ; ror dword ptr [rcx + 0x39], 1 ; ret 0x2b76
0x000000000008fd76 : and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000170e84 : and byte ptr [rax + rsi*8], cl ; call rax
0x00000000000e98cb : and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00000000000a880b : and byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x00000000000ffea2 : and byte ptr [rax - 0x75], cl ; jl 0xffed2 ; sbb al, ch ; ret
0x0000000000079f33 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x000000000007265b : and byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x0000000000036a3a : and byte ptr [rax - 0x77], cl ; enter 0x948, -0x30 ; ret
0x000000000006a49e : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000106f46 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000022809 : and byte ptr [rax - 0x77], cl ; ret 0x1374
0x0000000000022873 : and byte ptr [rax - 0x77], cl ; ret 0x1a74
0x00000000000ac218 : and byte ptr [rax - 0x77], cl ; ret 0x1e74
0x00000000000ef0e7 : and byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000011ae72 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000000210c3 : and byte ptr [rax - 0x77], cl ; ret 0x5374
0x0000000000041519 : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000079f66 : and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000002288d : and byte ptr [rax - 0x77], cl ; ret 0xed75
0x000000000002281c : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x000000000010617a : and byte ptr [rax - 0x77], cl ; sal dword ptr [rdx + rdx + 0x48], -0x7d ; ret
0x000000000002b4a4 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2b4b8 ; call rax
0x00000000000226b6 : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000074342 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000ce0d3 : and byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000006b73c : and byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000b8dc3 : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000052118 : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r15 ; call 0x6e359
0x000000000009a28c : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000b8da1 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e693f : and byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000183d70 : and byte ptr [rax], ch ; call rdi
0x000000000009766c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000997b7 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x0000000000175b30 : and byte ptr [rbp - 3], ah ; jmp qword ptr [rdx]
0x000000000016f67c : and byte ptr [rbp - 4], dh ; inc eax ; push rdi ; cld ; jmp rax
0x000000000018fe50 : and byte ptr [rbp - 9], ah ; jmp rdx
0x00000000001957cb : and byte ptr [rbx + 0x100e4402], al ; ret
0x0000000000031568 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006b6d6 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a8df7 : and byte ptr [rbx + 0x5d], bl ; ret
0x0000000000176add : and byte ptr [rbx + 0xa410204], al ; ret
0x000000000017b8d5 : and byte ptr [rbx + 0xa480204], al ; ret
0x00000000001862dd : and byte ptr [rbx + 0xa7e0204], al ; ret
0x00000000000e2ba2 : and byte ptr [rbx + rbp*8 - 0x3a], dh ; inc dword ptr [r8] ; ret
0x000000000016e424 : and byte ptr [rbx + rdi*8], dl ; call qword ptr [rax]
0x000000000017d8c0 : and byte ptr [rbx - 0x11], bh ; jmp qword ptr [rsi]
0x00000000001853f1 : and byte ptr [rbx - 0x73fc79fc], al ; add ah, byte ptr [rbx + 0xa] ; ret
0x00000000001878b0 : and byte ptr [rbx - 0xb], al ; jmp qword ptr [rcx]
0x0000000000174a64 : and byte ptr [rbx - 6], al ; jmp rax
0x000000000003ba1c : and byte ptr [rcx + 0x39], cl ; ret 0x840f
0x0000000000076125 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x000000000017a08e : and byte ptr [rcx + 0xa], al ; ret
0x000000000004d78b : and byte ptr [rcx + 9], cl ; ret
0x00000000001716a4 : and byte ptr [rcx + rsi*8], bl ; call rax
0x0000000000044535 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xffffffffffffffe8 ; ret
0x0000000000038e3c : and byte ptr [rcx - 0x77], al ; ret
0x000000000005873e : and byte ptr [rcx - 0x7d], cl ; mov dword ptr [rcx], 0x89488aeb ; ret 0xd6eb
0x00000000000d435f : and byte ptr [rcx - 0x7d], cl ; ret
0x000000000009eca9 : and byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x0000000000171c99 : and byte ptr [rcx], al ; add al, al ; add al, -0xd ; call rax
0x0000000000187515 : and byte ptr [rcx], al ; add byte ptr [rax + 0x3b], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000187475 : and byte ptr [rcx], al ; add byte ptr [rax + 0x3b], cl ; cmc ; jmp qword ptr [rcx]
0x00000000000dc390 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000018745d : and byte ptr [rcx], al ; add byte ptr [rax], dh ; cmp esi, ebp ; jmp qword ptr [rcx]
0x000000000016ea28 : and byte ptr [rcx], al ; cld ; inc dword ptr [rax] ; add edi, esp ; jmp rax
0x00000000000dabec : and byte ptr [rcx], al ; enter 0x3948, -9 ; ja 0xdab91 ; pop rbx ; ret
0x000000000017020c : and byte ptr [rcx], bh ; in al, dx ; call rax
0x0000000000171b80 : and byte ptr [rcx], bl ; add dword ptr [rax], eax ; push rax ; ret 0xfff2
0x000000000016e9f8 : and byte ptr [rcx], cl ; cld ; jmp qword ptr [rax]
0x00000000000e83f1 : and byte ptr [rcx], cl ; ror byte ptr [rax + 9], 1 ; lock or rax, rdi ; ret
0x000000000010fc8b : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000b2d18 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], -0x3a ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001708fc : and byte ptr [rdi - 0x13], cl ; call qword ptr [rax]
0x000000000016f400 : and byte ptr [rdi - 4], bh ; call qword ptr [rax + 0x20fffc85]
0x000000000016e4a0 : and byte ptr [rdi - 5], al ; inc dword ptr [rax] ; sti ; jmp rax
0x0000000000162f70 : and byte ptr [rdi - 6], bh ; inc dword ptr [rax] ; jg 0x162f78 ; jmp rax
0x000000000016e9f4 : and byte ptr [rdi], al ; cld ; jmp qword ptr [rax]
0x000000000002cb05 : and byte ptr [rdi], cl ; mov bh, -0x40 ; ret
0x0000000000105ad5 : and byte ptr [rdi], cl ; test ah, ch ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b3276 : and byte ptr [rdi], cl ; test bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xed31
0x0000000000096229 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x0000000000149d00 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000000fefdb : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd108
0x000000000015ff70 : and byte ptr [rdx - 0xd], 0xff ; mov al, 0x62 ; jmp rax
0x000000000017488c : and byte ptr [rdx], 0xfa ; call qword ptr [rax]
0x000000000017017c : and byte ptr [rdx], dh ; in al, dx ; call qword ptr [rax]
0x000000000014789a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017a195 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000002bee : and byte ptr [rsi - 0x32], dh ; clc ; ret
0x0000000000160490 : and byte ptr [rsi - 0x61e6000d], bl ; call qword ptr [rdx]
0x00000000001612c8 : and byte ptr [rsi - 0xb], bh ; call qword ptr [rax]
0x000000000016f108 : and byte ptr [rsi - 4], dl ; call qword ptr [rax + 0x10fffc55]
0x00000000001701cc : and byte ptr [rsi], dh ; in al, dx ; call qword ptr [rax]
0x000000000009b532 : and ch, 0xf ; je 0x9b559 ; add rax, 2 ; ret
0x000000000018a420 : and ch, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000160bf4 : and ch, bl ; hlt ; call qword ptr [rbx]
0x00000000000fc794 : and ch, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000174ffc : and ch, dl ; cli ; call rax
0x000000000009b51d : and cl, 0xf ; je 0x9b545 ; ret
0x000000000018a020 : and cl, ah ; cmc ; jmp qword ptr [rcx]
0x000000000000390a : and cl, ah ; ret
0x0000000000174095 : and cl, bh ; jmp rax
0x0000000000079927 : and cl, bpl ; ret 0xfff6
0x000000000005789f : and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x0000000000029d55 : and cl, byte ptr [rax - 0x7d] ; ret
0x000000000008b200 : and cl, byte ptr [rcx + rcx*4 - 0x30] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000084f7d : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000079928 : and cl, ch ; ret 0xfff6
0x0000000000170f45 : and dh, al ; jmp qword ptr [rax]
0x000000000016e9a0 : and dh, bh ; sti ; jmp rax
0x00000000000e01ed : and dh, bl ; ret
0x000000000016e8b4 : and dh, bl ; sti ; jmp qword ptr [rax]
0x000000000007aae8 : and dh, byte ptr [rdx] ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [rax]
0x00000000001716d5 : and dh, cl ; jmp qword ptr [rax]
0x00000000000855bb : and dh, dh ; ret 0x7504
0x000000000016e8e4 : and dh, dl ; sti ; push rax ; xlatb ; sti ; call rax
0x000000000017bd20 : and dil, bpl ; jmp qword ptr [rax]
0x000000000016e8cc : and dl, bl ; sti ; call qword ptr [rax]
0x000000000016eff8 : and dl, byte ptr [rax - 4] ; call qword ptr [rdx + 0x22fffc4f]
0x0000000000106766 : and dl, byte ptr [rip - 0x76b7fffa] ; ret 0x1be
0x0000000000020c02 : and dword ptr [rax - 0x77], ecx ; ret 0x894c
0x00000000000f0dae : and dword ptr [rax - 0x77], ecx ; ret 0xf66
0x000000000017cbd5 : and dword ptr [rax], eax ; add byte ptr [rax + 0x54], ch ; out dx, eax ; jmp qword ptr [rbx]
0x0000000000177605 : and dword ptr [rax], eax ; add byte ptr [rax - 0x56], bl ; jmp 0x177611
0x000000000017754d : and dword ptr [rax], eax ; add byte ptr [rax - 0x5e], al ; jmp 0x177559
0x0000000000117ff6 : and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000a140 : and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x15
0x000000000004a39e : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000015dc42 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x000000000002283e : and dword ptr [rbx - 0x7cb778fc], ecx ; ret 0x8801
0x000000000006e98f : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000000ec81c : and dword ptr [rbx], ebp ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x0000000000036c5b : and dword ptr [rbx], ebp ; add byte ptr ss:[rax + 0x39], cl ; ret
0x0000000000057265 : and dword ptr [rcx + 0x29], eax ; ret
0x0000000000187575 : and dword ptr [rcx], eax ; add byte ptr [rax], cl ; cmp al, -0xb ; jmp qword ptr [rcx]
0x000000000016101c : and dword ptr [rcx], ecx ; cmc ; jmp rbx
0x0000000000034426 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x0000000000073610 : and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000034588 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000074996 : and dword ptr [rdi], ecx ; mov dh, 0 ; pop rbx ; ret
0x00000000000fc613 : and dword ptr [rdx + rbp], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000015acf9 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000009605b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x000000000015dc41 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000014c8d6 : and eax, 0 ; add bl, dh ; ret
0x000000000002060b : and eax, 0 ; ret
0x00000000000dffe3 : and eax, 0x100f ; ret
0x0000000000072f02 : and eax, 0x200 ; ret
0x00000000000e8244 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x00000000000b84c9 : and eax, 0x2d0 ; ret
0x0000000000083c57 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x000000000002005d : and eax, 0x30 ; call rax
0x000000000002ec9f : and eax, 0x30 ; call rdx
0x000000000002d10c : and eax, 0x30 ; jmp rax
0x000000000002dbf5 : and eax, 0x30 ; mov rdi, r13 ; call rax
0x0000000000040817 : and eax, 0x394d3674 ; ret 0x830f
0x000000000009a1ed : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000009a20d : and eax, 0x3fc00 ; ret
0x0000000000037345 : and eax, 0x3ff ; xor eax, ecx ; ret
0x000000000009a1cc : and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000000e1d57 : and eax, 0x48002bcc ; mov edx, eax ; jmp 0xe1cf5
0x000000000014c647 : and eax, 0x48c57500 ; add esp, 8 ; ret
0x000000000018798d : and eax, 0x4a500001 ; cmc ; jmp qword ptr [rcx]
0x00000000001879a5 : and eax, 0x4a680001 ; cmc ; jmp qword ptr [rcx]
0x00000000001879bd : and eax, 0x4a800001 ; cmc ; jmp qword ptr [rcx]
0x00000000000ff6eb : and eax, 0x5b01002a ; ret
0x000000000007fbf2 : and eax, 0x5c415d5b ; ret
0x000000000014c2b1 : and eax, 0x5c74800 ; ret 0x2528
0x00000000001879ed : and eax, 0x60800001 ; stc ; call qword ptr [rax]
0x000000000002cc12 : and eax, 0x7f ; ret
0x000000000009a240 : and eax, 0x7ff80000 ; ret
0x00000000000331e4 : and eax, 0x80 ; ret
0x000000000003381d : and eax, 0x8000 ; ret
0x00000000000332ab : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000072ed2 : and eax, 0x804 ; ret
0x00000000000ec3a4 : and eax, 0x8948002b ; ret 0x8d48
0x00000000000e452f : and eax, 0x9f0f30ff ; ret 0xe883
0x0000000000177955 : and eax, 0xbd680000 ; jmp 0x177961
0x00000000001779b5 : and eax, 0xbe580000 ; jmp 0x1779c1
0x00000000001779fd : and eax, 0xbeb00000 ; jmp 0x177a09
0x00000000000f4a77 : and eax, 0xc ; cmp eax, 4 ; je 0xf4a88 ; ret
0x00000000000f4c48 : and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000decd4 : and eax, 0xe8ef8948 ; ret
0x00000000000d4a44 : and eax, 0xf ; ret
0x0000000000085437 : and eax, 0xf6000a19 ; ret 0x7540
0x000000000014c8e5 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x00000000000e83b1 : and eax, 0xfffff000 ; or eax, edi ; ret
0x00000000000f8c0d : and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x00000000000f8ba8 : and eax, 0xffffff ; ret
0x0000000000102d63 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000eb5ea : and eax, 1 ; nop dword ptr [rax] ; ret
0x00000000000c07ed : and eax, 1 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002cbc2 : and eax, 1 ; ret
0x00000000000c5420 : and eax, 2 ; add eax, 8 ; ret
0x000000000002ca42 : and eax, 2 ; movzx eax, ax ; ret
0x00000000000c540c : and eax, 2 ; ret
0x0000000000042c5c : and eax, 2 ; sub eax, 1 ; ret
0x000000000002cae2 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002ca02 : and eax, 8 ; movzx eax, ax ; ret
0x00000000000334e4 : and eax, 8 ; ret
0x00000000000fda7a : and eax, dword ptr [rax] ; add bh, dh ; fsubr st(1) ; ret 0xfffd
0x0000000000055f46 : and eax, dword ptr [rax] ; add byte ptr [rax - 0x49f0a206], al ; ret 0x840f
0x000000000018781d : and eax, dword ptr [rcx] ; add byte ptr [rax + 0x42], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000187835 : and eax, dword ptr [rcx] ; add byte ptr [rax + 0x42], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001877b5 : and eax, dword ptr [rcx] ; add byte ptr [rax], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000141fa9 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x000000000002f758 : and eax, dword ptr [rip - 0x387cb700] ; or byte ptr [rax + 1], cl ; ret
0x0000000000033532 : and eax, ecx ; ret
0x0000000000032f05 : and eax, edx ; movq xmm0, rax ; ret
0x0000000000032e32 : and eax, edx ; ret
0x0000000000032f27 : and eax, esi ; movq xmm0, rax ; ret
0x000000000002cddd : and eax, esi ; ret
0x000000000006e990 : and ebp, edi ; pop rbx ; ret
0x000000000017240d : and ebp, esi ; jmp rax
0x00000000000f4a12 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0xf4a25 ; ret
0x00000000000c5557 : and ebx, 8 ; je 0xc54eb ; pop rbx ; ret
0x00000000000c5d0d : and ebx, 8 ; mov r10d, eax ; jmp 0xc5d26
0x0000000000183b61 : and ebx, esi ; call rdi
0x0000000000033a9e : and ebx, esi ; ret
0x0000000000148e15 : and ecx, 0xff ; sub eax, ecx ; ret
0x0000000000148548 : and ecx, 0xffff ; sub eax, ecx ; ret
0x0000000000071330 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000c08ef : and ecx, dword ptr [rax - 0x75] ; adc byte ptr [r8 + 0x39], cl ; ret
0x00000000000e232f : and ecx, dword ptr [rax - 0x7d] ; ret 0x3c01
0x00000000000fb515 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x000000000007761c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x00000000000e3140 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x8440
0x00000000000abe1f : and ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd008
0x000000000002cc22 : and edi, 0xffffff80 ; sete al ; ret
0x00000000000a2445 : and edi, dword ptr [rdi - 0x76b7fff4] ; ret 0xc148
0x0000000000064752 : and edx, 0xffffffff ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000071433 : and edx, 1 ; mov eax, edx ; ret
0x0000000000090238 : and edx, 3 ; mov rax, rdi ; jne 0x90256 ; ret
0x000000000009bfa8 : and edx, 3 ; mov rax, rdi ; jne 0x9bfc6 ; ret
0x0000000000002bd9 : and edx, esp ; bswap ebx ; clc ; ret
0x000000000004450e : and esi, 0xe0837fff ; jg 0x44527 ; ret 0x5488
0x000000000017f931 : and esi, eax ; jmp qword ptr [rax]
0x0000000000020c01 : and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x0000000000034425 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000034587 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000014c8d5 : and rax, 0 ; add bl, dh ; ret
0x000000000014c8e4 : and rax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x0000000000032f04 : and rax, rdx ; movq xmm0, rax ; ret
0x0000000000032f26 : and rax, rsi ; movq xmm0, rax ; ret
0x000000000003326b : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000033268 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x000000000008c48a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000084de0 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000084df0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000084e00 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000084dd0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000084d1f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000008c683 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000085ac5 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x0000000000081b3d : bsf eax, edx ; ret
0x0000000000081caa : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000008c7a0 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000081b8a : bsf rax, rdx ; ret
0x000000000008fe41 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x0000000000083857 : bsr eax, eax ; add rax, rdi ; ret
0x000000000008fd10 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008fd20 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008fd30 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x0000000000083adb : bsr eax, esi ; add rax, rdi ; ret
0x00000000000839e9 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00000000000838e5 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000083856 : bsr rax, rax ; add rax, rdi ; ret
0x0000000000083ada : bsr rax, rsi ; add rax, rdi ; ret
0x00000000000839e8 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00000000000838e4 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000011164d : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000f8b82 : bswap eax ; ret
0x0000000000002bdb : bswap ebx ; clc ; ret
0x000000000010e927 : call 0x10abd2
0x00000000000ba2eb : call 0x110ba2ee
0x000000000017b638 : call 0x1117a54b
0x000000000018ee58 : call 0x1118e56c
0x00000000000f523b : call 0x11d319
0x000000000001fe8f : call 0x11d957
0x0000000000034400 : call 0x140c8c13
0x000000000014bff9 : call 0x14c408
0x0000000000178b28 : call 0x17177719
0x000000000018f3b8 : call 0x1818eaf7
0x00000000000c3150 : call 0x1f432
0x00000000000c31c5 : call 0x1f442
0x00000000000e31bc : call 0x1f4a2
0x0000000000161c60 : call 0x21161306
0x00000000001844e8 : call 0x22183832
0x000000000018a0f8 : call 0x221896e1
0x000000000018a318 : call 0x22189903
0x000000000018a588 : call 0x22189b76
0x000000000017c0e8 : call 0x2317b01a
0x0000000000177808 : call 0x241763c9
0x0000000000027c51 : call 0x2c938
0x000000000003d2cd : call 0x2c939
0x0000000000043ca3 : call 0x44196
0x0000000000072504 : call 0x44c07
0x0000000000116e99 : call 0x48116ea4
0x00000000000f104c : call 0x48d199a1
0x000000000005b07f : call 0x4905b087
0x00000000000c5001 : call 0x4d16c80d
0x0000000000041f75 : call 0x4dc6407f
0x00000000000e3843 : call 0x4fa52
0x0000000000174bf8 : call 0x60174e47
0x00000000000ab6b7 : call 0x67912
0x00000000000fd579 : call 0x69852
0x000000000010d84b : call 0x69ab2
0x000000000010d7ea : call 0x69ce7
0x000000000007e2b3 : call 0x6a4f2
0x00000000000eeed0 : call 0x6d457
0x0000000000052061 : call 0x6e352
0x0000000000069970 : call 0x75c22
0x000000000007bf87 : call 0x78202
0x000000000007cae1 : call 0x78dc2
0x00000000000c8c18 : call 0x84ea2
0x00000000000c8940 : call 0x854f4
0x000000000003bdeb : call 0x88002
0x000000000001fc69 : call 0x9a156
0x000000000006f06b : call 0x9b342
0x000000000006ba80 : call 0xb7cb2
0x00000000000da6b6 : call 0xb84e7
0x00000000000da6e3 : call 0xb8507
0x00000000000bb3f3 : call 0xb9e66
0x00000000001047a2 : call 0xe0a82
0x000000000011a07d : call 0xe4107
0x000000000011bfdf : call 0xe8272
0x000000000001f631 : call 0xeb882
0x000000000001f641 : call 0xeb912
0x00000000000eb5e9 : call 0xf109679
0x00000000000eb868 : call 0xf1098f9
0x00000000000eb9c0 : call 0xf109a51
0x00000000000eba50 : call 0xf109ae1
0x00000000000ebae0 : call 0xf109b71
0x00000000000ebb60 : call 0xf109bf1
0x00000000000ebbf0 : call 0xf109c81
0x00000000000ebc70 : call 0xf109d01
0x00000000000ebd00 : call 0xf109d91
0x00000000000ebd90 : call 0xf109e21
0x00000000000ebe20 : call 0xf109eb1
0x00000000000ebeb0 : call 0xf109f41
0x00000000000ebfd0 : call 0xf10a061
0x00000000000ec188 : call 0xf10a219
0x00000000000f5370 : call 0xf5218
0x0000000000112b4a : call 0xffffffff80d42262
0x00000000000202b5 : call 0xffffffff834a02fa
0x0000000000100222 : call 0xffffffff83580257
0x000000000010ff1c : call 0xffffffff8959c1ac
0x000000000015b763 : call 0xffffffffaed855d9
0x0000000000170d98 : call 0xffffffffc0170e66
0x00000000000a81cf : call 0xffffffffc233c2f7
0x00000000000a7c36 : call 0xffffffffc233c57e
0x000000000007bb0f : call 0xffffffffc2410420
0x00000000000420ab : call 0xffffffffc28d61d3
0x000000000007b108 : call 0xffffffffc290f921
0x00000000000ac99a : call 0xffffffffc29411a5
0x000000000010d3ff : call 0xffffffffc29a1c18
0x0000000000095e94 : call 0xffffffffc3095ea4
0x0000000000099df6 : call 0xffffffffc3162b4c
0x0000000000099e0f : call 0xffffffffc3162b65
0x0000000000170d9d : call 0xffffffffc3280d95
0x00000000000dbcb9 : call 0xffffffffc352cc0a
0x000000000009c72c : call 0xffffffffc3660892
0x0000000000144d65 : call 0xffffffffc39a5c7e
0x0000000000145de5 : call 0xffffffffc39a6cfe
0x0000000000085c07 : call 0xffffffffc3d8e558
0x000000000007fe47 : call 0xffffffffc4008798
0x0000000000081647 : call 0xffffffffc4009f98
0x0000000000173e60 : call 0xffffffffd0174051
0x0000000000179288 : call 0xffffffffd8177ed7
0x000000000017a1f8 : call 0xffffffffd8178f4c
0x0000000000173eb0 : call 0xffffffffe01740a4
0x00000000000335c7 : call 0xffffffffe284f857
0x0000000000181058 : call 0xffffffffe41801cf
0x0000000000059519 : call 0xfffffffffa899526
0x00000000000506d3 : call qword ptr [r11 + rax*8]
0x000000000007862f : call qword ptr [r14]
0x00000000000b9e37 : call qword ptr [r15]
0x00000000001612d3 : call qword ptr [rax + 0x10fff57e]
0x000000000016e503 : call qword ptr [rax + 0x10fffb72]
0x000000000016e50b : call qword ptr [rax + 0x10fffb75]
0x000000000016e513 : call qword ptr [rax + 0x10fffb78]
0x000000000016e51b : call qword ptr [rax + 0x10fffb7b]
0x000000000016e523 : call qword ptr [rax + 0x10fffb7e]
0x000000000016e52b : call qword ptr [rax + 0x10fffb81]
0x000000000016e533 : call qword ptr [rax + 0x10fffb84]
0x000000000016f1c3 : call qword ptr [rax + 0x10fffc33]
0x000000000016f187 : call qword ptr [rax + 0x10fffc34]
0x000000000016f1cb : call qword ptr [rax + 0x10fffc36]
0x000000000016f18f : call qword ptr [rax + 0x10fffc37]
0x000000000016f1d3 : call qword ptr [rax + 0x10fffc39]
0x000000000016f197 : call qword ptr [rax + 0x10fffc3a]
0x000000000016f1db : call qword ptr [rax + 0x10fffc3c]
0x000000000016f19f : call qword ptr [rax + 0x10fffc3d]
0x000000000016f1e3 : call qword ptr [rax + 0x10fffc3f]
0x000000000016f1a7 : call qword ptr [rax + 0x10fffc40]
0x000000000016f1eb : call qword ptr [rax + 0x10fffc42]
0x000000000016f1af : call qword ptr [rax + 0x10fffc43]
0x000000000016f1f3 : call qword ptr [rax + 0x10fffc45]
0x000000000016f1b7 : call qword ptr [rax + 0x10fffc46]
0x000000000016f12b : call qword ptr [rax + 0x10fffc51]
0x000000000016f123 : call qword ptr [rax + 0x10fffc52]
0x000000000016f11b : call qword ptr [rax + 0x10fffc53]
0x000000000016f113 : call qword ptr [rax + 0x10fffc54]
0x000000000016f10b : call qword ptr [rax + 0x10fffc55]
0x000000000016f143 : call qword ptr [rax + 0x10fffc56]
0x000000000016fb03 : call qword ptr [rax + 0x10fffca2]
0x000000000015f97f : call qword ptr [rax + 0x20fff099]
0x000000000016e99b : call qword ptr [rax + 0x20fffc0b]
0x000000000016ef17 : call qword ptr [rax + 0x20fffc5d]
0x000000000016f22b : call qword ptr [rax + 0x20fffc81]
0x000000000016f403 : call qword ptr [rax + 0x20fffc85]
0x000000000016f723 : call qword ptr [rax + 0x20fffca8]
0x000000000016e667 : call qword ptr [rax + 0x20fffda4]
0x000000000016fc5f : call qword ptr [rax + 0x360000a8]
0x0000000000171ab7 : call qword ptr [rax + 0x40000114]
0x0000000000172b1f : call qword ptr [rax + 0x50000180]
0x000000000005afee : call qword ptr [rax + 0x8c28348]
0x00000000000f6f49 : call qword ptr [rax - 0x18]
0x000000000016ece3 : call qword ptr [rax - 0x1f0003e6]
0x000000000016ec8f : call qword ptr [rax - 0x1f0003ed]
0x000000000016eb17 : call qword ptr [rax - 0x1f000412]
0x000000000016eac3 : call qword ptr [rax - 0x1f000419]
0x000000000016e937 : call qword ptr [rax - 0x1f000430]
0x000000000016e94b : call qword ptr [rax - 0x1f00043e]
0x000000000016e4f3 : call qword ptr [rax - 0x1f000495]
0x000000000015fc93 : call qword ptr [rax - 0x1f000d78]
0x000000000015fe67 : call qword ptr [rax - 0x2f000221]
0x000000000015fe57 : call qword ptr [rax - 0x2f00022a]
0x000000000015fe47 : call qword ptr [rax - 0x2f000233]
0x000000000015f12f : call qword ptr [rax - 0x2f000f6c]
0x0000000000032fac : call qword ptr [rax - 0x3d]
0x000000000015fd8b : call qword ptr [rax - 0x4f000380]
0x000000000015fdbb : call qword ptr [rax - 0x5f000384]
0x000000000015ff93 : call qword ptr [rax]
0x0000000000162843 : call qword ptr [rbx + 0x12fff758]
0x00000000000506d4 : call qword ptr [rbx + rax*8]
0x000000000016284b : call qword ptr [rbx - 0x290008a8]
0x000000000014c6ae : call qword ptr [rbx]
0x000000000005c457 : call qword ptr [rcx]
0x000000000015e477 : call qword ptr [rdi + 0x27ffffe3]
0x00000000000b9e38 : call qword ptr [rdi]
0x000000000016f4eb : call qword ptr [rdx + 0x12fffc77]
0x000000000016f4e3 : call qword ptr [rdx + 0x12fffc78]
0x000000000016f4db : call qword ptr [rdx + 0x12fffc79]
0x000000000016f4d3 : call qword ptr [rdx + 0x12fffc7a]
0x000000000016f4cb : call qword ptr [rdx + 0x12fffc7b]
0x000000000015e723 : call qword ptr [rdx + 0x16fffffb]
0x000000000016effb : call qword ptr [rdx + 0x22fffc4f]
0x000000000016edeb : call qword ptr [rdx + 0x22fffc5b]
0x000000000016f2d7 : call qword ptr [rdx + 0x22fffc83]
0x000000000016f7cf : call qword ptr [rdx + 0x22fffcaa]
0x00000000001609c7 : call qword ptr [rdx - 0x2b000b4c]
0x000000000003d2d6 : call qword ptr [rdx]
0x000000000015e70f : call qword ptr [rip - 0x1b000006]
0x000000000016ed47 : call qword ptr [rsi + 0x26fffc5f]
0x000000000016f273 : call qword ptr [rsi + 0x26fffc80]
0x000000000016f76b : call qword ptr [rsi + 0x26fffca7]
0x0000000000078630 : call qword ptr [rsi]
0x000000000015ffcd : call qword ptr fs:[rax]
0x0000000000029309 : call r12
0x000000000002181c : call r14
0x0000000000023ca8 : call r15
0x00000000000f4282 : call r8
0x000000000010c60b : call rax
0x00000000000236eb : call rbx
0x000000000016e59f : call rcx
0x0000000000023ca9 : call rdi
0x0000000000020fa1 : call rdx
0x000000000002181d : call rsi
0x000000000002930a : call rsp
0x000000000015fddd : cdq ; cld ; jmp qword ptr [rax]
0x00000000001864e9 : cdq ; hlt ; call rcx
0x0000000000036a54 : cdq ; idiv rsi ; ret
0x000000000015d4a0 : cdq ; in eax, -1 ; lahf ; mov dh, -0x39 ; ret 0xe71f
0x000000000015fa55 : cdq ; lock push qword ptr [rdx + rbx*4 - 0x10] ; call rsp
0x0000000000161e5c : cdq ; lodsb al, byte ptr [rsi] ; idiv bh ; ret
0x000000000007380a : cdq ; mov edx, eax ; jmp 0x737a9
0x00000000000625c3 : cdq ; ret
0x00000000000ea0ce : cdq ; rol byte ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000036ae3 : cdq ; sub al, 0x36 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000dfebe : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000749f0 : cdqe ; ret
0x0000000000103add : cdqe ; shr rax, 4 ; ret
0x0000000000175270 : clc ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x38], dl ; cld ; call qword ptr [rax]
0x000000000009db10 : clc ; adc esi, dword ptr [rsp + rcx - 0x77] ; ret 0xc8eb
0x0000000000068484 : clc ; add al, 0xf ; xchg eax, esp ; ret 0xd108
0x0000000000174b18 : clc ; add al, byte ptr ds:[rax] ; loopne 0x174b7a ; cli ; call qword ptr [rax]
0x000000000004c075 : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000532ac : clc ; add cl, byte ptr [rax + 0x39] ; ret 0x237f
0x00000000000532e5 : clc ; add cl, byte ptr [rax - 9] ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000000d3ee9 : clc ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x000000000008bc43 : clc ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000174101 : clc ; add dword ptr [rax], eax ; lock xor bh, cl ; call qword ptr [rax]
0x00000000001740f9 : clc ; add dword ptr [rax], eax ; xor dil, cl ; call rax
0x0000000000031c20 : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000008cd2b : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000099eb3 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x0000000000171ff0 : clc ; add dword ptr ss:[rax], eax ; push rax ; cmp esi, esp ; call qword ptr [rax]
0x0000000000102d65 : clc ; add eax, 0x10 ; ret
0x00000000000abba8 : clc ; add eax, 0x2907f9c1 ; ret 0xf089
0x0000000000031350 : clc ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x854d
0x000000000010b281 : clc ; add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x00000000000c1ffe : clc ; add esi, dword ptr [rsi + rax - 0xd] ; ret
0x000000000008fe46 : clc ; add rax, r8 ; ret
0x0000000000084ba8 : clc ; add rax, rcx ; ret
0x00000000000f5ca2 : clc ; add rsp, 8 ; ret
0x00000000000bda42 : clc ; and al, 0xf ; xchg eax, esp ; ret 0xca09
0x00000000000fefda : clc ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd108
0x000000000002cc11 : clc ; and eax, 0x7f ; ret
0x00000000000f8ba7 : clc ; and eax, 0xffffff ; ret
0x00000000000f8b81 : clc ; bswap eax ; ret
0x00000000001739ae : clc ; call qword ptr [rax]
0x000000000019303a : clc ; call qword ptr [rbx]
0x0000000000193022 : clc ; call qword ptr [rcx]
0x0000000000195522 : clc ; call qword ptr [rdi]
0x000000000019347a : clc ; call qword ptr [rdx]
0x0000000000193db2 : clc ; call qword ptr [rsi]
0x0000000000173906 : clc ; call rax
0x0000000000195642 : clc ; call rcx
0x0000000000195692 : clc ; call rdi
0x0000000000102bb1 : clc ; cmc ; je 0x102bad ; pop rbx ; ret
0x0000000000187bf8 : clc ; cmc ; jmp qword ptr [rcx]
0x000000000004491b : clc ; cmovae rax, rsi ; ret
0x0000000000038157 : clc ; cmovne eax, ecx ; add rsp, 8 ; ret
0x0000000000003aa2 : clc ; cmp eax, ecx ; mov bl, -9 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000148db9 : clc ; cmp rcx, rax ; jne 0x148deb ; xor eax, eax ; ret
0x0000000000148db8 : clc ; cmp rcx, rax ; jne 0x148dec ; xor eax, eax ; ret
0x0000000000149bf9 : clc ; cmp rcx, rax ; jne 0x149c2b ; xor eax, eax ; ret
0x0000000000149bf8 : clc ; cmp rcx, rax ; jne 0x149c2c ; xor eax, eax ; ret
0x0000000000036a52 : clc ; cqo ; idiv rsi ; ret
0x000000000007e700 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000074458 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000102c1d : clc ; dec dword ptr [rax - 0x75] ; add byte ptr [r8 + 1], r9b ; ret
0x00000000000a23c5 : clc ; dec dword ptr [rax - 0x77] ; jmp 0xa241a
0x000000000002c87d : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000007ac8c : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000017396e : clc ; dec dword ptr [rax] ; leave ; add dword ptr [rax], eax ; nop ; clc ; jmp qword ptr [rax]
0x0000000000173846 : clc ; dec dword ptr [rax] ; ret 1
0x0000000000173c3e : clc ; dec dword ptr [rax] ; xlatb ; add dword ptr [rax], eax ; nop ; jns 0x173c48 ; jmp qword ptr [rax]
0x00000000000a6372 : clc ; dec dword ptr [rcx + 0xf] ; ret
0x0000000000058132 : clc ; dec dword ptr [rcx - 0x76478a3e] ; ret
0x00000000000493dc : clc ; dec dword ptr [rcx - 0x77] ; ror dword ptr [rdi], -0x7c ; cmc ; ret
0x0000000000040a91 : clc ; dec dword ptr [rdi] ; ret 0x8341
0x0000000000071a19 : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000173c9e : clc ; dec eax ; fld dword ptr [rcx] ; add byte ptr [rax - 0x7c], dh ; clc ; jmp rax
0x000000000015fd10 : clc ; div edx ; jmp qword ptr [rax]
0x0000000000171110 : clc ; fadd dword ptr [rax] ; add al, dl ; lock ; call qword ptr [rax]
0x0000000000173d88 : clc ; fld qword ptr [rcx] ; add byte ptr [rax], al ; nop ; clc ; call qword ptr [rax]
0x0000000000173ec6 : clc ; inc dword ptr [rax + 0x1e9] ; retf ; clc ; call rax
0x000000000005addf : clc ; inc dword ptr [rcx - 0x77] ; ret 0x1875
0x000000000005d8cf : clc ; inc dword ptr [rcx - 0x77] ; ret 0x5e75
0x00000000000bd4a0 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x7274
0x0000000000055fc1 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x850f
0x000000000005768e : clc ; inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000005de72 : clc ; inc dword ptr [rcx - 0x77] ; ret 0xd75
0x0000000000173ae8 : clc ; iretd ; add dword ptr [rax], eax ; nop ; pop rsi ; clc ; call qword ptr [rax]
0x0000000000170268 : clc ; jge 0x170272 ; add al, dl ; cmp al, -0x14 ; call qword ptr [rax]
0x0000000000173976 : clc ; jmp qword ptr [rax]
0x0000000000194102 : clc ; jmp qword ptr [rbx]
0x0000000000193e9a : clc ; jmp qword ptr [rcx]
0x000000000019587a : clc ; jmp qword ptr [rsi]
0x0000000000173876 : clc ; jmp rax
0x000000000014bbda : clc ; jne 0x14bce7 ; ret
0x000000000014bbd9 : clc ; jne 0x14bce8 ; ret
0x00000000000346d4 : clc ; jne 0x346d0 ; mov eax, 1 ; ret
0x00000000000405e1 : clc ; jne 0x405bc ; ret
0x000000000008a817 : clc ; jne 0x8a6f1 ; ret
0x000000000009023d : clc ; jne 0x90251 ; ret
0x000000000009bfad : clc ; jne 0x9bfc1 ; ret
0x00000000001701c8 : clc ; jnp 0x1701d2 ; add byte ptr [rax], ah ; in al, dx ; call qword ptr [rax]
0x0000000000190138 : clc ; jo 0x190135 ; jmp qword ptr [rcx]
0x000000000009e33f : clc ; jo 0x9e355 ; xchg eax, esp ; ret
0x00000000000a093e : clc ; jo 0xa0954 ; xchg eax, esp ; ret
0x00000000000a2dcf : clc ; jo 0xa2de5 ; xchg eax, esp ; ret
0x0000000000170178 : clc ; jp 0x170182 ; add byte ptr [rax], ah ; xor ch, ah ; call qword ptr [rax]
0x00000000000f4fd4 : clc ; ljmp 0x3b8, 0xf00 ; ret 0x90c3
0x0000000000173dde : clc ; ljmp ptr [rax + 0x600001e1] ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; call rax
0x0000000000173e86 : clc ; ljmp ptr [rax - 0x19] ; add dword ptr [rax], eax ; jo 0x173e58 ; clc ; call rax
0x0000000000173e16 : clc ; ljmp ptr [rax - 0x1ffffe1d] ; lodsd eax, dword ptr [rsi] ; clc ; call rax
0x0000000000192818 : clc ; loop 0x192815 ; jmp qword ptr [rax]
0x000000000008f638 : clc ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000015c102 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000170570 : clc ; mov dword ptr [rax], es ; add al, ah ; jae 0x17056a ; call qword ptr [rax]
0x000000000005a994 : clc ; mov eax, 0xf8830001 ; inc dword ptr [rcx - 0x77] ; ret 0x850f
0x000000000012bdb7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000012c727 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000134027 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012c927 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133f97 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012cb27 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133f07 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012bdd3 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000444f2 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000020b1c : clc ; neg eax ; ret
0x000000000009bd1c : clc ; nop dword ptr [rax] ; ret
0x00000000000eb951 : clc ; nop word ptr [rax + rax] ; ret
0x000000000009be4a : clc ; or al, byte ptr [rax] ; ret
0x000000000010b342 : clc ; or byte ptr [rbp + rcx*4 + 0x48], cl ; or byte ptr [rbp - 0x77], al ; ret 0x8b48
0x0000000000173f78 : clc ; out dx, al ; add dword ptr [rax], eax ; adc ch, ch ; clc ; call qword ptr [rax]
0x000000000016ff10 : clc ; outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; ror dl, 1 ; jmp 0x16ff1e
0x0000000000174f88 : clc ; pop rax ; add al, byte ptr [rax] ; add bh, cl ; cli ; call qword ptr [rax]
0x000000000002d5e4 : clc ; pop rbp ; pop r12 ; ret
0x00000000000321dc : clc ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000006e4b4 : clc ; push qword ptr [rax + rcx + 0x5b] ; ret
0x0000000000173f96 : clc ; push qword ptr [rax - 0x11] ; add dword ptr [rax], eax ; jo 0x173f9a ; clc ; call rax
0x0000000000173fbe : clc ; push qword ptr [rax - 0x1ffffe10] ; cli ; clc ; call rax
0x000000000017399e : clc ; push qword ptr [rax - 0x4ffffe37] ; clc ; jmp rax
0x00000000000702ca : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000011c58f : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00000000000b3d1d : clc ; push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x0000000000042cb5 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x00000000000769b0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x000000000006e98b : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000069b31 : clc ; push qword ptr [rbx + rbp*4 - 0x77] ; ret 0xe283
0x0000000000076411 : clc ; push qword ptr [rbx + rcx + 0x5b] ; ret
0x0000000000174e28 : clc ; push rax ; add al, byte ptr [rax] ; loopne 0x174ddd ; cli ; call qword ptr [rax]
0x0000000000173d16 : clc ; push rax ; fild dword ptr [rcx] ; add byte ptr [rax - 0x75], dl ; clc ; call qword ptr [rax]
0x000000000017385e : clc ; push rax ; ret 1
0x0000000000002bb1 : clc ; ret
0x000000000001cea8 : clc ; ret 0x39
0x000000000016d7b2 : clc ; ret 0x6e1f
0x00000000000629f4 : clc ; ret 0xffff
0x00000000000f8b91 : clc ; ror ax, 8 ; ret
0x00000000000369e3 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000f886b : clc ; sar rax, 6 ; ret
0x00000000000431da : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000f8c27 : clc ; shr eax, 0x18 ; ret
0x00000000001810e8 : clc ; sub edx, edi ; jmp qword ptr [rdi]
0x000000000018b8c8 : clc ; sub esi, esi ; call rdi
0x000000000007ce83 : clc ; sub rax, 0x10 ; add rsp, 8 ; ret
0x00000000001239fc : clc ; sub rax, r8 ; ret
0x0000000000123c51 : clc ; sub rax, rdx ; ret
0x0000000000171f10 : clc ; xor dword ptr [rcx], eax ; add al, dh ; mov bh, -0xd ; call qword ptr [rax]
0x0000000000176618 : clc ; xor ebp, ebx ; call qword ptr [rdx]
0x00000000001036ba : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000184734 : cld ; add byte ptr [rax], al ; cmp byte ptr [rbp - 0xd], dl ; call qword ptr [rax]
0x00000000000b8cf2 : cld ; add byte ptr [rax], al ; ret
0x00000000001741b1 : cld ; add dword ptr [rax], eax ; lock stc ; jmp qword ptr [rax]
0x00000000000413b7 : cld ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xca38
0x0000000000187b34 : cld ; add dword ptr es:[rax], eax ; or byte ptr [rdi - 0xb], cl ; jmp qword ptr [rcx]
0x000000000009a1ef : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000009a20f : cld ; add eax, dword ptr [rax] ; ret
0x000000000018a434 : cld ; add qword ptr [r8], r8 ; cmp ch, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000187834 : cld ; and eax, dword ptr [rcx] ; add byte ptr [rax + 0x42], bh ; cmc ; jmp qword ptr [rcx]
0x000000000014c8d4 : cld ; and rax, 0 ; add bl, dh ; ret
0x000000000016f1c2 : cld ; call qword ptr [rax + 0x10fffc33]
0x000000000016f186 : cld ; call qword ptr [rax + 0x10fffc34]
0x000000000016f1ca : cld ; call qword ptr [rax + 0x10fffc36]
0x000000000016f18e : cld ; call qword ptr [rax + 0x10fffc37]
0x000000000016f1d2 : cld ; call qword ptr [rax + 0x10fffc39]
0x000000000016f196 : cld ; call qword ptr [rax + 0x10fffc3a]
0x000000000016f1da : cld ; call qword ptr [rax + 0x10fffc3c]
0x000000000016f19e : cld ; call qword ptr [rax + 0x10fffc3d]
0x000000000016f1e2 : cld ; call qword ptr [rax + 0x10fffc3f]
0x000000000016f1a6 : cld ; call qword ptr [rax + 0x10fffc40]
0x000000000016f1ea : cld ; call qword ptr [rax + 0x10fffc42]
0x000000000016f1ae : cld ; call qword ptr [rax + 0x10fffc43]
0x000000000016f1f2 : cld ; call qword ptr [rax + 0x10fffc45]
0x000000000016f1b6 : cld ; call qword ptr [rax + 0x10fffc46]
0x000000000016f12a : cld ; call qword ptr [rax + 0x10fffc51]
0x000000000016f122 : cld ; call qword ptr [rax + 0x10fffc52]
0x000000000016f11a : cld ; call qword ptr [rax + 0x10fffc53]
0x000000000016f112 : cld ; call qword ptr [rax + 0x10fffc54]
0x000000000016f10a : cld ; call qword ptr [rax + 0x10fffc55]
0x000000000016f142 : cld ; call qword ptr [rax + 0x10fffc56]
0x000000000016fb02 : cld ; call qword ptr [rax + 0x10fffca2]
0x000000000016e99a : cld ; call qword ptr [rax + 0x20fffc0b]
0x000000000016ef16 : cld ; call qword ptr [rax + 0x20fffc5d]
0x000000000016f22a : cld ; call qword ptr [rax + 0x20fffc81]
0x000000000016f402 : cld ; call qword ptr [rax + 0x20fffc85]
0x000000000016f722 : cld ; call qword ptr [rax + 0x20fffca8]
0x000000000016ece2 : cld ; call qword ptr [rax - 0x1f0003e6]
0x000000000016ec8e : cld ; call qword ptr [rax - 0x1f0003ed]
0x000000000015fd8a : cld ; call qword ptr [rax - 0x4f000380]
0x000000000015fdba : cld ; call qword ptr [rax - 0x5f000384]
0x000000000015fd9a : cld ; call qword ptr [rax]
0x000000000016f4ea : cld ; call qword ptr [rdx + 0x12fffc77]
0x000000000016f4e2 : cld ; call qword ptr [rdx + 0x12fffc78]
0x000000000016f4da : cld ; call qword ptr [rdx + 0x12fffc79]
0x000000000016f4d2 : cld ; call qword ptr [rdx + 0x12fffc7a]
0x000000000016f4ca : cld ; call qword ptr [rdx + 0x12fffc7b]
0x000000000016effa : cld ; call qword ptr [rdx + 0x22fffc4f]
0x000000000016edea : cld ; call qword ptr [rdx + 0x22fffc5b]
0x000000000016f2d6 : cld ; call qword ptr [rdx + 0x22fffc83]
0x000000000016f7ce : cld ; call qword ptr [rdx + 0x22fffcaa]
0x000000000016edca : cld ; call qword ptr [rdx]
0x000000000016ed46 : cld ; call qword ptr [rsi + 0x26fffc5f]
0x000000000016f272 : cld ; call qword ptr [rsi + 0x26fffc80]
0x000000000016f76a : cld ; call qword ptr [rsi + 0x26fffca7]
0x000000000016ed66 : cld ; call qword ptr [rsi]
0x000000000016ecf2 : cld ; call rax
0x000000000016edfa : cld ; call rdx
0x000000000016ed56 : cld ; call rsi
0x000000000016ee82 : cld ; call rsp
0x000000000014bcd2 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x14bce8 ; xor eax, eax ; ret
0x000000000014bcd1 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x14bce9 ; xor eax, eax ; ret
0x00000000000c257c : cld ; cmp esi, dword ptr [rdi + 4] ; jl 0xc2577 ; ret
0x000000000011a080 : cld ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000b91c0 : cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bae42 : cld ; dec dword ptr [rax - 0x77] ; ret 0x1deb
0x0000000000119b00 : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000017525e : cld ; dec eax ; adc al, byte ptr [rcx] ; add byte ptr [rax], al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp rax
0x000000000016f7ba : cld ; dec esp ; movsd dword ptr [rdi], dword ptr [rsi] ; cld ; push qword ptr [rdx - 0x5b] ; cld ; jmp rdx
0x0000000000193034 : cld ; fild dword ptr [rcx] ; add byte ptr [rax], bh ; clc ; call qword ptr [rbx]
0x00000000000336c7 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x000000000016eb7a : cld ; inc dword ptr [rax + 0x10fffc33] ; cld ; call rax
0x000000000016ec8a : cld ; inc dword ptr [rax + 0x12] ; cld ; call qword ptr [rax - 0x1f0003ed]
0x000000000016ecde : cld ; inc dword ptr [rax + 0x19] ; cld ; call qword ptr [rax - 0x1f0003e6]
0x000000000016ec62 : cld ; inc dword ptr [rax + 0x26] ; cld ; call qword ptr [rax]
0x000000000016ebca : cld ; inc dword ptr [rax + 0x2b] ; cld ; jmp qword ptr [rax]
0x000000000016ec36 : cld ; inc dword ptr [rax + 0x30] ; cld ; inc dword ptr [rax + 0x32] ; cld ; call rax
0x000000000016ec3a : cld ; inc dword ptr [rax + 0x32] ; cld ; call rax
0x000000000016ef22 : cld ; inc dword ptr [rax + 0x5c] ; cld ; call rax
0x000000000016ed0a : cld ; inc dword ptr [rax + 0x5f] ; cld ; call rax
0x000000000016ecbe : cld ; inc dword ptr [rax + 0xd] ; cld ; call qword ptr [rax]
0x000000000016e9ee : cld ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x000000000016f8a2 : cld ; inc dword ptr [rax + rbp*4 - 4] ; call rsp
0x000000000016ec9a : cld ; inc dword ptr [rax - 0x2f0003e9] ; sbb ah, bh ; jmp qword ptr [rax]
0x000000000016f906 : cld ; inc dword ptr [rax - 0x55] ; cld ; call rax
0x000000000016f72e : cld ; inc dword ptr [rax - 0x59] ; cld ; call rax
0x000000000016f40e : cld ; inc dword ptr [rax - 0x7c] ; cld ; call rax
0x000000000016eb76 : cld ; inc dword ptr [rax - 0x7f0003cf] ; xor edi, esp ; call qword ptr [rax]
0x000000000016ec16 : cld ; inc dword ptr [rax - 0x7f0003d0] ; xor bh, ah ; call qword ptr [rax]
0x000000000016f236 : cld ; inc dword ptr [rax - 0x80] ; cld ; call rax
0x000000000016ea2a : cld ; inc dword ptr [rax] ; add edi, esp ; jmp rax
0x000000000016ecba : cld ; inc dword ptr [rax] ; and bh, ah ; inc dword ptr [rax + 0xd] ; cld ; call qword ptr [rax]
0x000000000016ef12 : cld ; inc dword ptr [rax] ; pop rsi ; cld ; call qword ptr [rax + 0x20fffc5d]
0x000000000016fb2e : cld ; inc dword ptr [rax] ; popfq ; cld ; push qword ptr [rax - 0x64] ; cld ; jmp rax
0x000000000016f16e : cld ; inc dword ptr [rax] ; push rcx ; cld ; push qword ptr [rax + 0x50] ; cld ; jmp rax
0x000000000015fde6 : cld ; inc dword ptr [rax] ; sahf ; cld ; push qword ptr [rax - 0x61] ; cld ; jmp rax
0x000000000016eb42 : cld ; inc dword ptr [rax] ; sub ah, bh ; jmp rax
0x000000000016f71e : cld ; inc dword ptr [rax] ; test eax, 0xa890fffc ; cld ; jmp qword ptr [rax]
0x000000000016f5ba : cld ; inc dword ptr [rbp + rsi*2 - 4] ; call rsp
0x000000000009a2a7 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000009a1ce : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x000000000016f3aa : cld ; inc dword ptr [rcx + rax*4 - 4] ; call rsp
0x0000000000101a65 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x000000000016edf6 : cld ; inc dword ptr [rdx + 0x5a] ; cld ; call rdx
0x000000000016f7da : cld ; inc dword ptr [rdx - 0x57] ; cld ; call rdx
0x000000000016f2e2 : cld ; inc dword ptr [rdx - 0x7e] ; cld ; call rdx
0x000000000016ede6 : cld ; inc dword ptr [rdx] ; pop rsp ; cld ; call qword ptr [rdx + 0x22fffc5b]
0x000000000016f7ca : cld ; inc dword ptr [rdx] ; stosd dword ptr [rdi], eax ; cld ; call qword ptr [rdx + 0x22fffcaa]
0x000000000016f2d2 : cld ; inc dword ptr [rdx] ; test bh, ah ; call qword ptr [rdx + 0x22fffc83]
0x000000000016ed52 : cld ; inc dword ptr [rsi + 0x5e] ; cld ; call rsi
0x000000000016f776 : cld ; inc dword ptr [rsi - 0x5a] ; cld ; call rsi
0x000000000016f26e : cld ; inc dword ptr [rsi] ; cmp esp, 0xfc8096ff ; jmp qword ptr [rsi]
0x000000000016f766 : cld ; inc dword ptr [rsi] ; test al, -4 ; call qword ptr [rsi + 0x26fffca7]
0x000000000016f67e : cld ; inc eax ; push rdi ; cld ; jmp rax
0x000000000016ecaa : cld ; inc eax ; sbb al, -4 ; call qword ptr [rax]
0x000000000016f756 : cld ; inc esi ; test eax, 0xa956fffc ; cld ; jmp rsi
0x000000000016f4c0 : cld ; je 0x16f4c6 ; jmp qword ptr [rdx + 0x22fffc7c]
0x000000000015fdbe : cld ; jmp qword ptr [rax + 0x10fffc8f]
0x000000000016f102 : cld ; jmp qword ptr [rax + 0x20fffc56]
0x000000000015fdde : cld ; jmp qword ptr [rax]
0x0000000000182692 : cld ; jmp qword ptr [rbx]
0x000000000016f9f2 : cld ; jmp qword ptr [rdx + 0x12fffc9c]
0x000000000016f4c2 : cld ; jmp qword ptr [rdx + 0x22fffc7c]
0x000000000016edee : cld ; jmp qword ptr [rdx]
0x000000000016ed4a : cld ; jmp qword ptr [rsi]
0x000000000015fdee : cld ; jmp rax
0x000000000016edde : cld ; jmp rdx
0x000000000016ed7a : cld ; jmp rsi
0x000000000016eea6 : cld ; jmp rsp
0x0000000000149a06 : cld ; jne 0x149c3f ; xor eax, eax ; ret
0x000000000014bcd5 : cld ; jne 0x14bce5 ; xor eax, eax ; ret
0x000000000014bcd4 : cld ; jne 0x14bce6 ; xor eax, eax ; ret
0x000000000014bbf5 : cld ; jne 0x14bce7 ; ret
0x000000000014bbf4 : cld ; jne 0x14bce8 ; ret
0x00000000000c30d7 : cld ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000016efba : cld ; lcall ptr [rdi + rcx*2 + 0x4f2cfffc] ; cld ; call rdx
0x000000000016efbe : cld ; ljmp ptr [rdi + rcx*2] ; cld ; call rdx
0x0000000000190134 : cld ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; jo 0x190139 ; jmp qword ptr [rcx]
0x000000000012c542 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012c745 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c945 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012cb45 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000181434 : cld ; mov edi, 0xa3280000 ; int1 ; jmp rsi
0x0000000000180f34 : cld ; mov edx, 0xb5380000 ; sti ; call qword ptr [rax]
0x0000000000126f08 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000012c176 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001341b6 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c356 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000134136 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c536 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001340b6 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012bf96 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000134236 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000008f521 : cld ; mov rax, rdi ; ret
0x00000000000444ac : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000008a6bd : cld ; or dword ptr [rax], eax ; ret
0x000000000016eca6 : cld ; push qword ptr [rax + 0x1b] ; cld ; inc eax ; sbb al, -4 ; call qword ptr [rax]
0x000000000016ef1e : cld ; push qword ptr [rax + 0x40fffc5c] ; pop rsp ; cld ; call rax
0x000000000016ed06 : cld ; push qword ptr [rax + 0x40fffc5f] ; pop rdi ; cld ; call rax
0x000000000016f40a : cld ; push qword ptr [rax + 0x40fffc84] ; test bh, ah ; call rax
0x000000000016f72a : cld ; push qword ptr [rax + 0x40fffca7] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call rax
0x000000000016f902 : cld ; push qword ptr [rax + 0x40fffcab] ; stosd dword ptr [rdi], eax ; cld ; call rax
0x000000000016f172 : cld ; push qword ptr [rax + 0x50] ; cld ; jmp rax
0x000000000016ef6e : cld ; push qword ptr [rax + 0x51] ; cld ; jmp rax
0x000000000016f43a : cld ; push qword ptr [rax + 0x7f] ; cld ; call qword ptr [rax]
0x000000000016f89e : cld ; push qword ptr [rax + rbp*4 - 0x57bb0004] ; cld ; call rsp
0x000000000016f946 : cld ; push qword ptr [rax - 0x5e] ; cld ; jmp rax
0x000000000015fdea : cld ; push qword ptr [rax - 0x61] ; cld ; jmp rax
0x000000000016fb32 : cld ; push qword ptr [rax - 0x64] ; cld ; jmp rax
0x000000000016ea8a : cld ; push qword ptr [rax] ; add bh, ah ; jmp qword ptr [rax]
0x000000000016ea0a : cld ; push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x000000000016ecea : cld ; push qword ptr [rax] ; sbb eax, 0x1e80fffc ; cld ; call rax
0x000000000016ebe6 : cld ; push qword ptr [rax] ; sub esp, edi ; call qword ptr [rax]
0x000000000016f3a6 : cld ; push qword ptr [rcx + rax*4 - 0x7ebb0004] ; cld ; call rsp
0x00000000000c3593 : cld ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000016edf2 : cld ; push qword ptr [rdx + 0x42fffc5a] ; pop rdx ; cld ; call rdx
0x000000000016f7be : cld ; push qword ptr [rdx - 0x5b] ; cld ; jmp rdx
0x000000000016f9ee : cld ; push qword ptr [rdx] ; popfq ; cld ; jmp qword ptr [rdx + 0x12fffc9c]
0x000000000016ed4e : cld ; push qword ptr [rsi + 0x46fffc5e] ; pop rsi ; cld ; call rsi
0x000000000016f772 : cld ; push qword ptr [rsi + 0x46fffca6] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call rsi
0x000000000016f13e : cld ; push rax ; cld ; call qword ptr [rax + 0x10fffc56]
0x000000000016ef6a : cld ; push rax ; push rcx ; cld ; push qword ptr [rax + 0x51] ; cld ; jmp rax
0x000000000016ec06 : cld ; push rax ; sub ah, bh ; call rax
0x000000000016ec6a : cld ; push rax ; sub esp, edi ; jmp rax
0x000000000016f912 : cld ; push rax ; test eax, 0xa980fffc ; cld ; call qword ptr [rax]
0x000000000016f17e : cld ; push rax ; xor esp, edi ; call qword ptr [rax]
0x00000000000444b2 : cld ; ret
0x00000000000e0b38 : cld ; ret 0x2b
0x0000000000176e34 : cld ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x5e], ch ; jmp 0x176e42
0x00000000000e1e52 : cld ; stc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000015b5b6 : cld ; test al, -0x69 ; xchg eax, esp ; ret
0x00000000000a7ade : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xa7ae1 ; ret
0x000000000007d513 : cld ; xor dword ptr [rax], eax ; test eax, eax ; js 0x7d528 ; ret
0x0000000000178a34 : cld ; xor eax, 0xe9680000 ; jmp 0x178a42
0x00000000000370fd : cli ; adc byte ptr [rcx], ch ; ret 0xfa69
0x00000000000a8aec : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000a8a6e : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000184f1d : cli ; add byte ptr [rax], al ; adc bh, cl ; call rdi
0x00000000000b8499 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000000a8d4e : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000038b26 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000a09cb : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x0000000000038b52 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000006fca8 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000099f52 : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000000bc6c2 : cli ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x840
0x000000000014be31 : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000000374d : cli ; add ebx, ebp ; in al, -0x12 ; jne 0x3735 ; ret 0x975
0x00000000000e2ba1 : cli ; and byte ptr [rbx + rbp*8 - 0x3a], dh ; inc dword ptr [r8] ; ret
0x00000000000506d2 : cli ; call qword ptr [r11 + rax*8]
0x0000000000162f82 : cli ; call qword ptr [rax]
0x0000000000181102 : cli ; call qword ptr [rdi]
0x000000000007ece6 : cli ; call rax
0x0000000000164516 : cli ; call rsp
0x0000000000173fc5 : cli ; clc ; call rax
0x000000000016f100 : cli ; cld ; jmp qword ptr [rax + 0x20fffc56]
0x0000000000161a4d : cli ; cmc ; call qword ptr [rax]
0x000000000018ad19 : cli ; cmc ; call qword ptr [rdx]
0x0000000000161a45 : cli ; cmc ; jmp rax
0x0000000000161a59 : cli ; cmc ; push qword ptr [rax] ; cli ; cmc ; call qword ptr [rax]
0x0000000000161a41 : cli ; cmc ; push qword ptr [rax] ; cli ; cmc ; jmp rax
0x00000000000a87bb : cli ; cmp al, 0xf ; xchg eax, esp ; ret 0x14c
0x00000000000ee8c8 : cli ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xd108
0x0000000000174aee : cli ; dec dword ptr [rax + 0x1000023d] ; push rbx ; cli ; jmp rax
0x00000000000dd200 : cli ; dec dword ptr [rax + 0x39] ; ret
0x0000000000036db1 : cli ; dec dword ptr [rax + 0xf] ; ret
0x000000000006aa57 : cli ; dec dword ptr [rax - 0x77] ; sal byte ptr [rdx + rcx*2 + 0x5b], 1 ; ret
0x00000000000e6d83 : cli ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rcx + 0x48], 0x39 ; ret
0x00000000000dd072 : cli ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000dd722 : cli ; dec dword ptr [rcx - 0x73] ; add qword ptr [rax - 0x77], r9 ; ret 0x3948
0x0000000000174d76 : cli ; dec eax ; add al, byte ptr [r8] ; mov al, -0x7e ; cli ; jmp rax
0x0000000000174c96 : cli ; dec eax ; add r8b, byte ptr [rax] ; lock cli ; jmp rax
0x0000000000174e16 : cli ; dec eax ; push rax ; add al, byte ptr [rax] ; nop ; test al, -6 ; jmp rax
0x0000000000160e70 : cli ; hlt ; hlt ; inc dword ptr [rax - 0xe] ; hlt ; call qword ptr [rsi]
0x0000000000162f72 : cli ; inc dword ptr [rax] ; jg 0x162f76 ; jmp rax
0x0000000000162f7e : cli ; inc eax ; jle 0x162f82 ; call qword ptr [rax]
0x00000000001747ce : cli ; inc eax ; sub al, byte ptr [rdx] ; add byte ptr [rax], dl ; or dl, bh ; call qword ptr [rax]
0x0000000000174996 : cli ; inc eax ; xor eax, 0x39400002 ; cli ; call qword ptr [rax]
0x0000000000034846 : cli ; je 0x34857 ; add rsp, 0x10 ; ret
0x0000000000034938 : cli ; je 0x34947 ; add rsp, 0x10 ; ret
0x0000000000078153 : cli ; je 0x77f95 ; ret
0x0000000000126ecb : cli ; jg 0x126ede ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00000000001273bb : cli ; jg 0x1273ce ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000012775b : cli ; jg 0x12776e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014bdf1 : cli ; jg 0x14be03 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000174806 : cli ; jmp qword ptr [rax]
0x0000000000179412 : cli ; jmp qword ptr [rcx]
0x00000000001810ea : cli ; jmp qword ptr [rdi]
0x0000000000162f76 : cli ; jmp rax
0x0000000000031a81 : cli ; jmp rdx
0x00000000000b9c10 : cli ; jnp 0xb9c26 ; xchg eax, esp ; ret 0xb60f
0x0000000000174d56 : cli ; lcall ptr [rax - 0x1ffffdb6] ; js 0x174d62 ; jmp rax
0x0000000000174a5e : cli ; ljmp ptr [rax + 0x20000239] ; cli ; jmp rax
0x0000000000174d8e : cli ; ljmp ptr [rax + 0x4c] ; add al, byte ptr [rax] ; loopne 0x174d2a ; cli ; call rax
0x0000000000174ee6 : cli ; ljmp ptr [rax - 0x2ffffdac] ; mov ah, -6 ; call rax
0x0000000000161e58 : cli ; lodsd eax, dword ptr [rsi] ; idiv bh ; cdq ; lodsb al, byte ptr [rsi] ; idiv bh ; ret
0x000000000012c948 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000008f507 : cli ; mov rax, rdi ; ret
0x00000000000ef862 : cli ; mov rsi, r13 ; mov rdi, rbx ; call r14
0x00000000000fd090 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000084f98 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000011f306 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002b38b : cli ; or byte ptr [rdi], cl ; cmp dword ptr [rbp], 0 ; add dh, dh ; ret 0xf04
0x00000000000a7b5e : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x0000000000038f26 : cli ; or dword ptr [rdi], ecx ; xchg eax, edi ; ret 0xd284
0x00000000000817c3 : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xb60f
0x00000000000e5c82 : cli ; push -5 ; dec dword ptr [rax + 0x39] ; ret
0x000000000015da21 : cli ; push 0x6e ; ja 0x15d9ae ; ret 0x48f
0x000000000017487e : cli ; push qword ptr [rax - 0xffffdd2] ; sbb bh, dl ; jmp rax
0x00000000001748de : cli ; push rax ; xor byte ptr [rdx], al ; add byte ptr [rax + 0x2b], dl ; cli ; jmp qword ptr [rax]
0x000000000002bc5f : cli ; ret
0x000000000015c4c5 : cli ; ret 0xac65
0x00000000000594a8 : cli ; ret 0xffff
0x00000000000f43cb : cli ; setae al ; ret
0x00000000000ff63a : cli ; std ; jbe 0xff644 ; ret
0x0000000000081be0 : cli ; test rdx, rdx ; je 0x81bf9 ; bsf rax, rdx ; ret
0x0000000000081dcf : cli ; test rdx, rdx ; je 0x81df9 ; bsf rax, rdx ; ret
0x000000000015b10a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000007e2b0 : cli ; xor dword ptr [rax], eax ; call 0x6a4f5
0x000000000016149c : cli ; xor ebp, 0xf581f0ff ; jmp rsi
0x0000000000020bfc : clts ; add byte ptr [rax - 0x73], cl ; and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x0000000000123878 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cdba : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001612d2 : cmc ; call qword ptr [rax + 0x10fff57e]
0x00000000001611d2 : cmc ; call qword ptr [rax]
0x000000000016136a : cmc ; call qword ptr [rbx]
0x0000000000187342 : cmc ; call qword ptr [rcx]
0x000000000016126a : cmc ; call qword ptr [rdi]
0x00000000001892ea : cmc ; call qword ptr [rdx]
0x000000000018710a : cmc ; call qword ptr [rsi]
0x00000000001612ba : cmc ; call rax
0x00000000001616a2 : cmc ; call rbx
0x000000000016179e : cmc ; call rcx
0x0000000000161252 : cmc ; call rdi
0x00000000001614aa : cmc ; call rdx
0x0000000000189722 : cmc ; call rsi
0x0000000000160fca : cmc ; call rsp
0x000000000017255e : cmc ; dec dword ptr [rax + 0x4000015d] ; push -0xb ; call rax
0x00000000000c8090 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000016170e : cmc ; dec dword ptr [rax - 0x7c] ; cmc ; call rax
0x00000000000d8bc5 : cmc ; dec dword ptr [rax - 0x7d] ; ret 0xc702
0x00000000000c4a3e : cmc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000d799e : cmc ; dec dword ptr [rcx - 0x77] ; ret 0x894c
0x0000000000172466 : cmc ; dec eax ; push rsp ; add dword ptr [rax], eax ; shl byte ptr [rdi], 1 ; cmc ; jmp rax
0x00000000001615ba : cmc ; dec eax ; xor ebp, 0xffffffff ; pop rcx ; xchg ch, dh ; jmp rsi
0x000000000011da67 : cmc ; enter -5, 0x48 ; add esp, 0x18 ; ret
0x0000000000186b21 : cmc ; hlt ; call qword ptr [rbx]
0x0000000000160e31 : cmc ; hlt ; call qword ptr [rsi]
0x0000000000160e8d : cmc ; hlt ; lcall ptr [rsp + rsi*8 - 0xc] ; call rsi
0x00000000000c20b4 : cmc ; inc dword ptr [rax + 0x7500637b] ; add al, 0x5b ; ret
0x00000000001611fa : cmc ; inc dword ptr [rbp - 3] ; hlt ; jmp rbx
0x00000000001612b6 : cmc ; inc eax ; jge 0x1612b5 ; call rax
0x00000000001612be : cmc ; inc eax ; jge 0x1612bd ; call qword ptr [rax]
0x0000000000102bb2 : cmc ; je 0x102bac ; pop rbx ; ret
0x00000000000c57a0 : cmc ; jge 0xc5784 ; mov edx, eax ; jmp 0xc5789
0x00000000001723ae : cmc ; jmp qword ptr [rax + 0x6000014f]
0x00000000001612c6 : cmc ; jmp qword ptr [rax]
0x000000000018882a : cmc ; jmp qword ptr [rbx]
0x000000000016101a : cmc ; jmp qword ptr [rcx]
0x0000000000187c5a : cmc ; jmp qword ptr [rdi]
0x00000000001894a2 : cmc ; jmp qword ptr [rdx]
0x000000000016148a : cmc ; jmp qword ptr [rsi]
0x00000000001612ae : cmc ; jmp rax
0x0000000000160fe2 : cmc ; jmp rbx
0x0000000000188bf2 : cmc ; jmp rdx
0x000000000016143e : cmc ; jmp rsi
0x000000000016108e : cmc ; jmp rsp
0x00000000000fd32e : cmc ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000017253e : cmc ; lcall ptr [rax + 0x6000015c] ; pop rcx ; cmc ; call rax
0x00000000000c2381 : cmc ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000016156a : cmc ; lcall ptr [rcx - 0x7a] ; cmc ; call rdx
0x00000000001615be : cmc ; lcall ptr [rcx - 0x7a] ; cmc ; jmp rsi
0x000000000016125a : cmc ; lcall ptr [rdi] ; adc ebp, esi ; call qword ptr [rax]
0x0000000000161366 : cmc ; lcall ptr [rdi] ; test esi, ebp ; call qword ptr [rbx]
0x00000000001724e6 : cmc ; ljmp ptr [rax + 0x58] ; add dword ptr [rax], eax ; xor byte ptr [rcx], bh ; cmc ; jmp rax
0x0000000000172586 : cmc ; ljmp ptr [rax - 0x4ffffea1] ; mov esi, ebp ; jmp rax
0x000000000016169e : cmc ; ljmp ptr [rcx] ; test dh, ch ; call rbx
0x0000000000161362 : cmc ; ljmp ptr [rcx] ; test esi, ebp ; lcall ptr [rdi] ; test esi, ebp ; call qword ptr [rbx]
0x0000000000161566 : cmc ; ljmp ptr [rsi] ; xor ebp, 0xffffffff ; pop rcx ; xchg ch, dh ; call rdx
0x000000000015de49 : cmc ; mov ch, -0x55 ; ret
0x000000000013413a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c1ce : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000cbdca : cmc ; mov r15, rdi ; add rax, rdx ; jmp rax
0x000000000014b1e3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000015acf7 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000001612a6 : cmc ; push qword ptr [rax + 0x70fff57d] ; jge 0x1612ad ; jmp rax
0x00000000001612aa : cmc ; push qword ptr [rax + 0x7d] ; cmc ; jmp rax
0x00000000001725fe : cmc ; push qword ptr [rax - 0x1ffffe9c] ; out dx, eax ; cmc ; jmp rax
0x0000000000161a4a : cmc ; push qword ptr [rax] ; cli ; cmc ; call qword ptr [rax]
0x0000000000161a42 : cmc ; push qword ptr [rax] ; cli ; cmc ; jmp rax
0x0000000000161a56 : cmc ; push qword ptr [rax] ; cli ; cmc ; push qword ptr [rax] ; cli ; cmc ; call qword ptr [rax]
0x00000000001612e6 : cmc ; push rax ; jge 0x1612e5 ; call qword ptr [rax]
0x00000000001612e2 : cmc ; push rax ; jge 0x1612e5 ; push rax ; jge 0x1612e9 ; call qword ptr [rax]
0x000000000016170a : cmc ; push rax ; xor ebp, 0xffffffff ; test sil, bpl ; call rax
0x00000000000493e3 : cmc ; ret
0x00000000000c314b : cmc ; shl rsi, 2 ; call 0x1f437
0x000000000014b1e7 : cmc ; sub eax, edx ; ret
0x000000000015d485 : cmc ; xlatb ; ret 0x4e27
0x00000000000d1511 : cmova eax, edx ; ret
0x00000000000a8bc3 : cmova esi, ecx ; imull 0x3c, esi ; add eax, esi ; ret
0x0000000000077a99 : cmovae eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000081827 : cmovae eax, ecx ; ret
0x000000000004491d : cmovae eax, esi ; ret
0x000000000000385f : cmovae ebp, dword ptr [rdi - 0x26] ; int 3
0x0000000000077a98 : cmovae rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000004491c : cmovae rax, rsi ; ret
0x000000000003703f : cmovbe edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x0000000000067944 : cmove eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000dab2b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000008d4d9 : cmove eax, ebx ; pop rbx ; ret
0x00000000000709e1 : cmove eax, ecx ; ret
0x000000000011637a : cmove eax, ecx ; sub rsp, -0x80 ; pop rbx ; ret
0x0000000000085ac8 : cmove eax, edx ; add eax, 1 ; ret
0x00000000000f5360 : cmove eax, edx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000a8931 : cmove eax, edx ; add rsp, 0x28 ; ret
0x000000000003813a : cmove eax, edx ; add rsp, 8 ; ret
0x00000000000a4c31 : cmove eax, edx ; nop dword ptr [rax] ; ret
0x000000000002c5eb : cmove eax, edx ; ret
0x000000000008f5d1 : cmove ecx, dword ptr [rcx - 0x76b7fbb9] ; clc ; ret
0x0000000000105d8b : cmove ecx, eax ; jmp 0x105d57
0x00000000000709e0 : cmove r8, rcx ; ret
0x00000000000dab2a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000008d4d8 : cmove rax, rbx ; pop rbx ; ret
0x000000000009bddc : cmove rax, rcx ; ret
0x0000000000116379 : cmove rax, rcx ; sub rsp, -0x80 ; pop rbx ; ret
0x0000000000085ad9 : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000a8930 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x000000000007e702 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000002c5ea : cmove rax, rdx ; ret
0x000000000006dfab : cmovg eax, ecx ; test rdx, rdx ; jne 0x6dfa9 ; ret
0x0000000000075ecb : cmovg eax, ecx ; test rdx, rdx ; jne 0x75ec9 ; ret
0x000000000001f50f : cmovge eax, edx ; jmp 0x1f4e0
0x000000000001f84e : cmovge eax, edx ; jmp 0x1f858
0x00000000000a83b4 : cmovge eax, edx ; pop rbx ; ret
0x00000000000a83b3 : cmovge rax, rdx ; pop rbx ; ret
0x00000000000a8399 : cmovle eax, edx ; pop rbx ; ret
0x00000000000a8398 : cmovle rax, rdx ; pop rbx ; ret
0x0000000000104ac3 : cmovne eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000074ce5 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036db4 : cmovne eax, ebx ; pop rbx ; ret
0x0000000000038158 : cmovne eax, ecx ; add rsp, 8 ; ret
0x00000000000efadd : cmovne eax, ecx ; ret
0x00000000000f8bc5 : cmovne eax, edi ; ret
0x0000000000112605 : cmovne eax, edx ; add rsp, 0x78 ; ret
0x0000000000038172 : cmovne eax, edx ; add rsp, 8 ; ret
0x000000000007fed3 : cmovne eax, edx ; ret
0x00000000000efa74 : cmovne eax, esi ; ret
0x0000000000036db3 : cmovne rax, rbx ; pop rbx ; ret
0x000000000007ce71 : cmovne rax, rcx ; add rsp, 8 ; ret
0x000000000011a675 : cmovne rax, rdx ; add rsp, 8 ; ret
0x000000000007fed2 : cmovne rax, rdx ; ret
0x00000000000ef792 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000ef791 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000106de0 : cmovs eax, dword ptr [rbx + 0x5d5b80ec] ; pop r12 ; ret
0x00000000000e24d4 : cmovs eax, dword ptr [rbx - 0x76b70f20] ; ret 0x8949
0x000000000008f543 : cmovs eax, dword ptr [rbx - 0x76b7fd39] ; clc ; ret
0x0000000000036aa6 : cmovs eax, edx ; pop rbx ; ret
0x000000000002349c : cmovs eax, edx ; ret
0x00000000000791f6 : cmovs ebp, dword ptr [rcx] ; ret
0x0000000000079106 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x00000000000769e8 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x769e9 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000009a226 : cmovs esp, dword ptr [rbx + 0x34] ; nop ; add rax, rsi ; jmp rax
0x000000000015fd8d : cmp ah, -1 ; mov al, -0x7f ; cld ; call rax
0x000000000016f1d1 : cmp ah, bh ; call qword ptr [rax + 0x10fffc39]
0x0000000000123b73 : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000001239e8 : cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000123a4f : cmp ah, byte ptr [rbx - 0x37] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000017026d : cmp al, -0x14 ; call qword ptr [rax]
0x0000000000183774 : cmp al, -0x1d ; add byte ptr [rax], al ; or byte ptr [rcx], dl ; call rdx
0x0000000000182874 : cmp al, -0x2c ; add byte ptr [rax], al ; cwde ; pop rax ; call qword ptr [rcx]
0x0000000000181d74 : cmp al, -0x37 ; add byte ptr [rax], al ; pop rax ; out -0xf, al ; jmp rax
0x0000000000160488 : cmp al, -0x63 ; jmp qword ptr [rdi]
0x00000000000cbc5d : cmp al, -0x72 ; push qword ptr [rsi + rax*2 - 0x7d] ; ret 0x3902
0x000000000005d4d9 : cmp al, -0x77 ; ret 0x348
0x0000000000187579 : cmp al, -0xb ; jmp qword ptr [rcx]
0x000000000016f19d : cmp al, -4 ; call qword ptr [rax + 0x10fffc3d]
0x000000000016f1dd : cmp al, -4 ; call qword ptr [rax]
0x00000000000c9436 : cmp al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000c2598 : cmp al, 0x11 ; je 0xc25a6 ; xor eax, eax ; ret
0x0000000000187474 : cmp al, 0x20 ; add dword ptr [rax], eax ; cmp rsi, rbp ; jmp qword ptr [rcx]
0x000000000009e4cf : cmp al, 0x24 ; adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf983
0x000000000002034a : cmp al, 0x24 ; add rsp, 0x28 ; jmp rax
0x000000000010d7e8 : cmp al, 0x24 ; call 0x69ce9
0x0000000000035587 : cmp al, 0x24 ; call r14
0x000000000011d14c : cmp al, 0x24 ; mov rax, qword ptr [rax + 0xe0] ; jmp rax
0x000000000010741a : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000077efd : cmp al, 0x30 ; ret
0x000000000007a023 : cmp al, 0x32 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000007bdab : cmp al, 0x32 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015c100 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000018a374 : cmp al, 0x4f ; add dword ptr [rax], eax ; in al, -0xb ; jmp qword ptr [rcx]
0x00000000000bae40 : cmp al, 0x50 ; cld ; dec dword ptr [rax - 0x77] ; ret 0x1deb
0x000000000017cf74 : cmp al, 0x7b ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x11], bl ; jmp qword ptr [rdi]
0x00000000000a87bc : cmp al, 0xf ; xchg eax, esp ; ret 0x14c
0x000000000018904d : cmp al, 1 ; add byte ptr [rax - 0x61], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001499e3 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000198ba4 : cmp al, 3 ; add byte ptr [rax], al ; mov ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret 3
0x0000000000195874 : cmp al, 4 ; add al, byte ptr [rax] ; or byte ptr [rbx - 8], bh ; jmp qword ptr [rsi]
0x0000000000096140 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x000000000007a23c : cmp al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000006d7ab : cmp al, byte ptr [rax + 0xf] ; mov dh, -0x39 ; ret
0x000000000000a7e8 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000114d83 : cmp al, byte ptr [rax] ; ret
0x00000000000d6439 : cmp al, byte ptr [rdi + rcx] ; test byte ptr [rsi - 0x76000003], cl ; ret 0xdb31
0x0000000000161484 : cmp al, byte ptr [rdx - 0x7dcf000b] ; cmc ; jmp qword ptr [rsi]
0x000000000014b6a6 : cmp al, byte ptr [rsi - 1] ; jne 0x14b6cc ; xor eax, eax ; ret
0x00000000000490d9 : cmp al, ch ; xor dword ptr [rcx - 0x76b70001], edi ; ret 0x3aeb
0x0000000000084dd6 : cmp al, dh ; ret
0x0000000000084dd5 : cmp al, r14b ; ret
0x0000000000171634 : cmp bh, -0x10 ; jmp rax
0x0000000000033586 : cmp bh, -1 ; inc eax ; shr eax, 0x1f ; ret
0x000000000016f199 : cmp bh, ah ; call qword ptr [rax]
0x00000000000efa3a : cmp bh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000efa72 : cmp bh, cl ; cmovne eax, esi ; ret
0x000000000018f499 : cmp bh, dh ; jmp qword ptr [rdi]
0x000000000016e481 : cmp bl, bh ; call qword ptr [rax]
0x000000000008aecb : cmp bl, dh ; ret
0x000000000009b246 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000006f91b : cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000f07aa : cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x00000000000f2664 : cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x00000000000cebeb : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000044cc1 : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000073657 : cmp byte ptr [rax + 0xf], al ; mov dh, -0x39 ; ret
0x00000000000859ff : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000111586 : cmp byte ptr [rax + 1], bh ; ret
0x0000000000084e17 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000003b484 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], -0x3e ; jmp 0x3b4bf
0x0000000000109a85 : cmp byte ptr [rax - 0x75], cl ; or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x000000000010ff98 : cmp byte ptr [rax - 0x77], cl ; iretd ; jmp r8
0x00000000000d0313 : cmp byte ptr [rax - 0x77], cl ; ret
0x00000000000f07ab : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000000f2665 : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000006f91c : cmp byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000ac6d6 : cmp byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000add76 : cmp byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001097e3 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], -0x77 ; out dx, eax ; call rax
0x000000000010b321 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000011011c : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], -0x77 ; out dx, eax ; call rax
0x000000000018f8b8 : cmp byte ptr [rax - 9], cl ; call qword ptr [rdi]
0x0000000000145fb8 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000084e06 : cmp byte ptr [rax], ah ; ret
0x00000000001168a5 : cmp byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000763e3 : cmp byte ptr [rax], al ; je 0x763f4 ; ret
0x0000000000020413 : cmp byte ptr [rax], al ; pop rbx ; ret
0x00000000000205f4 : cmp byte ptr [rax], al ; ret
0x0000000000113bb9 : cmp byte ptr [rax], bl ; je 0x113bc4 ; ret
0x00000000000cebec : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007fed0 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000008fd36 : cmp byte ptr [rax], dh ; ret
0x0000000000084df6 : cmp byte ptr [rax], dl ; ret
0x0000000000084df5 : cmp byte ptr [rax], r10b ; ret
0x0000000000084e05 : cmp byte ptr [rax], r12b ; ret
0x000000000008fd35 : cmp byte ptr [rax], r14b ; ret
0x000000000007fecf : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000009b24a : cmp byte ptr [rbp + 0x13], dh ; ret
0x000000000009b249 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000e6f6e : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000184738 : cmp byte ptr [rbp - 0xd], dl ; call qword ptr [rax]
0x000000000002bc59 : cmp byte ptr [rbx + 0x13], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000112736 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c20b6 : cmp byte ptr [rbx + 0x63], 0 ; jne 0xc20c7 ; pop rbx ; ret
0x00000000001878c8 : cmp byte ptr [rbx - 0xb], al ; jmp qword ptr [rcx]
0x0000000000185ba4 : cmp byte ptr [rbx - 0xff1b6f9], al ; add dword ptr [rbx], eax ; ret 0xa05
0x00000000001749d4 : cmp byte ptr [rbx], -6 ; call rax
0x000000000009b247 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000c8c12 : cmp byte ptr [rcx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call 0x84ea8
0x00000000000e1896 : cmp byte ptr [rcx - 0x3b7cb730], cl ; ret
0x00000000001873a0 : cmp byte ptr [rcx], -0xb ; jmp qword ptr [rsi]
0x0000000000188d0d : cmp byte ptr [rcx], al ; add byte ptr [rax - 0x71], dh ; cmc ; jmp qword ptr [rsi]
0x0000000000145fb9 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x0000000000097554 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x0000000000002044 : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000016e904 : cmp byte ptr [rdi - 0x3f2f0005], -5 ; jmp qword ptr [rax]
0x00000000001902e8 : cmp byte ptr [rdi - 9], dh ; call rcx
0x000000000002d2b0 : cmp byte ptr [rdi], 0 ; jne 0x2d2c9 ; add rsp, 0x18 ; ret
0x000000000002d2f0 : cmp byte ptr [rdi], 0 ; jne 0x2d309 ; add rsp, 0x18 ; ret
0x0000000000036a78 : cmp byte ptr [rdi], 0 ; jne 0x36a86 ; pop rbx ; ret
0x00000000000c9759 : cmp byte ptr [rdi], cl ; test byte ptr [rax - 0x9fffffc], bl ; ret 0xf08
0x00000000000c3962 : cmp byte ptr [rdi], cl ; test dh, bh ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000014828d : cmp byte ptr [rdi], dl ; ret
0x0000000000148da0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000148d89 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000148d72 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000014782e : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001753e0 : cmp byte ptr [rdx + 2], cl ; add byte ptr [rax - 0x32], al ; std ; call qword ptr [rax]
0x00000000000c6f5f : cmp byte ptr [rdx + r9], 0 ; je 0xc6f2e ; jmp 0xc6f30
0x00000000000c6f60 : cmp byte ptr [rdx + rcx], 0 ; je 0xc6f2d ; jmp 0xc6f2f
0x00000000000c0600 : cmp byte ptr [rsi + 0x30], 0x11 ; je 0xc0618 ; xor eax, eax ; ret
0x00000000000e02c2 : cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x000000000016eb40 : cmp byte ptr [rsi], ah ; cld ; inc dword ptr [rax] ; sub ah, bh ; jmp rax
0x00000000000c5526 : cmp byte ptr [rsi], cl ; je 0xc54b3 ; pop rbx ; ret
0x000000000016ea20 : cmp ch, -5 ; inc dword ptr [rax - 1] ; sti ; jmp qword ptr [rax]
0x000000000018a438 : cmp ch, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000160c0c : cmp ch, bh ; hlt ; call qword ptr [rbx]
0x0000000000123a52 : cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000000faf94 : cmp ch, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000a81cd : cmp cl, al ; call 0xffffffffc233c2f9
0x00000000000490e3 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x0000000000028e8c : cmp cl, byte ptr [rax - 0x7d] ; ret 0x4904
0x000000000004a6f3 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000e2167 : cmp cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000006bf01 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x88a
0x00000000000ee8c9 : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xd108
0x00000000000d1549 : cmp cx, 0xa ; mov eax, edx ; je 0xd15aa ; ret
0x00000000000f07fd : cmp dh, al ; add byte ptr [rax], ah ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f07de : cmp dh, al ; add byte ptr [rdx], cl ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000171065 : cmp dh, al ; call rax
0x00000000000efab3 : cmp dh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000036a75 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000000a8378 : cmp dh, cl ; je 0xa8385 ; pop rbx ; ret
0x0000000000043de6 : cmp dh, dh ; ret 0x4801
0x0000000000090ae5 : cmp dh, dh ; ret 0x7501
0x00000000000efadb : cmp dh, dl ; cmovne eax, ecx ; ret
0x00000000000efa39 : cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000efa71 : cmp dil, cl ; cmovne eax, esi ; ret
0x00000000000e2ba0 : cmp dl, 0x20 ; je 0xe2b99 ; mov byte ptr [rcx - 1], 0 ; ret
0x000000000014be30 : cmp dl, 1 ; jb 0x14be3e ; mov byte ptr [rdi], cl ; ret
0x00000000000817e3 : cmp dl, 3 ; je 0x8180f ; movsx eax, dl ; ret
0x00000000000817e3 : cmp dl, 3 ; je 0x81810 ; movsx eax, dl ; ret
0x0000000000002b66 : cmp dl, byte ptr [rdi] ; ret
0x000000000015fc45 : cmp dl, dh ; jmp rax
0x00000000000f42ea : cmp dword ptr [rax + 8], edi ; jne 0xf42e9 ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000ffc71 : cmp dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000026744 : cmp dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x0000000000113bb8 : cmp dword ptr [rax], 0x18 ; je 0x113bc5 ; ret
0x0000000000178d8d : cmp dword ptr [rax], eax ; add al, ah ; jmp 0x178d99
0x0000000000178dbd : cmp dword ptr [rax], eax ; add al, ah ; jmp 0x178dc9
0x0000000000178ded : cmp dword ptr [rax], eax ; add al, ah ; jmp 0x178df9
0x0000000000178da5 : cmp dword ptr [rax], eax ; add al, bl ; jmp 0x178db1
0x0000000000178dd5 : cmp dword ptr [rax], eax ; add al, bl ; jmp 0x178de1
0x0000000000178e05 : cmp dword ptr [rax], eax ; add al, bl ; jmp 0x178e11
0x000000000000bfa0 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4e
0x000000000002b38e : cmp dword ptr [rbp], 0 ; add dh, dh ; ret 0xf04
0x000000000008492b : cmp dword ptr [rbx - 0x76b3ffcf], esi ; ret 0x8348
0x000000000005acdf : cmp dword ptr [rbx - 0x7cb70001], edi ; ret 0xeb08
0x0000000000133c78 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000c71bb : cmp dword ptr [rbx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000188d9d : cmp dword ptr [rcx], eax ; add byte ptr [rax], al ; xchg eax, ecx ; cmc ; jmp qword ptr [rsi]
0x00000000000f0b71 : cmp dword ptr [rdi + 0x10], 0 ; je 0xf0b88 ; xor eax, eax ; ret
0x000000000010686d : cmp dword ptr [rdi + 0x10], 2 ; je 0x10687e ; ret
0x0000000000072eb4 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00000000000b3519 : cmp dword ptr [rdi + 0x1f0ffff6], 0 ; pop rbx ; ret
0x00000000000763e1 : cmp dword ptr [rdi + 0x38], 0 ; je 0x763f6 ; ret
0x00000000000a7ab4 : cmp dword ptr [rdi + 8], edx ; jne 0xa7a83 ; ret
0x000000000009bdd9 : cmp dword ptr [rdi + 8], esi ; cmove rax, rcx ; ret
0x00000000000f4368 : cmp dword ptr [rdi], 0 ; je 0xf437e ; ret
0x0000000000174a61 : cmp dword ptr [rdx], eax ; add byte ptr [rax], ah ; cli ; jmp rax
0x000000000007f621 : cmp dword ptr [rip + 0x320550], 0 ; je 0x7f639 ; ret
0x000000000006e498 : cmp dword ptr [rsi + 0x30], 0 ; je 0x6e4a6 ; ret
0x00000000000b4b03 : cmp dword ptr [rsi - 0x76b7ffd2], ebx ; ret 0x8d48
0x00000000000e4f3c : cmp dword ptr [rsi], 0 ; je 0xe4f4e ; ret
0x00000000000037ee : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00000000000db803 : cmp dword ptr [rsp - 0x18], 2 ; cmove eax, edx ; ret
0x0000000000113bb7 : cmp dword ptr fs:[rax], 0x18 ; je 0x113bc6 ; ret
0x0000000000188d9c : cmp dword ptr fs:[rcx], eax ; add byte ptr [rax], al ; xchg eax, ecx ; cmc ; jmp qword ptr [rsi]
0x00000000000df730 : cmp eax, -0x5f ; je 0xdf750 ; neg eax ; pop rbx ; ret
0x0000000000034734 : cmp eax, -0x80 ; jne 0x34727 ; xor eax, eax ; ret
0x0000000000034784 : cmp eax, -0x80 ; jne 0x34777 ; xor eax, eax ; ret
0x0000000000102bb0 : cmp eax, -0xb ; je 0x102bae ; pop rbx ; ret
0x000000000011c58e : cmp eax, -1 ; je 0x11c5a9 ; add rsp, 8 ; ret
0x000000000006e4b3 : cmp eax, -1 ; je 0x6e4c6 ; pop rbx ; ret
0x000000000006e98a : cmp eax, -1 ; je 0x6e99b ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000006e9ce : cmp eax, -1 ; je 0x6e9df ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000076410 : cmp eax, -1 ; je 0x76426 ; pop rbx ; ret
0x0000000000076961 : cmp eax, -1 ; je 0x76972 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000042cb4 : cmp eax, -1 ; jne 0x42ca9 ; mov rax, rdx ; ret
0x00000000000702c9 : cmp eax, -1 ; jne 0x702d6 ; pop rbx ; ret
0x00000000000769af : cmp eax, -1 ; jne 0x769a0 ; pop rbx ; ret
0x0000000000003b53 : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x000000000009db0f : cmp eax, 0x13 ; je 0x9db26 ; mov edx, eax ; jmp 0x9dae6
0x00000000000a013f : cmp eax, 0x13 ; je 0xa0156 ; mov edx, eax ; jmp 0xa0116
0x00000000000a25cf : cmp eax, 0x13 ; je 0xa25e6 ; mov edx, eax ; jmp 0xa25a6
0x00000000001002a2 : cmp eax, 0x2a1a35 ; call rax
0x00000000000e3f2b : cmp eax, 0x2b9340 ; ret
0x00000000000e3236 : cmp eax, 0x2bd24d ; call 0x1f4a7
0x000000000017919d : cmp eax, 0x42000000 ; in al, dx ; jmp rax
0x0000000000174af1 : cmp eax, 0x53100002 ; cli ; jmp rax
0x00000000001720d9 : cmp eax, 0x58c00001 ; hlt ; jmp rax
0x00000000000d8bc4 : cmp eax, 0x8348fff5 ; ret 0xc702
0x00000000000b3d2a : cmp eax, 0x89e18948 ; ret 0xf631
0x0000000000110b5f : cmp eax, 0x8b000026 ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000106579 : cmp eax, 0x8be2894c ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000038122 : cmp eax, 0x8c48348 ; ret
0x00000000000c6b18 : cmp eax, 0xc0830100 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000008d195 : cmp eax, 0xc0845074 ; je 0x8d1f1 ; xor eax, eax ; ret
0x000000000008d1ed : cmp eax, 0xc084ed74 ; je 0x8d1e6 ; xor eax, eax ; ret
0x0000000000033a98 : cmp eax, 0xfffff000 ; ja 0x33ac8 ; ret
0x0000000000033d91 : cmp eax, 0xfffff000 ; ja 0x33da8 ; ret
0x0000000000033dfd : cmp eax, 0xfffff000 ; ja 0x33e18 ; ret
0x0000000000033e47 : cmp eax, 0xfffff000 ; ja 0x33e57 ; ret
0x0000000000033ecd : cmp eax, 0xfffff000 ; ja 0x33ee8 ; ret
0x0000000000067a01 : cmp eax, 0xfffff000 ; ja 0x67a18 ; ret
0x00000000000b4972 : cmp eax, 0xfffff000 ; ja 0xb4987 ; ret
0x00000000000b7171 : cmp eax, 0xfffff000 ; ja 0xb7187 ; ret
0x00000000000b721b : cmp eax, 0xfffff000 ; ja 0xb722f ; ret
0x00000000000b731c : cmp eax, 0xfffff000 ; ja 0xb732f ; ret
0x00000000000b7a18 : cmp eax, 0xfffff000 ; ja 0xb7a30 ; ret
0x00000000000b8564 : cmp eax, 0xfffff000 ; ja 0xb8577 ; ret
0x00000000000b85d4 : cmp eax, 0xfffff000 ; ja 0xb85e7 ; ret
0x00000000000b8848 : cmp eax, 0xfffff000 ; ja 0xb8857 ; ret
0x00000000000b88c8 : cmp eax, 0xfffff000 ; ja 0xb88d7 ; ret
0x00000000000dad96 : cmp eax, 0xfffff000 ; ja 0xdada8 ; ret
0x00000000000dade5 : cmp eax, 0xfffff000 ; ja 0xdadf8 ; ret
0x00000000000dae36 : cmp eax, 0xfffff000 ; ja 0xdae48 ; ret
0x00000000000dae8e : cmp eax, 0xfffff000 ; ja 0xdaea8 ; ret
0x00000000000daef2 : cmp eax, 0xfffff000 ; ja 0xdaf08 ; ret
0x00000000000daf4b : cmp eax, 0xfffff000 ; ja 0xdaf60 ; ret
0x00000000000db12a : cmp eax, 0xfffff000 ; ja 0xdb140 ; ret
0x00000000000db1bd : cmp eax, 0xfffff000 ; ja 0xdb1d8 ; ret
0x00000000000db2a1 : cmp eax, 0xfffff000 ; ja 0xdb2b8 ; ret
0x00000000000db7d3 : cmp eax, 0xfffff000 ; ja 0xdb818 ; ret
0x00000000000dc483 : cmp eax, 0xfffff000 ; ja 0xdc498 ; ret
0x00000000000dca84 : cmp eax, 0xfffff000 ; ja 0xdca98 ; ret
0x00000000000dcaeb : cmp eax, 0xfffff000 ; ja 0xdcb00 ; ret
0x00000000000dcb4e : cmp eax, 0xfffff000 ; ja 0xdcb68 ; ret
0x00000000000dcbbe : cmp eax, 0xfffff000 ; ja 0xdcbd8 ; ret
0x00000000000df7a3 : cmp eax, 0xfffff000 ; ja 0xdf7b8 ; ret
0x00000000000df7f7 : cmp eax, 0xfffff000 ; ja 0xdf808 ; ret
0x00000000000dff4b : cmp eax, 0xfffff000 ; ja 0xdff5f ; ret
0x00000000000e01e7 : cmp eax, 0xfffff000 ; ja 0xe0218 ; ret
0x00000000000e035f : cmp eax, 0xfffff000 ; ja 0xe0377 ; ret
0x00000000000e0ac8 : cmp eax, 0xfffff000 ; ja 0xe0ad7 ; ret
0x00000000000e0b68 : cmp eax, 0xfffff000 ; ja 0xe0b77 ; ret
0x00000000000e0c0b : cmp eax, 0xfffff000 ; ja 0xe0c1f ; ret
0x00000000000e0cbb : cmp eax, 0xfffff000 ; ja 0xe0ccf ; ret
0x00000000000e0d66 : cmp eax, 0xfffff000 ; ja 0xe0d77 ; ret
0x00000000000e0dd6 : cmp eax, 0xfffff000 ; ja 0xe0de7 ; ret
0x00000000000e0e57 : cmp eax, 0xfffff000 ; ja 0xe0e67 ; ret
0x00000000000e0f07 : cmp eax, 0xfffff000 ; ja 0xe0f17 ; ret
0x00000000000e1457 : cmp eax, 0xfffff000 ; ja 0xe1468 ; ret
0x00000000000e27f8 : cmp eax, 0xfffff000 ; ja 0xe2810 ; ret
0x00000000000e288c : cmp eax, 0xfffff000 ; ja 0xe28a0 ; ret
0x00000000000e292c : cmp eax, 0xfffff000 ; ja 0xe2940 ; ret
0x00000000000e2980 : cmp eax, 0xfffff000 ; ja 0xe2998 ; ret
0x00000000000e66b2 : cmp eax, 0xfffff000 ; ja 0xe66c8 ; ret
0x00000000000e81ae : cmp eax, 0xfffff000 ; ja 0xe81c9 ; pop rbx ; pop rbp ; ret
0x00000000000e8421 : cmp eax, 0xfffff000 ; ja 0xe8437 ; ret
0x00000000000e84e3 : cmp eax, 0xfffff000 ; ja 0xe84f8 ; ret
0x00000000000e851e : cmp eax, 0xfffff000 ; ja 0xe8538 ; ret
0x00000000000e90ce : cmp eax, 0xfffff000 ; ja 0xe90e7 ; ret
0x00000000000e924e : cmp eax, 0xfffff000 ; ja 0xe9267 ; ret
0x00000000000e96a8 : cmp eax, 0xfffff000 ; ja 0xe96b7 ; ret
0x00000000000e974a : cmp eax, 0xfffff000 ; ja 0xe975f ; ret
0x00000000000e97fa : cmp eax, 0xfffff000 ; ja 0xe980f ; ret
0x00000000000f4ffb : cmp eax, 0xfffff000 ; ja 0xf5010 ; ret
0x00000000000f5078 : cmp eax, 0xfffff000 ; ja 0xf50a2 ; ret
0x00000000000f6f0d : cmp eax, 0xfffff000 ; ja 0xf6f28 ; ret
0x00000000000f6fbd : cmp eax, 0xfffff000 ; ja 0xf6fd8 ; ret
0x000000000011a4bb : cmp eax, 0xfffff001 ; jae 0x11a4ca ; ret
0x000000000011a50b : cmp eax, 0xfffff001 ; jae 0x11a51a ; ret
0x0000000000033dc8 : cmp eax, 0xfffff001 ; jae 0x33dd7 ; ret
0x00000000000342f8 : cmp eax, 0xfffff001 ; jae 0x34307 ; ret
0x0000000000042492 : cmp eax, 0xfffff001 ; jae 0x424a5 ; xor eax, eax ; ret
0x00000000000679c8 : cmp eax, 0xfffff001 ; jae 0x679d7 ; ret
0x00000000000a8a18 : cmp eax, 0xfffff001 ; jae 0xa8a27 ; ret
0x00000000000ab2f8 : cmp eax, 0xfffff001 ; jae 0xab307 ; ret
0x00000000000ab328 : cmp eax, 0xfffff001 ; jae 0xab337 ; ret
0x00000000000b70c8 : cmp eax, 0xfffff001 ; jae 0xb70d7 ; ret
0x00000000000b72db : cmp eax, 0xfffff001 ; jae 0xb72ea ; ret
0x00000000000b73b8 : cmp eax, 0xfffff001 ; jae 0xb73c7 ; ret
0x00000000000b75a1 : cmp eax, 0xfffff001 ; jae 0xb75e0 ; ret
0x00000000000b7601 : cmp eax, 0xfffff001 ; jae 0xb7640 ; ret
0x00000000000b7992 : cmp eax, 0xfffff001 ; jae 0xb79a1 ; ret
0x00000000000b8528 : cmp eax, 0xfffff001 ; jae 0xb8537 ; ret
0x00000000000b86e8 : cmp eax, 0xfffff001 ; jae 0xb86f7 ; ret
0x00000000000b8718 : cmp eax, 0xfffff001 ; jae 0xb8727 ; ret
0x00000000000b8778 : cmp eax, 0xfffff001 ; jae 0xb8787 ; ret
0x00000000000b87a8 : cmp eax, 0xfffff001 ; jae 0xb87b7 ; ret
0x00000000000b87d8 : cmp eax, 0xfffff001 ; jae 0xb87e7 ; ret
0x00000000000b8808 : cmp eax, 0xfffff001 ; jae 0xb8817 ; ret
0x00000000000d1178 : cmp eax, 0xfffff001 ; jae 0xd1187 ; ret
0x00000000000d11a8 : cmp eax, 0xfffff001 ; jae 0xd11b7 ; ret
0x00000000000d11d8 : cmp eax, 0xfffff001 ; jae 0xd11e7 ; ret
0x00000000000d1208 : cmp eax, 0xfffff001 ; jae 0xd1217 ; ret
0x00000000000d1238 : cmp eax, 0xfffff001 ; jae 0xd1247 ; ret
0x00000000000d1268 : cmp eax, 0xfffff001 ; jae 0xd1277 ; ret
0x00000000000d1298 : cmp eax, 0xfffff001 ; jae 0xd12a7 ; ret
0x00000000000d12c8 : cmp eax, 0xfffff001 ; jae 0xd12d7 ; ret
0x00000000000d9d94 : cmp eax, 0xfffff001 ; jae 0xd9dd6 ; ret
0x00000000000d9df4 : cmp eax, 0xfffff001 ; jae 0xd9e36 ; ret
0x00000000000dacd5 : cmp eax, 0xfffff001 ; jae 0xdace8 ; mov eax, edx ; ret
0x00000000000dacf8 : cmp eax, 0xfffff001 ; jae 0xdad07 ; ret
0x00000000000daf98 : cmp eax, 0xfffff001 ; jae 0xdafa7 ; ret
0x00000000000dafc8 : cmp eax, 0xfffff001 ; jae 0xdafd7 ; ret
0x00000000000db098 : cmp eax, 0xfffff001 ; jae 0xdb0a7 ; ret
0x00000000000db0c8 : cmp eax, 0xfffff001 ; jae 0xdb0d7 ; ret
0x00000000000db188 : cmp eax, 0xfffff001 ; jae 0xdb197 ; ret
0x00000000000db201 : cmp eax, 0xfffff001 ; jae 0xdb240 ; ret
0x00000000000db411 : cmp eax, 0xfffff001 ; jae 0xdb450 ; ret
0x00000000000db471 : cmp eax, 0xfffff001 ; jae 0xdb4b0 ; ret
0x00000000000db4c8 : cmp eax, 0xfffff001 ; jae 0xdb4d7 ; ret
0x00000000000db8e8 : cmp eax, 0xfffff001 ; jae 0xdb8f7 ; ret
0x00000000000dba31 : cmp eax, 0xfffff001 ; jae 0xdba70 ; ret
0x00000000000dba88 : cmp eax, 0xfffff001 ; jae 0xdba97 ; ret
0x00000000000dbab8 : cmp eax, 0xfffff001 ; jae 0xdbac7 ; ret
0x00000000000dbae8 : cmp eax, 0xfffff001 ; jae 0xdbaf7 ; ret
0x00000000000dbb18 : cmp eax, 0xfffff001 ; jae 0xdbb27 ; ret
0x00000000000dbb48 : cmp eax, 0xfffff001 ; jae 0xdbb57 ; ret
0x00000000000dbb81 : cmp eax, 0xfffff001 ; jae 0xdbbc0 ; ret
0x00000000000dbbd8 : cmp eax, 0xfffff001 ; jae 0xdbbe7 ; ret
0x00000000000dbc08 : cmp eax, 0xfffff001 ; jae 0xdbc17 ; ret
0x00000000000dc3e8 : cmp eax, 0xfffff001 ; jae 0xdc3f7 ; ret
0x00000000000dc418 : cmp eax, 0xfffff001 ; jae 0xdc427 ; ret
0x00000000000dc448 : cmp eax, 0xfffff001 ; jae 0xdc457 ; ret
0x00000000000dca48 : cmp eax, 0xfffff001 ; jae 0xdca57 ; ret
0x00000000000dcab8 : cmp eax, 0xfffff001 ; jae 0xdcac7 ; ret
0x00000000000dcb18 : cmp eax, 0xfffff001 ; jae 0xdcb27 ; ret
0x00000000000dcb88 : cmp eax, 0xfffff001 ; jae 0xdcb97 ; ret
0x00000000000dcbf8 : cmp eax, 0xfffff001 ; jae 0xdcc07 ; ret
0x00000000000df431 : cmp eax, 0xfffff001 ; jae 0xdf470 ; ret
0x00000000000df76b : cmp eax, 0xfffff001 ; jae 0xdf77a ; ret
0x00000000000dfee4 : cmp eax, 0xfffff001 ; jae 0xdff26 ; ret
0x00000000000e0528 : cmp eax, 0xfffff001 ; jae 0xe0537 ; ret
0x00000000000e0558 : cmp eax, 0xfffff001 ; jae 0xe0567 ; ret
0x00000000000e0588 : cmp eax, 0xfffff001 ; jae 0xe0597 ; ret
0x00000000000e08c8 : cmp eax, 0xfffff001 ; jae 0xe08d7 ; ret
0x00000000000e0a88 : cmp eax, 0xfffff001 ; jae 0xe0a97 ; ret
0x00000000000e1098 : cmp eax, 0xfffff001 ; jae 0xe10a7 ; ret
0x00000000000e1138 : cmp eax, 0xfffff001 ; jae 0xe1147 ; ret
0x00000000000e1174 : cmp eax, 0xfffff001 ; jae 0xe11b6 ; ret
0x00000000000e12c8 : cmp eax, 0xfffff001 ; jae 0xe12d7 ; ret
0x00000000000e12f8 : cmp eax, 0xfffff001 ; jae 0xe1307 ; ret
0x00000000000e1331 : cmp eax, 0xfffff001 ; jae 0xe1370 ; ret
0x00000000000e1388 : cmp eax, 0xfffff001 ; jae 0xe1397 ; ret
0x00000000000e13c1 : cmp eax, 0xfffff001 ; jae 0xe1400 ; ret
0x00000000000e1418 : cmp eax, 0xfffff001 ; jae 0xe1427 ; ret
0x00000000000e1708 : cmp eax, 0xfffff001 ; jae 0xe1717 ; ret
0x00000000000e1738 : cmp eax, 0xfffff001 ; jae 0xe1747 ; ret
0x00000000000e1768 : cmp eax, 0xfffff001 ; jae 0xe1777 ; ret
0x00000000000e29b8 : cmp eax, 0xfffff001 ; jae 0xe29c7 ; ret
0x00000000000e29e8 : cmp eax, 0xfffff001 ; jae 0xe29f7 ; ret
0x00000000000e3f5a : cmp eax, 0xfffff001 ; jae 0xe3f69 ; ret
0x00000000000e40db : cmp eax, 0xfffff001 ; jae 0xe40ea ; ret
0x00000000000e4108 : cmp eax, 0xfffff001 ; jae 0xe4117 ; ret
0x00000000000e4138 : cmp eax, 0xfffff001 ; jae 0xe4147 ; ret
0x00000000000e4171 : cmp eax, 0xfffff001 ; jae 0xe41b0 ; ret
0x00000000000e41c8 : cmp eax, 0xfffff001 ; jae 0xe41d7 ; ret
0x00000000000e41f8 : cmp eax, 0xfffff001 ; jae 0xe4207 ; ret
0x00000000000e422b : cmp eax, 0xfffff001 ; jae 0xe423a ; ret
0x00000000000e4258 : cmp eax, 0xfffff001 ; jae 0xe4267 ; ret
0x00000000000e4288 : cmp eax, 0xfffff001 ; jae 0xe4297 ; ret
0x00000000000e42b8 : cmp eax, 0xfffff001 ; jae 0xe42c7 ; ret
0x00000000000e42e8 : cmp eax, 0xfffff001 ; jae 0xe42f7 ; ret
0x00000000000e6f8b : cmp eax, 0xfffff001 ; jae 0xe6f9a ; ret
0x00000000000e6fb8 : cmp eax, 0xfffff001 ; jae 0xe6fc7 ; ret
0x00000000000e6fe8 : cmp eax, 0xfffff001 ; jae 0xe6ff7 ; ret
0x00000000000e701b : cmp eax, 0xfffff001 ; jae 0xe702a ; ret
0x00000000000e704b : cmp eax, 0xfffff001 ; jae 0xe705a ; ret
0x00000000000e7078 : cmp eax, 0xfffff001 ; jae 0xe7087 ; ret
0x00000000000e70ab : cmp eax, 0xfffff001 ; jae 0xe70ba ; ret
0x00000000000e70d8 : cmp eax, 0xfffff001 ; jae 0xe70e7 ; ret
0x00000000000e7108 : cmp eax, 0xfffff001 ; jae 0xe7117 ; ret
0x00000000000e713b : cmp eax, 0xfffff001 ; jae 0xe714a ; ret
0x00000000000e7168 : cmp eax, 0xfffff001 ; jae 0xe7177 ; ret
0x00000000000e719b : cmp eax, 0xfffff001 ; jae 0xe71aa ; ret
0x00000000000e8118 : cmp eax, 0xfffff001 ; jae 0xe8127 ; ret
0x00000000000e8148 : cmp eax, 0xfffff001 ; jae 0xe8157 ; ret
0x00000000000e8281 : cmp eax, 0xfffff001 ; jae 0xe82c0 ; ret
0x00000000000e82e8 : cmp eax, 0xfffff001 ; jae 0xe82f7 ; ret
0x00000000000e8318 : cmp eax, 0xfffff001 ; jae 0xe8327 ; ret
0x00000000000e8348 : cmp eax, 0xfffff001 ; jae 0xe8357 ; ret
0x00000000000e8378 : cmp eax, 0xfffff001 ; jae 0xe8387 ; ret
0x00000000000e85ab : cmp eax, 0xfffff001 ; jae 0xe85ba ; ret
0x00000000000e85d8 : cmp eax, 0xfffff001 ; jae 0xe85e7 ; ret
0x00000000000e8608 : cmp eax, 0xfffff001 ; jae 0xe8617 ; ret
0x00000000000e864b : cmp eax, 0xfffff001 ; jae 0xe865a ; ret
0x00000000000e8678 : cmp eax, 0xfffff001 ; jae 0xe8687 ; ret
0x00000000000e86a8 : cmp eax, 0xfffff001 ; jae 0xe86b7 ; ret
0x00000000000e86d8 : cmp eax, 0xfffff001 ; jae 0xe86e7 ; ret
0x00000000000e8708 : cmp eax, 0xfffff001 ; jae 0xe8717 ; ret
0x00000000000e8738 : cmp eax, 0xfffff001 ; jae 0xe8747 ; ret
0x00000000000e8768 : cmp eax, 0xfffff001 ; jae 0xe8777 ; ret
0x00000000000e8798 : cmp eax, 0xfffff001 ; jae 0xe87a7 ; ret
0x00000000000e87c8 : cmp eax, 0xfffff001 ; jae 0xe87d7 ; ret
0x00000000000e87fb : cmp eax, 0xfffff001 ; jae 0xe880a ; ret
0x00000000000e8834 : cmp eax, 0xfffff001 ; jae 0xe8876 ; ret
0x00000000000e8888 : cmp eax, 0xfffff001 ; jae 0xe8897 ; ret
0x00000000000e88bb : cmp eax, 0xfffff001 ; jae 0xe88ca ; ret
0x00000000000e88e8 : cmp eax, 0xfffff001 ; jae 0xe88f7 ; ret
0x00000000000e8918 : cmp eax, 0xfffff001 ; jae 0xe8927 ; ret
0x00000000000e8948 : cmp eax, 0xfffff001 ; jae 0xe8957 ; ret
0x00000000000e8978 : cmp eax, 0xfffff001 ; jae 0xe8987 ; ret
0x00000000000e89a8 : cmp eax, 0xfffff001 ; jae 0xe89b7 ; ret
0x00000000000e89db : cmp eax, 0xfffff001 ; jae 0xe89ea ; ret
0x00000000000e8a0b : cmp eax, 0xfffff001 ; jae 0xe8a1a ; ret
0x00000000000e8a38 : cmp eax, 0xfffff001 ; jae 0xe8a47 ; ret
0x00000000000e8a68 : cmp eax, 0xfffff001 ; jae 0xe8a77 ; ret
0x00000000000e8a98 : cmp eax, 0xfffff001 ; jae 0xe8aa7 ; ret
0x00000000000e8acb : cmp eax, 0xfffff001 ; jae 0xe8ada ; ret
0x00000000000e8afb : cmp eax, 0xfffff001 ; jae 0xe8b0a ; ret
0x00000000000e8b2b : cmp eax, 0xfffff001 ; jae 0xe8b3a ; ret
0x00000000000e8b64 : cmp eax, 0xfffff001 ; jae 0xe8ba6 ; ret
0x00000000000e8bb8 : cmp eax, 0xfffff001 ; jae 0xe8bc7 ; ret
0x00000000000e8bf4 : cmp eax, 0xfffff001 ; jae 0xe8c36 ; ret
0x00000000000e8c48 : cmp eax, 0xfffff001 ; jae 0xe8c57 ; ret
0x00000000000e8c78 : cmp eax, 0xfffff001 ; jae 0xe8c87 ; ret
0x00000000000e8cb4 : cmp eax, 0xfffff001 ; jae 0xe8cf6 ; ret
0x00000000000e8d08 : cmp eax, 0xfffff001 ; jae 0xe8d17 ; ret
0x00000000000e8d3b : cmp eax, 0xfffff001 ; jae 0xe8d4a ; ret
0x00000000000e8d68 : cmp eax, 0xfffff001 ; jae 0xe8d77 ; ret
0x00000000000e8d98 : cmp eax, 0xfffff001 ; jae 0xe8da7 ; ret
0x00000000000e8dcb : cmp eax, 0xfffff001 ; jae 0xe8dda ; ret
0x00000000000e8e01 : cmp eax, 0xfffff001 ; jae 0xe8e40 ; ret
0x00000000000e8e58 : cmp eax, 0xfffff001 ; jae 0xe8e67 ; ret
0x00000000000e8e8b : cmp eax, 0xfffff001 ; jae 0xe8e9a ; ret
0x00000000000e8ebb : cmp eax, 0xfffff001 ; jae 0xe8eca ; ret
0x00000000000e8f11 : cmp eax, 0xfffff001 ; jae 0xe8f50 ; ret
0x00000000000e8f68 : cmp eax, 0xfffff001 ; jae 0xe8f77 ; ret
0x00000000000e8fa1 : cmp eax, 0xfffff001 ; jae 0xe8fe0 ; ret
0x00000000000e8ff8 : cmp eax, 0xfffff001 ; jae 0xe9007 ; ret
0x00000000000e9028 : cmp eax, 0xfffff001 ; jae 0xe9037 ; ret
0x00000000000e905b : cmp eax, 0xfffff001 ; jae 0xe906a ; ret
0x00000000000e9088 : cmp eax, 0xfffff001 ; jae 0xe9097 ; ret
0x00000000000e9184 : cmp eax, 0xfffff001 ; jae 0xe91c6 ; ret
0x00000000000e91e1 : cmp eax, 0xfffff001 ; jae 0xe9220 ; ret
0x00000000000e9301 : cmp eax, 0xfffff001 ; jae 0xe9340 ; ret
0x00000000000e9364 : cmp eax, 0xfffff001 ; jae 0xe93a6 ; ret
0x00000000000e93bb : cmp eax, 0xfffff001 ; jae 0xe93ca ; ret
0x00000000000e93e8 : cmp eax, 0xfffff001 ; jae 0xe93f7 ; ret
0x00000000000e9418 : cmp eax, 0xfffff001 ; jae 0xe9427 ; ret
0x00000000000e944b : cmp eax, 0xfffff001 ; jae 0xe945a ; ret
0x00000000000e9964 : cmp eax, 0xfffff001 ; jae 0xe99a6 ; ret
0x00000000000e99c4 : cmp eax, 0xfffff001 ; jae 0xe9a06 ; ret
0x00000000000e9a18 : cmp eax, 0xfffff001 ; jae 0xe9a27 ; ret
0x00000000000e9a48 : cmp eax, 0xfffff001 ; jae 0xe9a57 ; ret
0x00000000000e9a78 : cmp eax, 0xfffff001 ; jae 0xe9a87 ; ret
0x00000000000e9aa8 : cmp eax, 0xfffff001 ; jae 0xe9ab7 ; ret
0x00000000000e9adb : cmp eax, 0xfffff001 ; jae 0xe9aea ; ret
0x00000000000e9b0b : cmp eax, 0xfffff001 ; jae 0xe9b1a ; ret
0x00000000000e9b38 : cmp eax, 0xfffff001 ; jae 0xe9b47 ; ret
0x00000000000e9b68 : cmp eax, 0xfffff001 ; jae 0xe9b77 ; ret
0x00000000000e9b98 : cmp eax, 0xfffff001 ; jae 0xe9ba7 ; ret
0x00000000000e9bc8 : cmp eax, 0xfffff001 ; jae 0xe9bd7 ; ret
0x00000000000f52ef : cmp eax, 0xfffffe8c ; call rax
0x000000000008cd2a : cmp eax, 1 ; ja 0x8cd11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bc425 : cmp eax, 1 ; sete al ; movzx eax, al ; ret
0x00000000001152f1 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000c1ffd : cmp eax, 3 ; je 0xc200e ; ret
0x00000000000f4a7a : cmp eax, 4 ; je 0xf4a85 ; ret
0x0000000000074992 : cmp eax, dword ptr [rbx + 0x10] ; jae 0x749c1 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000001720a9 : cmp eax, dword ptr [rcx] ; add al, ah ; hlt ; jmp qword ptr [rax]
0x00000000001720a1 : cmp eax, dword ptr [rcx] ; add byte ptr [rax + 0x4e], dh ; hlt ; call rax
0x0000000000074975 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x74988 ; movzx eax, byte ptr [rax] ; ret
0x000000000001d0e1 : cmp eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret
0x000000000001cf19 : cmp eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x0000000000174aa9 : cmp eax, dword ptr [rdx] ; add byte ptr [rax + 0x4a], al ; cli ; jmp rax
0x000000000009b16e : cmp eax, dword ptr [rsi + 0x10] ; jne 0x9b269 ; ret
0x000000000009b183 : cmp eax, dword ptr [rsi + 0x14] ; jne 0x9b269 ; ret
0x000000000009b198 : cmp eax, dword ptr [rsi + 0x18] ; jne 0x9b269 ; ret
0x000000000009b1b3 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0x9b269 ; ret
0x000000000009b1ce : cmp eax, dword ptr [rsi + 0x20] ; jne 0x9b269 ; ret
0x000000000009b1e3 : cmp eax, dword ptr [rsi + 0x24] ; jne 0x9b265 ; ret
0x000000000009b1f8 : cmp eax, dword ptr [rsi + 0x28] ; jne 0x9b265 ; ret
0x000000000009b203 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0x9b265 ; ret
0x000000000009b21e : cmp eax, dword ptr [rsi + 0x30] ; jne 0x9b265 ; ret
0x000000000009b233 : cmp eax, dword ptr [rsi + 0x34] ; jne 0x9b265 ; ret
0x000000000009b248 : cmp eax, dword ptr [rsi + 0x38] ; jne 0x9b265 ; ret
0x000000000009b253 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0x9b265 ; ret
0x000000000009b153 : cmp eax, dword ptr [rsi + 0xc] ; jne 0x9b269 ; ret
0x000000000009b123 : cmp eax, dword ptr [rsi + 4] ; jne 0x9b269 ; ret
0x000000000009b138 : cmp eax, dword ptr [rsi + 8] ; jne 0x9b269 ; ret
0x000000000014bbaa : cmp eax, dword ptr [rsi - 0x10] ; jne 0x14bce9 ; ret
0x000000000014bbc3 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x14bce9 ; ret
0x000000000014bcd3 : cmp eax, dword ptr [rsi - 4] ; jne 0x14bce7 ; xor eax, eax ; ret
0x000000000014bbf3 : cmp eax, dword ptr [rsi - 4] ; jne 0x14bce9 ; ret
0x000000000014bbd8 : cmp eax, dword ptr [rsi - 8] ; jne 0x14bce9 ; ret
0x000000000009b10d : cmp eax, dword ptr [rsi] ; jne 0x9b268 ; ret
0x0000000000077619 : cmp eax, ecx ; jae 0x77647 ; movzx eax, byte ptr [rax] ; ret
0x000000000008f84d : cmp eax, ecx ; je 0x8f835 ; ret
0x0000000000003aa3 : cmp eax, ecx ; mov bl, -9 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000014b6c3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000000346d3 : cmp eax, edi ; jne 0x346d1 ; mov eax, 1 ; ret
0x00000000000405e0 : cmp eax, edi ; jne 0x405bd ; ret
0x0000000000113181 : cmp eax, edx ; je 0x113198 ; add rsp, 8 ; ret
0x000000000004290d : cmp eax, edx ; jne 0x42906 ; xor eax, eax ; ret
0x00000000000429ed : cmp eax, edx ; jne 0x429e6 ; xor eax, eax ; ret
0x00000000000ef449 : cmp eax, esi ; jb 0xef461 ; mov eax, 1 ; ret
0x0000000000090185 : cmp eax, esi ; jne 0x90179 ; mov byte ptr [r9 + 1], 0 ; ret
0x0000000000114fd8 : cmp ebp, eax ; ret 0xf0a4
0x0000000000187341 : cmp ebp, esi ; call qword ptr [rcx]
0x00000000000c579f : cmp ebp, esi ; jge 0xc5785 ; mov edx, eax ; jmp 0xc578a
0x00000000001724f5 : cmp ebp, esi ; jmp qword ptr [rax]
0x0000000000187389 : cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000001873a1 : cmp ebp, esi ; jmp qword ptr [rsi]
0x00000000001724ed : cmp ebp, esi ; jmp rax
0x000000000016e531 : cmp ebx, -1 ; nop ; test bh, bl ; call qword ptr [rax]
0x00000000000f4a16 : cmp ebx, 0xa ; je 0xf4a21 ; ret
0x000000000014c6aa : cmp ebx, ebp ; jae 0x14c6bd ; call qword ptr [rbx]
0x000000000014c6aa : cmp ebx, ebp ; jae 0x14c6c1 ; call qword ptr [rbx]
0x000000000014c6d9 : cmp ebx, ebp ; jb 0x14c6d3 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000a8394 : cmp ebx, edx ; mov dl, -1 ; cmovle rax, rdx ; pop rbx ; ret
0x00000000000a83af : cmp ebx, edx ; mov dl, 0 ; cmovge rax, rdx ; pop rbx ; ret
0x000000000004332c : cmp ecx, -1 ; jne 0x43329 ; mov rax, rdx ; ret
0x0000000000090221 : cmp ecx, -1 ; jne 0x90221 ; sub rax, 1 ; ret
0x000000000009bf8c : cmp ecx, -1 ; jne 0x9bf89 ; sub rax, 4 ; ret
0x00000000000d154a : cmp ecx, 0xa ; mov eax, edx ; je 0xd15a9 ; ret
0x0000000000073454 : cmp ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000c4422 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000d49dc : cmp ecx, dword ptr [rax - 0xc] ; jne 0xd49d8 ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000014cdfb : cmp ecx, dword ptr [rbx - 0x3f7aefb9] ; jne 0x14ce11 ; pop rbx ; ret
0x0000000000118cd5 : cmp ecx, dword ptr [rcx + 0x39] ; ror byte ptr [rdi], -0x7e ; ret
0x00000000000a8bc2 : cmp ecx, dword ptr [rdi] ; int1 ; imull 0x3c, esi ; add eax, esi ; ret
0x00000000000709de : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000148dbb : cmp ecx, eax ; jne 0x148de9 ; xor eax, eax ; ret
0x0000000000149bfb : cmp ecx, eax ; jne 0x149c29 ; xor eax, eax ; ret
0x0000000000149c2f : cmp ecx, eax ; jne 0x149c3c ; xor eax, eax ; ret
0x000000000001f508 : cmp ecx, eax ; mov eax, 0xffffffff ; cmovge eax, edx ; jmp 0x1f4e7
0x0000000000115fc5 : cmp ecx, edx ; jae 0x115fd4 ; ret
0x0000000000116005 : cmp ecx, edx ; jae 0x116014 ; ret
0x000000000008f7fc : cmp ecx, edx ; je 0x8f7f5 ; ret
0x0000000000090330 : cmp ecx, edx ; jne 0x9032d ; ret
0x000000000009b757 : cmp ecx, edx ; jne 0x9b747 ; sub eax, r8d ; ret
0x000000000008f7f8 : cmp ecx, esi ; je 0x8f7f9 ; cmp ecx, edx ; je 0x8f7f9 ; ret
0x00000000000769ea : cmp ecx, esi ; jne 0x769e7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000c7638 : cmp ecx, esi ; jne 0xc7626 ; ret
0x000000000009c1d9 : cmp edi, 0x7f ; ja 0x9c1ef ; mov eax, edi ; ret
0x00000000000c584b : cmp edi, 0x83486675 ; ret 0xeb04
0x000000000014c8e8 : cmp edi, 1 ; ja 0x14c8f5 ; ret
0x00000000000eb255 : cmp edi, 9 ; setbe al ; ret
0x00000000000447ea : cmp edi, eax ; jbe 0x447e8 ; nop ; pop rbx ; ret
0x000000000004a875 : cmp edi, ecx ; ja 0x4a860 ; mov eax, r8d ; ret
0x000000000010d4a2 : cmp edi, ecx ; jne 0x10d495 ; ret
0x00000000001749d5 : cmp edi, edx ; call rax
0x0000000000105308 : cmp edi, edx ; jg 0x1052c6 ; mov byte ptr [r11], 0 ; ret
0x00000000000e71f5 : cmp edi, edx ; jne 0xe71f0 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000dabf0 : cmp edi, esi ; ja 0xdab8d ; pop rbx ; ret
0x00000000000dac20 : cmp edi, esi ; ja 0xdac15 ; ret
0x000000000018f539 : cmp edi, esi ; jmp rax
0x000000000016f1d9 : cmp edi, esp ; call qword ptr [rax + 0x10fffc3c]
0x0000000000105307 : cmp edi, r10d ; jg 0x1052c7 ; mov byte ptr [r11], 0 ; ret
0x0000000000036db0 : cmp edx, -1 ; cmovne rax, rbx ; pop rbx ; ret
0x000000000006aa56 : cmp edx, -1 ; mov rax, rdx ; je 0x6aab1 ; pop rbx ; ret
0x0000000000072ae6 : cmp edx, -1 ; mov rax, rdx ; je 0x72b41 ; pop rbx ; ret
0x00000000000ff639 : cmp edx, -3 ; jbe 0xff645 ; ret
0x00000000000b8498 : cmp edx, 0 ; mov eax, edx ; jle 0xb84b0 ; ret
0x00000000000f8bbf : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00000000001046ad : cmp edx, 0xf410308 ; xchg eax, ebp ; ret 0xf45
0x000000000002c75b : cmp edx, dword ptr [rdi + 4] ; jb 0x2c76e ; ret
0x00000000000c23a5 : cmp edx, dword ptr [rsi + 4] ; je 0xc23b6 ; ret
0x0000000000102d2d : cmp edx, eax ; jb 0x102d59 ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001032ed : cmp edx, eax ; jne 0x1032d6 ; ret
0x000000000008e943 : cmp edx, eax ; jne 0x8e937 ; or byte ptr [rdi], sil ; ret
0x00000000000f4cc2 : cmp edx, eax ; jne 0xf4ca5 ; ret
0x00000000000a9cf4 : cmp edx, ecx ; jb 0xa9cc5 ; ret
0x0000000000115ea5 : cmp edx, ecx ; je 0x115ebd ; ret
0x000000000008f7d8 : cmp edx, ecx ; je 0x8f7d5 ; ret
0x00000000000855ac : cmp edx, ecx ; jne 0x85595 ; ret
0x000000000008bd19 : cmp edx, ecx ; jne 0x8bd15 ; ret
0x00000000000b8d6b : cmp edx, ecx ; jne 0xb8da5 ; ret
0x000000000017499d : cmp edx, edi ; call qword ptr [rax]
0x0000000000078152 : cmp edx, edi ; je 0x77f96 ; ret
0x00000000000f43ca : cmp edx, edi ; setae al ; ret
0x000000000015fc49 : cmp edx, esi ; call qword ptr [rax]
0x0000000000103856 : cmp edx, esi ; jb 0x10384d ; mov eax, 0xffffffff ; ret
0x000000000009d0ea : cmp edx, esi ; jne 0x9d0e5 ; ret
0x000000000006f76c : cmp esi, 0x28bffff ; ret
0x00000000000b2bb0 : cmp esi, 1 ; je 0xb2bc7 ; xor eax, eax ; ret
0x0000000000072fc8 : cmp esi, 2 ; je 0x72fe0 ; mov dword ptr [rdi], edx ; ret
0x00000000000c257d : cmp esi, dword ptr [rdi + 4] ; jl 0xc2576 ; ret
0x000000000010bbfa : cmp esi, dword ptr [rdx + 0x28] ; ja 0x10bbf1 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000001f847 : cmp esi, eax ; mov eax, 0xffffffff ; cmovge eax, edx ; jmp 0x1f85f
0x0000000000187461 : cmp esi, ebp ; jmp qword ptr [rcx]
0x000000000015d484 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000006ea2a : cmp esi, ecx ; jb 0x6ea27 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000123d08 : cmp esi, ecx ; jle 0x123c4d ; ret
0x000000000008a65c : cmp esi, ecx ; jne 0x8a64e ; xor eax, eax ; ret
0x0000000000044917 : cmp esi, edi ; mov rax, rdi ; cmovae rax, rsi ; ret
0x00000000000e0984 : cmp esi, edx ; ja 0xe09b5 ; ret
0x0000000000171ff5 : cmp esi, esp ; call qword ptr [rax]
0x000000000016f271 : cmp esp, 0xfc8096ff ; jmp qword ptr [rsi]
0x000000000016f3a9 : cmp esp, 0xfc8144ff ; call rsp
0x000000000017020d : cmp esp, ebp ; call rax
0x000000000016f195 : cmp esp, edi ; call qword ptr [rax + 0x10fffc3a]
0x000000000016f1d5 : cmp esp, edi ; call qword ptr [rax]
0x00000000000f0b70 : cmp qword ptr [rdi + 0x10], 0 ; je 0xf0b89 ; xor eax, eax ; ret
0x0000000000072eb3 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00000000000763e0 : cmp qword ptr [rdi + 0x38], 0 ; je 0x763f7 ; ret
0x00000000000f4367 : cmp qword ptr [rdi], 0 ; je 0xf437f ; ret
0x000000000006e497 : cmp qword ptr [rsi + 0x30], 0 ; je 0x6e4a7 ; ret
0x00000000000e4f3b : cmp qword ptr [rsi], 0 ; je 0xe4f4f ; ret
0x00000000000817e2 : cmp r10b, 3 ; je 0x81810 ; movsx eax, dl ; ret
0x00000000000817e2 : cmp r10b, 3 ; je 0x81811 ; movsx eax, dl ; ret
0x00000000001046ac : cmp r10d, 0xf410308 ; xchg eax, ebp ; ret 0xf45
0x000000000008aeca : cmp r11b, r14b ; ret
0x00000000000f4a15 : cmp r11d, 0xa ; je 0xf4a22 ; ret
0x00000000000405df : cmp r8, rdi ; jne 0x405be ; ret
0x000000000008f84c : cmp r8d, ecx ; je 0x8f836 ; ret
0x0000000000033a97 : cmp rax, -0x1000 ; ja 0x33ac9 ; ret
0x0000000000033d90 : cmp rax, -0x1000 ; ja 0x33da9 ; ret
0x0000000000033dfc : cmp rax, -0x1000 ; ja 0x33e19 ; ret
0x0000000000033e46 : cmp rax, -0x1000 ; ja 0x33e58 ; ret
0x0000000000033ecc : cmp rax, -0x1000 ; ja 0x33ee9 ; ret
0x0000000000067a00 : cmp rax, -0x1000 ; ja 0x67a19 ; ret
0x00000000000b4971 : cmp rax, -0x1000 ; ja 0xb4988 ; ret
0x00000000000b7170 : cmp rax, -0x1000 ; ja 0xb7188 ; ret
0x00000000000b721a : cmp rax, -0x1000 ; ja 0xb7230 ; ret
0x00000000000b731b : cmp rax, -0x1000 ; ja 0xb7330 ; ret
0x00000000000b7a17 : cmp rax, -0x1000 ; ja 0xb7a31 ; ret
0x00000000000b8563 : cmp rax, -0x1000 ; ja 0xb8578 ; ret
0x00000000000b85d3 : cmp rax, -0x1000 ; ja 0xb85e8 ; ret
0x00000000000b8847 : cmp rax, -0x1000 ; ja 0xb8858 ; ret
0x00000000000b88c7 : cmp rax, -0x1000 ; ja 0xb88d8 ; ret
0x00000000000dad95 : cmp rax, -0x1000 ; ja 0xdada9 ; ret
0x00000000000dade4 : cmp rax, -0x1000 ; ja 0xdadf9 ; ret
0x00000000000dae35 : cmp rax, -0x1000 ; ja 0xdae49 ; ret
0x00000000000dae8d : cmp rax, -0x1000 ; ja 0xdaea9 ; ret
0x00000000000daef1 : cmp rax, -0x1000 ; ja 0xdaf09 ; ret
0x00000000000daf4a : cmp rax, -0x1000 ; ja 0xdaf61 ; ret
0x00000000000db129 : cmp rax, -0x1000 ; ja 0xdb141 ; ret
0x00000000000db1bc : cmp rax, -0x1000 ; ja 0xdb1d9 ; ret
0x00000000000db2a0 : cmp rax, -0x1000 ; ja 0xdb2b9 ; ret
0x00000000000db7d2 : cmp rax, -0x1000 ; ja 0xdb819 ; ret
0x00000000000dc482 : cmp rax, -0x1000 ; ja 0xdc499 ; ret
0x00000000000dca83 : cmp rax, -0x1000 ; ja 0xdca99 ; ret
0x00000000000dcaea : cmp rax, -0x1000 ; ja 0xdcb01 ; ret
0x00000000000dcb4d : cmp rax, -0x1000 ; ja 0xdcb69 ; ret
0x00000000000dcbbd : cmp rax, -0x1000 ; ja 0xdcbd9 ; ret
0x00000000000df7a2 : cmp rax, -0x1000 ; ja 0xdf7b9 ; ret
0x00000000000df7f6 : cmp rax, -0x1000 ; ja 0xdf809 ; ret
0x00000000000dff4a : cmp rax, -0x1000 ; ja 0xdff60 ; ret
0x00000000000e01e6 : cmp rax, -0x1000 ; ja 0xe0219 ; ret
0x00000000000e035e : cmp rax, -0x1000 ; ja 0xe0378 ; ret
0x00000000000e0ac7 : cmp rax, -0x1000 ; ja 0xe0ad8 ; ret
0x00000000000e0b67 : cmp rax, -0x1000 ; ja 0xe0b78 ; ret
0x00000000000e0c0a : cmp rax, -0x1000 ; ja 0xe0c20 ; ret
0x00000000000e0cba : cmp rax, -0x1000 ; ja 0xe0cd0 ; ret
0x00000000000e0d65 : cmp rax, -0x1000 ; ja 0xe0d78 ; ret
0x00000000000e0dd5 : cmp rax, -0x1000 ; ja 0xe0de8 ; ret
0x00000000000e0e56 : cmp rax, -0x1000 ; ja 0xe0e68 ; ret
0x00000000000e0f06 : cmp rax, -0x1000 ; ja 0xe0f18 ; ret
0x00000000000e1456 : cmp rax, -0x1000 ; ja 0xe1469 ; ret
0x00000000000e27f7 : cmp rax, -0x1000 ; ja 0xe2811 ; ret
0x00000000000e288b : cmp rax, -0x1000 ; ja 0xe28a1 ; ret
0x00000000000e292b : cmp rax, -0x1000 ; ja 0xe2941 ; ret
0x00000000000e297f : cmp rax, -0x1000 ; ja 0xe2999 ; ret
0x00000000000e66b1 : cmp rax, -0x1000 ; ja 0xe66c9 ; ret
0x00000000000e8420 : cmp rax, -0x1000 ; ja 0xe8438 ; ret
0x00000000000e84e2 : cmp rax, -0x1000 ; ja 0xe84f9 ; ret
0x00000000000e851d : cmp rax, -0x1000 ; ja 0xe8539 ; ret
0x00000000000e90cd : cmp rax, -0x1000 ; ja 0xe90e8 ; ret
0x00000000000e924d : cmp rax, -0x1000 ; ja 0xe9268 ; ret
0x00000000000e96a7 : cmp rax, -0x1000 ; ja 0xe96b8 ; ret
0x00000000000e9749 : cmp rax, -0x1000 ; ja 0xe9760 ; ret
0x00000000000e97f9 : cmp rax, -0x1000 ; ja 0xe9810 ; ret
0x00000000000f4ffa : cmp rax, -0x1000 ; ja 0xf5011 ; ret
0x00000000000f5077 : cmp rax, -0x1000 ; ja 0xf50a3 ; ret
0x00000000000f6f0c : cmp rax, -0x1000 ; ja 0xf6f29 ; ret
0x00000000000f6fbc : cmp rax, -0x1000 ; ja 0xf6fd9 ; ret
0x0000000000034733 : cmp rax, -0x80 ; jne 0x34728 ; xor eax, eax ; ret
0x0000000000034783 : cmp rax, -0x80 ; jne 0x34778 ; xor eax, eax ; ret
0x000000000011a4ba : cmp rax, -0xfff ; jae 0x11a4cb ; ret
0x000000000011a50a : cmp rax, -0xfff ; jae 0x11a51b ; ret
0x0000000000033dc7 : cmp rax, -0xfff ; jae 0x33dd8 ; ret
0x00000000000342f7 : cmp rax, -0xfff ; jae 0x34308 ; ret
0x00000000000679c7 : cmp rax, -0xfff ; jae 0x679d8 ; ret
0x00000000000a8a17 : cmp rax, -0xfff ; jae 0xa8a28 ; ret
0x00000000000ab2f7 : cmp rax, -0xfff ; jae 0xab308 ; ret
0x00000000000ab327 : cmp rax, -0xfff ; jae 0xab338 ; ret
0x00000000000b70c7 : cmp rax, -0xfff ; jae 0xb70d8 ; ret
0x00000000000b72da : cmp rax, -0xfff ; jae 0xb72eb ; ret
0x00000000000b73b7 : cmp rax, -0xfff ; jae 0xb73c8 ; ret
0x00000000000b75a0 : cmp rax, -0xfff ; jae 0xb75e1 ; ret
0x00000000000b7600 : cmp rax, -0xfff ; jae 0xb7641 ; ret
0x00000000000b8527 : cmp rax, -0xfff ; jae 0xb8538 ; ret
0x00000000000b86e7 : cmp rax, -0xfff ; jae 0xb86f8 ; ret
0x00000000000b8717 : cmp rax, -0xfff ; jae 0xb8728 ; ret
0x00000000000b8777 : cmp rax, -0xfff ; jae 0xb8788 ; ret
0x00000000000b87a7 : cmp rax, -0xfff ; jae 0xb87b8 ; ret
0x00000000000b87d7 : cmp rax, -0xfff ; jae 0xb87e8 ; ret
0x00000000000b8807 : cmp rax, -0xfff ; jae 0xb8818 ; ret
0x00000000000d1177 : cmp rax, -0xfff ; jae 0xd1188 ; ret
0x00000000000d11a7 : cmp rax, -0xfff ; jae 0xd11b8 ; ret
0x00000000000d11d7 : cmp rax, -0xfff ; jae 0xd11e8 ; ret
0x00000000000d1207 : cmp rax, -0xfff ; jae 0xd1218 ; ret
0x00000000000d1237 : cmp rax, -0xfff ; jae 0xd1248 ; ret
0x00000000000d1267 : cmp rax, -0xfff ; jae 0xd1278 ; ret
0x00000000000d1297 : cmp rax, -0xfff ; jae 0xd12a8 ; ret
0x00000000000d12c7 : cmp rax, -0xfff ; jae 0xd12d8 ; ret
0x00000000000d9d93 : cmp rax, -0xfff ; jae 0xd9dd7 ; ret
0x00000000000d9df3 : cmp rax, -0xfff ; jae 0xd9e37 ; ret
0x00000000000dacf7 : cmp rax, -0xfff ; jae 0xdad08 ; ret
0x00000000000daf97 : cmp rax, -0xfff ; jae 0xdafa8 ; ret
0x00000000000dafc7 : cmp rax, -0xfff ; jae 0xdafd8 ; ret
0x00000000000db097 : cmp rax, -0xfff ; jae 0xdb0a8 ; ret
0x00000000000db0c7 : cmp rax, -0xfff ; jae 0xdb0d8 ; ret
0x00000000000db187 : cmp rax, -0xfff ; jae 0xdb198 ; ret
0x00000000000db200 : cmp rax, -0xfff ; jae 0xdb241 ; ret
0x00000000000db410 : cmp rax, -0xfff ; jae 0xdb451 ; ret
0x00000000000db470 : cmp rax, -0xfff ; jae 0xdb4b1 ; ret
0x00000000000db4c7 : cmp rax, -0xfff ; jae 0xdb4d8 ; ret
0x00000000000db8e7 : cmp rax, -0xfff ; jae 0xdb8f8 ; ret
0x00000000000dba30 : cmp rax, -0xfff ; jae 0xdba71 ; ret
0x00000000000dba87 : cmp rax, -0xfff ; jae 0xdba98 ; ret
0x00000000000dbab7 : cmp rax, -0xfff ; jae 0xdbac8 ; ret
0x00000000000dbae7 : cmp rax, -0xfff ; jae 0xdbaf8 ; ret
0x00000000000dbb17 : cmp rax, -0xfff ; jae 0xdbb28 ; ret
0x00000000000dbb47 : cmp rax, -0xfff ; jae 0xdbb58 ; ret
0x00000000000dbb80 : cmp rax, -0xfff ; jae 0xdbbc1 ; ret
0x00000000000dbbd7 : cmp rax, -0xfff ; jae 0xdbbe8 ; ret
0x00000000000dbc07 : cmp rax, -0xfff ; jae 0xdbc18 ; ret
0x00000000000dc3e7 : cmp rax, -0xfff ; jae 0xdc3f8 ; ret
0x00000000000dc417 : cmp rax, -0xfff ; jae 0xdc428 ; ret
0x00000000000dc447 : cmp rax, -0xfff ; jae 0xdc458 ; ret
0x00000000000dca47 : cmp rax, -0xfff ; jae 0xdca58 ; ret
0x00000000000dcab7 : cmp rax, -0xfff ; jae 0xdcac8 ; ret
0x00000000000dcb17 : cmp rax, -0xfff ; jae 0xdcb28 ; ret
0x00000000000dcb87 : cmp rax, -0xfff ; jae 0xdcb98 ; ret
0x00000000000dcbf7 : cmp rax, -0xfff ; jae 0xdcc08 ; ret
0x00000000000df430 : cmp rax, -0xfff ; jae 0xdf471 ; ret
0x00000000000df76a : cmp rax, -0xfff ; jae 0xdf77b ; ret
0x00000000000dfee3 : cmp rax, -0xfff ; jae 0xdff27 ; ret
0x00000000000e0527 : cmp rax, -0xfff ; jae 0xe0538 ; ret
0x00000000000e0557 : cmp rax, -0xfff ; jae 0xe0568 ; ret
0x00000000000e0587 : cmp rax, -0xfff ; jae 0xe0598 ; ret
0x00000000000e08c7 : cmp rax, -0xfff ; jae 0xe08d8 ; ret
0x00000000000e0a87 : cmp rax, -0xfff ; jae 0xe0a98 ; ret
0x00000000000e1097 : cmp rax, -0xfff ; jae 0xe10a8 ; ret
0x00000000000e1137 : cmp rax, -0xfff ; jae 0xe1148 ; ret
0x00000000000e1173 : cmp rax, -0xfff ; jae 0xe11b7 ; ret
0x00000000000e12c7 : cmp rax, -0xfff ; jae 0xe12d8 ; ret
0x00000000000e12f7 : cmp rax, -0xfff ; jae 0xe1308 ; ret
0x00000000000e1330 : cmp rax, -0xfff ; jae 0xe1371 ; ret
0x00000000000e1387 : cmp rax, -0xfff ; jae 0xe1398 ; ret
0x00000000000e13c0 : cmp rax, -0xfff ; jae 0xe1401 ; ret
0x00000000000e1417 : cmp rax, -0xfff ; jae 0xe1428 ; ret
0x00000000000e1707 : cmp rax, -0xfff ; jae 0xe1718 ; ret
0x00000000000e1737 : cmp rax, -0xfff ; jae 0xe1748 ; ret
0x00000000000e1767 : cmp rax, -0xfff ; jae 0xe1778 ; ret
0x00000000000e29b7 : cmp rax, -0xfff ; jae 0xe29c8 ; ret
0x00000000000e29e7 : cmp rax, -0xfff ; jae 0xe29f8 ; ret
0x00000000000e3f59 : cmp rax, -0xfff ; jae 0xe3f6a ; ret
0x00000000000e40da : cmp rax, -0xfff ; jae 0xe40eb ; ret
0x00000000000e4107 : cmp rax, -0xfff ; jae 0xe4118 ; ret
0x00000000000e4137 : cmp rax, -0xfff ; jae 0xe4148 ; ret
0x00000000000e4170 : cmp rax, -0xfff ; jae 0xe41b1 ; ret
0x00000000000e41c7 : cmp rax, -0xfff ; jae 0xe41d8 ; ret
0x00000000000e41f7 : cmp rax, -0xfff ; jae 0xe4208 ; ret
0x00000000000e422a : cmp rax, -0xfff ; jae 0xe423b ; ret
0x00000000000e4257 : cmp rax, -0xfff ; jae 0xe4268 ; ret
0x00000000000e4287 : cmp rax, -0xfff ; jae 0xe4298 ; ret
0x00000000000e42b7 : cmp rax, -0xfff ; jae 0xe42c8 ; ret
0x00000000000e42e7 : cmp rax, -0xfff ; jae 0xe42f8 ; ret
0x00000000000e6f8a : cmp rax, -0xfff ; jae 0xe6f9b ; ret
0x00000000000e6fb7 : cmp rax, -0xfff ; jae 0xe6fc8 ; ret
0x00000000000e6fe7 : cmp rax, -0xfff ; jae 0xe6ff8 ; ret
0x00000000000e701a : cmp rax, -0xfff ; jae 0xe702b ; ret
0x00000000000e704a : cmp rax, -0xfff ; jae 0xe705b ; ret
0x00000000000e7077 : cmp rax, -0xfff ; jae 0xe7088 ; ret
0x00000000000e70aa : cmp rax, -0xfff ; jae 0xe70bb ; ret
0x00000000000e70d7 : cmp rax, -0xfff ; jae 0xe70e8 ; ret
0x00000000000e7107 : cmp rax, -0xfff ; jae 0xe7118 ; ret
0x00000000000e713a : cmp rax, -0xfff ; jae 0xe714b ; ret
0x00000000000e7167 : cmp rax, -0xfff ; jae 0xe7178 ; ret
0x00000000000e719a : cmp rax, -0xfff ; jae 0xe71ab ; ret
0x00000000000e8117 : cmp rax, -0xfff ; jae 0xe8128 ; ret
0x00000000000e8147 : cmp rax, -0xfff ; jae 0xe8158 ; ret
0x00000000000e8280 : cmp rax, -0xfff ; jae 0xe82c1 ; ret
0x00000000000e82e7 : cmp rax, -0xfff ; jae 0xe82f8 ; ret
0x00000000000e8317 : cmp rax, -0xfff ; jae 0xe8328 ; ret
0x00000000000e8347 : cmp rax, -0xfff ; jae 0xe8358 ; ret
0x00000000000e8377 : cmp rax, -0xfff ; jae 0xe8388 ; ret
0x00000000000e85aa : cmp rax, -0xfff ; jae 0xe85bb ; ret
0x00000000000e85d7 : cmp rax, -0xfff ; jae 0xe85e8 ; ret
0x00000000000e8607 : cmp rax, -0xfff ; jae 0xe8618 ; ret
0x00000000000e864a : cmp rax, -0xfff ; jae 0xe865b ; ret
0x00000000000e8677 : cmp rax, -0xfff ; jae 0xe8688 ; ret
0x00000000000e86a7 : cmp rax, -0xfff ; jae 0xe86b8 ; ret
0x00000000000e86d7 : cmp rax, -0xfff ; jae 0xe86e8 ; ret
0x00000000000e8707 : cmp rax, -0xfff ; jae 0xe8718 ; ret
0x00000000000e8737 : cmp rax, -0xfff ; jae 0xe8748 ; ret
0x00000000000e8767 : cmp rax, -0xfff ; jae 0xe8778 ; ret
0x00000000000e8797 : cmp rax, -0xfff ; jae 0xe87a8 ; ret
0x00000000000e87c7 : cmp rax, -0xfff ; jae 0xe87d8 ; ret
0x00000000000e87fa : cmp rax, -0xfff ; jae 0xe880b ; ret
0x00000000000e8833 : cmp rax, -0xfff ; jae 0xe8877 ; ret
0x00000000000e8887 : cmp rax, -0xfff ; jae 0xe8898 ; ret
0x00000000000e88ba : cmp rax, -0xfff ; jae 0xe88cb ; ret
0x00000000000e88e7 : cmp rax, -0xfff ; jae 0xe88f8 ; ret
0x00000000000e8917 : cmp rax, -0xfff ; jae 0xe8928 ; ret
0x00000000000e8947 : cmp rax, -0xfff ; jae 0xe8958 ; ret
0x00000000000e8977 : cmp rax, -0xfff ; jae 0xe8988 ; ret
0x00000000000e89a7 : cmp rax, -0xfff ; jae 0xe89b8 ; ret
0x00000000000e89da : cmp rax, -0xfff ; jae 0xe89eb ; ret
0x00000000000e8a0a : cmp rax, -0xfff ; jae 0xe8a1b ; ret
0x00000000000e8a37 : cmp rax, -0xfff ; jae 0xe8a48 ; ret
0x00000000000e8a67 : cmp rax, -0xfff ; jae 0xe8a78 ; ret
0x00000000000e8a97 : cmp rax, -0xfff ; jae 0xe8aa8 ; ret
0x00000000000e8aca : cmp rax, -0xfff ; jae 0xe8adb ; ret
0x00000000000e8afa : cmp rax, -0xfff ; jae 0xe8b0b ; ret
0x00000000000e8b2a : cmp rax, -0xfff ; jae 0xe8b3b ; ret
0x00000000000e8b63 : cmp rax, -0xfff ; jae 0xe8ba7 ; ret
0x00000000000e8bb7 : cmp rax, -0xfff ; jae 0xe8bc8 ; ret
0x00000000000e8bf3 : cmp rax, -0xfff ; jae 0xe8c37 ; ret
0x00000000000e8c47 : cmp rax, -0xfff ; jae 0xe8c58 ; ret
0x00000000000e8c77 : cmp rax, -0xfff ; jae 0xe8c88 ; ret
0x00000000000e8cb3 : cmp rax, -0xfff ; jae 0xe8cf7 ; ret
0x00000000000e8d07 : cmp rax, -0xfff ; jae 0xe8d18 ; ret
0x00000000000e8d3a : cmp rax, -0xfff ; jae 0xe8d4b ; ret
0x00000000000e8d67 : cmp rax, -0xfff ; jae 0xe8d78 ; ret
0x00000000000e8d97 : cmp rax, -0xfff ; jae 0xe8da8 ; ret
0x00000000000e8dca : cmp rax, -0xfff ; jae 0xe8ddb ; ret
0x00000000000e8e00 : cmp rax, -0xfff ; jae 0xe8e41 ; ret
0x00000000000e8e57 : cmp rax, -0xfff ; jae 0xe8e68 ; ret
0x00000000000e8e8a : cmp rax, -0xfff ; jae 0xe8e9b ; ret
0x00000000000e8eba : cmp rax, -0xfff ; jae 0xe8ecb ; ret
0x00000000000e8f10 : cmp rax, -0xfff ; jae 0xe8f51 ; ret
0x00000000000e8f67 : cmp rax, -0xfff ; jae 0xe8f78 ; ret
0x00000000000e8fa0 : cmp rax, -0xfff ; jae 0xe8fe1 ; ret
0x00000000000e8ff7 : cmp rax, -0xfff ; jae 0xe9008 ; ret
0x00000000000e9027 : cmp rax, -0xfff ; jae 0xe9038 ; ret
0x00000000000e905a : cmp rax, -0xfff ; jae 0xe906b ; ret
0x00000000000e9087 : cmp rax, -0xfff ; jae 0xe9098 ; ret
0x00000000000e9183 : cmp rax, -0xfff ; jae 0xe91c7 ; ret
0x00000000000e91e0 : cmp rax, -0xfff ; jae 0xe9221 ; ret
0x00000000000e9300 : cmp rax, -0xfff ; jae 0xe9341 ; ret
0x00000000000e9363 : cmp rax, -0xfff ; jae 0xe93a7 ; ret
0x00000000000e93ba : cmp rax, -0xfff ; jae 0xe93cb ; ret
0x00000000000e93e7 : cmp rax, -0xfff ; jae 0xe93f8 ; ret
0x00000000000e9417 : cmp rax, -0xfff ; jae 0xe9428 ; ret
0x00000000000e944a : cmp rax, -0xfff ; jae 0xe945b ; ret
0x00000000000e9963 : cmp rax, -0xfff ; jae 0xe99a7 ; ret
0x00000000000e99c3 : cmp rax, -0xfff ; jae 0xe9a07 ; ret
0x00000000000e9a17 : cmp rax, -0xfff ; jae 0xe9a28 ; ret
0x00000000000e9a47 : cmp rax, -0xfff ; jae 0xe9a58 ; ret
0x00000000000e9a77 : cmp rax, -0xfff ; jae 0xe9a88 ; ret
0x00000000000e9aa7 : cmp rax, -0xfff ; jae 0xe9ab8 ; ret
0x00000000000e9ada : cmp rax, -0xfff ; jae 0xe9aeb ; ret
0x00000000000e9b0a : cmp rax, -0xfff ; jae 0xe9b1b ; ret
0x00000000000e9b37 : cmp rax, -0xfff ; jae 0xe9b48 ; ret
0x00000000000e9b67 : cmp rax, -0xfff ; jae 0xe9b78 ; ret
0x00000000000e9b97 : cmp rax, -0xfff ; jae 0xe9ba8 ; ret
0x00000000000e9bc7 : cmp rax, -0xfff ; jae 0xe9bd8 ; ret
0x0000000000074974 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x74989 ; movzx eax, byte ptr [rax] ; ret
0x0000000000077618 : cmp rax, rcx ; jae 0x77648 ; movzx eax, byte ptr [rax] ; ret
0x0000000000113180 : cmp rax, rdx ; je 0x113199 ; add rsp, 8 ; ret
0x000000000004290c : cmp rax, rdx ; jne 0x42907 ; xor eax, eax ; ret
0x00000000000429ec : cmp rax, rdx ; jne 0x429e7 ; xor eax, eax ; ret
0x000000000014c6a9 : cmp rbx, rbp ; jae 0x14c6be ; call qword ptr [rbx]
0x000000000014c6a9 : cmp rbx, rbp ; jae 0x14c6c2 ; call qword ptr [rbx]
0x000000000014c6d8 : cmp rbx, rbp ; jb 0x14c6d4 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000a8393 : cmp rbx, rdx ; mov dl, -1 ; cmovle rax, rdx ; pop rbx ; ret
0x00000000000a83ae : cmp rbx, rdx ; mov dl, 0 ; cmovge rax, rdx ; pop rbx ; ret
0x00000000000709dd : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000148dba : cmp rcx, rax ; jne 0x148dea ; xor eax, eax ; ret
0x0000000000149bfa : cmp rcx, rax ; jne 0x149c2a ; xor eax, eax ; ret
0x000000000009032f : cmp rcx, rdx ; jne 0x9032e ; ret
0x000000000009b756 : cmp rcx, rdx ; jne 0x9b748 ; sub eax, r8d ; ret
0x00000000000769e9 : cmp rcx, rsi ; jne 0x769e8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000c7637 : cmp rcx, rsi ; jne 0xc7627 ; ret
0x000000000014c8e7 : cmp rdi, 1 ; ja 0x14c8f6 ; ret
0x00000000000447e9 : cmp rdi, r8 ; jbe 0x447e9 ; nop ; pop rbx ; ret
0x000000000010d4a1 : cmp rdi, rcx ; jne 0x10d496 ; ret
0x00000000000e71f4 : cmp rdi, rdx ; jne 0xe71f1 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000dabef : cmp rdi, rsi ; ja 0xdab8e ; pop rbx ; ret
0x00000000000dac1f : cmp rdi, rsi ; ja 0xdac16 ; ret
0x00000000000ff638 : cmp rdx, -3 ; jbe 0xff646 ; ret
0x00000000001032ec : cmp rdx, r8 ; jne 0x1032d7 ; ret
0x000000000008e942 : cmp rdx, r8 ; jne 0x8e938 ; or byte ptr [rdi], sil ; ret
0x00000000000f4cc1 : cmp rdx, rax ; jne 0xf4ca6 ; ret
0x00000000000a9cf3 : cmp rdx, rcx ; jb 0xa9cc6 ; ret
0x0000000000115ea4 : cmp rdx, rcx ; je 0x115ebe ; ret
0x00000000000855ab : cmp rdx, rcx ; jne 0x85596 ; ret
0x000000000008bd18 : cmp rdx, rcx ; jne 0x8bd16 ; ret
0x00000000000b8d6a : cmp rdx, rcx ; jne 0xb8da6 ; ret
0x00000000000f43c9 : cmp rdx, rdi ; setae al ; ret
0x0000000000187478 : cmp rsi, rbp ; jmp qword ptr [rcx]
0x000000000006ea29 : cmp rsi, rcx ; jb 0x6ea28 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000008a65b : cmp rsi, rcx ; jne 0x8a64f ; xor eax, eax ; ret
0x00000000000e0983 : cmp rsi, rdx ; ja 0xe09b6 ; ret
0x00000000000efab2 : cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000a8377 : cmp sil, cl ; je 0xa8386 ; pop rbx ; ret
0x00000000000efada : cmp sil, dl ; cmovne eax, ecx ; ret
0x0000000000125877 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000125b77 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126a77 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000170981 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; adc dh, bh ; in eax, dx ; jmp qword ptr [rax]
0x000000000007b0a6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000018fa55 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; sub byte ptr [rdi - 9], cl ; jmp qword ptr [rcx]
0x0000000000126777 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x0000000000148839 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000003f865 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, dword ptr [rax] ; add al, ch ; ret 0xfed0
0x000000000016f779 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call rsi
0x000000000016f775 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; inc dword ptr [rsi - 0x5a] ; cld ; call rsi
0x00000000000c4e44 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000008f964 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000120ea6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126477 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126177 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000001f6e6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or rax, 0x89c08500 ; ret
0x0000000000170b45 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, eax ; call rax
0x000000000015fe3d : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call qword ptr [rax]
0x000000000016e5f5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call qword ptr [rsi]
0x000000000016e675 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x000000000016e5b5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call rcx
0x0000000000114bb3 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub eax, 0x89480005 ; ret 0xff31
0x00000000001709b9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; mov al, 1 ; out dx, al ; call qword ptr [rax]
0x000000000017fbf5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; or byte ptr [rdi - 0x10], cl ; call qword ptr [rax]
0x00000000000b41ac : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr cs:[rax - 0x77], cl ; ret 0x9ce9
0x00000000001732f1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; mov esi, edi ; jmp qword ptr [rax]
0x0000000000092b20 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7b ; ret
0x0000000000171add : cmpsd dword ptr [rsi], dword ptr [rdi] ; call rax
0x000000000016f7ed : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call qword ptr [rdx]
0x000000000016f731 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call rax
0x000000000016f72d : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; inc dword ptr [rax - 0x59] ; cld ; call rax
0x000000000016f76d : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp qword ptr [rsi]
0x000000000016f92d : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp rax
0x0000000000110c3c : cmpsd dword ptr [rsi], dword ptr [rdi] ; push -0x76b7fffb ; ret 0xff31
0x000000000018f839 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000000038a6 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x000000000016e5b9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call rcx
0x000000000016e5bd : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; dec dword ptr [rsi - 0x58] ; std ; jmp rsi
0x000000000016e63d : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp qword ptr [rax]
0x00000000000ea411 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub eax, dword ptr cs:[rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000038a5 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000014c689 : cmpxchg dword ptr [rip + 0x2534f8], edx ; je 0x14c69c ; ret
0x0000000000036a53 : cqo ; idiv rsi ; ret
0x00000000000c975c : cwde ; add al, 0 ; add dh, dh ; ret 0xf08
0x0000000000174d58 : cwde ; add al, byte ptr [rax] ; loopne 0x174ddd ; cli ; jmp rax
0x0000000000030f88 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000028f0d : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000743b2 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000cd86f : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000417a7 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x67e9
0x0000000000174008 : cwde ; add dword ptr [rax], eax ; lock add ecx, edi ; jmp rax
0x000000000018ebf8 : cwde ; add esi, edi ; call qword ptr [rax]
0x000000000005ec6b : cwde ; add rax, rdx ; jmp rax
0x000000000015fcb1 : cwde ; call qword ptr [rax]
0x00000000000b42c7 : cwde ; call r14
0x0000000000174dbd : cwde ; cli ; jmp qword ptr [rax]
0x0000000000170980 : cwde ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; adc dh, bh ; in eax, dx ; jmp qword ptr [rax]
0x000000000018a498 : cwde ; in eax, -0xb ; jmp qword ptr [rcx]
0x0000000000170e80 : cwde ; leave ; add byte ptr [rax], al ; and byte ptr [rax + rsi*8], cl ; call rax
0x0000000000189368 : cwde ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000178758 : cwde ; loop 0x178749 ; call qword ptr [rcx]
0x0000000000181958 : cwde ; mov bh, -0xf ; call qword ptr [rax]
0x0000000000170c88 : cwde ; mov esp, 0xd1700000 ; out dx, eax ; call rax
0x00000000000dfebf : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000017e6b8 : cwde ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; call qword ptr [rdi]
0x000000000009bfd4 : cwde ; nop dword ptr [rax] ; ret
0x0000000000182878 : cwde ; pop rax ; call qword ptr [rcx]
0x00000000001827f8 : cwde ; pop rax ; jmp qword ptr [rcx]
0x0000000000176ec8 : cwde ; pop rsi ; jmp 0x176ece
0x0000000000176f28 : cwde ; pop rsi ; jmp 0x176f2e
0x0000000000003aa9 : cwde ; ret
0x0000000000170d90 : cwde ; ret 0
0x000000000001ce00 : cwde ; ret 0x39
0x0000000000193e98 : cwde ; sbb bh, al ; jmp qword ptr [rcx]
0x0000000000174590 : cwde ; sbb eax, dword ptr [rdx] ; add byte ptr [rax], ah ; ret
0x0000000000103ade : cwde ; shr rax, 4 ; ret
0x00000000001743fd : cwde ; stc ; call qword ptr [rax]
0x00000000001743ed : cwde ; stc ; jmp rax
0x0000000000094069 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x0000000000092051 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000009406a : dec byte ptr [rax + 0x29] ; ret 0x149
0x0000000000092052 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000007e870 : dec byte ptr [rax + 0x31] ; salc ; mov qword ptr [rax + 8], rsi ; ret
0x000000000007e7db : dec byte ptr [rax + 0x39] ; ret 0x2f74
0x000000000008ec52 : dec byte ptr [rax + 0x39] ; ret 0xe072
0x00000000000d25e3 : dec byte ptr [rax + 1] ; ret
0x000000000007a2cd : dec byte ptr [rax - 0x73] ; ret
0x000000000007ead1 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000044918 : dec byte ptr [rax - 0x77] ; clc ; cmovae rax, rsi ; ret
0x00000000000350c9 : dec byte ptr [rax - 0x77] ; ret
0x000000000007f0d6 : dec byte ptr [rax - 0x77] ; ret 0x71e8
0x00000000000ccd88 : dec byte ptr [rax - 0x77] ; ret 0x8949
0x000000000007f069 : dec byte ptr [rax - 0x77] ; ret 0xdee8
0x0000000000041f58 : dec byte ptr [rcx + 0xfdb85f8] ; xchg eax, ebp ; ret 0xe8d1
0x000000000007639a : dec byte ptr [rcx - 0x3b7cb7fd] ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000004155d : dec dword ptr [r9 + 0x39] ; ret 0x1477
0x000000000008f597 : dec dword ptr [r9 - 0x76b706b9] ; clc ; ret
0x0000000000174aef : dec dword ptr [rax + 0x1000023d] ; push rbx ; cli ; jmp rax
0x0000000000070930 : dec dword ptr [rax + 0x29] ; ret
0x00000000000941ea : dec dword ptr [rax + 0x29] ; ret 0x149
0x0000000000092192 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000060229 : dec dword ptr [rax + 0x29] ; ret 0x8944
0x0000000000039dd5 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000bb65b : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x0000000000039864 : dec dword ptr [rax + 0x39] ; ret
0x00000000001014ef : dec dword ptr [rax + 0x39] ; ret 0x870f
0x00000000000b6c73 : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x00000000000b6ca8 : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x4589
0x00000000000b594a : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8941
0x00000000000ed41f : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0x00000000000ed2ad : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x9848
0x0000000000046cab : dec dword ptr [rax + 0x39] ; ror byte ptr [rdi], 1 ; sahf ; ret 0xca20
0x0000000000046387 : dec dword ptr [rax + 0x39] ; ror dword ptr [rdi], -0x72 ; ret
0x0000000000047dcb : dec dword ptr [rax + 0x39] ; ror dword ptr [rdi], 1 ; sahf ; ret 0xc220
0x000000000017255f : dec dword ptr [rax + 0x4000015d] ; push -0xb ; call rax
0x00000000000a96f9 : dec dword ptr [rax + 0x63] ; les r9d, ptr [r8 + 1] ; ret
0x0000000000057b8a : dec dword ptr [rax + 0x63] ; ret
0x00000000000d2015 : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000000bdf0e : dec dword ptr [rax + 0x63] ; ret 0x9589
0x0000000000083ad9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000085ad4 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x0000000000036db2 : dec dword ptr [rax + 0xf] ; ret
0x000000000007e701 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000000eac2b : dec dword ptr [rax + 0xf] ; ret 0x8948
0x00000000000dd79e : dec dword ptr [rax + 0xf] ; ret 0x894c
0x0000000000074459 : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000000000011c778 : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x000000000002c5e9 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x00000000000a8397 : dec dword ptr [rax + 0xf] ; ret 0xc35b
0x0000000000119cdf : dec dword ptr [rax + 1] ; ret
0x0000000000034583 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000008c125 : dec dword ptr [rax - 0x39] ; ret
0x00000000000da6ba : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000532a9 : dec dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x39] ; ret 0x237f
0x00000000000c31c0 : dec dword ptr [rax - 0x3f] ; out 2, eax ; call 0x1f447
0x000000000017095f : dec dword ptr [rax - 0x3fffff5b] ; in eax, dx ; call rax
0x0000000000170837 : dec dword ptr [rax - 0x3fffff63] ; xor al, 0xffffffffffffffed ; jmp qword ptr [rax]
0x00000000000dfebd : dec dword ptr [rax - 0x68] ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000016fdc7 : dec dword ptr [rax - 0x6fffff9f] ; jmp 0x16fdd7
0x00000000000e1e54 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000205ee : dec dword ptr [rax - 0x73] ; add eax, 0x38228a ; ret
0x000000000009ba7b : dec dword ptr [rax - 0x73] ; lock ; ret
0x00000000000d3668 : dec dword ptr [rax - 0x75] ; adc dword ptr [rax - 0x7d], ecx ; ret
0x0000000000102c1e : dec dword ptr [rax - 0x75] ; add byte ptr [r8 + 1], r9b ; ret
0x00000000001165a5 : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000118f11 : dec dword ptr [rax - 0x75] ; or byte ptr [rax - 0x75], cl ; xor al, ch ; ret 0xb
0x000000000007ebdf : dec dword ptr [rax - 0x77] ; add byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x0000000000085778 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000000e0a36 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000010862c : dec dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000007f184 : dec dword ptr [rax - 0x77] ; fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x000000000011608c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000001150c9 : dec dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x00000000000f13fe : dec dword ptr [rax - 0x77] ; fisttp word ptr [rax - 0x7d] ; ret
0x00000000000ee95f : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000bc374 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x000000000009fcce : dec dword ptr [rax - 0x77] ; jmp 0x9fd21
0x00000000000a23c6 : dec dword ptr [rax - 0x77] ; jmp 0xa2419
0x00000000000a47b9 : dec dword ptr [rax - 0x77] ; jmp 0xa47d6
0x00000000000fcfe0 : dec dword ptr [rax - 0x77] ; lock pop rbx ; ret
0x000000000014bf0e : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x000000000002c87e : dec dword ptr [rax - 0x77] ; ret
0x00000000000e0883 : dec dword ptr [rax - 0x77] ; ret 0x1777
0x00000000000e0971 : dec dword ptr [rax - 0x77] ; ret 0x1977
0x00000000000bae43 : dec dword ptr [rax - 0x77] ; ret 0x1deb
0x00000000000a5e6a : dec dword ptr [rax - 0x77] ; ret 0x1e75
0x00000000000569c1 : dec dword ptr [rax - 0x77] ; ret 0x2274
0x000000000004923b : dec dword ptr [rax - 0x77] ; ret 0x24eb
0x0000000000072a7a : dec dword ptr [rax - 0x77] ; ret 0x38b
0x00000000000490de : dec dword ptr [rax - 0x77] ; ret 0x3aeb
0x000000000007b037 : dec dword ptr [rax - 0x77] ; ret 0x3d83
0x0000000000065101 : dec dword ptr [rax - 0x77] ; ret 0x46e8
0x0000000000102b64 : dec dword ptr [rax - 0x77] ; ret 0x47e9
0x0000000000034924 : dec dword ptr [rax - 0x77] ; ret 0x4e77
0x0000000000034832 : dec dword ptr [rax - 0x77] ; ret 0x5077
0x0000000000051b82 : dec dword ptr [rax - 0x77] ; ret 0x51ff
0x00000000000b9904 : dec dword ptr [rax - 0x77] ; ret 0x6b8
0x00000000000e024e : dec dword ptr [rax - 0x77] ; ret 0x7c77
0x000000000010ff55 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000007ac8d : dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000004c61a : dec dword ptr [rax - 0x77] ; ret 0x858b
0x00000000000c8091 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000008cd77 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000058705 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000000456af : dec dword ptr [rax - 0x77] ; ret 0x8d0f
0x0000000000076022 : dec dword ptr [rax - 0x77] ; ret 0x8d4a
0x000000000002b0c5 : dec dword ptr [rax - 0x77] ; ret 0xae9
0x000000000011cad6 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x00000000000b4d6c : dec dword ptr [rax - 0x77] ; ret 0xbb
0x00000000000ddcd7 : dec dword ptr [rax - 0x77] ; ret 0xbceb
0x000000000008b989 : dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000c46fb : dec dword ptr [rax - 0x77] ; ret 0xc148
0x000000000007e24e : dec dword ptr [rax - 0x77] ; ret 0xcb8
0x000000000004cd20 : dec dword ptr [rax - 0x77] ; ret 0xf5e9
0x000000000006354d : dec dword ptr [rax - 0x77] ; ret 0xfae8
0x000000000010bd1a : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000575ba : dec dword ptr [rax - 0x77] ; rol dword ptr [rbp - 0x77], 1 ; ret 0x8948
0x000000000006aa58 : dec dword ptr [rax - 0x77] ; sal byte ptr [rdx + rcx*2 + 0x5b], 1 ; ret
0x00000000000a892c : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000f527f : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000000000fd4bc : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], -0x7c ; ret 0
0x00000000000e6d84 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rcx + 0x48], 0x39 ; ret
0x000000000016170f : dec dword ptr [rax - 0x7c] ; cmc ; call rax
0x000000000008bc40 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000119b01 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ff637 : dec dword ptr [rax - 0x7d] ; cli ; std ; jbe 0xff647 ; ret
0x0000000000116d06 : dec dword ptr [rax - 0x7d] ; in al, dx ; or byte ptr [rax + 0x29], cl ; ret
0x000000000007b3ca : dec dword ptr [rax - 0x7d] ; jmp qword ptr [rax]
0x000000000002bf39 : dec dword ptr [rax - 0x7d] ; ret
0x00000000000250c7 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000c7409 : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x0000000000111ce8 : dec dword ptr [rax - 0x7d] ; ret 0x4807
0x0000000000043571 : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000049271 : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000ab039 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x00000000000d896a : dec dword ptr [rax - 0x7d] ; ret 0x8901
0x00000000000d8b26 : dec dword ptr [rax - 0x7d] ; ret 0xc702
0x000000000005a3bd : dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000002a1d0 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], -0x7d ; ret 0x4801
0x0000000000072508 : dec dword ptr [rax - 0x7f] ; ret
0x0000000000133c7c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000174217 : dec dword ptr [rax] ; add byte ptr [rdx], al ; add byte ptr [rax], al ; push rdi ; stc ; jmp qword ptr [rax]
0x00000000001732ef : dec dword ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; mov esi, edi ; jmp qword ptr [rax]
0x0000000000171167 : dec dword ptr [rax] ; fild dword ptr [rax] ; add al, ah ; lock ; jmp qword ptr [rax]
0x000000000016ffa7 : dec dword ptr [rax] ; jno 0x16ffb3 ; add byte ptr [rax - 0x31], ah ; jmp 0x16ffb7
0x0000000000172977 : dec dword ptr [rax] ; jns 0x172984 ; add al, dl ; mov ah, -0xa ; jmp qword ptr [rax]
0x0000000000172937 : dec dword ptr [rax] ; js 0x172944 ; add byte ptr [rax], dl ; mov bl, -0xa ; jmp qword ptr [rax]
0x000000000017396f : dec dword ptr [rax] ; leave ; add dword ptr [rax], eax ; nop ; clc ; jmp qword ptr [rax]
0x000000000017063f : dec dword ptr [rax] ; nop ; add byte ptr [rax], al ; jnp 0x17063b ; jmp qword ptr [rax]
0x0000000000172ddf : dec dword ptr [rax] ; pop qword ptr [rcx] ; add al, dl ; sbb esi, edi ; jmp qword ptr [rax]
0x0000000000173847 : dec dword ptr [rax] ; ret 1
0x0000000000171b77 : dec dword ptr [rax] ; sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x3e], al ; jmp qword ptr [rax]
0x00000000001716cf : dec dword ptr [rax] ; std ; add byte ptr [rax], al ; shl byte ptr [rdx], -0xf ; jmp qword ptr [rax]
0x00000000001709ef : dec dword ptr [rax] ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; adc byte ptr [rdx - 0x11], dh ; jmp qword ptr [rax]
0x0000000000171e17 : dec dword ptr [rax] ; sub al, 1 ; add al, dl ; test dh, bl ; jmp qword ptr [rax]
0x0000000000173c3f : dec dword ptr [rax] ; xlatb ; add dword ptr [rax], eax ; nop ; jns 0x173c47 ; jmp qword ptr [rax]
0x00000000000dd073 : dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x0000000000026505 : dec dword ptr [rbp + rcx*4 + 0x46] ; add dword ptr [rbp + 0x39], ecx ; ret 0x3776
0x000000000005de8c : dec dword ptr [rbp + rcx*4 + 0x70] ; add ch, cl ; ret 0xffff
0x00000000000a9151 : dec dword ptr [rbp + rcx*4 + 0x7d] ; ret 0x8d48
0x00000000000bfddf : dec dword ptr [rbp + rcx*4 + 0xc] ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x0000000000060868 : dec dword ptr [rbp - 0x77] ; ret
0x00000000000a5e67 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret 0x1e75
0x00000000000c530e : dec dword ptr [rbp - 0x7cb7febd] ; ret
0x0000000000160ec3 : dec dword ptr [rbp - 0xf] ; hlt ; call rsp
0x000000000011d29c : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x0000000000053bf7 : dec dword ptr [rbx - 0x112f73] ; inc dword ptr [rcx + 0x29] ; ret 0xc801
0x00000000000394ff : dec dword ptr [rbx - 0x7ac7dbbc] ; ror byte ptr [rdi], -0x7c ; ret
0x0000000000047d21 : dec dword ptr [rcx + 0x29c189ca] ; ret 0xf101
0x000000000004155e : dec dword ptr [rcx + 0x39] ; ret 0x1477
0x0000000000049f31 : dec dword ptr [rcx + 0x39] ; ret 0x7775
0x000000000004886a : dec dword ptr [rcx + 0x39] ; ret 0x7b75
0x0000000000052860 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x00000000000eda1b : dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x0000000000069962 : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x0000000000029983 : dec dword ptr [rcx + 0x63] ; ret
0x0000000000057236 : dec dword ptr [rcx + 0x63] ; ret 0x8b48
0x00000000000a6373 : dec dword ptr [rcx + 0xf] ; ret
0x00000000000ab6b0 : dec dword ptr [rcx + rcx*4 - 0x1e] ; mov rsi, r15 ; call 0x67919
0x0000000000078120 : dec dword ptr [rcx + rcx*4 - 0x38] ; nop dword ptr [rax] ; ret
0x000000000005205d : dec dword ptr [rcx + rcx*4 - 1] ; call 0x6e356
0x000000000005c995 : dec dword ptr [rcx + rcx*4 - 9] ; jmp 0x5c962
0x000000000005d6f5 : dec dword ptr [rcx + rcx*4 - 9] ; jmp 0x5d6c2
0x00000000000dd723 : dec dword ptr [rcx - 0x73] ; add qword ptr [rax - 0x77], r9 ; ret 0x3948
0x00000000000f2661 : dec dword ptr [rcx - 0x75] ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x00000000000d53f4 : dec dword ptr [rcx - 0x75] ; push rdi ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000011c99e : dec dword ptr [rcx - 0x75] ; sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000058133 : dec dword ptr [rcx - 0x76478a3e] ; ret
0x000000000008f598 : dec dword ptr [rcx - 0x76b706b9] ; clc ; ret
0x0000000000045339 : dec dword ptr [rcx - 0x77] ; ret
0x00000000000d799f : dec dword ptr [rcx - 0x77] ; ret 0x894c
0x00000000000d8318 : dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x00000000000d3d3d : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000a887c : dec dword ptr [rcx - 0x77] ; ret 0x8e9
0x00000000000493dd : dec dword ptr [rcx - 0x77] ; ror dword ptr [rdi], -0x7c ; cmc ; ret
0x0000000000064506 : dec dword ptr [rcx - 0x7cb768fc] ; ret 0x4801
0x00000000000c6a21 : dec dword ptr [rcx - 0x7d] ; ret 0x4c20
0x00000000000e83b5 : dec dword ptr [rcx] ; clc ; ret
0x00000000000f216e : dec dword ptr [rcx] ; ret
0x0000000000074e26 : dec dword ptr [rcx] ; ret 0xfd81
0x00000000000eb256 : dec dword ptr [rcx] ; setbe al ; ret
0x0000000000104ac2 : dec dword ptr [rdi] ; add al, 0x24 ; add rsp, 0x18 ; ret
0x0000000000074ce4 : dec dword ptr [rdi] ; lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x00000000000a91f4 : dec dword ptr [rdi] ; mov bh, 0x7d ; ret 0xb70f
0x000000000002cc36 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2cbc7 ; loopne 0x2cc47 ; ret
0x00000000000ebaf5 : dec dword ptr [rdi] ; mov bh, 4 ; js 0xeba86 ; loopne 0xebb06 ; ret
0x0000000000041061 : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000001f84d : dec dword ptr [rdi] ; ret 0x3eb
0x000000000002349b : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000040a92 : dec dword ptr [rdi] ; ret 0x8341
0x0000000000038139 : dec dword ptr [rdi] ; ret 0x8348
0x0000000000101196 : dec dword ptr [rdi] ; ret 0x8589
0x000000000002ea71 : dec dword ptr [rdi] ; ret 0x8d49
0x00000000000c26f8 : dec dword ptr [rdi] ; ret 0xb8c3
0x000000000001f50e : dec dword ptr [rdi] ; ret 0xcaeb
0x000000000011850e : dec dword ptr [rdi] ; test al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000bd05f : dec dword ptr [rdi] ; test byte ptr [rbx - 0x76fffffd], ch ; ret 0x8349
0x0000000000064046 : dec dword ptr [rdi] ; test byte ptr [rsi], bl ; sub byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000116e96 : dec dword ptr [rdi] ; test ch, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000002565d : dec dword ptr [rdi] ; test dl, bl ; add al, 0 ; add bh, dh ; ret 0
0x0000000000025669 : dec dword ptr [rdi] ; test dl, cl ; add al, 0 ; add bh, dh ; ret 0
0x00000000000588dc : dec dword ptr [rdi] ; test dword ptr [rdx], edi ; out -1, al ; inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000014b550 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000005db99 : dec dword ptr [rdi] ; test esp, edx ; mov ah, -1 ; inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000005a396 : dec dword ptr [rdi] ; xchg dword ptr [rdx - 0x76ffffcf], esp ; ret 0x348
0x0000000000078e86 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x7eb
0x000000000009eb0f : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x941
0x0000000000100f26 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xf685
0x00000000000d150a : dec dword ptr [rdi] ; xchg eax, ebp ; ror byte ptr [rdi], -0x4a ; ror byte ptr [rdi], 0x47 ; ret 0x66c3
0x0000000000079a65 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x52e9
0x00000000000d4c73 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x840f
0x00000000000ba743 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8548
0x0000000000071a1a : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000016e5bf : dec dword ptr [rsi - 0x58] ; std ; jmp rsi
0x000000000017525f : dec eax ; adc al, byte ptr [rcx] ; add byte ptr [rax], al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp rax
0x0000000000174d77 : dec eax ; add al, byte ptr [r8] ; mov al, -0x7e ; cli ; jmp rax
0x0000000000174277 : dec eax ; add al, byte ptr [rdx] ; add byte ptr [rax + 0x6c], al ; stc ; jmp rax
0x000000000017217f : dec eax ; add dword ptr [r8], eax ; mov al, 0x76 ; hlt ; jmp rax
0x0000000000172207 : dec eax ; add dword ptr [rax], r8d ; jo 0x17219e ; hlt ; call qword ptr [rax]
0x0000000000171857 : dec eax ; add eax, dword ptr [rcx] ; add al, al ; stosb byte ptr [rdi], al ; int1 ; jmp rax
0x0000000000174c97 : dec eax ; add r8b, byte ptr [rax] ; lock cli ; jmp rax
0x0000000000173c9f : dec eax ; fld dword ptr [rcx] ; add byte ptr [rax - 0x7c], dh ; clc ; jmp rax
0x0000000000171377 : dec eax ; in eax, 0 ; add al, dl ; jns 0x171377 ; jmp rax
0x000000000016fed7 : dec eax ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; adc al, al ; jmp 0x16fee7
0x00000000001702c7 : dec eax ; jg 0x1702d3 ; add al, dl ; in al, dx ; jmp rax
0x000000000016ffe7 : dec eax ; jno 0x16fff3 ; add byte ptr [rax - 0x30], al ; jmp 0x16fff7
0x00000000001743bf : dec eax ; lar eax, word ptr [rax] ; mov al, -0x6c ; stc ; jmp rax
0x0000000000170597 : dec eax ; lea eax, dword ptr [rax] ; add byte ptr [rax], dh ; ja 0x170593 ; jmp rax
0x00000000001735b7 : dec eax ; mov cl, 1 ; add byte ptr [rax], dh ; mov bl, -9 ; jmp rax
0x0000000000172caf : dec eax ; mov dword ptr [rcx], eax ; add al, dl ; or al, 0xfffffffffffffff7 ; jmp rax
0x0000000000170c27 : dec eax ; mov ecx, 0xc6000000 ; out dx, eax ; call qword ptr [rax]
0x0000000000174e17 : dec eax ; push rax ; add al, byte ptr [rax] ; nop ; test al, -6 ; jmp rax
0x0000000000172467 : dec eax ; push rsp ; add dword ptr [rax], eax ; shl byte ptr [rdi], 1 ; cmc ; jmp rax
0x0000000000170807 : dec eax ; pushfq ; add byte ptr [rax], al ; add byte ptr [rsi], ch ; in eax, dx ; jmp rax
0x0000000000170adf : dec eax ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; mov edi, gs ; jmp rax
0x000000000017162f : dec eax ; stc ; add byte ptr [rax], al ; cmp bh, -0x10 ; jmp rax
0x00000000001715e7 : dec eax ; test dword ptr [rax], 0xf0f8a000 ; jmp qword ptr [rax]
0x00000000001707cf : dec eax ; wait ; add byte ptr [rax], al ; nop ; sub ch, ch ; jmp rax
0x0000000000170477 : dec eax ; xchg dword ptr [rax], eax ; add byte ptr [rax], dl ; in al, dx ; call qword ptr [rax]
0x00000000001615bb : dec eax ; xor ebp, 0xffffffff ; pop rcx ; xchg ch, dh ; jmp rsi
0x000000000004414d : dec ecx ; ret
0x000000000016f7bb : dec esp ; movsd dword ptr [rdi], dword ptr [rsi] ; cld ; push qword ptr [rdx - 0x5b] ; cld ; jmp rdx
0x00000000000941e9 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x0000000000092191 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x00000000000250c6 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000008c9cf : div byte ptr [rbp + 0xa] ; jmp 0x8c99a
0x0000000000081cc2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000008f941 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x0000000000029a4a : div byte ptr [rbx + rax + 0x5b] ; ret
0x00000000000dac21 : div dword ptr [rdi - 0x14] ; ret
0x00000000000dabf1 : div dword ptr [rdi - 0x6c] ; pop rbx ; ret
0x000000000018ac51 : div ebp ; jmp qword ptr [rcx]
0x00000000000738ef : div ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7285 : div ebx ; pop rbx ; pop rbp ; ret
0x000000000004a885 : div ecx ; add eax, r8d ; ret
0x000000000009a2aa : div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000015fd11 : div edx ; jmp qword ptr [rax]
0x000000000009a2c6 : div esi ; mov eax, eax ; ret
0x000000000006ad12 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000160bf1 : div esp ; jmp qword ptr [rdx]
0x00000000000738b5 : div esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000738b4 : div r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000738ee : div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7284 : div rbx ; pop rbx ; pop rbp ; ret
0x000000000001f515 : enter -0x1401, -0x3b ; ret
0x000000000008f84e : enter -0x208c, -0xd ; ret
0x00000000000ef683 : enter -0x2709, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000090ae1 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x000000000010cea3 : enter -0x3eb7, -0x1f ; or byte ptr [rax - 0x77], cl ; ret 0x314d
0x000000000014b6c4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000016454c : enter -0x4de, -1 ; fsub dword ptr [rdx] ; sti ; jmp rax
0x00000000000e5c80 : enter -0x518, 0x6a ; sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000094066 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x000000000009204e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000000941e6 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x000000000009218e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000010cc33 : enter -0x76b8, 0x17 ; mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x00000000001615bc : enter -0xa7d, -1 ; pop rcx ; xchg ch, dh ; jmp rsi
0x000000000011da68 : enter -5, 0x48 ; add esp, 0x18 ; ret
0x000000000007ea6c : enter 0, 0 ; call rax
0x000000000010e419 : enter 0, 0 ; jmp rcx
0x000000000010a457 : enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x0000000000171dd8 : enter 0x12a, 0 ; loopne 0x171d67 ; jmp qword ptr [rax]
0x0000000000172180 : enter 0x143, 0 ; mov al, 0x76 ; hlt ; jmp rax
0x0000000000172208 : enter 0x146, 0 ; jo 0x17219d ; hlt ; call qword ptr [rax]
0x0000000000172468 : enter 0x154, 0 ; shl byte ptr [rdi], 1 ; cmc ; jmp rax
0x0000000000172bc8 : enter 0x185, 0 ; sar bl, -0xa ; jmp rax
0x0000000000172cb0 : enter 0x189, 0 ; ror byte ptr [rdi + rsi*8], 1 ; jmp rax
0x0000000000173050 : enter 0x19a, 0 ; add byte ptr [rbx - 9], dl ; jmp rax
0x00000000000b8ecf : enter 0x1b8, 0 ; add byte ptr [rax], al ; ret
0x0000000000173ca0 : enter 0x1d9, 0 ; jo 0x173c31 ; clc ; jmp rax
0x0000000000078123 : enter 0x1f0f, 0x40 ; add bl, dh ; ret
0x0000000000174238 : enter 0x200, 0 ; shl byte ptr [rbx - 7], 1 ; jmp rax
0x0000000000174278 : enter 0x202, 0 ; insb byte ptr [rdi], dx ; stc ; jmp rax
0x00000000001743c0 : enter 0x20f, 0 ; mov al, -0x6c ; stc ; jmp rax
0x0000000000174638 : enter 0x21f, 0 ; rcr al ; stc ; jmp rax
0x0000000000174758 : enter 0x227, 0 ; nop ; sti ; stc ; jmp rax
0x000000000007761a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000174c98 : enter 0x246, 0 ; lock cli ; jmp rax
0x0000000000174d78 : enter 0x24b, 0 ; mov al, -0x7e ; cli ; jmp rax
0x0000000000174e18 : enter 0x250, 0 ; nop ; test al, -6 ; jmp rax
0x000000000004445e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000f4b20 : enter 0x2ae1, 0 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000814fd : enter 0x31c3, -0x40 ; ret
0x00000000000dabee : enter 0x3948, -9 ; ja 0xdab8f ; pop rbx ; ret
0x000000000011a43e : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x000000000002d431 : enter 0x415d, 0x5c ; pop r13 ; ret
0x0000000000110db7 : enter 0x4189, 0x48 ; mov eax, 1 ; ret
0x0000000000110d14 : enter 0x4189, 0x54 ; mov eax, 1 ; ret
0x0000000000110de4 : enter 0x4189, 0x58 ; mov eax, 1 ; ret
0x000000000011168b : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x000000000011156b : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x00000000000f80c6 : enter 0x577, -0x17 ; ret 0xfa44
0x0000000000001b11 : enter 0x59e7, 0x5b ; ret 0x2a63
0x000000000011a45e : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000002d3ba : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x000000000007e9c6 : enter 0x5d5b, 0x41 ; pop rsp ; ret
0x000000000016fed8 : enter 0x6d, 0 ; adc al, al ; jmp 0x16fee6
0x000000000016ffe8 : enter 0x71, 0 ; shr bl, 1 ; jmp rax
0x00000000001702c8 : enter 0x7f, 0 ; rol byte ptr [rcx - 0x14], 1 ; jmp rax
0x000000000015dc3c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000170598 : enter 0x8d, 0 ; xor byte ptr [rdi - 0x14], dh ; jmp rax
0x0000000000036a3d : enter 0x948, -0x30 ; ret
0x00000000001707d0 : enter 0x9b, 0 ; nop ; sub ch, ch ; jmp rax
0x0000000000170808 : enter 0x9c, 0 ; add byte ptr [rsi], ch ; in eax, dx ; jmp rax
0x0000000000083b14 : enter 0x9ff, 0 ; ret
0x0000000000170ae0 : enter 0xaf, 0 ; mov edi, gs ; jmp rax
0x0000000000170c28 : enter 0xb9, 0 ; add dh, al ; out dx, eax ; call qword ptr [rax]
0x0000000000171378 : enter 0xe5, 0 ; sar byte ptr [rcx - 0x10], 1 ; jmp rax
0x00000000000a5ed0 : enter 0xf03, -0x7b ; ret 7
0x0000000000020665 : enter 0xf41, -0x6c ; sar byte ptr [rdi + rbx*2], 0xf ; xchg eax, esp ; ret 0x944
0x00000000001488e6 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000007ff21 : enter 0xf66, -0x15 ; ret
0x0000000000171630 : enter 0xf9, 0 ; cmp bh, -0x10 ; jmp rax
0x00000000000978c4 : enter 5, 0 ; ret
0x000000000017151d : f2xm1 ; jmp qword ptr [rax]
0x0000000000171111 : fadd dword ptr [rax] ; add al, dl ; lock ; call qword ptr [rax]
0x0000000000067cb7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000761b7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000076543 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000000407d6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000f530c : fadd dword ptr [rax] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c0836 : fadd dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x000000000006cd41 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ae3ba : fadd dword ptr [rcx - 0x77] ; ret
0x00000000000f5114 : fadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x00000000000fa910 : fadd qword ptr [rax + 0x2a] ; add byte ptr [rax - 0x77], cl ; ret 0x850f
0x000000000017da14 : fadd qword ptr [rbp - 0x7df80000] ; out dx, eax ; call qword ptr [rdx]
0x0000000000189914 : fadd qword ptr [rcx + rax] ; mov cl, al ; cmc ; call qword ptr [rdx]
0x000000000000d020 : fadd qword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000058630 : fadd qword ptr [rcx] ; add byte ptr [rbx - 0x76be0008], al ; ret 0x8b48
0x000000000014bce8 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x0000000000149c3e : fadd st(3) ; ret
0x0000000000189b88 : fadd st(5) ; cmc ; call qword ptr [rsi]
0x0000000000181a14 : fadd st(5), st(0) ; add byte ptr [rax], al ; cwde ; mov bh, -0xf ; call qword ptr [rax]
0x00000000000e6d60 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x0000000000148431 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000014c3ec : fbstp dword ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a8d4c : fcmovb st(0), st(1) ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000015d278 : fcmovb st(0), st(3) ; ret
0x000000000009be41 : fcmovne st(0), st(7) ; or al, byte ptr [rax] ; ret
0x0000000000174e90 : fcom dword ptr [rdx + 2] ; add al, al ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x0000000000176614 : fcom qword ptr [rcx] ; add byte ptr [rax], al ; clc ; xor ebp, ebx ; call qword ptr [rdx]
0x000000000018ab14 : fcom qword ptr [rsi + 1] ; add byte ptr [rax], bl ; lock cmc ; jmp qword ptr [rcx]
0x0000000000189f28 : fcom st(1) ; cmc ; jmp qword ptr [rcx]
0x00000000001060f4 : fcomi st(3) ; ret
0x00000000000eca5d : fcomp dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x00000000000e1c07 : fcomp dword ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000008fffd : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000029be7 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000033fd8 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000030e73 : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000007efec : fcomp dword ptr [rbx - 0x3d] ; nop ; xor eax, eax ; ret
0x000000000007c556 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000015dff9 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000000e49fb : fcomp dword ptr [rdx + 0x5b] ; ret
0x000000000010ba60 : fcomp qword ptr [rbp - 9] ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000b30d3 : fcomp qword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000015c260 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000008f850 : fcompi st(3) ; ret
0x0000000000160df5 : fcompi st(4) ; call qword ptr [rsi]
0x000000000007c1fb : fcos ; dec dword ptr [rax - 0x77] ; ret 0x3d83
0x0000000000067325 : fdiv dword ptr [rax + rbx + 0x48] ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000170b28 : fdiv dword ptr [rcx - 0x5c100000] ; out dx, eax ; jmp qword ptr [rax]
0x000000000017c914 : fdiv qword ptr [rax + rax] ; pop rax ; out dx, eax ; jmp rbx
0x0000000000178c14 : fdiv qword ptr [rdi] ; add byte ptr [rax], al ; sbb bl, ch ; jmp 0x178c22
0x0000000000178da8 : fdiv st(2) ; jmp 0x178dae
0x0000000000178dd8 : fdiv st(2) ; jmp 0x178dde
0x0000000000178e08 : fdiv st(2) ; jmp 0x178e0e
0x00000000000d14f4 : fdiv st(3) ; ret
0x000000000016e8b1 : fdiv st(3), st(0) ; jmp qword ptr [rax]
0x000000000016e8d1 : fdiv st(3), st(0) ; jmp rax
0x000000000016e8b5 : fdivp st(3) ; jmp qword ptr [rax]
0x000000000016e855 : fdivp st(3) ; jmp rax
0x00000000000da6b8 : fdivp st(5) ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000005b2c3 : fdivp st(7) ; inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x00000000000c9ac5 : fdivr dword ptr [rcx] ; ret
0x000000000018c4b8 : fdivr dword ptr [rdi - 0xa] ; jmp qword ptr [rsi]
0x000000000010c403 : fdivr qword ptr [rax + 1] ; pop rbx ; ret
0x000000000017463d : fdivr st(1) ; jmp rax
0x000000000016e8c9 : fdivr st(3) ; jmp qword ptr [rax]
0x000000000015b5b5 : fdivr st(4) ; test al, -0x69 ; xchg eax, esp ; ret
0x000000000015fe5d : fdivr st(5) ; call qword ptr [rax]
0x0000000000064253 : fdivr st(7) ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000145fbd : fdivr st(7) ; ret
0x0000000000094f1e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000db802 : fiadd dword ptr [rbx + 0x2e8247c] ; cmove eax, edx ; ret
0x0000000000055d09 : fiadd dword ptr [rcx - 0x77] ; ret 0xb58b
0x00000000000aef2e : fiadd word ptr [r9] ; ret
0x00000000000aef2f : fiadd word ptr [rcx] ; ret
0x00000000000c090d : ficomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000e55d9 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000015de46 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, -0x55 ; ret
0x000000000014c8a8 : fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x000000000011d125 : fidivr dword ptr [rax + 1] ; ret
0x0000000000171169 : fild dword ptr [rax] ; add al, ah ; lock ; jmp qword ptr [rax]
0x00000000000d6565 : fild dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], -0x6b ; ret
0x00000000000d3ee7 : fild dword ptr [rbx - 0x6af0fd08] ; ret
0x000000000004f251 : fild dword ptr [rcx + 0xf] ; lahf ; ret 0x67e
0x000000000004f2b7 : fild dword ptr [rcx + 0xf] ; lahf ; ret 0x8e0f
0x000000000008e487 : fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x00000000000a8caa : fild dword ptr [rcx - 0x7d] ; ret
0x0000000000173d19 : fild dword ptr [rcx] ; add byte ptr [rax - 0x75], dl ; clc ; call qword ptr [rax]
0x0000000000193035 : fild dword ptr [rcx] ; add byte ptr [rax], bh ; clc ; call qword ptr [rbx]
0x000000000019301d : fild dword ptr [rcx] ; add byte ptr [rax], dh ; clc ; call qword ptr [rcx]
0x00000000000e0096 : fild word ptr [rcx + 0xf] ; xor byte ptr [rcx], 0xc0 ; ret
0x000000000004a878 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x0000000000038d7d : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000011f126 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000ee90e : fimul dword ptr [rax - 0x7d] ; ret
0x000000000010862f : fimul dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000fe239 : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x0000000000039de3 : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000857a2 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000007f187 : fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x000000000007f363 : fimul dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, r12 ; call rax
0x000000000010c4f6 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x0000000000144d62 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39a5c81
0x0000000000145de2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39a6d01
0x000000000001fe91 : fimul dword ptr [rdi] ; add byte ptr [rax - 0x39], cl ; ret 0x800
0x00000000000c08d7 : fimul word ptr [rax - 0x77] ; out dx, eax ; call r12
0x000000000011608f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x0000000000038f00 : fimul word ptr [rax - 0x77] ; ret
0x000000000004699c : fimul word ptr [rax - 0x77] ; ret 0x894c
0x0000000000074fd2 : fimul word ptr [rax - 0x77] ; ret 0x8d48
0x000000000004cc0f : fimul word ptr [rax - 0x7d] ; ret
0x000000000007c411 : fimul word ptr [rax - 0x7d] ; ret 0x4810
0x0000000000042b7e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x42bd8
0x000000000004427e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x442d8
0x000000000007b97a : fimul word ptr [rbp - 0x77] ; ret 0xe889
0x00000000000bc4fb : fimul word ptr [rbx - 0x7cb7fbad] ; ret
0x000000000002aea7 : fimul word ptr [rcx + 0x63] ; xor al, 0xffffffffffffffb0 ; add rsi, r8 ; jmp rsi
0x000000000007f26d : fimul word ptr [rcx + rcx*4 - 0x11] ; call rdx
0x00000000000e5b02 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x00000000001138ae : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000001150cc : fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x000000000008bf14 : fimul word ptr [rcx - 0x77] ; ret 0x8948
0x00000000000bc5fc : fimul word ptr [rdi] ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000006e7b6 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000006e6b7 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000115171 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000744f1 : fistp word ptr [rbx + 0x5d] ; pop r12 ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000007e902 : fisttp dword ptr [rax + 0x21] ; ret
0x000000000002fc09 : fisttp dword ptr [rax + 1] ; ret
0x00000000000445c4 : fisttp dword ptr [rax - 0x73] ; add cl, byte ptr [r9 + r9*4 - 0x3e] ; jmp 0x445e8
0x00000000000dbcb6 : fisttp dword ptr [rax - 0x77] ; call 0xffffffffc352cc0d
0x000000000014c8a5 : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000043751 : fisttp dword ptr [rax - 0x77] ; ret
0x00000000000ea33e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2b2f7a ; pop rbx ; ret
0x000000000004376b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x00000000000a8d30 : fisttp dword ptr [rdi] ; ret
0x00000000000a2e22 : fisttp dword ptr [rdi] ; test byte ptr [rdi], cl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000000420c5 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x000000000008e7a2 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xc031
0x0000000000041f5c : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xe8d1
0x000000000007c9d4 : fisttp qword ptr [rax + 0x39] ; ret 0xba76
0x0000000000123b32 : fisttp qword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x000000000003b8a4 : fisttp qword ptr [rax - 0x77] ; ret
0x00000000000a90ea : fisttp qword ptr [rax - 0x7d] ; ret
0x00000000000849ca : fisttp qword ptr [rax - 1] ; ret 0xff48
0x0000000000065a2e : fisttp word ptr [rax + 0xf] ; ret 0xba66
0x000000000011cd0c : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000003e1a0 : fisttp word ptr [rax - 0x77] ; ret
0x00000000000f0be3 : fisttp word ptr [rax - 0x77] ; ret 0x5d5b
0x0000000000079140 : fisttp word ptr [rax - 0x77] ; shr ecx, cl ; ret 0
0x000000000014c579 : fisttp word ptr [rax - 0x7b] ; push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x000000000008dcc8 : fisttp word ptr [rax - 0x7d] ; ret
0x00000000000437ef : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000113ab2 : fisttp word ptr [rcx + 0xf] ; fmul qword ptr [rax - 0x7d] ; ret
0x00000000000a35ff : fisttp word ptr [rdi] ; xchg eax, ebp ; ret 0x941
0x000000000012453d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000000e02d8 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x0000000000148801 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000c8a70 : fisub dword ptr [rsi - 0x7f] ; loope 0xc8a7b ; add esi, esi ; ret
0x0000000000148501 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000126f9c : fisubr word ptr [rcx] ; ret 0xfec5
0x00000000000f4bff : fisubr word ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret 0xd975
0x0000000000182dd5 : fld dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; jmp qword ptr [rcx]
0x0000000000182dbd : fld dword ptr [rax] ; add byte ptr [rax], dh ; test esi, edx ; jmp qword ptr [rcx]
0x0000000000173ca1 : fld dword ptr [rcx] ; add byte ptr [rax - 0x7c], dh ; clc ; jmp rax
0x00000000000588a8 : fld dword ptr [rcx] ; add byte ptr [rbx - 0x76be0008], al ; ret 0x850f
0x00000000000b6183 : fld dword ptr [rdi - 0x76b7ffd2] ; ret 0x8d48
0x00000000000b1e29 : fld qword ptr [r9] ; ret
0x00000000000328bb : fld qword ptr [rax - 0x6af0a007] ; ret 0xc984
0x0000000000173d89 : fld qword ptr [rcx] ; add byte ptr [rax], al ; nop ; clc ; call qword ptr [rax]
0x00000000000b1e2a : fld qword ptr [rcx] ; ret
0x000000000015c2a1 : fld qword ptr [rsi + 0x32] ; mov bh, -0x4c ; mov edi, dword ptr [rdx] ; ret
0x000000000003360e : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000000336c8 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00000000000335a9 : fld xword ptr [rsp + 8] ; ret
0x0000000000033699 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000033679 : fld xword ptr [rsp - 0x18] ; ret
0x00000000000e2b6a : fldcw word ptr [rbx] ; add dh, al ; inc dword ptr [r8] ; ret
0x0000000000033849 : fldcw word ptr [rsp - 2] ; ret
0x00000000000b84c5 : fldenv dword ptr [rcx + rcx*4 + 0x34] ; and eax, 0x2d0 ; ret
0x000000000007abab : fldenv dword ptr [rcx] ; xor al, byte ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x0000000000123b70 : fldenv dword ptr [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000084d09 : fldenv dword ptr [rsi + 0xf] ; je 0x84d66 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008c5c7 : fldenv dword ptr [rsi + 0xf] ; je 0x8c624 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000148881 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000084c01 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000103230 : fmul dword ptr [r9 + 0x6e8dc55] ; ret 0xfff1
0x0000000000042c24 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b] ; ret
0x00000000000aef3c : fmul dword ptr [rax + 0x39] ; ret
0x0000000000026b6b : fmul dword ptr [rax + 1] ; ret
0x00000000000532e9 : fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000000b9e82 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000046999 : fmul dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret 0x894c
0x0000000000074fcf : fmul dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret 0x8d48
0x00000000000708db : fmul dword ptr [rax - 0x77] ; ret
0x00000000000eaaea : fmul dword ptr [rax - 0x77] ; ret 0xc148
0x000000000002a40c : fmul dword ptr [rax - 0x7b] ; leave ; je 0x2a41a ; call rcx
0x0000000000066cdc : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000073226 : fmul dword ptr [rcx + 0x21] ; ret
0x000000000007933f : fmul dword ptr [rcx + 0x21] ; ret 0x3949
0x0000000000103231 : fmul dword ptr [rcx + 0x6e8dc55] ; ret 0xfff1
0x00000000000ea22f : fmul qword ptr [rax + 0x39] ; ret
0x000000000017a114 : fmul qword ptr [rax + rax] ; xor bpl, bpl ; call rdi
0x00000000000597e5 : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000038e6d : fmul qword ptr [rcx - 0x77] ; dec byte ptr [rax - 0x77] ; ret
0x00000000000802b9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000860cf : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000018a314 : fmul qword ptr [rsi + 1] ; add al, ch ; jrcxz 0x18a317 ; jmp qword ptr [rcx]
0x000000000003d5b4 : fmul st(0) ; ret
0x000000000003d434 : fmulp st(1) ; ret
0x0000000000002516 : fnstenv dword ptr [rdx + rdx - 0x38975393] ; ret
0x0000000000032175 : fpatan ; ret
0x0000000000148601 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000336cc : fscale ; fstp st(1) ; ret
0x000000000016e849 : fsincos ; jmp qword ptr [rax]
0x000000000015bf87 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000008cd2e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000015c300 : fstp st(0) ; ret 0xde5d
0x00000000000336ce : fstp st(1) ; ret
0x0000000000033610 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003369d : fstp xword ptr [rdi] ; ret
0x00000000001708f8 : fsub dword ptr [rcx + 0x4f200000] ; in eax, dx ; call qword ptr [rax]
0x0000000000033dd8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000033ac8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000001709b8 : fsub dword ptr [rdi + 0x1b00000] ; out dx, al ; call qword ptr [rax]
0x0000000000164550 : fsub dword ptr [rdx] ; sti ; jmp rax
0x0000000000148901 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000090ec4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000187514 : fsub qword ptr [rax] ; add dword ptr [rax], eax ; js 0x18755c ; cmc ; jmp qword ptr [rcx]
0x0000000000099cbb : fsub qword ptr [rsi + 0xf] ; jmp 0x99c87
0x0000000000148701 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008003c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001074bb : fsub st(3), st(0) ; mov dl, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000033612 : fsubp st(1) ; ret
0x0000000000170d15 : fsubp st(7) ; jmp rax
0x000000000008e7b1 : fsubr dword ptr [rcx] ; ret 0x895b
0x000000000008e7b0 : fsubr dword ptr gs:[rcx] ; ret 0x895b
0x00000000000a673b : fsubr qword ptr [rcx] ; ret
0x00000000000f4e38 : fsubr qword ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000bb4a8 : fsubr st(0) ; ret 0xffe7
0x00000000000fda7e : fsubr st(1) ; ret 0xfffd
0x00000000000e31b6 : fsubr st(3) ; ror byte ptr [rax - 0x77], -0x21 ; call 0x1f4a8
0x000000000015dfd8 : fucom st(5) ; loop 0x15e031 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000170705 : fucomi st(4) ; call qword ptr [rax]
0x00000000000dd1fc : fucompi st(0) ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000ffa5f : fucompi st(0) ; jmp 0xffa68
0x0000000000071fdd : fucompi st(0) ; mov ebp, 0x89000041 ; ret 0x9feb
0x000000000006d29b : fucompi st(0) ; mov edi, 0x89000016 ; ret 0x3f7
0x00000000000bc377 : fucompi st(0) ; ret
0x000000000006d288 : fucompi st(0) ; ret 0x3a
0x0000000000073355 : fucompi st(0) ; sar r10d, -1 ; xor eax, eax ; pop rbx ; ret
0x000000000006d3e4 : fucompi st(0) ; sldt word ptr [rax] ; mov edx, eax ; jmp 0x6d396
0x000000000007166d : fucompi st(0) ; sub eax, 0x8900004b ; ret 0x9feb
0x000000000017464d : fyl2xp1 ; jmp qword ptr [rax]
0x000000000017652c : hlt ; adc byte ptr [rax], al ; add byte ptr [rax], dh ; jmp 0x17653a
0x00000000001948dd : hlt ; add dword ptr [rax], eax ; mov al, -0x7f ; sti ; jmp qword ptr [rdx]
0x000000000018a32c : hlt ; add qword ptr [rax], r8 ; add ah, ah ; cmc ; jmp qword ptr [rcx]
0x000000000017cbd4 : hlt ; and dword ptr [rax], eax ; add byte ptr [rax + 0x54], ch ; out dx, eax ; jmp qword ptr [rbx]
0x0000000000171ff6 : hlt ; call qword ptr [rax]
0x0000000000160bf6 : hlt ; call qword ptr [rbx]
0x000000000018679a : hlt ; call qword ptr [rdi]
0x00000000001609c6 : hlt ; call qword ptr [rdx - 0x2b000b4c]
0x0000000000186052 : hlt ; call qword ptr [rdx]
0x0000000000160df6 : hlt ; call qword ptr [rsi]
0x00000000001720a6 : hlt ; call rax
0x00000000001864ea : hlt ; call rcx
0x000000000016123a : hlt ; call rdi
0x0000000000160c42 : hlt ; call rdx
0x0000000000160e92 : hlt ; call rsi
0x00000000001609ca : hlt ; call rsp
0x000000000008f7fb : hlt ; cmp ecx, edx ; je 0x8f7f6 ; ret
0x00000000000dbcf1 : hlt ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f61e4 : hlt ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000160ec2 : hlt ; dec dword ptr [rbp - 0xf] ; hlt ; call rsp
0x000000000017217e : hlt ; dec eax ; add dword ptr [r8], eax ; mov al, 0x76 ; hlt ; jmp rax
0x0000000000172206 : hlt ; dec eax ; add dword ptr [rax], r8d ; jo 0x17219f ; hlt ; call qword ptr [rax]
0x0000000000160e91 : hlt ; hlt ; call rsi
0x0000000000160ec1 : hlt ; hlt ; dec dword ptr [rbp - 0xf] ; hlt ; call rsp
0x0000000000160e71 : hlt ; hlt ; inc dword ptr [rax - 0xe] ; hlt ; call qword ptr [rsi]
0x0000000000172006 : hlt ; inc dword ptr [rax + 0x60000137] ; hlt ; jmp rax
0x0000000000160e0a : hlt ; inc dword ptr [rax - 0xe] ; hlt ; call qword ptr [rsi]
0x0000000000160e06 : hlt ; inc dword ptr [rax - 0xe] ; hlt ; inc dword ptr [rax - 0xe] ; hlt ; call qword ptr [rsi]
0x0000000000160e1e : hlt ; inc dword ptr [rax - 0xe] ; hlt ; jmp rcx
0x000000000015c388 : hlt ; jmp 0x15c35d
0x00000000001720ae : hlt ; jmp qword ptr [rax]
0x0000000000160926 : hlt ; jmp qword ptr [rbx + rax*8 - 0x3cd8000c]
0x00000000001868a2 : hlt ; jmp qword ptr [rbx]
0x000000000018665a : hlt ; jmp qword ptr [rcx]
0x000000000016092a : hlt ; jmp qword ptr [rdi]
0x00000000001608be : hlt ; jmp qword ptr [rdx]
0x000000000017200e : hlt ; jmp rax
0x00000000001611fe : hlt ; jmp rbx
0x0000000000160e22 : hlt ; jmp rcx
0x0000000000160a22 : hlt ; jmp rdi
0x000000000016087e : hlt ; jmp rsi
0x00000000001608c6 : hlt ; jmp rsp
0x000000000014bbc5 : hlt ; jne 0x14bce7 ; ret
0x000000000014bbc4 : hlt ; jne 0x14bce8 ; ret
0x00000000000d49de : hlt ; jne 0xd49d6 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000d49dd : hlt ; jne 0xd49d7 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000d9f06 : hlt ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000160e8e : hlt ; lcall ptr [rsp + rsi*8 - 0xc] ; call rsi
0x000000000017209e : hlt ; ljmp ptr [rax + 0x7000013b] ; hlt ; call rax
0x000000000017207e : hlt ; ljmp ptr [rax - 0x4ffffec6] ; hlt ; call qword ptr [rax]
0x0000000000160bea : hlt ; ljmp ptr [rbx - 0x54000b09] ; div esp ; jmp qword ptr [rdx]
0x000000000016093a : hlt ; ljmp ptr [rbx] ; ret 0xfff4
0x0000000000160906 : hlt ; ljmp ptr [rcx] ; mov bh, -0xc ; jmp rsi
0x000000000019372c : hlt ; loop 0x193737 ; add byte ptr [rax + 0xb], ah ; clc ; call qword ptr [rdx]
0x000000000017dd2c : hlt ; mov byte ptr [rax], al ; add byte ptr [rax - 0x77], dh ; out dx, eax ; call qword ptr [rcx]
0x00000000001340ba : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c3be : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000017f92c : hlt ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; nop ; and esi, eax ; jmp qword ptr [rax]
0x000000000014b1d3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000017af91 : hlt ; out dx, al ; call qword ptr [rax]
0x00000000000738b6 : hlt ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000decdb : hlt ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000018ab2c : hlt ; push rsi ; add dword ptr [rax], eax ; xor al, dh ; cmc ; jmp qword ptr [rcx]
0x000000000008f7db : hlt ; ret
0x000000000019282c : hlt ; rol dword ptr [rcx], cl ; add byte ptr [rax], al ; jrcxz 0x192831 ; jmp qword ptr [rax]
0x000000000015c4c3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000001130bb : hlt ; sub byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000014b1d7 : hlt ; sub eax, edx ; ret
0x00000000000c5523 : hlt ; xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xc54b6 ; pop rbx ; ret
0x0000000000078629 : hlt ; xor edi, edi ; mov r13, rdx ; call qword ptr [r14]
0x0000000000161c5e : idiv bh ; call 0x21161308
0x0000000000161e5a : idiv bh ; cdq ; lodsb al, byte ptr [rsi] ; idiv bh ; ret
0x00000000000e3e86 : idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d8316 : idiv bh ; dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x0000000000044152 : idiv bh ; dec ecx ; ret
0x0000000000172bc6 : idiv bh ; enter 0x185, 0 ; sar bl, -0xa ; jmp rax
0x00000000001726ae : idiv bh ; lock imul eax, dword ptr [rcx], 0xf6153000 ; call qword ptr [rax]
0x000000000017269e : idiv bh ; mov al, 0x69 ; add dword ptr [rax], eax ; lock adc al, -0xa ; call rax
0x00000000000e4421 : idiv bh ; mov rax, rbx ; pop rbx ; ret
0x00000000000b351b : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x0000000000172936 : idiv bh ; or byte ptr [rax + 1], bh ; add byte ptr [rax], dl ; mov bl, -0xa ; jmp qword ptr [rax]
0x0000000000172976 : idiv bh ; or byte ptr [rcx + 1], bh ; add al, dl ; mov ah, -0xa ; jmp qword ptr [rax]
0x00000000000e49f6 : idiv bh ; pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x0000000000161c5a : idiv bh ; rcr byte ptr [rsi - 0x6117000a], -0xa ; jmp qword ptr [rax]
0x0000000000161e5e : idiv bh ; ret
0x000000000018daea : idiv bh ; ret 1
0x0000000000162394 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x000000000016eb31 : idiv bl ; inc eax ; idiv ebx ; call qword ptr [rax]
0x0000000000023496 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x000000000016eb35 : idiv ebx ; call qword ptr [rax]
0x0000000000162846 : idiv edi ; adc dl, byte ptr [rbp - 9] ; call qword ptr [rbx - 0x290008a8]
0x00000000001626b2 : idiv edi ; adc ebx, dword ptr [rdx - 9] ; call qword ptr [rbx]
0x00000000000a691e : idiv edi ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000162716 : idiv edi ; and al, 0x56 ; idiv edi ; adc ebx, dword ptr [rdx - 9] ; call qword ptr [rbx]
0x0000000000026a70 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000004414b : idiv edi ; dec ecx ; ret
0x0000000000172cae : idiv edi ; enter 0x189, 0 ; ror byte ptr [rdi + rsi*8], 1 ; jmp rax
0x000000000017304e : idiv edi ; enter 0x19a, 0 ; add byte ptr [rbx - 9], dl ; jmp rax
0x0000000000162656 : idiv edi ; in al, 0x56 ; idiv edi ; rcr dword ptr [rdx - 9], cl ; call rbx
0x00000000001625ee : idiv edi ; jge 0x162652 ; idiv edi ; rcr dword ptr [rdx - 9], cl ; call rbx
0x000000000016268a : idiv edi ; jge 0x1626ee ; idiv edi ; rcr dword ptr [rdx - 9], cl ; call rbx
0x00000000001731fe : idiv edi ; mov al, -0x5d ; add dword ptr [rax], eax ; lock test dh, bh ; jmp rax
0x0000000000172dc6 : idiv edi ; mov al, -0x72 ; add dword ptr [rax], eax ; nop ; sbb esi, edi ; call rax
0x0000000000172d86 : idiv edi ; mov eax, 0x2000018d ; sbb bh, dh ; call rax
0x0000000000172c76 : idiv edi ; mov eax, 0x60000188 ; or edi, esi ; call rax
0x00000000001731b6 : idiv edi ; mov eax, 0x800001a2 ; je 0x1731bf ; call rax
0x0000000000172d0e : idiv edi ; mov eax, 0xc000018b ; adc dh, bh ; call rax
0x000000000017323e : idiv edi ; mov eax, 0xc00001a4 ; xchg bh, dh ; call rax
0x00000000000a68da : idiv edi ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000001626ce : idiv edi ; pop rcx ; pop rax ; idiv edi ; adc ebx, dword ptr [rdx - 9] ; call qword ptr [rbx]
0x00000000001625f2 : idiv edi ; rcr dword ptr [rdx - 9], cl ; call rbx
0x0000000000162652 : idiv edi ; rcr dword ptr [rdx - 9], cl ; jmp rsp
0x000000000018f882 : idiv edi ; ret
0x000000000016260e : idiv edi ; sbb dword ptr [rcx - 9], ebx ; call rbx
0x000000000016264e : idiv edi ; stosd dword ptr [rdi], eax ; pop rax ; idiv edi ; rcr dword ptr [rdx - 9], cl ; jmp rsp
0x00000000001736fe : idiv edi ; xor byte ptr [rdi - 0x2f4fffff], 0xf7 ; jmp rax
0x0000000000106e1e : idiv edi ; xor eax, eax ; ret
0x0000000000036a56 : idiv esi ; ret
0x0000000000036a55 : idiv rsi ; ret
0x00000000000a686c : imul al ; mov ss, dword ptr [rdi + 4] ; add byte ptr [rcx], bh ; ret
0x00000000000f2169 : imul al ; push rcx ; loopne 0xf2174 ; dec dword ptr [rcx] ; ret
0x00000000000b7c48 : imul al ; ret 0xfffd
0x00000000000c893f : imul al ; stosd dword ptr [rdi], eax ; retf ; sti ; call rcx
0x00000000000fda77 : imul al ; xchg eax, ebx ; and eax, dword ptr [rax] ; add bh, dh ; fsubr st(1) ; ret 0xfffd
0x000000000016f744 : imul byte ptr [rbx - 0x54790004] ; cld ; call qword ptr [rsi]
0x0000000000094718 : imul cl ; ret 8
0x00000000000c0f77 : imul eax ; ret
0x0000000000037e43 : imul eax, dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000149d31 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000001726a1 : imul eax, dword ptr [rcx], 0xf614f000 ; call rax
0x00000000001726b1 : imul eax, dword ptr [rcx], 0xf6153000 ; call qword ptr [rax]
0x000000000005c998 : imul ebx ; ret 0xbd80
0x00000000000ef765 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000773ec : imul ecx, dword ptr [rax], -0x15 ; ret
0x00000000000ef705 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017addb : imul ecx, dword ptr [rsi], -0x70 ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000193403 : imul ecx, dword ptr [rsi], 0x38 ; ret
0x00000000000ef63f : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000faf93 : imul edi, dword ptr [rdx], 0x8948002a ; ret 0x8d48
0x00000000000478c8 : imul edi, edx, -1 ; jmp qword ptr [rax]
0x000000000016f6f1 : imul edi, esp, 0xfc6b60ff ; jmp rax
0x00000000000ef735 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000020411 : imul esp, dword ptr [rax + rdi], 0 ; pop rbx ; ret
0x000000000009545c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x0000000000002b64 : imull 0x3a, edx ; adc al, -0x19 ; ret
0x00000000000a8bc6 : imull 0x3c, esi ; add eax, esi ; ret
0x00000000000fcfdd : imull 0x8948ffff, edi ; lock pop rbx ; ret
0x0000000000003750 : in al, -0x12 ; jne 0x3732 ; ret 0x975
0x000000000019301c : in al, -0x25 ; add dword ptr [rax], eax ; jo 0x193029 ; clc ; call qword ptr [rcx]
0x00000000000b9ef9 : in al, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e40bb : in al, -0x77 ; ret
0x000000000018a331 : in al, -0xb ; jmp qword ptr [rcx]
0x000000000013409a : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000184f1c : in al, -6 ; add byte ptr [rax], al ; adc bh, cl ; call rdi
0x0000000000173775 : in al, -9 ; call rax
0x000000000019551c : in al, 0 ; add al, byte ptr [rax] ; loopne 0x19559e ; clc ; call qword ptr [rdi]
0x000000000014bbf8 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000000e8631 : in al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x0000000000186b1c : in al, 0x16 ; add dword ptr [rax], eax ; sal ch, 1 ; hlt ; call qword ptr [rbx]
0x0000000000177c1c : in al, 0x27 ; add byte ptr [rax], al ; adc dl, al ; jmp 0x177c28
0x00000000000c096b : in al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000017891c : in al, 0x34 ; add byte ptr [rax], al ; lock in eax, -0x15 ; jmp rsp
0x000000000008f84b : in al, 0x41 ; cmp eax, ecx ; je 0x8f837 ; ret
0x000000000018a01c : in al, 0x4b ; add dword ptr [rax], eax ; and cl, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a41c : in al, 0x4f ; add dword ptr [rax], eax ; and ch, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a91c : in al, 0x54 ; add dword ptr [rax], eax ; in eax, dx ; cmc ; jmp qword ptr [rbx]
0x0000000000162658 : in al, 0x56 ; idiv edi ; rcr dword ptr [rdx - 9], cl ; call rbx
0x000000000017bd1c : in al, 0x68 ; add byte ptr [rax], al ; and dil, bpl ; jmp qword ptr [rax]
0x000000000007fe3c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000000413b2 : in al, 0x74 ; sub eax, dword ptr [rcx - 0x7d] ; cld ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xca38
0x0000000000099f4e : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x000000000007fbf0 : in al, 0x75 ; and eax, 0x5c415d5b ; ret
0x00000000000decd2 : in al, 0x75 ; and eax, 0xe8ef8948 ; ret
0x000000000009d3eb : in al, 0x75 ; ret 0x8944
0x000000000009d88b : in al, 0x75 ; ret 0x894c
0x0000000000106055 : in al, 0x75 ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000100e56 : in al, 0xf ; xchg eax, ebp ; ret 0x2041
0x00000000001938bd : in al, 1 ; add al, al ; adc bh, al ; call qword ptr [rdx]
0x0000000000095f98 : in al, 6 ; add byte ptr [rax], al ; ret
0x00000000000f07a6 : in al, dx ; adc byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x000000000006bf04 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x88a
0x0000000000184824 : in al, dx ; add byte ptr [rax], al ; or byte ptr [rdi - 0xd], dl ; jmp rdx
0x000000000018405d : in al, dx ; add byte ptr [rax], al ; push rax ; xor esi, ebx ; jmp qword ptr [rcx]
0x0000000000178b24 : in al, dx ; add byte ptr ss:[rax], al ; call 0x1717771d
0x00000000000569bd : in al, dx ; add dword ptr [rbp - 0x7b], eax ; dec dword ptr [rax - 0x77] ; ret 0x2274
0x000000000011e7f0 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x000000000018a124 : in al, dx ; add qword ptr [rax], r8 ; sbb dl, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000189f24 : in al, dx ; add qword ptr [rax], rax ; fcom st(1) ; cmc ; jmp qword ptr [rcx]
0x00000000001700f6 : in al, dx ; call qword ptr [rax]
0x0000000000179d8a : in al, dx ; call qword ptr [rdi]
0x000000000017020e : in al, dx ; call rax
0x000000000017928a : in al, dx ; call rdi
0x00000000001796d2 : in al, dx ; call rdx
0x0000000000179502 : in al, dx ; call rsi
0x0000000000043de5 : in al, dx ; cmp dh, dh ; ret 0x4801
0x000000000017063e : in al, dx ; dec dword ptr [rax] ; nop ; add byte ptr [rax], al ; jnp 0x17063c ; jmp qword ptr [rax]
0x00000000001702c6 : in al, dx ; dec eax ; jg 0x1702d4 ; add al, dl ; in al, dx ; jmp rax
0x0000000000170596 : in al, dx ; dec eax ; lea eax, dword ptr [rax] ; add byte ptr [rax], dh ; ja 0x170594 ; jmp rax
0x0000000000170476 : in al, dx ; dec eax ; xchg dword ptr [rax], eax ; add byte ptr [rax], dl ; in al, dx ; call qword ptr [rax]
0x0000000000044539 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000001706b6 : in al, dx ; inc eax ; xchg eax, edx ; add byte ptr [rax], al ; mov esp, gs ; call qword ptr [rax]
0x00000000000c1f3d : in al, dx ; jl 0xc1f79 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017014e : in al, dx ; jmp qword ptr [rax]
0x0000000000179da2 : in al, dx ; jmp qword ptr [rbx]
0x0000000000179672 : in al, dx ; jmp qword ptr [rdi]
0x0000000000170146 : in al, dx ; jmp rax
0x000000000017055e : in al, dx ; ljmp ptr [rax + 0x5000008c] ; jb 0x17055c ; call rax
0x0000000000170526 : in al, dx ; ljmp ptr [rax - 0xfffff75] ; outsb dx, byte ptr [rsi] ; in al, dx ; call rax
0x000000000015de44 : in al, dx ; lock ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, -0x55 ; ret
0x000000000018de24 : in al, dx ; mov dword ptr [rcx], eax ; add byte ptr [rax], bl ; ret
0x000000000012c3ba : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000008f943 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x0000000000115304 : in al, dx ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000013449a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000d9faf : in al, dx ; or al, ch ; mov edx, 0x39fffdf2 ; ret
0x00000000000c2026 : in al, dx ; or al, ch ; ret
0x000000000010b607 : in al, dx ; or al, ch ; ret 0x7a
0x0000000000116d09 : in al, dx ; or byte ptr [rax + 0x29], cl ; ret
0x000000000006a2f6 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000007b2ca : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000011f514 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000117e3d : in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x0000000000170dc5 : in al, dx ; out dx, eax ; call rax
0x00000000001704be : in al, dx ; push qword ptr [rax + 0x30000089] ; push -0x14 ; jmp rax
0x00000000001703f6 : in al, dx ; push qword ptr [rax - 0x6fffff7c] ; in al, dx ; jmp rax
0x00000000001702fe : in al, dx ; push qword ptr [rax - 0x7fffff80] ; in al, dx ; call rax
0x000000000008f74b : in al, dx ; ret
0x00000000000f7222 : in al, dx ; sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d1ab7c
0x00000000000db021 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000161238 : in al, dx ; sti ; hlt ; call rdi
0x000000000016ead5 : in al, dx ; sti ; jmp qword ptr [rax]
0x0000000000177d24 : in al, dx ; sub byte ptr [rax], al ; add al, bh ; ret
0x000000000011ce12 : in al, dx ; sub byte ptr [rbx + rcx*4 + 0x2d], cl ; popfq ; jmp qword ptr [rdi]
0x000000000007a910 : in al, dx ; sub byte ptr [rdx], dh ; add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x000000000015da1e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x15d9b1 ; ret 0x48f
0x000000000015da1d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x15d9b2 ; ret 0x48f
0x00000000000d29e1 : in al, dx ; xor byte ptr [rax - 0x77], cl ; ret
0x00000000000fe9a2 : in al, dx ; xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x000000000010c8f3 : in al, dx ; xor dh, dh ; ret 0xc707
0x000000000009bfd2 : in eax, -0x15 ; cwde ; nop dword ptr [rax] ; ret
0x0000000000178921 : in eax, -0x15 ; jmp rsp
0x000000000018a409 : in eax, -0xb ; jmp qword ptr [rcx]
0x000000000013411a : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000008a75a : in eax, -0xd ; ret
0x000000000015d4a1 : in eax, -1 ; lahf ; mov dh, -0x39 ; ret 0xe71f
0x00000000000eeed2 : in eax, -9 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000171379 : in eax, 0 ; add al, dl ; jns 0x171375 ; jmp rax
0x0000000000183955 : in eax, 0 ; add byte ptr [rax], bl ; sbb bl, dh ; call rdi
0x000000000015c123 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000009b75a : in eax, 0x44 ; sub eax, eax ; ret
0x00000000000856ca : in eax, 0x48 ; mov eax, edi ; ret
0x0000000000044a52 : in eax, 0x48 ; mov eax, esi ; ret
0x000000000010be2f : in eax, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f5175 : in eax, 0x5d ; ret
0x000000000015b3b9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000009b533 : in eax, 0xf ; je 0x9b558 ; add rax, 2 ; ret
0x0000000000038efc : in eax, dx ; add dword ptr [rcx - 0x77], ecx ; fimul word ptr [rax - 0x77] ; ret
0x000000000003b8a0 : in eax, dx ; add dword ptr [rcx - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x000000000003e19c : in eax, dx ; add dword ptr [rcx - 0x77], ecx ; fisttp word ptr [rax - 0x77] ; ret
0x000000000004dc59 : in eax, dx ; add eax, dword ptr [rbp - 0x60f0be13] ; ret 0xf641
0x00000000000ff93a : in eax, dx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001708fe : in eax, dx ; call qword ptr [rax]
0x0000000000170966 : in eax, dx ; call rax
0x0000000000159fb2 : in eax, dx ; call rbx
0x000000000017a11a : in eax, dx ; call rdi
0x0000000000173f7d : in eax, dx ; clc ; call qword ptr [rax]
0x000000000018a921 : in eax, dx ; cmc ; jmp qword ptr [rbx]
0x000000000017095e : in eax, dx ; dec dword ptr [rax - 0x3fffff5b] ; in eax, dx ; call rax
0x0000000000170836 : in eax, dx ; dec dword ptr [rax - 0x3fffff63] ; xor al, 0xffffffffffffffed ; jmp qword ptr [rax]
0x0000000000170806 : in eax, dx ; dec eax ; pushfq ; add byte ptr [rax], al ; add byte ptr [rsi], ch ; in eax, dx ; jmp rax
0x00000000001707ce : in eax, dx ; dec eax ; wait ; add byte ptr [rax], al ; nop ; sub ch, ch ; jmp rax
0x00000000001719b5 : in eax, dx ; int1 ; call rax
0x000000000017083e : in eax, dx ; jmp qword ptr [rax]
0x00000000001707d6 : in eax, dx ; jmp rax
0x000000000014c43f : in eax, dx ; jne 0x14c421 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007387f : in eax, dx ; jne 0x73897 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d50da : in eax, dx ; jne 0xd50c9 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f7249 : in eax, dx ; jne 0xf7261 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000099bd2 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000099599 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000995af : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000995d1 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000995ef : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009960f : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x0000000000099635 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000099651 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x0000000000099671 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000099691 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000996b7 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000996d9 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000996f7 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000099717 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000099733 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x0000000000099753 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x0000000000099773 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000099793 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000997b9 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x0000000000099809 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000994df : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000994fd : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009951d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009953f : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009955f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009957f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000099415 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x0000000000099427 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009943d : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x0000000000099455 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009946b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009947d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009949b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000994a7 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000994bd : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x0000000000099401 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000009db37 : in eax, dx ; mov edx, eax ; jmp 0x9dae2
0x00000000000a0167 : in eax, dx ; mov edx, eax ; jmp 0xa0112
0x00000000000a25f7 : in eax, dx ; mov edx, eax ; jmp 0xa25a2
0x000000000012c1ca : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013451a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000cb6a4 : in eax, dx ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x0000000000123080 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000170dcd : in eax, dx ; out dx, eax ; call qword ptr [rax]
0x00000000000b74f8 : in eax, dx ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014c8aa : in eax, dx ; pop rbx ; ret
0x000000000014c5e8 : in eax, dx ; push rbx ; ret
0x000000000006dfb2 : in eax, dx ; ret
0x000000000016eb15 : in eax, dx ; sti ; call qword ptr [rax - 0x1f000412]
0x0000000000099d22 : in eax, dx ; sub rax, 1 ; ret
0x000000000008d1ef : in eax, dx ; test al, al ; je 0x8d1e4 ; xor eax, eax ; ret
0x000000000008f88a : in eax, dx ; xor eax, eax ; ret
0x0000000000126f26 : inc bl ; jb 0x126f36 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000127416 : inc bl ; jb 0x127426 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001277b6 : inc bl ; jb 0x1277c6 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000855d5 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000000b2bb1 : inc byte ptr [rcx] ; je 0xb2bc6 ; xor eax, eax ; ret
0x0000000000072fc9 : inc byte ptr [rdx] ; je 0x72fdf ; mov dword ptr [rdi], edx ; ret
0x00000000000e2b2c : inc dword ptr [r8] ; ret
0x000000000016e7db : inc dword ptr [rax + 0x10fffbe3] ; salc ; sti ; call rax
0x000000000016eb7b : inc dword ptr [rax + 0x10fffc33] ; cld ; call rax
0x000000000016ec8b : inc dword ptr [rax + 0x12] ; cld ; call qword ptr [rax - 0x1f0003ed]
0x000000000016e41b : inc dword ptr [rax + 0x12] ; sti ; push qword ptr [rax] ; adc edi, ebx ; jmp qword ptr [rax]
0x000000000016ecdf : inc dword ptr [rax + 0x19] ; cld ; call qword ptr [rax - 0x1f0003e6]
0x0000000000173ec7 : inc dword ptr [rax + 0x1e9] ; retf ; clc ; call rax
0x000000000016ec63 : inc dword ptr [rax + 0x26] ; cld ; call qword ptr [rax]
0x000000000016ebcb : inc dword ptr [rax + 0x2b] ; cld ; jmp qword ptr [rax]
0x000000000016ec37 : inc dword ptr [rax + 0x30] ; cld ; inc dword ptr [rax + 0x32] ; cld ; call rax
0x000000000016e56f : inc dword ptr [rax + 0x30fffd9e] ; lahf ; std ; jmp qword ptr [rax]
0x000000000016ec3b : inc dword ptr [rax + 0x32] ; cld ; call rax
0x000000000016e49b : inc dword ptr [rax + 0x45] ; sti ; jmp qword ptr [rax]
0x000000000016ef23 : inc dword ptr [rax + 0x5c] ; cld ; call rax
0x000000000016ed0b : inc dword ptr [rax + 0x5f] ; cld ; call rax
0x0000000000172007 : inc dword ptr [rax + 0x60000137] ; hlt ; jmp rax
0x000000000016e4ef : inc dword ptr [rax + 0x6a] ; sti ; call qword ptr [rax - 0x1f000495]
0x00000000000c20b5 : inc dword ptr [rax + 0x7500637b] ; add al, 0x5b ; ret
0x000000000016ecbf : inc dword ptr [rax + 0xd] ; cld ; call qword ptr [rax]
0x000000000016e9ef : inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x000000000016e3e3 : inc dword ptr [rax + 5] ; sti ; call qword ptr [rax]
0x000000000016f8a3 : inc dword ptr [rax + rbp*4 - 4] ; call rsp
0x0000000000053375 : inc dword ptr [rax - 0x115c43] ; jmp qword ptr [rax]
0x000000000016eb13 : inc dword ptr [rax - 0x13] ; sti ; call qword ptr [rax - 0x1f000412]
0x000000000016e81b : inc dword ptr [rax - 0x1d] ; sti ; call rax
0x000000000016e817 : inc dword ptr [rax - 0x1f] ; sti ; inc dword ptr [rax - 0x1d] ; sti ; call rax
0x000000000016e847 : inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x000000000016e8c7 : inc dword ptr [rax - 0x28] ; sti ; jmp qword ptr [rax]
0x000000000016ec9b : inc dword ptr [rax - 0x2f0003e9] ; sbb ah, bh ; jmp qword ptr [rax]
0x000000000016eb23 : inc dword ptr [rax - 0x2f00040e] ; sti ; jmp qword ptr [rax]
0x000000000016eacf : inc dword ptr [rax - 0x2f000415] ; in al, dx ; sti ; jmp qword ptr [rax]
0x000000000016e4bf : inc dword ptr [rax - 0x2f0004a6] ; pop rbx ; sti ; jmp qword ptr [rax]
0x000000000015fc9f : inc dword ptr [rax - 0x2f000d71] ; xchg eax, ecx ; jmp qword ptr [rax]
0x000000000016e933 : inc dword ptr [rax - 0x31] ; sti ; call qword ptr [rax - 0x1f000430]
0x000000000016e947 : inc dword ptr [rax - 0x3f] ; sti ; call qword ptr [rax - 0x1f00043e]
0x00000000000461f8 : inc dword ptr [rax - 0x4ff43] ; jmp qword ptr [rax]
0x00000000001736ff : inc dword ptr [rax - 0x4ffffe49] ; sal bh, 1 ; jmp rax
0x000000000016f907 : inc dword ptr [rax - 0x55] ; cld ; call rax
0x0000000000047976 : inc dword ptr [rax - 0x59443] ; jmp qword ptr [rax]
0x000000000016f72f : inc dword ptr [rax - 0x59] ; cld ; call rax
0x000000000015fe3b : inc dword ptr [rax - 0x5a] ; std ; call qword ptr [rax]
0x000000000016e673 : inc dword ptr [rax - 0x5a] ; std ; jmp rax
0x00000000001600ff : inc dword ptr [rax - 0x5f000c8c] ; je 0x160102 ; call rax
0x00000000001600fe : inc dword ptr [rax - 0x5f000c8c] ; je 0x160103 ; call rax
0x0000000000170b3f : inc dword ptr [rax - 0x6fffff4e] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, eax ; call rax
0x000000000015fc8f : inc dword ptr [rax - 0x7a] ; call qword ptr [rax - 0x1f000d78]
0x000000000016f40f : inc dword ptr [rax - 0x7c] ; cld ; call rax
0x000000000016eb77 : inc dword ptr [rax - 0x7f0003cf] ; xor edi, esp ; call qword ptr [rax]
0x000000000016ec17 : inc dword ptr [rax - 0x7f0003d0] ; xor bh, ah ; call qword ptr [rax]
0x000000000016e7d7 : inc dword ptr [rax - 0x7f00041f] ; jrcxz 0x16e7e2 ; call qword ptr [rax]
0x000000000016f237 : inc dword ptr [rax - 0x80] ; cld ; call rax
0x0000000000160e0b : inc dword ptr [rax - 0xe] ; hlt ; call qword ptr [rsi]
0x0000000000160e07 : inc dword ptr [rax - 0xe] ; hlt ; inc dword ptr [rax - 0xe] ; hlt ; call qword ptr [rsi]
0x0000000000160e1f : inc dword ptr [rax - 0xe] ; hlt ; jmp rcx
0x000000000016ea23 : inc dword ptr [rax - 1] ; sti ; jmp qword ptr [rax]
0x000000000016eaa7 : inc dword ptr [rax] ; add ah, bh ; jmp rax
0x0000000000174297 : inc dword ptr [rax] ; add al, 2 ; add al, al ; jo 0x1742a0 ; jmp qword ptr [rax]
0x0000000000171761 : inc dword ptr [rax] ; add al, ah ; int1 ; call rax
0x000000000016e3d3 : inc dword ptr [rax] ; add bh, bl ; call rax
0x000000000008e2bd : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xc748
0x00000000000d44ca : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000524ac : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000014bbdd : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000148e17 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000003356c : inc dword ptr [rax] ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000016ea2b : inc dword ptr [rax] ; add edi, esp ; jmp rax
0x000000000016ecbb : inc dword ptr [rax] ; and bh, ah ; inc dword ptr [rax + 0xd] ; cld ; call qword ptr [rax]
0x0000000000160043 : inc dword ptr [rax] ; call qword ptr [rax]
0x000000000015ffcb : inc dword ptr [rax] ; call qword ptr fs:[rax]
0x00000000001600ef : inc dword ptr [rax] ; je 0x1600ea ; jmp qword ptr [rax]
0x00000000001600ee : inc dword ptr [rax] ; je 0x1600eb ; jmp qword ptr [rax]
0x0000000000170087 : inc dword ptr [rax] ; je 0x170093 ; add byte ptr [rax], al ; xlatb ; jmp 0x170097
0x0000000000162f73 : inc dword ptr [rax] ; jg 0x162f75 ; jmp rax
0x0000000000160217 : inc dword ptr [rax] ; jl 0x160212 ; call qword ptr [rax]
0x0000000000160216 : inc dword ptr [rax] ; jl 0x160213 ; call qword ptr [rax]
0x000000000015ffef : inc dword ptr [rax] ; jmp qword ptr gs:[rax]
0x0000000000160187 : inc dword ptr [rax] ; jns 0x160182 ; jmp qword ptr [rax]
0x0000000000160186 : inc dword ptr [rax] ; jns 0x160183 ; jmp qword ptr [rax]
0x000000000015fc7b : inc dword ptr [rax] ; jp 0x15fc75 ; call qword ptr [rax]
0x000000000015fc7a : inc dword ptr [rax] ; jp 0x15fc76 ; call qword ptr [rax]
0x000000000015fcff : inc dword ptr [rax] ; mov dl, -0xe ; jmp qword ptr [rax]
0x000000000016e663 : inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rax + 0x20fffda4]
0x00000000000f8c10 : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x000000000016e43b : inc dword ptr [rax] ; or edi, ebx ; push qword ptr [rax + 0x1c] ; sti ; call qword ptr [rax]
0x000000000015febf : inc dword ptr [rax] ; pop rax ; call qword ptr [rax]
0x000000000015ff07 : inc dword ptr [rax] ; pop rdi ; jmp qword ptr [rax]
0x000000000016ef13 : inc dword ptr [rax] ; pop rsi ; cld ; call qword ptr [rax + 0x20fffc5d]
0x000000000016fb2f : inc dword ptr [rax] ; popfq ; cld ; push qword ptr [rax - 0x64] ; cld ; jmp rax
0x000000000016f16f : inc dword ptr [rax] ; push rcx ; cld ; push qword ptr [rax + 0x50] ; cld ; jmp rax
0x000000000015fe7f : inc dword ptr [rax] ; push rdi ; call qword ptr [rax]
0x00000000000e2b2d : inc dword ptr [rax] ; ret
0x000000000015fde7 : inc dword ptr [rax] ; sahf ; cld ; push qword ptr [rax - 0x61] ; cld ; jmp rax
0x000000000015fbc7 : inc dword ptr [rax] ; sbb dl, dh ; jmp rax
0x000000000016e47b : inc dword ptr [rax] ; sbb edi, ebx ; push qword ptr [rax] ; cmp bl, bh ; call qword ptr [rax]
0x000000000016e4a3 : inc dword ptr [rax] ; sti ; jmp rax
0x000000000016eb43 : inc dword ptr [rax] ; sub ah, bh ; jmp rax
0x000000000016f71f : inc dword ptr [rax] ; test eax, 0xa890fffc ; cld ; jmp qword ptr [rax]
0x0000000000033788 : inc dword ptr [rbp + 0xf595ac0] ; xchg eax, esp ; ret 0x2cdb
0x000000000016f5bb : inc dword ptr [rbp + rsi*2 - 4] ; call rsp
0x0000000000036aa3 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x000000000005ad89 : inc dword ptr [rbp - 0x777af040] ; ret 0xffff
0x0000000000058b26 : inc dword ptr [rbp - 0x77] ; ret 0x8ae9
0x000000000008e484 : inc dword ptr [rbp - 0x7b] ; fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x0000000000106052 : inc dword ptr [rbp - 0x7c] ; in al, 0x75 ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000000e34ef : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000000e353a : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00000000001611fb : inc dword ptr [rbp - 3] ; hlt ; jmp rbx
0x00000000000513c9 : inc dword ptr [rbx - 0x10ff43] ; jmp qword ptr [rax]
0x0000000000031c1e : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000bd49e : inc dword ptr [rbx - 0x76be0008] ; ret 0x7274
0x00000000000570a5 : inc dword ptr [rbx - 0x7cf0cf06] ; ret
0x0000000000102baf : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x00000000000625cd : inc dword ptr [rbx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000037346 : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x000000000009a2a8 : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000009a1cf : inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000052984 : inc dword ptr [rcx + 0x29] ; ret 0xc801
0x00000000000b1e26 : inc dword ptr [rcx + 0xf] ; fld qword ptr [r9] ; ret
0x00000000000a5992 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x00000000001046c8 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000016f3ab : inc dword ptr [rcx + rax*4 - 4] ; call rsp
0x000000000015fa83 : inc dword ptr [rcx + rbx*4] ; lock push qword ptr [rdx + rbx*4 - 0x10] ; call rsp
0x00000000000bfb92 : inc dword ptr [rcx - 0x1e] ; add byte ptr [rax + 0x63], cl ; ret 0xb60f
0x00000000000cb891 : inc dword ptr [rcx - 0x3a] ; and al, 8 ; or ecx, ebp ; ret
0x000000000004f7fa : inc dword ptr [rcx - 0x75] ; push rbp ; add al, -0x7d ; ret
0x00000000000bcf15 : inc dword ptr [rcx - 0x77] ; ret
0x000000000005ade0 : inc dword ptr [rcx - 0x77] ; ret 0x1875
0x000000000005d8d0 : inc dword ptr [rcx - 0x77] ; ret 0x5e75
0x00000000000bd4a1 : inc dword ptr [rcx - 0x77] ; ret 0x7274
0x0000000000055fc2 : inc dword ptr [rcx - 0x77] ; ret 0x850f
0x000000000005768f : inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x00000000000d4d0f : inc dword ptr [rcx - 0x77] ; ret 0xd341
0x000000000005de73 : inc dword ptr [rcx - 0x77] ; ret 0xd75
0x000000000004ad46 : inc dword ptr [rcx - 0x7d] ; ret
0x0000000000101a66 : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x000000000005015d : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000caba5 : inc dword ptr [rcx] ; fdivr dword ptr [rcx] ; ret
0x000000000014c8e9 : inc dword ptr [rcx] ; ja 0x14c8f4 ; ret
0x000000000016e583 : inc dword ptr [rcx] ; lahf ; std ; call rcx
0x0000000000064b8c : inc dword ptr [rcx] ; mov r13, r9 ; jmp 0x60dd8
0x00000000000b1be7 : inc dword ptr [rcx] ; ret
0x00000000000c306e : inc dword ptr [rcx] ; ret 0x5389
0x00000000000b168b : inc dword ptr [rdi + rcx + 0x49] ; ret
0x000000000016edf7 : inc dword ptr [rdx + 0x5a] ; cld ; call rdx
0x000000000016f7db : inc dword ptr [rdx - 0x57] ; cld ; call rdx
0x000000000016f2e3 : inc dword ptr [rdx - 0x7e] ; cld ; call rdx
0x000000000016ede7 : inc dword ptr [rdx] ; pop rsp ; cld ; call qword ptr [rdx + 0x22fffc5b]
0x000000000016f7cb : inc dword ptr [rdx] ; stosd dword ptr [rdi], eax ; cld ; call qword ptr [rdx + 0x22fffcaa]
0x000000000016f2d3 : inc dword ptr [rdx] ; test bh, ah ; call qword ptr [rdx + 0x22fffc83]
0x0000000000124d1d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000016ed53 : inc dword ptr [rsi + 0x5e] ; cld ; call rsi
0x000000000016f777 : inc dword ptr [rsi - 0x5a] ; cld ; call rsi
0x000000000016f26f : inc dword ptr [rsi] ; cmp esp, 0xfc8096ff ; jmp qword ptr [rsi]
0x000000000016f767 : inc dword ptr [rsi] ; test al, -4 ; call qword ptr [rsi + 0x26fffca7]
0x000000000015ffed : inc dword ptr fs:[rax] ; jmp qword ptr gs:[rax]
0x0000000000160041 : inc dword ptr gs:[rax] ; call qword ptr [rax]
0x00000000001742bf : inc eax ; add al, 2 ; add byte ptr [rax], dl ; jbe 0x1742c8 ; call qword ptr [rax]
0x0000000000160033 : inc eax ; call rax
0x000000000015fcaf : inc eax ; cwde ; call qword ptr [rax]
0x000000000016eb33 : inc eax ; idiv ebx ; call qword ptr [rax]
0x000000000016014b : inc eax ; ja 0x16014a ; push rax ; ja 0x16014e ; jmp qword ptr [rax]
0x000000000016014a : inc eax ; ja 0x16014b ; push rax ; ja 0x16014f ; jmp qword ptr [rax]
0x00000000001600e7 : inc eax ; jae 0x1600e2 ; jmp rax
0x00000000001600e6 : inc eax ; jae 0x1600e3 ; jmp rax
0x00000000001612b7 : inc eax ; jge 0x1612b4 ; call rax
0x00000000001612bf : inc eax ; jge 0x1612bc ; call qword ptr [rax]
0x0000000000162f7f : inc eax ; jle 0x162f81 ; call qword ptr [rax]
0x000000000015ffe7 : inc eax ; jmp rax
0x000000000016011f : inc eax ; jne 0x16011a ; jmp rax
0x000000000016011e : inc eax ; jne 0x16011b ; jmp rax
0x000000000015fc6b : inc eax ; jno 0x15fc65 ; call rax
0x000000000015fc6a : inc eax ; jno 0x15fc66 ; call rax
0x0000000000160207 : inc eax ; jnp 0x160202 ; call rax
0x0000000000160206 : inc eax ; jnp 0x160203 ; call rax
0x000000000016019f : inc eax ; jns 0x16019a ; call rax
0x000000000016019e : inc eax ; jns 0x16019b ; call rax
0x000000000016017b : inc eax ; js 0x160176 ; call rax
0x000000000016017a : inc eax ; js 0x160177 ; call rax
0x000000000016eadf : inc eax ; lock sti ; call qword ptr [rax]
0x0000000000170d0f : inc eax ; mov edi, 0xde500000 ; out dx, eax ; jmp rax
0x000000000015ff1f : inc eax ; pop rdi ; jmp rax
0x000000000016e4cf : inc eax ; pop rdi ; sti ; call qword ptr [rax]
0x000000000015feff : inc eax ; pop rsi ; jmp rax
0x000000000015feaf : inc eax ; push rdi ; call rax
0x000000000016f67f : inc eax ; push rdi ; cld ; jmp rax
0x000000000015fe37 : inc eax ; ret
0x000000000016e967 : inc eax ; retf ; sti ; call qword ptr [rax]
0x0000000000161c5b : inc eax ; sahf ; idiv bh ; call 0x2116130b
0x000000000016ecab : inc eax ; sbb al, -4 ; call qword ptr [rax]
0x00000000001745e7 : inc eax ; sbb eax, 0xc9700002 ; stc ; call qword ptr [rax]
0x0000000000033589 : inc eax ; shr eax, 0x1f ; ret
0x00000000001747cf : inc eax ; sub al, byte ptr [rdx] ; add byte ptr [rax], dl ; or dl, bh ; call qword ptr [rax]
0x00000000001709c7 : inc eax ; test al, 0 ; add byte ptr [rax + 0x56], ah ; out dx, al ; call qword ptr [rax]
0x00000000001706b7 : inc eax ; xchg eax, edx ; add byte ptr [rax], al ; mov esp, gs ; call qword ptr [rax]
0x0000000000171f3f : inc eax ; xor al, byte ptr [rcx] ; add al, al ; in eax, dx ; call qword ptr [rax]
0x0000000000174997 : inc eax ; xor eax, 0x39400002 ; cli ; call qword ptr [rax]
0x0000000000162399 : inc ebx ; add dh, bh ; jmp rdi
0x000000000003479e : inc ebx ; mov eax, dword ptr [rip + 0x3688e6] ; ret
0x0000000000101c1c : inc ebx ; nop ; ret
0x00000000000709ec : inc ebx ; nop ; xor eax, eax ; ret
0x000000000014b6c9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000016e79b : inc ecx ; mov ch, -3 ; call qword ptr [rax]
0x000000000016e797 : inc ecx ; mov ch, -3 ; inc ecx ; mov ch, -3 ; call qword ptr [rax]
0x000000000016e777 : inc ecx ; mov ch, -3 ; inc ecx ; mov ch, -3 ; jmp qword ptr [rax]
0x000000000016e6c7 : inc ecx ; mov ch, -3 ; inc ecx ; mov ch, -3 ; jmp rcx
0x000000000016e77b : inc ecx ; mov ch, -3 ; jmp qword ptr [rax]
0x000000000016e6cb : inc ecx ; mov ch, -3 ; jmp rcx
0x000000000016e7bb : inc ecx ; mov ch, -3 ; lcall ptr [rax] ; salc ; sti ; jmp rax
0x000000000015ed73 : inc edx ; test ebp, edi ; jmp rax
0x00000000000e1e19 : inc esi ; jmp qword ptr [r8]
0x000000000016f757 : inc esi ; test eax, 0xa956fffc ; cld ; jmp rsi
0x00000000000c306d : inc qword ptr [rcx] ; ret 0x5389
0x000000000017c0e5 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; call 0x2317b01d
0x000000000016feb1 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; lock mov ah, -0x15 ; jmp rax
0x000000000011fc94 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000003360b : insb byte ptr [rdi], dx ; and al, 0xffffffffffffffe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003369a : insb byte ptr [rdi], dx ; and al, 0xffffffffffffffe8 ; fstp xword ptr [rdi] ; ret
0x000000000003367a : insb byte ptr [rdi], dx ; and al, 0xffffffffffffffe8 ; ret
0x000000000003384a : insb byte ptr [rdi], dx ; and al, 0xfffffffffffffffe ; ret
0x00000000000336c9 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x00000000000335aa : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000001879a4 : insb byte ptr [rdi], dx ; and eax, 0x4a680001 ; cmc ; jmp qword ptr [rcx]
0x000000000016f6b9 : insb byte ptr [rdi], dx ; cld ; jmp rax
0x0000000000178da4 : insb byte ptr [rdi], dx ; cmp dword ptr [rax], eax ; add al, bl ; jmp 0x178db2
0x000000000015dfde : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000190ba4 : insb byte ptr [rdi], dx ; mov bh, 1 ; add al, cl ; test dh, bh ; jmp qword ptr [rbx]
0x000000000010e572 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x000000000017f026 : insb byte ptr [rdi], dx ; ret
0x00000000001816a4 : insb byte ptr [rdi], dx ; ret 0
0x000000000017427d : insb byte ptr [rdi], dx ; stc ; jmp rax
0x000000000016e4f9 : insb byte ptr [rdi], dx ; sti ; push qword ptr [rax + 0x59] ; sti ; call qword ptr [rax]
0x00000000000a52a8 : insb byte ptr [rdi], dx ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000122900 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000016fed9 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; adc al, al ; jmp 0x16fee5
0x000000000008d48f : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000123800 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000196fb4 : insd dword ptr [rdi], dx ; add eax, 0x3ef0000 ; add byte ptr [rax], al ; ret
0x000000000016f6bd : insd dword ptr [rdi], dx ; cld ; jmp qword ptr [rax]
0x00000000000e5c7f : insd dword ptr [rdi], dx ; enter -0x518, 0x6a ; sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000171d65 : insd dword ptr [rdi], dx ; jmp qword ptr [rax]
0x000000000015dfdf : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000001bf0 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x000000000015c38d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x000000000006833d : insd dword ptr [rdi], dx ; str word ptr [rax + 0x63] ; add al, -0x7e ; add rdx, rax ; jmp rdx
0x000000000015d29f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000000a813e : int 0x41
0x00000000000c6b2a : int 0x49
0x000000000015d467 : int 0x80
0x000000000007dabe : int 0xe9
0x00000000000cf62f : int 0xf5
0x000000000003398d : int 0xff
0x0000000000003863 : int 3
0x000000000010b78b : int1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001845bd : int1 ; add byte ptr [rax], al ; xor byte ptr [rcx - 0xd], cl ; jmp qword ptr [rdi]
0x000000000004a886 : int1 ; add eax, r8d ; ret
0x000000000018195a : int1 ; call qword ptr [rax]
0x0000000000181972 : int1 ; call qword ptr [rdx]
0x00000000001811c2 : int1 ; call qword ptr [rsi]
0x00000000001716a6 : int1 ; call rax
0x000000000009c9b6 : int1 ; call rbx
0x0000000000181012 : int1 ; call rsp
0x00000000000efa38 : int1 ; cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000d49db : int1 ; cmp ecx, dword ptr [rax - 0xc] ; jne 0xd49d9 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000001716ce : int1 ; dec dword ptr [rax] ; std ; add byte ptr [rax], al ; shl byte ptr [rdx], -0xf ; jmp qword ptr [rax]
0x0000000000171856 : int1 ; dec eax ; add eax, dword ptr [rcx] ; add al, al ; stosb byte ptr [rdi], al ; int1 ; jmp rax
0x0000000000160ec5 : int1 ; hlt ; call rsp
0x00000000000a8bc5 : int1 ; imull 0x3c, esi ; add eax, esi ; ret
0x000000000008f7f9 : int1 ; je 0x8f7f8 ; cmp ecx, edx ; je 0x8f7f8 ; ret
0x000000000015fb4a : int1 ; jmp qword ptr [rax + 0x8fff1d5]
0x000000000015fb52 : int1 ; jmp qword ptr [rax]
0x0000000000180ffa : int1 ; jmp qword ptr [rbx]
0x000000000018157a : int1 ; jmp qword ptr [rdi]
0x0000000000109b58 : int1 ; jmp qword ptr [rsi + 0xf]
0x000000000017185e : int1 ; jmp rax
0x000000000018105a : int1 ; jmp rbx
0x000000000009a265 : int1 ; jmp rcx
0x000000000018143a : int1 ; jmp rsi
0x00000000000769eb : int1 ; jne 0x769e6 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000c7639 : int1 ; jne 0xc7625 ; ret
0x0000000000003a4f : int1 ; mov dl, 0x1e ; ret
0x00000000000346d6 : int1 ; mov eax, 1 ; ret
0x0000000000133f0b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012c98f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000010bbda : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000001124f8 : int1 ; mov r8, r12 ; mov rsi, rbx ; call qword ptr [rax]
0x00000000000f42ee : int1 ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000014b1a3 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000078f2b : int1 ; or al, 0xf ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000c0614 : int1 ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x000000000009a2ab : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000000f49c2 : int1 ; pop rdx ; pop r10 ; ret
0x00000000001131c3 : int1 ; popfq ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000171946 : int1 ; push qword ptr [rax + 0xa] ; add dword ptr [rax], eax ; push rax ; sal cl, cl ; call rax
0x000000000017175e : int1 ; push qword ptr [rax - 0x1fffff01] ; int1 ; call rax
0x00000000000025eb : int1 ; ret
0x000000000015d9b6 : int1 ; ret 0x5803
0x000000000014b1a7 : int1 ; sub eax, edx ; ret
0x0000000000182345 : iretd ; add byte ptr [rax], al ; or byte ptr [rsi - 0xe], al ; jmp qword ptr [rcx]
0x0000000000173ae9 : iretd ; add dword ptr [rax], eax ; nop ; pop rsi ; clc ; call qword ptr [rax]
0x000000000011a07c : iretd ; call 0xe4108
0x0000000000184f21 : iretd ; call rdi
0x0000000000174f8d : iretd ; cli ; call qword ptr [rax]
0x0000000000174fcd : iretd ; cli ; call rax
0x000000000016ffad : iretd ; jmp 0x16ffb1
0x000000000010ff9b : iretd ; jmp r8
0x000000000007f979 : iretd ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x000000000007a9b3 : iretd ; mov qword ptr [rsp + 0x38], rcx ; call qword ptr [rax]
0x0000000000109085 : iretd ; mov r8, qword ptr [rax + 0x18] ; jmp r8
0x000000000015fe4d : iretd ; std ; call qword ptr [rax]
0x000000000016e935 : iretd ; sti ; call qword ptr [rax - 0x1f000430]
0x00000000001036e3 : ja 0x1036e8 ; ret
0x0000000000103949 : ja 0x103960 ; shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x000000000010bbfd : ja 0x10bbee ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000115eba : ja 0x115edb ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x0000000000115ee7 : ja 0x115f03 ; ret
0x000000000011605f : ja 0x116082 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000116260 : ja 0x116290 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000014c8eb : ja 0x14c8f2 ; ret
0x000000000015da24 : ja 0x15d9ab ; ret 0x48f
0x000000000015fc79 : ja 0x15fc73 ; inc dword ptr [rax] ; jp 0x15fc77 ; call qword ptr [rax]
0x0000000000160151 : ja 0x160148 ; jmp qword ptr [rax]
0x000000000016014d : ja 0x160148 ; push rax ; ja 0x16014c ; jmp qword ptr [rax]
0x000000000016e511 : ja 0x16e514 ; call qword ptr [rax + 0x10fffb78]
0x000000000016f4ed : ja 0x16f4ed ; call qword ptr [rdx]
0x000000000016f62d : ja 0x16f62d ; jmp rax
0x000000000016f66d : ja 0x16f66d ; call rax
0x000000000016fe05 : ja 0x16fdf4 ; jmp rax
0x000000000017059d : ja 0x17058d ; jmp rax
0x00000000001705ad : ja 0x17059d ; call qword ptr [rax]
0x0000000000173c2d : ja 0x173c29 ; call rax
0x00000000001902e9 : ja 0x1902e4 ; call rcx
0x0000000000195691 : ja 0x19568d ; call rdi
0x000000000002c78d : ja 0x2c7a8 ; lea rax, qword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x0000000000033a9d : ja 0x33ac3 ; ret
0x0000000000033d96 : ja 0x33da3 ; ret
0x0000000000033e02 : ja 0x33e13 ; ret
0x0000000000033e4c : ja 0x33e52 ; ret
0x0000000000033ed2 : ja 0x33ee3 ; ret
0x000000000004323e : ja 0x43290 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000004a877 : ja 0x4a85e ; mov eax, r8d ; ret
0x0000000000067a06 : ja 0x67a13 ; ret
0x000000000006ec36 : ja 0x6ec43 ; ret
0x00000000000756f8 : ja 0x75743 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085528 : ja 0x85533 ; ret
0x000000000008a6e8 : ja 0x8a6e2 ; ret 0x7401
0x000000000008cd2d : ja 0x8cd0e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009069c : ja 0x906b5 ; mov rax, rdi ; ret
0x00000000000955a7 : ja 0x955ad ; ret
0x00000000000955c3 : ja 0x955cd ; mov dword ptr [rdi], ecx ; ret
0x0000000000095604 : ja 0x95613 ; mov qword ptr [rdi], rcx ; ret
0x0000000000095689 : ja 0x9569d ; ret
0x00000000000956df : ja 0x956f7 ; ret
0x0000000000095761 : ja 0x9577d ; ret
0x0000000000096ba7 : ja 0x96bb1 ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000096bc3 : ja 0x96bd1 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000096c14 : ja 0x96c27 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000096cf9 : ja 0x96d11 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000096d6f : ja 0x96d8b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000096df1 : ja 0x96e11 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000098687 : ja 0x9868d ; ret
0x00000000000986a3 : ja 0x986ad ; mov dword ptr [rdi], ecx ; ret
0x00000000000986e4 : ja 0x986f3 ; mov qword ptr [rdi], rcx ; ret
0x0000000000098769 : ja 0x9877d ; ret
0x00000000000987bf : ja 0x987d7 ; ret
0x0000000000098841 : ja 0x9885d ; ret
0x0000000000099157 : ja 0x9915d ; ret
0x0000000000099173 : ja 0x9917d ; mov dword ptr [rdi], ecx ; ret
0x00000000000991b4 : ja 0x991c3 ; mov qword ptr [rdi], rcx ; ret
0x0000000000099239 : ja 0x9924d ; ret
0x000000000009928f : ja 0x992a7 ; ret
0x0000000000099311 : ja 0x9932d ; ret
0x000000000009a589 : ja 0x9a5a9 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000009bdda : ja 0x9bdea ; cmove rax, rcx ; ret
0x000000000009c1dc : ja 0x9c1ec ; mov eax, edi ; ret
0x00000000000b4977 : ja 0xb4982 ; ret
0x00000000000b7176 : ja 0xb7182 ; ret
0x00000000000b7220 : ja 0xb722a ; ret
0x00000000000b7321 : ja 0xb732a ; ret
0x00000000000b7a1d : ja 0xb7a2b ; ret
0x00000000000b8569 : ja 0xb8572 ; ret
0x00000000000b85d9 : ja 0xb85e2 ; ret
0x00000000000b884d : ja 0xb8852 ; ret
0x00000000000b88cd : ja 0xb88d2 ; ret
0x00000000000c257e : ja 0xc2589 ; jl 0xc2575 ; ret
0x00000000000c71b9 : ja 0xc7500 ; xor eax, eax ; ret
0x00000000000da281 : ja 0xda28b ; xor eax, eax ; ret
0x00000000000dabf2 : ja 0xdab8b ; pop rbx ; ret
0x00000000000dac22 : ja 0xdac13 ; ret
0x00000000000dad9b : ja 0xdada3 ; ret
0x00000000000dadea : ja 0xdadf3 ; ret
0x00000000000dae3b : ja 0xdae43 ; ret
0x00000000000dae93 : ja 0xdaea3 ; ret
0x00000000000daef7 : ja 0xdaf03 ; ret
0x00000000000daf50 : ja 0xdaf5b ; ret
0x00000000000db12f : ja 0xdb13b ; ret
0x00000000000db1c2 : ja 0xdb1d3 ; ret
0x00000000000db2a6 : ja 0xdb2b3 ; ret
0x00000000000db7d8 : ja 0xdb813 ; ret
0x00000000000dc488 : ja 0xdc493 ; ret
0x00000000000dca89 : ja 0xdca93 ; ret
0x00000000000dcaf0 : ja 0xdcafb ; ret
0x00000000000dcb53 : ja 0xdcb63 ; ret
0x00000000000dcbc3 : ja 0xdcbd3 ; ret
0x00000000000df2a3 : ja 0xdf2b8 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000df7a8 : ja 0xdf7b3 ; ret
0x00000000000df7fc : ja 0xdf803 ; ret
0x00000000000dff50 : ja 0xdff5a ; ret
0x00000000000e0033 : ja 0xe003f ; ret
0x00000000000e0089 : ja 0xe0095 ; ret
0x00000000000e01ec : ja 0xe0213 ; ret
0x00000000000e0364 : ja 0xe0372 ; ret
0x00000000000e0986 : ja 0xe09b3 ; ret
0x00000000000e0acd : ja 0xe0ad2 ; ret
0x00000000000e0acd : ja 0xe0ad7 ; ret
0x00000000000e0b6d : ja 0xe0b72 ; ret
0x00000000000e0c10 : ja 0xe0c1a ; ret
0x00000000000e0cc0 : ja 0xe0cca ; ret
0x00000000000e0d6b : ja 0xe0d72 ; ret
0x00000000000e0ddb : ja 0xe0de2 ; ret
0x00000000000e0e5c : ja 0xe0e62 ; ret
0x00000000000e0f0c : ja 0xe0f12 ; ret
0x00000000000e145c : ja 0xe1463 ; ret
0x00000000000e27fd : ja 0xe280b ; ret
0x00000000000e2891 : ja 0xe289b ; ret
0x00000000000e2931 : ja 0xe293b ; ret
0x00000000000e2985 : ja 0xe2993 ; ret
0x00000000000e2a89 : ja 0xe2a95 ; ret
0x00000000000e66b7 : ja 0xe66c3 ; ret
0x00000000000e81b3 : ja 0xe81c4 ; pop rbx ; pop rbp ; ret
0x00000000000e8426 : ja 0xe8432 ; ret
0x00000000000e84e8 : ja 0xe84f3 ; ret
0x00000000000e8523 : ja 0xe8533 ; ret
0x00000000000e90d3 : ja 0xe90e2 ; ret
0x00000000000e9253 : ja 0xe9262 ; ret
0x00000000000e96ad : ja 0xe96b2 ; ret
0x00000000000e974f : ja 0xe975a ; ret
0x00000000000e97ff : ja 0xe980a ; ret
0x00000000000f5000 : ja 0xf500b ; ret
0x00000000000f507d : ja 0xf509d ; ret
0x00000000000f6f12 : ja 0xf6f23 ; ret
0x00000000000f6fc2 : ja 0xf6fd3 ; ret
0x00000000000f8867 : ja 0xf887a ; mov rax, rdi ; sar rax, 6 ; ret
0x00000000000022cf : ja 0xffffffffd6104b5b ; ret
0x0000000000115fc7 : jae 0x115fd2 ; ret
0x0000000000116007 : jae 0x116012 ; ret
0x000000000011a4c0 : jae 0x11a4c5 ; ret
0x000000000011a510 : jae 0x11a515 ; ret
0x000000000011a739 : jae 0x11a77d ; sub byte ptr [rax], al ; call qword ptr [rax]
0x000000000011d124 : jae 0x11d107 ; mov eax, 1 ; ret
0x000000000014c6ac : jae 0x14c6bb ; call qword ptr [rbx]
0x000000000014c6ac : jae 0x14c6bf ; call qword ptr [rbx]
0x000000000014cda7 : jae 0x14cdc4 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000015bfe2 : jae 0x15bfc4 ; jo 0x15c060 ; mov ebp, 0xfb67d10d ; ret
0x000000000015ce7e : jae 0x15ce59 ; push rsi ; pop rdx ; je 0x15ce4e ; ret 0xacfc
0x000000000015fc71 : jae 0x15fc67 ; jmp rax
0x00000000001600e5 : jae 0x1600e0 ; inc eax ; jae 0x1600e4 ; jmp rax
0x00000000001600e9 : jae 0x1600e0 ; jmp rax
0x00000000001600ed : jae 0x1600e8 ; inc dword ptr [rax] ; je 0x1600ec ; jmp qword ptr [rax]
0x0000000000170575 : jae 0x170565 ; call qword ptr [rax]
0x0000000000173bb5 : jae 0x173bb1 ; jmp rax
0x0000000000188109 : jae 0x188102 ; jmp rbx
0x000000000002bc5a : jae 0x2bc76 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000033dcd : jae 0x33dd2 ; ret
0x00000000000342fd : jae 0x34302 ; ret
0x0000000000042497 : jae 0x424a0 ; xor eax, eax ; ret
0x00000000000059b8 : jae 0x59c2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x37
0x00000000000679cd : jae 0x679d2 ; ret
0x0000000000074978 : jae 0x74985 ; movzx eax, byte ptr [rax] ; ret
0x0000000000074995 : jae 0x749be ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007761b : jae 0x77645 ; movzx eax, byte ptr [rax] ; ret
0x00000000000a8a1d : jae 0xa8a22 ; ret
0x00000000000ab2fd : jae 0xab302 ; ret
0x00000000000ab32d : jae 0xab332 ; ret
0x00000000000b70cd : jae 0xb70d2 ; ret
0x00000000000b72e0 : jae 0xb72e5 ; ret
0x00000000000b73bd : jae 0xb73c2 ; ret
0x00000000000b75a6 : jae 0xb75db ; ret
0x00000000000b7606 : jae 0xb763b ; ret
0x00000000000b7997 : jae 0xb799c ; ret
0x00000000000b852d : jae 0xb8532 ; ret
0x00000000000b86ed : jae 0xb86f2 ; ret
0x00000000000b871d : jae 0xb8722 ; ret
0x00000000000b877d : jae 0xb8782 ; ret
0x00000000000b87ad : jae 0xb87b2 ; ret
0x00000000000b87dd : jae 0xb87e2 ; ret
0x00000000000b880d : jae 0xb8812 ; ret
0x00000000000c5776 : jae 0xc5796 ; xor ecx, ecx ; mov edx, r8d ; jmp 0xc578f
0x00000000000c808f : jae 0xc808b ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000d117d : jae 0xd1182 ; ret
0x00000000000d11ad : jae 0xd11b2 ; ret
0x00000000000d11dd : jae 0xd11e2 ; ret
0x00000000000d120d : jae 0xd1212 ; ret
0x00000000000d123d : jae 0xd1242 ; ret
0x00000000000d126d : jae 0xd1272 ; ret
0x00000000000d129d : jae 0xd12a2 ; ret
0x00000000000d12cd : jae 0xd12d2 ; ret
0x00000000000d9d99 : jae 0xd9dd1 ; ret
0x00000000000d9df9 : jae 0xd9e31 ; ret
0x00000000000dacda : jae 0xdace3 ; mov eax, edx ; ret
0x00000000000dacfd : jae 0xdad02 ; ret
0x00000000000daf9d : jae 0xdafa2 ; ret
0x00000000000dafcd : jae 0xdafd2 ; ret
0x00000000000db09d : jae 0xdb0a2 ; ret
0x00000000000db0cd : jae 0xdb0d2 ; ret
0x00000000000db18d : jae 0xdb192 ; ret
0x00000000000db206 : jae 0xdb23b ; ret
0x00000000000db416 : jae 0xdb44b ; ret
0x00000000000db476 : jae 0xdb4ab ; ret
0x00000000000db4cd : jae 0xdb4d2 ; ret
0x00000000000db8ed : jae 0xdb8f2 ; ret
0x00000000000dba36 : jae 0xdba6b ; ret
0x00000000000dba8d : jae 0xdba92 ; ret
0x00000000000dbabd : jae 0xdbac2 ; ret
0x00000000000dbaed : jae 0xdbaf2 ; ret
0x00000000000dbb1d : jae 0xdbb22 ; ret
0x00000000000dbb4d : jae 0xdbb52 ; ret
0x00000000000dbb86 : jae 0xdbbbb ; ret
0x00000000000dbbdd : jae 0xdbbe2 ; ret
0x00000000000dbc0d : jae 0xdbc12 ; ret
0x00000000000dc3ed : jae 0xdc3f2 ; ret
0x00000000000dc41d : jae 0xdc422 ; ret
0x00000000000dc44d : jae 0xdc452 ; ret
0x00000000000dca4d : jae 0xdca52 ; ret
0x00000000000dcabd : jae 0xdcac2 ; ret
0x00000000000dcb1d : jae 0xdcb22 ; ret
0x00000000000dcb8d : jae 0xdcb92 ; ret
0x00000000000dcbfd : jae 0xdcc02 ; ret
0x00000000000df436 : jae 0xdf46b ; ret
0x00000000000df4c4 : jae 0xdf517 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000df770 : jae 0xdf775 ; ret
0x00000000000dfee9 : jae 0xdff21 ; ret
0x00000000000e052d : jae 0xe0532 ; ret
0x00000000000e055d : jae 0xe0562 ; ret
0x00000000000e058d : jae 0xe0592 ; ret
0x00000000000e08cd : jae 0xe08d2 ; ret
0x00000000000e0a8d : jae 0xe0a92 ; ret
0x00000000000e0a8d : jae 0xe0a97 ; ret
0x00000000000e109d : jae 0xe10a2 ; ret
0x00000000000e113d : jae 0xe1142 ; ret
0x00000000000e1179 : jae 0xe11b1 ; ret
0x00000000000e12cd : jae 0xe12d2 ; ret
0x00000000000e12fd : jae 0xe1302 ; ret
0x00000000000e1336 : jae 0xe136b ; ret
0x00000000000e138d : jae 0xe1392 ; ret
0x00000000000e13c6 : jae 0xe13fb ; ret
0x00000000000e141d : jae 0xe1422 ; ret
0x00000000000e170d : jae 0xe1712 ; ret
0x00000000000e173d : jae 0xe1742 ; ret
0x00000000000e176d : jae 0xe1772 ; ret
0x00000000000e29bd : jae 0xe29c2 ; ret
0x00000000000e29ed : jae 0xe29f2 ; ret
0x00000000000e3f5f : jae 0xe3f64 ; ret
0x00000000000e40e0 : jae 0xe40e5 ; ret
0x00000000000e410d : jae 0xe4112 ; ret
0x00000000000e413d : jae 0xe4142 ; ret
0x00000000000e4176 : jae 0xe41ab ; ret
0x00000000000e41cd : jae 0xe41d2 ; ret
0x00000000000e41fd : jae 0xe4202 ; ret
0x00000000000e4230 : jae 0xe4235 ; ret
0x00000000000e425d : jae 0xe4262 ; ret
0x00000000000e428d : jae 0xe4292 ; ret
0x00000000000e42bd : jae 0xe42c2 ; ret
0x00000000000e42ed : jae 0xe42f2 ; ret
0x00000000000e5afe : jae 0xe5b39 ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x00000000000e6f90 : jae 0xe6f95 ; ret
0x00000000000e6fbd : jae 0xe6fc2 ; ret
0x00000000000e6fed : jae 0xe6ff2 ; ret
0x00000000000e7020 : jae 0xe7025 ; ret
0x00000000000e7050 : jae 0xe7055 ; ret
0x00000000000e707d : jae 0xe7082 ; ret
0x00000000000e70b0 : jae 0xe70b5 ; ret
0x00000000000e70dd : jae 0xe70e2 ; ret
0x00000000000e710d : jae 0xe7112 ; ret
0x00000000000e7140 : jae 0xe7145 ; ret
0x00000000000e716d : jae 0xe7172 ; ret
0x00000000000e71a0 : jae 0xe71a5 ; ret
0x00000000000e811d : jae 0xe8122 ; ret
0x00000000000e814d : jae 0xe8152 ; ret
0x00000000000e8286 : jae 0xe82bb ; ret
0x00000000000e82ed : jae 0xe82f2 ; ret
0x00000000000e831d : jae 0xe8322 ; ret
0x00000000000e834d : jae 0xe8352 ; ret
0x00000000000e837d : jae 0xe8382 ; ret
0x00000000000e85b0 : jae 0xe85b5 ; ret
0x00000000000e85dd : jae 0xe85e2 ; ret
0x00000000000e860d : jae 0xe8612 ; ret
0x00000000000e8650 : jae 0xe8655 ; ret
0x00000000000e867d : jae 0xe8682 ; ret
0x00000000000e86ad : jae 0xe86b2 ; ret
0x00000000000e86dd : jae 0xe86e2 ; ret
0x00000000000e870d : jae 0xe8712 ; ret
0x00000000000e873d : jae 0xe8742 ; ret
0x00000000000e876d : jae 0xe8772 ; ret
0x00000000000e879d : jae 0xe87a2 ; ret
0x00000000000e87cd : jae 0xe87d2 ; ret
0x00000000000e8800 : jae 0xe8805 ; ret
0x00000000000e8839 : jae 0xe8871 ; ret
0x00000000000e886c : jae 0xe8875 ; ret
0x00000000000e888d : jae 0xe8892 ; ret
0x00000000000e88c0 : jae 0xe88c5 ; ret
0x00000000000e88ed : jae 0xe88f2 ; ret
0x00000000000e891d : jae 0xe8922 ; ret
0x00000000000e894d : jae 0xe8952 ; ret
0x00000000000e897d : jae 0xe8982 ; ret
0x00000000000e89ad : jae 0xe89b2 ; ret
0x00000000000e89e0 : jae 0xe89e5 ; ret
0x00000000000e8a10 : jae 0xe8a15 ; ret
0x00000000000e8a3d : jae 0xe8a42 ; ret
0x00000000000e8a6d : jae 0xe8a72 ; ret
0x00000000000e8a9d : jae 0xe8aa2 ; ret
0x00000000000e8ad0 : jae 0xe8ad5 ; ret
0x00000000000e8b00 : jae 0xe8b05 ; ret
0x00000000000e8b30 : jae 0xe8b35 ; ret
0x00000000000e8b69 : jae 0xe8ba1 ; ret
0x00000000000e8bbd : jae 0xe8bc2 ; ret
0x00000000000e8bf9 : jae 0xe8c31 ; ret
0x00000000000e8c4d : jae 0xe8c52 ; ret
0x00000000000e8c7d : jae 0xe8c82 ; ret
0x00000000000e8cb9 : jae 0xe8cf1 ; ret
0x00000000000e8d0d : jae 0xe8d12 ; ret
0x00000000000e8d40 : jae 0xe8d45 ; ret
0x00000000000e8d6d : jae 0xe8d72 ; ret
0x00000000000e8d9d : jae 0xe8da2 ; ret
0x00000000000e8dd0 : jae 0xe8dd5 ; ret
0x00000000000e8e06 : jae 0xe8e3b ; ret
0x00000000000e8e5d : jae 0xe8e62 ; ret
0x00000000000e8e90 : jae 0xe8e95 ; ret
0x00000000000e8ec0 : jae 0xe8ec5 ; ret
0x00000000000e8f16 : jae 0xe8f4b ; ret
0x00000000000e8f6d : jae 0xe8f72 ; ret
0x00000000000e8fa6 : jae 0xe8fdb ; ret
0x00000000000e8ffd : jae 0xe9002 ; ret
0x00000000000e902d : jae 0xe9032 ; ret
0x00000000000e9060 : jae 0xe9065 ; ret
0x00000000000e908d : jae 0xe9092 ; ret
0x00000000000e9189 : jae 0xe91c1 ; ret
0x00000000000e91e6 : jae 0xe921b ; ret
0x00000000000e9306 : jae 0xe933b ; ret
0x00000000000e9369 : jae 0xe93a1 ; ret
0x00000000000e93c0 : jae 0xe93c5 ; ret
0x00000000000e93ed : jae 0xe93f2 ; ret
0x00000000000e941d : jae 0xe9422 ; ret
0x00000000000e9450 : jae 0xe9455 ; ret
0x00000000000e9969 : jae 0xe99a1 ; ret
0x00000000000e99c9 : jae 0xe9a01 ; ret
0x00000000000e9a1d : jae 0xe9a22 ; ret
0x00000000000e9a4d : jae 0xe9a52 ; ret
0x00000000000e9a7d : jae 0xe9a82 ; ret
0x00000000000e9aad : jae 0xe9ab2 ; ret
0x00000000000e9ae0 : jae 0xe9ae5 ; ret
0x00000000000e9b10 : jae 0xe9b15 ; ret
0x00000000000e9b3d : jae 0xe9b42 ; ret
0x00000000000e9b6d : jae 0xe9b72 ; ret
0x00000000000e9b9d : jae 0xe9ba2 ; ret
0x00000000000e9bcd : jae 0xe9bd2 ; ret
0x0000000000102d2f : jb 0x102d57 ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000103858 : jb 0x10384b ; mov eax, 0xffffffff ; ret
0x0000000000103857 : jb 0x10384c ; mov eax, 0xffffffff ; ret
0x000000000010bc01 : jb 0x10bc25 ; ret
0x000000000010bbfb : jb 0x10bc2d ; ja 0x10bbf0 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000126e21 : jb 0x126e0a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000126e84 : jb 0x126e6d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x0000000000126f28 : jb 0x126f34 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000127311 : jb 0x1272fa ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000127374 : jb 0x12735d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x0000000000127418 : jb 0x127424 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001276b4 : jb 0x12769d ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000127714 : jb 0x1276fd ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00000000001277b8 : jb 0x1277c4 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000012a99a : jb 0x12a9aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012aaea : jb 0x12aafa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ac3a : jb 0x12ac4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ad8a : jb 0x12ad9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012aeda : jb 0x12aeea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b02a : jb 0x12b03a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b17a : jb 0x12b18a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b2ca : jb 0x12b2da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b41a : jb 0x12b42a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b56a : jb 0x12b57a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b6ba : jb 0x12b6ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b80a : jb 0x12b81a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b95a : jb 0x12b96a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012baaa : jb 0x12baba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012bbfa : jb 0x12bc0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d36a : jb 0x12d37a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d4ba : jb 0x12d4ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d60a : jb 0x12d61a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d75a : jb 0x12d76a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d8aa : jb 0x12d8ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d9fa : jb 0x12da0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012db4a : jb 0x12db5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012dc9a : jb 0x12dcaa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ddea : jb 0x12ddfa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012df3a : jb 0x12df4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012e08a : jb 0x12e09a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012e1da : jb 0x12e1ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012e32a : jb 0x12e33a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012e47a : jb 0x12e48a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012e5ca : jb 0x12e5da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fd3a : jb 0x12fd4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fe8a : jb 0x12fe9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ffda : jb 0x12ffea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013012a : jb 0x13013a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013027a : jb 0x13028a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001303ca : jb 0x1303da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013051a : jb 0x13052a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013066a : jb 0x13067a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001307ba : jb 0x1307ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013090a : jb 0x13091a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130a5a : jb 0x130a6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130baa : jb 0x130bba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130cfa : jb 0x130d0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130e4a : jb 0x130e5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130f9a : jb 0x130faa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014be17 : jb 0x14be27 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000014be23 : jb 0x14be39 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000014be33 : jb 0x14be3b ; mov byte ptr [rdi], cl ; ret
0x000000000014c6db : jb 0x14c6d1 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000014cdb9 : jb 0x14cdb8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016e505 : jb 0x16e504 ; call qword ptr [rax]
0x000000000016f7c0 : jb 0x16f76a ; cld ; jmp rdx
0x0000000000170565 : jb 0x170555 ; call rax
0x00000000001709f5 : jb 0x1709e8 ; jmp qword ptr [rax]
0x000000000017317d : jb 0x173178 ; call rax
0x0000000000179501 : jb 0x1794f1 ; call rsi
0x000000000017d731 : jb 0x17d724 ; jmp qword ptr [rbx]
0x0000000000002b60 : jb 0x2b00 ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000002c75e : jb 0x2c76b ; ret
0x000000000006d615 : jb 0x6d63b ; mov dword ptr [rcx], eax ; ret
0x000000000006ea2c : jb 0x6ea25 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000083fdb : jb 0x83fec ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000008bdcb : jb 0x8bddc ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000009751a : jb 0x97529 ; add byte ptr [rax], al ; ret
0x00000000000a9cf6 : jb 0xa9cc3 ; ret
0x00000000000c5545 : jb 0xc54b5 ; pop rbx ; ret
0x00000000000ef44b : jb 0xef45f ; mov eax, 1 ; ret
0x000000000010b283 : jbe 0x10b297 ; mov eax, 2 ; ret
0x000000000011625d : jbe 0x116279 ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000011ad36 : jbe 0x11ad74 ; sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000160135 : jbe 0x16012c ; call rax
0x0000000000160131 : jbe 0x16012c ; jmp qword ptr [rax - 0x2f000c8a]
0x000000000016e5f4 : jbe 0x16e59f ; std ; call qword ptr [rsi]
0x000000000016f475 : jbe 0x16f475 ; jmp qword ptr [rax]
0x000000000016f5b5 : jbe 0x16f5b5 ; call rsp
0x000000000016f5b4 : jbe 0x16f5b6 ; call rsp
0x00000000001700f1 : jbe 0x1700f9 ; add byte ptr [rax + 0xb], dh ; in al, dx ; call qword ptr [rax]
0x00000000001712ed : jbe 0x1712e1 ; call rax
0x00000000001712ec : jbe 0x1712e2 ; call rax
0x0000000000172185 : jbe 0x17217d ; jmp rax
0x0000000000173bf5 : jbe 0x173bf1 ; jmp qword ptr [rax]
0x00000000001742c5 : jbe 0x1742c2 ; call qword ptr [rax]
0x0000000000175341 : jbe 0x175349 ; add byte ptr [rax], al ; leave ; std ; call rax
0x0000000000195551 : jbe 0x19554d ; call qword ptr [rax]
0x0000000000002bef : jbe 0x2bc3 ; clc ; ret
0x00000000000428ab : jbe 0x42921 ; xor eax, eax ; ret
0x00000000000447ec : jbe 0x447e6 ; nop ; pop rbx ; ret
0x000000000006e817 : jbe 0x6e793 ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000081b89 : jbe 0x81bd8 ; bsf eax, edx ; ret
0x0000000000084e16 : jbe 0x84e55 ; add rax, rdi ; ret
0x0000000000084e26 : jbe 0x84e57 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000084e36 : jbe 0x84e57 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000084e46 : jbe 0x84e57 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000008a753 : jbe 0x8a76e ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x8a749 ; ret
0x0000000000090af9 : jbe 0x90af3 ; ret 0xf10
0x0000000000092719 : jbe 0x92713 ; ret 0xf10
0x00000000000bee59 : jbe 0xbede6 ; ret 0x8349
0x00000000000c30d6 : jbe 0xc30dd ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000daac8 : jbe 0xdaad3 ; ret
0x00000000000ff63c : jbe 0xff642 ; ret
0x0000000000102bb3 : je 0x102bab ; pop rbx ; ret
0x0000000000103697 : je 0x103666 ; xor ecx, ecx ; mov word ptr [rax + rdx - 2], cx ; ret
0x0000000000106812 : je 0x10681a ; ret
0x0000000000106871 : je 0x10687a ; ret
0x000000000010686b : je 0x10687b ; cmp dword ptr [rdi + 0x10], 2 ; je 0x106880 ; ret
0x0000000000109183 : je 0x10918f ; mov rdi, rsp ; call rax
0x00000000001095e9 : je 0x109616 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x00000000001097e7 : je 0x1097f3 ; mov rdi, rbp ; call rax
0x0000000000109b78 : je 0x109b82 ; ret
0x000000000010a7a5 : je 0x10a7b1 ; mov rdi, r14 ; call rax
0x000000000010ad13 : je 0x10ad24 ; xor eax, eax ; ret
0x000000000010b325 : je 0x10b331 ; mov rdi, rbp ; call rdx
0x000000000010b777 : je 0x10b86c ; mov rdi, rbp ; call qword ptr [rbx]
0x000000000010bd96 : je 0x10bda8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010e452 : je 0x10e466 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000010ee2a : je 0x10ee36 ; mov rdi, r12 ; call rax
0x000000000010f00b : je 0x10f019 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000110061 : je 0x11006d ; mov rdi, rbp ; call rax
0x0000000000110120 : je 0x11012c ; mov rdi, r13 ; call rax
0x00000000001101a3 : je 0x1101b7 ; mov eax, 1 ; ret
0x0000000000110cbf : je 0x110ccd ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x000000000011136b : je 0x111377 ; mov rdi, r12 ; call rax
0x00000000001116df : je 0x1116ed ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000011310e : je 0x1130e8 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001130df : je 0x1130eb ; pop rbx ; ret
0x000000000011314b : je 0x1130ff ; pop rbx ; ret
0x0000000000113183 : je 0x113196 ; add rsp, 8 ; ret
0x0000000000113bbb : je 0x113bc2 ; ret
0x0000000000113c9b : je 0x113ca9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001142f4 : je 0x114302 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000011539d : je 0x1153f8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011545d : je 0x1154b8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000115acd : je 0x115af8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x0000000000115b9d : je 0x115bc8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x0000000000115ea7 : je 0x115ebb ; ret
0x0000000000117ed8 : je 0x117ee4 ; xor eax, eax ; ret
0x0000000000119195 : je 0x1191a4 ; xor eax, eax ; ret
0x000000000011c591 : je 0x11c5a6 ; add rsp, 8 ; ret
0x000000000011e123 : je 0x11e0ed ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000011edf5 : je 0x11edfd ; xchg eax, edx ; sub eax, edx ; ret
0x000000000011eef3 : je 0x11eebd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000011fdda : je 0x11fde2 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000011ff33 : je 0x11fefd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000121b03 : je 0x121acd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000123b31 : je 0x123b18 ; movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000123e23 : je 0x123ded ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001254b3 : je 0x12547d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000148b77 : je 0x148b81 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014c176 : je 0x14c17c ; call rdx
0x000000000014c289 : je 0x14c294 ; call rdx
0x000000000014c690 : je 0x14c695 ; ret
0x000000000015c148 : je 0x15c113 ; xor al, 0xffffffffffffffd8 ; ret
0x000000000015c387 : je 0x15c384 ; jmp 0x15c35e
0x000000000015ce82 : je 0x15ce4a ; ret 0xacfc
0x000000000015fa10 : je 0x15f9b3 ; lock push qword ptr [rdx + rbx*4 - 0x10] ; call rsp
0x000000000015fa6c : je 0x15fa0f ; lock call qword ptr [rcx + rbx*4 - 0x10] ; call rsp
0x000000000015fa90 : je 0x15fa33 ; lock push qword ptr [rdx + rbx*4 - 0x10] ; call rsp
0x00000000001600f1 : je 0x1600e8 ; jmp qword ptr [rax]
0x0000000000160105 : je 0x1600fc ; call rax
0x0000000000160101 : je 0x1600fc ; jmp qword ptr [rax - 0x2f000c8c]
0x000000000016010d : je 0x160104 ; call qword ptr [rax]
0x0000000000160109 : je 0x160104 ; push rax ; je 0x160108 ; call qword ptr [rax]
0x000000000016e509 : je 0x16e50c ; call qword ptr [rax + 0x10fffb75]
0x000000000016f4c1 : je 0x16f4c5 ; jmp qword ptr [rdx + 0x22fffc7c]
0x0000000000170089 : je 0x170091 ; add byte ptr [rax], al ; xlatb ; jmp 0x170095
0x0000000000171d85 : je 0x171d7c ; jmp qword ptr [rax]
0x00000000001731bd : je 0x1731b8 ; call rax
0x0000000000176eac : je 0x176ecf ; add byte ptr [rax], al ; nop ; pop rsi ; jmp 0x176eba
0x000000000017b3ac : je 0x17b414 ; add byte ptr [rax], al ; add byte ptr [rcx], -0x11 ; jmp qword ptr [rbx]
0x000000000017c915 : je 0x17c91d ; add byte ptr [rax + 0x49], bl ; out dx, eax ; jmp rbx
0x00000000001827ac : je 0x182788 ; add byte ptr [rax], al ; push rax ; pop rax ; call qword ptr [rcx]
0x00000000001871ac : je 0x1871d2 ; add dword ptr [rax], eax ; mov al, 0x68 ; stc ; call qword ptr [rax]
0x00000000001876ac : je 0x1876d7 ; add dword ptr [rax], eax ; adc byte ptr [rsi], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001878ac : je 0x1878d9 ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], al ; jmp qword ptr [rcx]
0x000000000018a0ac : je 0x18a101 ; add dword ptr [rax], eax ; movsd dword ptr [rdi], dword ptr [rsi] ; loope 0x18a0af ; call qword ptr [rcx]
0x000000000018a4ac : je 0x18a505 ; add dword ptr [rax], eax ; mov al, -0x1b ; cmc ; jmp qword ptr [rcx]
0x000000000018adac : je 0x18ae0e ; add dword ptr [rax], eax ; mov al, -5 ; cmc ; call qword ptr [rsi]
0x000000000018c87d : je 0x18c886 ; add byte ptr [rax - 1], al ; sti ; jmp qword ptr [rsi]
0x000000000018c87c : je 0x18c887 ; add byte ptr [rax - 1], al ; sti ; jmp qword ptr [rsi]
0x000000000018f14b : je 0x18f163 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000193dac : je 0x193d9e ; add dword ptr [rax], eax ; nop ; sbb eax, edi ; call qword ptr [rsi]
0x000000000001cc61 : je 0x1cc72 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x39
0x0000000000001cb2 : je 0x1cde ; ret
0x000000000001ce29 : je 0x1ce3a ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x39
0x00000000000202de : je 0x202ea ; call rax
0x000000000002030a : je 0x20312 ; jmp rax
0x0000000000020f9b : je 0x20f86 ; mov rdi, qword ptr [r15 + 0x18] ; call rdx
0x000000000002156b : je 0x21556 ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x0000000000023bb3 : je 0x23be1 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x0000000000023ca0 : je 0x23ccf ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000000244a3 : je 0x244d1 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x0000000000024590 : je 0x245bf ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x000000000002489e : je 0x248cd ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000000249ea : je 0x24a19 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000024c9d : je 0x24ccc ; jo 0x24cf2 ; mov edi, dword ptr [rsp + 0x68] ; call r15
0x0000000000025089 : je 0x250b7 ; jo 0x250dd ; mov edi, dword ptr [rsp + 0x68] ; call rbx
0x00000000000255f9 : je 0x25628 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000025a5b : je 0x25a8a ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x00000000000262e6 : je 0x26315 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000000266d4 : je 0x26703 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000027622 : je 0x27651 ; jo 0x27677 ; mov edi, dword ptr [rsp + 0x68] ; call r15
0x00000000000279fc : je 0x27a2a ; jo 0x27a50 ; mov edi, dword ptr [rsp + 0x68] ; call rbx
0x0000000000028582 : je 0x285b1 ; jo 0x285d7 ; mov edi, dword ptr [rsp + 0x68] ; call r15
0x000000000002896c : je 0x2899a ; jo 0x289c0 ; mov edi, dword ptr [rsp + 0x68] ; call rbx
0x0000000000029a4b : je 0x29a53 ; pop rbx ; ret
0x0000000000029a47 : je 0x29a57 ; test esi, esi ; je 0x29a57 ; pop rbx ; ret
0x000000000002a2b4 : je 0x2a2ba ; call rax
0x000000000002a410 : je 0x2a416 ; call rcx
0x000000000002b4ab : je 0x2b4b1 ; call rax
0x00000000000332fd : je 0x332ec ; ret
0x00000000000335c5 : je 0x335ef ; call 0xffffffffe284f859
0x00000000000336b6 : je 0x3365f ; ret
0x0000000000034847 : je 0x34856 ; add rsp, 0x10 ; ret
0x0000000000034939 : je 0x34946 ; add rsp, 0x10 ; ret
0x000000000004d578 : je 0x4d57e ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000067326 : je 0x67348 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000067ada : je 0x67ae3 ; ret
0x000000000006a2ca : je 0x6a2e1 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006a37a : je 0x6a391 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006a439 : je 0x6a450 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000006aa5c : je 0x6aaab ; pop rbx ; ret
0x000000000006c4b9 : je 0x6c4cf ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x000000000006e074 : je 0x6e0c5 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006e073 : je 0x6e0c6 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006e085 : je 0x6e0d6 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006e084 : je 0x6e0d7 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006e49c : je 0x6e4a2 ; ret
0x000000000006e4b6 : je 0x6e4c3 ; pop rbx ; ret
0x000000000006e6dd : je 0x6e738 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000006e98d : je 0x6e998 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000006e9d1 : je 0x6e9dc ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000006ee68 : je 0x6ee77 ; mov eax, 0xffffffff ; ret
0x0000000000072aec : je 0x72b3b ; pop rbx ; ret
0x0000000000072fcb : je 0x72fdd ; mov dword ptr [rdi], edx ; ret
0x00000000000732ec : je 0x732ff ; mov eax, 0xffffffff ; ret
0x0000000000073b0b : je 0x73ab1 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000073b8f : je 0x73b9b ; pop rbx ; ret
0x0000000000076233 : je 0x761ed ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000762f3 : je 0x762ad ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000763e5 : je 0x763f2 ; ret
0x0000000000076413 : je 0x76423 ; pop rbx ; ret
0x0000000000076964 : je 0x7696f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000078154 : je 0x77f94 ; ret
0x000000000007807a : je 0x78090 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000078c26 : je 0x78c37 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078d45 : je 0x78d4b ; call rax
0x000000000007cd62 : je 0x7cd8e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rcx
0x000000000007d26b : je 0x7d271 ; call rax
0x000000000007e219 : je 0x7e222 ; ret
0x000000000007e25a : je 0x7e269 ; mov qword ptr [rbx], rdx ; xor al, al ; pop rbx ; ret
0x000000000007e277 : je 0x7e283 ; ret
0x000000000007e930 : je 0x7e9f6 ; call rax
0x000000000007ea6a : je 0x7eb3e ; call rax
0x000000000007ebcf : je 0x7ec18 ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x000000000007f628 : je 0x7f632 ; ret
0x000000000007fc82 : je 0x7fc94 ; lea rax, qword ptr [rip + 0x10bf5] ; ret
0x000000000007fe6f : je 0x7fe81 ; lea rax, qword ptr [rip + 0xc9dd8] ; ret
0x0000000000081562 : je 0x81574 ; lea rax, qword ptr [rip + 0xbd465] ; ret
0x000000000008166f : je 0x81681 ; lea rax, qword ptr [rip + 0xa2328] ; ret
0x00000000000817e6 : je 0x8180c ; movsx eax, dl ; ret
0x00000000000817e6 : je 0x8180d ; movsx eax, dl ; ret
0x00000000000817e1 : je 0x81839 ; cmp dl, 3 ; je 0x81811 ; movsx eax, dl ; ret
0x00000000000818f2 : je 0x81906 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000081b3b : je 0x81b45 ; bsf eax, edx ; ret
0x0000000000081b3b : je 0x81b46 ; bsf eax, edx ; ret
0x0000000000081be4 : je 0x81bf5 ; bsf rax, rdx ; ret
0x0000000000081be4 : je 0x81bf6 ; bsf rax, rdx ; ret
0x0000000000081b88 : je 0x81c06 ; bsf rax, rdx ; ret
0x0000000000081dd3 : je 0x81df5 ; bsf rax, rdx ; ret
0x0000000000081dd3 : je 0x81df6 ; bsf rax, rdx ; ret
0x0000000000081f12 : je 0x81f24 ; lea rax, qword ptr [rip + 0x10585] ; ret
0x00000000000837f2 : je 0x83804 ; lea rax, qword ptr [rip + 0xbc985] ; ret
0x0000000000083b0f : je 0x83b21 ; lea rax, qword ptr [rip + 0x9ffc8] ; ret
0x0000000000083e7f : je 0x83e91 ; lea rax, qword ptr [rip + 0x9fd88] ; ret
0x0000000000084d0c : je 0x84d63 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000084e8c : je 0x84e9f ; lea rax, qword ptr [rip + 0xc294b] ; ret
0x000000000008549f : je 0x854b1 ; lea rax, qword ptr [rip + 0xc6878] ; ret
0x0000000000085635 : je 0x85647 ; lea rax, qword ptr [rip + 0xa1fb2] ; ret
0x0000000000085b22 : je 0x85b34 ; lea rax, qword ptr [rip + 0xbd1d5] ; ret
0x0000000000085c42 : je 0x85c54 ; lea rax, qword ptr [rip + 0xbe8c5] ; ret
0x000000000008a659 : je 0x8a671 ; cmp rsi, rcx ; jne 0x8a651 ; xor eax, eax ; ret
0x000000000008a68f : je 0x8a694 ; ret
0x000000000008a6b7 : je 0x8a6c9 ; lea rax, qword ptr [rip + 0x9fc90] ; ret
0x000000000008b40f : je 0x8b43a ; and byte ptr [rax + 0x39], cl ; ret
0x000000000008bbc8 : je 0x8bbe1 ; lea rax, qword ptr [rip - 0x511] ; ret
0x000000000008c1c6 : je 0x8c1f1 ; sub byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000008c5ca : je 0x8c621 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008c681 : je 0x8c699 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008cb64 : je 0x8cb77 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d1f2 : je 0x8d1e1 ; xor eax, eax ; ret
0x000000000008d1ee : je 0x8d1e5 ; test al, al ; je 0x8d1e5 ; xor eax, eax ; ret
0x000000000008d1d7 : je 0x8d1e6 ; test cl, cl ; jne 0x8d1b4 ; mov rax, rdi ; ret
0x000000000008d19a : je 0x8d1ec ; xor eax, eax ; ret
0x000000000008d196 : je 0x8d1f0 ; test al, al ; je 0x8d1f0 ; xor eax, eax ; ret
0x000000000008f7da : je 0x8f7d3 ; ret
0x000000000008f7fe : je 0x8f7f3 ; ret
0x000000000008f7fa : je 0x8f7f7 ; cmp ecx, edx ; je 0x8f7f7 ; ret
0x000000000008f84f : je 0x8f833 ; ret
0x000000000008fddc : je 0x8fdb8 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000958a9 : je 0x958fa ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000096f36 : je 0x96f87 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000098c4a : je 0x98c9b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009a1dd : je 0x9a1a6 ; movzx eax, dl ; pop rbx ; ret
0x000000000009a1b5 : je 0x9a1a8 ; movzx eax, cl ; pop rbx ; ret
0x000000000009a1dd : je 0x9a1a8 ; movzx eax, dl ; pop rbx ; ret
0x000000000009a306 : je 0x9a330 ; xor eax, eax ; add rsp, 0x18 ; ret
0x000000000009a37d : je 0x9a363 ; ret
0x000000000009a3c5 : je 0x9a3a3 ; ret
0x000000000009b2df : je 0x9b2d1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009b519 : je 0x9b539 ; mov cl, dl ; and cl, 0xf ; je 0x9b549 ; ret
0x000000000009b520 : je 0x9b542 ; ret
0x000000000009b535 : je 0x9b556 ; add rax, 2 ; ret
0x000000000009bb26 : je 0x9bb96 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009bdd7 : je 0x9bdf4 ; cmp dword ptr [rdi + 8], esi ; cmove rax, rcx ; ret
0x000000000009be3c : je 0x9be4f ; lea rax, qword ptr [rip + 0xacfdb] ; ret
0x000000000009c9ae : je 0x9c9dd ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r14 ; call rbx
0x000000000009cc66 : je 0x9cc95 ; sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x000000000009db12 : je 0x9db23 ; mov edx, eax ; jmp 0x9dae3
0x00000000000a0142 : je 0xa0153 ; mov edx, eax ; jmp 0xa0113
0x00000000000a25d2 : je 0xa25e3 ; mov edx, eax ; jmp 0xa25a3
0x00000000000a837a : je 0xa8383 ; pop rbx ; ret
0x00000000000a8809 : je 0xa8837 ; and byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x00000000000a9762 : je 0xa9778 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ad7c1 : je 0xad7f0 ; or byte ptr [rax - 0x75], cl ; jl 0xad7f5 ; and al, ch ; ret 0x5b
0x00000000000aeb53 : je 0xaeba2 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000b2bb3 : je 0xb2bc4 ; xor eax, eax ; ret
0x00000000000b769e : je 0xb76a4 ; call rax
0x00000000000b7833 : je 0xb783d ; call rdx
0x00000000000b78b3 : je 0xb78bd ; call rax
0x00000000000b8e69 : je 0xb8e9f ; mov eax, 1 ; ret
0x00000000000bfbb3 : je 0xbfbdd ; js 0xbfb3e ; ret 0x4801
0x00000000000c0604 : je 0xc0614 ; xor eax, eax ; ret
0x00000000000c090c : je 0xc08ee ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c2000 : je 0xc200b ; ret
0x00000000000c1ffb : je 0xc2018 ; cmp eax, 3 ; je 0xc2010 ; ret
0x00000000000c23a8 : je 0xc23b3 ; ret
0x00000000000c259a : je 0xc25a4 ; xor eax, eax ; ret
0x00000000000c2596 : je 0xc25f8 ; cmp al, 0x11 ; je 0xc25a8 ; xor eax, eax ; ret
0x00000000000c2af4 : je 0xc2b08 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c53c6 : je 0xc5439 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c5528 : je 0xc54b1 ; pop rbx ; ret
0x00000000000c555a : je 0xc54e8 ; pop rbx ; ret
0x00000000000c5555 : je 0xc5518 ; and ebx, 8 ; je 0xc54ed ; pop rbx ; ret
0x00000000000c5d6d : je 0xc5d1f ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c6f64 : je 0xc6f29 ; jmp 0xc6f2b
0x00000000000c735a : je 0xc7369 ; add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], -0x7d ; ret 0x4001
0x00000000000cf488 : je 0xcf4c4 ; xor eax, eax ; ret
0x00000000000d154f : je 0xd15a4 ; ret
0x00000000000d49a2 : je 0xd49b3 ; ret
0x00000000000d6c85 : je 0xd6c63 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000da25a : je 0xda263 ; ret
0x00000000000ddd34 : je 0xddd70 ; mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000de699 : je 0xde6c4 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8440
0x00000000000df733 : je 0xdf74d ; neg eax ; pop rbx ; ret
0x00000000000e07c0 : je 0xe07ea ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000e0f9e : je 0xe0fa5 ; ret
0x00000000000e2ab3 : je 0xe2abe ; mov qword ptr [rax], rdx ; ret
0x00000000000e2ba3 : je 0xe2b96 ; mov byte ptr [rcx - 1], 0 ; ret
0x00000000000e3f28 : je 0xe3f39 ; mov dword ptr [rip + 0x2b9340], edi ; ret
0x00000000000e4f3f : je 0xe4f4b ; ret
0x00000000000e640e : je 0xe64ae ; call rax
0x00000000000e6585 : je 0xe6686 ; call rax
0x00000000000e8216 : je 0xe821b ; ret
0x00000000000ea394 : je 0xea39b ; pop rbp ; ret
0x00000000000ea72a : je 0xea797 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000ea76a : je 0xea798 ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000ed331 : je 0xed360 ; or byte ptr [rax + 0x39], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x9848
0x00000000000ed55b : je 0xed570 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000f087b : je 0xf0875 ; ret
0x00000000000f0b75 : je 0xf0b84 ; xor eax, eax ; ret
0x00000000000f3253 : je 0xf3267 ; mov eax, 7 ; ret
0x00000000000f3271 : je 0xf3299 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000000f3280 : je 0xf32e4 ; xor eax, eax ; pop rbx ; ret
0x00000000000f436b : je 0xf437b ; ret
0x00000000000f4a19 : je 0xf4a1e ; ret
0x00000000000f4a7d : je 0xf4a82 ; ret
0x00000000000f4e5a : je 0xf4e62 ; ret
0x00000000000f59d5 : je 0xf59e7 ; lea rax, qword ptr [rip + 0x31862] ; ret
0x00000000000f5aa5 : je 0xf5ab7 ; lea rax, qword ptr [rip + 0x31b32] ; ret
0x00000000000f5acf : je 0xf5ae1 ; lea rax, qword ptr [rip + 0x56238] ; ret
0x00000000000f700c : je 0xf701e ; add rsp, 8 ; ret
0x00000000000ff656 : je 0xff662 ; mov rdi, rbx ; call rax
0x00000000000ffea0 : je 0xffecf ; and byte ptr [rax - 0x75], cl ; jl 0xffed4 ; sbb al, ch ; ret
0x0000000000101bfc : jg 0x101be7 ; mov eax, 0xffffffff ; ret
0x000000000010530a : jg 0x1052c4 ; mov byte ptr [r11], 0 ; ret
0x000000000010f242 : jg 0x10f28c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x10f258 ; ret
0x0000000000113eb2 : jg 0x113efc ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x113ec8 ; ret
0x0000000000126e20 : jg 0x126e9c ; loopne 0x126df1 ; jp 0x126ead ; jp 0x126e20 ; ret
0x0000000000126ecc : jg 0x126edd ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000127001 : jg 0x12706b ; lock mov rax, r8 ; ret
0x0000000000127310 : jg 0x12738c ; loopne 0x1272e1 ; jp 0x12739d ; jp 0x127310 ; ret
0x00000000001273bc : jg 0x1273cd ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00000000001274e2 : jg 0x12754c ; lock mov rax, r8 ; ret
0x00000000001276b3 : jg 0x12772f ; loopne 0x127684 ; jp 0x127740 ; jp 0x1276b3 ; ret
0x000000000012775c : jg 0x12776d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000127882 : jg 0x1278ec ; lock mov rax, r8 ; ret
0x000000000012c579 : jg 0x12c5cc ; ret
0x000000000012c5ff : jg 0x12c64a ; ret
0x000000000012c779 : jg 0x12c7cc ; ret 0x894c
0x000000000012c7ff : jg 0x12c84a ; ret 0x894c
0x000000000012ef49 : jg 0x12ef9c ; ret
0x000000000012efcf : jg 0x12f01a ; ret
0x000000000012f149 : jg 0x12f19c ; ret 0x894c
0x000000000012f1cf : jg 0x12f21a ; ret 0x894c
0x0000000000131919 : jg 0x13196c ; ret
0x000000000013199f : jg 0x1319ea ; ret
0x0000000000131b19 : jg 0x131b6c ; ret 0x894c
0x0000000000131b9f : jg 0x131bea ; ret 0x894c
0x0000000000133ee8 : jg 0x133f39 ; loope 0x133ee7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133f5f : jg 0x133faa ; ret 0xff2
0x0000000000133f78 : jg 0x133fc9 ; loop 0x133f77 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133fef : jg 0x13403a ; ret
0x0000000000134008 : jg 0x134059 ; jrcxz 0x134007 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000134098 : jg 0x1340e9 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000134118 : jg 0x134169 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000134198 : jg 0x1341e9 ; out -0xd, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000134218 : jg 0x134269 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000134498 : jg 0x1344e9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000134518 : jg 0x134569 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001345a8 : jg 0x1345f9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000134628 : jg 0x134679 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013469c : jg 0x1346a7 ; ret
0x00000000001346f6 : jg 0x134709 ; ret
0x00000000001346f1 : jg 0x134741 ; psllq mm1, qword ptr [rdi] ; jg 0x13470e ; ret
0x0000000000134766 : jg 0x134779 ; ret
0x00000000001347d6 : jg 0x1347e9 ; ret
0x00000000001347d1 : jg 0x134821 ; or eax, 0xf7f0ff3 ; ret
0x0000000000134846 : jg 0x134859 ; ret
0x0000000000134841 : jg 0x134891 ; or al, 0xfffffffffffffff3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000001348b6 : jg 0x1348c9 ; ret
0x00000000001348b1 : jg 0x134901 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134926 : jg 0x134939 ; ret
0x0000000000134921 : jg 0x134971 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134996 : jg 0x1349a9 ; ret
0x0000000000134991 : jg 0x1349e1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134a06 : jg 0x134a19 ; ret
0x0000000000134a01 : jg 0x134a51 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134a76 : jg 0x134a89 ; ret
0x0000000000134ae6 : jg 0x134af9 ; ret
0x0000000000134b56 : jg 0x134b69 ; ret
0x0000000000134b51 : jg 0x134ba1 ; add eax, 0xf7f0ff3 ; ret
0x0000000000134bc6 : jg 0x134bd9 ; ret
0x0000000000134bc1 : jg 0x134c11 ; add al, -0xd ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134c36 : jg 0x134c49 ; ret
0x0000000000134c31 : jg 0x134c81 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134ca6 : jg 0x134cb9 ; ret
0x0000000000134ca1 : jg 0x134cf1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134d16 : jg 0x134d29 ; ret
0x0000000000134d11 : jg 0x134d61 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001369b8 : jg 0x136a09 ; loope 0x1369b7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136a2f : jg 0x136a7a ; ret 0xff2
0x0000000000136a48 : jg 0x136a99 ; loop 0x136a47 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136abf : jg 0x136b0a ; ret
0x0000000000136ad8 : jg 0x136b29 ; jrcxz 0x136ad7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136b68 : jg 0x136bb9 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136be8 : jg 0x136c39 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136c68 : jg 0x136cb9 ; out -0xd, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136ce8 : jg 0x136d39 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136f68 : jg 0x136fb9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000136fe8 : jg 0x137039 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000137078 : jg 0x1370c9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001370f8 : jg 0x137149 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013716c : jg 0x137177 ; ret
0x00000000001371c6 : jg 0x1371d9 ; ret
0x00000000001371c1 : jg 0x137211 ; psllq mm1, qword ptr [rdi] ; jg 0x1371de ; ret
0x0000000000137236 : jg 0x137249 ; ret
0x00000000001372a6 : jg 0x1372b9 ; ret
0x00000000001372a1 : jg 0x1372f1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000137316 : jg 0x137329 ; ret
0x0000000000137311 : jg 0x137361 ; or al, 0xfffffffffffffff3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000137386 : jg 0x137399 ; ret
0x0000000000137381 : jg 0x1373d1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000001373f6 : jg 0x137409 ; ret
0x00000000001373f1 : jg 0x137441 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000137466 : jg 0x137479 ; ret
0x0000000000137461 : jg 0x1374b1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001374d6 : jg 0x1374e9 ; ret
0x00000000001374d1 : jg 0x137521 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000137546 : jg 0x137559 ; ret
0x00000000001375b6 : jg 0x1375c9 ; ret
0x0000000000137626 : jg 0x137639 ; ret
0x0000000000137621 : jg 0x137671 ; add eax, 0xf7f0ff3 ; ret
0x0000000000137696 : jg 0x1376a9 ; ret
0x0000000000137691 : jg 0x1376e1 ; add al, -0xd ; movq qword ptr [rdi], mm1 ; ret
0x0000000000137706 : jg 0x137719 ; ret
0x0000000000137701 : jg 0x137751 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000137776 : jg 0x137789 ; ret
0x0000000000137771 : jg 0x1377c1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000001377e6 : jg 0x1377f9 ; ret
0x00000000001377e1 : jg 0x137831 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001394d8 : jg 0x139529 ; loope 0x1394d7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013954f : jg 0x13959a ; ret 0xff2
0x0000000000139568 : jg 0x1395b9 ; loop 0x139567 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001395df : jg 0x13962a ; ret
0x00000000001395f8 : jg 0x139649 ; jrcxz 0x1395f7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000139688 : jg 0x1396d9 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000139708 : jg 0x139759 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000139788 : jg 0x1397d9 ; out -0xd, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000139808 : jg 0x139859 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000139a88 : jg 0x139ad9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000139b08 : jg 0x139b59 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000139b98 : jg 0x139be9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000139c18 : jg 0x139c69 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000139c8c : jg 0x139c97 ; ret
0x0000000000139ce6 : jg 0x139cf9 ; ret
0x0000000000139ce1 : jg 0x139d31 ; psllq mm1, qword ptr [rdi] ; jg 0x139cfe ; ret
0x0000000000139d56 : jg 0x139d69 ; ret
0x0000000000139dc6 : jg 0x139dd9 ; ret
0x0000000000139dc1 : jg 0x139e11 ; or eax, 0xf7f0ff3 ; ret
0x0000000000139e36 : jg 0x139e49 ; ret
0x0000000000139e31 : jg 0x139e81 ; or al, 0xfffffffffffffff3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139ea6 : jg 0x139eb9 ; ret
0x0000000000139ea1 : jg 0x139ef1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139f16 : jg 0x139f29 ; ret
0x0000000000139f11 : jg 0x139f61 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139f86 : jg 0x139f99 ; ret
0x0000000000139f81 : jg 0x139fd1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139ff6 : jg 0x13a009 ; ret
0x0000000000139ff1 : jg 0x13a041 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000013a066 : jg 0x13a079 ; ret
0x000000000013a0d6 : jg 0x13a0e9 ; ret
0x000000000013a146 : jg 0x13a159 ; ret
0x000000000013a141 : jg 0x13a191 ; add eax, 0xf7f0ff3 ; ret
0x000000000013a1b6 : jg 0x13a1c9 ; ret
0x000000000013a1b1 : jg 0x13a201 ; add al, -0xd ; movq qword ptr [rdi], mm1 ; ret
0x000000000013a226 : jg 0x13a239 ; ret
0x000000000013a221 : jg 0x13a271 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000013a296 : jg 0x13a2a9 ; ret
0x000000000013a291 : jg 0x13a2e1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000013a306 : jg 0x13a319 ; ret
0x000000000013a301 : jg 0x13a351 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000014bce5 : jg 0x14bcf4 ; neg eax ; ret
0x000000000014bdf2 : jg 0x14be02 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000014be93 : jg 0x14bee4 ; loopne 0x14bee8 ; sub eax, edx ; vzeroupper ; ret
0x00000000001608c4 : jg 0x16087f ; hlt ; jmp rsp
0x000000000016129c : jg 0x1612b1 ; cmc ; call qword ptr [rax]
0x0000000000162f71 : jg 0x162f73 ; inc dword ptr [rax] ; jg 0x162f77 ; jmp rax
0x0000000000162f75 : jg 0x162f73 ; jmp rax
0x000000000016f241 : jg 0x16f241 ; call rsi
0x000000000016f240 : jg 0x16f242 ; call rsi
0x000000000016f3fd : jg 0x16f3fd ; jmp qword ptr [rax]
0x000000000016f401 : jg 0x16f405 ; call qword ptr [rax + 0x20fffc85]
0x000000000016f43d : jg 0x16f43d ; call qword ptr [rax]
0x000000000016f439 : jg 0x16f43d ; push qword ptr [rax + 0x7f] ; cld ; call qword ptr [rax]
0x00000000001702c9 : jg 0x1702d1 ; add al, dl ; in al, dx ; jmp rax
0x0000000000170aa5 : jg 0x170a98 ; jmp rax
0x000000000017d9c1 : jg 0x17d9b4 ; call rax
0x000000000018c459 : jg 0x18c453 ; jmp qword ptr [rsi]
0x000000000018c471 : jg 0x18c46b ; jmp qword ptr [rsi]
0x000000000018c489 : jg 0x18c483 ; jmp qword ptr [rsi]
0x000000000018c4a1 : jg 0x18c49b ; jmp qword ptr [rsi]
0x000000000018c4b9 : jg 0x18c4b3 ; jmp qword ptr [rsi]
0x000000000018c4d1 : jg 0x18c4cb ; jmp qword ptr [rsi]
0x0000000000020f9f : jg 0x20fbb ; call rdx
0x0000000000032e5b : jg 0x32ead ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000033357 : jg 0x332e1 ; or edi, ecx ; movd xmm0, edi ; ret
0x00000000000332fb : jg 0x33302 ; je 0x332ee ; ret
0x000000000003346d : jg 0x33481 ; xchg eax, edi ; ret 0x5e77
0x00000000000334a3 : jg 0x334b7 ; xchg eax, edi ; ret 0x1377
0x00000000000336b2 : jg 0x336fc ; or eax, esi ; je 0x33663 ; ret
0x0000000000037072 : jg 0x370bb ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x000000000004252b : jg 0x42599 ; xor eax, eax ; ret
0x0000000000044514 : jg 0x44521 ; ret 0x5488
0x00000000000510e5 : jg 0x510f9 ; xchg eax, esp ; ret 0xc084
0x000000000005e31c : jg 0x5e327 ; add byte ptr [rbx - 0x76be0008], al ; ret 0x850f
0x0000000000072fc7 : jg 0x72f55 ; inc byte ptr [rdx] ; je 0x72fe1 ; mov dword ptr [rdi], edx ; ret
0x00000000000856c7 : jg 0x856e0 ; jne 0x856b7 ; mov rax, rdi ; ret
0x000000000008a757 : jg 0x8a76e ; jne 0x8a745 ; ret
0x000000000008bc18 : jg 0x8bc03 ; ret
0x0000000000095676 : jg 0x95681 ; ret
0x0000000000095686 : jg 0x95694 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009569a : jg 0x956a9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000956b9 : jg 0x956c7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000956c9 : jg 0x956d7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000956d9 : jg 0x956ea ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000956fa : jg 0x95709 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009571a : jg 0x95729 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009573a : jg 0x95749 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009575a : jg 0x9576c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009579d : jg 0x957af ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000957bd : jg 0x957cf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000957db : jg 0x957eb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000957fb : jg 0x9580b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009581b : jg 0x9582b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009583b : jg 0x9584b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000095dc8 : jg 0x95dd3 ; jne 0x96688 ; ret
0x0000000000095dec : jg 0x95df8 ; jne 0x96688 ; ret
0x0000000000095e0f : jg 0x95e1c ; jne 0x96688 ; ret
0x0000000000095e2a : jg 0x95e38 ; jne 0x96688 ; ret
0x0000000000095e4d : jg 0x95e5c ; jne 0x96688 ; ret
0x0000000000095e72 : jg 0x95e82 ; jne 0x96688 ; ret
0x0000000000095e90 : jg 0x95ea1 ; jne 0x96688 ; ret
0x0000000000095eac : jg 0x95ebe ; jne 0x96688 ; ret
0x0000000000095ecf : jg 0x95ee2 ; jne 0x96688 ; ret
0x0000000000095ef4 : jg 0x95f08 ; jne 0x96688 ; ret
0x0000000000095f12 : jg 0x95f27 ; jne 0x96688 ; ret
0x0000000000095f32 : jg 0x95f48 ; jne 0x96688 ; ret
0x0000000000095f54 : jg 0x95f6b ; jne 0x96688 ; ret
0x0000000000095f74 : jg 0x95f8c ; jne 0x96688 ; ret
0x0000000000095f94 : jg 0x95fad ; jne 0x96688 ; ret
0x0000000000095fae : jg 0x95fc8 ; jne 0x96688 ; ret
0x0000000000095fd1 : jg 0x95fec ; jne 0x96688 ; ret
0x0000000000095ff6 : jg 0x96012 ; jne 0x96688 ; ret
0x0000000000096014 : jg 0x96031 ; jne 0x96688 ; ret
0x0000000000096034 : jg 0x96052 ; jne 0x96688 ; ret
0x0000000000096057 : jg 0x96076 ; jne 0x96688 ; ret
0x0000000000096076 : jg 0x96096 ; jne 0x96688 ; ret
0x0000000000096096 : jg 0x960b7 ; jne 0x96688 ; ret
0x00000000000960b6 : jg 0x960d8 ; jne 0x96688 ; ret
0x00000000000960d9 : jg 0x960fc ; jne 0x96688 ; ret
0x000000000009610e : jg 0x96132 ; jne 0x96688 ; ret
0x000000000009613c : jg 0x96161 ; jne 0x96688 ; ret
0x000000000009616c : jg 0x96192 ; jne 0x96688 ; ret
0x0000000000096198 : jg 0x961bf ; jne 0x96688 ; ret
0x00000000000961c8 : jg 0x961f0 ; jne 0x96688 ; ret
0x00000000000961f8 : jg 0x96221 ; jne 0x96688 ; ret
0x0000000000096228 : jg 0x96252 ; jne 0x96688 ; ret
0x0000000000096346 : jg 0x96351 ; ret
0x0000000000096359 : jg 0x96367 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009636a : jg 0x96379 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000096389 : jg 0x96397 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000096399 : jg 0x963a7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000963ac : jg 0x963bd ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000963ca : jg 0x963d9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000963ea : jg 0x963f9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009640a : jg 0x96419 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009642d : jg 0x9643f ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009646d : jg 0x9647f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009648d : jg 0x9649f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000964ab : jg 0x964bb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000964cb : jg 0x964db ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000964eb : jg 0x964fb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009650b : jg 0x9651b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000096642 : jg 0x9664d ; ret
0x0000000000096776 : jg 0x967aa ; ret
0x0000000000096ce6 : jg 0x96cf5 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000096cf6 : jg 0x96d08 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000096d29 : jg 0x96d3b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000096d49 : jg 0x96d5b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000096e6f : jg 0x96ecf ; or eax, 0x1c478d48 ; ret
0x000000000009746b : jg 0x97476 ; jne 0x97e98 ; ret
0x0000000000097490 : jg 0x9749c ; jne 0x97e98 ; ret
0x00000000000974b3 : jg 0x974c0 ; jne 0x97e98 ; ret
0x00000000000974ce : jg 0x974dc ; jne 0x97e98 ; ret
0x00000000000974f1 : jg 0x97500 ; jne 0x97e98 ; ret
0x0000000000097516 : jg 0x97526 ; jne 0x97e98 ; ret
0x0000000000097534 : jg 0x97545 ; jne 0x97e98 ; ret
0x0000000000097550 : jg 0x97562 ; jne 0x97e98 ; ret
0x0000000000097573 : jg 0x97586 ; jne 0x97e98 ; ret
0x0000000000097598 : jg 0x975ac ; jne 0x97e98 ; ret
0x00000000000975c6 : jg 0x975db ; jne 0x97e98 ; ret
0x00000000000975e6 : jg 0x975fc ; jne 0x97e98 ; ret
0x0000000000097608 : jg 0x9761f ; jne 0x97e98 ; ret
0x0000000000097638 : jg 0x97650 ; jne 0x97e98 ; ret
0x0000000000097668 : jg 0x97681 ; jne 0x97e98 ; ret
0x0000000000097692 : jg 0x976ac ; jne 0x97e98 ; ret
0x00000000000976b5 : jg 0x976d0 ; jne 0x97e98 ; ret
0x00000000000976da : jg 0x976f6 ; jne 0x97e98 ; ret
0x0000000000097708 : jg 0x97725 ; jne 0x97e98 ; ret
0x0000000000097738 : jg 0x97756 ; jne 0x97e98 ; ret
0x000000000009776b : jg 0x9778a ; jne 0x97e98 ; ret
0x000000000009779a : jg 0x977ba ; jne 0x97e98 ; ret
0x00000000000977ca : jg 0x977eb ; jne 0x97e98 ; ret
0x00000000000977fa : jg 0x9781c ; jne 0x97e98 ; ret
0x000000000009782d : jg 0x97850 ; jne 0x97e98 ; ret
0x0000000000097862 : jg 0x97886 ; jne 0x97e98 ; ret
0x0000000000097890 : jg 0x978b5 ; jne 0x97e98 ; ret
0x00000000000978c0 : jg 0x978e6 ; jne 0x97e98 ; ret
0x00000000000978ec : jg 0x97913 ; jne 0x97e98 ; ret
0x000000000009791c : jg 0x97944 ; jne 0x97e98 ; ret
0x000000000009794c : jg 0x97975 ; jne 0x97e98 ; ret
0x000000000009797c : jg 0x979a6 ; jne 0x97e98 ; ret
0x0000000000097b26 : jg 0x97b35 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000097b39 : jg 0x97b4b ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000097b79 : jg 0x97b8b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000097b99 : jg 0x97bab ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000097cbf : jg 0x97d1f ; or eax, 0x1d478d48 ; ret
0x0000000000097e52 : jg 0x97e5d ; ret
0x0000000000097f86 : jg 0x97fbe ; lea rax, qword ptr [rdi + 0x40] ; ret
0x0000000000098756 : jg 0x98761 ; ret
0x0000000000098766 : jg 0x98774 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009877a : jg 0x98789 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000098799 : jg 0x987a7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000987a9 : jg 0x987b7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000987b9 : jg 0x987ca ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000987da : jg 0x987e9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000987fa : jg 0x98809 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009881a : jg 0x98829 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009883a : jg 0x9884c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009887d : jg 0x9888f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009889d : jg 0x988af ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000988bb : jg 0x988cb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000988db : jg 0x988eb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000988fb : jg 0x9890b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009891b : jg 0x9892b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000099226 : jg 0x99231 ; ret
0x0000000000099236 : jg 0x99244 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009924a : jg 0x99259 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000099269 : jg 0x99277 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000099279 : jg 0x99287 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000099289 : jg 0x9929a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000992aa : jg 0x992b9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000992ca : jg 0x992d9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000992ea : jg 0x992f9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009930a : jg 0x9931c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009934d : jg 0x9935f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009936d : jg 0x9937f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009938b : jg 0x9939b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000993ab : jg 0x993bb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000993cb : jg 0x993db ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000993eb : jg 0x993fb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000099596 : jg 0x995a6 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009976f : jg 0x997d0 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009978f : jg 0x997f0 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000099806 : jg 0x9983f ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x0000000000099805 : jg 0x9988e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009a170 : jg 0x9a1ad ; ret 0x2b77
0x000000000009b265 : jg 0x9b26d ; neg eax ; ret
0x00000000000a8392 : jg 0xa83e5 ; cmp ebx, edx ; mov dl, -1 ; cmovle rax, rdx ; pop rbx ; ret
0x00000000000b8c2c : jg 0xb8c32 ; add byte ptr [rax], al ; ret
0x00000000000b8c7b : jg 0xb8c84 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000b8c7b : jg 0xb8c85 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000d4a19 : jg 0xd4a38 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; jne 0xd4a31 ; ret
0x00000000000db980 : jg 0xdb9d2 ; add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000010a3d5 : jge 0x10a3dc ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010f00f : jge 0x10f023 ; call rax
0x0000000000113c9f : jge 0x113cb3 ; call rax
0x00000000001142f8 : jge 0x11430c ; call rax
0x000000000014bf14 : jge 0x14bf28 ; call rbx
0x0000000000159fb1 : jge 0x159fa2 ; call rbx
0x0000000000161018 : jge 0x161024 ; cmc ; jmp qword ptr [rcx]
0x00000000001612ad : jge 0x1612a6 ; jmp rax
0x00000000001612a9 : jge 0x1612a6 ; push qword ptr [rax + 0x7d] ; cmc ; jmp rax
0x00000000001612b1 : jge 0x1612aa ; jmp rax
0x00000000001612b9 : jge 0x1612b2 ; call rax
0x00000000001612b5 : jge 0x1612b2 ; inc eax ; jge 0x1612b6 ; call rax
0x00000000001612c1 : jge 0x1612ba ; call qword ptr [rax]
0x00000000001612bd : jge 0x1612ba ; inc eax ; jge 0x1612be ; call qword ptr [rax]
0x00000000001612e9 : jge 0x1612e2 ; call qword ptr [rax]
0x00000000001612e5 : jge 0x1612e2 ; push rax ; jge 0x1612e6 ; call qword ptr [rax]
0x00000000001625f0 : jge 0x162650 ; idiv edi ; rcr dword ptr [rdx - 9], cl ; call rbx
0x000000000016268c : jge 0x1626ec ; idiv edi ; rcr dword ptr [rdx - 9], cl ; call rbx
0x000000000016e521 : jge 0x16e524 ; call qword ptr [rax + 0x10fffb7e]
0x0000000000170269 : jge 0x170271 ; add al, dl ; cmp al, -0x14 ; call qword ptr [rax]
0x0000000000170a75 : jge 0x170a68 ; jmp qword ptr [rax]
0x00000000001721bd : jge 0x1721b5 ; jmp qword ptr [rax]
0x00000000001721bc : jge 0x1721b6 ; jmp qword ptr [rax]
0x0000000000186051 : jge 0x186049 ; call qword ptr [rdx]
0x0000000000188391 : jge 0x18838a ; call rdx
0x0000000000020d79 : jge 0x20d2a ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000008fcbf : jge 0x8fcc7 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a785e : jge 0xa7868 ; lea r9, qword ptr [rsp + 0x30] ; call r12
0x00000000000b42c6 : jge 0xb4263 ; call r14
0x00000000000c57a1 : jge 0xc5783 ; mov edx, eax ; jmp 0xc5788
0x00000000000e565a : jge 0xe5625 ; mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000001078f2 : jl 0x107921 ; or byte ptr [rbp - 0x17], dh ; add rsp, 0x18 ; ret
0x0000000000149c3b : jl 0x149c44 ; neg eax ; ret
0x000000000015fc81 : jl 0x15fc77 ; jmp qword ptr [rax]
0x000000000015fdbd : jl 0x15fdc1 ; jmp qword ptr [rax + 0x10fffc8f]
0x0000000000160219 : jl 0x160210 ; call qword ptr [rax]
0x000000000016021d : jl 0x160214 ; jmp qword ptr [rax]
0x000000000016f4c5 : jl 0x16f4c5 ; jmp qword ptr [rdx]
0x000000000016f4c9 : jl 0x16f4cd ; call qword ptr [rdx + 0x12fffc7b]
0x000000000016f645 : jl 0x16f645 ; jmp rax
0x0000000000170209 : jl 0x170211 ; add byte ptr [rax], ah ; cmp esp, ebp ; call rax
0x00000000001786b4 : jl 0x1786ef ; add byte ptr [rax], al ; loope 0x1786ad ; call qword ptr [rcx]
0x000000000017b6ad : jl 0x17b6c5 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000017d045 : jl 0x17d04d ; add byte ptr [rsi], cl ; sub ch, dl ; call rdx
0x000000000017d085 : jl 0x17d08d ; add byte ptr [rax + 0x5f], bl ; out dx, eax ; call rbx
0x000000000017d084 : jl 0x17d08e ; add byte ptr [rax + 0x5f], bl ; out dx, eax ; call rbx
0x000000000017d0b4 : jl 0x17d139 ; add byte ptr [rax], al ; or byte ptr [rdx - 0x11], ah ; jmp qword ptr [rax]
0x000000000017e6b4 : jl 0x17e64f ; add byte ptr [rax], al ; cwde ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; call qword ptr [rdi]
0x00000000001816d0 : jl 0x1816d7 ; add byte ptr [rax], al ; pushfq ; ret 0
0x00000000001819b4 : jl 0x181982 ; add byte ptr [rax], al ; cwde ; mov bh, -0xf ; call qword ptr [rax]
0x00000000001866b4 : jl 0x1866cf ; add dword ptr [rax], eax ; js 0x18666c ; hlt ; jmp qword ptr [rcx]
0x00000000001877b4 : jl 0x1877e0 ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], al ; jmp qword ptr [rcx]
0x0000000000188301 : jl 0x1882fa ; call qword ptr [rbx]
0x000000000018a5b4 : jl 0x18a60e ; add dword ptr [rax], eax ; out -0xb, eax ; jmp qword ptr [rcx]
0x000000000018c4b4 : jl 0x18c52d ; add dword ptr [rax], eax ; fdivr dword ptr [rdi - 0xa] ; jmp qword ptr [rsi]
0x000000000018f3b4 : jl 0x18f35c ; add dword ptr [rax], eax ; call 0x1818eafb
0x000000000018f8b4 : jl 0x18f861 ; add dword ptr [rax], eax ; cmp byte ptr [rax - 9], cl ; call qword ptr [rdi]
0x00000000000236e8 : jl 0x23711 ; call rbx
0x0000000000023bb8 : jl 0x23be1 ; call rbx
0x00000000000240da : jl 0x24103 ; call rbx
0x00000000000244a8 : jl 0x244d1 ; call rbx
0x00000000000025c3 : jl 0x2556 ; loop 0x25a1 ; ret 0x23cb
0x000000000003dfeb : jl 0x3e016 ; and byte ptr [rax + 0x29], cl ; ret 0x2949
0x0000000000000452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x000000000004c073 : jl 0x4c03d ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000077dd2 : jl 0x77e0c ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000077e75 : jl 0x77eb1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000008b355 : jl 0x8b380 ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000008fd4a : jl 0x8fdb5 ; add rax, rdi ; ret
0x000000000008fd5a : jl 0x8fdb7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008fd7a : jl 0x8fdb7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008fd9a : jl 0x8fdb7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a0ee6 : jl 0xa0f11 ; or byte ptr [rcx - 0x77], al ; ret 0x8d48
0x00000000000ad7c6 : jl 0xad7f0 ; and al, ch ; ret 0x5b
0x00000000000b45dd : jl 0xb460b ; sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000c1f3e : jl 0xc1f78 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c2368 : jl 0xc2387 ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000c2580 : jl 0xc2573 ; ret
0x00000000000c3973 : jl 0xc39a1 ; or byte ptr [rbp - 0x9d18b01], al ; ret
0x00000000000e54aa : jl 0xe54d8 ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000e8214 : jl 0xe8259 ; je 0xe821d ; ret
0x00000000000ffea5 : jl 0xffecf ; sbb al, ch ; ret
0x0000000000112e38 : jle 0x112e50 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000011a07e : jle 0x11a026 ; cld ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000123ac6 : jle 0x1239e1 ; movsxd rax, ecx ; ret
0x0000000000123d0a : jle 0x123c4b ; ret
0x00000000001612c5 : jle 0x1612be ; jmp qword ptr [rax]
0x00000000001612c9 : jle 0x1612c2 ; call qword ptr [rax]
0x00000000001612cd : jle 0x1612c6 ; call qword ptr [rax]
0x00000000001612d1 : jle 0x1612ce ; call qword ptr [rax + 0x10fff57e]
0x00000000001612d5 : jle 0x1612ce ; call qword ptr [rax]
0x00000000001612d9 : jle 0x1612d2 ; call qword ptr [rax]
0x00000000001612ed : jle 0x1612e6 ; call rax
0x0000000000162f79 : jle 0x162f77 ; call rax
0x0000000000162f81 : jle 0x162f7f ; call qword ptr [rax]
0x0000000000162f7d : jle 0x162f7f ; inc eax ; jle 0x162f83 ; call qword ptr [rax]
0x000000000016e525 : jle 0x16e524 ; call qword ptr [rax]
0x00000000001862e1 : jle 0x1862ef ; ret
0x0000000000029a92 : jle 0x29aa5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000000b849d : jle 0xb84ab ; ret
0x00000000000b8cd9 : jle 0xb8cdf ; add byte ptr [rax], al ; ret
0x0000000000105d8e : jmp 0x105d54
0x00000000000d9ee6 : jmp 0x10862a39
0x000000000010e47f : jmp 0x10e445
0x000000000011346e : jmp 0x113478
0x000000000011c75d : jmp 0x11c723
0x000000000015b64a : jmp 0x15b689
0x000000000015c389 : jmp 0x15c35c
0x000000000015d380 : jmp 0x15d314
0x000000000015d37f : jmp 0x15d315
0x000000000016fc9e : jmp 0x16fca0
0x000000000016fd3e : jmp 0x16fd40
0x000000000016fd7e : jmp 0x16fd80
0x000000000016fdce : jmp 0x16fdd0
0x000000000016fdcd : jmp 0x16fdd1
0x000000000016fdde : jmp 0x16fde0
0x000000000016fddd : jmp 0x16fde1
0x000000000016fdf6 : jmp 0x16fdf8
0x000000000016fdf5 : jmp 0x16fdf9
0x000000000016fe06 : jmp 0x16fe08
0x000000000016fe16 : jmp 0x16fe18
0x000000000016feb6 : jmp 0x16feb8
0x000000000016fede : jmp 0x16fee0
0x000000000016feee : jmp 0x16fef0
0x000000000016ff06 : jmp 0x16ff08
0x000000000016ff16 : jmp 0x16ff18
0x000000000016ffae : jmp 0x16ffb0
0x000000000016ffee : jmp 0x16fff0
0x000000000016fffe : jmp 0x170000
0x000000000017003e : jmp 0x170040
0x000000000017007e : jmp 0x170080
0x000000000017008e : jmp 0x170090
0x0000000000170dbd : jmp 0x170db2
0x0000000000176532 : jmp 0x176534
0x0000000000176531 : jmp 0x176535
0x000000000017661a : jmp 0x17661c
0x0000000000176962 : jmp 0x176964
0x0000000000176961 : jmp 0x176965
0x00000000001769f2 : jmp 0x1769f4
0x0000000000176b3a : jmp 0x176b3c
0x0000000000176d62 : jmp 0x176d64
0x0000000000176df2 : jmp 0x176df4
0x0000000000176e0a : jmp 0x176e0c
0x0000000000176e22 : jmp 0x176e24
0x0000000000176e3a : jmp 0x176e3c
0x0000000000176e52 : jmp 0x176e54
0x0000000000176e6a : jmp 0x176e6c
0x0000000000176e82 : jmp 0x176e84
0x0000000000176e9a : jmp 0x176e9c
0x0000000000176eb2 : jmp 0x176eb4
0x0000000000176eca : jmp 0x176ecc
0x0000000000176ee2 : jmp 0x176ee4
0x0000000000176f2a : jmp 0x176f2c
0x0000000000176f42 : jmp 0x176f44
0x0000000000176f5a : jmp 0x176f5c
0x0000000000176f72 : jmp 0x176f74
0x0000000000176fa2 : jmp 0x176fa4
0x000000000017717a : jmp 0x17717c
0x0000000000177179 : jmp 0x17717d
0x0000000000177212 : jmp 0x177214
0x0000000000177242 : jmp 0x177244
0x000000000017725a : jmp 0x17725c
0x000000000017733a : jmp 0x17733c
0x0000000000177552 : jmp 0x177554
0x000000000017760a : jmp 0x17760c
0x000000000017780a : jmp 0x17780c
0x000000000017783a : jmp 0x17783c
0x0000000000177852 : jmp 0x177854
0x000000000017795a : jmp 0x17795c
0x00000000001779ba : jmp 0x1779bc
0x0000000000177a02 : jmp 0x177a04
0x0000000000177bf2 : jmp 0x177bf4
0x0000000000177dda : jmp 0x177ddc
0x00000000001786a2 : jmp 0x1786a4
0x00000000001786ba : jmp 0x1786bc
0x000000000017875a : jmp 0x17875c
0x0000000000178772 : jmp 0x178774
0x000000000017878a : jmp 0x17878c
0x00000000001787fa : jmp 0x1787fc
0x0000000000178842 : jmp 0x178844
0x0000000000178922 : jmp 0x178924
0x0000000000178a0a : jmp 0x178a0c
0x0000000000178a22 : jmp 0x178a24
0x0000000000178a3a : jmp 0x178a3c
0x0000000000178a6a : jmp 0x178a6c
0x0000000000178b2a : jmp 0x178b2c
0x0000000000178b72 : jmp 0x178b74
0x0000000000178c1a : jmp 0x178c1c
0x0000000000178c32 : jmp 0x178c34
0x0000000000178c4a : jmp 0x178c4c
0x0000000000178c62 : jmp 0x178c64
0x0000000000178d92 : jmp 0x178d94
0x0000000000178d91 : jmp 0x178d95
0x0000000000178daa : jmp 0x178dac
0x0000000000178da9 : jmp 0x178dad
0x0000000000178dc2 : jmp 0x178dc4
0x0000000000178dc1 : jmp 0x178dc5
0x0000000000178dda : jmp 0x178ddc
0x0000000000178dd9 : jmp 0x178ddd
0x0000000000178df2 : jmp 0x178df4
0x0000000000178df1 : jmp 0x178df5
0x0000000000178e0a : jmp 0x178e0c
0x0000000000178e09 : jmp 0x178e0d
0x000000000001f48b : jmp 0x1f407
0x000000000002d28e : jmp 0x2d237
0x000000000003189e : jmp 0x31864
0x00000000000368e4 : jmp 0x368aa
0x0000000000037ad5 : jmp 0x377bb
0x0000000000037f14 : jmp 0x37c5b
0x000000000000386b : jmp 0x3831
0x000000000003beb2 : jmp 0x3b29a
0x000000000003b910 : jmp 0x3b39e
0x000000000003b8f2 : jmp 0x3b54c
0x000000000003e206 : jmp 0x3dc9e
0x000000000003e1e8 : jmp 0x3de5a
0x0000000000042b82 : jmp 0x42bd4
0x0000000000044282 : jmp 0x442d4
0x00000000000481fb : jmp 0x481c0
0x00000000000cf261 : jmp 0x48cf7bb1
0x000000000006c562 : jmp 0x48f54eb5
0x00000000000a6195 : jmp 0x4ccceaea
0x000000000004ddbe : jmp 0x4de0b
0x0000000000050d3f : jmp 0x50cd7
0x00000000000547fc : jmp 0x547d5
0x00000000000594a7 : jmp 0x557a8
0x000000000005b82c : jmp 0x57ae8
0x000000000005de91 : jmp 0x5a0ce
0x000000000005c999 : jmp 0x5c95e
0x000000000005d6f9 : jmp 0x5d6be
0x00000000000629f3 : jmp 0x5ecf2
0x0000000000063323 : jmp 0x5f52d
0x0000000000061e12 : jmp 0x60ba0
0x0000000000064af1 : jmp 0x60dd3
0x00000000000661cf : jmp 0x62465
0x0000000000066a4d : jmp 0x62c87
0x0000000000062e22 : jmp 0x62de7
0x0000000000069717 : jmp 0x6964e
0x0000000000076cfd : jmp 0x76d01
0x00000000000f7227 : jmp 0x76d1ab77
0x00000000000773ee : jmp 0x773b4
0x000000000007a230 : jmp 0x7a1f5
0x000000000007dabf : jmp 0x7d859
0x000000000007e7d8 : jmp 0x7e79e
0x000000000007ff24 : jmp 0x7feea
0x0000000000080078 : jmp 0x8003d
0x000000000008c121 : jmp 0x8bffe
0x000000000008c6dc : jmp 0x8c6a2
0x000000000008c828 : jmp 0x8c7ed
0x000000000008c9d2 : jmp 0x8c997
0x0000000000099b7e : jmp 0x99b44
0x0000000000099c4f : jmp 0x99c15
0x0000000000099cbe : jmp 0x99c84
0x000000000009d651 : jmp 0x9d377
0x000000000009da80 : jmp 0x9d817
0x000000000009fcd1 : jmp 0x9fd1e
0x00000000000a23c9 : jmp 0xa2416
0x00000000000a47bc : jmp 0xa47d3
0x00000000000a9641 : jmp 0xa9606
0x00000000000ab1d1 : jmp 0xab079
0x00000000000ab7cb : jmp 0xab791
0x00000000000c32aa : jmp 0xc326f
0x00000000000c3735 : jmp 0xc36fb
0x00000000000c3d06 : jmp 0xc3ccc
0x00000000000c4d28 : jmp 0xc48bd
0x00000000000c4efb : jmp 0xc4ea4
0x00000000000c6245 : jmp 0xc5f0c
0x00000000000c787c : jmp 0xc7842
0x00000000000c96d2 : jmp 0xc9698
0x00000000000cd9c0 : jmp 0xcd985
0x00000000000d3140 : jmp 0xd3105
0x00000000000df269 : jmp 0xdedf8
0x00000000000e06e3 : jmp 0xe06a4
0x00000000000ed4fe : jmp 0xed1f8
0x00000000000ed4b3 : jmp 0xed23c
0x00000000000ee96a : jmp 0xee87d
0x00000000000f146e : jmp 0xf147d
0x00000000000f8011 : jmp 0xf7fd6
0x00000000000f9bc2 : jmp 0xf9999
0x00000000000f9f62 : jmp 0xf9d51
0x00000000000fb514 : jmp 0xfb53e
0x00000000000f6c23 : jmp 0xfd1ff3a
0x00000000000fda29 : jmp 0xfd9ee
0x00000000000ffa61 : jmp 0xffa66
0x000000000010fd87 : jmp 0xffffffff80d3f49f
0x0000000000100bf5 : jmp 0xffffffff895cce85
0x00000000000ff6c3 : jmp 0xffffffffc094f6d0
0x0000000000003152 : jmp 0xffffffffc25d05fe
0x000000000009b173 : jmp 0xffffffffc309b17c
0x0000000000043241 : jmp 0xffffffffc313bb96
0x000000000008e946 : jmp 0xffffffffc33ff18f
0x0000000000170da5 : jmp 0xffffffffc3480d9d
0x0000000000170dad : jmp 0xffffffffc3680da5
0x00000000000f5dfe : jmp 0xffffffffc3dfe753
0x00000000000f5c2e : jmp 0xffffffffc407e57f
0x000000000002ae17 : jmp 0xffffffffd04f376c
0x000000000004e6c9 : jmp 0xffffffffefc7d028
0x000000000009cc6b : jmp 0xfffffffffff955bc
0x0000000000041536 : jmp qword ptr [r8]
0x000000000015fdbf : jmp qword ptr [rax + 0x10fffc8f]
0x000000000016f103 : jmp qword ptr [rax + 0x20fffc56]
0x00000000001723af : jmp qword ptr [rax + 0x6000014f]
0x000000000015fb4b : jmp qword ptr [rax + 0x8fff1d5]
0x0000000000160133 : jmp qword ptr [rax - 0x2f000c8a]
0x0000000000160103 : jmp qword ptr [rax - 0x2f000c8c]
0x000000000015ff3b : jmp qword ptr [rax - 0x3f000ca0]
0x0000000000171a5f : jmp qword ptr [rax - 0x6ffffef0]
0x000000000007b9f5 : jmp qword ptr [rax]
0x0000000000160927 : jmp qword ptr [rbx + rax*8 - 0x3cd8000c]
0x0000000000002547 : jmp qword ptr [rbx]
0x000000000003ac35 : jmp qword ptr [rcx]
0x000000000015f8ff : jmp qword ptr [rdi + 0x20fff099]
0x00000000000a24cf : jmp qword ptr [rdi]
0x000000000016f9f3 : jmp qword ptr [rdx + 0x12fffc9c]
0x000000000016f4c3 : jmp qword ptr [rdx + 0x22fffc7c]
0x00000000001608bf : jmp qword ptr [rdx]
0x0000000000036291 : jmp qword ptr [rsi + 0xf]
0x000000000003905d : jmp qword ptr [rsi - 0x70]
0x000000000016148b : jmp qword ptr [rsi]
0x000000000015ffd1 : jmp qword ptr fs:[rax]
0x000000000015fff1 : jmp qword ptr gs:[rax]
0x0000000000001b5e : jmp r10
0x000000000010908a : jmp r8
0x000000000012a36d : jmp r9
0x000000000015ff43 : jmp rax
0x0000000000160fe3 : jmp rbx
0x0000000000055b23 : jmp rcx
0x0000000000057ad2 : jmp rdi
0x0000000000001b5f : jmp rdx
0x000000000002aeaf : jmp rsi
0x0000000000002a51 : jmp rsp
0x00000000001032ef : jne 0x1032d4 ; ret
0x000000000010365b : jne 0x103693 ; ret
0x0000000000103657 : jne 0x1036b7 ; test edx, edx ; jne 0x103697 ; ret
0x0000000000105258 : jne 0x1051aa ; ret
0x00000000001060f3 : jne 0x1060d3 ; ret
0x0000000000106bdc : jne 0x106be2 ; ret
0x0000000000106c1c : jne 0x106c10 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001078f5 : jne 0x1078e6 ; add rsp, 0x18 ; ret
0x00000000001091c7 : jne 0x109162 ; sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000010adcd : jne 0x10ae00 ; mov dword ptr [rsi], 0 ; ret
0x000000000010b5d5 : jne 0x10b5e8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000010b6dd : jne 0x10b677 ; xor eax, eax ; pop rbx ; ret
0x000000000010bcca : jne 0x10bc89 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010c3a2 : jne 0x10c385 ; xor eax, eax ; pop rbx ; ret
0x000000000010c402 : jne 0x10c3e8 ; mov eax, 1 ; pop rbx ; ret
0x000000000010d4a4 : jne 0x10d493 ; ret
0x000000000010f248 : jne 0x10f252 ; ret
0x0000000000113c17 : jne 0x113c03 ; pop rbx ; ret
0x0000000000113eb8 : jne 0x113ec2 ; ret
0x0000000000115303 : jne 0x1152fa ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x00000000001164f7 : jne 0x116502 ; ret
0x0000000000116537 : jne 0x116542 ; ret
0x000000000011d279 : jne 0x11d286 ; add rsp, 0x38 ; ret
0x000000000011de68 : jne 0x11de74 ; xor eax, eax ; ret
0x000000000011de98 : jne 0x11dea4 ; xor eax, eax ; ret
0x000000000011dec8 : jne 0x11ded4 ; xor eax, eax ; ret
0x000000000011def8 : jne 0x11df04 ; xor eax, eax ; ret
0x000000000011df28 : jne 0x11df34 ; xor eax, eax ; ret
0x000000000011df58 : jne 0x11df64 ; xor eax, eax ; ret
0x0000000000141c21 : jne 0x1421d6 ; ret
0x0000000000148dbd : jne 0x148de7 ; xor eax, eax ; ret
0x00000000001483b1 : jne 0x148deb ; xor eax, eax ; ret
0x00000000001483d9 : jne 0x148df7 ; xor eax, eax ; ret
0x0000000000149bfd : jne 0x149c27 ; xor eax, eax ; ret
0x00000000001499e1 : jne 0x149c2b ; xor eax, eax ; ret
0x0000000000149c31 : jne 0x149c3a ; xor eax, eax ; ret
0x0000000000149a07 : jne 0x149c3e ; xor eax, eax ; ret
0x0000000000149d45 : jne 0x149cd6 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000149d17 : jne 0x149cd6 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000149d16 : jne 0x149cd7 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000014b4a4 : jne 0x14b6b8 ; xor eax, eax ; ret
0x000000000014b6a9 : jne 0x14b6c9 ; xor eax, eax ; ret
0x000000000014b551 : jne 0x14b6cd ; xor eax, eax ; ret
0x000000000014b6c1 : jne 0x14b6ce ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000014bcd6 : jne 0x14bce4 ; xor eax, eax ; ret
0x000000000014bbad : jne 0x14bce6 ; ret
0x000000000014c3ed : jne 0x14c3de ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014c440 : jne 0x14c420 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014c57d : jne 0x14c56d ; pop rbx ; ret
0x000000000014c649 : jne 0x14c617 ; add rsp, 8 ; ret
0x000000000014c7c8 : jne 0x14c7d3 ; ret
0x000000000014c8a9 : jne 0x14c89c ; pop rbx ; ret
0x000000000014ce01 : jne 0x14ce0b ; pop rbx ; ret
0x000000000016011d : jne 0x160118 ; inc eax ; jne 0x16011c ; jmp rax
0x0000000000160121 : jne 0x160118 ; jmp rax
0x0000000000160125 : jne 0x16011c ; call qword ptr [rax]
0x000000000016e50d : jne 0x16e50c ; call qword ptr [rax]
0x000000000016f441 : jne 0x16f441 ; call rax
0x000000000016f5bd : jne 0x16f5bd ; call rsp
0x000000000016f5b9 : jne 0x16f5bd ; inc dword ptr [rbp + rsi*2 - 4] ; call rsp
0x000000000016f5bc : jne 0x16f5be ; call rsp
0x000000000016f679 : jne 0x16f679 ; jmp qword ptr [rax]
0x000000000016f67d : jne 0x16f681 ; inc eax ; push rdi ; cld ; jmp rax
0x0000000000195521 : jne 0x19551d ; call qword ptr [rdi]
0x0000000000195641 : jne 0x19563d ; call rcx
0x000000000002d2b3 : jne 0x2d2c6 ; add rsp, 0x18 ; ret
0x000000000002d2f3 : jne 0x2d306 ; add rsp, 0x18 ; ret
0x000000000002d5df : jne 0x2d5d1 ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000031471 : jne 0x31417 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000032174 : jne 0x32152 ; ret
0x0000000000033998 : jne 0x339a3 ; ret
0x00000000000346d5 : jne 0x346cf ; mov eax, 1 ; ret
0x0000000000034737 : jne 0x34724 ; xor eax, eax ; ret
0x0000000000034787 : jne 0x34774 ; xor eax, eax ; ret
0x0000000000035583 : jne 0x3558c ; mov rdi, qword ptr [r12] ; call r14
0x0000000000036a7b : jne 0x36a83 ; pop rbx ; ret
0x0000000000003752 : jne 0x3730 ; ret 0x975
0x0000000000038121 : jne 0x38166 ; add rsp, 8 ; ret
0x000000000003aa11 : jne 0x3aa56 ; add rsp, 8 ; ret
0x000000000003d341 : jne 0x3d386 ; add rsp, 8 ; ret
0x00000000000405e2 : jne 0x405bb ; ret
0x0000000000041ae8 : jne 0x41ae6 ; mov rax, rbx ; pop rbx ; ret
0x000000000004290f : jne 0x42904 ; xor eax, eax ; ret
0x0000000000042935 : jne 0x4291f ; mov eax, 1 ; ret
0x00000000000429ef : jne 0x429e4 ; xor eax, eax ; ret
0x0000000000042a15 : jne 0x429ff ; mov eax, 1 ; ret
0x0000000000042cb7 : jne 0x42ca6 ; mov rax, rdx ; ret
0x000000000004332f : jne 0x43326 ; mov rax, rdx ; ret
0x00000000000445c3 : jne 0x445a8 ; lea rax, qword ptr [rbx + 2] ; mov rdx, r8 ; jmp 0x445e9
0x0000000000044a51 : jne 0x44a3d ; mov rax, rsi ; ret
0x0000000000044ad5 : jne 0x44ab5 ; mov rax, rsi ; ret
0x00000000000673a1 : jne 0x673b6 ; mov rax, rbx ; pop rbx ; ret
0x000000000006dfb1 : jne 0x6dfa3 ; ret
0x000000000006f066 : jne 0x6f0c7 ; mov rdi, rsi ; call 0x9b347
0x00000000000702cc : jne 0x702d3 ; pop rbx ; ret
0x0000000000073880 : jne 0x73896 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000753e5 : jne 0x753f2 ; ret
0x0000000000075ed1 : jne 0x75ec3 ; ret
0x00000000000768e9 : jne 0x768f3 ; pop rbx ; ret
0x00000000000769b2 : jne 0x7699d ; pop rbx ; ret
0x00000000000769ec : jne 0x769e5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000077246 : jne 0x7723b ; ret
0x000000000007863f : jne 0x78614 ; mov rdi, rbp ; neg rdi ; call qword ptr [r14]
0x0000000000078657 : jne 0x78687 ; xor edi, edi ; call qword ptr [r14]
0x000000000007fb91 : jne 0x7fb83 ; ret
0x000000000007fbf1 : jne 0x7fc1e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007fc3b : jne 0x7fc33 ; ret
0x00000000000800d2 : jne 0x800e4 ; lea rax, qword ptr [rip + 5] ; ret
0x0000000000081cc3 : jne 0x81cce ; xor rax, rax ; ret
0x0000000000081f5e : jne 0x81f70 ; lea rax, qword ptr [rip + 9] ; ret
0x0000000000083c0e : jne 0x83bd4 ; add rsp, 8 ; ret
0x0000000000083c31 : jne 0x83c46 ; add rsp, 8 ; ret
0x0000000000084dc9 : jne 0x84e25 ; xor rax, rax ; ret
0x0000000000084d89 : jne 0x84e49 ; xor rax, rax ; ret
0x0000000000084e78 : jne 0x84e8b ; lea rax, qword ptr [rip + 0x1f] ; ret
0x00000000000855ae : jne 0x85593 ; ret
0x0000000000085773 : jne 0x8565f ; mov rax, rdi ; ret
0x00000000000856c9 : jne 0x856b5 ; mov rax, rdi ; ret
0x0000000000085c8e : jne 0x85ca0 ; lea rax, qword ptr [rip + 0x79] ; ret
0x0000000000085cf1 : jne 0x85d03 ; lea rax, qword ptr [rip + 6] ; ret
0x0000000000087f7e : jne 0x87f90 ; lea rax, qword ptr [rip + 0x79] ; ret
0x0000000000087fe1 : jne 0x87ff3 ; lea rax, qword ptr [rip + 6] ; ret
0x000000000008a65e : jne 0x8a64c ; xor eax, eax ; ret
0x000000000008a6a3 : jne 0x8a6b6 ; lea rax, qword ptr [rip + 0x5fb4] ; ret
0x000000000008a818 : jne 0x8a6f0 ; ret
0x000000000008a759 : jne 0x8a743 ; ret
0x000000000008bd1b : jne 0x8bd13 ; ret
0x000000000008c926 : jne 0x8c911 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008c9d0 : jne 0x8c9df ; jmp 0x8c999
0x000000000008d1db : jne 0x8d1b0 ; mov rax, rdi ; ret
0x000000000008e945 : jne 0x8e935 ; or byte ptr [rdi], sil ; ret
0x000000000008f706 : jne 0x8f6fb ; ret
0x000000000008f74a : jne 0x8f73b ; ret
0x000000000008f7a4 : jne 0x8f783 ; ret
0x000000000008f84a : jne 0x8f838 ; cmp r8d, ecx ; je 0x8f838 ; ret
0x000000000008f889 : jne 0x8f87c ; xor eax, eax ; ret
0x000000000008f8e2 : jne 0x8f8c4 ; xor eax, eax ; ret
0x000000000008f942 : jne 0x8f935 ; mov qword ptr [rdx], rcx ; ret
0x000000000008fa0b : jne 0x8fa00 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000008fa91 : jne 0x8fa78 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000008fcbd : jne 0x8fd48 ; xor eax, eax ; ret
0x000000000008fcfa : jne 0x8fd74 ; xor eax, eax ; ret
0x0000000000090139 : jne 0x90100 ; nop dword ptr [rax + rax] ; ret
0x0000000000090187 : jne 0x90177 ; mov byte ptr [r9 + 1], 0 ; ret
0x0000000000090224 : jne 0x9021e ; sub rax, 1 ; ret
0x000000000009023e : jne 0x90250 ; ret
0x0000000000090332 : jne 0x9032b ; ret
0x0000000000090369 : jne 0x90353 ; ret
0x000000000009064c : jne 0x90636 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000095dca : jne 0x96686 ; ret
0x000000000009746d : jne 0x97e96 ; ret
0x00000000000999b1 : jne 0x999a2 ; ret
0x0000000000099a61 : jne 0x99a52 ; ret
0x0000000000099bd1 : jne 0x99bc6 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000099d21 : jne 0x99d16 ; sub rax, 1 ; ret
0x000000000009a417 : jne 0x9a40b ; ret
0x000000000009b1e6 : jne 0x9b262 ; ret
0x000000000009b10f : jne 0x9b266 ; ret
0x000000000009b0ee : jne 0x9b268 ; xor eax, eax ; ret
0x000000000009b298 : jne 0x9b2ab ; lea rax, qword ptr [rip + 0xc81f] ; ret
0x000000000009b653 : jne 0x9b61e ; nop dword ptr [rax] ; ret
0x000000000009b696 : jne 0x9b689 ; mov dword ptr [rsi + 4], 0 ; ret
0x000000000009b759 : jne 0x9b745 ; sub eax, r8d ; ret
0x000000000009b7f6 : jne 0x9b7eb ; ret
0x000000000009b828 : jne 0x9b813 ; ret
0x000000000009bb0b : jne 0x9bb66 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009bbe3 : jne 0x9bbb3 ; ret
0x000000000009bbcd : jne 0x9bbc3 ; ret
0x000000000009bca8 : jne 0x9bc9c ; xor eax, eax ; ret
0x000000000009bd18 : jne 0x9bcf9 ; mov rax, rdi ; nop dword ptr [rax] ; ret
0x000000000009be28 : jne 0x9be3b ; lea rax, qword ptr [rip + 0xbbff] ; ret
0x000000000009bec3 : jne 0x9bece ; mov dword ptr [rcx + 8], esi ; ret
0x000000000009bef3 : jne 0x9beeb ; ret
0x000000000009bf8f : jne 0x9bf86 ; sub rax, 4 ; ret
0x000000000009bfae : jne 0x9bfc0 ; ret
0x000000000009d09b : jne 0x9d055 ; mov rax, rdx ; ret
0x000000000009d0ec : jne 0x9d0e3 ; ret
0x000000000009d0eb : jne 0x9d0e4 ; ret
0x000000000009dd31 : jne 0x9dd76 ; add rsp, 8 ; ret
0x00000000000a0371 : jne 0xa03b6 ; add rsp, 8 ; ret
0x00000000000a27f1 : jne 0xa2836 ; add rsp, 8 ; ret
0x00000000000a7ab7 : jne 0xa7a80 ; ret
0x00000000000a7ae4 : jne 0xa7adb ; ret
0x00000000000a963f : jne 0xa9604 ; jmp 0xa9608
0x00000000000abb09 : jne 0xabb21 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000b30d2 : jne 0xb30b6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b42c2 : jne 0xb4273 ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x00000000000b8c60 : jne 0xb8c2e ; ret
0x00000000000b8ca7 : jne 0xb8c32 ; mov eax, 0x7d00 ; ret
0x00000000000b8d6d : jne 0xb8da3 ; ret
0x00000000000b9c20 : jne 0xb9bfb ; xor eax, eax ; ret
0x00000000000b9ee8 : jne 0xb9ecc ; ret
0x00000000000b9ef8 : jne 0xb9ee5 ; mov eax, 1 ; ret
0x00000000000c04b9 : jne 0xc0498 ; mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000c0613 : jne 0xc060e ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000000c087c : jne 0xc0883 ; ret
0x00000000000c08d3 : jne 0xc08c9 ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x00000000000c096a : jne 0xc0958 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c1e05 : jne 0xc1dd5 ; mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000c20ba : jne 0xc20c3 ; pop rbx ; ret
0x00000000000c32a2 : jne 0xc3239 ; mov r12d, 1 ; jmp 0xc3277
0x00000000000c556d : jne 0xc54b5 ; pop rbx ; ret
0x00000000000c556c : jne 0xc54b6 ; pop rbx ; ret
0x00000000000c5522 : jne 0xc5521 ; xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xc54b7 ; pop rbx ; ret
0x00000000000c763a : jne 0xc7624 ; ret
0x00000000000d49df : jne 0xd49d5 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000d4a1f : jne 0xd4a2b ; ret
0x00000000000d50db : jne 0xd50c8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000db97f : jne 0xdba09 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000e1af6 : jne 0xe1b07 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e1c06 : jne 0xe1be8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e1c67 : jne 0xe1c48 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e27d8 : jne 0xe2799 ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000000e2b29 : jne 0xe2b18 ; mov byte ptr [rcx - 1], 0 ; ret
0x00000000000e55d8 : jne 0xe55c0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e71f7 : jne 0xe71ee ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000ef937 : jne 0xef923 ; ret
0x00000000000f2bae : jne 0xf2be7 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f2de0 : jne 0xf2dd0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f42ed : jne 0xf42e6 ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000f4365 : jne 0xf4379 ; cmp qword ptr [rdi], 0 ; je 0xf4381 ; ret
0x00000000000f43d8 : jne 0xf43e7 ; mov eax, 1 ; ret
0x00000000000f4408 : jne 0xf4414 ; xor eax, eax ; ret
0x00000000000f4438 : jne 0xf4444 ; xor eax, eax ; ret
0x00000000000f4468 : jne 0xf4474 ; xor eax, eax ; ret
0x00000000000f4498 : jne 0xf44a4 ; xor eax, eax ; ret
0x00000000000f44c8 : jne 0xf44d4 ; xor eax, eax ; ret
0x00000000000f44f8 : jne 0xf4504 ; xor eax, eax ; ret
0x00000000000f4528 : jne 0xf4534 ; xor eax, eax ; ret
0x00000000000f4558 : jne 0xf4564 ; xor eax, eax ; ret
0x00000000000f4588 : jne 0xf4594 ; xor eax, eax ; ret
0x00000000000f45b8 : jne 0xf45c4 ; xor eax, eax ; ret
0x00000000000f45e8 : jne 0xf45f4 ; xor eax, eax ; ret
0x00000000000f4618 : jne 0xf4624 ; xor eax, eax ; ret
0x00000000000f4648 : jne 0xf4654 ; xor eax, eax ; ret
0x00000000000f4678 : jne 0xf4684 ; xor eax, eax ; ret
0x00000000000f46a8 : jne 0xf46b4 ; xor eax, eax ; ret
0x00000000000f46d8 : jne 0xf46e4 ; xor eax, eax ; ret
0x00000000000f4708 : jne 0xf4714 ; xor eax, eax ; ret
0x00000000000f4738 : jne 0xf4744 ; xor eax, eax ; ret
0x00000000000f4768 : jne 0xf4774 ; xor eax, eax ; ret
0x00000000000f4798 : jne 0xf47a4 ; xor eax, eax ; ret
0x00000000000f47f8 : jne 0xf4804 ; xor eax, eax ; ret
0x00000000000f4828 : jne 0xf4834 ; xor eax, eax ; ret
0x00000000000f4858 : jne 0xf4864 ; xor eax, eax ; ret
0x00000000000f4888 : jne 0xf4894 ; xor eax, eax ; ret
0x00000000000f48b8 : jne 0xf48c4 ; xor eax, eax ; ret
0x00000000000f48e8 : jne 0xf48f4 ; xor eax, eax ; ret
0x00000000000f4918 : jne 0xf4924 ; xor eax, eax ; ret
0x00000000000f4948 : jne 0xf4954 ; xor eax, eax ; ret
0x00000000000f4978 : jne 0xf4984 ; xor eax, eax ; ret
0x00000000000f49c1 : jne 0xf49b9 ; pop rdx ; pop r10 ; ret
0x00000000000f4ab5 : jne 0xf4ac3 ; ret
0x00000000000f4cc4 : jne 0xf4ca3 ; ret
0x00000000000f4cff : jne 0xf4cf3 ; leave ; ret
0x00000000000f4e1d : jne 0xf4de3 ; leave ; ret
0x00000000000f52eb : jne 0xf52c6 ; lea rdi, qword ptr [rip - 0x174] ; call rax
0x00000000000f5c2d : jne 0xf5c1d ; mov rax, rdi ; ret
0x00000000000f5dfd : jne 0xf5ded ; mov rax, r10 ; ret
0x00000000000f5ec4 : jne 0xf5e6e ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000000f724a : jne 0xf7260 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f750f : jne 0xf74c4 ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000000fb512 : jne 0xfb526 ; jmp 0xfb540
0x00000000000ff939 : jne 0xff930 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014866e : jno 0x14867d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015fc6d : jno 0x15fc63 ; call rax
0x000000000016e501 : jno 0x16e504 ; call qword ptr [rax + 0x10fffb72]
0x000000000016ffa9 : jno 0x16ffb1 ; add byte ptr [rax - 0x31], ah ; jmp 0x16ffb5
0x000000000016ffe9 : jno 0x16fff1 ; add byte ptr [rax - 0x30], al ; jmp 0x16fff5
0x00000000001751c5 : jno 0x1751c4 ; jmp qword ptr [rax]
0x000000000017a7fe : jno 0x17a80c ; ret
0x000000000017a7fe : jno 0x17a812 ; ret
0x000000000017d6d1 : jno 0x17d6c4 ; jmp rax
0x00000000000021c7 : jno 0x2214 ; ret 0x1dd4
0x0000000000033265 : jno 0x3327e ; add byte ptr [rdi], cl ; push rsp ; ret
0x0000000000003907 : jno 0x3951 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000043134 : jno 0x43186 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000006d611 : jno 0x6d61f ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000009bec1 : jno 0x9becf ; jne 0x9bed0 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000009bec6 : jno 0x9bed3 ; ret
0x00000000000c3592 : jno 0xc3599 ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ef8a6 : jno 0xef8ae ; cmovne eax, edx ; ret
0x00000000000ef8a6 : jno 0xef8af ; cmovne eax, edx ; ret
0x00000000000ef8a5 : jno 0xef8b0 ; cmovne eax, edx ; ret
0x00000000000f4e53 : jno 0xf4e25 ; sub al, byte ptr [rax] ; test rax, rax ; je 0xf4e69 ; ret
0x0000000000110cc3 : jnp 0x110d2f ; call rax
0x00000000001116e3 : jnp 0x11173f ; call rax
0x000000000015be65 : jnp 0x15be22 ; ret
0x00000000001601e1 : jnp 0x1601d8 ; call rax
0x0000000000160209 : jnp 0x160200 ; call rax
0x0000000000160205 : jnp 0x160200 ; inc eax ; jnp 0x160204 ; call rax
0x000000000016020d : jnp 0x160204 ; jmp rax
0x0000000000160215 : jnp 0x160210 ; inc dword ptr [rax] ; jl 0x160214 ; call qword ptr [rax]
0x000000000016e51d : jnp 0x16e51c ; call qword ptr [rax]
0x000000000016f4cd : jnp 0x16f4cd ; call qword ptr [rdx]
0x000000000016f4d1 : jnp 0x16f4d5 ; call qword ptr [rdx + 0x12fffc7a]
0x000000000016f60d : jnp 0x16f60d ; jmp rax
0x000000000016f64d : jnp 0x16f64d ; call rax
0x00000000001701c9 : jnp 0x1701d1 ; add byte ptr [rax], ah ; in al, dx ; call qword ptr [rax]
0x0000000000170645 : jnp 0x170635 ; jmp qword ptr [rax]
0x0000000000170644 : jnp 0x170636 ; jmp qword ptr [rax]
0x000000000017cf75 : jnp 0x17cf7d ; add byte ptr [rax], ch ; pop rdi ; out dx, eax ; jmp qword ptr [rdi]
0x000000000017d8c1 : jnp 0x17d8b4 ; jmp qword ptr [rsi]
0x0000000000195879 : jnp 0x195875 ; jmp qword ptr [rsi]
0x000000000002156f : jnp 0x2158b ; call rax
0x000000000003699b : jnp 0x369ae ; mov qword ptr [rax + 0x40], rdx ; call qword ptr [rbx]
0x0000000000041ae5 : jnp 0x41af1 ; add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x00000000000e0308 : jnp 0x481a275b ; add esp, 0x18 ; ret
0x00000000000b9c11 : jnp 0xb9c25 ; xchg eax, esp ; ret 0xb60f
0x00000000000c20b7 : jnp 0xc2122 ; add byte ptr [rbp + 4], dh ; pop rbx ; ret
0x000000000011acc3 : jns 0x11acd6 ; sub byte ptr [rax], al ; jmp rax
0x000000000015af6e : jns 0x15af04 ; ret 0xf869
0x000000000015af6d : jns 0x15af05 ; ret 0xf869
0x000000000015d37e : jns 0x15d3d5 ; jmp 0x15d316
0x0000000000160189 : jns 0x160180 ; jmp qword ptr [rax]
0x00000000001601a1 : jns 0x160198 ; call rax
0x000000000016019d : jns 0x160198 ; inc eax ; jns 0x16019c ; call rax
0x00000000001601a9 : jns 0x1601a0 ; call qword ptr [rax]
0x00000000001601a5 : jns 0x1601a0 ; push rax ; jns 0x1601a4 ; call qword ptr [rax]
0x000000000016f4dd : jns 0x16f4dd ; call qword ptr [rdx]
0x000000000016f4e1 : jns 0x16f4e5 ; call qword ptr [rdx + 0x12fffc78]
0x000000000016f61d : jns 0x16f61d ; jmp rax
0x000000000016f65d : jns 0x16f65d ; call rax
0x0000000000170141 : jns 0x170149 ; add byte ptr [rax + 0x24], al ; in al, dx ; jmp rax
0x000000000017137d : jns 0x171371 ; jmp rax
0x00000000001721ad : jns 0x1721a5 ; call rax
0x0000000000172979 : jns 0x172982 ; add al, dl ; mov ah, -0xa ; jmp qword ptr [rax]
0x0000000000173c45 : jns 0x173c41 ; jmp qword ptr [rax]
0x0000000000001b29 : jns 0x1b34 ; ret
0x0000000000002bc3 : jns 0x2b91 ; clc ; ret
0x0000000000003233 : jns 0x320e ; ret 0x5a51
0x00000000000038a3 : jns 0x38f6 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000085c93 : jns 0x85c99 ; add byte ptr [rax], al ; ret
0x0000000000087f83 : jns 0x87f89 ; add byte ptr [rax], al ; ret
0x00000000000c23db : jns 0xc23c7 ; mov eax, 1 ; ret
0x00000000000e17a4 : jns 0xe17b2 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000112ed0 : jns 0xffffffffc49477b7 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000099496 : jns 0xffffffffed3997fc ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000994f8 : jns 0xffffffffed399c5e ; mov byte ptr [rdi + 0xb], ch ; ret
0x0000000000099518 : jns 0xffffffffed399d7e ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000010ec13 : jo 0x10ec79 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010f553 : jo 0x10f5b9 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010ff97 : jo 0x10ffd7 ; mov rdi, rcx ; jmp r8
0x000000000015bfe4 : jo 0x15c05e ; mov ebp, 0xfb67d10d ; ret
0x000000000015fcac : jo 0x15fc4b ; inc eax ; cwde ; call qword ptr [rax]
0x000000000015fdec : jo 0x15fd90 ; cld ; jmp rax
0x000000000015fe7c : jo 0x15fe4c ; std ; inc dword ptr [rax] ; push rdi ; call qword ptr [rax]
0x0000000000160130 : jo 0x1601af ; jmp qword ptr [rax - 0x2f000c8a]
0x00000000001612ac : jo 0x16132e ; cmc ; jmp rax
0x000000000016e3e0 : jo 0x16e3ed ; sti ; inc dword ptr [rax + 5] ; sti ; call qword ptr [rax]
0x000000000016e440 : jo 0x16e461 ; sti ; call qword ptr [rax]
0x000000000016e460 : jo 0x16e48e ; sti ; call qword ptr [rax]
0x000000000016e4cc : jo 0x16e533 ; sti ; inc eax ; pop rdi ; sti ; call qword ptr [rax]
0x000000000016e4fc : jo 0x16e55a ; sti ; call qword ptr [rax]
0x000000000016e860 : jo 0x16e83e ; sti ; push qword ptr [rax] ; xlatb ; sti ; call qword ptr [rax]
0x000000000016e8c4 : jo 0x16e8a3 ; sti ; inc dword ptr [rax - 0x28] ; sti ; jmp qword ptr [rax]
0x000000000016e8e0 : jo 0x16e8b9 ; sti ; jmp qword ptr [rax]
0x000000000016e964 : jo 0x16e937 ; sti ; inc eax ; retf ; sti ; call qword ptr [rax]
0x000000000016eadc : jo 0x16ead4 ; sti ; inc eax ; lock sti ; call qword ptr [rax]
0x000000000016eb30 : jo 0x16eb2f ; sti ; inc eax ; idiv ebx ; call qword ptr [rax]
0x000000000016eca8 : jo 0x16eccc ; cld ; inc eax ; sbb al, -4 ; call qword ptr [rax]
0x000000000016ef70 : jo 0x16efc6 ; cld ; jmp rax
0x000000000016f174 : jo 0x16f1c9 ; cld ; jmp rax
0x000000000016f43c : jo 0x16f4c0 ; cld ; call qword ptr [rax]
0x000000000016f948 : jo 0x16f8ef ; cld ; jmp rax
0x000000000016fb34 : jo 0x16fad5 ; cld ; jmp rax
0x000000000016ff04 : jo 0x16fed2 ; jmp 0x16ff0a
0x00000000001700f4 : jo 0x170104 ; in al, dx ; call qword ptr [rax]
0x00000000001705ec : jo 0x170669 ; in al, dx ; call rax
0x000000000017088c : jo 0x1708d6 ; in eax, dx ; jmp qword ptr [rax]
0x0000000000170c8c : jo 0x170c62 ; out dx, eax ; call rax
0x00000000001712c5 : jo 0x1712b9 ; call rax
0x0000000000171948 : jo 0x17195b ; add dword ptr [rax], eax ; push rax ; sal cl, cl ; call rax
0x0000000000171c84 : jo 0x171c6a ; call rax
0x0000000000171e04 : jo 0x171d8d ; call rax
0x00000000001720a4 : jo 0x1720f7 ; hlt ; call rax
0x000000000017220c : jo 0x172199 ; hlt ; call qword ptr [rax]
0x0000000000173ca4 : jo 0x173c2d ; clc ; jmp rax
0x0000000000173e8c : jo 0x173e52 ; clc ; call rax
0x0000000000173ed4 : jo 0x173ea5 ; clc ; jmp qword ptr [rax]
0x0000000000173f98 : jo 0x173f90 ; add dword ptr [rax], eax ; jo 0x173f98 ; clc ; call rax
0x0000000000173f9c : jo 0x173f94 ; clc ; call rax
0x0000000000174288 : jo 0x174294 ; add al, byte ptr [rax] ; mov al, 0x6f ; stc ; call rax
0x000000000017429d : jo 0x17429a ; jmp qword ptr [rax]
0x00000000001743e8 : jo 0x174401 ; add al, byte ptr [rax] ; nop ; cwde ; stc ; jmp rax
0x00000000001745ec : jo 0x1745ba ; stc ; call qword ptr [rax]
0x00000000001746ec : jo 0x1746e4 ; stc ; jmp qword ptr [rax]
0x0000000000174784 : jo 0x174788 ; stc ; call rax
0x0000000000176e50 : jo 0x176eb3 ; jmp 0x176e56
0x00000000001796d0 : jo 0x17965c ; in al, dx ; call rdx
0x000000000017bfe7 : jo 0x17bff5 ; ret
0x000000000017dd30 : jo 0x17dcbe ; out dx, eax ; call qword ptr [rcx]
0x00000000001811c0 : jo 0x181153 ; int1 ; call qword ptr [rsi]
0x0000000000181590 : jo 0x18153e ; int1 ; call qword ptr [rsi]
0x00000000001884e0 : jo 0x188465 ; cmc ; jmp qword ptr [rcx]
0x0000000000188980 : jo 0x18890e ; cmc ; jmp qword ptr [rcx]
0x0000000000188a90 : jo 0x188a21 ; cmc ; jmp qword ptr [rcx]
0x0000000000188d10 : jo 0x188ca4 ; cmc ; jmp qword ptr [rsi]
0x0000000000189410 : jo 0x1893c3 ; cmc ; jmp qword ptr [rcx]
0x000000000018a540 : jo 0x18a52b ; cmc ; jmp qword ptr [rcx]
0x000000000018c49d : jo 0x18c4a6 ; add al, al ; jg 0x18c49f ; jmp qword ptr [rsi]
0x000000000018c49c : jo 0x18c4a7 ; add al, al ; jg 0x18c4a0 ; jmp qword ptr [rsi]
0x000000000018c4b5 : jo 0x18c4be ; add al, bl ; jg 0x18c4b7 ; jmp qword ptr [rsi]
0x000000000018c4cd : jo 0x18c4d6 ; add al, dh ; jg 0x18c4cf ; jmp qword ptr [rsi]
0x0000000000190139 : jo 0x190134 ; jmp qword ptr [rcx]
0x0000000000193020 : jo 0x193025 ; clc ; call qword ptr [rcx]
0x0000000000195690 : jo 0x19570c ; clc ; call rdi
0x0000000000024c9f : jo 0x24cf0 ; mov edi, dword ptr [rsp + 0x68] ; call r15
0x000000000002508b : jo 0x250db ; mov edi, dword ptr [rsp + 0x68] ; call rbx
0x0000000000025e77 : jo 0x25ec7 ; mov edi, dword ptr [rsp + 0x60] ; call qword ptr [rbx]
0x0000000000027624 : jo 0x27675 ; mov edi, dword ptr [rsp + 0x68] ; call r15
0x00000000000279fe : jo 0x27a4e ; mov edi, dword ptr [rsp + 0x68] ; call rbx
0x0000000000028584 : jo 0x285d5 ; mov edi, dword ptr [rsp + 0x68] ; call r15
0x000000000002896e : jo 0x289be ; mov edi, dword ptr [rsp + 0x68] ; call rbx
0x0000000000034ccc : jo 0x34d00 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000003fcd6 : jo 0x3fce1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004130c : jo 0x41311 ; ret 0x5e9
0x000000000005de8f : jo 0x5de97 ; jmp 0x5a0d0
0x000000000006e02a : jo 0x6e042 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000007156a : jo 0x714f7 ; sar byte ptr [rax + 9], -0xd ; ret
0x0000000000071569 : jo 0x714f8 ; sar byte ptr [rax + 9], -0xd ; ret
0x0000000000074bd4 : jo 0x74c25 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007e876 : jo 0x7e882 ; ret
0x000000000009c2cd : jo 0x9c333 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009c4d1 : jo 0x9c537 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009c728 : jo 0x9c78d ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000009e340 : jo 0x9e354 ; xchg eax, esp ; ret
0x00000000000a093f : jo 0xa0953 ; xchg eax, esp ; ret
0x00000000000a2dd0 : jo 0xa2de4 ; xchg eax, esp ; ret
0x00000000000c267e : jo 0xc26a4 ; xor eax, eax ; ret
0x00000000000c8e63 : jo 0xc8dea ; ret 0x8901
0x000000000000d348 : jo 0xd3a9 ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e02c6 : jo 0xe02eb ; ret
0x00000000000abe0e : jo 0xffffffff9419ef13 ; ret 0xf980
0x000000000010bbdd : jp 0x10bc3d ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000010e4f2 : jp 0x10e4fe ; ret
0x0000000000110d52 : jp 0x110d5e ; ret
0x0000000000110d6a : jp 0x110d76 ; ret
0x00000000001115a2 : jp 0x1115ae ; ret
0x00000000001115ba : jp 0x1115c6 ; ret
0x00000000001115ea : jp 0x1115f6 ; ret
0x0000000000126e26 : jp 0x126e1a ; ret
0x0000000000126e89 : jp 0x126e7d ; ret
0x0000000000126e1f : jp 0x126ea9 ; jb 0x126e0c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000126e24 : jp 0x126ea9 ; jp 0x126e1c ; ret
0x0000000000127316 : jp 0x12730a ; ret
0x0000000000127379 : jp 0x12736d ; ret
0x000000000012730f : jp 0x127399 ; jb 0x1272fc ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000127314 : jp 0x127399 ; jp 0x12730c ; ret
0x00000000001276b9 : jp 0x1276ad ; ret
0x0000000000127719 : jp 0x12770d ; ret
0x00000000001276b2 : jp 0x12773c ; jb 0x12769f ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00000000001276b7 : jp 0x12773c ; jp 0x1276af ; ret
0x000000000015fc7d : jp 0x15fc73 ; call qword ptr [rax]
0x00000000001601c1 : jp 0x1601b8 ; call rax
0x00000000001601c9 : jp 0x1601c0 ; call qword ptr [rax]
0x00000000001601c5 : jp 0x1601c0 ; push rax ; jp 0x1601c4 ; call qword ptr [rax]
0x000000000016e519 : jp 0x16e51c ; call qword ptr [rax + 0x10fffb7b]
0x000000000016f3fc : jp 0x16f480 ; cld ; jmp qword ptr [rax]
0x000000000016f4d5 : jp 0x16f4d5 ; call qword ptr [rdx]
0x000000000016f4d9 : jp 0x16f4dd ; call qword ptr [rdx + 0x12fffc79]
0x000000000016f615 : jp 0x16f615 ; jmp rax
0x000000000016f655 : jp 0x16f655 ; call rax
0x0000000000170179 : jp 0x170181 ; add byte ptr [rax], ah ; xor ch, ah ; call qword ptr [rax]
0x0000000000177211 : jp 0x177200 ; call qword ptr [rax]
0x0000000000177241 : jp 0x177230 ; call qword ptr [rsi]
0x0000000000177259 : jp 0x177248 ; jmp rdi
0x00000000001956f9 : jp 0x1956f5 ; call qword ptr [rdi]
0x00000000001956f8 : jp 0x1956f6 ; call qword ptr [rdi]
0x0000000000195779 : jp 0x195775 ; call qword ptr [rax]
0x0000000000002545 : jp 0x2529 ; jmp qword ptr [rbx]
0x0000000000002544 : jp 0x252a ; jmp qword ptr [rbx]
0x000000000002bc58 : jp 0x2bc9b ; jae 0x2bc78 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000003906 : jp 0x3980 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000085655 : jp 0x8564f ; ret 0x7401
0x00000000000857c4 : jp 0x85800 ; add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00000000000ea342 : jp 0xea378 ; sub eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000f3275 : jp 0xf32cc ; mov rsi, rdx ; call rax
0x00000000001006b4 : jrcxz 0x1006e4 ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000114fbc : jrcxz 0x115005 ; add edi, 1 ; call r14
0x0000000000116cf8 : jrcxz 0x116cc8 ; and al, 0xb ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001174b8 : jrcxz 0x117488 ; and al, 0xb ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013400a : jrcxz 0x134005 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000134009 : jrcxz 0x134006 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136ada : jrcxz 0x136ad5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136ad9 : jrcxz 0x136ad6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001395fa : jrcxz 0x1395f5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001395f9 : jrcxz 0x1395f6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015adc5 : jrcxz 0x15ae1f ; ret
0x000000000015e2f9 : jrcxz 0x15e2fc ; jmp qword ptr [rdi]
0x000000000015e379 : jrcxz 0x15e37c ; jmp qword ptr [rdi]
0x000000000015e3f9 : jrcxz 0x15e3fc ; jmp qword ptr [rdi]
0x000000000015e475 : jrcxz 0x15e47c ; call qword ptr [rdi + 0x27ffffe3]
0x000000000015e479 : jrcxz 0x15e47c ; jmp qword ptr [rdi]
0x000000000015e4f5 : jrcxz 0x15e4fc ; call qword ptr [rdi + 0x27ffffe3]
0x000000000015e4f9 : jrcxz 0x15e4fc ; jmp qword ptr [rdi]
0x000000000015e575 : jrcxz 0x15e57c ; call qword ptr [rdi + 0x27ffffe3]
0x000000000015e579 : jrcxz 0x15e57c ; jmp qword ptr [rdi]
0x000000000015e5b1 : jrcxz 0x15e5b4 ; call rdi
0x000000000015e5ad : jrcxz 0x15e5b4 ; push qword ptr [rax] ; jrcxz 0x15e5b8 ; call rdi
0x000000000016e7dd : jrcxz 0x16e7dc ; call qword ptr [rax]
0x000000000016e81d : jrcxz 0x16e81c ; call rax
0x000000000016e81c : jrcxz 0x16e81d ; call rax
0x000000000016eac1 : jrcxz 0x16eac4 ; call qword ptr [rax - 0x1f000419]
0x0000000000173e19 : jrcxz 0x173e22 ; add al, ah ; lodsd eax, dword ptr [rsi] ; clc ; call rax
0x0000000000175ec1 : jrcxz 0x175eaf ; jmp rdi
0x00000000001787f9 : jrcxz 0x1787e8 ; jmp qword ptr [rsi]
0x0000000000178841 : jrcxz 0x178830 ; jmp qword ptr [rsi]
0x0000000000183775 : jrcxz 0x18377d ; add byte ptr [rax], cl ; adc ebx, esi ; call rdx
0x000000000018a271 : jrcxz 0x18a26a ; jmp qword ptr [rcx]
0x000000000018a289 : jrcxz 0x18a282 ; jmp qword ptr [rcx]
0x000000000018a2d1 : jrcxz 0x18a2ca ; jmp qword ptr [rcx]
0x000000000018a2e9 : jrcxz 0x18a2e2 ; jmp qword ptr [rcx]
0x000000000018a301 : jrcxz 0x18a2fa ; jmp qword ptr [rcx]
0x000000000018a319 : jrcxz 0x18a312 ; jmp qword ptr [rcx]
0x0000000000192831 : jrcxz 0x19282c ; jmp qword ptr [rax]
0x0000000000192881 : jrcxz 0x19287c ; jmp qword ptr [rax]
0x0000000000192911 : jrcxz 0x19290c ; call qword ptr [rbx]
0x000000000001ccc1 : jrcxz 0x1ccd1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x39
0x000000000001ce89 : jrcxz 0x1ce99 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x39
0x0000000000020f9c : jrcxz 0x20fec ; mov edi, dword ptr [rdi + 0x18] ; call rdx
0x000000000002156c : jrcxz 0x215bb ; mov edi, dword ptr [rbx + 0x18] ; call rax
0x000000000007e24c : jrcxz 0x7e252 ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x00000000000c23dc : jrcxz 0xc239c ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000c5558 : jrcxz 0xc5567 ; je 0xc54ea ; pop rbx ; ret
0x00000000000c5d0e : jrcxz 0xc5d1c ; mov r10d, eax ; jmp 0xc5d25
0x00000000000d50dc : jrcxz 0xd512d ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f4a13 : jrcxz 0xf49d8 ; cmp r11d, 0xa ; je 0xf4a24 ; ret
0x000000000011aa93 : js 0x11aaa8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016017d : js 0x160174 ; call rax
0x0000000000160179 : js 0x160174 ; inc eax ; js 0x160178 ; call rax
0x0000000000160181 : js 0x160178 ; jmp rax
0x0000000000160185 : js 0x160180 ; inc dword ptr [rax] ; jns 0x160184 ; jmp qword ptr [rax]
0x000000000016087c : js 0x160847 ; hlt ; jmp rsi
0x000000000016e515 : js 0x16e514 ; call qword ptr [rax]
0x000000000016f4e5 : js 0x16f4e5 ; call qword ptr [rdx]
0x000000000016f4e9 : js 0x16f4ed ; call qword ptr [rdx + 0x12fffc77]
0x000000000016f625 : js 0x16f625 ; jmp rax
0x000000000016f665 : js 0x16f665 ; call rax
0x000000000016fd38 : js 0x16fd9d ; add byte ptr [rax], al ; adc byte ptr [rdx], bl ; jmp 0x16fd46
0x000000000016fe10 : js 0x16fe7f ; add byte ptr [rax], al ; lock xchg bl, ch ; jmp qword ptr [rax]
0x0000000000170078 : js 0x1700f4 ; add byte ptr [rax], al ; adc dh, -0x15 ; jmp rax
0x00000000001705ed : js 0x1705dd ; call rax
0x0000000000170a45 : js 0x170a38 ; jmp qword ptr [rax]
0x0000000000171325 : js 0x171319 ; call rax
0x0000000000172939 : js 0x172942 ; add byte ptr [rax], dl ; mov bl, -0xa ; jmp qword ptr [rax]
0x0000000000174380 : js 0x174396 ; add al, byte ptr [rax] ; push rax ; xchg eax, edx ; stc ; jmp rax
0x0000000000174698 : js 0x1746c3 ; add al, byte ptr [rax] ; mov al, -0x19 ; stc ; jmp rax
0x0000000000174d5d : js 0x174d5b ; jmp rax
0x0000000000176668 : js 0x1766c7 ; std ; jmp qword ptr [rdi]
0x0000000000176e68 : js 0x176ecb ; jmp 0x176e6e
0x0000000000177c48 : js 0x177c0d ; jmp 0x177c4c
0x0000000000186468 : js 0x1863ff ; hlt ; jmp qword ptr [rdi]
0x00000000001866b8 : js 0x186668 ; hlt ; jmp qword ptr [rcx]
0x0000000000187518 : js 0x187558 ; cmc ; jmp qword ptr [rcx]
0x0000000000187838 : js 0x18787f ; cmc ; jmp qword ptr [rcx]
0x0000000000187b98 : js 0x187bec ; cmc ; jmp qword ptr [rcx]
0x0000000000188108 : js 0x188180 ; cmc ; jmp rbx
0x000000000018a288 : js 0x18a270 ; cmc ; jmp qword ptr [rcx]
0x000000000018a5e8 : js 0x18a5d4 ; cmc ; jmp qword ptr [rcx]
0x0000000000193038 : js 0x19303d ; clc ; call qword ptr [rbx]
0x0000000000194458 : js 0x19447d ; clc ; call qword ptr [rdx]
0x00000000000206ad : js 0x206b8 ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x000000000002a6fd : js 0x2a708 ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x000000000002c878 : js 0x2c88e ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000002ca01 : js 0x2c98d ; loopne 0x2ca14 ; movzx eax, ax ; ret
0x000000000002ca41 : js 0x2c9cd ; loopne 0x2ca4e ; movzx eax, ax ; ret
0x000000000002cae1 : js 0x2ca6d ; loopne 0x2caf0 ; movzx eax, ax ; ret
0x000000000002cbc1 : js 0x2cb4a ; loopne 0x2cbca ; ret
0x000000000002cc3a : js 0x2cbc3 ; loopne 0x2cc43 ; ret
0x000000000002cc4a : js 0x2cbd6 ; loopne 0x2cc5d ; movzx eax, ax ; ret
0x000000000002cc8a : js 0x2cc16 ; loopne 0x2cc97 ; movzx eax, ax ; ret
0x000000000002cd2a : js 0x2ccb6 ; loopne 0x2cd39 ; movzx eax, ax ; ret
0x0000000000002f65 : js 0x2f1b ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000003071f : js 0x30738 ; add cl, ch ; ret 0xffec
0x000000000003071e : js 0x30739 ; add cl, ch ; ret 0xffec
0x0000000000034844 : js 0x34857 ; cli ; je 0x34859 ; add rsp, 0x10 ; ret
0x0000000000034936 : js 0x34949 ; cli ; je 0x34949 ; add rsp, 0x10 ; ret
0x000000000003c6ca : js 0x3c6bc ; shl bh, -1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000006d724 : js 0x6d6b5 ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x6d6cd
0x000000000007156d : js 0x7157b ; ret
0x000000000007d518 : js 0x7d523 ; ret
0x00000000000854a4 : js 0x85512 ; or al, 0 ; ret
0x00000000000b8ef7 : js 0xb8f03 ; ret
0x00000000000bfbb5 : js 0xbfb3c ; ret 0x4801
0x00000000000c8a4a : js 0xc8a5d ; add al, 0x75 ; mov cl, -0x75 ; pop rax ; or bh, dh ; ret
0x00000000000cf483 : js 0xcf49b ; sub eax, 0x36740000 ; xor eax, eax ; ret
0x00000000000da22c : js 0xda27e ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000daaa9 : js 0xdaafb ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000e0a08 : js 0xe0a39 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e2a82 : js 0xe2a95 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000eafe0 : js 0xeaf6c ; loopne 0xeaff3 ; movzx eax, ax ; ret
0x00000000000eb120 : js 0xeb0a9 ; loopne 0xeb129 ; ret
0x00000000000eb1c0 : js 0xeb14c ; loopne 0xeb1cd ; movzx eax, ax ; ret
0x00000000000eb4d0 : js 0xeb45c ; loopne 0xeb4df ; movzx eax, ax ; ret
0x00000000000eb9d9 : js 0xeb965 ; loopne 0xeb9ec ; movzx eax, ax ; ret
0x00000000000ebaf9 : js 0xeba82 ; loopne 0xebb02 ; ret
0x00000000000ebb79 : js 0xebb05 ; loopne 0xebb86 ; movzx eax, ax ; ret
0x00000000000ebe39 : js 0xebdc5 ; loopne 0xebe48 ; movzx eax, ax ; ret
0x00000000000f42eb : js 0xf42fd ; jne 0xf42e8 ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000f8ba4 : js 0xf8bb9 ; mov eax, edi ; and eax, 0xffffff ; ret
0x00000000000f8c24 : js 0xf8c37 ; mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000099438 : js 0xffffffffed39969e ; mov byte ptr [rdi + 3], ch ; ret
0x0000000000099466 : js 0xffffffffed3998cc ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000994b8 : js 0xffffffffed399d1e ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000c5d03 : lahf ; add al, -0x77 ; ret
0x0000000000170889 : lahf ; add byte ptr [rax], al ; jo 0x1708d9 ; in eax, dx ; jmp qword ptr [rax]
0x000000000018f3b5 : lahf ; add dword ptr [rax], eax ; call 0x1818eafa
0x000000000015fded : lahf ; cld ; jmp rax
0x0000000000174ddd : lahf ; cli ; call qword ptr [rax]
0x0000000000189051 : lahf ; cmc ; jmp qword ptr [rcx]
0x000000000015d4a3 : lahf ; mov dh, -0x39 ; ret 0xe71f
0x00000000000f5ec5 : lahf ; mov rax, rdi ; add rsp, 8 ; ret
0x0000000000124a7d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d8727 : lahf ; or byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006f32e : lahf ; ret 0x3841
0x000000000004f254 : lahf ; ret 0x67e
0x00000000000c0b5a : lahf ; ret 0x7fe9
0x000000000004d461 : lahf ; ret 0x8341
0x00000000000e5373 : lahf ; ret 0x8545
0x000000000015acfd : lahf ; ret 0x871e
0x000000000004f2ba : lahf ; ret 0x8e0f
0x00000000000e4533 : lahf ; ret 0xe883
0x000000000009a169 : lahf ; ret 0xea81
0x000000000004d271 : lahf ; ret 0xf641
0x0000000000057260 : lahf ; rol byte ptr [rdi - 0x78], 0x14 ; and dword ptr [rcx + 0x29], eax ; ret
0x000000000016e585 : lahf ; std ; call rcx
0x000000000016e575 : lahf ; std ; jmp qword ptr [rax]
0x000000000016e565 : lahf ; std ; jmp rdx
0x000000000012510d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001743c1 : lar eax, word ptr [rax] ; mov al, -0x6c ; stc ; jmp rax
0x00000000000db692 : lcall 0x85fffff8, -0x7640 ; ret
0x0000000000171a7f : lcall ptr [rax + 0x13] ; add dword ptr [rax], eax ; add byte ptr [rsi - 0xe], dl ; call rax
0x0000000000170e7f : lcall ptr [rax + 0x200000c9] ; or al, 0xfffffffffffffff0 ; call rax
0x000000000017458f : lcall ptr [rax + 0x2000021b] ; ret
0x00000000000e49f7 : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000017253f : lcall ptr [rax + 0x6000015c] ; pop rcx ; cmc ; call rax
0x00000000001752e7 : lcall ptr [rax + 0x7000005c] ; ret
0x0000000000170c87 : lcall ptr [rax + 0x700000bc] ; shr edi, 1 ; call rax
0x0000000000174d57 : lcall ptr [rax - 0x1ffffdb6] ; js 0x174d61 ; jmp rax
0x000000000016fdd7 : lcall ptr [rax - 0x6fffff9e] ; jmp 0x16fde7
0x0000000000174007 : lcall ptr [rax - 0xffffe0e] ; add ecx, edi ; jmp rax
0x00000000001736a7 : lcall ptr [rax] ; mov ch, 1 ; add al, ah ; ret
0x000000000016e7bf : lcall ptr [rax] ; salc ; sti ; jmp rax
0x00000000001037ad : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fd2e5 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x000000000006cf45 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x00000000000c2382 : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000a4ce3 : lcall ptr [rbx + 0x41] ; pop rsi ; ret
0x00000000000b3004 : lcall ptr [rbx + 0x48] ; lea eax, dword ptr [rax + rdx*8] ; ret
0x000000000006f224 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000029529 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000036082 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006c810 : lcall ptr [rbx + 0x5d] ; ret
0x000000000006c2da : lcall ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41] ; pop rsp ; ret
0x00000000001626cf : lcall ptr [rcx + 0x58] ; idiv edi ; adc ebx, dword ptr [rdx - 9] ; call qword ptr [rbx]
0x000000000016156b : lcall ptr [rcx - 0x7a] ; cmc ; call rdx
0x00000000001615bf : lcall ptr [rcx - 0x7a] ; cmc ; jmp rsi
0x000000000016260f : lcall ptr [rcx] ; pop rcx ; idiv edi ; rcr dword ptr [rdx - 9], cl ; call rbx
0x0000000000160493 : lcall ptr [rcx] ; sahf ; call qword ptr [rdx]
0x000000000016efbb : lcall ptr [rdi + rcx*2 + 0x4f2cfffc] ; cld ; call rdx
0x000000000016125b : lcall ptr [rdi] ; adc ebp, esi ; call qword ptr [rax]
0x0000000000161367 : lcall ptr [rdi] ; test esi, ebp ; call qword ptr [rbx]
0x0000000000160e8f : lcall ptr [rsp + rsi*8 - 0xc] ; call rsi
0x0000000000134696 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000074ce6 : lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x000000000006ea3f : lea eax, dword ptr [r8 - 1] ; ret
0x00000000000a7a83 : lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000d4a33 : lea eax, dword ptr [rax + rax*8 + 5] ; ret
0x00000000000a8242 : lea eax, dword ptr [rax + rcx] ; ret
0x0000000000084df4 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x0000000000084e04 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000008fd34 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x0000000000084dd4 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000000b3007 : lea eax, dword ptr [rax + rdx*8] ; ret
0x000000000009d963 : lea eax, dword ptr [rax + rdx] ; pop r14 ; pop r15 ; ret
0x00000000000bd703 : lea eax, dword ptr [rax - 0x76000029] ; ret
0x000000000006ea40 : lea eax, dword ptr [rax - 1] ; ret
0x000000000017e1ed : lea eax, dword ptr [rax] ; add al, ah ; xchg eax, ebx ; out dx, eax ; jmp qword ptr [rax]
0x0000000000170599 : lea eax, dword ptr [rax] ; add byte ptr [rax], dh ; ja 0x170591 ; jmp rax
0x0000000000103820 : lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x000000000010b6bb : lea eax, dword ptr [rbx + 0x2260] ; pop rbx ; ret
0x0000000000099f80 : lea eax, dword ptr [rbx + 1] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000445c6 : lea eax, dword ptr [rbx + 2] ; mov rdx, r8 ; jmp 0x445e6
0x00000000000bc632 : lea eax, dword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000001063e9 : lea eax, dword ptr [rbx + 3] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bc52a : lea eax, dword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x000000000009a2c2 : lea eax, dword ptr [rcx + rcx] ; pop rbx ; div esi ; mov eax, eax ; ret
0x0000000000037db5 : lea eax, dword ptr [rcx + rdx] ; pop r14 ; pop r15 ; ret
0x00000000000839ed : lea eax, dword ptr [rcx + rsi] ; ret
0x0000000000099bd4 : lea eax, dword ptr [rcx - 1] ; ret
0x0000000000172d89 : lea eax, dword ptr [rcx] ; add byte ptr [rax], ah ; sbb bh, dh ; call rax
0x0000000000172d99 : lea eax, dword ptr [rcx] ; add byte ptr [rax], dl ; sbb dh, bh ; jmp qword ptr [rax]
0x000000000005d528 : lea eax, dword ptr [rcx] ; add byte ptr [rbx - 0x76be0008], al ; ret 0x850f
0x0000000000096cfc : lea eax, dword ptr [rdi + 0x10] ; ret
0x0000000000096d11 : lea eax, dword ptr [rdi + 0x11] ; ret
0x0000000000096d2f : lea eax, dword ptr [rdi + 0x12] ; ret
0x0000000000096d4f : lea eax, dword ptr [rdi + 0x13] ; ret
0x0000000000096d72 : lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000096d91 : lea eax, dword ptr [rdi + 0x15] ; ret
0x0000000000096db1 : lea eax, dword ptr [rdi + 0x16] ; ret
0x0000000000096dd1 : lea eax, dword ptr [rdi + 0x17] ; ret
0x0000000000096df4 : lea eax, dword ptr [rdi + 0x18] ; ret
0x0000000000096e19 : lea eax, dword ptr [rdi + 0x19] ; ret
0x0000000000096e37 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x0000000000096e57 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x0000000000096e73 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x0000000000096e93 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x0000000000096eb3 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x0000000000096ed3 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x0000000000097d23 : lea eax, dword ptr [rdi + 0x20] ; ret
0x0000000000097f89 : lea eax, dword ptr [rdi + 0x40] ; ret
0x0000000000096c4d : lea eax, dword ptr [rdi + 0xa] ; ret
0x0000000000096c6d : lea eax, dword ptr [rdi + 0xb] ; ret
0x0000000000096c8f : lea eax, dword ptr [rdi + 0xc] ; ret
0x0000000000096caf : lea eax, dword ptr [rdi + 0xd] ; ret
0x0000000000096ccf : lea eax, dword ptr [rdi + 0xe] ; ret
0x0000000000096ce9 : lea eax, dword ptr [rdi + 0xf] ; ret
0x000000000008f684 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000008f698 : lea eax, dword ptr [rdi + 2] ; ret
0x000000000008f6a3 : lea eax, dword ptr [rdi + 3] ; ret
0x000000000008f6b7 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000008f6c7 : lea eax, dword ptr [rdi + 5] ; ret
0x000000000008f6d7 : lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000096bfb : lea eax, dword ptr [rdi + 6] ; ret
0x000000000008f677 : lea eax, dword ptr [rdi + 7] ; ret
0x0000000000096c1a : lea eax, dword ptr [rdi + 8] ; ret
0x0000000000102d60 : lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x0000000000096c2f : lea eax, dword ptr [rdi + 9] ; ret
0x0000000000084e29 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x0000000000084e39 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x0000000000084d23 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x000000000008c687 : lea eax, dword ptr [rdi + rax] ; ret
0x0000000000123a1a : lea eax, dword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x0000000000103b10 : lea eax, dword ptr [rdi + rsi + 8] ; ret
0x00000000000838e9 : lea eax, dword ptr [rdi + rsi] ; ret
0x000000000009b9fe : lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000009bb61 : lea eax, dword ptr [rdi - 0xc] ; ret
0x000000000009bb81 : lea eax, dword ptr [rdi - 4] ; ret
0x000000000009bb71 : lea eax, dword ptr [rdi - 8] ; ret
0x0000000000096b83 : lea eax, dword ptr [rdi] ; ret
0x000000000014447d : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000014449d : lea eax, dword ptr [rdx + 0xb] ; ret
0x00000000001444bf : lea eax, dword ptr [rdx + 0xc] ; ret
0x00000000001444df : lea eax, dword ptr [rdx + 0xd] ; ret
0x00000000001444ff : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000014438f : lea eax, dword ptr [rdx + 0xf] ; ret
0x00000000001443b7 : lea eax, dword ptr [rdx + 1] ; ret
0x00000000001443cd : lea eax, dword ptr [rdx + 2] ; ret
0x00000000001443e5 : lea eax, dword ptr [rdx + 3] ; ret
0x00000000001443fb : lea eax, dword ptr [rdx + 4] ; ret
0x000000000014440d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000014442b : lea eax, dword ptr [rdx + 6] ; ret
0x0000000000144337 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000014443d : lea eax, dword ptr [rdx + 8] ; ret
0x000000000014445d : lea eax, dword ptr [rdx + 9] ; ret
0x000000000006ea2e : lea eax, dword ptr [rdx + rdi] ; ret
0x000000000009a23c : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000002c745 : lea eax, dword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x00000000001443a5 : lea eax, dword ptr [rdx] ; ret
0x0000000000081f15 : lea eax, dword ptr [rip + 0x10585] ; ret
0x000000000007fc85 : lea eax, dword ptr [rip + 0x10bf5] ; ret
0x000000000002bc69 : lea eax, dword ptr [rip + 0x138e47] ; ret
0x0000000000020141 : lea eax, dword ptr [rip + 0x144484] ; ret
0x0000000000020151 : lea eax, dword ptr [rip + 0x1465db] ; ret
0x0000000000084e7b : lea eax, dword ptr [rip + 0x1f] ; ret
0x00000000000e496b : lea eax, dword ptr [rip + 0x2bbcaf] ; pop rbp ; pop r12 ; ret
0x00000000000f59d8 : lea eax, dword ptr [rip + 0x31862] ; ret
0x00000000000f5aa8 : lea eax, dword ptr [rip + 0x31b32] ; ret
0x0000000000067364 : lea eax, dword ptr [rip + 0x338656] ; pop rbx ; pop rbp ; ret
0x00000000000205f0 : lea eax, dword ptr [rip + 0x38228a] ; ret
0x00000000000f5ad2 : lea eax, dword ptr [rip + 0x56238] ; ret
0x000000000008a6a6 : lea eax, dword ptr [rip + 0x5fb4] ; ret
0x0000000000085c91 : lea eax, dword ptr [rip + 0x79] ; ret
0x000000000008a6ba : lea eax, dword ptr [rip + 0x9fc90] ; ret
0x0000000000083e82 : lea eax, dword ptr [rip + 0x9fd88] ; ret
0x0000000000083b12 : lea eax, dword ptr [rip + 0x9ffc8] ; ret
0x0000000000085638 : lea eax, dword ptr [rip + 0xa1fb2] ; ret
0x0000000000081672 : lea eax, dword ptr [rip + 0xa2328] ; ret
0x000000000009b2a3 : lea eax, dword ptr [rip + 0xabeb7] ; ret
0x000000000009be3f : lea eax, dword ptr [rip + 0xacfdb] ; ret
0x000000000009be47 : lea eax, dword ptr [rip + 0xaf893] ; ret
0x000000000009be2b : lea eax, dword ptr [rip + 0xbbff] ; ret
0x00000000000837f5 : lea eax, dword ptr [rip + 0xbc985] ; ret
0x0000000000085b25 : lea eax, dword ptr [rip + 0xbd1d5] ; ret
0x0000000000081565 : lea eax, dword ptr [rip + 0xbd465] ; ret
0x0000000000085c45 : lea eax, dword ptr [rip + 0xbe8c5] ; ret
0x0000000000084e8f : lea eax, dword ptr [rip + 0xc294b] ; ret
0x0000000000084e97 : lea eax, dword ptr [rip + 0xc50d3] ; ret
0x00000000000854a2 : lea eax, dword ptr [rip + 0xc6878] ; ret
0x000000000009b29b : lea eax, dword ptr [rip + 0xc81f] ; ret
0x000000000007fe72 : lea eax, dword ptr [rip + 0xc9dd8] ; ret
0x00000000000800d5 : lea eax, dword ptr [rip + 5] ; ret
0x0000000000085cf4 : lea eax, dword ptr [rip + 6] ; ret
0x0000000000081f61 : lea eax, dword ptr [rip + 9] ; ret
0x000000000008bbcb : lea eax, dword ptr [rip - 0x511] ; ret
0x000000000010394e : lea eax, dword ptr [rsi + 8] ; ret
0x0000000000194c12 : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x00000000000fe7bc : lea eax, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000005d527 : lea eax, dword ptr gs:[rcx] ; add byte ptr [rbx - 0x76be0008], al ; ret 0x850f
0x000000000007e2ad : lea ebp, dword ptr [rip + 0x31fa0d] ; call 0x6a4f8
0x00000000000b30cf : lea ebx, dword ptr [rax + 1] ; jne 0xb30b9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000041b01 : lea ebx, dword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x000000000015b5b1 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, -0x69 ; xchg eax, esp ; ret
0x000000000009c16b : lea ecx, dword ptr [rax + 1] ; call rbx
0x000000000009c2a7 : lea ecx, dword ptr [rax + 4] ; call rbx
0x000000000009c6ee : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000012a3d0 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000009543e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000eb715 : lea ecx, dword ptr [rcx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000355c5 : lea ecx, dword ptr [rdi + rax] ; mov qword ptr [rsp + 0x10], r9 ; call r14
0x0000000000054fa8 : lea ecx, dword ptr [rdi + rbp*8 - 0x76990001] ; or cl, ch ; ret 0xffba
0x0000000000053799 : lea ecx, dword ptr [rdi + rbp*8 - 0x78f00001] ; ret
0x0000000000141c86 : lea ecx, dword ptr [rdx + 0x10] ; jne 0x1421d9 ; ret
0x0000000000141f84 : lea ecx, dword ptr [rdx + 0xa] ; jne 0x1421d9 ; ret
0x0000000000141fa4 : lea ecx, dword ptr [rdx + 0xb] ; jne 0x1421d9 ; ret
0x0000000000141fc4 : lea ecx, dword ptr [rdx + 0xc] ; jne 0x1421d9 ; ret
0x0000000000141fe6 : lea ecx, dword ptr [rdx + 0xd] ; jne 0x1421d9 ; ret
0x0000000000142006 : lea ecx, dword ptr [rdx + 0xe] ; jne 0x1421d9 ; ret
0x0000000000142026 : lea ecx, dword ptr [rdx + 0xf] ; jne 0x1421d9 ; ret
0x0000000000141e7c : lea ecx, dword ptr [rdx + 1] ; jne 0x1421d9 ; ret
0x0000000000141e9e : lea ecx, dword ptr [rdx + 2] ; jne 0x1421d9 ; ret
0x0000000000141ec4 : lea ecx, dword ptr [rdx + 3] ; jne 0x1421d9 ; ret
0x0000000000141edc : lea ecx, dword ptr [rdx + 4] ; jne 0x1421d9 ; ret
0x000000000006e6f1 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000006c986 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000141f02 : lea ecx, dword ptr [rdx + 5] ; jne 0x1421d9 ; ret
0x0000000000141f24 : lea ecx, dword ptr [rdx + 6] ; jne 0x1421d9 ; ret
0x0000000000141f42 : lea ecx, dword ptr [rdx + 7] ; jne 0x1421d9 ; ret
0x0000000000141c1e : lea ecx, dword ptr [rdx + 8] ; jne 0x1421d9 ; ret
0x0000000000141f64 : lea ecx, dword ptr [rdx + 9] ; jne 0x1421d9 ; ret
0x0000000000042b80 : lea ecx, dword ptr [rdx] ; jmp 0x42bd6
0x0000000000044280 : lea ecx, dword ptr [rdx] ; jmp 0x442d6
0x00000000000abe63 : lea ecx, dword ptr [rip + 0xb498b] ; add rax, rcx ; jmp rax
0x0000000000109fd8 : lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000109e19 : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000009c652 : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x000000000009c2a2 : lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000009c166 : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000010a45c : lea ecx, dword ptr [rsp + 0x30] ; call qword ptr [rax]
0x000000000009c440 : lea ecx, dword ptr [rsp + 0x30] ; call r12
0x000000000009cb43 : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000112fcf : lea ecx, dword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000506cd : lea ecx, dword ptr [rsp + rdx] ; add rdx, r15 ; call qword ptr [r11 + rax*8]
0x00000000000206ac : lea edi, dword ptr [rax + 1] ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x000000000010f00e : lea edi, dword ptr [rbp + 0x10] ; call rax
0x00000000001116e2 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x0000000000110cc2 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x000000000010e455 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x00000000000856c6 : lea edi, dword ptr [rdi + 0x10] ; jne 0x856b8 ; mov rax, rdi ; ret
0x000000000008a756 : lea edi, dword ptr [rdi + 0x10] ; jne 0x8a746 ; ret
0x0000000000095fad : lea edi, dword ptr [rdi + 0x10] ; jne 0x96689 ; ret
0x0000000000097691 : lea edi, dword ptr [rdi + 0x10] ; jne 0x97e99 ; ret
0x0000000000095fd0 : lea edi, dword ptr [rdi + 0x11] ; jne 0x96689 ; ret
0x00000000000976b4 : lea edi, dword ptr [rdi + 0x11] ; jne 0x97e99 ; ret
0x0000000000095ff5 : lea edi, dword ptr [rdi + 0x12] ; jne 0x96689 ; ret
0x00000000000976d9 : lea edi, dword ptr [rdi + 0x12] ; jne 0x97e99 ; ret
0x0000000000096013 : lea edi, dword ptr [rdi + 0x13] ; jne 0x96689 ; ret
0x0000000000097707 : lea edi, dword ptr [rdi + 0x13] ; jne 0x97e99 ; ret
0x0000000000096033 : lea edi, dword ptr [rdi + 0x14] ; jne 0x96689 ; ret
0x0000000000097737 : lea edi, dword ptr [rdi + 0x14] ; jne 0x97e99 ; ret
0x0000000000096056 : lea edi, dword ptr [rdi + 0x15] ; jne 0x96689 ; ret
0x000000000009776a : lea edi, dword ptr [rdi + 0x15] ; jne 0x97e99 ; ret
0x0000000000096075 : lea edi, dword ptr [rdi + 0x16] ; jne 0x96689 ; ret
0x0000000000097799 : lea edi, dword ptr [rdi + 0x16] ; jne 0x97e99 ; ret
0x0000000000096095 : lea edi, dword ptr [rdi + 0x17] ; jne 0x96689 ; ret
0x00000000000977c9 : lea edi, dword ptr [rdi + 0x17] ; jne 0x97e99 ; ret
0x00000000000960b5 : lea edi, dword ptr [rdi + 0x18] ; jne 0x96689 ; ret
0x00000000000977f9 : lea edi, dword ptr [rdi + 0x18] ; jne 0x97e99 ; ret
0x00000000000960d8 : lea edi, dword ptr [rdi + 0x19] ; jne 0x96689 ; ret
0x000000000009782c : lea edi, dword ptr [rdi + 0x19] ; jne 0x97e99 ; ret
0x000000000009610d : lea edi, dword ptr [rdi + 0x1a] ; jne 0x96689 ; ret
0x0000000000097861 : lea edi, dword ptr [rdi + 0x1a] ; jne 0x97e99 ; ret
0x000000000009613b : lea edi, dword ptr [rdi + 0x1b] ; jne 0x96689 ; ret
0x000000000009788f : lea edi, dword ptr [rdi + 0x1b] ; jne 0x97e99 ; ret
0x000000000009616b : lea edi, dword ptr [rdi + 0x1c] ; jne 0x96689 ; ret
0x00000000000978bf : lea edi, dword ptr [rdi + 0x1c] ; jne 0x97e99 ; ret
0x0000000000096197 : lea edi, dword ptr [rdi + 0x1d] ; jne 0x96689 ; ret
0x00000000000978eb : lea edi, dword ptr [rdi + 0x1d] ; jne 0x97e99 ; ret
0x00000000000961c7 : lea edi, dword ptr [rdi + 0x1e] ; jne 0x96689 ; ret
0x000000000009791b : lea edi, dword ptr [rdi + 0x1e] ; jne 0x97e99 ; ret
0x00000000000961f7 : lea edi, dword ptr [rdi + 0x1f] ; jne 0x96689 ; ret
0x000000000009794b : lea edi, dword ptr [rdi + 0x1f] ; jne 0x97e99 ; ret
0x0000000000096227 : lea edi, dword ptr [rdi + 0x20] ; jne 0x96689 ; ret
0x000000000009797b : lea edi, dword ptr [rdi + 0x20] ; jne 0x97e99 ; ret
0x0000000000095ef3 : lea edi, dword ptr [rdi + 0xa] ; jne 0x96689 ; ret
0x0000000000097597 : lea edi, dword ptr [rdi + 0xa] ; jne 0x97e99 ; ret
0x0000000000095f11 : lea edi, dword ptr [rdi + 0xb] ; jne 0x96689 ; ret
0x00000000000975c5 : lea edi, dword ptr [rdi + 0xb] ; jne 0x97e99 ; ret
0x0000000000095f31 : lea edi, dword ptr [rdi + 0xc] ; jne 0x96689 ; ret
0x00000000000975e5 : lea edi, dword ptr [rdi + 0xc] ; jne 0x97e99 ; ret
0x0000000000095f53 : lea edi, dword ptr [rdi + 0xd] ; jne 0x96689 ; ret
0x0000000000097607 : lea edi, dword ptr [rdi + 0xd] ; jne 0x97e99 ; ret
0x0000000000095f73 : lea edi, dword ptr [rdi + 0xe] ; jne 0x96689 ; ret
0x0000000000097637 : lea edi, dword ptr [rdi + 0xe] ; jne 0x97e99 ; ret
0x0000000000095f93 : lea edi, dword ptr [rdi + 0xf] ; jne 0x96689 ; ret
0x0000000000097667 : lea edi, dword ptr [rdi + 0xf] ; jne 0x97e99 ; ret
0x0000000000095dc7 : lea edi, dword ptr [rdi + 1] ; jne 0x96689 ; ret
0x000000000009746a : lea edi, dword ptr [rdi + 1] ; jne 0x97e99 ; ret
0x0000000000095deb : lea edi, dword ptr [rdi + 2] ; jne 0x96689 ; ret
0x000000000009748f : lea edi, dword ptr [rdi + 2] ; jne 0x97e99 ; ret
0x0000000000095e0e : lea edi, dword ptr [rdi + 3] ; jne 0x96689 ; ret
0x00000000000974b2 : lea edi, dword ptr [rdi + 3] ; jne 0x97e99 ; ret
0x0000000000095e29 : lea edi, dword ptr [rdi + 4] ; jne 0x96689 ; ret
0x00000000000974cd : lea edi, dword ptr [rdi + 4] ; jne 0x97e99 ; ret
0x0000000000095e4c : lea edi, dword ptr [rdi + 5] ; jne 0x96689 ; ret
0x00000000000974f0 : lea edi, dword ptr [rdi + 5] ; jne 0x97e99 ; ret
0x0000000000095e71 : lea edi, dword ptr [rdi + 6] ; jne 0x96689 ; ret
0x0000000000097515 : lea edi, dword ptr [rdi + 6] ; jne 0x97e99 ; ret
0x0000000000095e8f : lea edi, dword ptr [rdi + 7] ; jne 0x96689 ; ret
0x0000000000097533 : lea edi, dword ptr [rdi + 7] ; jne 0x97e99 ; ret
0x0000000000095eab : lea edi, dword ptr [rdi + 8] ; jne 0x96689 ; ret
0x000000000009754f : lea edi, dword ptr [rdi + 8] ; jne 0x97e99 ; ret
0x0000000000095ece : lea edi, dword ptr [rdi + 9] ; jne 0x96689 ; ret
0x0000000000097572 : lea edi, dword ptr [rdi + 9] ; jne 0x97e99 ; ret
0x00000000001002a1 : lea edi, dword ptr [rip + 0x2a1a35] ; call rax
0x00000000000f52ee : lea edi, dword ptr [rip - 0x174] ; call rax
0x00000000000a9cf0 : lea edx, dword ptr [rax + 1] ; cmp rdx, rcx ; jb 0xa9cc9 ; ret
0x00000000000347d9 : lea edx, dword ptr [rax + 1] ; mov dword ptr [rip + 0x3688aa], edx ; ret
0x00000000000481f3 : lea edx, dword ptr [rax + 8] ; mov qword ptr [r12 + 8], rdx ; jmp 0x481c8
0x00000000000ff635 : lea edx, dword ptr [rax - 1] ; cmp rdx, -3 ; jbe 0xff649 ; ret
0x000000000012a4a4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000008fa21 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x00000000000b3002 : lea edx, dword ptr [rdi + rdi*8] ; pop rbx ; lea rax, qword ptr [rax + rdx*8] ; ret
0x00000000000eb947 : lea edx, dword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000006eb5d : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000080166 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x000000000012a898 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x000000000010b291 : lea edx, dword ptr [rip + 0x2918a9] ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000001128a1 : lea edx, dword ptr [rip + 0x2949] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000010ff96 : lea esi, dword ptr [rax + 0x38] ; mov rdi, rcx ; jmp r8
0x000000000005de8e : lea esi, dword ptr [rax + 2] ; jmp 0x5a0d1
0x000000000006d610 : lea esi, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000002eb6 : lea esi, dword ptr [rdi] ; ret 0x793b
0x000000000003fd1f : lea esi, dword ptr [rip + 0x1cb] ; call rax
0x000000000006b73a : lea esi, dword ptr [rip + 0x20] ; call rax
0x000000000010d861 : lea esi, dword ptr [rip + 0x58f72] ; call 0x69ab8
0x000000000010d845 : lea esi, dword ptr [rip + 0x5a57f] ; call 0x69ab8
0x0000000000076cfa : lea esi, dword ptr [rip - 0x1450] ; call rax
0x00000000000771aa : lea esi, dword ptr [rip - 0x1900] ; call rax
0x000000000006b9f2 : lea esi, dword ptr [rip - 0x298] ; call rax
0x0000000000075bf2 : lea esi, dword ptr [rip - 0x348] ; call rax
0x0000000000075e3a : lea esi, dword ptr [rip - 0x590] ; call rax
0x000000000010bab5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000011540d : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000035c52 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000696e1 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000f146b : lea esp, dword ptr [rbx + rcx] ; jmp 0xf1480
0x0000000000080165 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000f146a : lea r12, qword ptr [rbx + r9] ; jmp 0xf1481
0x000000000007e2ac : lea r13, qword ptr [rip + 0x31fa0d] ; call 0x6a4f9
0x000000000005de8d : lea r14, qword ptr [rax + 2] ; jmp 0x5a0d2
0x000000000012a3cf : lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000042b7f : lea r9, qword ptr [rdx] ; jmp 0x42bd7
0x000000000004427f : lea r9, qword ptr [rdx] ; jmp 0x442d7
0x0000000000109fd7 : lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000109e18 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000009c651 : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000009c2a1 : lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000009c165 : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000010a45b : lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x000000000009c43f : lea r9, qword ptr [rsp + 0x30] ; call r12
0x000000000009cb42 : lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000112fce : lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000009c43e : lea r9, qword ptr ds:[rsp + 0x30] ; call r12
0x00000000000a8241 : lea rax, qword ptr [r8 + rcx] ; ret
0x000000000009d962 : lea rax, qword ptr [r8 + rdx] ; pop r14 ; pop r15 ; ret
0x0000000000037db4 : lea rax, qword ptr [r9 + rdx] ; pop r14 ; pop r15 ; ret
0x00000000000b8eb1 : lea rax, qword ptr [rax + rax - 1] ; ret
0x0000000000084df3 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000084e03 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008fd33 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x0000000000084dd3 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000b3006 : lea rax, qword ptr [rax + rdx*8] ; ret
0x000000000010b6ba : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000445c5 : lea rax, qword ptr [rbx + 2] ; mov rdx, r8 ; jmp 0x445e7
0x00000000000bc631 : lea rax, qword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000bc529 : lea rax, qword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x00000000000839ec : lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000099bd3 : lea rax, qword ptr [rcx - 1] ; ret
0x0000000000096cfb : lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000096d10 : lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000096d2e : lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000096d4e : lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000096d71 : lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000096d90 : lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000096db0 : lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000096dd0 : lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000096df3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000096e18 : lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000096e36 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000096e56 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000096e72 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000096e92 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000096eb2 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000096ed2 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x0000000000097d22 : lea rax, qword ptr [rdi + 0x20] ; ret
0x0000000000097f88 : lea rax, qword ptr [rdi + 0x40] ; ret
0x0000000000096c4c : lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000096c6c : lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000096c8e : lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000096cae : lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000096cce : lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000096ce8 : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000008f683 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000008f697 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000008f6a2 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000008f6b6 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000008f6c6 : lea rax, qword ptr [rdi + 5] ; ret
0x000000000008f6d6 : lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000096bfa : lea rax, qword ptr [rdi + 6] ; ret
0x000000000008f676 : lea rax, qword ptr [rdi + 7] ; ret
0x0000000000096c19 : lea rax, qword ptr [rdi + 8] ; ret
0x0000000000096c2e : lea rax, qword ptr [rdi + 9] ; ret
0x0000000000084e28 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000084e38 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000084d22 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000008c686 : lea rax, qword ptr [rdi + rax] ; ret
0x0000000000123a19 : lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x0000000000103b0f : lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000000838e8 : lea rax, qword ptr [rdi + rsi] ; ret
0x000000000009b9fd : lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009bb60 : lea rax, qword ptr [rdi - 0xc] ; ret
0x000000000009bb80 : lea rax, qword ptr [rdi - 4] ; ret
0x000000000009bb70 : lea rax, qword ptr [rdi - 8] ; ret
0x0000000000096b82 : lea rax, qword ptr [rdi] ; ret
0x000000000014447c : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000014449c : lea rax, qword ptr [rdx + 0xb] ; ret
0x00000000001444be : lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000001444de : lea rax, qword ptr [rdx + 0xd] ; ret
0x00000000001444fe : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000014438e : lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000001443b6 : lea rax, qword ptr [rdx + 1] ; ret
0x00000000001443cc : lea rax, qword ptr [rdx + 2] ; ret
0x00000000001443e4 : lea rax, qword ptr [rdx + 3] ; ret
0x00000000001443fa : lea rax, qword ptr [rdx + 4] ; ret
0x000000000014440c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000014442a : lea rax, qword ptr [rdx + 6] ; ret
0x0000000000144336 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000014443c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000014445c : lea rax, qword ptr [rdx + 9] ; ret
0x000000000002c744 : lea rax, qword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x00000000001443a4 : lea rax, qword ptr [rdx] ; ret
0x0000000000081f14 : lea rax, qword ptr [rip + 0x10585] ; ret
0x000000000007fc84 : lea rax, qword ptr [rip + 0x10bf5] ; ret
0x000000000002bc68 : lea rax, qword ptr [rip + 0x138e47] ; ret
0x0000000000020140 : lea rax, qword ptr [rip + 0x144484] ; ret
0x0000000000020150 : lea rax, qword ptr [rip + 0x1465db] ; ret
0x0000000000084e7a : lea rax, qword ptr [rip + 0x1f] ; ret
0x00000000000f59d7 : lea rax, qword ptr [rip + 0x31862] ; ret
0x00000000000f5aa7 : lea rax, qword ptr [rip + 0x31b32] ; ret
0x0000000000067363 : lea rax, qword ptr [rip + 0x338656] ; pop rbx ; pop rbp ; ret
0x00000000000205ef : lea rax, qword ptr [rip + 0x38228a] ; ret
0x00000000000f5ad1 : lea rax, qword ptr [rip + 0x56238] ; ret
0x000000000008a6a5 : lea rax, qword ptr [rip + 0x5fb4] ; ret
0x0000000000085c90 : lea rax, qword ptr [rip + 0x79] ; ret
0x000000000008a6b9 : lea rax, qword ptr [rip + 0x9fc90] ; ret
0x0000000000083e81 : lea rax, qword ptr [rip + 0x9fd88] ; ret
0x0000000000083b11 : lea rax, qword ptr [rip + 0x9ffc8] ; ret
0x0000000000085637 : lea rax, qword ptr [rip + 0xa1fb2] ; ret
0x0000000000081671 : lea rax, qword ptr [rip + 0xa2328] ; ret
0x000000000009b2a2 : lea rax, qword ptr [rip + 0xabeb7] ; ret
0x000000000009be3e : lea rax, qword ptr [rip + 0xacfdb] ; ret
0x000000000009be46 : lea rax, qword ptr [rip + 0xaf893] ; ret
0x000000000009be2a : lea rax, qword ptr [rip + 0xbbff] ; ret
0x00000000000837f4 : lea rax, qword ptr [rip + 0xbc985] ; ret
0x0000000000085b24 : lea rax, qword ptr [rip + 0xbd1d5] ; ret
0x0000000000081564 : lea rax, qword ptr [rip + 0xbd465] ; ret
0x0000000000085c44 : lea rax, qword ptr [rip + 0xbe8c5] ; ret
0x0000000000084e8e : lea rax, qword ptr [rip + 0xc294b] ; ret
0x0000000000084e96 : lea rax, qword ptr [rip + 0xc50d3] ; ret
0x00000000000854a1 : lea rax, qword ptr [rip + 0xc6878] ; ret
0x000000000009b29a : lea rax, qword ptr [rip + 0xc81f] ; ret
0x000000000007fe71 : lea rax, qword ptr [rip + 0xc9dd8] ; ret
0x00000000000800d4 : lea rax, qword ptr [rip + 5] ; ret
0x0000000000085cf3 : lea rax, qword ptr [rip + 6] ; ret
0x0000000000081f60 : lea rax, qword ptr [rip + 9] ; ret
0x000000000008bbca : lea rax, qword ptr [rip - 0x511] ; ret
0x000000000009bb39 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x0000000000041b00 : lea rbx, qword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x000000000009543d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000009c16a : lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000009c2a6 : lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000009c6ed : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000eb714 : lea rcx, qword ptr [rcx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000006c985 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000010f00d : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001116e1 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000110cc1 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x000000000010e454 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x00000000000856c5 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x856b9 ; mov rax, rdi ; ret
0x000000000008a755 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x8a747 ; ret
0x00000000001002a0 : lea rdi, qword ptr [rip + 0x2a1a35] ; call rax
0x00000000000f52ed : lea rdi, qword ptr [rip - 0x174] ; call rax
0x000000000012a4a3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000b3001 : lea rdx, qword ptr [rdi + rdi*8] ; pop rbx ; lea rax, qword ptr [rax + rdx*8] ; ret
0x00000000000eb946 : lea rdx, qword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000012a897 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x000000000010ff95 : lea rsi, qword ptr [rax + 0x38] ; mov rdi, rcx ; jmp r8
0x000000000003fd1e : lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x000000000006b739 : lea rsi, qword ptr [rip + 0x20] ; call rax
0x000000000010d860 : lea rsi, qword ptr [rip + 0x58f72] ; call 0x69ab9
0x000000000010d844 : lea rsi, qword ptr [rip + 0x5a57f] ; call 0x69ab9
0x0000000000076cf9 : lea rsi, qword ptr [rip - 0x1450] ; call rax
0x00000000000771a9 : lea rsi, qword ptr [rip - 0x1900] ; call rax
0x000000000006b9f1 : lea rsi, qword ptr [rip - 0x298] ; call rax
0x0000000000075bf1 : lea rsi, qword ptr [rip - 0x348] ; call rax
0x0000000000075e39 : lea rsi, qword ptr [rip - 0x590] ; call rax
0x000000000010bab4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000011540c : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000035c51 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000c3c85 : leave ; adc byte ptr [rcx], bh ; ret 0x4b88
0x0000000000170e81 : leave ; add byte ptr [rax], al ; and byte ptr [rax + rsi*8], cl ; call rax
0x0000000000181d75 : leave ; add byte ptr [rax], al ; pop rax ; out -0xf, al ; jmp rax
0x00000000001739a9 : leave ; add dword ptr [rax], eax ; loopne 0x1739fe ; clc ; call qword ptr [rax]
0x00000000001739a1 : leave ; add dword ptr [rax], eax ; mov al, 0x4a ; clc ; jmp rax
0x0000000000173971 : leave ; add dword ptr [rax], eax ; nop ; clc ; jmp qword ptr [rax]
0x0000000000034234 : leave ; add edi, esi ; ret 0
0x0000000000028f13 : leave ; call r15
0x0000000000002bcc : leave ; clc ; ret
0x0000000000083bb6 : leave ; cmove rax, rdx ; ret
0x0000000000123a51 : leave ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000002a40f : leave ; je 0x2a417 ; call rcx
0x0000000000067ad9 : leave ; je 0x67ae4 ; ret
0x000000000016ff05 : leave ; jmp 0x16ff09
0x00000000000ce8a4 : leave ; jmp rcx
0x0000000000105257 : leave ; jne 0x1051ab ; ret
0x000000000008d1da : leave ; jne 0x8d1b1 ; mov rax, rdi ; ret
0x000000000008f749 : leave ; jne 0x8f73c ; ret
0x000000000008f888 : leave ; jne 0x8f87d ; xor eax, eax ; ret
0x00000000000999b0 : leave ; jne 0x999a3 ; ret
0x0000000000099a60 : leave ; jne 0x99a53 ; ret
0x0000000000099d20 : leave ; jne 0x99d17 ; sub rax, 1 ; ret
0x000000000009bbcc : leave ; jne 0x9bbc4 ; ret
0x000000000009d09a : leave ; jne 0x9d056 ; mov rax, rdx ; ret
0x00000000000ef936 : leave ; jne 0xef924 ; ret
0x0000000000123a18 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x0000000000094f21 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000033121 : leave ; mov dword ptr [rdi], ecx ; ret
0x000000000009a414 : leave ; mov dword ptr [rdx], ecx ; jne 0x9a40e ; ret
0x00000000000c5779 : leave ; mov edx, r8d ; jmp 0xc578c
0x000000000010369a : leave ; mov word ptr [rax + rdx - 2], cx ; ret
0x000000000008f64f : leave ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000008f5af : leave ; movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x00000000000837f8 : leave ; or eax, dword ptr [rax] ; ret
0x00000000001131f3 : leave ; pushfq ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000103685 : leave ; rep stosq qword ptr [rdi], rax ; ret
0x000000000003d435 : leave ; ret
0x00000000001745ed : leave ; stc ; call qword ptr [rax]
0x0000000000175345 : leave ; std ; call rax
0x000000000017534d : leave ; std ; jmp rax
0x00000000000fb643 : leave ; xor ebp, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000037ad2 : leave ; xor ebx, ebx ; jmp 0x377be
0x0000000000037f11 : leave ; xor ebx, ebx ; jmp 0x37c5e
0x000000000009c64e : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000a96fc : les r9d, ptr [r8 + 1] ; ret
0x0000000000090364 : ljmp 0x1884401, -0x1a8b ; ret
0x000000000009b823 : ljmp 0x1894401, -0x198b ; ret
0x0000000000071431 : ljmp 0x1e28304, -0x2f77 ; ret
0x0000000000071531 : ljmp 0x1e28305, -0x2f77 ; ret
0x0000000000160904 : ljmp 0x29fff4b5, -0xb49 ; jmp rsi
0x00000000000f4fd5 : ljmp 0x3b8, 0xf00 ; ret 0x90c3
0x00000000000a7e5d : ljmp 0x3ffec148, 0x14c ; ret 0x8948
0x0000000000077ef7 : ljmp 0x40d7310b, 0x3c88 ; xor bl, dh ; ret
0x000000000010c604 : ljmp 0x48e6894c, -0x1077 ; call rax
0x00000000000432d8 : ljmp 0x4dc47304, -0x52f1 ; ret
0x00000000000431c8 : ljmp 0x4dc47304, -0x5af1 ; ret
0x00000000000a8453 : ljmp 0x6fac148, 0x2948 ; ret 0x8d48
0x000000000002c75a : ljmp 0x7204573b, -0xcf8 ; ret
0x00000000000eb82c : ljmp 0x7304563b, -0x7cc2 ; ret 0x8b05
0x00000000000eb91c : ljmp 0x7304563b, -0x7cca ; ret 0x8b05
0x000000000002c717 : ljmp 0x7304573b, -0x7cd2 ; ret 0x8b05
0x000000000016f3f8 : ljmp 0x7afffc7f, -0x381 ; jmp qword ptr [rax]
0x0000000000106c1d : ljmp 0x8c48348, 0x5d5b ; ret
0x0000000000099d85 : ljmp 0x8ec8348, 0x2944 ; ret 0xf685
0x000000000016fb00 : ljmp 0x90fffc9a, -0x35e ; call qword ptr [rax]
0x0000000000038f23 : ljmp 0x9fa8330, -0x68f1 ; ret 0xd284
0x00000000000817c0 : ljmp 0x9fa8330, -0x69f1 ; ret 0xb60f
0x0000000000160924 : ljmp 0xa4fff4b5, -0xb3d ; jmp qword ptr [rdi]
0x0000000000042933 : ljmp 0xb8e17501, 1 ; add byte ptr [rax], al ; ret
0x00000000000c23d9 : ljmp 0xb8e37901, 1 ; add byte ptr [rax], al ; ret
0x00000000000dabd9 : ljmp 0xc1214c10, 0x214c ; ret 0x148
0x000000000014881c : ljmp 0xd1ef0f66, 0xf66 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000012c78b : ljmp 0xf24f8948, -0x76b8 ; push rdi ; clc ; ret
0x0000000000081fc3 : ljmp 0xffff, -0x7af1 ; ret 0x17
0x0000000000174a5f : ljmp ptr [rax + 0x20000239] ; cli ; jmp rax
0x0000000000170a9f : ljmp ptr [rax + 0x300000ad] ; jg 0x170a9e ; jmp rax
0x0000000000174d8f : ljmp ptr [rax + 0x4c] ; add al, byte ptr [rax] ; loopne 0x174d29 ; cli ; call rax
0x000000000017055f : ljmp ptr [rax + 0x5000008c] ; jb 0x17055b ; call rax
0x0000000000171157 : ljmp ptr [rax + 0x500000da] ; lock ; jmp rax
0x000000000017436f : ljmp ptr [rax + 0x5000020c] ; xchg eax, ecx ; stc ; call qword ptr [rax]
0x00000000001724e7 : ljmp ptr [rax + 0x58] ; add dword ptr [rax], eax ; xor byte ptr [rcx], bh ; cmc ; jmp rax
0x0000000000173ddf : ljmp ptr [rax + 0x600001e1] ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; call rax
0x000000000017209f : ljmp ptr [rax + 0x7000013b] ; hlt ; call rax
0x0000000000175337 : ljmp ptr [rax + 0x76] ; add byte ptr [rax], al ; xor al, cl ; std ; call rax
0x0000000000173e87 : ljmp ptr [rax - 0x19] ; add dword ptr [rax], eax ; jo 0x173e57 ; clc ; call rax
0x0000000000173e17 : ljmp ptr [rax - 0x1ffffe1d] ; lodsd eax, dword ptr [rsi] ; clc ; call rax
0x0000000000174ee7 : ljmp ptr [rax - 0x2ffffdac] ; mov ah, -6 ; call rax
0x0000000000172587 : ljmp ptr [rax - 0x4ffffea1] ; mov esi, ebp ; jmp rax
0x000000000017207f : ljmp ptr [rax - 0x4ffffec6] ; hlt ; call qword ptr [rax]
0x0000000000170527 : ljmp ptr [rax - 0xfffff75] ; outsb dx, byte ptr [rsi] ; in al, dx ; call rax
0x0000000000160beb : ljmp ptr [rbx - 0x54000b09] ; div esp ; jmp qword ptr [rdx]
0x000000000016093b : ljmp ptr [rbx] ; ret 0xfff4
0x0000000000162395 : ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x0000000000160907 : ljmp ptr [rcx] ; mov bh, -0xc ; jmp rsi
0x00000000000b0e40 : ljmp ptr [rcx] ; ret 0xb8
0x00000000000ae210 : ljmp ptr [rcx] ; ret 0xd269
0x000000000016169f : ljmp ptr [rcx] ; test dh, ch ; call rbx
0x0000000000161363 : ljmp ptr [rcx] ; test esi, ebp ; lcall ptr [rdi] ; test esi, ebp ; call qword ptr [rbx]
0x000000000016efbf : ljmp ptr [rdi + rcx*2] ; cld ; call rdx
0x000000000008bd16 : ljmp ptr [rdx] ; cmp rdx, rcx ; jne 0x8bd18 ; ret
0x0000000000161567 : ljmp ptr [rsi] ; xor ebp, 0xffffffff ; pop rcx ; xchg ch, dh ; call rdx
0x0000000000171115 : lock ; call qword ptr [rax]
0x000000000018ab48 : lock ; cmc ; jmp qword ptr [rcx]
0x000000000017116d : lock ; jmp qword ptr [rax]
0x000000000017115d : lock ; jmp rax
0x000000000014bbab : lock ; jne 0x14bce8 ; ret
0x0000000000133e79 : lock ; movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000014b192 : lock ; movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x00000000000431e0 : lock ; ret
0x00000000001726a4 : lock adc al, -0xa ; call rax
0x00000000001844fd : lock add byte ptr [rax], al ; add byte ptr [rbx - 0xd], al ; jmp qword ptr [rcx]
0x0000000000147bbe : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001844e5 : lock add byte ptr [rax], al ; call 0x22183835
0x00000000001844cd : lock add byte ptr [rax], al ; rol byte ptr [rdx - 0xd], 1 ; jmp qword ptr [rcx]
0x000000000006dc19 : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000194455 : lock add dword ptr [rax], eax ; js 0x194480 ; clc ; call qword ptr [rdx]
0x0000000000173fc1 : lock add dword ptr [rax], eax ; loopne 0x173fc6 ; clc ; call rax
0x000000000019449d : lock add dword ptr [rax], eax ; shl byte ptr [rax], 1 ; clc ; jmp qword ptr [rcx]
0x0000000000185ba9 : lock add dword ptr [rbx], eax ; ret 0xa05
0x000000000019449c : lock add dword ptr fs:[rax], eax ; shl byte ptr [rax], 1 ; clc ; jmp qword ptr [rcx]
0x000000000017400c : lock add ecx, edi ; jmp rax
0x00000000000b4a86 : lock add rsp, 8 ; ret
0x000000000003381c : lock and eax, 0x8000 ; ret
0x0000000000044148 : lock call 0x43917 ; leave ; ret
0x0000000000044186 : lock call 0x43dd7 ; leave ; ret
0x000000000015fa6e : lock call qword ptr [rcx + rbx*4 - 0x10] ; call rsp
0x0000000000173b54 : lock clc ; call qword ptr [rax]
0x000000000016f140 : lock cld ; call qword ptr [rax + 0x10fffc56]
0x0000000000174c9c : lock cli ; jmp rax
0x000000000018ab19 : lock cmc ; jmp qword ptr [rcx]
0x000000000011503f : lock dec dword ptr [rax - 0x77] ; ret
0x0000000000171166 : lock dec dword ptr [rax] ; fild dword ptr [rax] ; add al, ah ; lock ; jmp qword ptr [rax]
0x0000000000171376 : lock dec eax ; in eax, 0 ; add al, dl ; jns 0x171378 ; jmp rax
0x000000000017162e : lock dec eax ; stc ; add byte ptr [rax], al ; cmp bh, -0x10 ; jmp rax
0x00000000001715e6 : lock dec eax ; test dword ptr [rax], 0xf0f8a000 ; jmp qword ptr [rax]
0x000000000015de45 : lock ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, -0x55 ; ret
0x0000000000173d18 : lock fild dword ptr [rcx] ; add byte ptr [rax - 0x75], dl ; clc ; call qword ptr [rax]
0x0000000000033698 : lock fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000033678 : lock fld xword ptr [rsp - 0x18] ; ret
0x00000000001726b0 : lock imul eax, dword ptr [rcx], 0xf6153000 ; call qword ptr [rax]
0x000000000018a3f0 : lock in al, -0xb ; jmp qword ptr [rcx]
0x0000000000178920 : lock in eax, -0x15 ; jmp rsp
0x000000000015fa82 : lock inc dword ptr [rcx + rbx*4] ; lock push qword ptr [rdx + rbx*4 - 0x10] ; call rsp
0x000000000015fc78 : lock ja 0x15fc74 ; inc dword ptr [rax] ; jp 0x15fc78 ; call qword ptr [rax]
0x0000000000160150 : lock ja 0x160149 ; jmp qword ptr [rax]
0x0000000000085527 : lock ja 0x85534 ; ret
0x000000000009069b : lock ja 0x906b6 ; mov rax, rdi ; ret
0x00000000000ef44a : lock jb 0xef460 ; mov eax, 1 ; ret
0x000000000016010c : lock je 0x160105 ; call qword ptr [rax]
0x00000000000336b5 : lock je 0x33660 ; ret
0x000000000009a1dc : lock je 0x9a1a7 ; movzx eax, dl ; pop rbx ; ret
0x000000000009a1b4 : lock je 0x9a1a9 ; movzx eax, cl ; pop rbx ; ret
0x000000000009a1dc : lock je 0x9a1a9 ; movzx eax, dl ; pop rbx ; ret
0x000000000018c4d0 : lock jg 0x18c4cc ; jmp qword ptr [rsi]
0x0000000000032e5a : lock jg 0x32eae ; sub eax, edx ; shr rax, 0x3f ; ret
0x00000000001612e8 : lock jge 0x1612e3 ; call qword ptr [rax]
0x00000000001612e4 : lock jge 0x1612e3 ; push rax ; jge 0x1612e7 ; call qword ptr [rax]
0x0000000000188300 : lock jl 0x1882fb ; call qword ptr [rbx]
0x000000000004323c : lock jmp 0x432bf ; shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000d160b : lock jmp 0xd15ef ; mov eax, dword ptr [rsi + 0x14] ; ret
0x00000000001712be : lock jmp qword ptr [rax - 0x1e] ; add byte ptr [rax], al ; lock jo 0x1712c0 ; call rax
0x0000000000171636 : lock jmp rax ; stc ; add byte ptr [rax], al ; add byte ptr [rax], al ; int1 ; jmp qword ptr [rax]
0x000000000014bbac : lock jne 0x14bce7 ; ret
0x0000000000090186 : lock jne 0x90178 ; mov byte ptr [r9 + 1], 0 ; ret
0x000000000009bb0a : lock jne 0x9bb67 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000160214 : lock jnp 0x160211 ; inc dword ptr [rax] ; jl 0x160215 ; call qword ptr [rax]
0x00000000001601a8 : lock jns 0x1601a1 ; call qword ptr [rax]
0x00000000001712c4 : lock jo 0x1712ba ; call rax
0x00000000001601c8 : lock jp 0x1601c1 ; call qword ptr [rax]
0x0000000000170e7e : lock lcall ptr [rax + 0x200000c9] ; or al, 0xfffffffffffffff0 ; call rax
0x0000000000171156 : lock ljmp ptr [rax + 0x500000da] ; lock ; jmp rax
0x0000000000133e78 : lock lock ; movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000016feb4 : lock mov ah, -0x15 ; jmp rax
0x0000000000171f14 : lock mov bh, -0xd ; call qword ptr [rax]
0x0000000000033738 : lock mov dword ptr [rdi], edx ; fld xword ptr [rsp - 0x18] ; ret
0x000000000012bc67 : lock mov qword ptr [rdi - 8], rcx ; ret
0x000000000012bca5 : lock mov qword ptr [rdi - 8], rdx ; ret
0x0000000000127003 : lock mov rax, r8 ; ret
0x0000000000033987 : lock mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x0000000000032f28 : lock movq xmm0, rax ; ret
0x00000000000aeb9b : lock movsxd rsi, dword ptr [rcx + rsi*4] ; add rcx, rsi ; jmp rcx
0x000000000014b193 : lock movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x00000000000e83f6 : lock or rax, rdi ; ret
0x000000000017052c : lock outsb dx, byte ptr [rsi] ; in al, dx ; call rax
0x000000000015fee4 : lock pop rax ; call qword ptr [rax]
0x0000000000067e14 : lock pop rbp ; pop r12 ; ret
0x0000000000035c54 : lock pop rbx ; pop r12 ; pop rbp ; ret
0x000000000007e013 : lock pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f66df : lock pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f63a8 : lock pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000067cbc : lock pop rbx ; pop rbp ; ret
0x0000000000067fe5 : lock pop rbx ; ret
0x0000000000176fa0 : lock pop rsi ; jmp 0x176fa6
0x000000000015fa12 : lock push qword ptr [rdx + rbx*4 - 0x10] ; call rsp
0x000000000015fa0e : lock push qword ptr [rdx + rbx*4 - 0x10] ; push qword ptr [rdx + rbx*4 - 0x10] ; call rsp
0x0000000000171556 : lock push rax ; add byte ptr [rax], al ; push rax ; out -0x10, al ; call qword ptr [rax]
0x000000000016ef6c : lock push rcx ; cld ; push qword ptr [rax + 0x51] ; cld ; jmp rax
0x000000000015febc : lock push rdi ; inc dword ptr [rax] ; pop rax ; call qword ptr [rax]
0x0000000000171b6c : lock sal edx, -1 ; lock sbb byte ptr [rcx], al ; add byte ptr [rax], dh ; ret 0xfff2
0x000000000016e884 : lock salc ; sti ; call rax
0x0000000000174884 : lock sbb bh, dl ; jmp rax
0x0000000000171b70 : lock sbb byte ptr [rcx], al ; add byte ptr [rax], dh ; ret 0xfff2
0x00000000001741b4 : lock stc ; jmp qword ptr [rax]
0x000000000016eae1 : lock sti ; call qword ptr [rax]
0x0000000000170a40 : lock stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x11], bh ; jmp qword ptr [rax]
0x000000000016ec08 : lock sub ah, bh ; call rax
0x0000000000119190 : lock sub dword ptr [rdi + 0x18], 1 ; je 0x1191a9 ; xor eax, eax ; ret
0x000000000014b197 : lock sub eax, edx ; ret
0x000000000016ec6c : lock sub esp, edi ; jmp rax
0x000000000014beac : lock sub rax, rdx ; vzeroupper ; ret
0x0000000000173204 : lock test dh, bh ; jmp rax
0x000000000016f914 : lock test eax, 0xa980fffc ; cld ; call qword ptr [rax]
0x000000000002a2b0 : lock test rax, rax ; je 0x2a2be ; call rax
0x000000000016fe14 : lock xchg bl, ch ; jmp qword ptr [rax]
0x000000000016e8e8 : lock xlatb ; sti ; call rax
0x0000000000174104 : lock xor bh, cl ; call qword ptr [rax]
0x00000000001748e0 : lock xor byte ptr [rdx], al ; add byte ptr [rax + 0x2b], dl ; cli ; jmp qword ptr [rax]
0x000000000016170c : lock xor ebp, 0xffffffff ; test sil, bpl ; call rax
0x000000000016f180 : lock xor esp, edi ; call qword ptr [rax]
0x00000000001864e4 : lodsb al, byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax], cl ; cdq ; hlt ; call rcx
0x00000000001867e4 : lodsb al, byte ptr [rsi] ; adc eax, dword ptr [rcx] ; add byte ptr [rax], bh ; lodsd eax, dword ptr [rsi] ; hlt ; call qword ptr [rdx]
0x000000000011eb30 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014b150 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000190135 : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; jo 0x190138 ; jmp qword ptr [rcx]
0x000000000011d603 : lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001892e9 : lodsb al, byte ptr [rsi] ; cmc ; call qword ptr [rdx]
0x0000000000161e5d : lodsb al, byte ptr [rsi] ; idiv bh ; ret
0x000000000017c0e4 : lodsb al, byte ptr [rsi] ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; call 0x2317b01e
0x00000000001816a9 : lodsb al, byte ptr [rsi] ; int1 ; call qword ptr [rsi]
0x00000000001844e4 : lodsb al, byte ptr [rsi] ; lock add byte ptr [rax], al ; call 0x22183836
0x00000000001810e4 : lodsb al, byte ptr [rsi] ; mov esp, 0x29f80000 ; cli ; jmp qword ptr [rdi]
0x000000000011f154 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000015dc3d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000018a5e4 : lodsb al, byte ptr [rsi] ; push rcx ; add dword ptr [rax], eax ; js 0x18a5d8 ; cmc ; jmp qword ptr [rcx]
0x000000000017f31e : lodsb al, byte ptr [rsi] ; ret
0x0000000000062e1a : lodsb al, byte ptr [rsi] ; sar bh, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000001902e4 : lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; cmp byte ptr [rdi - 9], dh ; call rcx
0x000000000017fee4 : lodsb al, byte ptr [rsi] ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; sub byte ptr [rsi - 0x10], bl ; jmp qword ptr [rsi]
0x000000000017e5e4 : lodsb al, byte ptr [rsi] ; xchg eax, ecx ; add byte ptr [rax], al ; test al, -0x60 ; out dx, eax ; call rax
0x0000000000040fe3 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000170aa1 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x11], bh ; jmp rax
0x0000000000173e1d : lodsd eax, dword ptr [rsi] ; clc ; call rax
0x0000000000189369 : lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000000f2587 : lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000186799 : lodsd eax, dword ptr [rsi] ; hlt ; call qword ptr [rdi]
0x00000000001867e9 : lodsd eax, dword ptr [rsi] ; hlt ; call qword ptr [rdx]
0x0000000000186801 : lodsd eax, dword ptr [rsi] ; hlt ; call rdx
0x0000000000161e59 : lodsd eax, dword ptr [rsi] ; idiv bh ; cdq ; lodsb al, byte ptr [rsi] ; idiv bh ; ret
0x0000000000122cc0 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000432a2 : lodsd eax, dword ptr [rsi] ; ret
0x00000000000f533f : lodsd eax, dword ptr [rsi] ; ret 0x2a
0x0000000000186798 : lodsq rax, qword ptr [rsi] ; hlt ; call qword ptr [rdi]
0x000000000010657c : loop 0x10650e ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000112b86 : loop 0x112b18 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000115989 : loop 0x115910 ; ret 0x7401
0x0000000000133f7a : loop 0x133f75 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133f79 : loop 0x133f76 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136a4a : loop 0x136a45 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136a49 : loop 0x136a46 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013956a : loop 0x139565 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000139569 : loop 0x139566 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015dfda : loop 0x15e02f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000016e568 : loop 0x16e50c ; std ; jmp rdx
0x00000000001712c1 : loop 0x1712c9 ; add al, dh ; jo 0x1712bd ; call rax
0x0000000000178759 : loop 0x178748 ; call qword ptr [rcx]
0x0000000000178771 : loop 0x178760 ; call qword ptr [rcx]
0x0000000000178789 : loop 0x178778 ; call qword ptr [rdx]
0x000000000018a111 : loop 0x18a10a ; jmp qword ptr [rcx]
0x000000000018a129 : loop 0x18a122 ; jmp qword ptr [rcx]
0x000000000018a141 : loop 0x18a13a ; jmp qword ptr [rcx]
0x000000000018a171 : loop 0x18a16a ; call qword ptr [rax]
0x0000000000192819 : loop 0x192814 ; jmp qword ptr [rax]
0x000000000019372d : loop 0x193736 ; add byte ptr [rax + 0xb], ah ; clc ; call qword ptr [rdx]
0x00000000000025c5 : loop 0x259f ; ret 0x23cb
0x0000000000036a39 : loop 0x36a63 ; mov rax, rcx ; or rax, rdx ; ret
0x0000000000053a27 : loop 0x53a30 ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x0000000000064753 : loop 0x64759 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000000683a2 : loop 0x68334 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000071434 : loop 0x7143b ; mov eax, edx ; ret
0x0000000000071534 : loop 0x7153b ; mov eax, edx ; ret
0x0000000000090239 : loop 0x90246 ; mov rax, rdi ; jne 0x90255 ; ret
0x000000000009064d : loop 0x90685 ; shr byte ptr [rcx], -0x38 ; ret
0x000000000009609a : loop 0x960a5 ; add byte ptr [rax], al ; ret
0x000000000009a225 : loop 0x9a23f ; movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x000000000009bfa9 : loop 0x9bfb6 ; mov rax, rdi ; jne 0x9bfc5 ; ret
0x000000000009cb41 : loop 0x9cb98 ; lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00000000000ab6b3 : loop 0xab707 ; mov esi, edi ; call 0x67916
0x00000000000c893c : loop 0xc8948 ; xor esi, esi ; call 0x854f8
0x0000000000100a8b : loope 0x100a70 ; sub dword ptr [rax], eax ; ret
0x000000000010e41e : loope 0x10e3b3 ; ret
0x000000000010ff2f : loope 0x10ff43 ; ret 0x8d49
0x0000000000133eea : loope 0x133ee5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133ee9 : loope 0x133ee6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001369ba : loope 0x1369b5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001369b9 : loope 0x1369b6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001394da : loope 0x1394d5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001394d9 : loope 0x1394d6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000141feb : loope 0x141ff2 ; add byte ptr [rax], al ; ret
0x0000000000149e7b : loope 0x149e85 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000015fe6d : loope 0x15fe6e ; call qword ptr [rax]
0x00000000001629c9 : loope 0x1629d3 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000016e819 : loope 0x16e81c ; inc dword ptr [rax - 0x1d] ; sti ; call rax
0x000000000016e818 : loope 0x16e81d ; inc dword ptr [rax - 0x1d] ; sti ; call rax
0x000000000016e839 : loope 0x16e838 ; call qword ptr [rax]
0x000000000016e8dd : loope 0x16e8e0 ; push qword ptr [rax - 0x2c] ; sti ; jmp qword ptr [rax]
0x0000000000171c85 : loope 0x171c7b ; call rax
0x0000000000173de1 : loope 0x173dea ; add byte ptr [rax - 0x5c], ah ; clc ; call rax
0x00000000001786a1 : loope 0x178690 ; call qword ptr [rdx]
0x00000000001786a0 : loope 0x178691 ; call qword ptr [rdx]
0x00000000001786b9 : loope 0x1786a8 ; call qword ptr [rcx]
0x00000000001786b8 : loope 0x1786a9 ; call qword ptr [rcx]
0x000000000018a009 : loope 0x18a002 ; jmp qword ptr [rcx]
0x000000000018a021 : loope 0x18a01a ; jmp qword ptr [rcx]
0x000000000018a0b1 : loope 0x18a0aa ; call qword ptr [rcx]
0x000000000018a0f9 : loope 0x18a0f2 ; jmp qword ptr [rcx]
0x0000000000042936 : loope 0x428f6 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000042a16 : loope 0x429d6 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000043137 : loope 0x43189 ; mov dword ptr [rdi], ecx ; ret
0x0000000000043168 : loope 0x431bb ; mov dword ptr [rdi - 8], ecx ; ret
0x00000000000431dd : loope 0x43230 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000058825 : loope 0x5882b ; inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x0000000000071331 : loope 0x71306 ; mov dword ptr [rdi], ecx ; ret
0x000000000008ab5b : loope 0x8ab6d ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x000000000008adcb : loope 0x8addd ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000000998a9 : loope 0x99918 ; nop dword ptr [rax + rax] ; ret
0x000000000009a267 : loope 0x9a228 ; or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000009a37e : loope 0x9a375 ; ret
0x000000000009b51e : loope 0x9b533 ; je 0x9b544 ; ret
0x00000000000a823c : loope 0xa824d ; sub rcx, rax ; lea rax, qword ptr [r8 + rcx] ; ret
0x00000000000b3d2d : loope 0xb3cba ; ret 0xf631
0x00000000000c54d1 : loope 0xc54d6 ; add esi, esi ; ret
0x00000000000c8a73 : loope 0xc8a78 ; add esi, esi ; ret
0x00000000000ca36f : loope 0xca374 ; add esi, esi ; ret 0xf04
0x0000000000102d64 : loopne 0x102d63 ; add eax, 0x10 ; ret
0x00000000001031e8 : loopne 0x10324e ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000001032f0 : loopne 0x1032e7 ; ret
0x0000000000103291 : loopne 0x1032f7 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000103adb : loopne 0x103ae8 ; cdqe ; shr rax, 4 ; ret
0x0000000000107c8b : loopne 0x107c98 ; sub eax, 1 ; pop r13 ; pop r14 ; ret
0x00000000001124fb : loopne 0x112549 ; mov esi, ebx ; call qword ptr [rax]
0x0000000000112910 : loopne 0x11291d ; sub eax, 1 ; add rsp, 0x18 ; ret
0x00000000001132a7 : loopne 0x1132b0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000116761 : loopne 0x1167d1 ; nop dword ptr [rax + rax] ; ret
0x000000000011d151 : loopne 0x11d157 ; add byte ptr [rax], al ; jmp rax
0x000000000011d182 : loopne 0x11d188 ; add byte ptr [rax], al ; jmp rax
0x0000000000126e22 : loopne 0x126def ; jp 0x126eab ; jp 0x126e1e ; ret
0x0000000000127312 : loopne 0x1272df ; jp 0x12739b ; jp 0x12730e ; ret
0x00000000001276b5 : loopne 0x127682 ; jp 0x12773e ; jp 0x1276b1 ; ret
0x000000000012a8f1 : loopne 0x12a908 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a8f0 : loopne 0x12a909 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012aa41 : loopne 0x12aa58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012aa40 : loopne 0x12aa59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ab91 : loopne 0x12aba8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ab90 : loopne 0x12aba9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ace1 : loopne 0x12acf8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ace0 : loopne 0x12acf9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ae31 : loopne 0x12ae48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ae30 : loopne 0x12ae49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012af81 : loopne 0x12af98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012af80 : loopne 0x12af99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b0d1 : loopne 0x12b0e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b0d0 : loopne 0x12b0e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b21f : loopne 0x12b236 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b21e : loopne 0x12b237 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b371 : loopne 0x12b388 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b370 : loopne 0x12b389 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b4c1 : loopne 0x12b4d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b4c0 : loopne 0x12b4d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b611 : loopne 0x12b628 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b610 : loopne 0x12b629 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b761 : loopne 0x12b778 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b760 : loopne 0x12b779 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b8b1 : loopne 0x12b8c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b8b0 : loopne 0x12b8c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ba01 : loopne 0x12ba18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ba00 : loopne 0x12ba19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012bb51 : loopne 0x12bb68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012bb50 : loopne 0x12bb69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d2c1 : loopne 0x12d2d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d2c0 : loopne 0x12d2d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d411 : loopne 0x12d428 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d410 : loopne 0x12d429 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d561 : loopne 0x12d578 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d560 : loopne 0x12d579 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d6b1 : loopne 0x12d6c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d6b0 : loopne 0x12d6c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d801 : loopne 0x12d818 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d800 : loopne 0x12d819 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d951 : loopne 0x12d968 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d950 : loopne 0x12d969 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012daa1 : loopne 0x12dab8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012daa0 : loopne 0x12dab9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012dbef : loopne 0x12dc06 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012dbee : loopne 0x12dc07 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012dd41 : loopne 0x12dd58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012dd40 : loopne 0x12dd59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012de91 : loopne 0x12dea8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012de90 : loopne 0x12dea9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012dfe1 : loopne 0x12dff8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012dfe0 : loopne 0x12dff9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012e131 : loopne 0x12e148 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012e130 : loopne 0x12e149 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012e281 : loopne 0x12e298 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012e280 : loopne 0x12e299 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012e3d1 : loopne 0x12e3e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012e3d0 : loopne 0x12e3e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012e521 : loopne 0x12e538 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012e520 : loopne 0x12e539 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fc91 : loopne 0x12fca8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fc90 : loopne 0x12fca9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fde1 : loopne 0x12fdf8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fde0 : loopne 0x12fdf9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ff31 : loopne 0x12ff48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ff30 : loopne 0x12ff49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130081 : loopne 0x130098 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130080 : loopne 0x130099 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001301d1 : loopne 0x1301e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001301d0 : loopne 0x1301e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130321 : loopne 0x130338 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130320 : loopne 0x130339 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130471 : loopne 0x130488 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130470 : loopne 0x130489 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001305bf : loopne 0x1305d6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001305be : loopne 0x1305d7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130711 : loopne 0x130728 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130710 : loopne 0x130729 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130861 : loopne 0x130878 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130860 : loopne 0x130879 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001309b1 : loopne 0x1309c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001309b0 : loopne 0x1309c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130b01 : loopne 0x130b18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130b00 : loopne 0x130b19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130c51 : loopne 0x130c68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130c50 : loopne 0x130c69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130da1 : loopne 0x130db8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130da0 : loopne 0x130db9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130ef1 : loopne 0x130f08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130ef0 : loopne 0x130f09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000014be95 : loopne 0x14bee6 ; sub eax, edx ; vzeroupper ; ret
0x000000000014be94 : loopne 0x14bee7 ; sub eax, edx ; vzeroupper ; ret
0x000000000015b5b4 : loopne 0x15b594 ; cld ; test al, -0x69 ; xchg eax, esp ; ret
0x000000000015fc48 : loopne 0x15fc86 ; call qword ptr [rax]
0x000000000015fcfc : loopne 0x15fcb6 ; inc dword ptr [rax] ; mov dl, -0xe ; jmp qword ptr [rax]
0x000000000015ff04 : loopne 0x15ff6b ; inc dword ptr [rax] ; pop rdi ; jmp qword ptr [rax]
0x000000000015ff78 : loopne 0x15ffdf ; call qword ptr [rax]
0x000000000015ffc8 : loopne 0x160034 ; inc dword ptr [rax] ; call qword ptr fs:[rax]
0x000000000015ffec : loopne 0x160059 ; inc dword ptr [rax] ; jmp qword ptr gs:[rax]
0x00000000001600ec : loopne 0x160168 ; inc dword ptr [rax] ; je 0x1600ed ; jmp qword ptr [rax]
0x0000000000160124 : loopne 0x16019e ; call qword ptr [rax]
0x0000000000160184 : loopne 0x160205 ; inc dword ptr [rax] ; jns 0x160185 ; jmp qword ptr [rax]
0x00000000001612b0 : loopne 0x161332 ; cmc ; jmp rax
0x00000000001612b4 : loopne 0x16133a ; cmc ; inc eax ; jge 0x1612b7 ; call rax
0x0000000000161a48 : loopne 0x161a4a ; cmc ; push qword ptr [rax] ; cli ; cmc ; call qword ptr [rax]
0x0000000000162f78 : loopne 0x162ffb ; cli ; call rax
0x000000000016e434 : loopne 0x16e450 ; sti ; call rax
0x000000000016e4f8 : loopne 0x16e56d ; sti ; push qword ptr [rax + 0x59] ; sti ; call qword ptr [rax]
0x000000000016e854 : loopne 0x16e837 ; sti ; jmp rax
0x000000000016e858 : loopne 0x16e83d ; sti ; jmp rax
0x000000000016e859 : loopne 0x16e858 ; jmp rax
0x000000000016e8d4 : loopne 0x16e8b6 ; sti ; jmp rax
0x000000000016e8b9 : loopne 0x16e8b8 ; jmp qword ptr [rax]
0x000000000016e8d4 : loopne 0x16e8ba ; sti ; jmp rax
0x000000000016e8d8 : loopne 0x16e8bc ; sti ; jmp rax
0x000000000016e8dc : loopne 0x16e8c6 ; sti ; push qword ptr [rax - 0x2c] ; sti ; jmp qword ptr [rax]
0x000000000016e93c : loopne 0x16e912 ; sti ; jmp qword ptr [rax]
0x000000000016eaac : loopne 0x16eab2 ; cld ; call rax
0x000000000016f438 : loopne 0x16f4c0 ; cld ; push qword ptr [rax + 0x7f] ; cld ; call qword ptr [rax]
0x000000000016f6bc : loopne 0x16f72e ; cld ; jmp qword ptr [rax]
0x0000000000170400 : loopne 0x17038d ; add byte ptr [rax], al ; loopne 0x17045b ; in al, dx ; call qword ptr [rax]
0x0000000000170404 : loopne 0x170457 ; in al, dx ; call qword ptr [rax]
0x0000000000170574 : loopne 0x1705ec ; in al, dx ; call qword ptr [rax]
0x0000000000171408 : loopne 0x1713f9 ; add byte ptr [rax], al ; nop ; xchg eax, esi ; call qword ptr [rax]
0x0000000000171638 : loopne 0x17163a ; add byte ptr [rax], al ; add byte ptr [rax], al ; int1 ; jmp qword ptr [rax]
0x0000000000171764 : loopne 0x1717b7 ; int1 ; call rax
0x0000000000171ddc : loopne 0x171d63 ; jmp qword ptr [rax]
0x00000000001720ac : loopne 0x172100 ; hlt ; jmp qword ptr [rax]
0x00000000001724f0 : loopne 0x172551 ; add dword ptr [rax], eax ; sar byte ptr [rcx], -0xb ; jmp qword ptr [rax]
0x0000000000172604 : loopne 0x1725f8 ; cmc ; jmp rax
0x0000000000173904 : loopne 0x17394f ; clc ; call rax
0x00000000001739a8 : loopne 0x17397a ; add dword ptr [rax], eax ; loopne 0x1739ff ; clc ; call qword ptr [rax]
0x00000000001739ac : loopne 0x1739fb ; clc ; call qword ptr [rax]
0x0000000000173c2c : loopne 0x173ca8 ; clc ; call rax
0x0000000000173e1c : loopne 0x173dce ; clc ; call rax
0x0000000000173eb4 : loopne 0x173e80 ; clc ; call qword ptr [rax]
0x0000000000173fc4 : loopne 0x173fc3 ; clc ; call rax
0x000000000017457c : loopne 0x174542 ; stc ; jmp qword ptr [rax]
0x0000000000174888 : loopne 0x1748bf ; add al, byte ptr [rax] ; and byte ptr [rdx], 0xfa ; call qword ptr [rax]
0x0000000000174974 : loopne 0x1749ae ; cli ; jmp rax
0x0000000000174b1c : loopne 0x174b76 ; cli ; call qword ptr [rax]
0x0000000000174d94 : loopne 0x174d24 ; cli ; call rax
0x0000000000174e2c : loopne 0x174dd9 ; cli ; call qword ptr [rax]
0x0000000000174d5c : loopne 0x174dd9 ; cli ; jmp rax
0x0000000000178d90 : loopne 0x178d87 ; jmp 0x178d96
0x0000000000178dc0 : loopne 0x178db7 ; jmp 0x178dc6
0x0000000000178df0 : loopne 0x178de7 ; jmp 0x178df6
0x0000000000179410 : loopne 0x17945a ; cli ; jmp qword ptr [rcx]
0x0000000000179500 : loopne 0x179577 ; in al, dx ; call rsi
0x000000000017e1f0 : loopne 0x17e188 ; out dx, eax ; jmp qword ptr [rax]
0x000000000018347d : loopne 0x183485 ; add byte ptr [rax + 7], dl ; call qword ptr [rsi]
0x000000000018347c : loopne 0x183486 ; add byte ptr [rax + 7], dl ; call qword ptr [rsi]
0x0000000000183495 : loopne 0x18349d ; add byte ptr [rax + 7], bl ; call qword ptr [rbx]
0x00000000001834ad : loopne 0x1834b5 ; add byte ptr [rax + 7], ah ; call qword ptr [rbx]
0x0000000000187170 : loopne 0x1871dd ; stc ; call qword ptr [rax]
0x0000000000195520 : loopne 0x19559a ; clc ; call qword ptr [rdi]
0x0000000000195640 : loopne 0x1956ba ; clc ; call rcx
0x000000000001ccd9 : loopne 0x1cce9 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x39
0x000000000001cea1 : loopne 0x1ceb1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret 0x39
0x000000000002ca03 : loopne 0x2ca12 ; movzx eax, ax ; ret
0x000000000002ca43 : loopne 0x2ca4c ; movzx eax, ax ; ret
0x000000000002cae3 : loopne 0x2caee ; movzx eax, ax ; ret
0x000000000002cbc3 : loopne 0x2cbc8 ; ret
0x000000000002cc3c : loopne 0x2cc41 ; ret
0x000000000002cc4c : loopne 0x2cc5b ; movzx eax, ax ; ret
0x000000000002cc8c : loopne 0x2cc95 ; movzx eax, ax ; ret
0x000000000002cc13 : loopne 0x2cc96 ; ret
0x000000000002cd2c : loopne 0x2cd37 ; movzx eax, ax ; ret
0x0000000000032eac : loopne 0x32e5e ; adc eax, dword ptr [rax] ; orpd xmm0, xmm1 ; ret
0x00000000000334e5 : loopne 0x334f1 ; ret
0x0000000000034544 : loopne 0x34594 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000042c5d : loopne 0x42c66 ; sub eax, 1 ; ret
0x000000000004f0f8 : loopne 0x4f133 ; add byte ptr [rax + 0x63], cl ; ret 0x8948
0x000000000004f0f7 : loopne 0x4f134 ; add byte ptr [rax + 0x63], cl ; ret 0x8948
0x00000000000630d0 : loopne 0x630d6 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000068f3d : loopne 0x68fab ; nop ; mov qword ptr [rdi], rcx ; ret
0x0000000000069ae6 : loopne 0x69b4d ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006a2cf : loopne 0x6a2d5 ; add byte ptr [rax], al ; jmp rax
0x000000000006a2fb : loopne 0x6a301 ; add byte ptr [rax], al ; call rax
0x000000000006a33d : loopne 0x6a343 ; add byte ptr [rax], al ; call rax
0x000000000006a37f : loopne 0x6a385 ; add byte ptr [rax], al ; jmp rax
0x000000000006e6be : loopne 0x6e657 ; mov eax, 0xffffffff ; ret
0x000000000006e7bd : loopne 0x6e82d ; nop ; mov eax, 0xffffffff ; ret
0x0000000000073626 : loopne 0x7362b ; ret
0x0000000000073636 : loopne 0x7363b ; ret
0x0000000000074799 : loopne 0x74800 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000074847 : loopne 0x748ae ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000075272 : loopne 0x7527b ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000076e45 : loopne 0x76ea9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007f2e3 : loopne 0x7f349 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000855af : loopne 0x855a6 ; ret
0x000000000008c927 : loopne 0x8c97d ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008c92a : loopne 0x8c98c ; pop rbp ; pop r12 ; ret
0x000000000009619c : loopne 0x961a6 ; add byte ptr [rax], al ; ret
0x000000000009a25d : loopne 0x9a277 ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000b8970 : loopne 0xb89d6 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000c07ee : loopne 0xc07f9 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c540d : loopne 0xc5413 ; ret
0x00000000000c5421 : loopne 0xc542a ; add eax, 8 ; ret
0x00000000000cb6ad : loopne 0xcb71e ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000d4a45 : loopne 0xd4a58 ; ret
0x00000000000e1a3c : loopne 0xe1a9e ; pop rbp ; pop r12 ; ret
0x00000000000e6f56 : loopne 0xe6fbc ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000eafc0 : loopne 0xeafcc ; nop word ptr [rax + rax] ; ret
0x00000000000eafe2 : loopne 0xeaff1 ; movzx eax, ax ; ret
0x00000000000eb060 : loopne 0xeb06c ; nop word ptr [rax + rax] ; ret
0x00000000000eb100 : loopne 0xeb10c ; nop word ptr [rax + rax] ; ret
0x00000000000eb122 : loopne 0xeb127 ; ret
0x00000000000eb1a0 : loopne 0xeb1ac ; nop word ptr [rax + rax] ; ret
0x00000000000eb1c2 : loopne 0xeb1cb ; movzx eax, ax ; ret
0x00000000000eb240 : loopne 0xeb24c ; nop word ptr [rax + rax] ; ret
0x00000000000eb2d0 : loopne 0xeb2dc ; nop word ptr [rax + rax] ; ret
0x00000000000eb370 : loopne 0xeb37c ; nop word ptr [rax + rax] ; ret
0x00000000000eb410 : loopne 0xeb41c ; nop word ptr [rax + rax] ; ret
0x00000000000eb4b0 : loopne 0xeb4bc ; nop word ptr [rax + rax] ; ret
0x00000000000eb4d2 : loopne 0xeb4dd ; movzx eax, ax ; ret
0x00000000000eb550 : loopne 0xeb55c ; nop word ptr [rax + rax] ; ret
0x00000000000eb5eb : loopne 0xeb5f4 ; nop dword ptr [rax] ; ret
0x00000000000eb690 : loopne 0xeb69c ; nop word ptr [rax + rax] ; ret
0x00000000000eb86a : loopne 0xeb874 ; nop dword ptr [rax] ; ret
0x00000000000eb9c2 : loopne 0xeb9cc ; nop dword ptr [rax] ; ret
0x00000000000eb9db : loopne 0xeb9ea ; movzx eax, ax ; ret
0x00000000000eba52 : loopne 0xeba5c ; nop dword ptr [rax] ; ret
0x00000000000ebae2 : loopne 0xebaec ; nop dword ptr [rax] ; ret
0x00000000000ebafb : loopne 0xebb00 ; ret
0x00000000000ebb62 : loopne 0xebb6c ; nop dword ptr [rax] ; ret
0x00000000000ebb7b : loopne 0xebb84 ; movzx eax, ax ; ret
0x00000000000ebbf2 : loopne 0xebbfc ; nop dword ptr [rax] ; ret
0x00000000000ebc72 : loopne 0xebc7c ; nop dword ptr [rax] ; ret
0x00000000000ebd02 : loopne 0xebd0c ; nop dword ptr [rax] ; ret
0x00000000000ebd92 : loopne 0xebd9c ; nop dword ptr [rax] ; ret
0x00000000000ebe22 : loopne 0xebe2c ; nop dword ptr [rax] ; ret
0x00000000000ebe3b : loopne 0xebe46 ; movzx eax, ax ; ret
0x00000000000ebeb2 : loopne 0xebebc ; nop dword ptr [rax] ; ret
0x00000000000ebfd2 : loopne 0xebfdc ; nop dword ptr [rax] ; ret
0x00000000000ec18a : loopne 0xec194 ; nop dword ptr [rax] ; ret
0x00000000000f216c : loopne 0xf2171 ; dec dword ptr [rcx] ; ret
0x00000000000f434b : loopne 0xf4350 ; ret
0x00000000000f4a78 : loopne 0xf4a8d ; cmp eax, 4 ; je 0xf4a87 ; ret
0x00000000000f4c49 : loopne 0xf4c5c ; pop rbp ; pop r12 ; ret
0x0000000000183fec : mov ah, -0x15 ; add byte ptr [rax], al ; sal byte ptr [rdx], -0xd ; call qword ptr [rdx]
0x000000000016feb5 : mov ah, -0x15 ; jmp rax
0x00000000001903ec : mov ah, -0x51 ; add dword ptr [rax], eax ; rcr bl ; clc ; call qword ptr [rax]
0x000000000016f8a0 : mov ah, -0x58 ; cld ; inc dword ptr [rax + rbp*4 - 4] ; call rsp
0x000000000015b470 : mov ah, -0x5b ; ret
0x000000000017e1ec : mov ah, -0x73 ; add byte ptr [rax], al ; loopne 0x17e18c ; out dx, eax ; jmp qword ptr [rax]
0x000000000016f3a8 : mov ah, -0x7f ; cld ; inc dword ptr [rcx + rax*4 - 4] ; call rsp
0x000000000017297d : mov ah, -0xa ; jmp qword ptr [rax]
0x00000000001609c5 : mov ah, -0xc ; call qword ptr [rdx - 0x2b000b4c]
0x00000000001609c9 : mov ah, -0xc ; call rsp
0x000000000005db9d : mov ah, -1 ; inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x0000000000174eed : mov ah, -6 ; call rax
0x00000000001735cd : mov ah, -9 ; call qword ptr [rax]
0x000000000010e4b7 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000015afca : mov ah, 0x13 ; ret
0x00000000001769ec : mov ah, 0x15 ; add byte ptr [rax], al ; xor byte ptr [rdx - 0x15], dl ; call qword ptr [rax]
0x0000000000176dec : mov ah, 0x19 ; add byte ptr [rax], al ; push rax ; pop rsi ; jmp 0x176dfa
0x0000000000030f86 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000040ce3 : mov ah, 0x24 ; rol byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000177bec : mov ah, 0x27 ; add byte ptr [rax], al ; rol cl, 1 ; jmp 0x177bfa
0x00000000000ea404 : mov ah, 0x2e ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000178dec : mov ah, 0x39 ; add byte ptr [rax], al ; loopne 0x178deb ; jmp 0x178dfa
0x00000000001899ec : mov ah, 0x45 ; add dword ptr [rax], eax ; add dl, al ; cmc ; call qword ptr [rax]
0x000000000018a3ec : mov ah, 0x4f ; add dword ptr [rax], eax ; lock in al, -0xb ; jmp qword ptr [rcx]
0x000000000018a6ec : mov ah, 0x52 ; add dword ptr [rax], eax ; add cl, ch ; cmc ; jmp qword ptr [rcx]
0x000000000008a6a8 : mov ah, 0x5f ; add byte ptr [rax], al ; ret
0x0000000000173699 : mov ah, 1 ; add al, al ; ret 0xfff7
0x0000000000173691 : mov ah, 1 ; add byte ptr [rax], dh ; ret 0xfff7
0x000000000005addb : mov ah, 1 ; add byte ptr [rbx - 0x76be0008], al ; ret 0x1875
0x000000000005ada5 : mov ah, 1 ; add byte ptr [rbx - 0x76be0008], al ; ret 0x850f
0x000000000015adc4 : mov ah, bl ; push rsi ; ret
0x00000000000205f2 : mov ah, byte ptr [rdx] ; cmp byte ptr [rax], al ; ret
0x000000000017220d : mov ah, dh ; call qword ptr [rax]
0x0000000000173fc0 : mov al, -0x10 ; add dword ptr [rax], eax ; loopne 0x173fc7 ; clc ; call rax
0x000000000015d276 : mov al, -0x12 ; fcmovb st(0), st(3) ; ret
0x000000000008e178 : mov al, -0x17 ; ret 0xfffb
0x000000000017469c : mov al, -0x19 ; stc ; jmp rax
0x0000000000185730 : mov al, -0x1a ; call qword ptr [rbx]
0x000000000018a4b0 : mov al, -0x1b ; cmc ; jmp qword ptr [rcx]
0x00000000001739a0 : mov al, -0x37 ; add dword ptr [rax], eax ; mov al, 0x4a ; clc ; jmp rax
0x000000000017458c : mov al, -0x3e ; stc ; lcall ptr [rax + 0x2000021b] ; ret
0x0000000000177a00 : mov al, -0x42 ; jmp 0x177a06
0x0000000000189380 : mov al, -0x53 ; cmc ; jmp qword ptr [rcx]
0x000000000016f904 : mov al, -0x55 ; cld ; inc dword ptr [rax - 0x55] ; cld ; call rax
0x0000000000179da0 : mov al, -0x55 ; in al, dx ; jmp qword ptr [rbx]
0x000000000016f72c : mov al, -0x59 ; cld ; inc dword ptr [rax - 0x59] ; cld ; call rax
0x000000000016e670 : mov al, -0x5b ; std ; inc dword ptr [rax - 0x5a] ; std ; jmp rax
0x0000000000173200 : mov al, -0x5d ; add dword ptr [rax], eax ; lock test dh, bh ; jmp rax
0x000000000016f97c : mov al, -0x65 ; cld ; jmp qword ptr [rsi]
0x000000000015fddc : mov al, -0x67 ; cld ; jmp qword ptr [rax]
0x00000000001743fc : mov al, -0x68 ; stc ; call qword ptr [rax]
0x00000000001743c4 : mov al, -0x6c ; stc ; jmp rax
0x0000000000172dc8 : mov al, -0x72 ; add dword ptr [rax], eax ; nop ; sbb esi, edi ; call rax
0x0000000000173d4c : mov al, -0x74 ; clc ; call rax
0x000000000017258c : mov al, -0x75 ; cmc ; jmp rax
0x000000000015fdb0 : mov al, -0x76 ; cld ; call rax
0x00000000001704c0 : mov al, -0x77 ; add byte ptr [rax], al ; xor byte ptr [rdx - 0x14], ch ; jmp rax
0x00000000001703f8 : mov al, -0x7c ; add byte ptr [rax], al ; nop ; in al, dx ; jmp rax
0x000000000016f40c : mov al, -0x7c ; cld ; inc dword ptr [rax - 0x7c] ; cld ; call rax
0x0000000000174d7c : mov al, -0x7e ; cli ; jmp rax
0x000000000015fd90 : mov al, -0x7f ; cld ; call rax
0x00000000001948e0 : mov al, -0x7f ; sti ; jmp qword ptr [rdx]
0x000000000016f234 : mov al, -0x80 ; cld ; inc dword ptr [rax - 0x80] ; cld ; call rax
0x0000000000174090 : mov al, -0xa ; add dword ptr [rax], eax ; push rax ; and cl, bh ; jmp rax
0x000000000017af10 : mov al, -0xd ; out dx, al ; jmp qword ptr [rax]
0x00000000000e19b3 : mov al, -0xd ; ret
0x0000000000171760 : mov al, -1 ; add byte ptr [rax], al ; loopne 0x1717bb ; int1 ; call rax
0x000000000017fe70 : mov al, -1 ; stc ; call qword ptr [rax]
0x000000000018adb0 : mov al, -5 ; cmc ; call qword ptr [rsi]
0x000000000010b56c : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000010b524 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000182010 : mov al, 0x2b ; call qword ptr [rax]
0x0000000000174880 : mov al, 0x2e ; add al, byte ptr [rax] ; lock sbb bh, dl ; jmp rax
0x0000000000111559 : mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000b8fde : mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000000b0c65 : mov al, 0x48 ; add eax, esi ; jmp rax
0x0000000000116758 : mov al, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x00000000001739a4 : mov al, 0x4a ; clc ; jmp rax
0x0000000000172084 : mov al, 0x4b ; hlt ; call qword ptr [rax]
0x000000000002aeab : mov al, 0x4c ; add esi, eax ; jmp rsi
0x0000000000173a5c : mov al, 0x50 ; clc ; jmp qword ptr [rax]
0x0000000000182660 : mov al, 0x53 ; call qword ptr [rsi]
0x0000000000174b0c : mov al, 0x55 ; cli ; jmp rax
0x000000000015feac : mov al, 0x57 ; inc eax ; push rdi ; call rax
0x000000000015fedc : mov al, 0x58 ; call rax
0x000000000015fefc : mov al, 0x59 ; inc eax ; pop rsi ; jmp rax
0x000000000016ef20 : mov al, 0x5c ; cld ; inc dword ptr [rax + 0x5c] ; cld ; call rax
0x0000000000176f70 : mov al, 0x5e ; jmp 0x176f76
0x00000000001829e0 : mov al, 0x5e ; jmp qword ptr [rax]
0x000000000016ed08 : mov al, 0x5f ; cld ; inc dword ptr [rax + 0x5f] ; cld ; call rax
0x000000000017254c : mov al, 0x60 ; cmc ; jmp qword ptr [rax]
0x000000000015ff74 : mov al, 0x62 ; jmp rax
0x0000000000172600 : mov al, 0x64 ; add dword ptr [rax], eax ; loopne 0x1725fc ; cmc ; jmp rax
0x0000000000160030 : mov al, 0x65 ; inc eax ; call rax
0x00000000001871b0 : mov al, 0x68 ; stc ; call qword ptr [rax]
0x00000000001726a0 : mov al, 0x69 ; add dword ptr [rax], eax ; lock adc al, -0xa ; call rax
0x000000000015fc68 : mov al, 0x6f ; inc eax ; jno 0x15fc68 ; call rax
0x000000000017428c : mov al, 0x6f ; stc ; call rax
0x000000000016f678 : mov al, 0x75 ; cld ; jmp qword ptr [rax]
0x000000000016f474 : mov al, 0x76 ; cld ; jmp qword ptr [rax]
0x0000000000172184 : mov al, 0x76 ; hlt ; jmp rax
0x00000000001601c0 : mov al, 0x7a ; call rax
0x0000000000177210 : mov al, 0x7a ; jmp 0x177216
0x00000000001601e0 : mov al, 0x7b ; call rax
0x0000000000160204 : mov al, 0x7b ; inc eax ; jnp 0x160205 ; call rax
0x00000000001612a8 : mov al, 0x7d ; cmc ; push qword ptr [rax + 0x7d] ; cmc ; jmp rax
0x00000000000dde48 : mov al, 0xa ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000201d2 : mov al, 0xb ; add byte ptr [rcx], bh ; ret
0x000000000005b25c : mov al, 1 ; add byte ptr [rbx - 0x76be0008], al ; ret 0x850f
0x00000000001709bc : mov al, 1 ; out dx, al ; call qword ptr [rax]
0x0000000000115ebf : mov al, 1 ; ret
0x00000000000961cc : mov al, 4 ; add byte ptr [rax], al ; ret
0x0000000000095dcc : mov al, 8 ; add byte ptr [rax], al ; ret
0x000000000006a1f8 : mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x00000000000773e6 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; mov rbp, qword ptr [rbx + 8] ; jmp 0x773bc
0x00000000000eb949 : mov al, byte ptr [rbx] ; add al, 0x16 ; ret
0x00000000000922fb : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000092329 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000923ad : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000018de4d : mov al, byte ptr [rcx] ; add al, al ; ret
0x00000000001443a0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000922d5 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000189df8 : mov al, dl ; cmc ; jmp rax
0x00000000000b8c5c : mov ax, 0xfde8 ; jne 0xb8c32 ; ret
0x00000000000922e5 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000f8bfc : mov bh, -0x3a ; or eax, edi ; bswap eax ; ret
0x000000000002ca06 : mov bh, -0x40 ; ret
0x000000000009b2a5 : mov bh, -0x42 ; or al, byte ptr [rax] ; ret
0x000000000015c2a4 : mov bh, -0x4c ; mov edi, dword ptr [rdx] ; ret
0x0000000000002bc8 : mov bh, -0x4f ; or cl, cl ; clc ; ret
0x0000000000160909 : mov bh, -0xc ; jmp rsi
0x0000000000171f15 : mov bh, -0xd ; call qword ptr [rax]
0x0000000000171f05 : mov bh, -0xd ; jmp rax
0x0000000000181959 : mov bh, -0xf ; call qword ptr [rax]
0x0000000000181971 : mov bh, -0xf ; call qword ptr [rdx]
0x0000000000181941 : mov bh, -0xf ; jmp qword ptr [rax]
0x0000000000049239 : mov bh, -1 ; dec dword ptr [rax - 0x77] ; ret 0x24eb
0x00000000000e98a3 : mov bh, -1 ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000000374c : mov bh, -6 ; add ebx, ebp ; in al, -0x12 ; jne 0x3736 ; ret 0x975
0x0000000000170be1 : mov bh, 0 ; add byte ptr [rax - 0x45], al ; out dx, eax ; jmp rax
0x0000000000134cb1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000b3807 : mov bh, 0x40 ; adc byte ptr [rax + 1], cl ; ret 0x8349
0x00000000000b3c87 : mov bh, 0x43 ; adc byte ptr [rax + rcx*4 + 0x73], al ; adc cl, byte ptr [rax + 1] ; ret
0x0000000000029445 : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1376
0x0000000000031a7e : mov bh, 0x48 ; add edx, edi ; jmp rdx
0x0000000000149d18 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000000a9665 : mov bh, 0x4d ; ret 0xc06b
0x00000000000a91f6 : mov bh, 0x7d ; ret 0xb70f
0x0000000000190ba5 : mov bh, 1 ; add al, cl ; test dh, bh ; jmp qword ptr [rbx]
0x000000000002c9ff : mov bh, 4 ; js 0x2c98f ; loopne 0x2ca16 ; movzx eax, ax ; ret
0x000000000002ca3f : mov bh, 4 ; js 0x2c9cf ; loopne 0x2ca50 ; movzx eax, ax ; ret
0x000000000002cadf : mov bh, 4 ; js 0x2ca6f ; loopne 0x2caf2 ; movzx eax, ax ; ret
0x000000000002cbbf : mov bh, 4 ; js 0x2cb4c ; loopne 0x2cbcc ; ret
0x000000000002cc38 : mov bh, 4 ; js 0x2cbc5 ; loopne 0x2cc45 ; ret
0x000000000002cc48 : mov bh, 4 ; js 0x2cbd8 ; loopne 0x2cc5f ; movzx eax, ax ; ret
0x000000000002cc88 : mov bh, 4 ; js 0x2cc18 ; loopne 0x2cc99 ; movzx eax, ax ; ret
0x000000000002cd28 : mov bh, 4 ; js 0x2ccb8 ; loopne 0x2cd3b ; movzx eax, ax ; ret
0x00000000000eafde : mov bh, 4 ; js 0xeaf6e ; loopne 0xeaff5 ; movzx eax, ax ; ret
0x00000000000eb11e : mov bh, 4 ; js 0xeb0ab ; loopne 0xeb12b ; ret
0x00000000000eb1be : mov bh, 4 ; js 0xeb14e ; loopne 0xeb1cf ; movzx eax, ax ; ret
0x00000000000eb4ce : mov bh, 4 ; js 0xeb45e ; loopne 0xeb4e1 ; movzx eax, ax ; ret
0x00000000000eb9d7 : mov bh, 4 ; js 0xeb967 ; loopne 0xeb9ee ; movzx eax, ax ; ret
0x00000000000ebaf7 : mov bh, 4 ; js 0xeba84 ; loopne 0xebb04 ; ret
0x00000000000ebb77 : mov bh, 4 ; js 0xebb07 ; loopne 0xebb88 ; movzx eax, ax ; ret
0x00000000000ebe37 : mov bh, 4 ; js 0xebdc7 ; loopne 0xebe4a ; movzx eax, ax ; ret
0x000000000015d9b3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000da241 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000015fdb1 : mov bh, ah ; call rax
0x000000000018aa88 : mov bh, ch ; cmc ; jmp qword ptr [rcx]
0x0000000000173285 : mov bh, dh ; call rax
0x0000000000001b0f : mov bl, -0x12 ; enter 0x59e7, 0x5b ; ret 0x2a63
0x000000000015d383 : mov bl, -0x72 ; ret 0xdcd9
0x000000000006ae57 : mov bl, -0x78 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x5e8b
0x000000000018dad1 : mov bl, -0xa ; call qword ptr [rcx]
0x000000000017293d : mov bl, -0xa ; jmp qword ptr [rax]
0x0000000000003aa5 : mov bl, -9 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000001735bd : mov bl, -9 ; jmp rax
0x000000000014b60e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015e688 : mov bl, 0x16 ; add byte ptr [rax], al ; ret 0x16
0x000000000009d09c : mov bl, 0x48 ; mov eax, edx ; ret
0x0000000000031c94 : mov bl, 0x4c ; add esi, ebx ; jmp rsi
0x000000000018a858 : mov bl, ch ; cmc ; jmp qword ptr [rcx]
0x000000000018db50 : mov bpl, -0xa ; jmp rdx
0x000000000010530c : mov byte ptr [r11], 0 ; ret
0x000000000004063f : mov byte ptr [r8 + rdx], 0 ; ret
0x0000000000073104 : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000090189 : mov byte ptr [r9 + 1], 0 ; ret
0x00000000000d0106 : mov byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000103ab2 : mov byte ptr [rax + 3], ch ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004496e : mov byte ptr [rax + 8], 0 ; ret
0x0000000000040640 : mov byte ptr [rax + rdx], 0 ; ret
0x0000000000077efc : mov byte ptr [rax + rsi], bh ; ret
0x0000000000077efb : mov byte ptr [rax + rsi], dil ; ret
0x0000000000073105 : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000025653 : mov byte ptr [rax - 0x8fffffe], ch ; ret 0xf800
0x00000000000c8db9 : mov byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000118511 : mov byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000f07fe : mov byte ptr [rax], 0x20 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000206af : mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x00000000000f07df : mov byte ptr [rax], 0xa ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e5d8e : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017dd2d : mov byte ptr [rax], al ; add byte ptr [rax - 0x77], dh ; out dx, eax ; call qword ptr [rcx]
0x00000000000340e4 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000113b07 : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000175349 : mov byte ptr [rax], al ; add byte ptr [rax], dh ; leave ; std ; jmp rax
0x0000000000073656 : mov byte ptr [rax], bh ; movzx eax, dil ; ret
0x0000000000174780 : mov byte ptr [rax], ch ; add al, byte ptr [rax] ; jo 0x17478c ; stc ; call rax
0x0000000000094f22 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000073655 : mov byte ptr [rax], dil ; movzx eax, dil ; ret
0x0000000000170838 : mov byte ptr [rbp + 0x34c00000], bl ; in eax, dx ; jmp qword ptr [rax]
0x0000000000172560 : mov byte ptr [rbp + 1], bl ; add byte ptr [rax + 0x6a], al ; cmc ; call rax
0x0000000000170960 : mov byte ptr [rbp - 0xd400000], ah ; in eax, dx ; call rax
0x00000000000e17a6 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x000000000010530d : mov byte ptr [rbx], 0 ; ret
0x0000000000002f62 : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000c0867 : mov byte ptr [rcx + 0xf], -0x6c ; ret 0xf631
0x000000000009018a : mov byte ptr [rcx + 1], 0 ; ret
0x0000000000142063 : mov byte ptr [rcx + 2], dl ; ret
0x0000000000142082 : mov byte ptr [rcx + 4], dl ; ret
0x00000000001420c3 : mov byte ptr [rcx + 8], dl ; ret
0x000000000008f653 : mov byte ptr [rcx + rax - 0x38], cl ; jmp rax
0x000000000004c4bd : mov byte ptr [rcx - 0x77], cl ; ret
0x00000000000e2b2b : mov byte ptr [rcx - 1], 0 ; ret
0x000000000009032c : mov byte ptr [rcx], 0 ; cmp rcx, rdx ; jne 0x90331 ; ret
0x000000000008fa24 : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x000000000008f950 : mov byte ptr [rcx], 0 ; mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x0000000000031491 : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000102d42 : mov byte ptr [rcx], 0x31 ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x00000000000c1ab8 : mov byte ptr [rcx], 0x39 ; ret 0xe37c
0x000000000005d9fa : mov byte ptr [rcx], al ; add byte ptr [rbx - 0x76be0008], al ; ret 0x850f
0x0000000000090367 : mov byte ptr [rcx], al ; jne 0x90355 ; ret
0x000000000017fd88 : mov byte ptr [rcx], al ; ret
0x0000000000142040 : mov byte ptr [rcx], dl ; ret
0x0000000000090366 : mov byte ptr [rcx], r8b ; jne 0x90356 ; ret
0x000000000009959a : mov byte ptr [rdi + 0x10], ch ; ret
0x0000000000097b3b : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009635b : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000995ab : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x0000000000096cf8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000095688 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000995b0 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000995d2 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000995f0 : mov byte ptr [rdi + 0x13], ch ; ret
0x0000000000099610 : mov byte ptr [rdi + 0x14], ch ; ret
0x0000000000096d6e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000956de : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000097bc1 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000963b1 : mov byte ptr [rdi + 0x14], dl ; ret
0x0000000000099631 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000099636 : mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000099652 : mov byte ptr [rdi + 0x16], ch ; ret
0x0000000000099672 : mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000099692 : mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000097c43 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000096433 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000996b3 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x0000000000096df0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000095760 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000996b8 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000996da : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000996f8 : mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000099718 : mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000099734 : mov byte ptr [rdi + 0x1d], ch ; ret
0x0000000000099754 : mov byte ptr [rdi + 0x1e], ch ; ret
0x0000000000099774 : mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000099794 : mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000096535 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000997b5 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000997ba : mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009980a : mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000994e0 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000994fe : mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009951e : mov byte ptr [rdi + 0xc], ch ; ret
0x0000000000099540 : mov byte ptr [rdi + 0xd], ch ; ret
0x0000000000099560 : mov byte ptr [rdi + 0xe], ch ; ret
0x0000000000099580 : mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000099416 : mov byte ptr [rdi + 1], ch ; ret
0x00000000001036e2 : mov byte ptr [rdi + 1], dh ; ret
0x00000000001036e1 : mov byte ptr [rdi + 1], sil ; ret
0x000000000008f693 : mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000008f603 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x0000000000099428 : mov byte ptr [rdi + 2], ch ; ret
0x0000000000096ba6 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000955a6 : mov byte ptr [rdi + 2], dh ; ret
0x00000000000979c9 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000096279 : mov byte ptr [rdi + 2], dl ; ret
0x0000000000099439 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009943e : mov byte ptr [rdi + 3], ch ; ret
0x000000000008f6b2 : mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000008f622 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x0000000000099456 : mov byte ptr [rdi + 4], ch ; ret
0x00000000000a6734 : mov byte ptr [rdi + 4], cl ; add byte ptr [rbp + 0x29dc75db], al ; ret
0x0000000000096bc2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000955c2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000979f7 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000096297 : mov byte ptr [rdi + 4], dl ; ret
0x0000000000099467 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009946c : mov byte ptr [rdi + 5], ch ; ret
0x000000000008f639 : mov byte ptr [rdi + 6], 0 ; ret
0x000000000009947e : mov byte ptr [rdi + 6], ch ; ret
0x000000000009949c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000c0550 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000c0511 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000c0580 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000c05a7 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000c05f0 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000c05dd : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000c0540 : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000c0520 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000994a8 : mov byte ptr [rdi + 8], ch ; ret
0x0000000000095603 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000097a49 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000962d9 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000994b9 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000994be : mov byte ptr [rdi + 9], ch ; ret
0x00000000001036ab : mov byte ptr [rdi + rsi], 0 ; ret
0x0000000000170be0 : mov byte ptr [rdi - 0x44c00000], dh ; out dx, eax ; jmp rax
0x000000000010d49e : mov byte ptr [rdi - 1], al ; cmp rdi, rcx ; jne 0x10d499 ; ret
0x000000000008f596 : mov byte ptr [rdi - 1], al ; mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x000000000012bf1b : mov byte ptr [rdi - 1], dl ; ret
0x000000000008f5e0 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000206b2 : mov byte ptr [rdi], 0 ; ret
0x00000000000c0570 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000000f5c2b : mov byte ptr [rdi], al ; jne 0xf5c1f ; mov rax, rdi ; ret
0x00000000000f5dfb : mov byte ptr [rdi], al ; jne 0xf5def ; mov rax, r10 ; ret
0x00000000000c05c9 : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x0000000000099402 : mov byte ptr [rdi], ch ; ret
0x0000000000126f2c : mov byte ptr [rdi], cl ; ret
0x0000000000063200 : mov byte ptr [rdi], cl ; xchg dword ptr [rax - 0x76fffffe], ebp ; ret 0x348
0x0000000000063033 : mov byte ptr [rdi], cl ; xchg dword ptr [rbp - 0x76ffffee], edi ; ret 0x348
0x0000000000062ea1 : mov byte ptr [rdi], cl ; xchg dword ptr [rcx - 0x76ffffe9], ebp ; ret 0x348
0x0000000000062ae1 : mov byte ptr [rdi], cl ; xchg dword ptr [rsi - 0x76ffffeb], ebx ; ret 0x348
0x000000000008f531 : mov byte ptr [rdi], dh ; add rdi, 1 ; mov rax, rdi ; ret
0x0000000000096b80 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x0000000000095580 : mov byte ptr [rdi], dh ; ret
0x00000000000979a2 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000096252 : mov byte ptr [rdi], dl ; ret
0x0000000000099412 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000950aa : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000001443c9 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x00000000000922fe : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000001443f7 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x000000000009232c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000095040 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000923b0 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000114d81 : mov byte ptr [rdx + rdi], 0 ; ret
0x000000000016f260 : mov byte ptr [rdx - 0x7da90004], -4 ; jmp rsi
0x00000000000fd298 : mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e6d61 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000001443a2 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000922d7 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000006d7aa : mov byte ptr [rdx], bh ; movzx eax, dil ; ret
0x000000000006d7a9 : mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x00000000000ff6e8 : mov byte ptr [rip + 0x2a2559], 1 ; pop rbx ; ret
0x000000000002bc18 : mov byte ptr [rip + 0x3730bf], dl ; ret
0x0000000000174af0 : mov byte ptr [rip + 0x53100002], bh ; cli ; jmp rax
0x000000000000245c : mov byte ptr [rip - 0x22beffe8], dh ; out -0x57, al ; ret 0xbd07
0x000000000008bc14 : mov byte ptr [rsi + rdx + 1], al ; jg 0x8bc07 ; ret
0x0000000000176e98 : mov byte ptr [rsi - 0x15], bl ; call qword ptr [rdx]
0x0000000000044ad3 : mov byte ptr [rsi], al ; jne 0x44ab7 ; mov rax, rsi ; ret
0x0000000000044a4f : mov byte ptr [rsi], dl ; jne 0x44a3f ; mov rax, rsi ; ret
0x000000000000374b : mov ch, -0x49 ; cli ; add ebx, ebp ; in al, -0x12 ; jne 0x3737 ; ret 0x975
0x000000000015de4a : mov ch, -0x55 ; ret
0x000000000015d49f : mov ch, -0x67 ; in eax, -1 ; lahf ; mov dh, -0x39 ; ret 0xe71f
0x000000000018db51 : mov ch, -0xa ; jmp rdx
0x0000000000160925 : mov ch, -0xc ; jmp qword ptr [rbx + rax*8 - 0x3cd8000c]
0x0000000000160939 : mov ch, -0xc ; ljmp ptr [rbx] ; ret 0xfff4
0x0000000000160905 : mov ch, -0xc ; ljmp ptr [rcx] ; mov bh, -0xc ; jmp rsi
0x000000000016e79d : mov ch, -3 ; call qword ptr [rax]
0x000000000016e799 : mov ch, -3 ; inc ecx ; mov ch, -3 ; call qword ptr [rax]
0x000000000016e779 : mov ch, -3 ; inc ecx ; mov ch, -3 ; jmp qword ptr [rax]
0x000000000016e6c9 : mov ch, -3 ; inc ecx ; mov ch, -3 ; jmp rcx
0x000000000016e77d : mov ch, -3 ; jmp qword ptr [rax]
0x000000000016e6cd : mov ch, -3 ; jmp rcx
0x000000000016e7bd : mov ch, -3 ; lcall ptr [rax] ; salc ; sti ; jmp rax
0x0000000000180f39 : mov ch, -5 ; call qword ptr [rax]
0x0000000000174efd : mov ch, -6 ; call qword ptr [rax]
0x00000000000da2a7 : mov ch, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000014c2af : mov ch, 0x29 ; and eax, 0x5c74800 ; ret 0x2528
0x000000000015adc2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x000000000015c103 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000010bccb : mov ch, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001736a9 : mov ch, 1 ; add al, ah ; ret
0x0000000000196cbc : mov ch, 5 ; add byte ptr [rax], al ; ret
0x0000000000148736 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000083e84 : mov ch, bh ; or dword ptr [rax], eax ; ret
0x00000000000b5e7c : mov ch, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x0000000000188889 : mov ch, dh ; jmp qword ptr [rcx]
0x000000000011cc10 : mov cl, -0x17 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000033397 : mov cl, -0x51 ; adc eax, dword ptr [rax] ; movaps xmm0, xmm1 ; ret
0x0000000000113193 : mov cl, -0x63 ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000c8a4e : mov cl, -0x75 ; pop rax ; or bh, dh ; ret
0x0000000000160e30 : mov cl, -0xb ; hlt ; call qword ptr [rsi]
0x000000000015fcfd : mov cl, -0xe ; inc dword ptr [rax] ; mov dl, -0xe ; jmp qword ptr [rax]
0x000000000015fcf9 : mov cl, -0xe ; jmp rax
0x0000000000174ebd : mov cl, -6 ; jmp rax
0x0000000000084d8b : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000010a068 : mov cl, 0 ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x00000000000ea38e : mov cl, 0x15 ; sub al, 0x2f ; sub eax, dword ptr [rax] ; je 0xea3a1 ; pop rbp ; ret
0x0000000000003b58 : mov cl, 0x22 ; xchg eax, ebp ; ret
0x000000000003ff37 : mov cl, 0x35 ; ret
0x00000000000aeb9f : mov cl, 0x48 ; add ecx, esi ; jmp rcx
0x0000000000002bc9 : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x00000000001735b9 : mov cl, 1 ; add byte ptr [rax], dh ; mov bl, -9 ; jmp rax
0x00000000000eb717 : mov cl, 3 ; add al, 0xa ; ret
0x0000000000189918 : mov cl, al ; cmc ; call qword ptr [rdx]
0x0000000000174335 : mov cl, bh ; call rax
0x000000000002b9af : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000058744 : mov cl, byte ptr [rax - 0x77] ; ret 0xd6eb
0x0000000000118adb : mov cl, byte ptr [rbp + 0x39] ; ret
0x0000000000073127 : mov cl, byte ptr [rbp + 0x63] ; ret 0xd231
0x0000000000087f15 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000058402 : mov cl, byte ptr [rcx + 0x34] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008f5b3 : mov cl, byte ptr [rcx + 1] ; ret 0xff41
0x0000000000080164 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x000000000015d272 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000126f2a : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000178a68 : mov cl, ch ; jmp 0x178a6e
0x000000000009b51b : mov cl, dl ; and cl, 0xf ; je 0x9b547 ; ret
0x000000000012458e : mov cs, dword ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000015d52c : mov cs, edi ; ret 0x8b36
0x00000000000433ba : mov cs, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000955a0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000017147d : mov dh, -0x10 ; jmp rax
0x00000000000aeb9a : mov dh, -0x10 ; movsxd rsi, dword ptr [rcx + rsi*4] ; add rcx, rsi ; jmp rcx
0x00000000000cb6a3 : mov dh, -0x13 ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x0000000000055bc5 : mov dh, -0x1c ; movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x0000000000068993 : mov dh, -0x2e ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000055b1a : mov dh, -0x2e ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x0000000000084f9a : mov dh, -0x2e ; sub eax, edx ; ret
0x00000000000c1340 : mov dh, -0x38 ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000006d7ae : mov dh, -0x39 ; ret
0x000000000015d4a4 : mov dh, -0x39 ; ret 0xe71f
0x00000000000aebfe : mov dh, -0x3a ; movsxd r8, dword ptr [rdi + r8*4] ; add rdi, r8 ; jmp rdi
0x00000000000f8bee : mov dh, -0x3a ; or eax, edi ; bswap eax ; ret
0x00000000000756fb : mov dh, -0x3b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009a1e0 : mov dh, -0x3e ; pop rbx ; ret
0x000000000009a1b8 : mov dh, -0x3f ; pop rbx ; ret
0x000000000010baa8 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000115a9c : mov dh, -0x40 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010b64d : mov dh, -0x40 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011b568 : mov dh, -0x40 ; add rsp, 8 ; ret
0x00000000000d150f : mov dh, -0x40 ; cmova eax, edx ; ret
0x00000000000a7a81 : mov dh, -0x40 ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000b8eaf : mov dh, -0x40 ; lea rax, qword ptr [rax + rax - 1] ; ret
0x00000000000338cd : mov dh, -0x40 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000688c8 : mov dh, -0x40 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000aceb4 : mov dh, -0x40 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000dcca5 : mov dh, -0x40 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000679ad : mov dh, -0x40 ; neg eax ; pop rbx ; ret
0x000000000006797a : mov dh, -0x40 ; neg eax ; ret
0x000000000010fae5 : mov dh, -0x40 ; pop rbp ; pop r12 ; ret
0x000000000010c6db : mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000000e4ff1 : mov dh, -0x40 ; pop rbx ; ret
0x00000000000343ea : mov dh, -0x40 ; ret
0x000000000016f774 : mov dh, -0x5a ; cld ; inc dword ptr [rsi - 0x5a] ; cld ; call rsi
0x00000000000ae4b4 : mov dh, -0x64 ; and al, 0xffffffffffffff81 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000001729bd : mov dh, -0xa ; jmp rax
0x0000000000031c8f : mov dh, -0xa ; movsxd rsi, dword ptr [r11 + rsi*4] ; add rsi, r11 ; jmp rsi
0x00000000001608c5 : mov dh, -0xc ; jmp rsp
0x0000000000075586 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000074998 : mov dh, 0 ; pop rbx ; ret
0x0000000000073683 : mov dh, 0 ; ret
0x0000000000134d21 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000084f74 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000032170 : mov dh, 0x17 ; test dl, dl ; jne 0x32156 ; ret
0x00000000000b9c1c : mov dh, 0x17 ; test dl, dl ; jne 0xb9bff ; xor eax, eax ; ret
0x00000000000c74dc : mov dh, 0x1c ; adc byte ptr [rax - 0x7d], cl ; ret 0x4501
0x000000000014c5e6 : mov dh, 0x2e ; in eax, dx ; push rbx ; ret
0x00000000000c579e : mov dh, 0x39 ; cmc ; jge 0xc5786 ; mov edx, eax ; jmp 0xc578b
0x000000000008eed5 : mov dh, 0x3c ; add ecx, dword ptr [rbp - 0x76b7feb8] ; ret
0x00000000000ee94f : mov dh, 0x41 ; add dword ptr [rcx - 0x7d], ecx ; ret 0xeb08
0x00000000001038e4 : mov dh, 0x42 ; add dword ptr [rbp + 0x75020254], ecx ; ret
0x0000000000038ce1 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000014b1e1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000014b1d1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000014b1a1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000014b191 : mov dh, 0x47 ; lock movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000014b1c1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000014b1b1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000000250c5 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000015c262 : mov dh, 0x4e ; ret 0x474c
0x000000000010388d : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000bc5fe : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000bc5f1 : mov dh, 0x53 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000bf1ae : mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000102dd5 : mov dh, 0x55 ; add dh, dh ; ret
0x000000000014b1e5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x000000000014b1d5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000014b1a5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000014b195 : mov dh, 0x56 ; lock sub eax, edx ; ret
0x000000000014b1b5 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000000e27d9 : mov dh, 0x5b ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000016ed50 : mov dh, 0x5e ; cld ; inc dword ptr [rsi + 0x5e] ; cld ; call rsi
0x00000000000596a5 : mov dh, 0x75 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007fa95 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000081511 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000147814 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000005abc5 : mov dh, 1 ; add byte ptr [rbx - 0x76be0008], al ; ret 0x850f
0x0000000000075591 : mov dh, 2 ; ret
0x0000000000197390 : mov dh, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000c53e4 : mov dh, 4 ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000147811 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000084f71 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000081514 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000009a37c : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000001889e1 : mov dh, ch ; jmp qword ptr [rcx]
0x00000000000b8ee5 : mov dl, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000016f7d8 : mov dl, -0x57 ; cld ; inc dword ptr [rdx - 0x57] ; cld ; call rdx
0x000000000002c747 : mov dl, -0x75 ; add al, 7 ; ret
0x000000000016f2e0 : mov dl, -0x7e ; cld ; inc dword ptr [rdx - 0x7e] ; cld ; call rdx
0x00000000000e49f5 : mov dl, -0xa ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000016179d : mov dl, -0xb ; call rcx
0x000000000015fd01 : mov dl, -0xe ; jmp qword ptr [rax]
0x00000000000a8396 : mov dl, -1 ; cmovle rax, rdx ; pop rbx ; ret
0x000000000005c993 : mov dl, -1 ; dec dword ptr [rcx + rcx*4 - 9] ; jmp 0x5c964
0x00000000000a83b1 : mov dl, 0 ; cmovge rax, rdx ; pop rbx ; ret
0x0000000000003a50 : mov dl, 0x1e ; ret
0x000000000008563a : mov dl, 0x1f ; or al, byte ptr [rax] ; ret
0x000000000010530b : mov dl, 0x41 ; mov byte ptr [rbx], 0 ; ret
0x000000000016eff4 : mov dl, 0x50 ; cld ; jmp qword ptr [rdx]
0x000000000016edf4 : mov dl, 0x5a ; cld ; inc dword ptr [rdx + 0x5a] ; cld ; call rdx
0x00000000001074bd : mov dl, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000179d70 : mov dl, 0xa ; ret
0x0000000000096273 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000096292 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000962d3 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000012bfa0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000979a0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000096250 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000099410 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000015fc95 : mov dl, dh ; jmp rax
0x00000000000e8242 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00000000000b84c7 : mov dword ptr [0x2d0], esi ; ret
0x00000000000e02c4 : mov dword ptr [r8 + 0x21], esi ; ret
0x00000000000e02bf : mov dword ptr [r8 + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x00000000001038f5 : mov dword ptr [r8], eax ; mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x0000000000037073 : mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000103894 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x00000000000f4fe0 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x00000000000e5421 : mov dword ptr [rax + 0x10], ecx ; ret
0x000000000006dfe9 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006e029 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006e569 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000072f39 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x00000000000c264b : mov dword ptr [rax + 0x20], edx ; xor eax, eax ; ret
0x00000000000c267d : mov dword ptr [rax + 0x20], esi ; xor eax, eax ; ret
0x00000000000e02c5 : mov dword ptr [rax + 0x21], esi ; ret
0x00000000000e02c0 : mov dword ptr [rax + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x000000000006dfed : mov dword ptr [rax + 0x40], ecx ; ret
0x000000000003699e : mov dword ptr [rax + 0x40], edx ; call qword ptr [rbx]
0x000000000006e607 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000018a4c4 : mov dword ptr [rax + 1], ss ; add al, cl ; in eax, -0xb ; jmp qword ptr [rcx]
0x0000000000067aeb : mov dword ptr [rax + 4], 1 ; xor eax, eax ; ret
0x000000000014ce17 : mov dword ptr [rax + 8], 0 ; pop rbx ; ret
0x00000000000767aa : mov dword ptr [rax + 8], 0 ; ret
0x0000000000061e0f : mov dword ptr [rax + 8], ebp ; jmp 0x60ba3
0x0000000000067a8b : mov dword ptr [rax + 8], ecx ; add dword ptr [rdx + 4], 1 ; ret
0x00000000000e53e9 : mov dword ptr [rax + 8], ecx ; ret
0x000000000007e875 : mov dword ptr [rax + 8], esi ; ret
0x000000000009c86c : mov dword ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000855d2 : mov dword ptr [rax + rdx - 2], ecx ; ret
0x00000000001036b7 : mov dword ptr [rax + rdx - 4], 0 ; ret
0x00000000000c257a : mov dword ptr [rax - 4], edx ; cmp esi, dword ptr [rdi + 4] ; jl 0xc2579 ; ret
0x00000000001165bd : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00000000000e0ec8 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x000000000006b06f : mov dword ptr [rax], 0x16 ; mov rax, rdx ; ret
0x00000000000e5038 : mov dword ptr [rax], 0x16 ; ret
0x00000000000a7fe0 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000007b088 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000000e09a4 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000b3748 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000020b28 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x0000000000095df0 : mov dword ptr [rax], cs ; add byte ptr [rax], al ; ret
0x000000000009b1d3 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001704c1 : mov dword ptr [rax], eax ; add byte ptr [rax], dh ; push -0x14 ; jmp rax
0x000000000010479c : mov dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x19], al ; call 0xe0a88
0x00000000000d1354 : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x00000000001038f6 : mov dword ptr [rax], eax ; mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x00000000000c1386 : mov dword ptr [rax], ebp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004496c : mov dword ptr [rax], ecx ; mov byte ptr [rax + 8], 0 ; ret
0x000000000006e6f5 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000006c98a : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000d5f29 : mov dword ptr [rax], ecx ; xor al, al ; ret
0x000000000007c0b6 : mov dword ptr [rax], edi ; ret
0x00000000000e80f1 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009bef1 : mov dword ptr [rax], edx ; jne 0x9beed ; ret
0x0000000000037074 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00000000000e02da : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x0000000000103895 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x000000000002c6b3 : mov dword ptr [rax], edx ; ret
0x000000000006eb61 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000170571 : mov dword ptr [rax], es ; add al, ah ; jae 0x170569 ; call qword ptr [rax]
0x000000000017e05d : mov dword ptr [rax], es ; add al, al ; xchg eax, edx ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000170561 : mov dword ptr [rax], es ; add byte ptr [rax + 0x72], dl ; in al, dx ; call rax
0x000000000003b8f0 : mov dword ptr [rax], esi ; jmp 0x3b54e
0x000000000003e1e6 : mov dword ptr [rax], esi ; jmp 0x3de5c
0x00000000000594a2 : mov dword ptr [rax], esi ; xor r8d, r8d ; jmp 0x557ad
0x00000000000594a1 : mov dword ptr [rax], r14d ; xor r8d, r8d ; jmp 0x557ae
0x00000000000d1353 : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000078c4f : mov dword ptr [rbp + 0x14], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d9f61 : mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000502c5 : mov dword ptr [rbp - 0x1188], ecx ; jmp rax
0x0000000000103232 : mov dword ptr [rbp - 0x24], edx ; call 0x1f445
0x000000000010322f : mov dword ptr [rbp - 0x28], ecx ; mov dword ptr [rbp - 0x24], edx ; call 0x1f448
0x0000000000044ff6 : mov dword ptr [rbp - 0x5c8], ecx ; jmp rax
0x00000000000f3f83 : mov dword ptr [rbp - 0x70], edx ; mov rdx, r13 ; call rax
0x00000000000f427f : mov dword ptr [rbp - 0x80], eax ; call r8
0x0000000000066a47 : mov dword ptr [rbp - 0x80], eax ; mov rax, qword ptr [rdx] ; jmp 0x62c8d
0x00000000000f35f3 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000f3803 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000000f38ac : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000000f3920 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000004c59a : mov dword ptr [rbp - 0xc0], ecx ; mov rdi, rbx ; call rax
0x000000000007ea67 : mov dword ptr [rbp], eax ; je 0x7eb41 ; call rax
0x000000000007ebe1 : mov dword ptr [rbp], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011bc3d : mov dword ptr [rbp], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000102bf0 : mov dword ptr [rbp], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a82e8 : mov dword ptr [rbp], ebx ; call r12
0x0000000000107fb8 : mov dword ptr [rbp], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006cd43 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006cd42 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000029a7e : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000073b57 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000011d226 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000074329 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000ef734 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000116245 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x000000000011d1de : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000ef764 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000072675 : mov dword ptr [rbx + 0x18], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076123 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000007fc10 : mov dword ptr [rbx + 0x20], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116299 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cf3ab : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000a9a1a : mov dword ptr [rbx + 0x28], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072f65 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x000000000007f8c9 : mov dword ptr [rbx + 0x30], ecx ; call rcx
0x000000000007f8c8 : mov dword ptr [rbx + 0x30], r9d ; call rcx
0x00000000000c09e0 : mov dword ptr [rbx + 0x34], esp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000338cf : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000dfec1 : mov dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x000000000007f97e : mov dword ptr [rbx + 0x48], ecx ; call rcx
0x000000000007618b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000074bd2 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006e072 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000073a47 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x0000000000029a97 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000000ef704 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000342d8 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x000000000007631d : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000000e5022 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000116450 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000007638a : mov dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011d3e1 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000113112 : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000e4feb : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000112967 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000112656 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000ddd37 : mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000033f5e : mov dword ptr [rbx], ecx ; xor eax, eax ; add rsp, 8 ; pop rbx ; ret
0x000000000006e56c : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000007f8c6 : mov dword ptr [rbx], edi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x000000000007e25d : mov dword ptr [rbx], edx ; xor al, al ; pop rbx ; ret
0x0000000000076126 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000007f97b : mov dword ptr [rbx], esi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x000000000006a418 : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010e4d4 : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x00000000000e53e5 : mov dword ptr [rcx + 0x10], edx ; mov qword ptr [rax + 8], r9 ; ret
0x000000000008afd5 : mov dword ptr [rcx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000110db8 : mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
0x0000000000110d15 : mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
0x0000000000110de5 : mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x00000000001420a2 : mov dword ptr [rcx + 3], edx ; ret
0x000000000009b650 : mov dword ptr [rcx + 4], eax ; jne 0x9b621 ; nop dword ptr [rax] ; ret
0x0000000000142093 : mov dword ptr [rcx + 4], edx ; ret
0x000000000009bec0 : mov dword ptr [rcx + 4], esi ; jne 0x9bed1 ; mov dword ptr [rcx + 8], esi ; ret
0x0000000000142104 : mov dword ptr [rcx + 5], edx ; ret
0x0000000000142114 : mov dword ptr [rcx + 6], edx ; ret
0x00000000001420e3 : mov dword ptr [rcx + 7], edx ; ret
0x00000000000e541d : mov dword ptr [rcx + 8], edx ; mov qword ptr [rax + 0x10], r9 ; ret
0x00000000001420d4 : mov dword ptr [rcx + 8], edx ; ret
0x000000000009bec5 : mov dword ptr [rcx + 8], esi ; ret
0x00000000000ce8a1 : mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x00000000001878c4 : mov dword ptr [rcx + rax], fs ; add byte ptr [rax], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018b8c4 : mov dword ptr [rcx + rax], fs ; clc ; sub esi, esi ; call rdi
0x000000000008f566 : mov dword ptr [rcx + rcx*4], 0x8948fc47 ; clc ; ret
0x00000000000c32a3 : mov dword ptr [rcx - 0x44], es ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xc3276
0x000000000009b7f0 : mov dword ptr [rcx], 0 ; jne 0x9b7f1 ; ret
0x0000000000058741 : mov dword ptr [rcx], 0x89488aeb ; ret 0xd6eb
0x00000000000b9ee4 : mov dword ptr [rcx], 0xdf75d284 ; ret
0x0000000000191b4d : mov dword ptr [rcx], 0xf7ae4000 ; call qword ptr [rdi]
0x0000000000191bd5 : mov dword ptr [rcx], 0xf7b8d800 ; call qword ptr [rsi]
0x00000000000b9c0d : mov dword ptr [rcx], 0xf7bfa80 ; xchg eax, esp ; ret 0xb60f
0x0000000000173901 : mov dword ptr [rcx], 0xf846e000 ; call rax
0x0000000000172cb1 : mov dword ptr [rcx], eax ; add al, dl ; or al, 0xfffffffffffffff7 ; jmp rax
0x000000000018de25 : mov dword ptr [rcx], eax ; add byte ptr [rax], bl ; ret
0x000000000005d8cb : mov dword ptr [rcx], eax ; add byte ptr [rbx - 0x76be0008], al ; ret 0x5e75
0x00000000000c2bbc : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000009b826 : mov dword ptr [rcx], eax ; jne 0x9b815 ; ret
0x0000000000033dda : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006d617 : mov dword ptr [rcx], eax ; ret
0x00000000000710d4 : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x000000000006d471 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00000000001038d9 : mov dword ptr [rcx], edi ; ret
0x0000000000084ae7 : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x0000000000142061 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000142080 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000001420c1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000001420a0 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x00000000001420e1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x00000000001420f1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000142101 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000142111 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000142121 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000142131 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000142090 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x00000000001420d1 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000103898 : mov dword ptr [rcx], edx ; ret
0x00000000000c990f : mov dword ptr [rcx], fs ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xc639
0x000000000009b825 : mov dword ptr [rcx], r8d ; jne 0x9b816 ; ret
0x00000000000daaab : mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000daae2 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000001039e9 : mov dword ptr [rdi + 0x10], eax ; xor eax, eax ; ret
0x0000000000096d0d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000097b5d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000096d4b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000097b9b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000096dcd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000097c1d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000956db : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000963ae : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009575d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000e53aa : mov dword ptr [rdi + 0x10], ecx ; mov qword ptr [rdx], rdi ; ret
0x00000000000432ef : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000995cd : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009960b : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009968d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000096430 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000957a0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000957c0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000095781 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000daad0 : mov dword ptr [rdi + 0x10c], esi ; xor al, al ; ret
0x0000000000096e33 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000097c83 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000957a3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000996f3 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000115f20 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x00000000000760b3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000073307 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000096e15 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000097c65 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000096e53 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000097ca3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000095785 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000996d5 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000099713 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000115fb2 : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x0000000000115eb9 : mov dword ptr [rdi + 0x18], esi ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x0000000000115ee6 : mov dword ptr [rdi + 0x18], esi ; ret
0x00000000000a8df5 : mov dword ptr [rdi + 0x20], ecx ; pop rbx ; pop rbp ; ret
0x000000000010c46e : mov dword ptr [rdi + 0x20], ecx ; ret
0x0000000000115ebc : mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x00000000001115cc : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000116061 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000c04bb : mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000c04be : mov dword ptr [rdi + 0x30], eax ; ret
0x000000000008aec9 : mov dword ptr [rdi + 0x38], ecx ; ret
0x0000000000111584 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x00000000000200d6 : mov dword ptr [rdi + 0x48], 0x4804e7c1 ; add edi, ebp ; call rax
0x00000000000760e3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000077c9d : mov dword ptr [rdi + 0x58], ecx ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000034509 : mov dword ptr [rdi + 0x78], 0xffffffff ; ret
0x00000000000da22e : mov dword ptr [rdi + 0x80], edx ; ret
0x0000000000102d8f : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x0000000000096d8d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000097bdd : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000956fd : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000009964d : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x0000000000096d2b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000097b7b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000096dad : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000097bfd : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000956bb : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000995eb : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009966d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000134b65 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000001349a8 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134c48 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000134af5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000134938 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000376f3 : mov dword ptr [rdi + 2], edx ; ret
0x0000000000096bf7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000097a27 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000134a85 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000001348c8 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000955e7 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000099497 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000008f673 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000008f5d3 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x0000000000077c8a : mov dword ptr [rdi + 4], eax ; ret
0x00000000000376ed : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000008f6c3 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000097a09 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000134858 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000008f5c3 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x00000000000955d9 : mov dword ptr [rdi + 4], edx ; ret
0x0000000000099479 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000da280 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000008f672 : mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000008f5d2 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x0000000000096c8b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000097acb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000001347e8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009564b : mov dword ptr [rdi + 5], edx ; ret
0x000000000009953b : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x0000000000096cab : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000097aeb : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000134778 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009565b : mov dword ptr [rdi + 6], edx ; ret
0x000000000009955b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x0000000000096c49 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000097a89 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000096ccb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000097b0b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000134708 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000095629 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000994f9 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009957b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000e2a98 : mov dword ptr [rdi + 8], 0 ; ret
0x000000000010cc38 : mov dword ptr [rdi + 8], eax ; pop rbx ; ret
0x00000000000760b7 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000043274 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000097a6b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000096c69 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000097aa9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000096c2b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000042ae4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000037054 : mov dword ptr [rdi + 8], edx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000007367f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x0000000000037045 : mov dword ptr [rdi + 8], edx ; ret
0x00000000000994db : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x0000000000099519 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000e0032 : mov dword ptr [rdi + 8], esi ; ret
0x0000000000025769 : mov dword ptr [rdi + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000126f23 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x00000000000855d9 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000000855e2 : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000012bc65 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012bca3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000431df : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000012bfec : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001341b8 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c1cc : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000134138 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c3bc : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001340b8 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c58d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000134029 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012c78d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133f99 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012c98d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133f09 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000096570 : mov dword ptr [rdi - 1], edx ; ret
0x000000000012c36d : mov dword ptr [rdi - 2], ecx ; ret
0x000000000012c185 : mov dword ptr [rdi - 2], edx ; ret
0x000000000012c369 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000008f51f : mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x000000000012c749 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000012be1f : mov dword ptr [rdi - 4], edx ; ret
0x000000000008f57b : mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x000000000012c746 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000008f505 : mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x000000000012c946 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000008f599 : mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x000000000012cb46 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000004316a : mov dword ptr [rdi - 8], ecx ; ret
0x000000000012bca7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000012be1c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012bf18 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012be64 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000134238 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000036b50 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x00000000000e2a85 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000008ad07 : mov dword ptr [rdi], eax ; pop rbx ; ret
0x0000000000043164 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000004326e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000037058 : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000004f066 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f542 : mov dword ptr [rdi], ecx ; add rdi, 2 ; mov rax, rdi ; ret
0x000000000008f6a0 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000096bc5 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000096c17 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000096ba4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000955a4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000979c7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000096277 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000008f620 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000979f5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000096295 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000097a47 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000962d7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000096bf5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000097a25 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000955e5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000008f5d0 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x0000000000096c47 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000097a87 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000095627 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000096c67 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000097aa7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000095637 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000855d7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000014be19 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000095648 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000095658 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000095668 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000855df : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000008f610 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000008f5c0 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000955d6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000095618 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x000000000014be26 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000001f85d : mov dword ptr [rdi], ecx ; ret
0x0000000000033739 : mov dword ptr [rdi], edx ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000096b94 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000979b4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000096bb2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000979e2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000096c04 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000097a34 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000096590 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000965d1 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000965f1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000096601 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000096611 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000096621 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000010cc35 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x00000000000965a0 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000965e1 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000033454 : mov dword ptr [rdi], edx ; ret
0x0000000000099424 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x0000000000099452 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000994a4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000008f681 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000008f601 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x0000000000126f0b : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000004438d : mov dword ptr [rdi], esi ; mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x0000000000126eee : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000008f5f1 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x0000000000126f20 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00000000000443b3 : mov dword ptr [rdi], esi ; ret
0x00000000000da261 : mov dword ptr [rdi], esi ; xor al, al ; ret
0x000000000011168c : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x000000000006a1f7 : mov dword ptr [rdx + 0x140], ecx ; ret
0x0000000000073bb5 : mov dword ptr [rdx + 0x140], edi ; pop rbx ; ret
0x000000000006d46e : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000006d614 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000010bc00 : mov dword ptr [rdx + 0x20], esi ; ret
0x000000000010bbdc : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000010bbe0 : mov dword ptr [rdx + 0x68], ecx ; ret
0x000000000010e570 : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x000000000011156c : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x0000000000144427 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x000000000009236c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000144409 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009234e : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000001444bb : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000144439 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x00000000001400e9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000001444db : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000144459 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x00000000001400f9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000144479 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x00000000001444fb : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000000923f0 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000144499 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000014438b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000000923d2 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000c2b20 : mov dword ptr [rdx + 8], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010e4f1 : mov dword ptr [rdx + 8], edi ; ret
0x00000000000c1481 : mov dword ptr [rdx + rax*4], ecx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006aabe : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x0000000000176ec4 : mov dword ptr [rdx], ds ; add byte ptr [rax], al ; cwde ; pop rsi ; jmp 0x176ed2
0x00000000000fd577 : mov dword ptr [rdx], eax ; call 0x69854
0x0000000000063321 : mov dword ptr [rdx], eax ; jmp 0x5f52f
0x00000000001443b4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000001443e2 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000144334 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000000e81ca : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000033aca : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000004445f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000b5241 : mov dword ptr [rdx], eax ; mov eax, esi ; pop rbx ; ret
0x00000000000dcb6a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000000922e9 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000b4a82 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000002ce8d : mov dword ptr [rdx], eax ; ret
0x0000000000071d8f : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000083fde : mov dword ptr [rdx], ebx ; mov rax, r10 ; pop rbx ; ret
0x000000000009a415 : mov dword ptr [rdx], ecx ; jne 0x9a40d ; ret
0x000000000006e346 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00000000000d10a7 : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x0000000000044394 : mov dword ptr [rdx], ecx ; ret
0x00000000000ceb2b : mov dword ptr [rdx], edi ; ret
0x0000000000101c22 : mov dword ptr [rdx], edi ; xor eax, eax ; ret
0x000000000007e883 : mov dword ptr [rdx], edx ; xor al, byte ptr [rax] ; ret
0x000000000018057b : mov dword ptr [rdx], es ; push rdx ; ret
0x00000000000b5093 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000b515d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000010e4ee : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000008b1ff : mov dword ptr [rdx], esp ; mov rax, r10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b5240 : mov dword ptr [rdx], r8d ; mov eax, esi ; pop rbx ; ret
0x000000000011bfd9 : mov dword ptr [rip + 0x286821], esi ; call 0xe8278
0x00000000000f5288 : mov dword ptr [rip + 0x2ac352], eax ; pop rbp ; ret
0x00000000000ea340 : mov dword ptr [rip + 0x2b2f7a], ebx ; pop rbx ; ret
0x00000000000e3f2a : mov dword ptr [rip + 0x2b9340], edi ; ret
0x00000000000e1d55 : mov dword ptr [rip + 0x2bcc25], eax ; mov rdx, rax ; jmp 0xe1cf7
0x000000000018001a : mov dword ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x000000000007e881 : mov dword ptr [rip + 0x321289], esi ; ret
0x00000000000347f3 : mov dword ptr [rip + 0x36888f], eax ; mov eax, edx ; ret
0x00000000000347dc : mov dword ptr [rip + 0x3688aa], edx ; ret
0x000000000001fc4d : mov dword ptr [rip + 0x37d5e5], eax ; pop rbp ; pop r12 ; ret
0x000000000002040f : mov dword ptr [rip + 0x38246b], ecx ; pop rbx ; ret
0x000000000002040e : mov dword ptr [rip + 0x38246b], r9d ; pop rbx ; ret
0x00000000000cf6d4 : mov dword ptr [rsi + 0x10], eax ; ret
0x0000000000037616 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x0000000000036fbd : mov dword ptr [rsi + 0x10], edx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000c2b3c : mov dword ptr [rsi + 0x18], edx ; mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x0000000000036fc1 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x00000000000c2b3f : mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x00000000000dfea2 : mov dword ptr [rsi + 0x48], eax ; ret
0x000000000006ea85 : mov dword ptr [rsi + 0x60], ebx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000df2a6 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00000000000da19f : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x0000000000037660 : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x00000000000376a7 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x000000000009b698 : mov dword ptr [rsi + 4], 0 ; ret
0x00000000000cf6b7 : mov dword ptr [rsi + 8], 0 ; ret
0x000000000010adb1 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000cf6d0 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000101c16 : mov dword ptr [rsi + rax - 0xb8], edx ; ret
0x00000000000a7ae1 : mov dword ptr [rsi + rcx], edx ; jne 0xa7ade ; ret
0x000000000014be29 : mov dword ptr [rsi - 2], ecx ; ret
0x000000000014be1b : mov dword ptr [rsi - 4], ecx ; ret
0x000000000010adcf : mov dword ptr [rsi], 0 ; ret
0x000000000008f503 : mov dword ptr [rsi], 0x48fa4789 ; mov eax, edi ; ret
0x000000000010ae40 : mov dword ptr [rsi], 0xa ; ret
0x000000000010ae30 : mov dword ptr [rsi], 0xb ; ret
0x000000000010ae80 : mov dword ptr [rsi], 0xc ; ret
0x000000000010ae70 : mov dword ptr [rsi], 8 ; ret
0x00000000001191b0 : mov dword ptr [rsi], eax ; mov eax, 0xffffffff ; ret
0x0000000000104e9c : mov dword ptr [rsi], eax ; mov eax, 1 ; ret
0x000000000007800b : mov dword ptr [rsi], eax ; mov rax, r9 ; ret
0x000000000007330b : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000102d93 : mov dword ptr [rsi], edi ; ret
0x00000000000f8b49 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x0000000000037076 : mov dword ptr [rsi], edx ; ret
0x000000000017f318 : mov dword ptr [rsi], es ; add dword ptr [rdi], 2 ; lodsb al, byte ptr [rsi] ; ret
0x0000000000184308 : mov dword ptr [rsi], es ; add dword ptr [rdi], 2 ; ret
0x0000000000189a08 : mov dword ptr [rsi], es ; push rbx ; add dword ptr [rdi], 2 ; ret 0x42c3
0x00000000000335a5 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x00000000000355c9 : mov dword ptr [rsp + 0x10], ecx ; call r14
0x000000000007ac5b : mov dword ptr [rsp + 0x28], edx ; xor edi, edi ; call qword ptr [rax]
0x000000000007ab18 : mov dword ptr [rsp + 0x28], esi ; call rcx
0x000000000007ab13 : mov dword ptr [rsp + 0x30], eax ; mov qword ptr [rsp + 0x28], r14 ; call rcx
0x00000000000c8c14 : mov dword ptr [rsp + 0x30], ecx ; call 0x84ea6
0x000000000007a9b5 : mov dword ptr [rsp + 0x38], ecx ; call qword ptr [rax]
0x000000000007a9dd : mov dword ptr [rsp + 0x38], edx ; call rax
0x000000000007a9d8 : mov dword ptr [rsp + 0x40], ecx ; mov qword ptr [rsp + 0x38], rdx ; call rax
0x000000000007f930 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x000000000011635c : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x00000000000481f7 : mov dword ptr [rsp + 8], edx ; jmp 0x481c4
0x0000000000033675 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000044536 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000033845 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x000000000007e92d : mov dword ptr [rsp], eax ; je 0x7e9f9 ; call rax
0x000000000011327a : mov dword ptr [rsp], ecx ; pop rbp ; pop r12 ; ret
0x00000000000b84c6 : mov dword ptr fs:[0x2d0], esi ; ret
0x00000000000e0ec7 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000e5037 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000a7fdf : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000007b087 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000b3747 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000020b27 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00000000000e02d9 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000d1352 : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000101c60 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033dd9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006aabd : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x0000000000033ac9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000b5092 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000b515c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00000000000b523f : mov dword ptr fs:[rdx], r8d ; mov eax, esi ; pop rbx ; ret
0x0000000000126f0a : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000012c180 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000095590 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000df586 : mov eax, 0 ; cmova eax, edx ; ret
0x00000000000e98e6 : mov eax, 0 ; cmovae rax, rsi ; ret
0x0000000000109534 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x000000000009a292 : mov eax, 0x10 ; pop rbx ; ret
0x00000000000e088d : mov eax, 0x14 ; sub eax, edx ; ret
0x00000000000daac3 : mov eax, 0x16 ; jbe 0xdaad8 ; ret
0x000000000007e214 : mov eax, 0x16 ; je 0x7e227 ; ret
0x000000000007e272 : mov eax, 0x16 ; je 0x7e288 ; ret
0x00000000000da255 : mov eax, 0x16 ; je 0xda268 ; ret
0x000000000007e268 : mov eax, 0x16 ; ret
0x00000000000daaf8 : mov eax, 0x1c ; syscall ; neg eax ; ret
0x0000000000066d82 : mov eax, 0x1f0fffff ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x00000000000b8dc2 : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x000000000009a28b : mov eax, 0x20 ; pop rbx ; ret
0x00000000000b8da0 : mov eax, 0x20 ; ret
0x000000000002cbe7 : mov eax, 0x200 ; ret
0x0000000000170208 : mov eax, 0x2000007c ; cmp esp, ebp ; call rax
0x00000000001716a0 : mov eax, 0x200000fb ; sbb al, -0xf ; call rax
0x0000000000172d88 : mov eax, 0x2000018d ; sbb bh, dh ; call rax
0x000000000009a284 : mov eax, 0x30 ; pop rbx ; ret
0x000000000009a27d : mov eax, 0x40 ; pop rbx ; ret
0x00000000000b8df0 : mov eax, 0x40 ; ret
0x00000000001712e8 : mov eax, 0x400000e3 ; jbe 0x1712e6 ; call rax
0x00000000001740f8 : mov eax, 0x400001f8 ; xor bh, cl ; call rax
0x000000000015b3bb : mov eax, 0x45155e93 ; ret 0x591c
0x0000000000106824 : mov eax, 0x48020029 ; add esp, 8 ; ret
0x0000000000085a9a : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x00000000000db080 : mov eax, 0x5f ; syscall ; ret
0x000000000009a276 : mov eax, 0x60 ; pop rbx ; ret
0x00000000001719b0 : mov eax, 0x6000010d ; in eax, dx ; int1 ; call rax
0x0000000000172c78 : mov eax, 0x60000188 ; or edi, esi ; call rax
0x0000000000174eb8 : mov eax, 0x60000253 ; mov cl, -6 ; jmp rax
0x00000000000b84e0 : mov eax, 0x66 ; syscall ; ret
0x00000000000b8500 : mov eax, 0x68 ; syscall ; ret
0x00000000000b84f0 : mov eax, 0x6b ; syscall ; ret
0x00000000000b8510 : mov eax, 0x6c ; syscall ; ret
0x00000000000b84d0 : mov eax, 0x6e ; syscall ; ret
0x00000000000b8740 : mov eax, 0x6f ; syscall ; ret
0x00000000001705e8 : mov eax, 0x7000008e ; js 0x1705e2 ; call rax
0x0000000000171e00 : mov eax, 0x7000012b ; test dh, bl ; call rax
0x00000000001746e8 : mov eax, 0x70000224 ; stc ; jmp qword ptr [rax]
0x00000000000b8ca9 : mov eax, 0x7d00 ; ret
0x00000000000b8cd8 : mov eax, 0x7e ; ret
0x00000000000b8c7a : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00000000000b8c2b : mov eax, 0x7f ; ret
0x000000000009a26f : mov eax, 0x80 ; pop rbx ; ret
0x0000000000170038 : mov eax, 0x80000072 ; shr ebx, 1 ; call rax
0x0000000000171320 : mov eax, 0x800000e4 ; js 0x17131e ; call rax
0x00000000001731b8 : mov eax, 0x800001a2 ; je 0x1731bd ; call rax
0x00000000001749d0 : mov eax, 0x80000236 ; cmp edi, edx ; call rax
0x0000000000070581 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000171ce8 : mov eax, 0x90000123 ; rep ; call rax
0x00000000001717a0 : mov eax, 0xa0000100 ; pop rax ; int1 ; call rax
0x0000000000172248 : mov eax, 0xa0000147 ; mov esp, esi ; call rax
0x0000000000174db0 : mov eax, 0xa000024d ; xchg eax, ebp ; cli ; call rax
0x0000000000174fc8 : mov eax, 0xa0000259 ; iretd ; cli ; call rax
0x00000000001608c1 : mov eax, 0xb67ffff4 ; hlt ; jmp rsp
0x000000000010e5ff : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000c0a11 : mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000c1ef0 : mov eax, 0xc ; ret
0x0000000000171c98 : mov eax, 0xc0000120 ; add al, -0xd ; call rax
0x0000000000172d10 : mov eax, 0xc000018b ; adc dh, bh ; call rax
0x0000000000173240 : mov eax, 0xc00001a4 ; xchg bh, dh ; call rax
0x000000000010680d : mov eax, 0xc0850029 ; je 0x10681f ; ret
0x00000000000b8c5d : mov eax, 0xc975fde8 ; ret
0x00000000000f8b38 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x00000000000f49e2 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x00000000001717e8 : mov eax, 0xd0000101 ; pop rsi ; int1 ; call rax
0x00000000001721a8 : mov eax, 0xd0000144 ; jns 0x1721aa ; call rax
0x00000000001739d0 : mov eax, 0xd00001ca ; clc ; call rax
0x0000000000171060 : mov eax, 0xd5 ; cmp dh, al ; call rax
0x00000000001132a6 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000171400 : mov eax, 0xe00000e8 ; test esi, eax ; jmp rax
0x0000000000173900 : mov eax, 0xe00001c7 ; clc ; call rax
0x0000000000173c28 : mov eax, 0xe00001d6 ; ja 0x173c2e ; call rax
0x00000000000e8630 : mov eax, 0xe4 ; syscall ; ret
0x00000000000d499d : mov eax, 0xf ; je 0xd49b8 ; ret
0x0000000000173b50 : mov eax, 0xf00001d1 ; clc ; call qword ptr [rax]
0x0000000000033264 : mov eax, 0xf001271 ; push rsp ; ret
0x00000000000d01c7 : mov eax, 0xf2df980 ; xchg eax, esp ; ret 0xc931
0x000000000005a995 : mov eax, 0xf8830001 ; inc dword ptr [rcx - 0x77] ; ret 0x850f
0x00000000000b8ccf : mov eax, 0xfa ; ret
0x00000000000b8cf0 : mov eax, 0xfc17 ; ret
0x00000000000b8ce0 : mov eax, 0xfffa ; ret
0x0000000000105d86 : mov eax, 0xffff ; cmove ecx, eax ; jmp 0x105d5c
0x00000000000b7144 : mov eax, 0xfffffff2 ; ret
0x0000000000034894 : mov eax, 0xffffffff ; add rsp, 0x10 ; ret
0x00000000000f5051 : mov eax, 0xffffffff ; add rsp, 8 ; ret
0x0000000000081822 : mov eax, 0xffffffff ; cmovae eax, ecx ; ret
0x000000000001f50a : mov eax, 0xffffffff ; cmovge eax, edx ; jmp 0x1f4e5
0x000000000001f849 : mov eax, 0xffffffff ; cmovge eax, edx ; jmp 0x1f85d
0x000000000006ec31 : mov eax, 0xffffffff ; ja 0x6ec48 ; ret
0x000000000011c758 : mov eax, 0xffffffff ; jmp 0x11c728
0x00000000001036f0 : mov eax, 0xffffffff ; nop dword ptr [rax] ; ret
0x000000000006cf41 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000000a4cdf : mov eax, 0xffffffff ; pop rbx ; pop r14 ; ret
0x000000000003607e : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c80c : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000324ae : mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000295c0 : mov eax, 0xffffffff ; ret
0x0000000000078e82 : mov eax, 0xffffffff ; setne dl ; jmp 0x78e9a
0x00000000000e1eae : mov eax, 1 ; add rsp, 8 ; ret
0x000000000014bce0 : mov eax, 1 ; jg 0x14bcf9 ; neg eax ; ret
0x000000000009b260 : mov eax, 1 ; jg 0x9b272 ; neg eax ; ret
0x0000000000149c36 : mov eax, 1 ; jl 0x149c49 ; neg eax ; ret
0x000000000007a22b : mov eax, 1 ; jmp 0x7a1fa
0x00000000001164f2 : mov eax, 1 ; jne 0x116507 ; ret
0x0000000000116532 : mov eax, 1 ; jne 0x116547 ; ret
0x00000000000b8ef2 : mov eax, 1 ; js 0xb8f08 ; ret
0x000000000004438f : mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x000000000010c468 : mov eax, 1 ; mov qword ptr [rdi + 0x20], rcx ; ret
0x00000000000443ad : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x000000000006cf2d : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x000000000010f2d1 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000227d4 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000006e520 : mov eax, 1 ; pop rbx ; ret
0x0000000000029160 : mov eax, 1 ; ret
0x000000000009b581 : mov eax, 2 ; ret
0x00000000000f4fd6 : mov eax, 3 ; cmovne eax, edx ; ret
0x000000000009b591 : mov eax, 3 ; ret
0x0000000000101f53 : mov eax, 3 ; syscall ; ret
0x00000000000e735f : mov eax, 4 ; pop rbx ; pop rbp ; ret
0x000000000009b5a1 : mov eax, 4 ; ret
0x00000000000d6c5c : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x000000000009b5b1 : mov eax, 5 ; ret
0x000000000009b5c1 : mov eax, 6 ; ret
0x00000000000f2eec : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x000000000009b5d1 : mov eax, 7 ; ret
0x000000000009a268 : mov eax, 8 ; pop rbx ; ret
0x00000000000da077 : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d238 : mov eax, dword ptr [rax + 0x100] ; jmp rax
0x000000000011d3a1 : mov eax, dword ptr [rax + 0x10] ; jmp rax
0x00000000000ea7b8 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000006e37c : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000ea780 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000109087 : mov eax, dword ptr [rax + 0x18] ; jmp r8
0x00000000000761bc : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000106bd7 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x106be7 ; ret
0x00000000000e0f98 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xe0fab ; ret
0x000000000006e7b9 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000006e6ba : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000000f42f0 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000000000eae87 : mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000e6f6c : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x00000000000744f7 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000110c64 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006bd6f : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000006bf61 : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000070a04 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000111504 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000036ad6 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000002bc9e : mov eax, dword ptr [rax + 0xa8] ; ret
0x00000000000e7221 : mov eax, dword ptr [rax + 0xc0] ; ret
0x000000000011d14f : mov eax, dword ptr [rax + 0xe0] ; jmp rax
0x0000000000021617 : mov eax, dword ptr [rax + 8] ; add rsp, 0x18 ; ret
0x0000000000115315 : mov eax, dword ptr [rax + 8] ; jmp rax
0x00000000000e71fa : mov eax, dword ptr [rax + 8] ; ret
0x00000000000f4e17 : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0xf4de9 ; leave ; ret
0x000000000007fb8b : mov eax, dword ptr [rax + 8] ; test rax, rax ; jne 0x7fb89 ; ret
0x000000000002cbe5 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002cda7 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002c6ff : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002a2ae : mov eax, dword ptr [rax + rsi*8] ; test rax, rax ; je 0x2a2c0 ; call rax
0x0000000000170529 : mov eax, dword ptr [rax] ; add al, dh ; outsb dx, byte ptr [rsi] ; in al, dx ; call rax
0x000000000011530a : mov eax, dword ptr [rax] ; jmp rax
0x000000000002bc9c : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002cbbc : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000036ad3 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000106d89 : mov eax, dword ptr [rax] ; ret
0x0000000000078d40 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x78d50 ; call rax
0x000000000007d266 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x7d276 ; call rax
0x00000000000e5660 : mov eax, dword ptr [rbp - 0x48] ; call rax
0x0000000000021ff2 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000072f61 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000c5e07 : mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010bb81 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000b7698 : mov eax, dword ptr [rbx + 8] ; test rax, rax ; je 0xb76aa ; call rax
0x00000000000f427c : mov eax, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000001130da : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x1130f0 ; pop rbx ; ret
0x0000000000113146 : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x113104 ; pop rbx ; ret
0x00000000000b78ad : mov eax, dword ptr [rcx + 0x10] ; test rax, rax ; je 0xb78c3 ; call rax
0x0000000000092369 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000001400e6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000001400f6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000000923ed : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000009240d : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000012009a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000121972 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000172d11 : mov eax, dword ptr [rcx] ; add al, al ; adc dh, bh ; call rax
0x00000000001443e0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000010e580 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000092315 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000144331 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000140001 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000001443b1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000000922e6 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000006eadf : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x0000000000077260 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000077288 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000014cdfc : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x14ce10 ; pop rbx ; ret
0x00000000000f4ab0 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0xf4ac8 ; ret
0x0000000000116263 : mov eax, dword ptr [rdi + 0x18] ; ret
0x0000000000115e71 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000010adae : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000b3bc1 : mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000009b1e0 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0x9b268 ; ret
0x000000000009b1f5 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0x9b268 ; ret
0x000000000010ae27 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000001161e0 : mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000072fa1 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000009b200 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0x9b268 ; ret
0x000000000009b21b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0x9b268 ; ret
0x000000000009b230 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0x9b268 ; ret
0x000000000009b245 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0x9b268 ; ret
0x000000000009b250 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0x9b268 ; ret
0x000000000010ae5f : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000072e91 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000070a01 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000c5410 : mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000077501 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000071568 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x71580 ; ret
0x00000000000da270 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000dffe0 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000010bab1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x0000000000115c39 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000115c49 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000115311 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000115306 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x00000000001138a9 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x00000000001153f1 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000109a87 : mov eax, dword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000009bbdd : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0x9bbb9 ; ret
0x000000000002c748 : mov eax, dword ptr [rdi + rax] ; ret
0x0000000000072f00 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000072ed0 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00000000001115f0 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000077251 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000f4ac5 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000b3cd0 : mov eax, dword ptr [rdi] ; ret
0x0000000000073620 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000073630 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x000000000010f244 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x10f256 ; ret
0x000000000010f243 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x10f257 ; ret
0x0000000000113eb4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x113ec6 ; ret
0x0000000000113eb3 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x113ec7 ; ret
0x000000000009bca4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x9bca0 ; xor eax, eax ; ret
0x00000000000d49e1 : mov eax, dword ptr [rdx + 8] ; ret
0x000000000002cb73 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000003242b : mov eax, dword ptr [rdx + rax*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; pop rbx ; ret
0x000000000009a377 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x9a369 ; ret
0x0000000000087f16 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000010b298 : mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x000000000002bc5d : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000070260 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c5d0b : mov eax, dword ptr [rdx] ; and ebx, 8 ; mov r10d, eax ; jmp 0xc5d28
0x0000000000066a4b : mov eax, dword ptr [rdx] ; jmp 0x62c89
0x00000000000ceb28 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000006e6f7 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000006c98c : mov eax, dword ptr [rdx] ; ret
0x0000000000077241 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x77240 ; ret
0x000000000011acc1 : mov eax, dword ptr [rip + 0x280d79] ; jmp rax
0x000000000011ac70 : mov eax, dword ptr [rip + 0x280dc2] ; pop rbp ; pop r12 ; jmp rax
0x000000000011ac10 : mov eax, dword ptr [rip + 0x280e1a] ; pop rbp ; pop r12 ; jmp rax
0x000000000011ad34 : mov eax, dword ptr [rip + 0x283876] ; call qword ptr [rax]
0x000000000011a737 : mov eax, dword ptr [rip + 0x283e73] ; call qword ptr [rax]
0x0000000000100a89 : mov eax, dword ptr [rip + 0x29dfe1] ; ret
0x00000000000eae81 : mov eax, dword ptr [rip + 0x2b1fa9] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000007c0af : mov eax, dword ptr [rip + 0x320deb] ; mov qword ptr [rax], rdi ; ret
0x000000000007aba9 : mov eax, dword ptr [rip + 0x3221d9] ; xor edi, edi ; call qword ptr [rax]
0x000000000007aae5 : mov eax, dword ptr [rip + 0x32229d] ; mov rdi, r13 ; call qword ptr [rax]
0x00000000000774e1 : mov eax, dword ptr [rip + 0x3271d9] ; ret
0x00000000000347b0 : mov eax, dword ptr [rip + 0x3688d2] ; ret
0x00000000000347a0 : mov eax, dword ptr [rip + 0x3688e6] ; ret
0x000000000002c6ac : mov eax, dword ptr [rip + 0x3706f6] ; mov qword ptr [rax], rdx ; ret
0x0000000000029351 : mov eax, dword ptr [rip + 0x3757a9] ; ret
0x0000000000021681 : mov eax, dword ptr [rip + 0x381241] ; ret
0x0000000000021671 : mov eax, dword ptr [rip + 0x381259] ; ret
0x00000000000d160e : mov eax, dword ptr [rsi + 0x14] ; ret
0x000000000002cda1 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002cdb1 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000c2679 : mov eax, dword ptr [rsi + 8] ; mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x00000000001039e5 : mov eax, dword ptr [rsi + 8] ; mov qword ptr [rdi + 0x10], rax ; xor eax, eax ; ret
0x000000000002bc79 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000b45e1 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x000000000002003a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000025e74 : mov eax, dword ptr [rsp + 0x70] ; mov rdi, qword ptr [rsp + 0x60] ; call qword ptr [rbx]
0x0000000000033e9b : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e0309 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000011d29d : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x00000000000a6934 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002d2cd : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000a880d : mov eax, dword ptr [rsp + 8] ; call rax
0x00000000000e19b0 : mov eax, dword ptr [rsp - 0x50] ; ret
0x000000000010f878 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000eaee3 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000eaf44 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000010002a : mov eax, dword ptr [rsp] ; call rax
0x0000000000101bfa : mov eax, eax ; jg 0x101be9 ; mov eax, 0xffffffff ; ret
0x00000000000209ba : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000004cfe0 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000b3884 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007c64e : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003656f : mov eax, eax ; pop rbx ; pop rbp ; ret
0x000000000004a87a : mov eax, eax ; ret
0x000000000007490a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006ac9c : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006b519 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006b4ec : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000069963 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a495 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000042c23 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000112ed1 : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008b0e7 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b43b5 : mov eax, ebx ; call rax
0x00000000000e6d5f : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x0000000000029be6 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000033fd7 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000030e72 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000036e5f : mov eax, ebx ; pop rbx ; ret
0x00000000000e49fa : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000042ae7 : mov eax, ecx ; adc eax, eax ; ret
0x00000000000ef682 : mov eax, ecx ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078122 : mov eax, ecx ; nop dword ptr [rax] ; ret
0x0000000000036a3c : mov eax, ecx ; or rax, rdx ; ret
0x000000000011a43d : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002d430 : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002d3b9 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007e9c5 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007eafa : mov eax, ecx ; pop rbx ; pop rbp ; ret
0x0000000000032447 : mov eax, ecx ; pop rbx ; ret
0x0000000000032451 : mov eax, ecx ; ret
0x00000000000f5ca1 : mov eax, edi ; add rsp, 8 ; ret
0x000000000002cc10 : mov eax, edi ; and eax, 0x7f ; ret
0x00000000000f8ba6 : mov eax, edi ; and eax, 0xffffff ; ret
0x00000000000f8b80 : mov eax, edi ; bswap eax ; ret
0x000000000004491a : mov eax, edi ; cmovae rax, rsi ; ret
0x0000000000038156 : mov eax, edi ; cmovne eax, ecx ; add rsp, 8 ; ret
0x0000000000036a51 : mov eax, edi ; cqo ; idiv rsi ; ret
0x000000000009023c : mov eax, edi ; jne 0x90252 ; ret
0x000000000009bfac : mov eax, edi ; jne 0x9bfc2 ; ret
0x000000000008f637 : mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000020b1b : mov eax, edi ; neg eax ; ret
0x000000000009bd1b : mov eax, edi ; nop dword ptr [rax] ; ret
0x00000000000eb950 : mov eax, edi ; nop word ptr [rax + rax] ; ret
0x000000000002d5e3 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x0000000000020b2e : mov eax, edi ; ret
0x00000000000f8b90 : mov eax, edi ; ror ax, 8 ; ret
0x00000000000369e2 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000f886a : mov eax, edi ; sar rax, 6 ; ret
0x00000000000f8c26 : mov eax, edi ; shr eax, 0x18 ; ret
0x00000000000a8068 : mov eax, edx ; add rsp, 0x18 ; ret
0x000000000011d355 : mov eax, edx ; add rsp, 0x28 ; ret
0x00000000000e1897 : mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000067450 : mov eax, edx ; add rsp, 0x98 ; ret
0x000000000007c19e : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000abb0c : mov eax, edx ; add rsp, 8 ; ret
0x00000000000efa3c : mov eax, edx ; cmove eax, ecx ; ret
0x000000000008d4d6 : mov eax, edx ; cmove rax, rbx ; pop rbx ; ret
0x00000000000a8375 : mov eax, edx ; cmp sil, cl ; je 0xa8388 ; pop rbx ; ret
0x000000000006aa5a : mov eax, edx ; je 0x6aaad ; pop rbx ; ret
0x0000000000072aea : mov eax, edx ; je 0x72b3d ; pop rbx ; ret
0x00000000000d154d : mov eax, edx ; je 0xd15a6 ; ret
0x00000000000b849b : mov eax, edx ; jle 0xb84ad ; ret
0x00000000001038f8 : mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x00000000001038d6 : mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x0000000000112541 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004ee7b : mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000ef5ec : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008b202 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006a8d1 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000437f5 : mov eax, edx ; pop rbx ; ret
0x00000000000ffe02 : mov eax, edx ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000021435 : mov eax, edx ; ret
0x0000000000033571 : mov eax, edx ; sar eax, 0x10 ; ret
0x00000000000b4a85 : mov eax, esi ; add rsp, 8 ; ret
0x000000000008c11f : mov eax, esi ; jmp 0x8c000
0x0000000000033986 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x0000000000067e13 : mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000f66de : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f63a7 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000067cbb : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000067fe4 : mov eax, esi ; pop rbx ; ret
0x0000000000044a54 : mov eax, esi ; ret
0x000000000014beab : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x00000000001124fa : mov eax, esp ; mov rsi, rbx ; call qword ptr [rax]
0x0000000000069ae5 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000076e44 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008c929 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076e43 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006db82 : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cbd74 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004cfdf : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000004a879 : mov eax, r8d ; ret
0x000000000011a468 : mov eax, r9d ; ret
0x000000000009013a : mov ebp, 0x441f0f ; add bl, dh ; ret
0x00000000000e1dc9 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x000000000008fd21 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008fd31 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000008fd11 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000005a931 : mov ebp, 0x8348ffff ; ret 0xeb08
0x0000000000063036 : mov ebp, 0x89000012 ; ret 0x348
0x0000000000071fdf : mov ebp, 0x89000041 ; ret 0x9feb
0x000000000005dc95 : mov ebp, 0x89ffffa2 ; ret
0x00000000001811bd : mov ebp, 0x8e700000 ; int1 ; call qword ptr [rsi]
0x0000000000159efd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000170ca9 : mov ebp, 0xd5300000 ; out dx, eax ; call rax
0x0000000000170cb1 : mov ebp, 0xd5f00000 ; out dx, eax ; jmp qword ptr [rax]
0x00000000001122c5 : mov ebp, 0xe8000186 ; ret 0xffe2
0x000000000008fd91 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000008fd71 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000008fd51 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000008fe42 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x0000000000083858 : mov ebp, 0xf80148c0 ; ret
0x0000000000083adc : mov ebp, 0xf80148c6 ; ret
0x000000000015bfe6 : mov ebp, 0xfb67d10d ; ret
0x0000000000050462 : mov ebp, 0xffffef7b ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000047896 : mov ebp, 0xfffffa6c ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xbd83
0x0000000000046115 : mov ebp, 0xfffffac4 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xbd83
0x00000000000451a3 : mov ebp, 0xfffffb37 ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000045354 : mov ebp, 0xfffffb40 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000ba573 : mov ebp, 0xfffffbd8 ; call r15
0x00000000000bb790 : mov ebp, 0xfffffe48 ; add byte ptr [rax - 0x77], cl ; ret 0x775
0x0000000000064879 : mov ebp, 0xfffffea8 ; add byte ptr [rdi], cl ; test dword ptr [rcx], ebp ; ret
0x00000000000773eb : mov ebp, dword ptr [rbx + 8] ; jmp 0x773b7
0x0000000000001bed : mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000e5257 : mov ebp, eax ; call rax
0x0000000000113469 : mov ebp, eax ; mov r12d, dword ptr [rax] ; jmp 0x11347d
0x000000000001f63c : mov ebp, eax ; mov rsi, rax ; call 0xeb917
0x0000000000064aef : mov ebp, ecx ; jmp 0x60dd5
0x000000000003398c : mov ebp, ecx ; jmp rdx
0x000000000007862d : mov ebp, edx ; call qword ptr [r14]
0x0000000000188969 : mov ebp, esi ; jmp qword ptr [rcx]
0x00000000000cbdc9 : mov ebp, esi ; mov r15, rdi ; add rax, rdx ; jmp rax
0x00000000000f5174 : mov ebp, esp ; pop rbp ; ret
0x0000000000180ff5 : mov ebx, 0x42280000 ; int1 ; jmp qword ptr [rbx]
0x00000000000e1cc1 : mov ebx, 0x48002bcc ; add esp, 8 ; ret
0x000000000018100d : mov ebx, 0x48400000 ; int1 ; call rsp
0x00000000000db9a1 : mov ebx, 0x48fffffe ; add esp, 0x20 ; pop rbx ; ret
0x000000000005ace0 : mov ebx, 0x8348ffff ; ret 0xeb08
0x000000000005c7e0 : mov ebx, 0x89000000 ; ret 0x8b48
0x00000000000c0b53 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0x7fe9
0x00000000000f4a14 : mov ebx, 0xafb8341 ; je 0xf4a23 ; ret
0x000000000016e901 : mov ebx, 0xbf80fffb ; sti ; call rax
0x0000000000159efb : mov ebx, 0xbfbebdbc ; rol cl, -0x3e ; ret
0x000000000007c336 : mov ebx, 0xc031ffff ; pop rbx ; ret
0x000000000010e456 : mov ebx, 0xc8 ; call rax
0x000000000005a715 : mov ebx, 0xf8830001 ; inc dword ptr [rcx - 0x77] ; ret 0x850f
0x00000000000629ee : mov ebx, 2 ; jmp 0x5ecf7
0x0000000000029a45 : mov ebx, dword ptr [rdi] ; je 0x29a59 ; test esi, esi ; je 0x29a59 ; pop rbx ; ret
0x000000000003dd7f : mov ebx, dword ptr [rsp + 0x30] ; add rax, rax ; sub rdx, rax ; jmp 0x3ddc1
0x000000000010aa16 : mov ebx, dword ptr [rsp + 8] ; call rbx
0x000000000010b6db : mov ebx, eax ; jne 0x10b679 ; xor eax, eax ; pop rbx ; ret
0x00000000000e065f : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000c0931 : mov ebx, eax ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x00000000000c08ff : mov ebx, ecx ; mov rdi, rbp ; mov rsi, rbx ; call r12
0x000000000002b4a6 : mov ebx, edi ; test rax, rax ; je 0x2b4b6 ; call rax
0x000000000001f62b : mov ebx, esi ; sub rsp, 0x68 ; call 0xeb888
0x00000000000490dc : mov ecx, 0x8948ffff ; ret 0x3aeb
0x0000000000159ef9 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x0000000000170c29 : mov ecx, 0xc6000000 ; out dx, eax ; call qword ptr [rax]
0x0000000000003150 : mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x000000000002a40a : mov ecx, dword ptr [rax + rbx*8] ; test rcx, rcx ; je 0x2a41c ; call rcx
0x0000000000198ba8 : mov ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret 3
0x0000000000111882 : mov ecx, dword ptr [rbp - 0x168] ; call rcx
0x0000000000025172 : mov ecx, dword ptr [rbp] ; call qword ptr [rbx]
0x00000000000ef8a2 : mov ecx, dword ptr [rcx] ; test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x0000000000115fc0 : mov ecx, dword ptr [rdi + 0x28] ; xor eax, eax ; cmp ecx, edx ; jae 0x115fd9 ; ret
0x0000000000116000 : mov ecx, dword ptr [rdi + 0x28] ; xor eax, eax ; cmp ecx, edx ; jae 0x116019 ; ret
0x0000000000042526 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000012a3ce : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x00000000000709db : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000087f13 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000009bbc9 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0x9bbc7 ; ret
0x00000000000428a6 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000012c743 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c943 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012cb43 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000955c0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000095601 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000134b63 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000134af3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000134a83 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000001349a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134935 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001348c5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134855 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001347e5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134775 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134705 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134c45 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000955a1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000010e942 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x000000000010e74d : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x000000000003146f : mov ecx, eax ; jne 0x31419 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ae08 : mov ecx, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000008f966 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000070d20 : mov ecx, ebp ; mov rdi, r15 ; xor r8d, r8d ; call r12
0x000000000009cc6a : mov ecx, ebp ; mov rdi, rbp ; call rbx
0x000000000006ba7c : mov ecx, ebp ; xor eax, eax ; call 0xb7cb6
0x000000000008f64e : mov ecx, ecx ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x0000000000103684 : mov ecx, ecx ; rep stosq qword ptr [rdi], rax ; ret
0x000000000008f954 : mov ecx, edi ; mov qword ptr [rdx], rcx ; ret
0x00000000000b0bf0 : mov ecx, edi ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000127021 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000127024 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000107fa3 : mov ecx, edx ; xor edx, edx ; call rax
0x00000000000766a7 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000009c9b5 : mov ecx, esi ; call rbx
0x00000000001124f7 : mov ecx, esi ; mov r8, r12 ; mov rsi, rbx ; call qword ptr [rax]
0x00000000000f03c4 : mov edi, 0x2000004 ; call rax
0x00000000000e6c90 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x000000000006d29d : mov edi, 0x89000016 ; ret 0x3f7
0x00000000000a2446 : mov edi, 0x8948000c ; ret 0xc148
0x0000000000033762 : mov edi, 0x89f02444 ; ret 0xe281
0x000000000007bf82 : mov edi, 0x8b8 ; call 0x78207
0x0000000000181435 : mov edi, 0xa3280000 ; int1 ; jmp rsi
0x000000000016e905 : mov edi, 0xc0d0fffb ; sti ; jmp qword ptr [rax]
0x000000000015fe31 : mov edi, 0xc1c0fffd ; std ; inc eax ; ret
0x0000000000170d11 : mov edi, 0xde500000 ; out dx, eax ; jmp rax
0x000000000006a2fa : mov edi, 0xe0 ; call rax
0x000000000006a2ce : mov edi, 0xe0 ; jmp rax
0x00000000000ba572 : mov edi, dword ptr [rbp - 0x428] ; call r15
0x0000000000020d78 : mov edi, dword ptr [rbp - 0x58] ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x00000000000b42c5 : mov edi, dword ptr [rbp - 0x68] ; call r14
0x00000000000a785d : mov edi, dword ptr [rbp] ; lea r9, qword ptr [rsp + 0x30] ; call r12
0x000000000002156e : mov edi, dword ptr [rbx + 0x18] ; call rax
0x0000000000020f9e : mov edi, dword ptr [rdi + 0x18] ; call rdx
0x000000000010f241 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x10f259 ; ret
0x0000000000113eb1 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x113ec9 ; ret
0x000000000004252a : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006a2f9 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006a2cd : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x00000000000f3274 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000015c2a6 : mov edi, dword ptr [rdx] ; ret
0x00000000000e3235 : mov edi, dword ptr [rip + 0x2bd24d] ; call 0x1f4a8
0x000000000009c43d : mov edi, dword ptr [rsi] ; lea r9, qword ptr [rsp + 0x30] ; call r12
0x00000000000e54a9 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000b45dc : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000002516d : mov edi, dword ptr [rsp + 0x20] ; mov rcx, qword ptr [r13] ; call qword ptr [rbx]
0x0000000000028a93 : mov edi, dword ptr [rsp + 0x28] ; mov rcx, qword ptr [rbp] ; call qword ptr [rbx]
0x0000000000027b23 : mov edi, dword ptr [rsp + 0x30] ; mov rcx, qword ptr [rbp] ; call qword ptr [rbx]
0x00000000000237e8 : mov edi, dword ptr [rsp + 0x40] ; call r14
0x0000000000023f45 : mov edi, dword ptr [rsp + 0x40] ; call r15
0x00000000000236e7 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x00000000000249ee : mov edi, dword ptr [rsp + 0x48] ; call r14
0x0000000000023ca4 : mov edi, dword ptr [rsp + 0x48] ; call r15
0x0000000000023bb7 : mov edi, dword ptr [rsp + 0x48] ; call rbx
0x0000000000025e79 : mov edi, dword ptr [rsp + 0x60] ; call qword ptr [rbx]
0x0000000000024ca1 : mov edi, dword ptr [rsp + 0x68] ; call r15
0x000000000010aa32 : mov edi, dword ptr [rsp + 0x68] ; call rax
0x000000000002508d : mov edi, dword ptr [rsp + 0x68] ; call rbx
0x00000000000202fa : mov edi, dword ptr [rsp + 8] ; call rax
0x0000000000020349 : mov edi, dword ptr [rsp] ; add rsp, 0x28 ; jmp rax
0x0000000000035586 : mov edi, dword ptr [rsp] ; call r14
0x0000000000173d1d : mov edi, eax ; call qword ptr [rax]
0x0000000000044a4d : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x44a41 ; mov rax, rsi ; ret
0x00000000000e383f : mov edi, eax ; xor eax, eax ; call 0x4fa56
0x000000000014bf10 : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x000000000010e925 : mov edi, ebp ; call 0x10abd4
0x000000000007aaec : mov edi, ebp ; call qword ptr [rax]
0x000000000010b77e : mov edi, ebp ; call qword ptr [rbx]
0x000000000017dd31 : mov edi, ebp ; call qword ptr [rcx]
0x00000000000c08d9 : mov edi, ebp ; call r12
0x00000000001095ed : mov edi, ebp ; call r14
0x000000000010c609 : mov edi, ebp ; call rax
0x000000000009cb48 : mov edi, ebp ; call rbx
0x000000000007cd66 : mov edi, ebp ; call rcx
0x000000000007f26f : mov edi, ebp ; call rdx
0x000000000005b82a : mov edi, ebp ; jmp 0x57aea
0x0000000000109fd5 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000109e16 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000021fef : mov edi, ebp ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000010e93f : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000010e74a : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000000c0902 : mov edi, ebp ; mov rsi, rbx ; call r12
0x0000000000078642 : mov edi, ebp ; neg rdi ; call qword ptr [r14]
0x00000000000f8ab5 : mov edi, ebp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000a8267 : mov edi, ebp ; sub rsp, 8 ; call r12
0x000000000010ac7d : mov edi, ebp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00000000000e31ba : mov edi, ebx ; call 0x1f4a4
0x000000000003bde9 : mov edi, ebx ; call 0x88004
0x00000000000b9e35 : mov edi, ebx ; call qword ptr [r15]
0x000000000010bb88 : mov edi, ebx ; call qword ptr [rax]
0x0000000000029307 : mov edi, ebx ; call r12
0x000000000002181a : mov edi, ebx ; call r14
0x000000000004c5a1 : mov edi, ebx ; call rax
0x000000000014c3eb : mov edi, ebx ; jne 0x14c3e0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd574 : mov edi, ebx ; mov qword ptr [rdx], rax ; call 0x69857
0x0000000000103281 : mov edi, ebx ; mov r12d, eax ; call 0x1f4a7
0x000000000011cd0b : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000006e7b5 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000006e6b6 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000115170 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x000000000014c578 : mov edi, ebx ; test rdi, rdi ; jne 0x14c572 ; pop rbx ; ret
0x000000000011a07b : mov edi, ecx ; call 0xe4109
0x000000000010ff9a : mov edi, ecx ; jmp r8
0x000000000007f978 : mov edi, ecx ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x000000000007a9b2 : mov edi, ecx ; mov qword ptr [rsp + 0x38], rcx ; call qword ptr [rax]
0x0000000000109084 : mov edi, ecx ; mov r8, qword ptr [rax + 0x18] ; jmp r8
0x00000000000cbdcc : mov edi, edi ; add rax, rdx ; jmp rax
0x000000000005205f : mov edi, edi ; call 0x6e354
0x00000000001138b0 : mov edi, edi ; call qword ptr [rax]
0x00000000001150ce : mov edi, edi ; call r14
0x000000000007f183 : mov edi, edi ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x00000000000ebaf4 : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000070d23 : mov edi, edi ; xor r8d, r8d ; call r12
0x0000000000174d95 : mov edi, edx ; call rax
0x00000000000f4ac8 : mov edi, edx ; jmp rax
0x0000000000044ad1 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x44ab9 ; mov rax, rsi ; ret
0x0000000000043ca1 : mov edi, esi ; call 0x44198
0x000000000006f069 : mov edi, esi ; call 0x9b344
0x0000000000190df1 : mov edi, esi ; call qword ptr [rdi]
0x000000000010a7a8 : mov edi, esi ; call rax
0x000000000005c997 : mov edi, esi ; jmp 0x5c960
0x000000000005d6f7 : mov edi, esi ; jmp 0x5d6c0
0x00000000000e565d : mov edi, esi ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000007ece2 : mov edi, esi ; mov rdx, r15 ; call rax
0x000000000007cadf : mov edi, esp ; call 0x78dc4
0x00000000001047a0 : mov edi, esp ; call 0xe0a84
0x000000000003568d : mov edi, esp ; call r14
0x00000000000e5b04 : mov edi, esp ; call r15
0x0000000000068df4 : mov edi, esp ; call rax
0x000000000009c873 : mov edi, esp ; call rbx
0x00000000001151e1 : mov edi, esp ; call rdx
0x000000000009c9b2 : mov edi, esp ; mov r9, r14 ; call rbx
0x0000000000100027 : mov edi, esp ; mov rax, qword ptr [rsp] ; call rax
0x000000000011187f : mov edi, esp ; mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x000000000002d5f1 : mov edi, esp ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000000efdac : mov edi, esp ; pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x00000000001843c4 : mov edi, gs ; add byte ptr [rax], al ; pop rax ; rep ; jmp qword ptr [rcx]
0x0000000000170ae5 : mov edi, gs ; jmp rax
0x000000000010479f : mov edi, r12d ; call 0xe0a85
0x00000000000efdab : mov edi, r12d ; pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x00000000000b710c : mov edx, 0 ; cmove rax, rdx ; ret
0x00000000000c2436 : mov edx, 0 ; cmovne eax, edx ; ret
0x0000000000073bb6 : mov edx, 0x140 ; pop rbx ; ret
0x00000000000d9fb2 : mov edx, 0x39fffdf2 ; ret
0x0000000000180f05 : mov edx, 0x94180000 ; sti ; call qword ptr [rax]
0x0000000000180f35 : mov edx, 0xb5380000 ; sti ; call qword ptr [rax]
0x000000000015b75e : mov edx, 0xcac982a4 ; call 0xffffffffaed855de
0x00000000000c26f4 : mov edx, 0xffffffff ; cmovne eax, edx ; ret
0x0000000000023497 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00000000000edaf8 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x0000000000036a9f : mov edx, 0xffffffff ; test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x0000000000115926 : mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x0000000000021430 : mov edx, 8 ; mov eax, edx ; ret
0x0000000000072f35 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000b782d : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xb7843 ; call rdx
0x000000000009d0e8 : mov edx, dword ptr [rax] ; cmp edx, esi ; jne 0x9d0e7 ; ret
0x000000000006e348 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000020037 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000f38a9 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000000f35f0 : mov edx, dword ptr [rbp - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000f3e06 : mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x000000000006fe02 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000000f800f : mov edx, dword ptr [rbx] ; jmp 0xf7fd8
0x00000000000c6f5c : mov edx, dword ptr [rcx + 8] ; cmp byte ptr [rdx + r9], 0 ; je 0xc6f31 ; jmp 0xc6f33
0x000000000012196f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000012009d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000006331f : mov edx, dword ptr [rcx] ; mov dword ptr [rdx], eax ; jmp 0x5f531
0x00000000000f4cfa : mov edx, dword ptr [rcx] ; test rdx, rdx ; jne 0xf4cf8 ; leave ; ret
0x000000000014c283 : mov edx, dword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x14c29a ; call rdx
0x0000000000070f4a : mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x00000000000f4ac1 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000009c335 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000007fc35 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x7fc39 ; ret
0x000000000014c170 : mov edx, dword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x14c182 ; call rdx
0x00000000000c2647 : mov edx, dword ptr [rsi + 0x20] ; mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x00000000000f4066 : mov edx, dword ptr [rsi + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000955e2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000955d3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000095623 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a7ab1 : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xa7a86 ; ret
0x0000000000095633 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000012c181 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000012c540 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012bdd1 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000096bb0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000979e0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000955b0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000099450 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x0000000000096c01 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000097a31 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000955f1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000096b91 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000979b1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000095591 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000f03c0 : mov edx, dword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x00000000000f02b9 : mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000a2e89 : mov edx, eax ; add rax, rax ; sub rdx, rax ; jmp 0xa2ec0
0x000000000011d2fb : mov edx, eax ; add rsp, 0x28 ; mov rax, rdx ; ret
0x00000000000445ca : mov edx, eax ; jmp 0x445e2
0x00000000000490e0 : mov edx, eax ; jmp 0x4911f
0x000000000004923d : mov edx, eax ; jmp 0x49266
0x0000000000058746 : mov edx, eax ; jmp 0x58721
0x000000000006d3ea : mov edx, eax ; jmp 0x6d390
0x000000000006d58f : mov edx, eax ; jmp 0x6d532
0x000000000006d728 : mov edx, eax ; jmp 0x6d6c9
0x0000000000071673 : mov edx, eax ; jmp 0x71617
0x0000000000071fe3 : mov edx, eax ; jmp 0x71f87
0x000000000007380b : mov edx, eax ; jmp 0x737a8
0x000000000009db14 : mov edx, eax ; jmp 0x9dae1
0x00000000000a0144 : mov edx, eax ; jmp 0xa0111
0x00000000000a25d4 : mov edx, eax ; jmp 0xa25a1
0x00000000000bae45 : mov edx, eax ; jmp 0xbae67
0x00000000000c57a3 : mov edx, eax ; jmp 0xc5786
0x00000000000c577b : mov edx, eax ; jmp 0xc578a
0x00000000000c5d11 : mov edx, eax ; jmp 0xc5d22
0x00000000000ddcd9 : mov edx, eax ; jmp 0xddc9a
0x00000000000e1d5c : mov edx, eax ; jmp 0xe1cf0
0x00000000000ffa65 : mov edx, eax ; jmp 0xffa17
0x00000000000efdb3 : mov edx, eax ; jmp rcx
0x000000000006c4bb : mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x000000000011d6a6 : mov edx, ebp ; add r9, qword ptr [rbp - 0x88] ; call rax
0x00000000000f3807 : mov edx, ebp ; call rax
0x000000000010c603 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000f3924 : mov edx, ebx ; call rax
0x000000000014c8a7 : mov edx, ebx ; jne 0x14c89e ; pop rbx ; ret
0x000000000010c4f5 : mov edx, ebx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000007f186 : mov edx, ebx ; mov rsi, r13 ; call rax
0x000000000007f362 : mov edx, ebx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000007ece5 : mov edx, edi ; call rax
0x00000000000ef861 : mov edx, edi ; mov rsi, r13 ; mov rdi, rbx ; call r14
0x00000000000fd08f : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000f38b0 : mov edx, esi ; call rax
0x00000000000f35f7 : mov edx, esp ; call rax
0x00000000000ab6b2 : mov edx, esp ; mov rsi, r15 ; call 0x67917
0x00000000000c577a : mov edx, r8d ; jmp 0xc578b
0x00000000001705e9 : mov es, dword ptr [rax] ; add byte ptr [rax + 0x78], dh ; in al, dx ; call rax
0x00000000000977fe : mov es, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000007e7d9 : mov esi, 0x3948feda ; ret 0x2f74
0x000000000009ba9e : mov esi, 0x48000000 ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000016ee7c : mov esi, 0x64fffc59 ; pop rcx ; cld ; call rsp
0x00000000000ef933 : mov esi, 0x75c9840a ; out -0xd, eax ; ret
0x000000000008f885 : mov esi, 0x75c9840f ; in eax, dx ; xor eax, eax ; ret
0x00000000001060ef : mov esi, 0x75d28410 ; fcomi st(3) ; ret
0x00000000000d87f1 : mov esi, 0x83480045 ; ret 0xc702
0x0000000000040f39 : mov esi, 0x83480142 ; ret
0x00000000000390e2 : mov esi, 0x8348016b ; ret
0x0000000000063192 : mov esi, 0x8348ffff ; ret 0xeb08
0x000000000008f79e : mov esi, 0x84450704 ; sal byte ptr [rbp - 0x26], -0xd ; ret
0x00000000000f2056 : mov esi, 0x89482404 ; ret 0xe883
0x000000000007eacf : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000083c0f : mov esi, 0x8c48348 ; ret
0x00000000000d10a4 : mov esi, 0xa89002c ; pop rdx ; pop rcx ; pop rbx ; ret
0x000000000008f8dd : mov esi, 0xc0844507 ; jne 0x8f8c9 ; xor eax, eax ; ret
0x0000000000159efe : mov esi, 0xc2c1c0bf ; ret
0x00000000000ef6b0 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000008f745 : mov esi, 0xc984070c ; jne 0x8f740 ; ret
0x000000000008f7d5 : mov esi, 0xca390714 ; je 0x8f7d8 ; ret
0x000000000008f701 : mov esi, 0xd2840714 ; jne 0x8f700 ; ret
0x0000000000170cd1 : mov esi, 0xd9d00000 ; out dx, eax ; jmp rax
0x000000000009a164 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000002bd1 : mov esi, 0xf8cbeb8f ; ret
0x00000000000fd186 : mov esi, 0xfb83014f ; or dword ptr [rdi], ecx ; ret
0x0000000000068dee : mov esi, 1 ; mov rdi, r12 ; call rax
0x00000000000e52a1 : mov esi, 2 ; jmp rax
0x00000000000e52bb : mov esi, 3 ; jmp rax
0x00000000000c579b : mov esi, dword ptr [r14 + rsi*4] ; cmp ebp, esi ; jge 0xc5789 ; mov edx, eax ; jmp 0xc578e
0x00000000000b42c1 : mov esi, dword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x0000000000035582 : mov esi, dword ptr [rbp] ; mov rdi, qword ptr [r12] ; call r14
0x00000000000c5775 : mov esi, dword ptr [rbx + 0x18] ; xor ecx, ecx ; mov edx, r8d ; jmp 0xc5790
0x0000000000020d7c : mov esi, dword ptr [rdx + rbx + 0x20] ; call rax
0x000000000005ef7f : mov esi, dword ptr [rip + 0x33dfab] ; call rax
0x0000000000055a07 : mov esi, dword ptr [rip + 0x347523] ; call rax
0x00000000000554a3 : mov esi, dword ptr [rip + 0x347a87] ; call rax
0x000000000005010f : mov esi, dword ptr [rip + 0x34ce1b] ; call rax
0x000000000004a3fb : mov esi, dword ptr [rip + 0x352b2f] ; call rax
0x0000000000044e4f : mov esi, dword ptr [rip + 0x3580db] ; call rax
0x00000000000428aa : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00000000000c579c : mov esi, dword ptr [rsi + rsi*4] ; cmp ebp, esi ; jge 0xc5788 ; mov edx, eax ; jmp 0xc578d
0x0000000000126f09 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000001095e8 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x00000000000a8808 : mov esi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000007cd61 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rcx
0x00000000000236e2 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000023bb2 : mov esi, dword ptr [rsp + 0x50] ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x0000000000025088 : mov esi, dword ptr [rsp + 0x70] ; mov rdi, qword ptr [rsp + 0x68] ; call rbx
0x00000000000f02be : mov esi, dword ptr [rsp + 8] ; call rax
0x000000000007c821 : mov esi, dword ptr [rsp] ; jmp rax
0x000000000008c9ca : mov esi, dword ptr [rsp] ; test rsi, rsi ; jne 0x8c9e5 ; jmp 0x8c99f
0x000000000001f63f : mov esi, eax ; call 0xeb914
0x00000000000fda27 : mov esi, eax ; jmp 0xfd9f0
0x0000000000171435 : mov esi, eax ; jmp qword ptr [rax]
0x000000000011cc0f : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000072502 : mov esi, ebp ; call 0x44c09
0x000000000007f189 : mov esi, ebp ; call rax
0x000000000017258d : mov esi, ebp ; jmp rax
0x000000000003568a : mov esi, ebp ; mov rdi, r12 ; call r14
0x000000000007f365 : mov esi, ebp ; mov rdi, r12 ; call rax
0x00000000000ef864 : mov esi, ebp ; mov rdi, rbx ; call r14
0x000000000007f52d : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000011c34a : mov esi, ebp ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000001124fd : mov esi, ebx ; call qword ptr [rax]
0x00000000000c0905 : mov esi, ebx ; call r12
0x00000000000e5b01 : mov esi, ebx ; mov rdi, r12 ; call r15
0x000000000007f26c : mov esi, ebx ; mov rdi, r13 ; call rdx
0x00000000001138ad : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x00000000001150cb : mov esi, ebx ; mov rdi, r15 ; call r14
0x00000000000c08d6 : mov esi, ebx ; mov rdi, rbp ; call r12
0x000000000011608e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x000000000002aea6 : mov esi, ebx ; movsxd rsi, dword ptr [r8 + rsi*4] ; add rsi, r8 ; jmp rsi
0x000000000003b90e : mov esi, ecx ; jmp 0x3b3a0
0x00000000000b0c60 : mov esi, ecx ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000ab6b5 : mov esi, edi ; call 0x67914
0x00000000001732f5 : mov esi, edi ; jmp qword ptr [rax]
0x000000000010efaa : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x00000000000f3278 : mov esi, edx ; call rax
0x000000000003e204 : mov esi, edx ; jmp 0x3dca0
0x00000000000e2b27 : mov esi, edx ; jne 0xe2b1a ; mov byte ptr [rcx - 1], 0 ; ret
0x0000000000001beb : mov esi, edx ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x000000000005b827 : mov esi, edx ; mov r15, r13 ; jmp 0x57aed
0x000000000007cadc : mov esi, esi ; mov rdi, r12 ; call 0x78dc7
0x00000000000fd092 : mov esi, esi ; mov rdi, r13 ; call rax
0x0000000000111554 : mov esi, esi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000b8fd9 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x000000000010e4a4 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000001153f5 : mov esi, esp ; call qword ptr [rax]
0x000000000010c4f8 : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000010bb85 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000007ebd2 : mov esi, esp ; mov rdi, rbx ; call rax
0x00000000001787f4 : mov esp, 0x18000033 ; jrcxz 0x1787ed ; jmp qword ptr [rsi]
0x0000000000096a88 : mov esp, 0x1d8d4cd2 ; ret
0x0000000000180ff4 : mov esp, 0x280000bb ; int1 ; jmp qword ptr [rbx]
0x00000000001810e5 : mov esp, 0x29f80000 ; cli ; jmp qword ptr [rdi]
0x00000000001810fd : mov esp, 0x2b100000 ; cli ; call qword ptr [rdi]
0x00000000000e496e : mov esp, 0x415d002b ; pop rsp ; ret
0x0000000000085ad7 : mov esp, 0x440f48c7 ; ret 0xc083
0x0000000000113ab1 : mov esp, 0x440f49df ; fmul qword ptr [rax - 0x7d] ; ret
0x00000000000db3ba : mov esp, 0x441f0f ; add dh, dh ; ret 0x7540
0x0000000000084dd1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000084e01 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000084df1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000001956f4 : mov esp, 0x48000202 ; jp 0x1956fa ; call qword ptr [rdi]
0x00000000001893f4 : mov esp, 0x5800013f ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x0000000000181055 : mov esp, 0x6fe80000 ; int1 ; jmp rbx
0x000000000017fbf4 : mov esp, 0x80000a7 ; lock ; call qword ptr [rax]
0x00000000001195e7 : mov esp, 0x83457501 ; ret
0x0000000000189df4 : mov esp, 0x88000149 ; sal ch, 1 ; jmp rax
0x000000000018ddf4 : mov esp, 0x88000189 ; ret 0xfff6
0x00000000001827f4 : mov esp, 0x980000d3 ; pop rax ; jmp qword ptr [rcx]
0x000000000018ebf4 : mov esp, 0x98000197 ; add esi, edi ; call qword ptr [rax]
0x0000000000177cf4 : mov esp, 0xa8000028 ; ret
0x0000000000181ff4 : mov esp, 0xb80000cb ; sub esi, edx ; call qword ptr [rax]
0x0000000000155560 : mov esp, 0xbf00000f ; sldt word ptr [rax] ; ret 0xf
0x0000000000085ac6 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x0000000000160879 : mov esp, 0xc678fff4 ; hlt ; jmp rsi
0x0000000000081cab : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x0000000000170c89 : mov esp, 0xd1700000 ; out dx, eax ; call rax
0x000000000001fb65 : mov esp, 0xe8000000 ; ret 0x7a4
0x000000000017a1f4 : mov esp, 0xe800004d ; in eax, dx ; call rdi
0x000000000018a0f4 : mov esp, 0xe800014c ; loope 0x18a0f7 ; jmp qword ptr [rcx]
0x0000000000187bf4 : mov esp, 0xf8000127 ; cmc ; jmp qword ptr [rcx]
0x000000000008c48b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000084de1 : mov esp, 0xf80148c0 ; ret
0x00000000000c32a5 : mov esp, 1 ; jmp 0xc3274
0x000000000011346c : mov esp, dword ptr [rax] ; jmp 0x11347a
0x0000000000038b66 : mov esp, dword ptr [rsp + 0x28] ; add rax, rax ; sub rdx, rax ; jmp 0x38ba7
0x000000000003b481 : mov esp, dword ptr [rsp + 0x38] ; add rax, rax ; sub rdx, rax ; jmp 0x3b4c2
0x0000000000103284 : mov esp, eax ; call 0x1f4a4
0x000000000001fc67 : mov esp, eax ; call 0x9a158
0x000000000001f64f : mov esp, eax ; call 0xeb914
0x0000000000033989 : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x00000000000d313c : mov esp, ecx ; xor edi, edi ; jmp 0xd3109
0x00000000000b91bf : mov esp, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000064aec : mov esp, edx ; mov r13, r9 ; jmp 0x60dd8
0x00000000000e5254 : mov esp, edx ; mov rbp, rax ; call rax
0x000000000017224d : mov esp, esi ; call rax
0x0000000000078628 : mov esp, esi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r14]
0x00000000001706bd : mov esp, gs ; call qword ptr [rax]
0x00000000000481f6 : mov qword ptr [r12 + 8], rdx ; jmp 0x481c5
0x0000000000113279 : mov qword ptr [r12], rcx ; pop rbp ; pop r12 ; ret
0x00000000000d5f28 : mov qword ptr [r8], r9 ; xor al, al ; ret
0x00000000000e53e4 : mov qword ptr [r9 + 0x10], rdx ; mov qword ptr [rax + 8], r9 ; ret
0x000000000008afd4 : mov qword ptr [r9 + 0x18], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e541c : mov qword ptr [r9 + 8], rdx ; mov qword ptr [rax + 0x10], r9 ; ret
0x0000000000103897 : mov qword ptr [r9], r10 ; ret
0x00000000001038d8 : mov qword ptr [r9], rdi ; ret
0x00000000000e5420 : mov qword ptr [rax + 0x10], r9 ; ret
0x000000000006dfe8 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006e028 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006e568 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000072f38 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000c264a : mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x00000000000c267c : mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x000000000006dfec : mov qword ptr [rax + 0x40], rcx ; ret
0x000000000003699d : mov qword ptr [rax + 0x40], rdx ; call qword ptr [rbx]
0x000000000006e606 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000014ce16 : mov qword ptr [rax + 8], 0 ; pop rbx ; ret
0x00000000000767a9 : mov qword ptr [rax + 8], 0 ; ret
0x0000000000067a8a : mov qword ptr [rax + 8], r9 ; add dword ptr [rdx + 4], 1 ; ret
0x00000000000e53e8 : mov qword ptr [rax + 8], r9 ; ret
0x000000000007e874 : mov qword ptr [rax + 8], rsi ; ret
0x00000000000e09a3 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x000000000004496b : mov qword ptr [rax], rcx ; mov byte ptr [rax + 8], 0 ; ret
0x000000000006e6f4 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000006c989 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000007c0b5 : mov qword ptr [rax], rdi ; ret
0x000000000002c6b2 : mov qword ptr [rax], rdx ; ret
0x000000000006eb60 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000502c4 : mov qword ptr [rbp - 0x1188], rcx ; jmp rax
0x0000000000044ff5 : mov qword ptr [rbp - 0x5c8], rcx ; jmp rax
0x00000000000f3f82 : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x000000000007ebe0 : mov qword ptr [rbp], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a82e7 : mov qword ptr [rbp], rbx ; call r12
0x0000000000029a7d : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000073b56 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000011d225 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000074328 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000011d1dd : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000072674 : mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116298 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076122 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000007fc0f : mov qword ptr [rbx + 0x20], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cf3aa : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000a9a19 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072f64 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000007f97d : mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000000dfec0 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000007618a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000073a46 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x000000000007631c : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000000e5021 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x000000000011d3e0 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000113111 : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000000ddd36 : mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000007f8c5 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x000000000007e25c : mov qword ptr [rbx], rdx ; xor al, al ; pop rbx ; ret
0x000000000007f97a : mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x000000000010e4d3 : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x0000000000142103 : mov qword ptr [rcx + 5], rdx ; ret
0x0000000000142113 : mov qword ptr [rcx + 6], rdx ; ret
0x0000000000142123 : mov qword ptr [rcx + 7], rdx ; ret
0x0000000000142133 : mov qword ptr [rcx + 8], rdx ; ret
0x00000000000c2bbb : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000710d3 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000001420c0 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000001420e0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x00000000001420f0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000142100 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000142110 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000142120 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000142130 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x00000000001420d0 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x00000000001420b0 : mov qword ptr [rcx], rdx ; ret
0x00000000000daaaa : mov qword ptr [rdi + 0x100], rdx ; ret
0x00000000000e53a9 : mov qword ptr [rdi + 0x10], r9 ; mov qword ptr [rdx], rdi ; ret
0x00000000000432ee : mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000001039e8 : mov qword ptr [rdi + 0x10], rax ; xor eax, eax ; ret
0x0000000000096dcc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000097c1c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009575c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009573c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009968c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009642f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009579f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000957bf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000095780 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000760b2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000073306 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000115eb8 : mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x0000000000115ee5 : mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000000a8df4 : mov qword ptr [rdi + 0x20], rcx ; pop rbx ; pop rbp ; ret
0x000000000010c46d : mov qword ptr [rdi + 0x20], rcx ; ret
0x00000000001115cb : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x000000000008aec8 : mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000111583 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x00000000000760e2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000034508 : mov qword ptr [rdi + 0x78], -1 ; ret
0x00000000000da22d : mov qword ptr [rdi + 0x80], rdx ; ret
0x0000000000096d8c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000097bdc : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000956fc : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009964c : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x0000000000096dac : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000097bfc : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009571c : mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009966c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000001349a7 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134937 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001348c7 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134857 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000096c8a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000097aca : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000001347e7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009564a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000009953a : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x0000000000096caa : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000097aea : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000134777 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009565a : mov qword ptr [rdi + 6], rdx ; ret
0x000000000009955a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x0000000000096cca : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000097b0a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000134707 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009566a : mov qword ptr [rdi + 7], rdx ; ret
0x000000000009957a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000e2a97 : mov qword ptr [rdi + 8], 0 ; ret
0x0000000000042ae3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000043273 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000010cc37 : mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x00000000000760b6 : mov qword ptr [rdi + 8], rax ; ret
0x0000000000037053 : mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000007367e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x0000000000037044 : mov qword ptr [rdi + 8], rdx ; ret
0x00000000000e2a87 : mov qword ptr [rdi + 8], rsi ; ret
0x00000000000855e1 : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000012bc64 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012bca2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000431de : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000012bfeb : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001341b7 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c1cb : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000134137 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c3bb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001340b7 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c58c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000134028 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012c78c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133f98 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012c98c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133f08 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000965b0 : mov qword ptr [rdi - 1], rdx ; ret
0x0000000000043169 : mov qword ptr [rdi - 8], r9 ; ret
0x000000000012bc68 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000012bca6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000012be1b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012bf17 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012be63 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000134237 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000004f065 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008ad06 : mov qword ptr [rdi], r8 ; pop rbx ; ret
0x0000000000043138 : mov qword ptr [rdi], r9 ; ret
0x00000000000e2a84 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000037057 : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000096c16 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000962d6 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000095626 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000095636 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000095647 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000095657 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000095667 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000855de : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000095617 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000001f85c : mov qword ptr [rdi], rcx ; ret
0x0000000000096c03 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000097a33 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000965d0 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000965f0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000096600 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000096610 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000096620 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000010cc34 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x00000000000965e0 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000008fa0f : mov qword ptr [rdi], rdx ; ret
0x00000000000994a3 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x0000000000126eed : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000000443b2 : mov qword ptr [rdi], rsi ; ret
0x000000000006a1f6 : mov qword ptr [rdx + 0x140], rcx ; ret
0x0000000000073bb4 : mov qword ptr [rdx + 0x140], rdi ; pop rbx ; ret
0x000000000006d46d : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000006d613 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000010bbff : mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000010bbdb : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000010bbdf : mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000001444ba : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000014012a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x00000000001444da : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000014014a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x00000000001444fa : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000014016a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000014438a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000014005a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000010e4f0 : mov qword ptr [rdx + 8], rdi ; ret
0x00000000000fd576 : mov qword ptr [rdx], rax ; call 0x69855
0x0000000000144333 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000010e5ba : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000140003 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000002ce8c : mov qword ptr [rdx], rax ; ret
0x0000000000071d8e : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000083fdd : mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000006e345 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000008f944 : mov qword ptr [rdx], rcx ; ret
0x00000000000ceb2a : mov qword ptr [rdx], rdi ; ret
0x000000000010e4ed : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000011bfd8 : mov qword ptr [rip + 0x286821], rsi ; call 0xe8279
0x00000000000f5287 : mov qword ptr [rip + 0x2ac352], rax ; pop rbp ; ret
0x00000000000ea33f : mov qword ptr [rip + 0x2b2f7a], rbx ; pop rbx ; ret
0x00000000000e1d54 : mov qword ptr [rip + 0x2bcc25], rax ; mov rdx, rax ; jmp 0xe1cf8
0x000000000007e880 : mov qword ptr [rip + 0x321289], rsi ; ret
0x00000000000cf6d3 : mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000010adee : mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000037615 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000c2b3b : mov qword ptr [rsi + 0x18], rdx ; mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x0000000000036fc0 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000dfea1 : mov qword ptr [rsi + 0x48], rax ; ret
0x000000000006ea84 : mov qword ptr [rsi + 0x60], rbx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000da19e : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000cf6b6 : mov qword ptr [rsi + 8], 0 ; ret
0x000000000010adbe : mov qword ptr [rsi + 8], rax ; ret
0x00000000000cf6cf : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000101c15 : mov qword ptr [rsi + r8 - 0xb8], rdx ; ret
0x000000000007800a : mov qword ptr [rsi], rax ; mov rax, r9 ; ret
0x000000000007330a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000102d92 : mov qword ptr [rsi], rdi ; ret
0x00000000000f8b48 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000355c8 : mov qword ptr [rsp + 0x10], r9 ; call r14
0x000000000007ab17 : mov qword ptr [rsp + 0x28], r14 ; call rcx
0x000000000007ac5a : mov qword ptr [rsp + 0x28], rdx ; xor edi, edi ; call qword ptr [rax]
0x00000000000c8c13 : mov qword ptr [rsp + 0x30], r9 ; call 0x84ea7
0x000000000007a9b4 : mov qword ptr [rsp + 0x38], rcx ; call qword ptr [rax]
0x000000000007a9dc : mov qword ptr [rsp + 0x38], rdx ; call rax
0x000000000007f92f : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000011635b : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00000000001130be : mov qword ptr fs:[rax], rdx ; ret
0x0000000000113110 : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000002ce8b : mov qword ptr fs:[rdx], rax ; ret
0x0000000000126eec : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000015b75d : mov r10d, 0xcac982a4 ; call 0xffffffffaed855df
0x00000000000c5d10 : mov r10d, eax ; jmp 0xc5d23
0x0000000000064aeb : mov r12, r10 ; mov r13, r9 ; jmp 0x60dd9
0x000000000001fc66 : mov r12, rax ; call 0x9a159
0x00000000000d313b : mov r12, rcx ; xor edi, edi ; jmp 0xd310a
0x0000000000078627 : mov r12, rsi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r14]
0x00000000001195e6 : mov r12d, 0x83457501 ; ret
0x00000000000c32a4 : mov r12d, 1 ; jmp 0xc3275
0x000000000011346b : mov r12d, dword ptr [rax] ; jmp 0x11347b
0x0000000000103283 : mov r12d, eax ; call 0x1f4a5
0x000000000001f64e : mov r12d, eax ; call 0xeb915
0x00000000000e5253 : mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000064aee : mov r13, r9 ; jmp 0x60dd6
0x000000000001f63b : mov r13, rax ; mov rsi, rax ; call 0xeb918
0x000000000007862c : mov r13, rdx ; call qword ptr [r14]
0x00000000000c5774 : mov r14, qword ptr [rbx + 0x18] ; xor ecx, ecx ; mov edx, r8d ; jmp 0xc5791
0x00000000000fda26 : mov r14d, eax ; jmp 0xfd9f1
0x000000000005b826 : mov r14d, r10d ; mov r15, r13 ; jmp 0x57aee
0x000000000005b829 : mov r15, r13 ; jmp 0x57aeb
0x00000000000cbdcb : mov r15, rdi ; add rax, rdx ; jmp rax
0x00000000000e565c : mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000109086 : mov r8, qword ptr [rax + 0x18] ; jmp r8
0x00000000000c5d0a : mov r8, qword ptr [rdx] ; and ebx, 8 ; mov r10d, eax ; jmp 0xc5d29
0x00000000001124f9 : mov r8, r12 ; mov rsi, rbx ; call qword ptr [rax]
0x0000000000078e81 : mov r8d, 0xffffffff ; setne dl ; jmp 0x78e9b
0x000000000009c9b4 : mov r9, r14 ; call rbx
0x00000000001124f6 : mov r9, r14 ; mov r8, r12 ; mov rsi, rbx ; call qword ptr [rax]
0x00000000000b7143 : mov rax, -0xe ; ret
0x0000000000073a50 : mov rax, -1 ; pop rbx ; ret
0x0000000000033a4e : mov rax, -1 ; ret
0x000000000009b570 : mov rax, 1 ; ret
0x000000000009b580 : mov rax, 2 ; ret
0x000000000009b590 : mov rax, 3 ; ret
0x000000000009b5a0 : mov rax, 4 ; ret
0x000000000009b5b0 : mov rax, 5 ; ret
0x000000000009b5c0 : mov rax, 6 ; ret
0x000000000009b5d0 : mov rax, 7 ; ret
0x000000000011d237 : mov rax, qword ptr [rax + 0x100] ; jmp rax
0x000000000011d3a0 : mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000ea7b7 : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000ea77f : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x00000000000761bb : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000006e7b8 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000006e6b9 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000000f42ef : mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000744f6 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000110c63 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006bd6e : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000006bf60 : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000070a03 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000111503 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000e7218 : mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000e7220 : mov rax, qword ptr [rax + 0xc0] ; ret
0x000000000011d14e : mov rax, qword ptr [rax + 0xe0] ; jmp rax
0x0000000000021616 : mov rax, qword ptr [rax + 8] ; add rsp, 0x18 ; ret
0x0000000000115314 : mov rax, qword ptr [rax + 8] ; jmp rax
0x00000000000e71f9 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002a2ad : mov rax, qword ptr [rax + r14*8] ; test rax, rax ; je 0x2a2c1 ; call rax
0x000000000002cc04 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002c6fe : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000115309 : mov rax, qword ptr [rax] ; jmp rax
0x000000000002bc9b : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x0000000000036ad2 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000106d88 : mov rax, qword ptr [rax] ; ret
0x0000000000078d3f : mov rax, qword ptr [rax] ; test rax, rax ; je 0x78d51 ; call rax
0x000000000007d265 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x7d277 ; call rax
0x00000000000e565f : mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000021ff1 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000072f60 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000b7697 : mov rax, qword ptr [rbx + 8] ; test rax, rax ; je 0xb76ab ; call rax
0x00000000001130d9 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x1130f1 ; pop rbx ; ret
0x0000000000113145 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x113105 ; pop rbx ; ret
0x00000000000b78ac : mov rax, qword ptr [rcx + 0x10] ; test rax, rax ; je 0xb78c4 ; call rax
0x0000000000140000 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000116262 : mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000115e70 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000b3bc0 : mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000010ae26 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000072fa0 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000010ae5e : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000072e90 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000070a00 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000077500 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000010bab0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x0000000000115c38 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000115c48 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000115310 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000115305 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x00000000001153f0 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000109a86 : mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x0000000000077250 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000f4ac4 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000002cba2 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000010b297 : mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000002bc5c : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000066a4a : mov rax, qword ptr [rdx] ; jmp 0x62c8a
0x00000000000ceb27 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000077240 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x77241 ; ret
0x000000000011acc0 : mov rax, qword ptr [rip + 0x280d79] ; jmp rax
0x000000000011ad33 : mov rax, qword ptr [rip + 0x283876] ; call qword ptr [rax]
0x000000000011a736 : mov rax, qword ptr [rip + 0x283e73] ; call qword ptr [rax]
0x0000000000100a88 : mov rax, qword ptr [rip + 0x29dfe1] ; ret
0x000000000007aba8 : mov rax, qword ptr [rip + 0x3221d9] ; xor edi, edi ; call qword ptr [rax]
0x00000000000774e0 : mov rax, qword ptr [rip + 0x3271d9] ; ret
0x0000000000029350 : mov rax, qword ptr [rip + 0x3757a9] ; ret
0x0000000000021680 : mov rax, qword ptr [rip + 0x381241] ; ret
0x0000000000021670 : mov rax, qword ptr [rip + 0x381259] ; ret
0x000000000002bc78 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000b45e0 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000020039 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002d2cc : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000a880c : mov rax, qword ptr [rsp + 8] ; call rax
0x00000000000e19af : mov rax, qword ptr [rsp - 0x50] ; ret
0x00000000000eaee2 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000eaf43 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000100029 : mov rax, qword ptr [rsp] ; call rax
0x0000000000106d87 : mov rax, qword ptr fs:[rax] ; ret
0x000000000008b201 : mov rax, r10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000083fe0 : mov rax, r10 ; pop rbx ; ret
0x00000000000f5dff : mov rax, r10 ; ret
0x000000000008c928 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001062f9 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b3883 : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007c64d : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003656e : mov rax, r8 ; pop rbx ; pop rbp ; ret
0x000000000007c01b : mov rax, r8 ; ret
0x0000000000078121 : mov rax, r9 ; nop dword ptr [rax] ; ret
0x000000000007800d : mov rax, r9 ; ret
0x0000000000074909 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006b518 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006b4eb : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006a120 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bc484 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000008b0e6 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b43b4 : mov rax, rbx ; call rax
0x00000000000e6d5e : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x0000000000029be5 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006a49f : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000030e71 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000036e5e : mov rax, rbx ; pop rbx ; ret
0x00000000000e49f9 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x0000000000036a3b : mov rax, rcx ; or rax, rdx ; ret
0x000000000002d42f : mov rax, rcx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002d3b8 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007e9c4 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007eaf9 : mov rax, rcx ; pop rbx ; pop rbp ; ret
0x0000000000032446 : mov rax, rcx ; pop rbx ; ret
0x0000000000032450 : mov rax, rcx ; ret
0x00000000000f5ca0 : mov rax, rdi ; add rsp, 8 ; ret
0x0000000000044919 : mov rax, rdi ; cmovae rax, rsi ; ret
0x0000000000036a50 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000009023b : mov rax, rdi ; jne 0x90253 ; ret
0x000000000009bfab : mov rax, rdi ; jne 0x9bfc3 ; ret
0x000000000008f636 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009bd1a : mov rax, rdi ; nop dword ptr [rax] ; ret
0x000000000002d5e2 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000077510 : mov rax, rdi ; ret
0x00000000000f8869 : mov rax, rdi ; sar rax, 6 ; ret
0x00000000000a8067 : mov rax, rdx ; add rsp, 0x18 ; ret
0x000000000011d354 : mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000007c19d : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000abb0b : mov rax, rdx ; add rsp, 8 ; ret
0x000000000008d4d5 : mov rax, rdx ; cmove rax, rbx ; pop rbx ; ret
0x00000000000a8374 : mov rax, rdx ; cmp sil, cl ; je 0xa8389 ; pop rbx ; ret
0x000000000006aa59 : mov rax, rdx ; je 0x6aaae ; pop rbx ; ret
0x0000000000072ae9 : mov rax, rdx ; je 0x72b3e ; pop rbx ; ret
0x00000000000ef5eb : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000437f4 : mov rax, rdx ; pop rbx ; ret
0x0000000000042cb9 : mov rax, rdx ; ret
0x00000000000b4a84 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000006bebd : mov rax, rsi ; pop rbp ; pop r12 ; ret
0x000000000006c04e : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000fcfe1 : mov rax, rsi ; pop rbx ; ret
0x0000000000044a53 : mov rax, rsi ; ret
0x000000000014beaa : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x00000000000773ea : mov rbp, qword ptr [rbx + 8] ; jmp 0x773b8
0x000000000003398b : mov rbp, r9 ; jmp rdx
0x00000000000e5256 : mov rbp, rax ; call rax
0x00000000000cbdc8 : mov rbp, rsi ; mov r15, rdi ; add rax, rdx ; jmp rax
0x00000000000f5173 : mov rbp, rsp ; pop rbp ; ret
0x000000000010aa15 : mov rbx, qword ptr [rsp + 8] ; call rbx
0x000000000010b6da : mov rbx, rax ; jne 0x10b67a ; xor eax, eax ; pop rbx ; ret
0x00000000000e065e : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x000000000002b4a5 : mov rbx, rdi ; test rax, rax ; je 0x2b4b7 ; call rax
0x000000000001f62a : mov rbx, rsi ; sub rsp, 0x68 ; call 0xeb889
0x0000000000025171 : mov rcx, qword ptr [r13] ; call qword ptr [rbx]
0x000000000002a409 : mov rcx, qword ptr [rax + rbx*8] ; test rcx, rcx ; je 0x2a41d ; call rcx
0x0000000000111881 : mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x0000000000027b27 : mov rcx, qword ptr [rbp] ; call qword ptr [rbx]
0x0000000000095600 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000010e941 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000010e74c : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000009cc69 : mov rcx, r13 ; mov rdi, rbp ; call rbx
0x000000000006ba7b : mov rcx, r13 ; xor eax, eax ; call 0xb7cb7
0x000000000003146e : mov rcx, rax ; jne 0x3141a ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008f965 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000008f953 : mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x0000000000127020 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000127023 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000107fa2 : mov rcx, rdx ; xor edx, edx ; call rax
0x0000000000035585 : mov rdi, qword ptr [r12] ; call r14
0x000000000009c43c : mov rdi, qword ptr [r14] ; lea r9, qword ptr [rsp + 0x30] ; call r12
0x0000000000020f9d : mov rdi, qword ptr [r15 + 0x18] ; call rdx
0x00000000000ba571 : mov rdi, qword ptr [rbp - 0x428] ; call r15
0x0000000000020d77 : mov rdi, qword ptr [rbp - 0x58] ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x00000000000b42c4 : mov rdi, qword ptr [rbp - 0x68] ; call r14
0x000000000002156d : mov rdi, qword ptr [rbx + 0x18] ; call rax
0x0000000000042529 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006a2f8 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006a2cc : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00000000000f3273 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000000e3234 : mov rdi, qword ptr [rip + 0x2bd24d] ; call 0x1f4a9
0x000000000002516c : mov rdi, qword ptr [rsp + 0x20] ; mov rcx, qword ptr [r13] ; call qword ptr [rbx]
0x0000000000028a92 : mov rdi, qword ptr [rsp + 0x28] ; mov rcx, qword ptr [rbp] ; call qword ptr [rbx]
0x0000000000027b22 : mov rdi, qword ptr [rsp + 0x30] ; mov rcx, qword ptr [rbp] ; call qword ptr [rbx]
0x00000000000237e7 : mov rdi, qword ptr [rsp + 0x40] ; call r14
0x0000000000023f44 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000000236e6 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000249ed : mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000023ca3 : mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000023bb6 : mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x0000000000025e78 : mov rdi, qword ptr [rsp + 0x60] ; call qword ptr [rbx]
0x0000000000024ca0 : mov rdi, qword ptr [rsp + 0x68] ; call r15
0x000000000010aa31 : mov rdi, qword ptr [rsp + 0x68] ; call rax
0x000000000002508c : mov rdi, qword ptr [rsp + 0x68] ; call rbx
0x00000000000202f9 : mov rdi, qword ptr [rsp + 8] ; call rax
0x000000000007cade : mov rdi, r12 ; call 0x78dc5
0x000000000003568c : mov rdi, r12 ; call r14
0x00000000000e5b03 : mov rdi, r12 ; call r15
0x0000000000068df3 : mov rdi, r12 ; call rax
0x000000000009c872 : mov rdi, r12 ; call rbx
0x000000000009c9b1 : mov rdi, r12 ; mov r9, r14 ; call rbx
0x0000000000100026 : mov rdi, r12 ; mov rax, qword ptr [rsp] ; call rax
0x000000000007aaeb : mov rdi, r13 ; call qword ptr [rax]
0x000000000002dbfa : mov rdi, r13 ; call rax
0x000000000007f26e : mov rdi, r13 ; call rdx
0x0000000000021fee : mov rdi, r13 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000043ca0 : mov rdi, r14 ; call 0x44199
0x000000000010a7a7 : mov rdi, r14 ; call rax
0x000000000005c996 : mov rdi, r14 ; jmp 0x5c961
0x000000000005d6f6 : mov rdi, r14 ; jmp 0x5d6c1
0x000000000007ece1 : mov rdi, r14 ; mov rdx, r15 ; call rax
0x000000000005205e : mov rdi, r15 ; call 0x6e355
0x00000000001138af : mov rdi, r15 ; call qword ptr [rax]
0x00000000001150cd : mov rdi, r15 ; call r14
0x000000000007f182 : mov rdi, r15 ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x0000000000070d22 : mov rdi, r15 ; xor r8d, r8d ; call r12
0x00000000000e383e : mov rdi, rax ; xor eax, eax ; call 0x4fa57
0x000000000014bf0f : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x000000000010e924 : mov rdi, rbp ; call 0x10abd5
0x000000000010b77d : mov rdi, rbp ; call qword ptr [rbx]
0x00000000000c08d8 : mov rdi, rbp ; call r12
0x00000000001095ec : mov rdi, rbp ; call r14
0x000000000010c608 : mov rdi, rbp ; call rax
0x000000000009cb47 : mov rdi, rbp ; call rbx
0x000000000007cd65 : mov rdi, rbp ; call rcx
0x000000000010b327 : mov rdi, rbp ; call rdx
0x0000000000109fd4 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000109e15 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000010e93e : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000010e749 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000000c0901 : mov rdi, rbp ; mov rsi, rbx ; call r12
0x0000000000078641 : mov rdi, rbp ; neg rdi ; call qword ptr [r14]
0x00000000000f8ab4 : mov rdi, rbp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000a8266 : mov rdi, rbp ; sub rsp, 8 ; call r12
0x000000000010ac7c : mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00000000000e31b9 : mov rdi, rbx ; call 0x1f4a5
0x000000000003bde8 : mov rdi, rbx ; call 0x88005
0x00000000000b9e34 : mov rdi, rbx ; call qword ptr [r15]
0x000000000010bb87 : mov rdi, rbx ; call qword ptr [rax]
0x0000000000029306 : mov rdi, rbx ; call r12
0x0000000000021819 : mov rdi, rbx ; call r14
0x000000000004c5a0 : mov rdi, rbx ; call rax
0x000000000014c3ea : mov rdi, rbx ; jne 0x14c3e1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd573 : mov rdi, rbx ; mov qword ptr [rdx], rax ; call 0x69858
0x0000000000103280 : mov rdi, rbx ; mov r12d, eax ; call 0x1f4a8
0x000000000011cd0a : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000006e7b4 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000006e6b5 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000011516f : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000010ff99 : mov rdi, rcx ; jmp r8
0x000000000007a9b1 : mov rdi, rcx ; mov qword ptr [rsp + 0x38], rcx ; call qword ptr [rax]
0x0000000000109083 : mov rdi, rcx ; mov r8, qword ptr [rax + 0x18] ; jmp r8
0x00000000000f4ac7 : mov rdi, rdx ; jmp rax
0x000000000006f068 : mov rdi, rsi ; call 0x9b345
0x0000000000109185 : mov rdi, rsp ; call rax
0x00000000001151e0 : mov rdi, rsp ; call rdx
0x00000000000f4cf9 : mov rdx, qword ptr [r9] ; test rdx, rdx ; jne 0xf4cf9 ; leave ; ret
0x0000000000072f34 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000b782c : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xb7844 ; call rdx
0x0000000000020036 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000006331e : mov rdx, qword ptr [rcx] ; mov dword ptr [rdx], eax ; jmp 0x5f532
0x000000000014c282 : mov rdx, qword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x14c29b ; call rdx
0x000000000014c16f : mov rdx, qword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x14c183 ; call rdx
0x000000000012bdd0 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000955f0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000f35f6 : mov rdx, r12 ; call rax
0x00000000000ab6b1 : mov rdx, r12 ; mov rsi, r15 ; call 0x67918
0x00000000000f3806 : mov rdx, r13 ; call rax
0x000000000010c602 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000f38af : mov rdx, r14 ; call rax
0x000000000007ece4 : mov rdx, r15 ; call rax
0x00000000000fd08e : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000a2e88 : mov rdx, r8 ; add rax, rax ; sub rdx, rax ; jmp 0xa2ec1
0x00000000000445c9 : mov rdx, r8 ; jmp 0x445e3
0x00000000000490df : mov rdx, rax ; jmp 0x49120
0x000000000004923c : mov rdx, rax ; jmp 0x49267
0x0000000000058745 : mov rdx, rax ; jmp 0x58722
0x00000000000bae44 : mov rdx, rax ; jmp 0xbae68
0x00000000000ddcd8 : mov rdx, rax ; jmp 0xddc9b
0x00000000000e1d5b : mov rdx, rax ; jmp 0xe1cf1
0x00000000000efdb2 : mov rdx, rax ; jmp rcx
0x00000000000f3923 : mov rdx, rbx ; call rax
0x000000000014c8a6 : mov rdx, rbx ; jne 0x14c89f ; pop rbx ; ret
0x000000000010c4f4 : mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000007f185 : mov rdx, rbx ; mov rsi, r13 ; call rax
0x000000000007f361 : mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000035581 : mov rsi, qword ptr [r13] ; mov rdi, qword ptr [r12] ; call r14
0x00000000000b42c0 : mov rsi, qword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x0000000000020d7b : mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000005ef7e : mov rsi, qword ptr [rip + 0x33dfab] ; call rax
0x0000000000055a06 : mov rsi, qword ptr [rip + 0x347523] ; call rax
0x00000000000554a2 : mov rsi, qword ptr [rip + 0x347a87] ; call rax
0x000000000005010e : mov rsi, qword ptr [rip + 0x34ce1b] ; call rax
0x000000000004a3fa : mov rsi, qword ptr [rip + 0x352b2f] ; call rax
0x0000000000044e4e : mov rsi, qword ptr [rip + 0x3580db] ; call rax
0x00000000000428a9 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00000000001095e7 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x000000000007cd60 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rcx
0x00000000000f02bd : mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000007c820 : mov rsi, qword ptr [rsp] ; jmp rax
0x000000000010c4f7 : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000007ebd1 : mov rsi, r12 ; mov rdi, rbx ; call rax
0x000000000007f188 : mov rsi, r13 ; call rax
0x0000000000035689 : mov rsi, r13 ; mov rdi, r12 ; call r14
0x000000000007f364 : mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000ef863 : mov rsi, r13 ; mov rdi, rbx ; call r14
0x000000000007cadb : mov rsi, r14 ; mov rdi, r12 ; call 0x78dc8
0x00000000000fd091 : mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000ab6b4 : mov rsi, r15 ; call 0x67915
0x000000000001f63e : mov rsi, rax ; call 0xeb915
0x000000000011cc0e : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000007f52c : mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000011c349 : mov rsi, rbp ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000001124fc : mov rsi, rbx ; call qword ptr [rax]
0x00000000000c0904 : mov rsi, rbx ; call r12
0x00000000000e5b00 : mov rsi, rbx ; mov rdi, r12 ; call r15
0x000000000007f26b : mov rsi, rbx ; mov rdi, r13 ; call rdx
0x00000000001138ac : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x00000000001150ca : mov rsi, rbx ; mov rdi, r15 ; call r14
0x00000000000c08d5 : mov rsi, rbx ; mov rdi, rbp ; call r12
0x000000000011608d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x000000000010efa9 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000000f3277 : mov rsi, rdx ; call rax
0x00000000001153f4 : mov rsi, rsp ; call qword ptr [rax]
0x000000000010bb84 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000033988 : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x000000000002bc6c : mov ss, dword ptr [rbx] ; add bl, dh ; ret
0x00000000000a686e : mov ss, dword ptr [rdi + 4] ; add byte ptr [rcx], bh ; ret
0x00000000000e02c3 : mov word ptr [r8 + 0x21], si ; ret
0x00000000000855d1 : mov word ptr [rax + rdx - 2], cx ; ret
0x0000000000142092 : mov word ptr [rcx + 4], dx ; ret
0x00000000001420d3 : mov word ptr [rcx + 8], dx ; ret
0x0000000000142060 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000142050 : mov word ptr [rcx], dx ; ret
0x0000000000096d0c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000097b5c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009569c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000995cc : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x0000000000096e14 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000097c64 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000095784 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000996d4 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000134c47 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000376f2 : mov word ptr [rdi + 2], dx ; ret
0x000000000008f6c2 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000097a08 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000008f5c2 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000955d8 : mov word ptr [rdi + 4], dx ; ret
0x0000000000099478 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x0000000000097a6a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000096c2a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009561a : mov word ptr [rdi + 8], dx ; ret
0x00000000000994da : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x0000000000126f22 : mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000012c36c : mov word ptr [rdi - 2], cx ; ret
0x000000000012c184 : mov word ptr [rdi - 2], dx ; ret
0x000000000012c368 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000955a3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000096276 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000014be25 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000134c4b : mov word ptr [rdi], cx ; ret
0x0000000000096b93 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000979b3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000095593 : mov word ptr [rdi], dx ; ret
0x0000000000099423 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000008f680 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000008f5f0 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x0000000000126f1f : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00000000000da260 : mov word ptr [rdi], si ; xor al, al ; ret
0x000000000010e56f : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x0000000000144408 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009234d : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000923d1 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00000000001443b3 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000000922e8 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000ea76f : mov word ptr [rdx], ax ; ret
0x00000000000df2a5 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x000000000003765f : mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x00000000000376a6 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x000000000014be28 : mov word ptr [rsi - 2], cx ; ret
0x00000000000da243 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000033674 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000033844 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x0000000000126f1e : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000001cf00 : movabs al, byte ptr [0x1800000000000766] ; ret
0x000000000017368c : movabs al, byte ptr [0x300001b4d0fff7c1] ; ret 0xfff7
0x0000000000034e23 : movabs al, byte ptr [0x3d83000000000036] ; ret
0x000000000001cd08 : movabs al, byte ptr [0x4800000000000746] ; ret 0x39
0x000000000001cd38 : movabs al, byte ptr [0x5800000000000766] ; ret 0x39
0x00000000001752e4 : movabs al, byte ptr [0x7000005c98fffdc2] ; ret
0x000000000001ced0 : movabs al, byte ptr [0x800000000000746] ; ret
0x00000000000658d0 : movabs al, byte ptr [0x840fc08548000000] ; ret
0x000000000003225c : movabs al, byte ptr [0x8948c08548000038] ; ret
0x000000000001d098 : movabs al, byte ptr [0xc800000000000746] ; ret
0x0000000000170dc0 : movabs al, byte ptr [0xd0ffefec600000c3] ; ret
0x000000000001d0c8 : movabs al, byte ptr [0xd800000000000766] ; ret
0x0000000000173858 : movabs al, byte ptr [0xf0fff805a00001c2] ; ret 1
0x00000000000203cc : movabs byte ptr [0x1d89003824c50589], al ; ret
0x000000000014c726 : movabs byte ptr [0x5b00000000002536], al ; ret
0x00000000000cbfaa : movabs byte ptr [0x8948c08548ffff6b], al ; ret 0x840f
0x000000000007c13a : movabs byte ptr [0x8948c08548ffffda], al ; ret 0x840f
0x0000000000022c8a : movabs byte ptr [0x8948c78948000b8f], al ; ret
0x0000000000078451 : movabs dword ptr [0x148eb294800324d], eax ; ret
0x00000000000bde7e : movabs dword ptr [0x39eb7cc239000001], eax ; ret 0x850f
0x00000000000c5543 : movabs dword ptr [0x5bffffff63820fc8], eax ; ret
0x000000000000087f : movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x000000000006aabc : movabs eax, dword ptr [0x5b0000000502c764] ; ret
0x00000000000a4cde : movabs eax, dword ptr [0x5e415bffffffffb8] ; ret
0x00000000000ab221 : movabs eax, dword ptr [0x8348d78948fffffb] ; ret 0x8010
0x00000000000cf25b : movabs eax, dword ptr [0x8948e9894cfffb28] ; ret 0x8948
0x0000000000032fdf : movapd xmm0, xmm1 ; ret
0x0000000000032fe0 : movaps xmm0, xmm1 ; ret
0x000000000012a8f2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000012a8ee : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000012a99c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000033451 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000032f09 : movd mm0, eax ; ret
0x000000000003335c : movd mm0, edi ; ret
0x0000000000032f08 : movd mm0, rax ; ret
0x0000000000032fdc : movd mm1, eax ; movapd xmm0, xmm1 ; ret
0x0000000000032f6f : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000000332d6 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x0000000000032fdb : movd mm1, rax ; movapd xmm0, xmm1 ; ret
0x0000000000032f6e : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000033450 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000000332b0 : movd xmm0, eax ; ret
0x000000000003335b : movd xmm0, edi ; ret
0x00000000000332d5 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x0000000000095670 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000096ecd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x0000000000097d1d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x0000000000096530 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009583d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000097f83 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x0000000000096773 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x000000000013491f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001348af : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013483f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001347cf : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000096e6d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000097cbd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000957dd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000013475f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000096e8d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000097cdd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000957fd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000001346ef : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000096ead : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000097cfd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009581d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000134d0f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134c9f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134c2f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134bbf : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134b4f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134adf : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134a6f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001349ff : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013498f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000085536 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm8 ; ret
0x0000000000133e7b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000133eeb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000096630 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x0000000000097b24 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000096ce4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000096357 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x0000000000095684 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000956c7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000956b7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000095738 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000956f8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000095718 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000095698 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000095839 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000957d9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000957f9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000095819 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000095674 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000099594 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000001346f4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000092432 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x0000000000092452 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x0000000000092472 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000922bc : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x0000000000092266 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000092433 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x0000000000092453 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x0000000000092473 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000922bd : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x0000000000092267 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000095671 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000096ece : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x0000000000097d1e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x0000000000096531 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009583e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x000000000009978e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000097f84 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x0000000000096774 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x0000000000099804 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x0000000000134920 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001348b0 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134840 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001347d0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000096e6e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000097cbe : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000957de : movq qword ptr [rdi + 0xd], mm2 ; ret
0x000000000009972e : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x0000000000134760 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000096e8e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000097cde : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000957fe : movq qword ptr [rdi + 0xe], mm2 ; ret
0x000000000009974e : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000001346f0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000096eae : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000097cfe : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009581e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x000000000009976e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000134d10 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134ca0 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134c30 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134bc0 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134b50 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134ae0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134a70 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134a00 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134990 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000085523 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x85538 ; ret
0x0000000000085538 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000133e7c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x0000000000133eec : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000134627 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001345a7 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000134517 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000134497 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000134417 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000134397 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000134317 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000134297 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000134217 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000134197 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000134117 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000134097 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000134007 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133f77 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133ee7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000096631 : movq qword ptr [rdi - 1], mm0 ; ret
0x0000000000097b25 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000096ce5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000096358 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x0000000000095685 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000956d8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000963ab : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000956c8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000956b8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000095739 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000956f9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000095719 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000095699 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009583a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000957da : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000957fa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009581a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000095675 : movq qword ptr [rdi], mm0 ; ret
0x0000000000099595 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000001346f5 : movq qword ptr [rdi], mm1 ; ret
0x0000000000032f07 : movq xmm0, rax ; ret
0x0000000000032fda : movq xmm1, rax ; movapd xmm0, xmm1 ; ret
0x0000000000032f6d : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x000000000017f92d : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; nop ; and esi, eax ; jmp qword ptr [rax]
0x000000000018f8b5 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; cmp byte ptr [rax - 9], cl ; call qword ptr [rdi]
0x0000000000189edc : movsb byte ptr [rdi], byte ptr [rsi] ; add qword ptr [rax], rax ; nop ; sal ebp, 1 ; jmp qword ptr [rcx]
0x0000000000173de5 : movsb byte ptr [rdi], byte ptr [rsi] ; clc ; call rax
0x00000000001948dc : movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; add dword ptr [rax], eax ; mov al, -0x7f ; sti ; jmp qword ptr [rdx]
0x000000000015c122 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000015d37d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x15d3d6 ; jmp 0x15d317
0x000000000011503e : movsb byte ptr [rdi], byte ptr [rsi] ; lock dec dword ptr [rax - 0x77] ; ret
0x000000000016179c : movsb byte ptr [rdi], byte ptr [rsi] ; mov dl, -0xb ; call rcx
0x0000000000063191 : movsb byte ptr [rdi], byte ptr [rsi] ; mov esi, 0x8348ffff ; ret 0xeb08
0x000000000017e6b9 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; call qword ptr [rdi]
0x00000000000336b7 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000010e928 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x00000000001916dc : movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000016e665 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rax + 0x20fffda4]
0x000000000016e669 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; jmp qword ptr [rax]
0x000000000016e5a5 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; jmp rcx
0x00000000001884dc : movsb byte ptr [rdi], byte ptr [rsi] ; xor byte ptr [rcx], al ; add byte ptr [rax - 0x80], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001889dc : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, 0x8a300001 ; cmc ; jmp qword ptr [rcx]
0x0000000000170961 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; sal dl, -0x13 ; call rax
0x00000000000a23c4 : movsd dword ptr [rdi], dword ptr [rsi] ; clc ; dec dword ptr [rax - 0x77] ; jmp 0xa241b
0x000000000016f701 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call qword ptr [rax]
0x000000000016f7c1 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; jmp rdx
0x000000000016f7bd : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; push qword ptr [rdx - 0x5b] ; cld ; jmp rdx
0x0000000000164075 : movsd dword ptr [rdi], dword ptr [rsi] ; cli ; call rax
0x0000000000026a6f : movsd dword ptr [rdi], dword ptr [rsi] ; idiv edi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000015d9b5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000018a0b0 : movsd dword ptr [rdi], dword ptr [rsi] ; loope 0x18a0ab ; call qword ptr [rcx]
0x000000000015d271 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000000f1bc3 : movsd dword ptr [rdi], dword ptr [rsi] ; push -0x76000001 ; ret 0x8948
0x0000000000043192 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000016e671 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; inc dword ptr [rax - 0x5a] ; std ; jmp rax
0x000000000016e5ed : movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp rsi
0x000000000016e5f1 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; push qword ptr [rsi - 0x5a] ; std ; call qword ptr [rsi]
0x000000000007757a : movsd dword ptr [rdi], dword ptr [rsi] ; test byte ptr [rdx], dh ; add byte ptr [rcx], al ; ret
0x0000000000032f72 : movsd qword ptr [rdi], xmm1 ; ret
0x0000000000032f3b : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000a80d8 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000444f3 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000011cc15 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000332d9 : movss dword ptr [rdi], xmm1 ; ret
0x00000000000332c0 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x00000000000444ad : movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000ef6af : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000817e8 : movsx eax, dl ; ret
0x000000000008f744 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x8f741 ; ret
0x000000000008f884 : movsx ecx, byte ptr [rdi] ; test cl, cl ; jne 0x8f881 ; xor eax, eax ; ret
0x00000000000ef932 : movsx ecx, byte ptr [rdx] ; test cl, cl ; jne 0xef928 ; ret
0x00000000001060ee : movsx edx, byte ptr [rax] ; test dl, dl ; jne 0x1060d8 ; ret
0x000000000008f7d4 : movsx edx, byte ptr [rdi + rax] ; cmp edx, ecx ; je 0x8f7d9 ; ret
0x000000000008f700 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x8f701 ; ret
0x00000000000ef931 : movsx rcx, byte ptr [rdx] ; test cl, cl ; jne 0xef929 ; ret
0x00000000001060ed : movsx rdx, byte ptr [rax] ; test dl, dl ; jne 0x1060d9 ; ret
0x00000000000aec00 : movsxd r8, dword ptr [rdi + r8*4] ; add rdi, r8 ; jmp rdi
0x0000000000080161 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001322fb : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000012a3cb : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000008f650 : movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000008f5b0 : movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x000000000008f4e8 : movsxd rax, dword ptr [r10 + rax*4] ; add r10, rax ; jmp r10
0x000000000007d244 : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x0000000000051061 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, r12 ; jmp rax
0x00000000000690f0 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x000000000011091e : movsxd rax, dword ptr [rdi + rax*4] ; add rdi, rax ; jmp rdi
0x000000000002d470 : movsxd rax, dword ptr [rdx + r12*4] ; add rdx, rax ; jmp rdx
0x00000000000688ca : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000209bc : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000425ff : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000009a197 : movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x0000000000036efa : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x0000000000123b33 : movsxd rax, ecx ; add rax, rdi ; ret
0x00000000001239f7 : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x0000000000123c4c : movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x0000000000123acc : movsxd rax, ecx ; ret
0x0000000000095caa : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000001477fd : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000095439 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000ce89e : movsxd rcx, dword ptr [r9 + rcx*4] ; add rcx, r9 ; jmp rcx
0x0000000000068a4d : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000111556 : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000c1342 : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x0000000000114d7e : movsxd rdi, edi ; mov byte ptr [rdx + rdi], 0 ; ret
0x000000000002cda4 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000c31be : movsxd rdi, edi ; shl rdi, 2 ; call 0x1f449
0x000000000012a49f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000055bc7 : movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00000000000bc957 : movsxd rdx, dword ptr [rax + r13*4] ; add rax, rdx ; jmp rax
0x00000000000be7b8 : movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000cb6a5 : movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x000000000005ec68 : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000d7cbe : movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x000000000007cf97 : movsxd rdx, dword ptr [rax + rdi*4] ; add rax, rdx ; jmp rax
0x0000000000068995 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000b8fdb : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x0000000000055b1c : movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x0000000000031a7b : movsxd rdx, dword ptr [rdi + rsi*4] ; add rdx, rdi ; jmp rdx
0x0000000000031c91 : movsxd rsi, dword ptr [r11 + rsi*4] ; add rsi, r11 ; jmp rsi
0x000000000002aea8 : movsxd rsi, dword ptr [r8 + rsi*4] ; add rsi, r8 ; jmp rsi
0x000000000009a227 : movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000b0c62 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x000000000009a25f : movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000aeb9c : movsxd rsi, dword ptr [rcx + rsi*4] ; add rcx, rsi ; jmp rcx
0x00000000000c3149 : movsxd rsi, ebp ; shl rsi, 2 ; call 0x1f439
0x00000000001036a8 : movsxd rsi, esi ; mov byte ptr [rdi + rsi], 0 ; ret
0x00000000000dfffa : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x0000000000037369 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000a80d9 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x00000000000444ae : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x00000000000444f4 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x00000000000374f1 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000032f73 : movups xmmword ptr [rdi], xmm1 ; ret
0x0000000000032f3c : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000332c1 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000010baa7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000115a9b : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010b64c : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011b567 : movzx eax, al ; add rsp, 8 ; ret
0x00000000000d150e : movzx eax, al ; cmova eax, edx ; ret
0x00000000000a7a80 : movzx eax, al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000b8eae : movzx eax, al ; lea rax, qword ptr [rax + rax - 1] ; ret
0x00000000000338cc : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000aceb3 : movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000dcca4 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000679ac : movzx eax, al ; neg eax ; pop rbx ; ret
0x0000000000067979 : movzx eax, al ; neg eax ; ret
0x000000000010fae4 : movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000010c6da : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000e4ff0 : movzx eax, al ; pop rbx ; ret
0x00000000000343e9 : movzx eax, al ; ret
0x000000000002ca05 : movzx eax, ax ; ret
0x000000000006d7ad : movzx eax, bh ; ret
0x00000000000756f9 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076996 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000075585 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000074997 : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000073682 : movzx eax, byte ptr [rax] ; ret
0x00000000000d4a40 : movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x00000000000814f8 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000147810 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000084f70 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000081513 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000075590 : movzx eax, byte ptr [rdx] ; ret
0x00000000000756fa : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009a1b7 : movzx eax, cl ; pop rbx ; ret
0x00000000000f8bed : movzx eax, dh ; or eax, edi ; bswap eax ; ret
0x000000000006d7ac : movzx eax, dil ; ret
0x000000000009a1df : movzx eax, dl ; pop rbx ; ret
0x00000000000f8bfb : movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00000000000f8bec : movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x000000000002cbbe : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000da240 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000999aa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x999a9 ; ret
0x0000000000099a5a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x99a59 ; ret
0x00000000001486b4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000081510 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000147813 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000e98a2 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000003216f : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x32157 ; ret
0x00000000000b9c1b : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0xb9c00 ; xor eax, eax ; ret
0x0000000000090561 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000011e1af : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00000000000903f3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000014b194 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000014b1f4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000014b1e4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000014b1d4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000014b1c4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000014b1b4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000014b1a4 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000134640 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000148467 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000014b17b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000134d20 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000084f73 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000084f99 : movzx edx, dl ; sub eax, edx ; ret
0x00000000001345c0 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000134cb0 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a963d : movzx esi, word ptr [rbp - 0x40] ; jmp 0xa960a
0x00000000000dca34 : movzx rax, al ; ret
0x0000000000083927 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000072505 : mul dword ptr [rsi] ; std ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000033001 : mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000033000 : mulsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x000000000006ad13 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000e1691 : neg eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001125a3 : neg eax ; add rsp, 0x18 ; ret
0x00000000001128ca : neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000033dd7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fda24 : neg eax ; mov r14d, eax ; jmp 0xfd9f3
0x00000000000c0835 : neg eax ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000eca5c : neg eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000dcca7 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000679af : neg eax ; pop rbx ; ret
0x0000000000020b1d : neg eax ; ret
0x000000000007ee91 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000078645 : neg edi ; call qword ptr [r14]
0x00000000000db801 : neg edx ; cmp dword ptr [rsp - 0x18], 2 ; cmove eax, edx ; ret
0x0000000000078644 : neg rdi ; call qword ptr [r14]
0x0000000000171ab8 : nop ; adc al, 1 ; add byte ptr [rax - 0x5f], al ; jmp qword ptr [rax]
0x000000000016ec90 : nop ; adc edi, esp ; jmp rax
0x0000000000174b08 : nop ; add al, byte ptr ds:[rax] ; mov al, 0x55 ; cli ; jmp rax
0x000000000005c13c : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000133d77 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000020193 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000147b1c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170641 : nop ; add byte ptr [rax], al ; jnp 0x170639 ; jmp qword ptr [rax]
0x00000000000e110d : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000017e80e : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; push rcx ; ret
0x000000000017addd : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000045eab : nop ; add rax, qword ptr [rbp - 0x4b8] ; jmp rax
0x0000000000051064 : nop ; add rax, r12 ; jmp rax
0x0000000000068998 : nop ; add rax, rdx ; jmp rax
0x000000000009a22a : nop ; add rax, rsi ; jmp rax
0x00000000000a693f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000006732f : nop ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000b939f : nop ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002165f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007348f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000333ef : nop ; addss xmm0, xmm1 ; ret
0x000000000016e454 : nop ; and al, 0xfffffffffffffffb ; push qword ptr [rax] ; sti ; call rax
0x000000000016ec60 : nop ; and al, 0xfffffffffffffffc ; inc dword ptr [rax + 0x26] ; cld ; call qword ptr [rax]
0x000000000007360f : nop ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000017f930 : nop ; and esi, eax ; jmp qword ptr [rax]
0x0000000000084dcf : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000008fcff : nop ; bsr eax, eax ; add rax, rdi ; ret
0x000000000008fe8f : nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000173d8d : nop ; clc ; call qword ptr [rax]
0x0000000000173974 : nop ; clc ; jmp qword ptr [rax]
0x00000000001741b0 : nop ; cld ; add dword ptr [rax], eax ; lock stc ; jmp qword ptr [rax]
0x000000000016f1a8 : nop ; cld ; call qword ptr [rax]
0x0000000000182691 : nop ; cld ; jmp qword ptr [rbx]
0x000000000008a6bc : nop ; cld ; or dword ptr [rax], eax ; ret
0x000000000017fea0 : nop ; cli ; call qword ptr [rax]
0x0000000000174a94 : nop ; cli ; jmp qword ptr [rax]
0x00000000000d799c : nop ; cmc ; dec dword ptr [rcx - 0x77] ; ret 0x894c
0x0000000000187850 : nop ; cmc ; jmp qword ptr [rcx]
0x000000000015fd8c : nop ; cmp ah, -1 ; mov al, -0x7f ; cld ; call rax
0x000000000016f1dc : nop ; cmp al, -4 ; call qword ptr [rax]
0x000000000016f198 : nop ; cmp bh, ah ; call qword ptr [rax]
0x0000000000187530 : nop ; cmp esi, ebp ; jmp qword ptr [rcx]
0x000000000016f1d4 : nop ; cmp esp, edi ; call qword ptr [rax]
0x0000000000170b44 : nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, eax ; call rax
0x00000000001743ec : nop ; cwde ; stc ; jmp rax
0x000000000017039c : nop ; in al, dx ; call qword ptr [rax]
0x00000000001703fc : nop ; in al, dx ; jmp rax
0x000000000016feb0 : nop ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; lock mov ah, -0x15 ; jmp rax
0x000000000016e504 : nop ; jb 0x16e505 ; call qword ptr [rax]
0x00000000001700f0 : nop ; jbe 0x1700fa ; add byte ptr [rax + 0xb], dh ; in al, dx ; call qword ptr [rax]
0x000000000017d9c0 : nop ; jg 0x17d9b5 ; call rax
0x000000000018c470 : nop ; jg 0x18c46c ; jmp qword ptr [rsi]
0x000000000015fdbc : nop ; jl 0x15fdc2 ; jmp qword ptr [rax + 0x10fffc8f]
0x00000000001612d4 : nop ; jle 0x1612cf ; call qword ptr [rax]
0x000000000016e524 : nop ; jle 0x16e525 ; call qword ptr [rax]
0x000000000016fdcc : nop ; jmp 0x16fdd2
0x000000000016fddc : nop ; jmp 0x16fde2
0x0000000000170dac : nop ; jmp 0xffffffffc3680da6
0x000000000016e50c : nop ; jne 0x16e50d ; call qword ptr [rax]
0x000000000016e51c : nop ; jnp 0x16e51d ; call qword ptr [rax]
0x0000000000170140 : nop ; jns 0x17014a ; add byte ptr [rax + 0x24], al ; in al, dx ; jmp rax
0x0000000000173c44 : nop ; jns 0x173c42 ; jmp qword ptr [rax]
0x000000000016e514 : nop ; js 0x16e515 ; call qword ptr [rax]
0x0000000000181970 : nop ; mov bh, -0xf ; call qword ptr [rdx]
0x0000000000181940 : nop ; mov bh, -0xf ; jmp qword ptr [rax]
0x00000000000cb6af : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000012bf9f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015fc94 : nop ; mov dl, dh ; jmp rax
0x00000000000f4fdf : nop ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x000000000010ae2f : nop ; mov dword ptr [rsi], 0xb ; ret
0x000000000012c17f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000db07f : nop ; mov eax, 0x5f ; syscall ; ret
0x00000000000b84cf : nop ; mov eax, 0x6e ; syscall ; ret
0x00000000000b8cdf : nop ; mov eax, 0xfffa ; ret
0x00000000000295bf : nop ; mov eax, 0xffffffff ; ret
0x000000000009c33f : nop ; mov eax, 1 ; ret
0x000000000011427f : nop ; mov eax, 2 ; ret
0x00000000000f427b : nop ; mov eax, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x000000000009b1ff : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0x9b269 ; ret
0x000000000009b24f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0x9b269 ; ret
0x000000000007361f : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x00000000000f8b8f : nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000012c53f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000096baf : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000068f3f : nop ; mov qword ptr [rdi], rcx ; ret
0x0000000000073a4f : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000007747f : nop ; mov rax, -1 ; ret
0x0000000000072f9f : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000072e8f : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000011530f : nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x00000000001153ef : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000007724f : nop ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000008f88f : nop ; mov rax, rdi ; ret
0x00000000000f3f85 : nop ; mov rdx, r13 ; call rax
0x00000000000da25f : nop ; mov word ptr [rdi], si ; xor al, al ; ret
0x000000000009566f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000016e668 : nop ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; jmp qword ptr [rax]
0x000000000007d243 : nop ; movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000007558f : nop ; movzx eax, byte ptr [rdx] ; ret
0x00000000000da23f : nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000016e99c : nop ; or edi, esp ; jmp qword ptr [rax]
0x000000000016e998 : nop ; or esp, edi ; call qword ptr [rax + 0x20fffc0b]
0x000000000018a600 : nop ; out -0xb, eax ; jmp qword ptr [rcx]
0x000000000016eac4 : nop ; out -5, eax ; jmp rax
0x000000000016eb18 : nop ; out dx, al ; sti ; jmp rax
0x000000000016ef18 : nop ; pop rbp ; cld ; jmp qword ptr [rax]
0x00000000000c5d6f : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000447ef : nop ; pop rbx ; ret
0x00000000001828c0 : nop ; pop rcx ; call rdi
0x0000000000173aec : nop ; pop rsi ; clc ; call qword ptr [rax]
0x0000000000176eb0 : nop ; pop rsi ; jmp 0x176eb6
0x000000000016f10c : nop ; push rbp ; cld ; call qword ptr [rax]
0x000000000016f11c : nop ; push rbx ; cld ; call qword ptr [rax]
0x000000000016f12c : nop ; push rcx ; cld ; call qword ptr [rax]
0x000000000016f124 : nop ; push rdx ; cld ; call qword ptr [rax]
0x000000000016f144 : nop ; push rsi ; cld ; call qword ptr [rax]
0x000000000016f114 : nop ; push rsp ; cld ; call qword ptr [rax]
0x0000000000171cec : nop ; rep ; call rax
0x000000000001cff8 : nop ; ret
0x000000000001cde8 : nop ; ret 0x39
0x0000000000002f6a : nop ; ret 0x5bdb
0x0000000000160934 : nop ; ret 0xfff4
0x000000000016e94c : nop ; ret 0xfffb
0x0000000000189ee0 : nop ; sal ebp, 1 ; jmp qword ptr [rcx]
0x000000000015fe58 : nop ; salc ; std ; call rax
0x000000000016e938 : nop ; sar bl, 1 ; jmp rax
0x000000000016ece4 : nop ; sbb bh, ah ; jmp rax
0x0000000000193db0 : nop ; sbb eax, edi ; call qword ptr [rsi]
0x0000000000172dcc : nop ; sbb esi, edi ; call rax
0x000000000017475c : nop ; sti ; stc ; jmp rax
0x00000000001866d0 : nop ; stosd dword ptr [rdi], eax ; hlt ; jmp qword ptr [rcx]
0x00000000001707d4 : nop ; sub ch, ch ; jmp rax
0x000000000007728f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000016f724 : nop ; test al, -4 ; jmp qword ptr [rax]
0x0000000000174e1c : nop ; test al, -6 ; jmp rax
0x0000000000173cb4 : nop ; test bh, al ; call qword ptr [rax]
0x000000000016e534 : nop ; test bh, bl ; call qword ptr [rax]
0x000000000016f404 : nop ; test edi, esp ; jmp qword ptr [rax]
0x0000000000081cbf : nop ; test rsi, rsi ; jne 0x81cd2 ; xor rax, rax ; ret
0x0000000000186480 : nop ; xchg eax, edx ; hlt ; call rsp
0x000000000017140c : nop ; xchg eax, esi ; call qword ptr [rax]
0x000000000017494c : nop ; xor al, 0xfffffffffffffffa ; call qword ptr [rax]
0x000000000016f188 : nop ; xor al, 0xfffffffffffffffc ; call qword ptr [rax]
0x0000000000171ed8 : nop ; xor byte ptr [rcx], al ; add byte ptr [rax - 0x52], dl ; jmp rax
0x00000000000b2f0f : nop ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000106d6f : nop ; xor eax, eax ; pop rbx ; ret
0x00000000000709ef : nop ; xor eax, eax ; ret
0x000000000016f1c4 : nop ; xor edi, esp ; call qword ptr [rax]
0x0000000000084e4f : nop ; xor rax, rax ; ret
0x000000000014c043 : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000006996b : nop dword ptr [rax + rax] ; call 0x75c27
0x000000000011d2f3 : nop dword ptr [rax + rax] ; call qword ptr [rax]
0x000000000011d5a8 : nop dword ptr [rax + rax] ; call rcx
0x0000000000033743 : nop dword ptr [rax + rax] ; fstp st(1) ; ret
0x000000000006ec3b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x00000000000955ab : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000011d39b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x000000000003244b : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000008a663 : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x0000000000076253 : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000000c5508 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000068853 : nop dword ptr [rax + rax] ; ret
0x0000000000036bab : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000036293 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000009b26b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x0000000000067af5 : nop dword ptr [rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000009b53c : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000014bfe5 : nop dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014c7a5 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x000000000007132c : nop dword ptr [rax] ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x000000000014cda9 : nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000009bdfd : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009bded : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009bdf5 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000b8ded : nop dword ptr [rax] ; mov eax, 0x40 ; ret
0x00000000000b8cd5 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x00000000000709e5 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000007fb95 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x000000000007022d : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000002cc0d : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x000000000006c514 : nop dword ptr [rax] ; mov eax, edi ; ret
0x000000000009627d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000d5f25 : nop dword ptr [rax] ; mov qword ptr [r8], r9 ; xor al, al ; ret
0x000000000008ac84 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x00000000000b9c5c : nop dword ptr [rax] ; mov rax, rdi ; ret
0x000000000007c6bc : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000369d4 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000426f4 : nop dword ptr [rax] ; pop rbx ; ret
0x000000000001fd8d : nop dword ptr [rax] ; ret
0x00000000000efae1 : nop dword ptr [rax] ; sub eax, edi ; ret
0x000000000007ce8d : nop dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000346dd : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000003311d : nop dword ptr [rax] ; xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000096237 : nop dword ptr cs:[rax + rax] ; ret
0x000000000006996a : nop word ptr [rax + rax] ; call 0x75c28
0x000000000011d5a7 : nop word ptr [rax + rax] ; call rcx
0x0000000000033742 : nop word ptr [rax + rax] ; fstp st(1) ; ret
0x000000000006ec3a : nop word ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000009681a : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x0000000000109b5a : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000068852 : nop word ptr [rax + rax] ; ret
0x0000000000036baa : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000036292 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x000000000009b26a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000f22fb : not dword ptr [rcx + 7] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000ab3de : not eax ; add eax, 0x16e ; ret
0x00000000001164c1 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000c540a : not eax ; and eax, 2 ; ret
0x0000000000033530 : not eax ; and eax, ecx ; ret
0x0000000000034423 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000032e30 : not edx ; and eax, edx ; ret
0x0000000000034422 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x000000000017b635 : or al, 0 ; add al, ch ; or ebp, edi ; call qword ptr [rax]
0x000000000011f127 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000122d39 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f155 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000e09ba : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000c0a12 : or al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000c1ef1 : or al, 0 ; add byte ptr [rax], al ; ret
0x000000000007b08a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000003811e : or al, 0 ; add byte ptr [rbp + 0x3d], dh ; add rsp, 8 ; ret
0x000000000003ea55 : or al, 0 ; add byte ptr [rcx + 0x39], cl ; ret
0x0000000000044c4d : or al, 0 ; add dh, dh ; ret
0x000000000000044f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x0000000000033fd5 : or al, 0 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009a195 : or al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x0000000000005cc6 : or al, 0 ; push rax ; ret
0x000000000000996e : or al, 0 ; ret
0x00000000000506ce : or al, 0x14 ; add rdx, r15 ; call qword ptr [r11 + rax*8]
0x000000000008bc12 : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jg 0x8bc09 ; ret
0x00000000000814f6 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000011327b : or al, 0x24 ; pop rbp ; pop r12 ; ret
0x0000000000177c44 : or al, 0x28 ; add byte ptr [rax], al ; js 0x177c11 ; jmp 0x177c50
0x00000000000e83ca : or al, 0x30 ; ror byte ptr [rcx], -8 ; ret
0x0000000000178c44 : or al, 0x38 ; add byte ptr [rax], al ; sbb bl, ch ; jmp 0x178c52
0x000000000002225d : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033e9e : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000000c2f25 : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000036efe : or al, 0x48 ; add esp, 0x18 ; ret
0x000000000011d2a0 : or al, 0x48 ; add esp, 0x38 ; ret
0x00000000000a9763 : or al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000102d91 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000006a2cb : or al, 0x48 ; mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x00000000001032eb : or al, 0x4c ; cmp edx, eax ; jne 0x1032d8 ; ret
0x000000000018a344 : or al, 0x4f ; add dword ptr [rax], eax ; sbb ah, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a644 : or al, 0x52 ; add dword ptr [rax], eax ; or al, ch ; cmc ; jmp qword ptr [rcx]
0x000000000018ab44 : or al, 0x57 ; add dword ptr [rax], eax ; lock ; cmc ; jmp qword ptr [rcx]
0x00000000000a7ee9 : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000818f3 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000f4c4a : or al, 0x5d ; pop r12 ; ret
0x0000000000029d53 : or al, 0x74 ; and cl, byte ptr [rax - 0x7d] ; ret
0x00000000000da51b : or al, 0x74 ; ret 0x9066
0x00000000000849c8 : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000012a3d1 : or al, 0xb ; jmp r9
0x000000000009543f : or al, 0xb ; jmp rcx
0x0000000000078f2c : or al, 0xf ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000334ae : or al, 0xf ; ror dword ptr cs:[rdi], -0x65 ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x000000000005cc53 : or al, 0xf ; test dword ptr [rax + rdi*8 - 0x76be0001], edx ; ret 0x8b48
0x000000000009b155 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000095f33 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x0000000000033483 : or al, 0xf ; wait ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x000000000004effb : or al, 0xffffff85 ; sal byte ptr [rbx + rsi*2 + 0x41], 0x39 ; ret 0x4675
0x000000000011156d : or al, 0xffffffb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000134842 : or al, 0xfffffff3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000000004b3 : or al, 0xffffffffffffff80 ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000c1482 : or al, 0xffffffffffffff82 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000095cac : or al, 0xffffffffffffff83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000004b8e5 : or al, 0xffffffffffffff85 ; sal byte ptr [rbp + 5], -0xa ; ret 0x7450
0x000000000004effc : or al, 0xffffffffffffff85 ; sal byte ptr [rbx + rsi*2 + 0x41], 0x39 ; ret 0x4675
0x000000000008f652 : or al, 0xffffffffffffff88 ; add rax, r9 ; jmp rax
0x0000000000068a4f : or al, 0xffffffffffffff88 ; add rax, rcx ; jmp rax
0x00000000000ce8a0 : or al, 0xffffffffffffff89 ; add rcx, r9 ; jmp rcx
0x00000000000f865b : or al, 0xffffffffffffff89 ; ret 0x6ae9
0x000000000009db13 : or al, 0xffffffffffffff89 ; ret 0xc8eb
0x000000000005080f : or al, 0xffffffffffffff89 ; ret 0xeac0
0x00000000000c1344 : or al, 0xffffffffffffff8a ; add rdx, rcx ; jmp rdx
0x0000000000080163 : or al, 0xffffffffffffff8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000087f14 : or al, 0xffffffffffffff8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001322fd : or al, 0xffffffffffffff8b ; add r9, r11 ; jmp r9
0x000000000012a3cd : or al, 0xffffffffffffff8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000001477ff : or al, 0xffffffffffffff93 ; add rcx, r11 ; jmp rcx
0x000000000009543b : or al, 0xffffffffffffff93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000002bae : or al, 0xffffffffffffffaf ; xbegin 0xfffffffff8c6efb2 ; ret
0x0000000000111558 : or al, 0xffffffffffffffb0 ; add rax, rcx ; jmp rax
0x0000000000116757 : or al, 0xffffffffffffffb0 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000eb716 : or al, 0xffffffffffffffb1 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000011156e : or al, 0xffffffffffffffb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000182344 : or al, 0xffffffffffffffcf ; add byte ptr [rax], al ; or byte ptr [rsi - 0xe], al ; jmp qword ptr [rcx]
0x000000000002a40b : or al, 0xffffffffffffffd8 ; test rcx, rcx ; je 0x2a41b ; call rcx
0x0000000000170e85 : or al, 0xfffffffffffffff0 ; call rax
0x0000000000134843 : or al, 0xfffffffffffffff3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000033e03 : or al, 0xfffffffffffffff3 ; ret
0x0000000000160fe1 : or al, 0xfffffffffffffff5 ; jmp rbx
0x0000000000103653 : or al, 0xfffffffffffffff6 ; ret 0x7504
0x000000000018ee59 : or al, 0xfffffffffffffff7 ; call qword ptr [rax]
0x000000000018ee11 : or al, 0xfffffffffffffff7 ; call qword ptr [rdi]
0x0000000000172cb5 : or al, 0xfffffffffffffff7 ; jmp rax
0x00000000000da9e2 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000000884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000daad2 : or al, 1 ; add byte ptr [rax], al ; xor al, al ; ret
0x000000000018604d : or al, 1 ; add byte ptr [rax], dh ; jge 0x18604d ; call qword ptr [rdx]
0x00000000000c3eea : or al, 1 ; ret
0x0000000000174371 : or al, 2 ; add byte ptr [rax - 0x6f], dl ; stc ; call qword ptr [rax]
0x0000000000096170 : or al, 5 ; add byte ptr [rax], al ; ret
0x0000000000020eab : or al, 6 ; add byte ptr [rax - 0x73], cl ; and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x00000000000355c6 : or al, 7 ; mov qword ptr [rsp + 0x10], r9 ; call r14
0x000000000008f746 : or al, 7 ; test cl, cl ; jne 0x8f73f ; ret
0x0000000000171238 : or al, ah ; add byte ptr [rax], al ; xor byte ptr [rax - 0x10], ch ; jmp qword ptr [rax]
0x000000000011e2fd : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120f11 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e321 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000cc48 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000079f8 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x0000000000175ebd : or al, byte ptr [rax] ; add byte ptr [rax], al ; jrcxz 0x175eb3 ; jmp rdi
0x000000000010ae42 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000004508b : or al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x8944
0x00000000000c6f62 : or al, byte ptr [rax] ; je 0xc6f2b ; jmp 0xc6f2d
0x00000000000bceca : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000bc955 : or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + r13*4] ; add rax, rdx ; jmp rax
0x00000000000be7b6 : or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000b9351 : or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000081676 : or al, byte ptr [rax] ; ret
0x000000000009bbca : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00000000000ca8ea : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x4101
0x00000000000c9c42 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8001
0x00000000000e5370 : or al, byte ptr [rcx + 0xf] ; lahf ; ret 0x8545
0x00000000000bd8ab : or al, byte ptr [rcx - 0x7d] ; jmp qword ptr [rcx]
0x0000000000171949 : or al, byte ptr [rcx] ; add byte ptr [rax - 0x2e], dl ; int1 ; call rax
0x00000000000004b1 : or al, byte ptr [rcx] ; or al, 0xffffffffffffff80 ; push rbx ; add al, 4 ; ret 0x6080
0x00000000001262f7 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018a648 : or al, ch ; cmc ; jmp qword ptr [rcx]
0x00000000000d9fb0 : or al, ch ; mov edx, 0x39fffdf2 ; ret
0x00000000000c2027 : or al, ch ; ret
0x000000000006df58 : or al, ch ; ret 0x2e0
0x000000000010b608 : or al, ch ; ret 0x7a
0x00000000000d4ac8 : or al, ch ; ret 0xfffe
0x0000000000081821 : or bh, byte ptr [rax - 1] ; cmovae eax, ecx ; ret
0x00000000000732ed : or bh, byte ptr [rax - 1] ; ret
0x00000000000c8a51 : or bh, dh ; ret
0x00000000000e35bf : or bh, dh ; ret 0xfc07
0x0000000000173c40 : or bh, dl ; add dword ptr [rax], eax ; nop ; jns 0x173c46 ; jmp qword ptr [rax]
0x00000000001191ae : or bl, al ; mov dword ptr [rsi], eax ; mov eax, 0xffffffff ; ret
0x000000000009bdfb : or bl, al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000e53eb : or bl, al ; nop dword ptr [rax] ; ret
0x0000000000103b13 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000103950 : or bl, al ; nop word ptr [rax + rax] ; ret
0x00000000000022cc : or bl, byte ptr [rbx + 0x38] ; ja 0xffffffffd6104b5e ; ret
0x00000000000dde49 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000008cb65 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000d10a8 : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x0000000000073808 : or bl, ch ; cdq ; mov edx, eax ; jmp 0x737ab
0x00000000000368e3 : or bl, ch ; ret
0x0000000000062e21 : or bl, ch ; ret 0x8b48
0x00000000000481fa : or bl, ch ; ret 0xbd83
0x0000000000134a03 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000002c75f : or bl, dh ; ret
0x00000000000c05a8 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x0000000000109a88 : or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00000000000c0521 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000bc52b : or byte ptr [r11 + 0x5d], bl ; ret
0x00000000000323ee : or byte ptr [r11 + r9*4 + 0x57], r9b ; sbb byte ptr [rdi + rcx - 0x51], al ; ret 0xd231
0x00000000000ab1a5 : or byte ptr [r11 + rcx*4 + 5], r9b ; ret 0x2f4c
0x00000000000923cf : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000c0512 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000c05de : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x00000000000c5462 : or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x00000000000c05f1 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000066a48 : or byte ptr [r8 - 0x75], 2 ; jmp 0x62c8c
0x00000000000c2364 : or byte ptr [r8 - 0x75], r9b ; jl 0xc238b ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000923ae : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x0000000000140058 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000010bb82 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00000000001138aa : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000000362c2 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000000bb2a2 : or byte ptr [r8 - 0x7d], r9b ; ret 0x4808
0x00000000001264d2 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000009240e : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x00000000000c0581 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000c0541 : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x0000000000109533 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x0000000000116d0a : or byte ptr [rax + 0x29], cl ; ret
0x000000000010cbd6 : or byte ptr [rax + 0x31], cl ; ret 0xe281
0x00000000000a83ad : or byte ptr [rax + 0x39], 0xd3 ; mov dl, 0 ; cmovge rax, rdx ; pop rbx ; ret
0x0000000000077617 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x00000000000b595a : or byte ptr [rax + 0x39], cl ; ret
0x000000000007e7d1 : or byte ptr [rax + 0x39], cl ; ret 0x6174
0x00000000000ed21e : or byte ptr [rax + 0x39], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x9848
0x00000000000c5463 : or byte ptr [rax + 0x63], cl ; ret 0xf53
0x0000000000023561 : or byte ptr [rax + 0x63], cl ; ror dword ptr [rcx + 0x39], 1 ; ret 0x3076
0x0000000000170640 : or byte ptr [rax + 0x7b400000], dl ; in al, dx ; jmp qword ptr [rax]
0x000000000017c87c : or byte ptr [rax + 0xb], cl ; ret
0x00000000001862ed : or byte ptr [rax + 0xb], dl ; ret
0x0000000000037a9f : or byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000f8beb : or byte ptr [rax + 0xf], al ; mov dh, -0x3a ; or eax, edi ; bswap eax ; ret
0x0000000000032e8b : or byte ptr [rax + 1], 0xd0 ; shr rax, 0x3f ; ret
0x0000000000172938 : or byte ptr [rax + 1], bh ; add byte ptr [rax], dl ; mov bl, -0xa ; jmp qword ptr [rax]
0x00000000000227d3 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000002f75e : or byte ptr [rax + 1], cl ; ret
0x00000000000f31e1 : or byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000e735e : or byte ptr [rax + 4], bh ; pop rbx ; pop rbp ; ret
0x00000000000f2eeb : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x0000000000034150 : or byte ptr [rax + rax], cl ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c05f2 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000749ef : or byte ptr [rax - 0x68], cl ; ret
0x00000000000bc630 : or byte ptr [rax - 0x73], cl ; add bl, byte ptr [r11 + 0x5d] ; ret
0x0000000000084e79 : or byte ptr [rax - 0x73], cl ; add eax, 0x1f ; ret
0x000000000008a6a4 : or byte ptr [rax - 0x73], cl ; add eax, 0x5fb4 ; ret
0x000000000009be3d : or byte ptr [rax - 0x73], cl ; add eax, 0xacfdb ; ret
0x000000000009be29 : or byte ptr [rax - 0x73], cl ; add eax, 0xbbff ; ret
0x0000000000084e8d : or byte ptr [rax - 0x73], cl ; add eax, 0xc294b ; ret
0x000000000009b299 : or byte ptr [rax - 0x73], cl ; add eax, 0xc81f ; ret
0x00000000000bc528 : or byte ptr [rax - 0x73], cl ; or byte ptr [r11 + 0x5d], bl ; ret
0x0000000000066a49 : or byte ptr [rax - 0x75], 2 ; jmp 0x62c8b
0x0000000000078b93 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x00000000000eaee1 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000eaf42 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x00000000000ad7c3 : or byte ptr [rax - 0x75], cl ; jl 0xad7f3 ; and al, ch ; ret 0x5b
0x00000000000c2365 : or byte ptr [rax - 0x75], cl ; jl 0xc238a ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000006a2f7 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x0000000000111502 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000eba93 : or byte ptr [rax - 0x75], cl ; push rsp ; ret 0x8940
0x0000000000118f15 : or byte ptr [rax - 0x75], cl ; xor al, ch ; ret 0xb
0x00000000000923af : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x00000000000f3922 : or byte ptr [rax - 0x77], 0xda ; call rax
0x000000000006af3e : or byte ptr [rax - 0x77], cl ; add byte ptr [r8 - 0x77], r9b ; ret 0x894c
0x00000000000922c0 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000f8868 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x0000000000030e70 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000001138ab : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000011516e : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000c267b : or byte ptr [rax - 0x77], cl ; jo 0xc26a7 ; xor eax, eax ; ret
0x000000000006c04d : or byte ptr [rax - 0x77], cl ; lock pop rbx ; pop rbp ; ret
0x0000000000140059 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000010bb83 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000011c348 : or byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000010ac7b : or byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000007fc0e : or byte ptr [rax - 0x77], cl ; push rbx ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000036848 : or byte ptr [rax - 0x77], cl ; ret
0x000000000010cea7 : or byte ptr [rax - 0x77], cl ; ret 0x314d
0x00000000000f726f : or byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000115acf : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000000d6c4a : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000362c3 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000c45e7 : or byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000c267a : or byte ptr [rax - 0x77], r9b ; jo 0xc26a8 ; xor eax, eax ; ret
0x000000000007fb8d : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], -0xd ; ret
0x000000000007fc37 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000007fca9 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x00000000000c3c2b : or byte ptr [rax - 0x7d], 0xc0 ; add dword ptr [rcx], edi ; ret 0x5a7e
0x000000000007bb0c : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc2410423
0x000000000007b2cb : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000433e6 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000008ad16 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008ad9e : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000bb2a3 : or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000008ec48 : or byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000008dcb1 : or byte ptr [rax - 0x7d], cl ; ret 0x4d01
0x000000000002652b : or byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000004f022 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000000f8dd6 : or byte ptr [rax - 0x7d], cl ; ret 0x901
0x000000000008ad15 : or byte ptr [rax - 0x7d], r9b ; ret 0x4801
0x000000000008ad9d : or byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000006c80b : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000011e55c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000174218 : or byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi - 7], dl ; jmp qword ptr [rax]
0x0000000000077e4f : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000011e55d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001210b1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e581 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000767ac : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000017bd0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001a5d0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1656
0x00000000000ccae7 : or byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000021431 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000009a269 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000010ae72 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000a8a84 : or byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x00000000000ba865 : or byte ptr [rax], al ; add byte ptr [rcx - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x00000000000f1a34 : or byte ptr [rax], al ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x0000000000071322 : or byte ptr [rax], al ; add rsp, 0x80 ; ret
0x00000000000d8728 : or byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000d7cbc : or byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x0000000000044970 : or byte ptr [rax], al ; ret
0x00000000000994dd : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009951b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000994bb : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000672ab : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000124ace : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000010381f : or byte ptr [rbp + 0x5b001d44], cl ; pop rbp ; ret
0x0000000000170a70 : or byte ptr [rbp + 0x7d600000], ch ; out dx, eax ; jmp qword ptr [rax]
0x000000000017eb89 : or byte ptr [rbp + 0xb], al ; ret
0x000000000017d721 : or byte ptr [rbp + 0xb], cl ; ret
0x0000000000174c38 : or byte ptr [rbp + 2], al ; add byte ptr [rax + 0x63], al ; cli ; jmp qword ptr [rax]
0x000000000010b343 : or byte ptr [rbp + rcx*4 + 0x48], cl ; or byte ptr [rbp - 0x77], al ; ret 0x8b48
0x00000000000c306a : or byte ptr [rbp + rcx*4 + 0x4a], al ; inc dword ptr [rcx] ; ret 0x5389
0x00000000001078f4 : or byte ptr [rbp - 0x17], dh ; add rsp, 0x18 ; ret
0x00000000000a7ab6 : or byte ptr [rbp - 0x3c], dh ; ret
0x000000000009bd09 : or byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x000000000010b347 : or byte ptr [rbp - 0x77], al ; ret 0x8b48
0x00000000000f4e19 : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x3f], -0x37 ; ret
0x00000000000c3975 : or byte ptr [rbp - 0x9d18b01], al ; ret
0x00000000000f42ec : or byte ptr [rbp - 0xf], dh ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000003c8b : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x00000000000c5e06 : or byte ptr [rbx + 0x5d5b0443], cl ; pop r12 ; ret
0x000000000010bd5b : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x000000000006e382 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000022b6b : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000202bb : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001776ab : or byte ptr [rbx + rcx + 0x52], al ; ret
0x0000000000176aed : or byte ptr [rbx + rcx + 0x7e], cl ; ret
0x00000000000323ef : or byte ptr [rbx + rcx*4 + 0x57], cl ; sbb byte ptr [rdi + rcx - 0x51], al ; ret 0xd231
0x00000000000ab1a6 : or byte ptr [rbx + rcx*4 + 5], cl ; ret 0x2f4c
0x000000000004a547 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x0000000000117e3e : or byte ptr [rbx - 0x6bf0f502], al ; ret
0x0000000000195878 : or byte ptr [rbx - 8], bh ; jmp qword ptr [rsi]
0x00000000000eca5a : or byte ptr [rbx - 9], bl ; fcomp dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000174a90 : or byte ptr [rbx], bh ; add al, byte ptr [rax] ; nop ; cli ; jmp qword ptr [rax]
0x0000000000083f7a : or byte ptr [rcx + 0x29], cl ; ret
0x000000000004431b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000007bb10 : or byte ptr [rcx + 0x39], cl ; ret 0x860f
0x00000000000348e6 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000011c2b5 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000000f66dd : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x00000000000ce89d : or byte ptr [rcx + 0x63], cl ; or al, 0xffffffffffffff89 ; add rcx, r9 ; jmp rcx
0x0000000000194cb7 : or byte ptr [rcx + 0xb], al ; pop rcx ; ret
0x000000000017a802 : or byte ptr [rcx + 0xb], cl ; ret
0x0000000000172978 : or byte ptr [rcx + 1], bh ; add al, dl ; mov ah, -0xa ; jmp qword ptr [rax]
0x0000000000042c1b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000437f0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000171e18 : or byte ptr [rcx + rax], ch ; add al, dl ; test dh, bl ; jmp qword ptr [rax]
0x0000000000039314 : or byte ptr [rcx + rcx*4 + 0x14], cl ; and al, 0xffffffffffffffe8 ; ret 0x9d
0x0000000000118ca3 : or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x00000000000c5559 : or byte ptr [rcx + rcx*4 + 0x5b], dh ; ret
0x000000000010e323 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xffffffffffffffe8 ; ret
0x000000000003656d : or byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop rbp ; ret
0x0000000000042c22 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000073102 : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x000000000009240f : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000000a0ee8 : or byte ptr [rcx - 0x77], al ; ret 0x8d48
0x00000000000c5d0f : or byte ptr [rcx - 0x77], al ; ret 0xceb
0x000000000007913d : or byte ptr [rcx - 0x77], cl ; fisttp word ptr [rax - 0x77] ; shr ecx, cl ; ret 0
0x00000000000550da : or byte ptr [rcx - 0x77], cl ; push rsi ; or cl, ch ; ret 0xfffa
0x00000000000481f5 : or byte ptr [rcx - 0x77], cl ; push rsp ; and al, 8 ; jmp 0x481c6
0x00000000000d4363 : or byte ptr [rcx - 0x7d], al ; ret 0x4a01
0x00000000000cd971 : or byte ptr [rcx - 0x7d], cl ; ret
0x0000000000033358 : or byte ptr [rcx], 0xcf ; movd xmm0, edi ; ret
0x00000000000da9f2 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000003402e : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000daae4 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000c05c7 : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000c0542 : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00000000000a7ab3 : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x3c], dh ; ret
0x00000000000c3ef0 : or byte ptr [rcx], bh ; ret
0x0000000000171b78 : or byte ptr [rcx], bl ; add dword ptr [rax], eax ; ret 0xfff2
0x00000000000c0582 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000000a679d : or byte ptr [rcx], ch ; ret
0x000000000016ffa8 : or byte ptr [rcx], dh ; add byte ptr [rax - 0x31], ah ; jmp 0x16ffb6
0x00000000000f51e0 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x000000000002266e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000cebed : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000772cf : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000041bc8 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], -0x3c ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000183778 : or byte ptr [rcx], dl ; call rdx
0x000000000015dc3e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000017bfe4 : or byte ptr [rdi + 0xb], al ; jo 0x17bff8 ; ret
0x000000000017bf22 : or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x0000000000179d69 : or byte ptr [rdi + 0xe], al ; adc byte ptr [rbx + 0xab20202], al ; ret
0x000000000005678e : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rax - 0x7d], cl ; ret
0x000000000017fbf8 : or byte ptr [rdi - 0x10], cl ; call qword ptr [rax]
0x000000000015fca0 : or byte ptr [rdi - 0x6e2f000e], 0xf2 ; jmp qword ptr [rax]
0x0000000000187b38 : or byte ptr [rdi - 0xb], cl ; jmp qword ptr [rcx]
0x0000000000184828 : or byte ptr [rdi - 0xd], dl ; jmp rdx
0x0000000000026a6c : or byte ptr [rdi], 0x85 ; movsd dword ptr [rdi], dword ptr [rsi] ; idiv edi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000001d081 : or byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret
0x000000000001ceb9 : or byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002b38c : or byte ptr [rdi], cl ; cmp dword ptr [rbp], 0 ; add dh, dh ; ret 0xf04
0x000000000002ca04 : or byte ptr [rdi], cl ; mov bh, -0x40 ; ret
0x00000000000433b8 : or byte ptr [rdi], cl ; mov cs, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000736eb : or byte ptr [rdi], cl ; mov dh, -0x40 ; neg eax ; ret
0x000000000010c6d9 : or byte ptr [rdi], cl ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x000000000003fff8 : or byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x000000000007631f : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000073681 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000003b67f : or byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000012a99b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000033187 : or byte ptr [rdi], cl ; wait ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x0000000000041f70 : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe8c1
0x000000000002007a : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000008e948 : or byte ptr [rdi], dh ; ret
0x000000000008e947 : or byte ptr [rdi], sil ; ret
0x00000000001709f0 : or byte ptr [rdx + 0x72100000], ch ; out dx, eax ; jmp qword ptr [rax]
0x000000000017753a : or byte ptr [rdx + 0xb], cl ; pop rdi ; ret
0x000000000017dc1a : or byte ptr [rdx + 0xb], cl ; push rdx ; ret
0x000000000017d0b8 : or byte ptr [rdx - 0x11], ah ; jmp qword ptr [rax]
0x00000000000c0522 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000c05a9 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x0000000000109a89 : or byte ptr [rdx], ch ; push 0x19 ; call qword ptr [rax]
0x00000000000dffe2 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000dffe1 : or byte ptr [rip + 0x100f], r12b ; ret
0x00000000000c0615 : or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x0000000000094fc1 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000923d0 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000182348 : or byte ptr [rsi - 0xe], al ; jmp qword ptr [rcx]
0x0000000000171c50 : or byte ptr [rsi], bl ; add dword ptr [rax], eax ; rcl ch, -0xe ; jmp qword ptr [rax]
0x00000000000c05df : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000c0513 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x00000000000f1a33 : or byte ptr cs:[rax], al ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x0000000000003c8a : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x000000000018a408 : or ch, ah ; cmc ; jmp qword ptr [rcx]
0x00000000001716d0 : or ch, bh ; add byte ptr [rax], al ; shl byte ptr [rdx], -0xf ; jmp qword ptr [rax]
0x000000000008c9d1 : or ch, bl ; ret 0x1f0f
0x0000000000173a58 : or ch, cl ; add dword ptr [rax], eax ; mov al, 0x50 ; clc ; jmp qword ptr [rax]
0x000000000015fb50 : or ch, dl ; int1 ; jmp qword ptr [rax]
0x000000000018a008 : or cl, ah ; cmc ; jmp qword ptr [rcx]
0x00000000000420a9 : or cl, al ; call 0xffffffffc28d61d5
0x00000000000336cb : or cl, bl ; std ; fstp st(1) ; ret
0x00000000000a7b5f : or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x0000000000029447 : or cl, byte ptr [rax + 0x39] ; ret 0x1376
0x000000000006f590 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000033fd4 : or cl, byte ptr [rax + rax] ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ebdd3 : or cl, byte ptr [rax - 0x75] ; push rsp ; ret 0x8940
0x00000000000cf436 : or cl, byte ptr [rax - 0x77] ; ret 0x41e8
0x00000000000ad3c1 : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x000000000006bc1b : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000112a09 : or cl, byte ptr [rax - 0x7d] ; ret 0x4104
0x00000000000683a4 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000c5004 : or cl, byte ptr [rbp + 0x63] ; ret
0x000000000006e347 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x00000000000f8c25 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x000000000001f501 : or cl, byte ptr [rcx + 0x1d129f1] ; ret 0xc139
0x00000000000f111f : or cl, byte ptr [rcx - 0x7d] ; ret 0x4901
0x00000000000d154c : or cl, byte ptr [rcx - 0xcaf8b30] ; ret
0x00000000000f8ba5 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x0000000000141f86 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000117e41 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000006f76a : or cl, ch ; cmp esi, 0x28bffff ; ret
0x000000000002c8f6 : or cl, ch ; ret
0x0000000000054faf : or cl, ch ; ret 0xffba
0x00000000000541af : or cl, ch ; ret 0xffc8
0x00000000000550de : or cl, ch ; ret 0xfffa
0x000000000007aa37 : or cl, ch ; ret 0xfffc
0x0000000000061e11 : or cl, ch ; sub ebp, -1 ; push rsi ; ret
0x0000000000173970 : or cl, cl ; add dword ptr [rax], eax ; nop ; clc ; jmp qword ptr [rax]
0x0000000000002bcb : or cl, cl ; clc ; ret
0x0000000000083bb5 : or cl, cl ; cmove rax, rdx ; ret
0x000000000004496d : or dh, al ; or byte ptr [rax], al ; ret
0x0000000000134923 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000eb71a : or dh, bl ; ret
0x000000000009a416 : or dh, byte ptr [rbp - 0x11] ; ret
0x0000000000079f1b : or dh, dh ; ret 0x7404
0x0000000000079f37 : or dh, dh ; ret 0xf04
0x000000000002dcd7 : or dh, dh ; ret 0xfdf
0x00000000001747d5 : or dl, bh ; call qword ptr [rax]
0x0000000000034845 : or dl, bh ; je 0x34858 ; add rsp, 0x10 ; ret
0x0000000000034937 : or dl, bh ; je 0x34948 ; add rsp, 0x10 ; ret
0x0000000000189f58 : or dl, dl ; cmc ; jmp qword ptr [rcx]
0x0000000000029f23 : or dword ptr [rax + rax], eax ; add byte ptr [rbx + rcx*4 + 0xd], al ; ret 0x378d
0x000000000010e453 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x00000000000ebb13 : or dword ptr [rax - 0x75], ecx ; push rsp ; ret 0x8940
0x000000000002a89f : or dword ptr [rax - 0x7af0ffc8], eax ; ret 0xfffe
0x00000000000f146f : or dword ptr [rax - 0x7d], ecx ; ret
0x000000000007fe3e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000038aee : or dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000011e48d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012497f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e3e7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000006f89f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000020b2a : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000da078 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000081f63 : or dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000005035b : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000094515 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000cc8d0 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000c9b93 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000083b16 : or dword ptr [rax], eax ; ret
0x0000000000077f5c : or dword ptr [rbp + 0x39], ecx ; ret 0x830f
0x00000000000368dd : or dword ptr [rbp + 0x3d4], 8 ; jmp 0x368b1
0x0000000000148c36 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000010b5d6 : or dword ptr [rbx + 0x31], ebx ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000eeb36 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000749b8 : or dword ptr [rbx], 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000006a306 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000074340 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000077a88 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x00000000000ee0ac : or dword ptr [rbx], ebp ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00000000000447fb : or dword ptr [rcx - 0x77], ecx ; ret 0x294d
0x00000000000c2610 : or dword ptr [rdi + 0x90], eax ; xor eax, eax ; ret
0x0000000000034403 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x000000000006a310 : or dword ptr [rdi], 0x20 ; ret
0x00000000000e0097 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x0000000000034546 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000fd18b : or dword ptr [rdi], ecx ; ret
0x0000000000141f66 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000ace73 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi + rbp*8 - 1], esp ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000038f27 : or dword ptr [rdi], ecx ; xchg eax, edi ; ret 0xd284
0x00000000000817c4 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xb60f
0x00000000001057aa : or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x203c
0x00000000000e44ed : or dword ptr [rdi], ecx ; xchg esp, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000174331 : or dword ptr [rdx], eax ; add byte ptr [rax], dh ; mov cl, bh ; call rax
0x00000000000e04aa : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000032eab : or eax, 0x13a8e0 ; orpd xmm0, xmm1 ; ret
0x00000000000333e5 : or eax, 0x13af6a ; movaps xmm0, xmm1 ; ret
0x0000000000033396 : or eax, 0x13afb1 ; movaps xmm0, xmm1 ; ret
0x0000000000033371 : or eax, 0x13afda ; movaps xmm0, xmm1 ; ret
0x0000000000096e71 : or eax, 0x1c478d48 ; ret
0x0000000000097cc1 : or eax, 0x1d478d48 ; ret
0x0000000000141fe8 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x00000000000e0461 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x0000000000020410 : or eax, 0x38246b ; pop rbx ; ret
0x000000000011ac73 : or eax, 0x415d0028 ; pop rsp ; jmp rax
0x000000000008c682 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000000abb0a : or eax, 0x48d08948 ; add esp, 8 ; ret
0x00000000000673a2 : or eax, 0x5bd88948 ; ret
0x000000000006a43a : or eax, 0x5dc0315b ; pop r12 ; ret
0x0000000000095f55 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x00000000000cf484 : or eax, 0x7400002d ; xor eax, eax ; ret
0x000000000011f037 : or eax, 0x83480000 ; ret 0x4910
0x0000000000120bd1 : or eax, 0x83480000 ; ret 0xe910
0x000000000011f065 : or eax, 0x83480000 ; ret 0xeb10
0x0000000000097609 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x00000000000edc34 : or eax, 0x8948002b ; ret 0x8d48
0x000000000001f6e8 : or eax, 0x89c08500 ; ret
0x0000000000083c32 : or eax, 0x8c48348 ; ret
0x00000000001861fd : or eax, 0x8fc00001 ; hlt ; jmp qword ptr [rax]
0x0000000000174381 : or eax, 0x92500002 ; stc ; jmp rax
0x00000000000abe64 : or eax, 0xb498b ; add rax, rcx ; jmp rax
0x000000000006d58c : or eax, 0xc2890000 ; jmp 0x6d535
0x000000000006c4ba : or eax, 0xd089c289 ; pop rbx ; ret
0x00000000001719b1 : or eax, 0xed600001 ; int1 ; call rax
0x000000000015d273 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x00000000001347d3 : or eax, 0xf7f0ff3 ; ret
0x0000000000033ddd : or eax, 0xffffffff ; ret
0x0000000000077c87 : or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000077c84 : or eax, 2 ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000179a24 : or eax, dword ptr [r10] ; ret 0xe0a
0x00000000000a2e26 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000011e22d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120d71 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e251 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000d34a : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000010ae32 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000abe67 : or eax, dword ptr [rax] ; add rax, rcx ; jmp rax
0x0000000000081569 : or eax, dword ptr [rax] ; ret
0x0000000000187d38 : or eax, dword ptr [rbx] ; push 0x8070c01 ; ret
0x000000000001fb48 : or eax, dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000182bb1 : or eax, dword ptr [rdx] ; ret
0x0000000000179366 : or eax, dword ptr [rdx] ; ret 0x900e
0x0000000000179a25 : or eax, dword ptr [rdx] ; ret 0xe0a
0x00000000000f8bf0 : or eax, edi ; bswap eax ; ret
0x00000000000e83b6 : or eax, edi ; ret
0x00000000000405dd : or eax, edx ; cmp r8, rdi ; jne 0x405c0 ; ret
0x000000000008ad04 : or eax, edx ; mov qword ptr [rdi], r8 ; pop rbx ; ret
0x00000000000e83f2 : or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x0000000000036a3f : or eax, edx ; ret
0x00000000000336b4 : or eax, esi ; je 0x33661 ; ret
0x0000000000033115 : or eax, esi ; movq xmm0, rax ; ret
0x00000000000e83f5 : or eax, esi ; or rax, rdi ; ret
0x0000000000077284 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000017e80b : or ebp, dword ptr [rdx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; push rcx ; ret
0x00000000000fb513 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x00000000000f146d : or ebp, ebx ; or dword ptr [rax - 0x7d], ecx ; ret
0x000000000017b639 : or ebp, edi ; call qword ptr [rax]
0x000000000016101d : or ebp, esi ; jmp rbx
0x00000000001700f5 : or ebp, esp ; call qword ptr [rax]
0x00000000000e81b4 : or ebx, dword ptr [rbx + 0x5d] ; ret
0x00000000000ed55c : or ebx, dword ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000183629 : or ebx, esi ; call rdi
0x0000000000134993 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000007156e : or ebx, esi ; ret
0x0000000000074587 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x00000000000eb973 : or ecx, dword ptr [rax - 0x75] ; push rsp ; ret 0x8940
0x0000000000105e4b : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000e31f7 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x00000000000efbbd : or ecx, dword ptr [rax - 0x7d] ; ret 0x4830
0x00000000000a90cf : or ecx, dword ptr [rax - 0x7d] ; ret 0x8801
0x0000000000077a89 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x000000000009b1f4 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x000000000009b244 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x000000000017d71c : or ecx, dword ptr [rbx + 0xa] ; ret
0x0000000000059a3f : or ecx, dword ptr [rcx - 0x7d] ; ret 0x4101
0x00000000000c6a35 : or ecx, dword ptr [rcx - 0x7d] ; ret 0x8b10
0x0000000000102dd3 : or ecx, dword ptr [rdi] ; mov dh, 0x55 ; add dh, dh ; ret
0x0000000000095f13 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x000000000017bfb6 : or ecx, dword ptr [rdx + 0xa] ; ret
0x0000000000184f4f : or ecx, dword ptr [rsi + rcx + 0x10] ; ret
0x00000000000cb897 : or ecx, ebp ; ret
0x000000000017403d : or ecx, edi ; jmp qword ptr [rax]
0x00000000000ef44c : or edi, dword ptr [rax + 1] ; ret
0x000000000010b284 : or edi, dword ptr [rax + 2] ; ret
0x00000000000f3254 : or edi, dword ptr [rax + 7] ; ret
0x000000000017b6ac : or edi, dword ptr [rsi + rcx - 0x70] ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000193731 : or edi, eax ; call qword ptr [rdx]
0x000000000016e43d : or edi, ebx ; push qword ptr [rax + 0x1c] ; sti ; call qword ptr [rax]
0x0000000000033359 : or edi, ecx ; movd xmm0, edi ; ret
0x000000000014c6ad : or edi, edi ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000998a7 : or edi, edi ; loope 0x9991a ; nop dword ptr [rax + rax] ; ret
0x0000000000172c7d : or edi, esi ; call rax
0x000000000016e99d : or edi, esp ; jmp qword ptr [rax]
0x000000000016e9dd : or edi, esp ; jmp rax
0x00000000000749b9 : or edx, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000033209 : or edx, ecx ; sar edx, 0x1f ; not edx ; and eax, edx ; ret
0x0000000000191312 : or esi, dword ptr [r14 + r9 + 0x18] ; ret
0x000000000017bfe6 : or esi, dword ptr [rax + 0xa] ; ret
0x0000000000109214 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000077ef8 : or esi, dword ptr [rcx] ; xlatb ; mov byte ptr [rax + rsi], dil ; ret
0x000000000002e1cc : or esi, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000191313 : or esi, dword ptr [rsi + rcx + 0x18] ; ret
0x000000000006a416 : or esi, eax ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e002e : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x00000000001348b3 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000dae94 : or esi, ebx ; ret
0x000000000018ede1 : or esi, edi ; jmp rsp
0x00000000000c087a : or esi, edx ; jne 0xc0885 ; ret
0x00000000000ef8a3 : or esi, esi ; jno 0xef8b1 ; cmovne eax, edx ; ret
0x00000000000ef8a3 : or esi, esi ; jno 0xef8b2 ; cmovne eax, edx ; ret
0x00000000000c0879 : or esi, r10d ; jne 0xc0886 ; ret
0x000000000006a307 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000074341 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000002f63 : or esp, dword ptr [rdx] ; js 0x2f1d ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000df2a4 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000016e999 : or esp, edi ; call qword ptr [rax + 0x20fffc0b]
0x000000000016e9f9 : or esp, edi ; jmp qword ptr [rax]
0x0000000000038aed : or qword ptr [rax], r8 ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000000c260f : or qword ptr [rdi + 0x90], rax ; xor eax, eax ; ret
0x0000000000034402 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000034545 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000141f65 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000073807 : or r11b, bpl ; cdq ; mov edx, eax ; jmp 0x737ac
0x0000000000134a02 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134992 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134922 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000017bfe5 : or r14d, dword ptr [r8 + 0xa] ; ret
0x00000000001348b2 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000008ad03 : or r8, r10 ; mov qword ptr [rdi], r8 ; pop rbx ; ret
0x0000000000182bb0 : or r8d, dword ptr [rdx] ; ret
0x00000000000336b3 : or r8d, esi ; je 0x33662 ; ret
0x0000000000029446 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1376
0x000000000017d71b : or r9d, dword ptr [r11 + 0xa] ; ret
0x0000000000184f4e : or r9d, dword ptr [rsi + rcx + 0x10] ; ret
0x0000000000141fe7 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000001f6e7 : or rax, 0x89c08500 ; ret
0x0000000000033ddc : or rax, 0xffffffffffffffff ; ret
0x00000000001261d2 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000abe66 : or rax, qword ptr [r8] ; add rax, rcx ; jmp rax
0x00000000000e83f7 : or rax, rdi ; ret
0x00000000000405dc : or rax, rdx ; cmp r8, rdi ; jne 0x405c1 ; ret
0x0000000000036a3e : or rax, rdx ; ret
0x0000000000033114 : or rax, rsi ; movq xmm0, rax ; ret
0x00000000000e83f4 : or rax, rsi ; or rax, rdi ; ret
0x000000000017bfb5 : or rcx, qword ptr [r10 + 0xa] ; ret
0x0000000000032eb0 : orpd xmm0, xmm1 ; ret
0x0000000000032eb1 : orps xmm0, xmm1 ; ret
0x000000000003326e : orps xmm0, xmm3 ; ret
0x000000000017155d : out -0x10, al ; call qword ptr [rax]
0x0000000000170d75 : out -0x11, al ; push qword ptr [rax] ; ret 0
0x000000000011503b : out -0x18, al ; movsb byte ptr [rdi], byte ptr [rsi] ; lock dec dword ptr [rax - 0x77] ; ret
0x00000000000c39e8 : out -0x18, eax ; ret 0xffd6
0x0000000000053a24 : out -0x18, eax ; xchg eax, esi ; loop 0x53a33 ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000015c120 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000e2b2a : out -0x3a, eax ; inc dword ptr [r8] ; ret
0x0000000000002462 : out -0x57, al ; ret 0xbd07
0x000000000016e5f0 : out -0x5b, al ; std ; push qword ptr [rsi - 0x5a] ; std ; call qword ptr [rsi]
0x0000000000033fcf : out -0x77, eax ; ret
0x000000000002ea52 : out -0x77, eax ; ret 0x8b4c
0x000000000002cc23 : out -0x80, eax ; sete al ; ret
0x000000000018a541 : out -0xb, al ; jmp qword ptr [rcx]
0x000000000018a5b9 : out -0xb, eax ; jmp qword ptr [rcx]
0x000000000015de48 : out -0xb, eax ; mov ch, -0x55 ; ret
0x0000000000160e1d : out -0xc, al ; inc dword ptr [rax - 0xe] ; hlt ; jmp rcx
0x0000000000185731 : out -0xd, al ; call qword ptr [rbx]
0x000000000013419a : out -0xd, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000008bc19 : out -0xd, al ; ret
0x000000000013421a : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000ef938 : out -0xd, eax ; ret
0x0000000000181d79 : out -0xf, al ; jmp rax
0x000000000005a48f : out -1, al ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000000588e0 : out -1, al ; inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000006bbef : out -1, al ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000000753f6 : out -1, eax ; dec dword ptr [rax + 0x39] ; ret
0x0000000000039e40 : out -1, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000016eac5 : out -5, eax ; jmp rax
0x000000000017469d : out -7, eax ; jmp rax
0x000000000010b779 : out 0, al ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000183b5d : out 0, eax ; add byte ptr [rax + 0x21], dl ; call rdi
0x00000000000f8bf9 : out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00000000000e5b05 : out 0x41, eax ; call rdi
0x000000000003568e : out 0x41, eax ; call rsi
0x0000000000090188 : out 0x41, eax ; mov byte ptr [rcx + 1], 0 ; ret
0x00000000000f2de1 : out 0x48, al ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000227ae : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000010c607 : out 0x48, al ; mov edi, ebp ; call rax
0x00000000000f8ab3 : out 0x48, al ; mov edi, ebp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000010bb86 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000007ebd3 : out 0x48, al ; mov edi, ebx ; call rax
0x0000000000100028 : out 0x48, eax ; mov eax, dword ptr [rsp] ; call rax
0x000000000009b2e0 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000042cb8 : out 0x48, eax ; mov eax, edx ; ret
0x0000000000111880 : out 0x48, eax ; mov ecx, dword ptr [rbp - 0x168] ; call rcx
0x000000000009c9b3 : out 0x4d, eax ; mov ecx, esi ; call rbx
0x0000000000001b12 : out 0x59, eax ; pop rbx ; ret 0x2a63
0x00000000000769b3 : out 0x5b, al ; ret
0x000000000002d5e0 : out 0x5b, eax ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000000efdad : out 0x5b, eax ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x0000000000113c18 : out 0x5b, eax ; ret
0x00000000000f6c1d : out 0xf, al ; xchg eax, esi ; ror byte ptr [rcx + rdi - 0x17], 0xf ; xchg eax, ebx ; ret 0x830f
0x0000000000173e79 : out 1, al ; add byte ptr [rax - 0x43], al ; clc ; call qword ptr [rax]
0x0000000000173e91 : out 1, eax ; add al, dh ; ret 0xfff8
0x0000000000173e89 : out 1, eax ; add byte ptr [rax - 0x3f], dh ; clc ; call rax
0x00000000000c314e : out 2, al ; call 0x1f434
0x00000000000c31c3 : out 2, eax ; call 0x1f444
0x000000000010394c : out 4, al ; lea eax, dword ptr [rsi + 8] ; ret
0x0000000000103b0d : out 4, al ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000000200da : out 4, eax ; add rdi, rbp ; call rax
0x00000000000fe261 : out dx, al ; adc bh, dh ; ret 0x8080
0x000000000008ab79 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000000314f6 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000001036df : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x1036ec ; ret
0x0000000000173f79 : out dx, al ; add dword ptr [rax], eax ; adc ch, ch ; clc ; call qword ptr [rax]
0x0000000000195ae1 : out dx, al ; add dword ptr [rax], eax ; ret 0x502
0x00000000001036dc : out dx, al ; add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x1036ef ; ret
0x0000000000072503 : out dx, al ; call 0x44c08
0x00000000001709be : out dx, al ; call qword ptr [rax]
0x000000000007f18a : out dx, al ; call rax
0x0000000000001b10 : out dx, al ; enter 0x59e7, 0x5b ; ret 0x2a63
0x000000000015d277 : out dx, al ; fcmovb st(0), st(3) ; ret
0x00000000001709c6 : out dx, al ; inc eax ; test al, 0 ; add byte ptr [rax + 0x56], ah ; out dx, al ; call qword ptr [rax]
0x0000000000159fb0 : out dx, al ; jge 0x159fa3 ; call rbx
0x000000000017af12 : out dx, al ; jmp qword ptr [rax]
0x000000000017a96a : out dx, al ; jmp qword ptr [rcx]
0x0000000000003751 : out dx, al ; jne 0x3731 ; ret 0x975
0x000000000000314f : out dx, al ; mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x000000000012bfea : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000003568b : out dx, al ; mov rdi, r12 ; call r14
0x000000000007f366 : out dx, al ; mov rdi, r12 ; call rax
0x00000000000ef865 : out dx, al ; mov rdi, rbx ; call r14
0x000000000007f52e : out dx, al ; mov rdi, rbx ; call rax
0x000000000011c34b : out dx, al ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000001345aa : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000012482e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000009b6a9 : out dx, al ; ret
0x0000000000002592 : out dx, al ; ret 0x88ad
0x000000000016eb19 : out dx, al ; sti ; jmp rax
0x0000000000161318 : out dx, al ; test esi, ebp ; jmp rsp
0x000000000009bca9 : out dx, al ; xor eax, eax ; ret
0x000000000009a58d : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000001843c5 : out dx, eax ; add byte ptr [rax], al ; pop rax ; rep ; jmp qword ptr [rcx]
0x0000000000061516 : out dx, eax ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000173f99 : out dx, eax ; add dword ptr [rax], eax ; jo 0x173f97 ; clc ; call rax
0x0000000000114fb9 : out dx, eax ; add rbx, r12 ; add r15d, 1 ; call r14
0x000000000014bf11 : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x000000000010e926 : out dx, eax ; call 0x10abd3
0x0000000000170dae : out dx, eax ; call qword ptr [rax - 0x3d]
0x000000000007aaed : out dx, eax ; call qword ptr [rax]
0x000000000010b77f : out dx, eax ; call qword ptr [rbx]
0x000000000017dd32 : out dx, eax ; call qword ptr [rcx]
0x000000000017e6ba : out dx, eax ; call qword ptr [rdi]
0x000000000017da1a : out dx, eax ; call qword ptr [rdx]
0x000000000017e2da : out dx, eax ; call qword ptr [rsi]
0x00000000000c08da : out dx, eax ; call r12
0x00000000001095ee : out dx, eax ; call r14
0x000000000010c60a : out dx, eax ; call rax
0x000000000009cb49 : out dx, eax ; call rbx
0x000000000007cd67 : out dx, eax ; call rcx
0x000000000007f270 : out dx, eax ; call rdx
0x000000000015ecfe : out dx, eax ; call rsi
0x000000000018aa89 : out dx, eax ; cmc ; jmp qword ptr [rcx]
0x0000000000172605 : out dx, eax ; cmc ; jmp rax
0x00000000001709ee : out dx, eax ; dec dword ptr [rax] ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; adc byte ptr [rdx - 0x11], dh ; jmp qword ptr [rax]
0x0000000000170c26 : out dx, eax ; dec eax ; mov ecx, 0xc6000000 ; out dx, eax ; call qword ptr [rax]
0x0000000000170ade : out dx, eax ; dec eax ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; mov edi, gs ; jmp rax
0x0000000000160c0d : out dx, eax ; hlt ; call qword ptr [rbx]
0x0000000000170b3e : out dx, eax ; inc dword ptr [rax - 0x6fffff4e] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, eax ; call rax
0x0000000000170d0e : out dx, eax ; inc eax ; mov edi, 0xde500000 ; out dx, eax ; jmp rax
0x000000000015ed72 : out dx, eax ; inc edx ; test ebp, edi ; jmp rax
0x000000000005b82b : out dx, eax ; jmp 0x57ae9
0x00000000001709f6 : out dx, eax ; jmp qword ptr [rax]
0x000000000017b3b2 : out dx, eax ; jmp qword ptr [rbx]
0x000000000017db5a : out dx, eax ; jmp qword ptr [rcx]
0x000000000017cf7a : out dx, eax ; jmp qword ptr [rdi]
0x000000000017c0ea : out dx, eax ; jmp qword ptr [rdx]
0x000000000017d482 : out dx, eax ; jmp qword ptr [rsi]
0x000000000015ed76 : out dx, eax ; jmp rax
0x000000000017ba4a : out dx, eax ; jmp rbx
0x0000000000170c86 : out dx, eax ; lcall ptr [rax + 0x700000bc] ; shr edi, 1 ; call rax
0x0000000000109fd6 : out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000109e17 : out dx, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000f4d00 : out dx, eax ; leave ; ret
0x0000000000170a9e : out dx, eax ; ljmp ptr [rax + 0x300000ad] ; jg 0x170a9f ; jmp rax
0x00000000000d49e0 : out dx, eax ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000012be1a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012bf16 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012be62 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000e71f8 : out dx, eax ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000021ff0 : out dx, eax ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000043330 : out dx, eax ; mov rax, rdx ; ret
0x000000000010e940 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000010e74b : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000000c0903 : out dx, eax ; mov rsi, rbx ; call r12
0x000000000013462a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000078643 : out dx, eax ; neg rdi ; call qword ptr [r14]
0x000000000012492d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c6dc : out dx, eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000f8ab6 : out dx, eax ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000006e991 : out dx, eax ; pop rbx ; ret
0x0000000000170da6 : out dx, eax ; push qword ptr [rax] ; ret
0x0000000000170d76 : out dx, eax ; push qword ptr [rax] ; ret 0
0x0000000000170a3e : out dx, eax ; push rax ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x11], bh ; jmp qword ptr [rax]
0x0000000000147883 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000147898 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001478ad : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009a418 : out dx, eax ; ret
0x0000000000099af3 : out dx, eax ; ret 0xf66
0x0000000000148d9c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000148d85 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000148d6e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000014782a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eadd : out dx, eax ; sti ; inc eax ; lock sti ; call qword ptr [rax]
0x000000000009bf90 : out dx, eax ; sub rax, 4 ; ret
0x00000000000a8268 : out dx, eax ; sub rsp, 8 ; call r12
0x000000000010ac7e : out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000042910 : out dx, eax ; xor eax, eax ; ret
0x00000000001204de : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000016ff01 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; jo 0x16fed5 ; jmp 0x16ff0d
0x000000000016ff11 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; ror dl, 1 ; jmp 0x16ff1d
0x00000000000ab3e1 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000149d3e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000119bbe : outsb dx, byte ptr [rsi] ; cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000007d512 : outsb dx, byte ptr [rsi] ; cld ; xor dword ptr [rax], eax ; test eax, eax ; js 0x7d529 ; ret
0x000000000017052d : outsb dx, byte ptr [rsi] ; in al, dx ; call rax
0x000000000015da23 : outsb dx, byte ptr [rsi] ; ja 0x15d9ac ; ret 0x48f
0x000000000015b764 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000000859fa : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000003148f : outsd dx, dword ptr [rsi] ; add dh, al ; add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000802b8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000860ce : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000015fc69 : outsd dx, dword ptr [rsi] ; inc eax ; jno 0x15fc67 ; call rax
0x0000000000181059 : outsd dx, dword ptr [rsi] ; int1 ; jmp rbx
0x000000000017d5d9 : outsd dx, dword ptr [rsi] ; out dx, eax ; call qword ptr [rax]
0x0000000000148b9d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000148c3d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000008392a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008392f : outsd dx, dword ptr [rsi] ; ret
0x000000000015c126 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000012c757 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000148c42 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x000000000008397a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000119192 : outsd dx, dword ptr [rsi] ; sbb byte ptr [rcx], al ; je 0x1191a7 ; xor eax, eax ; ret
0x000000000017428d : outsd dx, dword ptr [rsi] ; stc ; call rax
0x000000000015c125 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000011e122 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000009b534 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000009b51f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000011e121 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000015d526 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000008f5c1 : pcmpgtd mm1, qword ptr [rcx - 0x76b7fba9] ; clc ; ret
0x000000000008fc45 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x00000000000331e1 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x00000000000334e1 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x000000000008fc53 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000008fcf5 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x8fd79 ; xor eax, eax ; ret
0x00000000000331e0 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x00000000000334e0 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x0000000000081b36 : pmovmskb edx, mm4 ; test edx, edx ; je 0x81b4a ; bsf eax, edx ; ret
0x000000000017e34d : pop qword ptr [rax] ; add byte ptr [rax], al ; xchg eax, edi ; out dx, eax ; call qword ptr [rdx]
0x000000000017e385 : pop qword ptr [rax] ; add byte ptr [rax], cl ; xchg eax, edi ; out dx, eax ; call qword ptr [rdx]
0x0000000000172de1 : pop qword ptr [rcx] ; add al, dl ; sbb esi, edi ; jmp qword ptr [rax]
0x00000000000f49c4 : pop r10 ; ret
0x000000000015d9af : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000007c6c2 : pop r12 ; jmp rax
0x00000000000e529f : pop r12 ; mov esi, 2 ; jmp rax
0x00000000000e52b9 : pop r12 ; mov esi, 3 ; jmp rax
0x00000000000744f4 : pop r12 ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000006bf5e : pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000efdb0 : pop r12 ; mov rdx, rax ; jmp rcx
0x00000000000f8ab8 : pop r12 ; pop r13 ; jmp rax
0x000000000007ca3b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f606 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000209e3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000321de : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000226d0 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001158ee : pop r12 ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x00000000000696e5 : pop r12 ; pop r13 ; pop rbp ; ret
0x000000000001fb23 : pop r12 ; pop r13 ; ret
0x0000000000035c56 : pop r12 ; pop rbp ; ret
0x000000000001fb4e : pop r12 ; ret
0x00000000000f8aba : pop r13 ; jmp rax
0x000000000003d5ae : pop r13 ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000003d42e : pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000007ca3d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f608 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000209e5 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000321e0 : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000226d2 : pop r13 ; pop r14 ; ret
0x000000000006f246 : pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00000000001158f0 : pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x00000000000696e7 : pop r13 ; pop rbp ; ret
0x000000000001fb25 : pop r13 ; ret
0x0000000000115924 : pop r14 ; mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x000000000003d5b0 : pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000003d430 : pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000007ca3f : pop r14 ; pop r15 ; jmp rax
0x000000000001f60a : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000209e7 : pop r14 ; pop r15 ; ret
0x00000000000321e2 : pop r14 ; pop rbp ; ret
0x00000000000226d4 : pop r14 ; ret
0x000000000006f248 : pop r14 ; sar rax, 2 ; ret
0x00000000001158f2 : pop r14 ; xor eax, eax ; jmp rcx
0x000000000003d5b2 : pop r15 ; fmul st(0) ; ret
0x000000000003d432 : pop r15 ; fmulp st(1) ; ret
0x000000000007ca41 : pop r15 ; jmp rax
0x000000000001f60c : pop r15 ; pop rbp ; ret
0x00000000000209e9 : pop r15 ; ret
0x0000000000110de6 : pop r8 ; mov eax, 1 ; ret
0x0000000000077c9e : pop r8 ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000010c426 : pop r8 ; pop rbx ; sete al ; movzx eax, al ; ret
0x000000000016e2cf : pop r9 ; clc ; ret 0x6e1f
0x00000000000d1d2b : pop rax ; adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000171a80 : pop rax ; adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; push rsi ; call rax
0x0000000000174f89 : pop rax ; add al, byte ptr [rax] ; add bh, cl ; cli ; call qword ptr [rax]
0x000000000011151e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001724f1 : pop rax ; add dword ptr [rax], eax ; sar byte ptr [rcx], -0xb ; jmp qword ptr [rax]
0x000000000018ac4d : pop rax ; add dword ptr [rax], eax ; xor bh, dh ; cmc ; jmp qword ptr [rcx]
0x00000000001724e9 : pop rax ; add dword ptr [rax], eax ; xor byte ptr [rcx], bh ; cmc ; jmp rax
0x00000000000b30d0 : pop rax ; add dword ptr [rbp - 0x24], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000de696 : pop rax ; add ecx, dword ptr [rcx + 0xf102474] ; xchg eax, esp ; ret 0x8440
0x00000000000210c2 : pop rax ; and byte ptr [rax - 0x77], cl ; ret 0x5374
0x000000000015fec1 : pop rax ; call qword ptr [rax]
0x00000000001827b1 : pop rax ; call qword ptr [rcx]
0x0000000000182891 : pop rax ; call qword ptr [rsi]
0x00000000001116e4 : pop rax ; call rax
0x00000000000c2597 : pop rax ; cmp al, 0x11 ; je 0xc25a7 ; xor eax, eax ; ret
0x00000000001720dd : pop rax ; hlt ; jmp rax
0x00000000001626d1 : pop rax ; idiv edi ; adc ebx, dword ptr [rdx - 9] ; call qword ptr [rbx]
0x0000000000162651 : pop rax ; idiv edi ; rcr dword ptr [rdx - 9], cl ; jmp rsp
0x00000000001717a5 : pop rax ; int1 ; call rax
0x00000000001827f9 : pop rax ; jmp qword ptr [rcx]
0x0000000000111526 : pop rax ; jmp rcx
0x00000000001888d8 : pop rax ; mov ch, dh ; jmp qword ptr [rcx]
0x000000000007a22a : pop rax ; mov eax, 1 ; jmp 0x7a1fb
0x0000000000110de7 : pop rax ; mov eax, 1 ; ret
0x000000000002cbe4 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002cb72 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000ffe01 : pop rax ; mov eax, edx ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000188968 : pop rax ; mov ebp, esi ; jmp qword ptr [rcx]
0x000000000010bbde : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000000e49f8 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000006f067 : pop rax ; mov rdi, rsi ; call 0x9b346
0x00000000000c8a50 : pop rax ; or bh, dh ; ret
0x0000000000094514 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000077c9f : pop rax ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000181d78 : pop rax ; out -0xf, al ; jmp rax
0x000000000017c918 : pop rax ; out dx, eax ; jmp rbx
0x000000000014c6dd : pop rax ; pop rbx ; pop rbp ; ret
0x000000000010c427 : pop rax ; pop rbx ; sete al ; movzx eax, al ; ret
0x00000000000e8249 : pop rax ; pop rdi ; call rax
0x000000000017d088 : pop rax ; pop rdi ; out dx, eax ; call rbx
0x000000000011d1e1 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000176e08 : pop rax ; pop rsi ; jmp 0x176e0e
0x000000000015fee1 : pop rax ; push rax ; pop rax ; call qword ptr [rax]
0x00000000001843c8 : pop rax ; rep ; jmp qword ptr [rcx]
0x000000000001cfc8 : pop rax ; ret
0x000000000001cd40 : pop rax ; ret 0x39
0x00000000001893f8 : pop rax ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x000000000017a968 : pop rax ; shr dh, 1 ; jmp qword ptr [rcx]
0x0000000000177608 : pop rax ; stosb byte ptr [rdi], al ; jmp 0x17760e
0x0000000000177338 : pop rax ; xchg eax, esp ; jmp 0x17733e
0x0000000000068437 : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x0000000000172561 : pop rbp ; add dword ptr [rax], eax ; push -0xb ; call rax
0x000000000010bd5d : pop rbp ; add eax, edx ; ret
0x000000000016ed1d : pop rbp ; cld ; call qword ptr [rax]
0x000000000016ef19 : pop rbp ; cld ; jmp qword ptr [rax]
0x000000000016f691 : pop rbp ; cld ; jmp rax
0x000000000016eddd : pop rbp ; cld ; jmp rdx
0x000000000005862f : pop rbp ; fadd qword ptr [rcx] ; add byte ptr [rbx - 0x76be0008], al ; ret 0x8b48
0x000000000006e384 : pop rbp ; jmp rax
0x0000000000109525 : pop rbp ; jmp rcx
0x000000000010ac82 : pop rbp ; jmp rdx
0x000000000009d961 : pop rbp ; lea rax, qword ptr [r8 + rdx] ; pop r14 ; pop r15 ; ret
0x0000000000037db3 : pop rbp ; lea rax, qword ptr [r9 + rdx] ; pop r14 ; pop r15 ; ret
0x00000000000c3ee9 : pop rbp ; or al, 1 ; ret
0x00000000000c3eef : pop rbp ; or byte ptr [rcx], bh ; ret
0x000000000007c6c1 : pop rbp ; pop r12 ; jmp rax
0x00000000000e529e : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000000e52b8 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00000000000744f3 : pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000006bf5d : pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000efdaf : pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x00000000000f8ab7 : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000007ca3a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000209e2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000226cf : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001158ed : pop rbp ; pop r12 ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x000000000001fb22 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fb4d : pop rbp ; pop r12 ; ret
0x000000000010a011 : pop rbp ; pop r13 ; pop r14 ; ret
0x000000000003d5af : pop rbp ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000003d42f : pop rbp ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000007ca3e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x000000000001f609 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000209e6 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000321e1 : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000000226d3 : pop rbp ; pop r14 ; ret
0x000000000006f247 : pop rbp ; pop r14 ; sar rax, 2 ; ret
0x00000000001158f1 : pop rbp ; pop r14 ; xor eax, eax ; jmp rcx
0x00000000000696e8 : pop rbp ; pop rbp ; ret
0x0000000000042c28 : pop rbp ; pop rbx ; ret
0x000000000001f60e : pop rbp ; ret
0x00000000000f3281 : pop rbp ; xor eax, eax ; pop rbx ; ret
0x000000000017af8d : pop rbx ; add byte ptr [rax], al ; add ah, dh ; out dx, al ; call qword ptr [rax]
0x000000000015acf8 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000009a20c : pop rbx ; and eax, 0x3fc00 ; ret
0x000000000009a23f : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000f4c47 : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000016eded : pop rbx ; cld ; jmp qword ptr [rdx]
0x000000000016ed31 : pop rbx ; cld ; jmp rax
0x000000000015acf6 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000009a2c5 : pop rbx ; div esi ; mov eax, eax ; ret
0x0000000000176b39 : pop rbx ; jmp 0x176b3d
0x000000000006bd76 : pop rbx ; jmp rax
0x00000000000b3005 : pop rbx ; lea rax, qword ptr [rax + rdx*8] ; ret
0x00000000000c0a10 : pop rbx ; mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000006cf40 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x000000000006cf2c : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000c0572 : pop rbx ; mov eax, 1 ; ret
0x00000000000d6c5b : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x0000000000036ad5 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000009a2ac : pop rbx ; mov eax, eax ; ret
0x00000000000b74d3 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004ee7a : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000067e12 : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000006db81 : pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004cfde : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000113278 : pop rbx ; mov qword ptr [r12], rcx ; pop rbp ; pop r12 ; ret
0x000000000006e7b7 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000006e6b8 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000006b517 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002d42e : pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002d5e1 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000006bebc : pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x000000000010fae3 : pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x00000000000eca5b : pop rbx ; neg eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000321dd : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000696e4 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000035c55 : pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000a4ce4 : pop rbx ; pop r14 ; ret
0x000000000010bd5c : pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000006e383 : pop rbx ; pop rbp ; jmp rax
0x0000000000109524 : pop rbx ; pop rbp ; jmp rcx
0x000000000010ac81 : pop rbx ; pop rbp ; jmp rdx
0x000000000007c6c0 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000e529d : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000000e52b7 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00000000000744f2 : pop rbx ; pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000006bf5c : pop rbx ; pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000efdae : pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x00000000000226ce : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fb21 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fb4c : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a010 : pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x00000000000202bc : pop rbx ; pop rbp ; ret
0x0000000000020415 : pop rbx ; ret
0x0000000000001b14 : pop rbx ; ret 0x2a63
0x000000000015dfe0 : pop rbx ; ret 0x6f9
0x00000000000e085c : pop rbx ; sar eax, 0x1f ; ret
0x000000000010c428 : pop rbx ; sete al ; movzx eax, al ; ret
0x0000000000069960 : pop rbx ; sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000016e4c5 : pop rbx ; sti ; jmp qword ptr [rax]
0x000000000009c729 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000006a43b : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000018adad : pop rcx ; add dword ptr [rax], eax ; mov al, -5 ; cmc ; call qword ptr [rsi]
0x0000000000172501 : pop rcx ; add dword ptr [rax], eax ; sar byte ptr [rsi], -0xb ; jmp qword ptr [rax]
0x00000000000ef285 : pop rcx ; add ecx, ebp ; ret 0xfffd
0x0000000000109f3e : pop rcx ; add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff6ea : pop rcx ; and eax, 0x5b01002a ; ret
0x00000000001828c1 : pop rcx ; call rdi
0x000000000016d7b0 : pop rcx ; clc ; ret 0x6e1f
0x000000000016ee81 : pop rcx ; cld ; call rsp
0x000000000016ed01 : pop rcx ; cld ; jmp qword ptr [rax]
0x000000000016f6c5 : pop rcx ; cld ; jmp rax
0x0000000000172545 : pop rcx ; cmc ; call rax
0x0000000000162611 : pop rcx ; idiv edi ; rcr dword ptr [rdx - 9], cl ; call rbx
0x000000000015fefd : pop rcx ; inc eax ; pop rsi ; jmp rax
0x0000000000033395 : pop rcx ; or eax, 0x13afb1 ; movaps xmm0, xmm1 ; ret
0x0000000000033370 : pop rcx ; or eax, 0x13afda ; movaps xmm0, xmm1 ; ret
0x000000000002e1cb : pop rcx ; or esi, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000001626d0 : pop rcx ; pop rax ; idiv edi ; adc ebx, dword ptr [rdx - 9] ; call qword ptr [rbx]
0x0000000000116caf : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e493b : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d10aa : pop rcx ; pop rbx ; ret
0x0000000000001b13 : pop rcx ; pop rbx ; ret 0x2a63
0x0000000000062993 : pop rcx ; ret
0x00000000000a9fb3 : pop rcx ; ret 0xb
0x00000000000e47f2 : pop rcx ; ret 0xc383
0x00000000000b602b : pop rcx ; sar eax, 0x1f ; add rsp, 8 ; ret
0x000000000016e4fd : pop rcx ; sti ; call qword ptr [rax]
0x000000000016156c : pop rcx ; xchg ch, dh ; call rdx
0x00000000001615c0 : pop rcx ; xchg ch, dh ; jmp rsi
0x00000000000601cd : pop rcx ; xor al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000012a998 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000db172 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000017b3ad : pop rdi ; add byte ptr [rax], al ; add byte ptr [rcx], -0x11 ; jmp qword ptr [rbx]
0x000000000008a6a9 : pop rdi ; add byte ptr [rax], al ; ret
0x0000000000172589 : pop rdi ; add dword ptr [rax], eax ; mov al, -0x75 ; cmc ; jmp rax
0x0000000000124fbd : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e824a : pop rdi ; call rax
0x000000000016edc9 : pop rdi ; cld ; call qword ptr [rdx]
0x000000000016ed0d : pop rdi ; cld ; call rax
0x000000000016ed09 : pop rdi ; cld ; inc dword ptr [rax + 0x5f] ; cld ; call rax
0x000000000016ed49 : pop rdi ; cld ; jmp qword ptr [rsi]
0x000000000016ef09 : pop rdi ; cld ; jmp rax
0x000000000003d5b3 : pop rdi ; fmul st(0) ; ret
0x000000000003d433 : pop rdi ; fmulp st(1) ; ret
0x000000000012c3b9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012c1c9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ff1d : pop rdi ; inc eax ; pop rdi ; jmp rax
0x000000000015d29e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000015ff09 : pop rdi ; jmp qword ptr [rax]
0x0000000000182a41 : pop rdi ; jmp qword ptr [rcx]
0x000000000007ca42 : pop rdi ; jmp rax
0x000000000012bc66 : pop rdi ; lock mov qword ptr [rdi - 8], rcx ; ret
0x000000000012bca4 : pop rdi ; lock mov qword ptr [rdi - 8], rdx ; ret
0x000000000015c261 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000012bfe9 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000017d089 : pop rdi ; out dx, eax ; call rbx
0x000000000017cf79 : pop rdi ; out dx, eax ; jmp qword ptr [rdi]
0x000000000012be19 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012bf15 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012be61 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000001f60d : pop rdi ; pop rbp ; ret
0x00000000000209ea : pop rdi ; ret
0x000000000016e4d1 : pop rdi ; sti ; call qword ptr [rax]
0x0000000000174ff9 : pop rdx ; add al, byte ptr [rax] ; and ch, dl ; cli ; call rax
0x000000000017af0d : pop rdx ; add byte ptr [rax], al ; mov al, -0xd ; out dx, al ; jmp qword ptr [rax]
0x0000000000033992 : pop rdx ; add byte ptr ss:[rbp - 0xcf98a40], al ; ret
0x000000000011f8a6 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x000000000016ef35 : pop rdx ; cld ; call qword ptr [rax]
0x000000000016edf9 : pop rdx ; cld ; call rdx
0x000000000016edf5 : pop rdx ; cld ; inc dword ptr [rdx + 0x5a] ; cld ; call rdx
0x000000000016f689 : pop rdx ; cld ; jmp rax
0x000000000016ed79 : pop rdx ; cld ; jmp rsi
0x00000000001626b5 : pop rdx ; idiv edi ; adc ebx, dword ptr [rdx - 9] ; call qword ptr [rbx]
0x00000000001625f5 : pop rdx ; idiv edi ; rcr dword ptr [rdx - 9], cl ; call rbx
0x000000000016260d : pop rdx ; idiv edi ; sbb dword ptr [rcx - 9], ebx ; call rbx
0x0000000000003a4e : pop rdx ; int1 ; mov dl, 0x1e ; ret
0x000000000015ce81 : pop rdx ; je 0x15ce4b ; ret 0xacfc
0x0000000000003151 : pop rdx ; jmp 0xffffffffc25d05ff
0x000000000015de47 : pop rdx ; out -0xb, eax ; mov ch, -0x55 ; ret
0x00000000000f49c3 : pop rdx ; pop r10 ; ret
0x00000000000f8cad : pop rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e49fc : pop rdx ; pop rbx ; ret
0x00000000000d10a9 : pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000b602a : pop rdx ; pop rcx ; sar eax, 0x1f ; add rsp, 8 ; ret
0x00000000000f49e9 : pop rdx ; pop rsi ; ret
0x0000000000001b8e : pop rdx ; ret
0x0000000000176669 : pop rdx ; std ; jmp qword ptr [rdi]
0x000000000016e4c1 : pop rdx ; sti ; call rax
0x000000000015d9b0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000009bb35 : pop rdx ; test al, -0x10 ; jne 0x9bb69 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000124ebe : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000004b00 : pop rsi ; add eax, 0 ; add byte ptr [rax], al ; ret 0x26
0x0000000000173aed : pop rsi ; clc ; call qword ptr [rax]
0x000000000016ef15 : pop rsi ; cld ; call qword ptr [rax + 0x20fffc5d]
0x000000000016ed55 : pop rsi ; cld ; call rsi
0x000000000016ed51 : pop rsi ; cld ; inc dword ptr [rsi + 0x5e] ; cld ; call rsi
0x0000000000174bbd : pop rsi ; cli ; jmp rax
0x000000000015ff05 : pop rsi ; inc dword ptr [rax] ; pop rdi ; jmp qword ptr [rax]
0x00000000001717ed : pop rsi ; int1 ; call rax
0x0000000000176d61 : pop rsi ; jmp 0x176d65
0x0000000000176df1 : pop rsi ; jmp 0x176df5
0x0000000000176e09 : pop rsi ; jmp 0x176e0d
0x0000000000176e21 : pop rsi ; jmp 0x176e25
0x0000000000176e39 : pop rsi ; jmp 0x176e3d
0x0000000000176e51 : pop rsi ; jmp 0x176e55
0x0000000000176e69 : pop rsi ; jmp 0x176e6d
0x0000000000176e81 : pop rsi ; jmp 0x176e85
0x0000000000176e99 : pop rsi ; jmp 0x176e9d
0x0000000000176eb1 : pop rsi ; jmp 0x176eb5
0x0000000000176ec9 : pop rsi ; jmp 0x176ecd
0x0000000000176ee1 : pop rsi ; jmp 0x176ee5
0x0000000000176f29 : pop rsi ; jmp 0x176f2d
0x0000000000176f41 : pop rsi ; jmp 0x176f45
0x0000000000176f59 : pop rsi ; jmp 0x176f5d
0x0000000000176f71 : pop rsi ; jmp 0x176f75
0x0000000000176fa1 : pop rsi ; jmp 0x176fa5
0x00000000001829e1 : pop rsi ; jmp qword ptr [rax]
0x000000000015ff01 : pop rsi ; jmp rax
0x0000000000115925 : pop rsi ; mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x000000000003d5b1 : pop rsi ; pop r15 ; fmul st(0) ; ret
0x000000000003d431 : pop rsi ; pop r15 ; fmulp st(1) ; ret
0x000000000007ca40 : pop rsi ; pop r15 ; jmp rax
0x000000000001f60b : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000209e8 : pop rsi ; pop r15 ; ret
0x00000000000321e3 : pop rsi ; pop rbp ; ret
0x00000000000226d5 : pop rsi ; ret
0x000000000006f249 : pop rsi ; sar rax, 2 ; ret
0x00000000000dd219 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000016e4cd : pop rsi ; sti ; inc eax ; pop rdi ; sti ; call qword ptr [rax]
0x00000000001158f3 : pop rsi ; xor eax, eax ; jmp rcx
0x00000000001206f0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000186794 : pop rsp ; adc eax, dword ptr [rcx] ; add byte ptr [rax - 0x53], cl ; hlt ; call qword ptr [rdi]
0x000000000011fba4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000016fd39 : pop rsp ; add byte ptr [rax], al ; adc byte ptr [rdx], bl ; jmp 0x16fd45
0x0000000000172549 : pop rsp ; add dword ptr [rax], eax ; mov al, 0x60 ; cmc ; jmp qword ptr [rax]
0x00000000001213f0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x0000000000185794 : pop rsp ; add eax, dword ptr [rcx] ; add byte ptr [rax - 0x17], ch ; jmp qword ptr [rbx]
0x0000000000189e94 : pop rsp ; add qword ptr [rax], rax ; sal rbp, 1 ; jmp qword ptr [rcx]
0x000000000003dd80 : pop rsp ; and al, 0x30 ; add rax, rax ; sub rdx, rax ; jmp 0x3ddc0
0x00000000000a80d5 : pop rsp ; and al, 0xfffffffffffffff0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x000000000010aa17 : pop rsp ; and al, 8 ; call rbx
0x0000000000194eb1 : pop rsp ; clc ; call qword ptr [rax]
0x0000000000194ee9 : pop rsp ; clc ; jmp qword ptr [rcx]
0x000000000016ede9 : pop rsp ; cld ; call qword ptr [rdx + 0x22fffc5b]
0x000000000016ed65 : pop rsp ; cld ; call qword ptr [rsi]
0x000000000016ef25 : pop rsp ; cld ; call rax
0x000000000016ef21 : pop rsp ; cld ; inc dword ptr [rax + 0x5c] ; cld ; call rax
0x000000000016f6cd : pop rsp ; cld ; jmp rax
0x000000000016eea5 : pop rsp ; cld ; jmp rsp
0x0000000000174ba5 : pop rsp ; cli ; call qword ptr [rax]
0x0000000000160e90 : pop rsp ; hlt ; hlt ; call rsi
0x000000000007c6c3 : pop rsp ; jmp rax
0x0000000000183494 : pop rsp ; loopne 0x18349e ; add byte ptr [rax + 7], bl ; call qword ptr [rbx]
0x00000000000e52a0 : pop rsp ; mov esi, 2 ; jmp rax
0x00000000000e52ba : pop rsp ; mov esi, 3 ; jmp rax
0x00000000000744f5 : pop rsp ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000006bf5f : pop rsp ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000efdb1 : pop rsp ; mov rdx, rax ; jmp rcx
0x00000000000c0834 : pop rsp ; neg eax ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e580 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000f8ab9 : pop rsp ; pop r13 ; jmp rax
0x000000000003d5ad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000003d42d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000007ca3c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f607 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000209e4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000321df : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000226d1 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000006f245 : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00000000001158ef : pop rsp ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x00000000000696e6 : pop rsp ; pop r13 ; pop rbp ; ret
0x000000000001fb24 : pop rsp ; pop r13 ; ret
0x0000000000035c57 : pop rsp ; pop rbp ; ret
0x000000000018a494 : pop rsp ; push rax ; add dword ptr [rax], eax ; cwde ; in eax, -0xb ; jmp qword ptr [rcx]
0x00000000000037f0 : pop rsp ; ret
0x00000000000e0bd8 : pop rsp ; ret 0x2b
0x0000000000003155 : pop rsp ; ret 0x52c0
0x0000000000160930 : pop rsp ; sal ah, -1 ; nop ; ret 0xfff4
0x0000000000195cd9 : popfq ; add eax, dword ptr [rip - 0x10000] ; add dword ptr [rbx], ecx ; ret
0x00000000000f5347 : popfq ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000007aae7 : popfq ; and dh, byte ptr [rdx] ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [rax]
0x000000000016f971 : popfq ; cld ; call rax
0x000000000016f9f1 : popfq ; cld ; jmp qword ptr [rdx + 0x12fffc9c]
0x000000000016fb31 : popfq ; cld ; push qword ptr [rax - 0x64] ; cld ; jmp rax
0x000000000011ce17 : popfq ; jmp qword ptr [rdi]
0x000000000007fe75 : popfq ; or al, 0 ; ret
0x0000000000121dd0 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000113194 : popfq ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001346f3 : psllq mm1, qword ptr [rdi] ; jg 0x13470c ; ret
0x00000000001371c3 : psllq mm1, qword ptr [rdi] ; jg 0x1371dc ; ret
0x0000000000139ce3 : psllq mm1, qword ptr [rdi] ; jg 0x139cfc ; ret
0x00000000000956b6 : psllq mm1, qword ptr [rdi] ; jg 0x956ca ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000095717 : psllq mm1, qword ptr [rdi] ; jg 0x9572c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000096386 : psllq mm1, qword ptr [rdi] ; jg 0x9639a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000963e7 : psllq mm1, qword ptr [rdi] ; jg 0x963fc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000098796 : psllq mm1, qword ptr [rdi] ; jg 0x987aa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000987f7 : psllq mm1, qword ptr [rdi] ; jg 0x9880c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000099266 : psllq mm1, qword ptr [rdi] ; jg 0x9927a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000992c7 : psllq mm1, qword ptr [rdi] ; jg 0x992dc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000017126d : push -0x10 ; jmp qword ptr [rax]
0x00000000001704cd : push -0x14 ; call qword ptr [rax]
0x00000000001704c5 : push -0x14 ; jmp rax
0x00000000000bb3f4 : push -0x16000016 ; ret
0x0000000000039e3d : push -0x18d218 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000174d90 : push -0x1ffffdb4 ; mov edi, edx ; call rax
0x0000000000175309 : push -0x3b600000 ; std ; jmp qword ptr [rax]
0x00000000000333e6 : push -0x51 ; adc eax, dword ptr [rax] ; movaps xmm0, xmm1 ; ret
0x000000000011bfdc : push -0x7317ffd8 ; ret 0xfffc
0x0000000000002be1 : push -0x7329150 ; ret
0x0000000000028e87 : push -0x74fffffe ; cmp cl, byte ptr [rax - 0x7d] ; ret 0x4904
0x0000000000101f19 : push -0x76000001 ; ret 0x4389
0x00000000000f1bc4 : push -0x76000001 ; ret 0x8948
0x0000000000110c3d : push -0x76b7fffb ; ret 0xff31
0x000000000010f7fc : push -0x76ffd6d4 ; ret
0x000000000005e024 : push -0x7cfffe7e ; clc ; inc dword ptr [rcx - 0x77] ; ret 0x850f
0x0000000000149d24 : push -0x9ffffff ; ret 0x7501
0x0000000000172565 : push -0xb ; call rax
0x000000000009bb27 : push -0xfb872b8 ; ret
0x000000000016e4f1 : push -5 ; call qword ptr [rax - 0x1f000495]
0x00000000000e5c83 : push -5 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000109a8a : push 0 ; push 0x19 ; call qword ptr [rax]
0x0000000000109a8c : push 0x19 ; call qword ptr [rax]
0x000000000017bd1d : push 0x20400000 ; out dx, eax ; jmp qword ptr [rax]
0x0000000000171ad8 : push 0x30000116 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rax
0x00000000001724e8 : push 0x30000158 ; cmp ebp, esi ; jmp rax
0x000000000018528e : push 0x41180e0a ; ret
0x0000000000103ab3 : push 0x5bc03103 ; pop rbp ; pop r12 ; ret
0x00000000000cf8a4 : push 0x5c415d5b ; pop r13 ; ret
0x000000000015da22 : push 0x6e ; ja 0x15d9ad ; ret 0x48f
0x0000000000187d3a : push 0x8070c01 ; ret
0x00000000000c53c7 : push 0x8c48348 ; pop rbx ; pop rbp ; ret
0x000000000017e80c : push 0xe ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; push rcx ; ret
0x000000000002ea6e : push 0xfffffff ; ret 0x8d49
0x0000000000110c7e : push 2 ; add rdi, 0x68 ; jmp rcx
0x0000000000096112 : push 5 ; add byte ptr [rax], al ; ret
0x000000000004a881 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000171d7f : push qword ptr [rax + 0x10000127] ; je 0x171d82 ; jmp qword ptr [rax]
0x0000000000171d7e : push qword ptr [rax + 0x10000127] ; je 0x171d83 ; jmp qword ptr [rax]
0x00000000001743e7 : push qword ptr [rax + 0x10] ; add al, byte ptr [rax] ; nop ; cwde ; stc ; jmp rax
0x000000000016eca7 : push qword ptr [rax + 0x1b] ; cld ; inc eax ; sbb al, -4 ; call qword ptr [rax]
0x000000000016e43f : push qword ptr [rax + 0x1c] ; sti ; call qword ptr [rax]
0x000000000016e45f : push qword ptr [rax + 0x29] ; sti ; call qword ptr [rax]
0x00000000001704bf : push qword ptr [rax + 0x30000089] ; push -0x14 ; jmp rax
0x000000000016ef1f : push qword ptr [rax + 0x40fffc5c] ; pop rsp ; cld ; call rax
0x000000000016ed07 : push qword ptr [rax + 0x40fffc5f] ; pop rdi ; cld ; call rax
0x000000000016f40b : push qword ptr [rax + 0x40fffc84] ; test bh, ah ; call rax
0x000000000016f72b : push qword ptr [rax + 0x40fffca7] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call rax
0x000000000016f903 : push qword ptr [rax + 0x40fffcab] ; stosd dword ptr [rdi], eax ; cld ; call rax
0x000000000016e66f : push qword ptr [rax + 0x40fffda5] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x000000000017408f : push qword ptr [rax + 0x500001f6] ; and cl, bh ; jmp rax
0x000000000016f173 : push qword ptr [rax + 0x50] ; cld ; jmp rax
0x000000000016ef6f : push qword ptr [rax + 0x51] ; cld ; jmp rax
0x000000000016e4fb : push qword ptr [rax + 0x59] ; sti ; call qword ptr [rax]
0x000000000016e4cb : push qword ptr [rax + 0x5e] ; sti ; inc eax ; pop rdi ; sti ; call qword ptr [rax]
0x0000000000173177 : push qword ptr [rax + 0x600001a1] ; jb 0x17317e ; call rax
0x00000000001612a7 : push qword ptr [rax + 0x70fff57d] ; jge 0x1612ac ; jmp rax
0x000000000016012f : push qword ptr [rax + 0x76] ; jmp qword ptr [rax - 0x2f000c8a]
0x00000000001612ab : push qword ptr [rax + 0x7d] ; cmc ; jmp rax
0x000000000016f43b : push qword ptr [rax + 0x7f] ; cld ; call qword ptr [rax]
0x0000000000171947 : push qword ptr [rax + 0xa] ; add dword ptr [rax], eax ; push rax ; sal cl, cl ; call rax
0x0000000000174287 : push qword ptr [rax + 3] ; add al, byte ptr [rax] ; mov al, 0x6f ; stc ; call rax
0x000000000016e3df : push qword ptr [rax + 4] ; sti ; inc dword ptr [rax + 5] ; sti ; call qword ptr [rax]
0x000000000016f89f : push qword ptr [rax + rbp*4 - 0x57bb0004] ; cld ; call rsp
0x000000000006e4b5 : push qword ptr [rax + rcx + 0x5b] ; ret
0x0000000000173f97 : push qword ptr [rax - 0x11] ; add dword ptr [rax], eax ; jo 0x173f99 ; clc ; call rax
0x000000000016eadb : push qword ptr [rax - 0x11] ; sti ; inc eax ; lock sti ; call qword ptr [rax]
0x0000000000173fbf : push qword ptr [rax - 0x1ffffe10] ; cli ; clc ; call rax
0x00000000001725ff : push qword ptr [rax - 0x1ffffe9c] ; out dx, eax ; cmc ; jmp rax
0x000000000017175f : push qword ptr [rax - 0x1fffff01] ; int1 ; call rax
0x000000000016e8c3 : push qword ptr [rax - 0x2a] ; sti ; inc dword ptr [rax - 0x28] ; sti ; jmp qword ptr [rax]
0x000000000016e85f : push qword ptr [rax - 0x2b] ; sti ; push qword ptr [rax] ; xlatb ; sti ; call qword ptr [rax]
0x000000000016e8df : push qword ptr [rax - 0x2c] ; sti ; jmp qword ptr [rax]
0x000000000016e963 : push qword ptr [rax - 0x36] ; sti ; inc eax ; retf ; sti ; call qword ptr [rax]
0x000000000015fe7b : push qword ptr [rax - 0x39] ; std ; inc dword ptr [rax] ; push rdi ; call qword ptr [rax]
0x0000000000160203 : push qword ptr [rax - 0x3f000c85] ; jnp 0x160206 ; call rax
0x0000000000160202 : push qword ptr [rax - 0x3f000c85] ; jnp 0x160207 ; call rax
0x000000000016002f : push qword ptr [rax - 0x3f000c9b] ; call rax
0x000000000015fefb : push qword ptr [rax - 0x3f000ca7] ; pop rsi ; jmp rax
0x000000000015feab : push qword ptr [rax - 0x3f000ca9] ; push rdi ; call rax
0x000000000015fc67 : push qword ptr [rax - 0x3f000d91] ; jno 0x15fc69 ; call rax
0x000000000015fc66 : push qword ptr [rax - 0x3f000d91] ; jno 0x15fc6a ; call rax
0x000000000017399f : push qword ptr [rax - 0x4ffffe37] ; clc ; jmp rax
0x000000000016f947 : push qword ptr [rax - 0x5e] ; cld ; jmp rax
0x000000000015fdeb : push qword ptr [rax - 0x61] ; cld ; jmp rax
0x000000000016fb33 : push qword ptr [rax - 0x64] ; cld ; jmp rax
0x000000000015fcab : push qword ptr [rax - 0x6a] ; inc eax ; cwde ; call qword ptr [rax]
0x0000000000172dc7 : push qword ptr [rax - 0x6ffffe72] ; sbb esi, edi ; call rax
0x00000000001703f7 : push qword ptr [rax - 0x6fffff7c] ; in al, dx ; jmp rax
0x00000000001702ff : push qword ptr [rax - 0x7fffff80] ; in al, dx ; call rax
0x000000000016eb2f : push qword ptr [rax - 0xa] ; sti ; inc eax ; idiv ebx ; call qword ptr [rax]
0x000000000017487f : push qword ptr [rax - 0xffffdd2] ; sbb bh, dl ; jmp rax
0x00000000001731ff : push qword ptr [rax - 0xffffe5d] ; test dh, bh ; jmp rax
0x000000000017269f : push qword ptr [rax - 0xffffe97] ; adc al, -0xa ; call rax
0x000000000016e41f : push qword ptr [rax] ; adc edi, ebx ; jmp qword ptr [rax]
0x000000000016ea8b : push qword ptr [rax] ; add bh, ah ; jmp qword ptr [rax]
0x000000000016e3cf : push qword ptr [rax] ; add ebx, edi ; inc dword ptr [rax] ; add bh, bl ; call rax
0x000000000016ea0b : push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x0000000000161a4b : push qword ptr [rax] ; cli ; cmc ; call qword ptr [rax]
0x0000000000161a43 : push qword ptr [rax] ; cli ; cmc ; jmp rax
0x0000000000161a57 : push qword ptr [rax] ; cli ; cmc ; push qword ptr [rax] ; cli ; cmc ; call qword ptr [rax]
0x000000000016e47f : push qword ptr [rax] ; cmp bl, bh ; call qword ptr [rax]
0x000000000015e473 : push qword ptr [rax] ; jrcxz 0x15e47e ; call qword ptr [rdi + 0x27ffffe3]
0x000000000015e4f3 : push qword ptr [rax] ; jrcxz 0x15e4fe ; call qword ptr [rdi + 0x27ffffe3]
0x000000000015e573 : push qword ptr [rax] ; jrcxz 0x15e57e ; call qword ptr [rdi + 0x27ffffe3]
0x000000000015e5af : push qword ptr [rax] ; jrcxz 0x15e5b6 ; call rdi
0x000000000016e573 : push qword ptr [rax] ; lahf ; std ; jmp qword ptr [rax]
0x0000000000094f1f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000170da7 : push qword ptr [rax] ; ret
0x0000000000170d77 : push qword ptr [rax] ; ret 0
0x000000000016eceb : push qword ptr [rax] ; sbb eax, 0x1e80fffc ; cld ; call rax
0x000000000016e457 : push qword ptr [rax] ; sti ; call rax
0x000000000016ebe7 : push qword ptr [rax] ; sub esp, edi ; call qword ptr [rax]
0x000000000016e863 : push qword ptr [rax] ; xlatb ; sti ; call qword ptr [rax]
0x000000000014b6a8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x00000000000702cb : push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000011c590 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00000000000768d6 : push qword ptr [rbp + rcx - 0x18] ; ret 0xfa8b
0x00000000000b3d1e : push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x000000000004332e : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000009bf8e : push qword ptr [rbp - 0x11] ; sub rax, 4 ; ret
0x00000000000ff938 : push qword ptr [rbp - 0x13] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000106c1b : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014c57c : push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x0000000000042cb6 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x00000000000f2ddf : push qword ptr [rbp - 0x1a] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000769b1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000090223 : push qword ptr [rbp - 0xe] ; sub rax, 1 ; ret
0x00000000000b75a5 : push qword ptr [rbx + 0x31] ; ret
0x00000000000d9d98 : push qword ptr [rbx + 0x34] ; ret
0x0000000000033dcc : push qword ptr [rbx + 1] ; ret
0x00000000000dacd9 : push qword ptr [rbx + 3] ; mov eax, edx ; ret
0x0000000000042496 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x000000000006e98c : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000069b32 : push qword ptr [rbx + rbp*4 - 0x77] ; ret 0xe283
0x0000000000076412 : push qword ptr [rbx + rcx + 0x5b] ; ret
0x000000000016f3a7 : push qword ptr [rcx + rax*4 - 0x7ebb0004] ; cld ; call rsp
0x000000000016e5b7 : push qword ptr [rcx] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call rcx
0x00000000000d6563 : push qword ptr [rcx] ; fild dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], -0x6b ; ret
0x00000000000d3ee5 : push qword ptr [rcx] ; fild dword ptr [rbx - 0x6af0fd08] ; ret
0x0000000000070751 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000008e79d : push qword ptr [rcx] ; ror byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xc031
0x0000000000071a14 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000004a882 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000000f507c : push qword ptr [rdi + 0x1b] ; ret
0x0000000000033a9c : push qword ptr [rdi + 0x21] ; ret
0x00000000000e01eb : push qword ptr [rdi + 0x22] ; ret
0x00000000000db7d7 : push qword ptr [rdi + 0x36] ; ret
0x00000000000e0363 : push qword ptr [rdi + 0xa] ; ret
0x00000000000e81b2 : push qword ptr [rdi + 0xb] ; pop rbx ; pop rbp ; ret
0x00000000000dae92 : push qword ptr [rdi + 0xb] ; ret
0x0000000000033e01 : push qword ptr [rdi + 0xc] ; ret
0x00000000000b884c : push qword ptr [rdi + 1] ; ret
0x0000000000033e4b : push qword ptr [rdi + 2] ; ret
0x00000000000dad9a : push qword ptr [rdi + 3] ; ret
0x00000000000dade9 : push qword ptr [rdi + 4] ; ret
0x00000000000b7320 : push qword ptr [rdi + 5] ; ret
0x00000000000b721f : push qword ptr [rdi + 6] ; ret
0x00000000000b4976 : push qword ptr [rdi + 7] ; ret
0x0000000000033d95 : push qword ptr [rdi + 8] ; ret
0x00000000000b7a1c : push qword ptr [rdi + 9] ; ret
0x000000000016edf3 : push qword ptr [rdx + 0x42fffc5a] ; pop rdx ; cld ; call rdx
0x000000000015fa13 : push qword ptr [rdx + rbx*4 - 0x10] ; call rsp
0x000000000015fa0f : push qword ptr [rdx + rbx*4 - 0x10] ; push qword ptr [rdx + rbx*4 - 0x10] ; call rsp
0x000000000016f7bf : push qword ptr [rdx - 0x5b] ; cld ; jmp rdx
0x000000000016f9ef : push qword ptr [rdx] ; popfq ; cld ; jmp qword ptr [rdx + 0x12fffc9c]
0x000000000016ed4f : push qword ptr [rsi + 0x46fffc5e] ; pop rsi ; cld ; call rsi
0x000000000016f773 : push qword ptr [rsi + 0x46fffca6] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call rsi
0x00000000000cbc5f : push qword ptr [rsi + rax*2 - 0x7d] ; ret 0x3902
0x00000000000c3977 : push qword ptr [rsi + rbp - 0xa] ; ret
0x000000000016e5f3 : push qword ptr [rsi - 0x5a] ; std ; call qword ptr [rsi]
0x00000000000ea769 : push qword ptr [rsp - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x0000000000110d16 : push r12 ; mov eax, 1 ; ret
0x0000000000112fcc : push r13 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000112fca : push r14 ; push r13 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000007618c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000c3c29 : push r8 ; or byte ptr [rax - 0x7d], 0xc0 ; add dword ptr [rcx], edi ; ret 0x5a7e
0x000000000007a2d5 : push rax ; adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000077291 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000001121d9 : push rax ; adc dh, dh ; ret 0x7401
0x000000000016ea88 : push rax ; add ah, bh ; push qword ptr [rax] ; add bh, ah ; jmp qword ptr [rax]
0x0000000000174e29 : push rax ; add al, byte ptr [rax] ; loopne 0x174ddc ; cli ; call qword ptr [rax]
0x0000000000174e19 : push rax ; add al, byte ptr [rax] ; nop ; test al, -6 ; jmp rax
0x000000000007618d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000171557 : push rax ; add byte ptr [rax], al ; push rax ; out -0x10, al ; call qword ptr [rax]
0x000000000008b983 : push rax ; add ch, al ; xchg byte ptr [rcx - 0x76b70001], dl ; ret 0xc031
0x000000000007367c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000eeefc : push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000018a495 : push rax ; add dword ptr [rax], eax ; cwde ; in eax, -0xb ; jmp qword ptr [rcx]
0x000000000018a4ad : push rax ; add dword ptr [rax], eax ; mov al, -0x1b ; cmc ; jmp qword ptr [rcx]
0x000000000018a44d : push rax ; add dword ptr [rax], eax ; push rax ; in eax, -0xb ; jmp qword ptr [rcx]
0x000000000002c3f1 : push rax ; add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x00000000001751c0 : push rax ; add eax, dword ptr [rcx] ; add byte ptr [rax], dh ; jno 0x1751c9 ; jmp qword ptr [rax]
0x000000000016ea08 : push rax ; add esp, edi ; push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x0000000000115ab7 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000011ae71 : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x0000000000174094 : push rax ; and cl, bh ; jmp rax
0x0000000000183b60 : push rax ; and ebx, esi ; call rdi
0x0000000000173a5d : push rax ; clc ; jmp qword ptr [rax]
0x000000000016f13f : push rax ; cld ; call qword ptr [rax + 0x10fffc56]
0x000000000016eff9 : push rax ; cld ; call qword ptr [rdx + 0x22fffc4f]
0x00000000000c257b : push rax ; cld ; cmp esi, dword ptr [rdi + 4] ; jl 0xc2578 ; ret
0x00000000000bae41 : push rax ; cld ; dec dword ptr [rax - 0x77] ; ret 0x1deb
0x000000000016eff5 : push rax ; cld ; jmp qword ptr [rdx]
0x000000000016f175 : push rax ; cld ; jmp rax
0x000000000016f17c : push rax ; cld ; push rax ; xor esp, edi ; call qword ptr [rax]
0x0000000000187990 : push rax ; cmc ; jmp qword ptr [rcx]
0x0000000000187c59 : push rax ; cmc ; jmp qword ptr [rdi]
0x0000000000044cc0 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000000e02c1 : push rax ; cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x0000000000171ff4 : push rax ; cmp esi, esp ; call qword ptr [rax]
0x000000000016f92c : push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp rax
0x00000000000ff636 : push rax ; dec dword ptr [rax - 0x7d] ; cli ; std ; jbe 0xff648 ; ret
0x000000000016e8b0 : push rax ; fdiv st(3), st(0) ; jmp qword ptr [rax]
0x0000000000173d17 : push rax ; fild dword ptr [rcx] ; add byte ptr [rax - 0x75], dl ; clc ; call qword ptr [rax]
0x0000000000170d14 : push rax ; fsubp st(7) ; jmp rax
0x00000000001726af : push rax ; imul eax, dword ptr [rcx], 0xf6153000 ; call qword ptr [rax]
0x000000000018a450 : push rax ; in eax, -0xb ; jmp qword ptr [rcx]
0x000000000016003f : push rax ; inc dword ptr gs:[rax] ; call qword ptr [rax]
0x000000000015fc77 : push rax ; ja 0x15fc75 ; inc dword ptr [rax] ; jp 0x15fc79 ; call qword ptr [rax]
0x000000000015fc76 : push rax ; ja 0x15fc76 ; inc dword ptr [rax] ; jp 0x15fc7a ; call qword ptr [rax]
0x000000000016014f : push rax ; ja 0x16014a ; jmp qword ptr [rax]
0x000000000016014e : push rax ; ja 0x16014b ; jmp qword ptr [rax]
0x000000000016f66c : push rax ; ja 0x16f66e ; call rax
0x0000000000170564 : push rax ; jb 0x170556 ; call rax
0x000000000016010b : push rax ; je 0x160106 ; call qword ptr [rax]
0x000000000016010a : push rax ; je 0x160107 ; call qword ptr [rax]
0x00000000001612e7 : push rax ; jge 0x1612e4 ; call qword ptr [rax]
0x00000000001612e3 : push rax ; jge 0x1612e4 ; push rax ; jge 0x1612e8 ; call qword ptr [rax]
0x0000000000171635 : push rax ; jmp rax
0x0000000000160213 : push rax ; jnp 0x160212 ; inc dword ptr [rax] ; jl 0x160216 ; call qword ptr [rax]
0x0000000000160212 : push rax ; jnp 0x160213 ; inc dword ptr [rax] ; jl 0x160217 ; call qword ptr [rax]
0x000000000016f64c : push rax ; jnp 0x16f64e ; call rax
0x00000000001601a7 : push rax ; jns 0x1601a2 ; call qword ptr [rax]
0x00000000001601a6 : push rax ; jns 0x1601a3 ; call qword ptr [rax]
0x000000000016f65c : push rax ; jns 0x16f65e ; call rax
0x00000000001601c7 : push rax ; jp 0x1601c2 ; call qword ptr [rax]
0x00000000001601c6 : push rax ; jp 0x1601c3 ; call qword ptr [rax]
0x000000000016f654 : push rax ; jp 0x16f656 ; call rax
0x000000000016eac0 : push rax ; jrcxz 0x16eac5 ; call qword ptr [rax - 0x1f000419]
0x000000000016f664 : push rax ; js 0x16f666 ; call rax
0x000000000017115c : push rax ; lock ; jmp rax
0x000000000018a170 : push rax ; loop 0x18a16b ; call qword ptr [rax]
0x0000000000173d1c : push rax ; mov edi, eax ; call qword ptr [rax]
0x0000000000111506 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000249ec : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000023ca2 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000023bb5 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x00000000000f3276 : push rax ; mov rsi, rdx ; call rax
0x0000000000182690 : push rax ; nop ; cld ; jmp qword ptr [rbx]
0x0000000000084e9a : push rax ; or al, 0 ; ret
0x0000000000078b92 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000011d361 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000c3c2a : push rax ; or byte ptr [rax - 0x7d], 0xc0 ; add dword ptr [rcx], edi ; ret 0x5a7e
0x00000000000550d9 : push rax ; or byte ptr [rcx - 0x77], cl ; push rsi ; or cl, ch ; ret 0xfffa
0x00000000000481f4 : push rax ; or byte ptr [rcx - 0x77], cl ; push rsp ; and al, 8 ; jmp 0x481c7
0x0000000000079f1a : push rax ; or dh, dh ; ret 0x7404
0x0000000000079f36 : push rax ; or dh, dh ; ret 0xf04
0x000000000011e48c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000174330 : push rax ; or dword ptr [rdx], eax ; add byte ptr [rax], dh ; mov cl, bh ; call rax
0x000000000016e9dc : push rax ; or edi, esp ; jmp rax
0x000000000017155c : push rax ; out -0x10, al ; call qword ptr [rax]
0x000000000002347a : push rax ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000016e2ce : push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000015fee3 : push rax ; pop rax ; call qword ptr [rax]
0x00000000001827b0 : push rax ; pop rax ; call qword ptr [rcx]
0x000000000016ed30 : push rax ; pop rbx ; cld ; jmp rax
0x000000000016ef08 : push rax ; pop rdi ; cld ; jmp rax
0x0000000000176d60 : push rax ; pop rsi ; jmp 0x176d66
0x0000000000176df0 : push rax ; pop rsi ; jmp 0x176df6
0x000000000016ef6b : push rax ; push rcx ; cld ; push qword ptr [rax + 0x51] ; cld ; jmp rax
0x000000000015febb : push rax ; push rdi ; inc dword ptr [rax] ; pop rax ; call qword ptr [rax]
0x0000000000005cc8 : push rax ; ret
0x0000000000170d80 : push rax ; ret 0
0x000000000001cd28 : push rax ; ret 0x39
0x0000000000171b84 : push rax ; ret 0xfff2
0x000000000017385f : push rax ; ret 1
0x000000000015fe44 : push rax ; retf ; std ; call qword ptr [rax - 0x2f000233]
0x000000000017194c : push rax ; sal cl, cl ; call rax
0x000000000016e883 : push rax ; salc ; sti ; call rax
0x0000000000077286 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000006e56a : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000171b6f : push rax ; sbb byte ptr [rcx], al ; add byte ptr [rax], dh ; ret 0xfff2
0x00000000000f0c91 : push rax ; sbb dh, dh ; ret 0x7504
0x0000000000171b90 : push rax ; sbb dword ptr [rcx], eax ; add al, ah ; ret 0xfff2
0x00000000001706d4 : push rax ; scasb al, byte ptr [rdi] ; in al, dx ; call rax
0x0000000000171edc : push rax ; scasb al, byte ptr [rdi] ; jmp rax
0x00000000000f4345 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000d9ea1 : push rax ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000161a6c : push rax ; stc ; cmc ; call qword ptr [rax]
0x000000000016f714 : push rax ; stosb byte ptr [rdi], al ; cld ; jmp rax
0x00000000000c4a3c : push rax ; stosb byte ptr [rdi], al ; cmc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000170a3f : push rax ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x11], bh ; jmp qword ptr [rax]
0x000000000016ec07 : push rax ; sub ah, bh ; call rax
0x00000000001748e4 : push rax ; sub edi, edx ; jmp qword ptr [rax]
0x000000000016ec6b : push rax ; sub esp, edi ; jmp rax
0x000000000008d197 : push rax ; test al, al ; je 0x8d1ef ; xor eax, eax ; ret
0x000000000016f913 : push rax ; test eax, 0xa980fffc ; cld ; call qword ptr [rax]
0x0000000000173214 : push rax ; test esi, edi ; call qword ptr [rax]
0x000000000016fb3c : push rax ; wait ; cld ; jmp rax
0x0000000000174374 : push rax ; xchg eax, ecx ; stc ; call qword ptr [rax]
0x0000000000174384 : push rax ; xchg eax, edx ; stc ; jmp rax
0x000000000016e8e7 : push rax ; xlatb ; sti ; call rax
0x000000000016f1c0 : push rax ; xor bh, ah ; call qword ptr [rax + 0x10fffc33]
0x00000000000769ad : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000001748df : push rax ; xor byte ptr [rdx], al ; add byte ptr [rax + 0x2b], dl ; cli ; jmp qword ptr [rax]
0x000000000016170b : push rax ; xor ebp, 0xffffffff ; test sil, bpl ; call rax
0x0000000000184060 : push rax ; xor esi, ebx ; jmp qword ptr [rcx]
0x000000000016f17f : push rax ; xor esp, edi ; call qword ptr [rax]
0x000000000004f7fd : push rbp ; add al, -0x7d ; ret
0x00000000000d9f62 : push rbp ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017a965 : push rbp ; add byte ptr [rax], al ; pop rax ; shr dh, 1 ; jmp qword ptr [rcx]
0x000000000010e1fd : push rbp ; add byte ptr [rbx + 0x634801ea], al ; ret 0xd285
0x00000000000bf1af : push rbp ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000102dd6 : push rbp ; add dh, dh ; ret
0x00000000000d435e : push rbp ; and byte ptr [rcx - 0x7d], cl ; ret
0x0000000000184739 : push rbp ; call qword ptr [rax]
0x000000000016f111 : push rbp ; cld ; call qword ptr [rax + 0x10fffc54]
0x000000000016f10d : push rbp ; cld ; call qword ptr [rax]
0x0000000000174b1d : push rbp ; cli ; call qword ptr [rax]
0x0000000000174b0d : push rbp ; cli ; jmp rax
0x00000000000d2014 : push rbp ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000000d9f05 : push rbp ; hlt ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000001cb1 : push rbp ; je 0x1cdf ; ret
0x0000000000112fcd : push rbp ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000004c4bc : push rbp ; mov byte ptr [rcx - 0x77], cl ; ret
0x00000000000631ff : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rax - 0x76fffffe], ebp ; ret 0x348
0x0000000000063032 : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rbp - 0x76ffffee], edi ; ret 0x348
0x0000000000062ea0 : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rcx - 0x76ffffe9], ebp ; ret 0x348
0x0000000000062ae0 : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rsi - 0x76ffffeb], ebx ; ret 0x348
0x00000000000f3f84 : push rbp ; nop ; mov rdx, r13 ; call rax
0x0000000000122f18 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000f3921 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x000000000005678d : push rbp ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000000000cc8cf : push rbp ; or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000f5293 : push rbp ; ret
0x00000000000a9584 : push rbp ; ret 0x6348
0x000000000016e580 : push rbp ; sahf ; std ; inc dword ptr [rcx] ; lahf ; std ; call rcx
0x0000000000078c21 : push rbp ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000000f38aa : push rbp ; sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x00000000000025be : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x255b ; loop 0x25a6 ; ret 0x23cb
0x00000000000f5170 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000084dca : push rbp ; xor rax, rax ; ret
0x000000000007f8e1 : push rbx ; adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000004b5 : push rbx ; add al, 4 ; ret 0x6080
0x00000000000bc5ff : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000189a0a : push rbx ; add dword ptr [rdi], 2 ; ret 0x42c3
0x00000000000bc5f2 : push rbx ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000007fc11 : push rbx ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000182661 : push rbx ; call qword ptr [rsi]
0x000000000016f121 : push rbx ; cld ; call qword ptr [rax + 0x10fffc52]
0x000000000016f11d : push rbx ; cld ; call qword ptr [rax]
0x0000000000174af5 : push rbx ; cli ; jmp rax
0x0000000000002043 : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000b8ecd : push rbx ; je 0xb8ea0 ; mov eax, 1 ; ret
0x00000000000b8ecc : push rbx ; je 0xb8ea1 ; mov eax, 1 ; ret
0x000000000009bb0c : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000096772 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000007631e : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000006f769 : push rbx ; or cl, ch ; cmp esi, 0x28bffff ; ret
0x000000000002c588 : push rbx ; ret
0x00000000000fca99 : push rbx ; ret 0
0x00000000000a2121 : push rbx ; ret 0xc
0x000000000007f8e5 : push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000072676 : push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f1be1 : push rbx ; sbb dh, dh ; ret 0x8b08
0x000000000015ce7c : push rbx ; xchg eax, edx ; jae 0x15ce5b ; push rsi ; pop rdx ; je 0x15ce50 ; ret 0xacfc
0x000000000010e4d5 : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x000000000018a585 : push rcx ; add dword ptr [rax], eax ; call 0x22189b79
0x000000000018a584 : push rcx ; add dword ptr [rax], eax ; call 0x22189b7a
0x000000000018a53d : push rcx ; add dword ptr [rax], eax ; jo 0x18a52e ; cmc ; jmp qword ptr [rcx]
0x000000000018a5e5 : push rcx ; add dword ptr [rax], eax ; js 0x18a5d7 ; cmc ; jmp qword ptr [rcx]
0x000000000018a5fd : push rcx ; add dword ptr [rax], eax ; nop ; out -0xb, eax ; jmp qword ptr [rcx]
0x000000000018a5b5 : push rcx ; add dword ptr [rax], eax ; out -0xb, eax ; jmp qword ptr [rcx]
0x000000000018a56d : push rcx ; add dword ptr [rax], eax ; shl dh, 1 ; cmc ; jmp qword ptr [rcx]
0x000000000008fa22 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000011539e : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000015c105 : push rcx ; call qword ptr [rsi]
0x000000000016f12d : push rcx ; cld ; call qword ptr [rax]
0x000000000016ef71 : push rcx ; cld ; jmp rax
0x000000000016f171 : push rcx ; cld ; push qword ptr [rax + 0x50] ; cld ; jmp rax
0x000000000016ef6d : push rcx ; cld ; push qword ptr [rax + 0x51] ; cld ; jmp rax
0x0000000000001b28 : push rcx ; jns 0x1b35 ; ret
0x00000000000f216b : push rcx ; loopne 0xf2172 ; dec dword ptr [rcx] ; ret
0x000000000006e6de : push rcx ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000016e5a4 : push rcx ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; jmp rcx
0x0000000000060ae3 : push rcx ; ret
0x0000000000099632 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000097bc2 : push rdi ; adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x0000000000099790 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000099468 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009947a : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000008f6c4 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000097a0a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x0000000000134859 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000008f634 : push rdi ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000008f5c4 : push rdi ; add al, 0x48 ; mov eax, edi ; ret
0x000000000002c75c : push rdi ; add al, 0x72 ; or bl, dh ; ret
0x000000000009943a : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x000000000018ab45 : push rdi ; add dword ptr [rax], eax ; lock ; cmc ; jmp qword ptr [rcx]
0x0000000000096c8c : push rdi ; add eax, 0xc478d48 ; ret
0x0000000000097acc : push rdi ; add eax, 0xd478d48 ; ret
0x0000000000099498 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000e98ca : push rdi ; and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x000000000015fe81 : push rdi ; call qword ptr [rax]
0x000000000015feb1 : push rdi ; call rax
0x000000000012bca8 : push rdi ; clc ; ret
0x000000000016f681 : push rdi ; cld ; jmp rax
0x000000000012be20 : push rdi ; cld ; ret
0x000000000012c947 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000134139 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000111585 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00000000000c9758 : push rdi ; cmp byte ptr [rdi], cl ; test byte ptr [rax - 0x9fffffc], bl ; ret 0xf08
0x00000000001340b9 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001625f1 : push rdi ; idiv edi ; rcr dword ptr [rdx - 9], cl ; call rbx
0x000000000015febd : push rdi ; inc dword ptr [rax] ; pop rax ; call qword ptr [rax]
0x000000000015fead : push rdi ; inc eax ; push rdi ; call rax
0x0000000000133f0a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015fe85 : push rdi ; jmp qword ptr [rax]
0x000000000015feb5 : push rdi ; jmp rax
0x0000000000184829 : push rdi ; jmp rdx
0x000000000007c335 : push rdi ; mov ebx, 0xc031ffff ; pop rbx ; ret
0x0000000000133f9a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000102d90 : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000007e7d0 : push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x6174
0x00000000000994dc : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009951a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000994ba : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a7ab5 : push rdi ; or byte ptr [rbp - 0x3c], dh ; ret
0x000000000004431a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000042c1a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000118ca2 : push rdi ; or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000042c21 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000073680 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000096e70 : push rdi ; or eax, 0x1c478d48 ; ret
0x0000000000097cc0 : push rdi ; or eax, 0x1d478d48 ; ret
0x000000000000d349 : push rdi ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000148b9e : push rdi ; ret
0x0000000000148c3e : push rdi ; ret 0xff3
0x0000000000037ad9 : push rdi ; ret 0xffef
0x000000000007e7cc : push rdi ; sbb byte ptr [rax + 0x33], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x6174
0x0000000000115fb3 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x00000000000323f2 : push rdi ; sbb byte ptr [rdi + rcx - 0x51], al ; ret 0xd231
0x000000000017421d : push rdi ; stc ; jmp qword ptr [rax]
0x000000000012cb47 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c36a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000012c747 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001115cd : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00000000000d53f7 : push rdi ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000000e5d8c : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103658 : push rdi ; test edx, edx ; jne 0x103696 ; ret
0x0000000000099770 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000008392b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000018a6ed : push rdx ; add dword ptr [rax], eax ; add cl, ch ; cmc ; jmp qword ptr [rcx]
0x000000000018a645 : push rdx ; add dword ptr [rax], eax ; or al, ch ; cmc ; jmp qword ptr [rcx]
0x000000000018a705 : push rdx ; add dword ptr [rax], eax ; sbb cl, ch ; cmc ; jmp qword ptr [rcx]
0x000000000010388e : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000016f129 : push rdx ; cld ; call qword ptr [rax + 0x10fffc51]
0x000000000016f125 : push rdx ; cld ; call qword ptr [rax]
0x00000000001769f1 : push rdx ; jmp 0x1769f5
0x0000000000183171 : push rdx ; jmp rsp
0x000000000007fc36 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000016eddc : push rdx ; pop rbp ; cld ; jmp rdx
0x000000000006971f : push rdx ; ret
0x00000000001170b2 : push rdx ; sbb byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x0000000000001b0d : push rdx ; test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x000000000016f2c8 : push rdx ; test edi, esp ; jmp rdx
0x0000000000147884 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000007b486 : push rsi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000134af1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000018aa85 : push rsi ; add dword ptr [rax], eax ; mov bh, ch ; cmc ; jmp qword ptr [rcx]
0x000000000018ab15 : push rsi ; add dword ptr [rax], eax ; sbb al, dh ; cmc ; jmp qword ptr [rcx]
0x000000000018aacd : push rsi ; add dword ptr [rax], eax ; shr bh, 1 ; cmc ; jmp qword ptr [rcx]
0x000000000018ab2d : push rsi ; add dword ptr [rax], eax ; xor al, dh ; cmc ; jmp qword ptr [rcx]
0x0000000000134b61 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000095645 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000134a81 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000955e3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000147899 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000171a85 : push rsi ; call rax
0x000000000012bdd2 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016f109 : push rsi ; cld ; call qword ptr [rax + 0x10fffc55]
0x000000000016f145 : push rsi ; cld ; call qword ptr [rax]
0x000000000016f105 : push rsi ; cld ; jmp qword ptr [rax]
0x000000000012c541 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012c175 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012c355 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012c535 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012bf95 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015da20 : push rsi ; cli ; push 0x6e ; ja 0x15d9af ; ret 0x48f
0x000000000014b1e6 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000014b1d6 : push rsi ; hlt ; sub eax, edx ; ret
0x00000000001626b1 : push rsi ; idiv edi ; adc ebx, dword ptr [rdx - 9] ; call qword ptr [rbx]
0x0000000000162659 : push rsi ; idiv edi ; rcr dword ptr [rdx - 9], cl ; call rbx
0x000000000014b1a6 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000000f3252 : push rsi ; je 0xf3268 ; mov eax, 7 ; ret
0x00000000000da22b : push rsi ; js 0xda27f ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000daaa8 : push rsi ; js 0xdaafc ; mov dword ptr [rdi + 0x100], edx ; ret
0x000000000014b196 : push rsi ; lock sub eax, edx ; ret
0x000000000016e5ec : push rsi ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp rsi
0x00000000000a7ab2 : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x3c], dh ; ret
0x00000000000550dd : push rsi ; or cl, ch ; ret 0xfffa
0x0000000000160e1c : push rsi ; out -0xc, al ; inc dword ptr [rax - 0xe] ; hlt ; jmp rcx
0x00000000001709cd : push rsi ; out dx, al ; call qword ptr [rax]
0x000000000016ed78 : push rsi ; pop rdx ; cld ; jmp rsi
0x000000000015ce80 : push rsi ; pop rdx ; je 0x15ce4c ; ret 0xacfc
0x0000000000112fcb : push rsi ; push r13 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000003326f : push rsi ; ret
0x000000000009080a : push rsi ; ret 0x7518
0x000000000002b9bd : push rsi ; sbb byte ptr [rax + 0x39], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000010caf3 : push rsi ; sbb byte ptr [rbp - 0x77], cl ; ret
0x00000000000c2b3d : push rsi ; sbb byte ptr [rcx - 0x3fcec7ba], cl ; ret
0x000000000014b1b6 : push rsi ; sub eax, edx ; ret
0x0000000000067366 : push rsi ; xchg byte ptr [rbx], dh ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000df2a7 : push rsi ; xor ax, ax ; ret
0x00000000001478ae : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000019568c : push rsp ; add al, byte ptr [rdx] ; add byte ptr [rax + 0x77], dh ; clc ; call rdi
0x000000000018a91d : push rsp ; add dword ptr [rax], eax ; in eax, dx ; cmc ; jmp qword ptr [rbx]
0x000000000018a855 : push rsp ; add dword ptr [rax], eax ; mov bl, ch ; cmc ; jmp qword ptr [rcx]
0x0000000000172469 : push rsp ; add dword ptr [rax], eax ; shl byte ptr [rdi], 1 ; cmc ; jmp rax
0x0000000000188a8c : push rsp ; add dword ptr ss:[rax], eax ; jo 0x188a25 ; cmc ; jmp qword ptr [rcx]
0x00000000000f03c1 : push rsp ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x00000000000f02ba : push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000f3800 : push rsp ; and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000000f391d : push rsp ; and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000007ac5c : push rsp ; and al, 0x28 ; xor edi, edi ; call qword ptr [rax]
0x000000000007a9de : push rsp ; and al, 0x38 ; call rax
0x00000000000e1894 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000023478 : push rsp ; and al, 0x50 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f3bca : push rsp ; and al, 0x60 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000000444f0 : push rsp ; and al, 0xfffffffffffffff8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000000444aa : push rsp ; and al, 0xfffffffffffffffc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000481f8 : push rsp ; and al, 8 ; jmp 0x481c3
0x000000000018798c : push rsp ; and eax, 0x4a500001 ; cmc ; jmp qword ptr [rcx]
0x00000000001826f1 : push rsp ; call qword ptr [rax]
0x000000000016f119 : push rsp ; cld ; call qword ptr [rax + 0x10fffc53]
0x000000000016f115 : push rsp ; cld ; call qword ptr [rax]
0x000000000017ff61 : push rsp ; cli ; call qword ptr [rax]
0x0000000000178d8c : push rsp ; cmp dword ptr [rax], eax ; add al, ah ; jmp 0x178d9a
0x00000000000e3f08 : push rsp ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b8ca6 : push rsp ; jne 0xb8c33 ; mov eax, 0x7d00 ; ret
0x000000000008fd5b : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000110d17 : push rsp ; mov eax, 1 ; ret
0x000000000017b634 : push rsp ; or al, 0 ; add al, ch ; or ebp, edi ; call qword ptr [rax]
0x000000000017cbd9 : push rsp ; out dx, eax ; jmp qword ptr [rbx]
0x000000000017af8c : push rsp ; pop rbx ; add byte ptr [rax], al ; add ah, dh ; out dx, al ; call qword ptr [rax]
0x000000000016eea4 : push rsp ; pop rsp ; cld ; jmp rsp
0x0000000000033269 : push rsp ; ret
0x00000000000f5377 : push rsp ; ret 0x2a
0x00000000000eaf74 : push rsp ; ret 0x8940
0x00000000000ab6b8 : push rsp ; ret 0xfffb
0x000000000018268c : push rsp ; rol byte ptr [rax], cl ; add byte ptr [rax - 0x70], dl ; cld ; jmp qword ptr [rbx]
0x000000000018158c : push rsp ; rol dword ptr [rax], 0 ; jo 0x181542 ; int1 ; call qword ptr [rsi]
0x000000000018718c : push rsp ; sbb eax, 0x31100001 ; cmc ; call qword ptr [rax]
0x000000000003f8d9 : push rsp ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x000000000016f888 : push rsp ; stosd dword ptr [rdi], eax ; cld ; jmp rsp
0x000000000016f390 : push rsp ; test bh, ah ; jmp rsp
0x00000000001865d4 : pushfq ; adc dword ptr [rcx], eax ; add byte ptr [rax], bl ; stosd dword ptr [rdi], eax ; hlt ; call qword ptr [rbx]
0x00000000001203b0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000170809 : pushfq ; add byte ptr [rax], al ; add byte ptr [rsi], ch ; in eax, dx ; jmp rax
0x00000000000b4c74 : pushfq ; add byte ptr cs:[rax - 0x77], cl ; ret 0x8d48
0x000000000017d5d4 : pushfq ; add dword ptr [rax], 0xef6f2800 ; call qword ptr [rax]
0x00000000000ae4b5 : pushfq ; and al, 0xffffffffffffff81 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000cd86d : pushfq ; and al, 0xffffffffffffff98 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000016f9f5 : pushfq ; cld ; call qword ptr [rdx]
0x000000000016fb75 : pushfq ; cld ; call rax
0x000000000016fb35 : pushfq ; cld ; jmp rax
0x000000000016efbc : pushfq ; cld ; ljmp ptr [rdi + rcx*2] ; cld ; call rdx
0x0000000000178dd4 : pushfq ; cmp dword ptr [rax], eax ; add al, bl ; jmp 0x178de2
0x0000000000182dd4 : pushfq ; fld dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; jmp qword ptr [rcx]
0x0000000000191bd4 : pushfq ; mov dword ptr [rcx], 0xf7b8d800 ; call qword ptr [rsi]
0x0000000000066d81 : pushfq ; mov eax, 0x1f0fffff ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000000000073b0c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000001210b0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f064 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x00000000000489d1 : pushfq ; ret
0x00000000001816d4 : pushfq ; ret 0
0x00000000000a9a2c : pushfq ; ret 0x3949
0x00000000000a99e7 : pushfq ; ret 0xb60f
0x00000000000738a0 : pushfq ; sub al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001131f4 : pushfq ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001888d4 : pushfq ; xor al, 1 ; add byte ptr [rax - 0x78], bl ; cmc ; jmp qword ptr [rcx]
0x000000000015feb4 : rcl byte ptr [rdi - 0xd] ; jmp rax
0x000000000015feb0 : rcl byte ptr [rdi - 0xd], -1 ; rcl byte ptr [rdi - 0xd] ; jmp rax
0x00000000001706b8 : rcl byte ptr [rdx - 0x73c00000], -0x14 ; call qword ptr [rax]
0x00000000001938c0 : rcl byte ptr [rdx], -8 ; call qword ptr [rdx]
0x0000000000172d14 : rcl byte ptr [rdx], -9 ; call rax
0x000000000015fbc4 : rcl byte ptr [rsi], -0xe ; inc dword ptr [rax] ; sbb dl, dh ; jmp rax
0x0000000000171c54 : rcl ch, -0xe ; jmp qword ptr [rax]
0x0000000000175424 : rcl cl ; std ; jmp qword ptr [rax]
0x0000000000189f10 : rcl cl, -0xb ; jmp qword ptr [rcx]
0x00000000000d9ea0 : rcl dword ptr [rax - 0x3f], -0x17 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000007a8e0 : rcl dword ptr [rip + 0x322902], -0x7d ; ret 0x8b01
0x000000000015ce7f : rcl dword ptr [rsi + 0x5a], cl ; je 0x15ce4d ; ret 0xacfc
0x00000000000da34b : rcl esi, -3 ; dec ecx ; ret
0x000000000015ce7b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x15ce51 ; ret 0xacfc
0x000000000017463c : rcr al ; stc ; jmp rax
0x000000000015fe5c : rcr al ; std ; call qword ptr [rax]
0x00000000001903f0 : rcr bl ; clc ; call qword ptr [rax]
0x000000000003360f : rcr bl, 0x3f ; fsubp st(1) ; ret
0x000000000015fee0 : rcr byte ptr [rax - 0xd] ; push rax ; pop rax ; call qword ptr [rax]
0x000000000016eca0 : rcr byte ptr [rax] ; cld ; jmp qword ptr [rax]
0x0000000000112542 : rcr byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000004ee7c : rcr byte ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000006ad3a : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000004cfe1 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000042c27 : rcr byte ptr [rbp + 0x5b] ; ret
0x00000000000b86af : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000f51e2 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000109427 : rcr byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ef5ed : rcr byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000008b203 : rcr byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006a8d2 : rcr byte ptr [rbx + 0x5d] ; ret
0x0000000000070ae1 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000022670 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000002958b : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000006bf5b : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000006c511 : rcr byte ptr [rbx - 0x3d] ; nop dword ptr [rax] ; mov eax, edi ; ret
0x00000000000c1eed : rcr byte ptr [rbx - 0x3d], -0x48 ; or al, 0 ; add byte ptr [rax], al ; ret
0x00000000000b4f59 : rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000016ed2c : rcr byte ptr [rbx - 4], -1 ; push rax ; pop rbx ; cld ; jmp rax
0x000000000016e4c4 : rcr byte ptr [rbx - 5] ; jmp qword ptr [rax]
0x00000000000ffe03 : rcr byte ptr [rcx + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000172548 : rcr byte ptr [rcx + rax] ; mov al, 0x60 ; cmc ; jmp qword ptr [rax]
0x000000000003a213 : rcr byte ptr [rcx], 0x3d ; xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc801
0x000000000015d29d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000182a40 : rcr byte ptr [rdi - 0xe] ; jmp qword ptr [rcx]
0x000000000016ef04 : rcr byte ptr [rdi - 4], -1 ; push rax ; pop rdi ; cld ; jmp rax
0x000000000016ecf4 : rcr byte ptr [rdi] ; cld ; jmp qword ptr [rax]
0x000000000003378a : rcr byte ptr [rdx + 0x59], 0xf ; xchg eax, esp ; ret 0x2cdb
0x00000000001745e8 : rcr byte ptr [rip - 0x368ffffe], -7 ; call qword ptr [rax]
0x0000000000161c5c : rcr byte ptr [rsi - 0x6117000a], -0xa ; jmp qword ptr [rax]
0x00000000001717ec : rcr byte ptr [rsi - 0xf] ; call rax
0x0000000000170cd4 : rcr cl ; out dx, eax ; jmp rax
0x0000000000042c59 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x000000000016e588 : rcr dword ptr [rdi - 0x5f2e0003] ; std ; call rcx
0x00000000001625f4 : rcr dword ptr [rdx - 9], cl ; call rbx
0x0000000000162654 : rcr dword ptr [rdx - 9], cl ; jmp rsp
0x000000000006b063 : rcr dword ptr [rip - 0x38b7ffcd] ; ret 0xffff
0x00000000000bb7ab : rcr edx, -1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000171ced : rep ; call rax
0x00000000001843c9 : rep ; jmp qword ptr [rcx]
0x00000000001845c1 : rep ; jmp qword ptr [rdi]
0x0000000000184641 : rep ; jmp rcx
0x000000000012c58e : rep ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014b1c2 : rep ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000127026 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011cc14 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000003445a : rep stosq qword ptr [rdi], rax ; ret
0x0000000000160e0c : repne ; hlt ; call qword ptr [rsi]
0x0000000000160e08 : repne ; hlt ; inc dword ptr [rax - 0xe] ; hlt ; call qword ptr [rsi]
0x0000000000160e20 : repne ; hlt ; jmp rcx
0x0000000000182349 : repne ; jmp qword ptr [rcx]
0x000000000012c78e : repne ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014b1b2 : repne ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000000937 : ret
0x000000000000e9e8 : ret 0
0x000000000000f1f1 : ret 0x10
0x000000000002bd80 : ret 0x100
0x00000000000007bf : ret 0x102
0x0000000000050f7a : ret 0x10d9
0x000000000000e0c9 : ret 0x11
0x000000000007a1ea : ret 0x110
0x0000000000042bfc : ret 0x114d
0x00000000000b4244 : ret 0x1174
0x0000000000101ec9 : ret 0x11e8
0x0000000000155968 : ret 0x12
0x0000000000045c9a : ret 0x1234
0x000000000008d138 : ret 0x12e8
0x0000000000090e5a : ret 0x13
0x000000000002280c : ret 0x1374
0x000000000002944a : ret 0x1376
0x00000000000334a6 : ret 0x1377
0x0000000000029d9f : ret 0x13ad
0x000000000002a268 : ret 0x13bf
0x00000000000445cb : ret 0x13eb
0x000000000004ad82 : ret 0x144
0x00000000000331a8 : ret 0x1477
0x000000000008fd99 : ret 0x147c
0x000000000005787b : ret 0x148
0x00000000000c30a7 : ret 0x148b
0x00000000000769c2 : ret 0x149
0x0000000000079109 : ret 0x14c
0x000000000000a148 : ret 0x15
0x00000000000332a0 : ret 0x1575
0x00000000000a2d81 : ret 0x16
0x000000000001a5d8 : ret 0x1656
0x00000000000e94f7 : ret 0x1674
0x00000000000f7087 : ret 0x1676
0x0000000000081fca : ret 0x17
0x00000000000c4fa2 : ret 0x1774
0x00000000000e0886 : ret 0x1777
0x00000000000db433 : ret 0x17e8
0x000000000005ade3 : ret 0x1875
0x0000000000084e35 : ret 0x1876
0x000000000005d8ca : ret 0x189
0x00000000000425ee : ret 0x18b9
0x00000000000106e8 : ret 0x19
0x00000000000a8c7a : ret 0x190
0x00000000000a58eb : ret 0x1945
0x000000000002b5d5 : ret 0x1974
0x00000000000e0974 : ret 0x1977
0x0000000000022876 : ret 0x1a74
0x000000000015d7fa : ret 0x1ad4
0x000000000015bf8d : ret 0x1b49
0x00000000000e98d2 : ret 0x1b72
0x0000000000001bf1 : ret 0x1bb7
0x00000000000aa1fa : ret 0x1be
0x00000000000f025f : ret 0x1bf
0x000000000000346b : ret 0x1bf9
0x0000000000029441 : ret 0x1c72
0x00000000000ca73d : ret 0x1c74
0x00000000001573a0 : ret 0x1d4
0x0000000000157b38 : ret 0x1d5
0x00000000000849d6 : ret 0x1d74
0x00000000000021c9 : ret 0x1dd4
0x00000000000bae46 : ret 0x1deb
0x00000000000ac21b : ret 0x1e74
0x00000000000a5e6d : ret 0x1e75
0x0000000000099e07 : ret 0x1e76
0x0000000000041b0b : ret 0x1f0f
0x0000000000102d2e : ret 0x1f72
0x000000000007cb2e : ret 0x1f76
0x00000000001147ce : ret 0x1fe9
0x000000000002bd8f : ret 0x200
0x00000000001057ad : ret 0x203c
0x0000000000100e59 : ret 0x2041
0x000000000007fd7d : ret 0x2074
0x000000000011c7d1 : ret 0x20e9
0x0000000000032e4e : ret 0x2148
0x00000000000569c4 : ret 0x2274
0x000000000007fd0b : ret 0x2275
0x000000000007fe38 : ret 0x2288
0x0000000000148da2 : ret 0x2373
0x000000000008f9fa : ret 0x2374
0x00000000000532b0 : ret 0x237f
0x00000000000025c7 : ret 0x23cb
0x00000000001563a8 : ret 0x24
0x00000000000027b8 : ret 0x244f
0x000000000004923e : ret 0x24eb
0x00000000000759e5 : ret 0x2501
0x000000000014c2b6 : ret 0x2528
0x0000000000104eb8 : ret 0x2576
0x0000000000004b08 : ret 0x26
0x00000000000a2e90 : ret 0x26eb
0x0000000000081e06 : ret 0x2774
0x00000000000b7623 : ret 0x27e8
0x0000000000116c53 : ret 0x28
0x000000000000054f : ret 0x2800
0x000000000011ac5a : ret 0x280d
0x0000000000090ff5 : ret 0x280f
0x0000000000084e25 : ret 0x2876
0x000000000011ae82 : ret 0x2880
0x000000000011955a : ret 0x2890
0x0000000000117f52 : ret 0x28af
0x00000000000ac98b : ret 0x28f5
0x0000000000106ad8 : ret 0x29
0x00000000001092c6 : ret 0x2940
0x00000000000a112f : ret 0x2941
0x000000000003bc72 : ret 0x2944
0x0000000000038a5b : ret 0x2948
0x000000000003dff0 : ret 0x2949
0x0000000000127071 : ret 0x294c
0x00000000000447fe : ret 0x294d
0x0000000000043314 : ret 0x2973
0x000000000009a544 : ret 0x2975
0x00000000000f52ce : ret 0x2a
0x0000000000100432 : ret 0x2a18
0x000000000010072d : ret 0x2a25
0x0000000000001b15 : ret 0x2a63
0x00000000000e0b39 : ret 0x2b
0x00000000000ea422 : ret 0x2b2e
0x00000000000e8872 : ret 0x2b45
0x00000000000f07ae : ret 0x2b48
0x0000000000022df8 : ret 0x2b49
0x0000000000110882 : ret 0x2b74
0x0000000000024012 : ret 0x2b76
0x000000000009a172 : ret 0x2b77
0x000000000010c97b : ret 0x2b8
0x00000000000e35b2 : ret 0x2bcf
0x000000000003378f : ret 0x2cdb
0x0000000000038b6f : ret 0x2ceb
0x00000000000d108a : ret 0x2cf1
0x00000000000b76fc : ret 0x2d0
0x0000000000102d20 : ret 0x2d72
0x000000000003dd88 : ret 0x2deb
0x000000000006df5a : ret 0x2e0
0x00000000000aab6a : ret 0x2e74
0x00000000000d5a4a : ret 0x2e8
0x00000000000b5d8a : ret 0x2e8b
0x00000000000ae60a : ret 0x2eb8
0x00000000000a6a86 : ret 0x2f
0x00000000000ab1aa : ret 0x2f4c
0x000000000007e7de : ret 0x2f74
0x0000000000037068 : ret 0x3039
0x0000000000001b84 : ret 0x306a
0x000000000005e4f0 : ret 0x3074
0x0000000000023567 : ret 0x3076
0x00000000000cc40b : ret 0x30f
0x00000000000055a0 : ret 0x31
0x0000000000022cd5 : ret 0x3101
0x0000000000105652 : ret 0x3108
0x00000000000cb3a5 : ret 0x3145
0x000000000010ceaa : ret 0x314d
0x0000000000087fc6 : ret 0x31a8
0x00000000000d9e19 : ret 0x31e8
0x0000000000076a1d : ret 0x32
0x000000000007ec42 : ret 0x320e
0x000000000007dac6 : ret 0x321f
0x000000000007b9fa : ret 0x3222
0x0000000000079cfa : ret 0x323f
0x0000000000077dd1 : ret 0x327c
0x000000000007755a : ret 0x3284
0x000000000000ff80 : ret 0x33
0x000000000010caf0 : ret 0x334c
0x000000000010ccf8 : ret 0x334d
0x00000000000daee2 : ret 0x3375
0x000000000006aa2d : ret 0x3382
0x000000000000f3b0 : ret 0x34
0x000000000005eb2d : ret 0x3441
0x000000000008fd79 : ret 0x347c
0x000000000002f707 : ret 0x348
0x00000000000d4e40 : ret 0x349
0x00000000000078e0 : ret 0x35
0x000000000003beba : ret 0x35fd
0x000000000003671b : ret 0x36
0x00000000000059c0 : ret 0x37
0x000000000002650c : ret 0x3776
0x0000000000029f2a : ret 0x378d
0x000000000001f492 : ret 0x37db
0x0000000000022c22 : ret 0x37fc
0x00000000000203bd : ret 0x3824
0x000000000015d0da : ret 0x3827
0x000000000006f32f : ret 0x3841
0x0000000000084e15 : ret 0x3876
0x000000000015b766 : ret 0x38ae
0x000000000006a9ed : ret 0x38b
0x000000000001cc69 : ret 0x39
0x00000000000a52f9 : ret 0x3901
0x00000000000cbc63 : ret 0x3902
0x0000000000101bcd : ret 0x3904
0x00000000000c4d59 : ret 0x3920
0x000000000008f786 : ret 0x3941
0x00000000000a8dbf : ret 0x3944
0x0000000000038d3c : ret 0x3948
0x00000000000242aa : ret 0x3949
0x0000000000026bb0 : ret 0x394c
0x000000000005b0aa : ret 0x39e9
0x000000000006d28a : ret 0x3a
0x00000000000999a2 : ret 0x3a01
0x0000000000148d8b : ret 0x3a73
0x00000000000490e1 : ret 0x3aeb
0x0000000000004a00 : ret 0x3b
0x00000000000bde77 : ret 0x3b01
0x00000000000ab505 : ret 0x3b8
0x0000000000055a6b : ret 0x3c01
0x00000000000ef14a : ret 0x3c6
0x0000000000101a36 : ret 0x3c72
0x000000000007fcf1 : ret 0x3c75
0x00000000000a9642 : ret 0x3cb8
0x000000000005e3ee : ret 0x3d74
0x000000000002241a : ret 0x3d83
0x0000000000041987 : ret 0x3dbe
0x000000000009db9d : ret 0x3de9
0x000000000005a064 : ret 0x3e
0x00000000000aa9d5 : ret 0x3e75
0x000000000001f850 : ret 0x3eb
0x000000000010b19c : ret 0x3ee8
0x00000000000214d1 : ret 0x3ee9
0x000000000006d2a2 : ret 0x3f7
0x00000000000a8928 : ret 0x400
0x00000000000c3699 : ret 0x4001
0x000000000002b3a5 : ret 0x4002
0x00000000000009f5 : ret 0x4021
0x00000000000ffa13 : ret 0x4078
0x000000000009c171 : ret 0x408d
0x0000000000024382 : ret 0x4101
0x0000000000103892 : ret 0x4102
0x000000000009e2c2 : ret 0x4104
0x00000000000460d3 : ret 0x4108
0x00000000000476dd : ret 0x4110
0x000000000007b0ac : ret 0x4117
0x00000000000eaa1a : ret 0x4120
0x00000000000f0ebe : ret 0x4128
0x0000000000025609 : ret 0x415f
0x0000000000081b60 : ret 0x4166
0x000000000002349e : ret 0x41c3
0x00000000000cf439 : ret 0x41e8
0x00000000001052fa : ret 0x4201
0x00000000000a8af3 : ret 0x4240
0x000000000009059a : ret 0x4266
0x00000000000a8d64 : ret 0x428d
0x0000000000189a0e : ret 0x42c3
0x000000000006a70a : ret 0x4375
0x000000000010d1af : ret 0x4388
0x0000000000029c03 : ret 0x4389
0x00000000000dcd96 : ret 0x43f6
0x000000000005be40 : ret 0x4401
0x00000000000ce715 : ret 0x4404
0x000000000002f3f3 : ret 0x4408
0x0000000000000888 : ret 0x440c
0x00000000000d6745 : ret 0x440f
0x0000000000000456 : ret 0x4412
0x00000000000c6f1b : ret 0x4422
0x000000000003b7ec : ret 0x4489
0x000000000004d94b : ret 0x448b
0x00000000000d78fb : ret 0x44c7
0x00000000000d86f6 : ret 0x44e9
0x00000000000c74e1 : ret 0x4501
0x000000000002f390 : ret 0x4504
0x000000000002f96f : ret 0x4508
0x00000000000b6caf : ret 0x4589
0x00000000000c1aab : ret 0x4601
0x000000000004f003 : ret 0x4675
0x0000000000106798 : ret 0x46c7
0x0000000000065104 : ret 0x46e8
0x000000000015c264 : ret 0x474c
0x000000000008a655 : ret 0x4788
0x00000000000e9203 : ret 0x47e8
0x0000000000102b67 : ret 0x47e9
0x000000000000cc08 : ret 0x48
0x000000000008cd99 : ret 0x4801
0x000000000008ab81 : ret 0x4802
0x000000000001fa00 : ret 0x4803
0x0000000000023ac4 : ret 0x4804
0x000000000008ac2d : ret 0x4805
0x000000000008ac15 : ret 0x4806
0x00000000000e98bb : ret 0x4807
0x00000000001059bf : ret 0x4808
0x000000000002b5e4 : ret 0x4809
0x000000000002e2a0 : ret 0x480a
0x0000000000044176 : ret 0x4810
0x00000000000b6b0c : ret 0x4811
0x0000000000112a42 : ret 0x4812
0x00000000000e9ced : ret 0x4814
0x00000000000bc72b : ret 0x481e
0x00000000000efbc0 : ret 0x4830
0x0000000000066c6b : ret 0x4840
0x00000000000b776a : ret 0x4864
0x00000000000330aa : ret 0x4866
0x00000000000efcbc : ret 0x48b
0x0000000000081b3f : ret 0x48c3
0x0000000000036f5e : ret 0x48d
0x00000000000dc191 : ret 0x48e9
0x000000000015da26 : ret 0x48f
0x0000000000024e9e : ret 0x4901
0x0000000000023a99 : ret 0x4904
0x00000000000466f0 : ret 0x4908
0x00000000000ab03c : ret 0x4909
0x000000000005737e : ret 0x490f
0x000000000011e232 : ret 0x4910
0x00000000000038a7 : ret 0x49ec
0x00000000000d4366 : ret 0x4a01
0x00000000000c5d2d : ret 0x4a8b
0x00000000000a12aa : ret 0x4ac
0x00000000000e519f : ret 0x4b01
0x00000000000c3c88 : ret 0x4b88
0x000000000011c37b : ret 0x4bd
0x00000000000250b7 : ret 0x4c01
0x000000000008adf1 : ret 0x4c02
0x0000000000063746 : ret 0x4c04
0x000000000005c813 : ret 0x4c08
0x00000000001032ca : ret 0x4c0c
0x000000000007e4a4 : ret 0x4c10
0x00000000000c6a24 : ret 0x4c20
0x00000000000b2ea6 : ret 0x4c48
0x00000000000f229e : ret 0x4ce8
0x000000000008dcb4 : ret 0x4d01
0x000000000008b094 : ret 0x4d02
0x00000000001068ef : ret 0x4d08
0x00000000000958b2 : ret 0x4d10
0x00000000000ef8e9 : ret 0x4d64
0x0000000000022380 : ret 0x4d74
0x000000000000bfa8 : ret 0x4e
0x000000000015d487 : ret 0x4e27
0x0000000000034927 : ret 0x4e77
0x000000000006c4d0 : ret 0x4e8b
0x000000000010b18c : ret 0x4ee8
0x000000000007041a : ret 0x4f
0x00000000000e537e : ret 0x4f74
0x0000000000195ae4 : ret 0x502
0x0000000000034835 : ret 0x5077
0x0000000000148d74 : ret 0x5173
0x00000000000a7b1e : ret 0x5180
0x0000000000051b85 : ret 0x51ff
0x0000000000003156 : ret 0x52c0
0x00000000000c8e78 : ret 0x52e8
0x0000000000079a68 : ret 0x52e9
0x0000000000007a00 : ret 0x53
0x00000000000210c6 : ret 0x5374
0x00000000000c3070 : ret 0x5389
0x00000000000d1d38 : ret 0x5408
0x00000000000a8720 : ret 0x5438
0x0000000000041323 : ret 0x543a
0x000000000008fd59 : ret 0x547c
0x0000000000044516 : ret 0x5488
0x00000000000342b6 : ret 0x5489
0x00000000000dcf3d : ret 0x54e9
0x000000000015b6ec : ret 0x5508
0x0000000000002442 : ret 0x5576
0x00000000000a7b62 : ret 0x5589
0x000000000007fcd7 : ret 0x5675
0x00000000000f6f42 : ret 0x577
0x000000000015d9b8 : ret 0x5803
0x0000000000101e0d : ret 0x5877
0x0000000000035a9b : ret 0x589
0x000000000015b3c0 : ret 0x591c
0x0000000000003235 : ret 0x5a51
0x00000000000c3c31 : ret 0x5a7e
0x000000000015c127 : ret 0x5ae4
0x00000000000ad7ca : ret 0x5b
0x00000000000733b2 : ret 0x5b74
0x00000000000ceafc : ret 0x5ba
0x0000000000002f6b : ret 0x5bdb
0x0000000000066acc : ret 0x5c74
0x0000000000003021 : ret 0x5cbe
0x00000000000f0be6 : ret 0x5d5b
0x000000000005d8d3 : ret 0x5e75
0x0000000000033177 : ret 0x5e77
0x000000000006ae5e : ret 0x5e8b
0x000000000004130e : ret 0x5e9
0x0000000000020bba : ret 0x5f2
0x00000000000004b9 : ret 0x6080
0x00000000000d9bda : ret 0x60e8
0x000000000007e7d4 : ret 0x6174
0x0000000000002705 : ret 0x617e
0x00000000000e99e9 : ret 0x61e8
0x000000000015de52 : ret 0x62c1
0x000000000004f033 : ret 0x6348
0x00000000000c59be : ret 0x634c
0x000000000006997b : ret 0x6375
0x0000000000083cdb : ret 0x63be
0x0000000000108e3a : ret 0x63d
0x0000000000108c3a : ret 0x63f
0x000000000008fd49 : ret 0x647c
0x00000000000c1895 : ret 0x6601
0x000000000008fdfa : ret 0x6610
0x0000000000084da2 : ret 0x6620
0x000000000000280b : ret 0x6642
0x000000000007fff3 : ret 0x66c3
0x00000000000576e3 : ret 0x66e9
0x0000000000083fda : ret 0x672
0x00000000000def49 : ret 0x675
0x000000000015b3df : ret 0x67b2
0x000000000004f255 : ret 0x67e
0x00000000000e13e3 : ret 0x67e8
0x00000000000417ac : ret 0x67e9
0x000000000004565a : ret 0x689
0x0000000000099fc7 : ret 0x68e9
0x00000000000a7b1b : ret 0x6948
0x00000000000f865d : ret 0x6ae9
0x00000000000afb6f : ret 0x6b44
0x00000000000b9907 : ret 0x6b8
0x0000000000003c8e : ret 0x6bba
0x00000000000337ce : ret 0x6cdb
0x000000000005dd82 : ret 0x6d74
0x000000000016d7b3 : ret 0x6e1f
0x000000000015dfe1 : ret 0x6f9
0x000000000007f0d9 : ret 0x71e8
0x00000000000f524a : ret 0x723
0x00000000000bd4a4 : ret 0x7274
0x00000000001270be : ret 0x7280
0x00000000000855c2 : ret 0x7401
0x000000000007cc2c : ret 0x7402
0x0000000000079f1d : ret 0x7404
0x000000000006ec78 : ret 0x7408
0x000000000006a131 : ret 0x7420
0x000000000004b8eb : ret 0x7450
0x00000000000b1a8a : ret 0x748d
0x0000000000090ae7 : ret 0x7501
0x0000000000090aec : ret 0x7502
0x00000000000855bd : ret 0x7504
0x0000000000090af6 : ret 0x7508
0x0000000000149cfb : ret 0x7510
0x00000000000855b8 : ret 0x7518
0x000000000006b38d : ret 0x7520
0x000000000008543c : ret 0x7540
0x00000000000c1977 : ret 0x7580
0x00000000000de347 : ret 0x7673
0x0000000000147c62 : ret 0x7677
0x00000000000ae394 : ret 0x76c
0x0000000000022dec : ret 0x774
0x00000000000bb798 : ret 0x775
0x0000000000049f34 : ret 0x7775
0x0000000000002eb8 : ret 0x793b
0x000000000010b60a : ret 0x7a
0x000000000001fb6a : ret 0x7a4
0x00000000000ce88f : ret 0x7a80
0x00000000000ff427 : ret 0x7a8d
0x000000000004886d : ret 0x7b75
0x0000000000033405 : ret 0x7c7
0x00000000000e0251 : ret 0x7c77
0x0000000000084d32 : ret 0x7e20
0x0000000000078e89 : ret 0x7eb
0x00000000000802bc : ret 0x7f10
0x000000000011b29e : ret 0x7f75
0x00000000000c0b5b : ret 0x7fe9
0x00000000001323ee : ret 0x80
0x000000000001fe96 : ret 0x800
0x0000000000081499 : ret 0x8000
0x000000000008bd12 : ret 0x8001
0x00000000000ab22a : ret 0x8010
0x00000000000385b9 : ret 0x8040
0x00000000000e2242 : ret 0x8041
0x0000000000095ced : ret 0x8072
0x00000000000fe264 : ret 0x8080
0x00000000000f3b1d : ret 0x80f8
0x0000000000003868 : ret 0x80fc
0x000000000010c9a1 : ret 0x8141
0x000000000010ff58 : ret 0x8148
0x000000000004d5e0 : ret 0x8166
0x0000000000095d07 : ret 0x820f
0x00000000000dcfa9 : ret 0x8274
0x000000000002652e : ret 0x8301
0x0000000000104621 : ret 0x8303
0x00000000000c6e8a : ret 0x8304
0x000000000002b711 : ret 0x8308
0x000000000004081c : ret 0x830f
0x00000000000c9477 : ret 0x833b
0x0000000000040a95 : ret 0x8341
0x000000000003813c : ret 0x8348
0x0000000000039763 : ret 0x8349
0x0000000000079d99 : ret 0x8377
0x000000000008fa56 : ret 0x840
0x0000000000055f74 : ret 0x8401
0x00000000000214ac : ret 0x840f
0x00000000000de69e : ret 0x8440
0x0000000000099f56 : ret 0x8444
0x000000000008d177 : ret 0x8445
0x00000000000cc3d3 : ret 0x84c6
0x000000000004f025 : ret 0x8504
0x0000000000026548 : ret 0x850f
0x00000000000f74f0 : ret 0x8510
0x0000000000040331 : ret 0x8539
0x0000000000024b03 : ret 0x8545
0x000000000004dfea : ret 0x8548
0x0000000000031354 : ret 0x854d
0x00000000000d28f4 : ret 0x8589
0x000000000004c61d : ret 0x858b
0x000000000002adb1 : ret 0x860f
0x000000000003dd13 : ret 0x870f
0x000000000015acfe : ret 0x871e
0x00000000000510ef : ret 0x875
0x0000000000084e45 : ret 0x876
0x00000000000b75c3 : ret 0x87e8
0x0000000000022844 : ret 0x8801
0x0000000000090822 : ret 0x8802
0x00000000001143c7 : ret 0x880f
0x0000000000044b1b : ret 0x8840
0x000000000006bf0a : ret 0x88a
0x0000000000002594 : ret 0x88ad
0x000000000002ab1a : ret 0x8901
0x0000000000055e5c : ret 0x8908
0x00000000000eaf75 : ret 0x8940
0x0000000000050924 : ret 0x8941
0x000000000001fea4 : ret 0x8944
0x00000000000cfe08 : ret 0x8945
0x000000000008f08e : ret 0x8947
0x00000000000f5286 : ret 0x8948
0x000000000004151c : ret 0x8949
0x000000000001f676 : ret 0x894c
0x000000000003868a : ret 0x894d
0x00000000000437eb : ret 0x894e
0x000000000008e7b3 : ret 0x895b
0x000000000011c6c3 : ret 0x8964
0x00000000000376e0 : ret 0x8966
0x00000000000849aa : ret 0x8a04
0x0000000000002537 : ret 0x8a4c
0x0000000000058b29 : ret 0x8ae9
0x00000000000246e4 : ret 0x8b01
0x000000000009bbc7 : ret 0x8b04
0x000000000002c71e : ret 0x8b05
0x00000000000f1be4 : ret 0x8b08
0x00000000000c6a38 : ret 0x8b10
0x000000000015d52e : ret 0x8b36
0x000000000002b682 : ret 0x8b41
0x000000000007505d : ret 0x8b42
0x00000000000fda2a : ret 0x8b44
0x00000000000caec8 : ret 0x8b45
0x000000000002ec36 : ret 0x8b48
0x0000000000038730 : ret 0x8b49
0x000000000004376e : ret 0x8b4a
0x000000000002ea54 : ret 0x8b4c
0x00000000000cfe43 : ret 0x8b4d
0x000000000006a8e8 : ret 0x8b64
0x00000000000bb24e : ret 0x8ba
0x0000000000116c5c : ret 0x8be9
0x00000000000ad54b : ret 0x8c0f
0x00000000000ac3fe : ret 0x8c80
0x0000000000003772 : ret 0x8cba
0x00000000000bdd70 : ret 0x8d01
0x000000000004a6f6 : ret 0x8d04
0x00000000000456b2 : ret 0x8d0f
0x0000000000040db1 : ret 0x8d41
0x00000000000a81bd : ret 0x8d43
0x0000000000020671 : ret 0x8d44
0x000000000001ff88 : ret 0x8d48
0x000000000002ea74 : ret 0x8d49
0x0000000000042d1d : ret 0x8d4a
0x0000000000042bb5 : ret 0x8d4c
0x0000000000092b42 : ret 0x8d4d
0x000000000007b10c : ret 0x8d4e
0x0000000000050859 : ret 0x8d89
0x0000000000119058 : ret 0x8d8b
0x000000000004f2bb : ret 0x8e0f
0x000000000005a5ef : ret 0x8e9
0x00000000000575c3 : ret 0x8ee9
0x00000000000d64bf : ret 0x8f0f
0x00000000000e1d5d : ret 0x8feb
0x0000000000179368 : ret 0x900e
0x00000000000f8dd9 : ret 0x901
0x00000000000da51d : ret 0x9066
0x00000000000d5ca3 : ret 0x90a
0x000000000002c5ed : ret 0x90c3
0x000000000011a215 : ret 0x90f3
0x00000000000d9db9 : ret 0x91e8
0x000000000007ead8 : ret 0x93be
0x00000000000a9b67 : ret 0x940f
0x000000000003940a : ret 0x941
0x000000000002066e : ret 0x944
0x000000000003d13d : ret 0x948
0x00000000000839c8 : ret 0x94c
0x0000000000042fb7 : ret 0x950f
0x000000000002f127 : ret 0x953d
0x000000000015c353 : ret 0x9576
0x0000000000100f30 : ret 0x9588
0x00000000000bdf11 : ret 0x9589
0x00000000000d1499 : ret 0x970f
0x0000000000003754 : ret 0x975
0x00000000000a247b : ret 0x9774
0x000000000010d0a2 : ret 0x97e9
0x00000000000ed225 : ret 0x9848
0x000000000007fd25 : ret 0x9874
0x000000000007380c : ret 0x98eb
0x00000000000b41b1 : ret 0x9ce9
0x000000000006d729 : ret 0x9ceb
0x000000000003931a : ret 0x9d
0x0000000000095cd0 : ret 0x9d72
0x0000000000045419 : ret 0x9deb
0x000000000010973a : ret 0x9e74
0x000000000006d590 : ret 0x9eeb
0x0000000000071674 : ret 0x9feb
0x00000000000d91ba : ret 0xa
0x00000000000c624d : ret 0xa03
0x0000000000185bac : ret 0xa05
0x00000000000e91a9 : ret 0xa1e8
0x000000000006d3eb : ret 0xa1eb
0x000000000009db39 : ret 0xa4eb
0x000000000015c043 : ret 0xa514
0x0000000000109388 : ret 0xa578
0x00000000000bd8a9 : ret 0xa75
0x000000000007a8f0 : ret 0xa7e
0x00000000000dbba3 : ret 0xa7e8
0x000000000015c4c7 : ret 0xac65
0x000000000015ce84 : ret 0xacfc
0x00000000000ffa66 : ret 0xadeb
0x000000000002b0c8 : ret 0xae9
0x00000000000c577c : ret 0xaeb
0x00000000000d2546 : ret 0xaee9
0x00000000000a9fb4 : ret 0xb
0x00000000000ac315 : ret 0xb07d
0x000000000008d26a : ret 0xb0e9
0x00000000000e1199 : ret 0xb1e8
0x00000000000cbf09 : ret 0xb3c
0x000000000006aff2 : ret 0xb4e9
0x0000000000055d0c : ret 0xb58b
0x000000000002dd40 : ret 0xb60f
0x00000000000a91f8 : ret 0xb70f
0x00000000000dd211 : ret 0xb74
0x00000000000db493 : ret 0xb7e8
0x0000000000033223 : ret 0xb8
0x0000000000032e51 : ret 0xb848
0x0000000000058135 : ret 0xb875
0x00000000000c26fb : ret 0xb8c3
0x000000000015c38e : ret 0xb9b9
0x000000000008d101 : ret 0xb9e8
0x0000000000065a32 : ret 0xba66
0x000000000007c9d7 : ret 0xba76
0x00000000000b4bf3 : ret 0xbb
0x00000000000ddcda : ret 0xbceb
0x0000000000002464 : ret 0xbd07
0x0000000000020680 : ret 0xbd74
0x000000000005c99a : ret 0xbd80
0x000000000004611d : ret 0xbd83
0x000000000015c0e4 : ret 0xbe57
0x000000000004c33f : ret 0xbe8
0x00000000000d3741 : ret 0xbf0f
0x00000000000a894a : ret 0xbf8
0x000000000001f633 : ret 0xc
0x0000000000081359 : ret 0xc000
0x000000000003d4d2 : ret 0xc002
0x0000000000068787 : ret 0xc031
0x00000000001093ba : ret 0xc069
0x00000000000a9667 : ret 0xc06b
0x0000000000103e35 : ret 0xc076
0x00000000000409ee : ret 0xc083
0x000000000003318d : ret 0xc084
0x0000000000039b12 : ret 0xc085
0x000000000004f43a : ret 0xc0e8
0x000000000001f507 : ret 0xc139
0x0000000000032e1b : ret 0xc148
0x0000000000044801 : ret 0xc149
0x0000000000115e9f : ret 0xc189
0x00000000000e8b89 : ret 0xc1e8
0x0000000000047dd1 : ret 0xc220
0x0000000000036f64 : ret 0xc229
0x00000000000a8e75 : ret 0xc269
0x00000000000aff57 : ret 0xc26b
0x0000000000077d83 : ret 0xc275
0x00000000000d9f4a : ret 0xc283
0x0000000000148c44 : ret 0xc2b2
0x00000000000c6f65 : ret 0xc2eb
0x0000000000036aa8 : ret 0xc35b
0x00000000000e47f3 : ret 0xc383
0x000000000008d22e : ret 0xc3f3
0x0000000000159f02 : ret 0xc4c3
0x00000000000699e0 : ret 0xc4f6
0x000000000015bc98 : ret 0xc4ff
0x0000000000127158 : ret 0xc580
0x00000000000da655 : ret 0xc5e9
0x00000000000e2495 : ret 0xc6
0x0000000000103691 : ret 0xc602
0x00000000000e2527 : ret 0xc604
0x000000000001f846 : ret 0xc639
0x00000000000c886b : ret 0xc683
0x0000000000062203 : ret 0xc689
0x00000000000358d4 : ret 0xc6e8
0x00000000000d87f6 : ret 0xc702
0x000000000010c8f6 : ret 0xc707
0x00000000000a5f0b : ret 0xc71e
0x00000000001038cb : ret 0xc741
0x0000000000035067 : ret 0xc748
0x000000000009a561 : ret 0xc75
0x00000000000331c9 : ret 0xc764
0x00000000000e6a23 : ret 0xc7e8
0x000000000003a21c : ret 0xc801
0x00000000000be1b3 : ret 0xc889
0x000000000009db15 : ret 0xc8eb
0x00000000000d01cd : ret 0xc931
0x00000000000328c1 : ret 0xc984
0x0000000000025478 : ret 0xc985
0x000000000007fd96 : ret 0xc9ff
0x00000000000bda46 : ret 0xca09
0x0000000000046cb1 : ret 0xca20
0x00000000000413bb : ret 0xca38
0x0000000000123bdf : ret 0xca39
0x00000000000b1aea : ret 0xca6b
0x00000000000d2510 : ret 0xca83
0x000000000001f511 : ret 0xcaeb
0x000000000007e251 : ret 0xcb8
0x0000000000035b43 : ret 0xcc80
0x000000000015b72a : ret 0xcca7
0x000000000015d80d : ret 0xcd11
0x000000000009fd9a : ret 0xcd6
0x0000000000095ca0 : ret 0xcd72
0x000000000004b2ce : ret 0xce8
0x0000000000030821 : ret 0xce80
0x000000000001f6a9 : ret 0xce89
0x000000000002e282 : ret 0xce9
0x00000000000c5d12 : ret 0xceb
0x000000000000a709 : ret 0xd
0x00000000000abe22 : ret 0xd008
0x00000000000cb790 : ret 0xd009
0x00000000000b8b6a : ret 0xd029
0x0000000000126fcc : ret 0xd073
0x00000000000290c8 : ret 0xd089
0x00000000000efaa4 : ret 0xd0f7
0x00000000000d4d71 : ret 0xd101
0x0000000000068488 : ret 0xd108
0x00000000000a85e3 : ret 0xd138
0x00000000000a943a : ret 0xd184
0x00000000000323f7 : ret 0xd231
0x00000000000ae212 : ret 0xd269
0x000000000002007d : ret 0xd284
0x000000000010e204 : ret 0xd285
0x00000000001111c4 : ret 0xd301
0x00000000000d4d12 : ret 0xd341
0x00000000000383ad : ret 0xd348
0x000000000003e55e : ret 0xd529
0x000000000000089a : ret 0xd5a4
0x0000000000058747 : ret 0xd6eb
0x00000000000e6d36 : ret 0xd74
0x000000000005de76 : ret 0xd75
0x00000000000aee04 : ret 0xd801
0x000000000015d2a5 : ret 0xd8f
0x000000000009f81f : ret 0xd929
0x00000000000f4c04 : ret 0xd975
0x00000000001104d5 : ret 0xda09
0x00000000000f4cc3 : ret 0xda75
0x0000000000099fb6 : ret 0xda89
0x0000000000069d6c : ret 0xdaf7
0x00000000000d6442 : ret 0xdb31
0x000000000008baea : ret 0xdb75
0x00000000000a7960 : ret 0xdc00
0x000000000015d386 : ret 0xdcd9
0x000000000015c302 : ret 0xde5d
0x0000000000070245 : ret 0xde74
0x00000000000407cd : ret 0xde8
0x000000000015b091 : ret 0xde9e
0x000000000007f06c : ret 0xdee8
0x00000000000c57a4 : ret 0xdeeb
0x000000000008dcbe : ret 0xdf72
0x0000000000114df9 : ret 0xdf89
0x0000000000007e41 : ret 0xe
0x0000000000081219 : ret 0xe000
0x000000000008ec55 : ret 0xe072
0x0000000000149cb9 : ret 0xe074
0x00000000001032ee : ret 0xe075
0x00000000000ca5d3 : ret 0xe077
0x0000000000179a27 : ret 0xe0a
0x000000000010b29a : ret 0xe0ff
0x0000000000050818 : ret 0xe183
0x000000000005ab39 : ret 0xe1e9
0x00000000000efdb4 : ret 0xe1ff
0x0000000000025aa4 : ret 0xe281
0x00000000000269df : ret 0xe283
0x0000000000039f3a : ret 0xe2c1
0x00000000000209c2 : ret 0xe2ff
0x00000000000c84aa : ret 0xe375
0x00000000000c1abb : ret 0xe37c
0x000000000015d4a6 : ret 0xe71f
0x0000000000032b9d : ret 0xe75
0x000000000006b6e2 : ret 0xe8
0x00000000000def66 : ret 0xe801
0x0000000000104ce6 : ret 0xe82e
0x00000000000379bd : ret 0xe875
0x00000000000461cf : ret 0xe883
0x000000000007b97d : ret 0xe889
0x0000000000041f73 : ret 0xe8c1
0x0000000000041f5f : ret 0xe8d1
0x00000000000413d3 : ret 0xe9
0x000000000002e139 : ret 0xe901
0x000000000002e195 : ret 0xe902
0x00000000000a7ef9 : ret 0xe907
0x000000000007fe26 : ret 0xe908
0x00000000000787bf : ret 0xe910
0x000000000015b807 : ret 0xe970
0x000000000008e944 : ret 0xe975
0x0000000000045561 : ret 0xe9c0
0x00000000000c1cda : ret 0xea29
0x000000000009a16a : ret 0xea81
0x0000000000116b52 : ret 0xea83
0x0000000000050811 : ret 0xeac0
0x000000000010b434 : ret 0xeac1
0x00000000000d78a6 : ret 0xeb01
0x000000000002f95b : ret 0xeb04
0x000000000005a3c0 : ret 0xeb08
0x000000000011e256 : ret 0xeb10
0x00000000000bde83 : ret 0xeb7c
0x000000000015dfb8 : ret 0xec2
0x00000000000c58e1 : ret 0xec7f
0x00000000000b30a4 : ret 0xed31
0x0000000000022890 : ret 0xed75
0x000000000002281f : ret 0xee75
0x00000000000e95e6 : ret 0xee9
0x0000000000020485 : ret 0xeec1
0x000000000015dc5a : ret 0xef32
0x000000000008f05e : ret 0xef72
0x00000000000a6266 : ret 0xef75
0x000000000015ecf4 : ret 0xef85
0x00000000000051b9 : ret 0xf
0x00000000000810d9 : ret 0xf000
0x000000000002dcfa : ret 0xf01
0x0000000000076d43 : ret 0xf02
0x0000000000068823 : ret 0xf039
0x000000000002b394 : ret 0xf04
0x00000000000bdd24 : ret 0xf075
0x0000000000090803 : ret 0xf077
0x0000000000077f71 : ret 0xf08
0x00000000000abbae : ret 0xf089
0x0000000000114fda : ret 0xf0a4
0x0000000000078135 : ret 0xf0f
0x0000000000080272 : ret 0xf10
0x0000000000047d27 : ret 0xf101
0x00000000000a61f4 : ret 0xf175
0x000000000008fe5c : ret 0xf188
0x000000000011425a : ret 0xf190
0x00000000000e8859 : ret 0xf1e8
0x0000000000090b04 : ret 0xf20
0x00000000000ae36b : ret 0xf201
0x0000000000102c80 : ret 0xf221
0x00000000000f599a : ret 0xf2a9
0x00000000000f10da : ret 0xf2e3
0x000000000002eae8 : ret 0xf2e8
0x00000000000f111a : ret 0xf375
0x0000000000090b0d : ret 0xf40
0x00000000000cb481 : ret 0xf44
0x00000000001046b4 : ret 0xf45
0x0000000000038d80 : ret 0xf48
0x000000000004dfe6 : ret 0xf49
0x000000000004e1bd : ret 0xf4c
0x00000000000c5466 : ret 0xf53
0x00000000000d0b5a : ret 0xf5c7
0x000000000003a6e5 : ret 0xf5e8
0x000000000004cd23 : ret 0xf5e9
0x00000000000ad3c7 : ret 0xf601
0x00000000000b3d2f : ret 0xf631
0x000000000004d272 : ret 0xf641
0x00000000000d17d3 : ret 0xf642
0x00000000000ba4da : ret 0xf64f
0x0000000000080079 : ret 0xf66
0x00000000000febaa : ret 0xf684
0x0000000000099d8c : ret 0xf685
0x00000000000d0417 : ret 0xf74
0x00000000000420af : ret 0xf741
0x000000000008598c : ret 0xf748
0x00000000000e2b19 : ret 0xf783
0x00000000000ec66a : ret 0xf7d7
0x00000000000c28d3 : ret 0xf7e8
0x000000000012707e : ret 0xf80
0x0000000000025659 : ret 0xf800
0x000000000015af70 : ret 0xf869
0x0000000000081745 : ret 0xf883
0x00000000000331f5 : ret 0xf8c1
0x00000000000397ab : ret 0xf929
0x00000000000abe14 : ret 0xf980
0x0000000000055875 : ret 0xf983
0x00000000000d091a : ret 0xf98c
0x00000000000afa77 : ret 0xfa29
0x00000000000f80ca : ret 0xfa44
0x0000000000037100 : ret 0xfa69
0x00000000000f11ae : ret 0xfa80
0x0000000000039f49 : ret 0xfa81
0x0000000000028f18 : ret 0xfa83
0x00000000000768da : ret 0xfa8b
0x000000000004ae44 : ret 0xfac1
0x0000000000104ba5 : ret 0xfad1
0x0000000000063550 : ret 0xfae8
0x00000000000d608a : ret 0xfaf5
0x00000000000bf79d : ret 0xfb80
0x000000000005eae9 : ret 0xfb83
0x0000000000080e59 : ret 0xfc00
0x000000000003aba2 : ret 0xfc02
0x00000000000e35c1 : ret 0xfc07
0x00000000000817ea : ret 0xfc3
0x000000000016efec : ret 0xfc51
0x000000000016efe4 : ret 0xfc52
0x000000000016efdc : ret 0xfc53
0x000000000016efd4 : ret 0xfc54
0x000000000016efcc : ret 0xfc55
0x000000000016edd8 : ret 0xfc5d
0x000000000016f2c4 : ret 0xfc85
0x00000000000b813a : ret 0xfc99
0x000000000016f9c4 : ret 0xfca2
0x000000000016f7fc : ret 0xfca5
0x0000000000074e28 : ret 0xfd81
0x0000000000099eb7 : ret 0xfd83
0x00000000000675e2 : ret 0xfde9
0x000000000002dcd9 : ret 0xfdf
0x0000000000080d19 : ret 0xfe00
0x000000000004d510 : ret 0xfe83
0x000000000009dbcb : ret 0xfe9
0x0000000000126f9e : ret 0xfec5
0x000000000003f86a : ret 0xfed0
0x0000000000080bd9 : ret 0xff00
0x000000000004f417 : ret 0xff2
0x00000000000a4f24 : ret 0xff25
0x00000000000904ca : ret 0xff3
0x000000000007f875 : ret 0xff31
0x000000000008f4ee : ret 0xff41
0x000000000007fcd4 : ret 0xff48
0x000000000005e54a : ret 0xff73
0x0000000000080a99 : ret 0xff80
0x0000000000105290 : ret 0xff81
0x00000000000382a2 : ret 0xff82
0x0000000000055892 : ret 0xff83
0x000000000008bb4a : ret 0xff8f
0x000000000005dcdb : ret 0xffa2
0x000000000007023e : ret 0xffb8
0x0000000000054fb1 : ret 0xffba
0x000000000003d3f9 : ret 0xffbf
0x0000000000080959 : ret 0xffc0
0x00000000000541b1 : ret 0xffc8
0x00000000000489c3 : ret 0xffcd
0x00000000000c39ea : ret 0xffd6
0x0000000000058a08 : ret 0xffdc
0x00000000000adf18 : ret 0xffde
0x0000000000080819 : ret 0xffe0
0x00000000001122ca : ret 0xffe2
0x00000000000bb4aa : ret 0xffe7
0x0000000000177c21 : ret 0xffeb
0x0000000000030723 : ret 0xffec
0x0000000000037adb : ret 0xffef
0x00000000000806d9 : ret 0xfff0
0x0000000000103237 : ret 0xfff1
0x0000000000171b75 : ret 0xfff2
0x00000000000e31be : ret 0xfff3
0x00000000000b089c : ret 0xfff4
0x00000000000c3152 : ret 0xfff5
0x000000000007992a : ret 0xfff6
0x000000000004414a : ret 0xfff7
0x00000000000ad712 : ret 0xfff8
0x00000000000e7c64 : ret 0xfff9
0x00000000000550e0 : ret 0xfffa
0x00000000000474da : ret 0xfffb
0x000000000007aa39 : ret 0xfffc
0x0000000000029878 : ret 0xfffd
0x000000000002a8a5 : ret 0xfffe
0x000000000002c5e5 : ret 0xffff
0x0000000000000e20 : ret 1
0x0000000000001010 : ret 2
0x00000000000011dc : ret 3
0x000000000003bded : ret 4
0x0000000000001590 : ret 5
0x00000000000063d1 : ret 6
0x000000000002ff55 : ret 7
0x0000000000084f25 : ret 8
0x000000000002c95a : ret 9
0x0000000000078640 : retf -0x76b8 ; out dx, eax ; neg rdi ; call qword ptr [r14]
0x0000000000088ecf : retf -0x7af1 ; call qword ptr [rsi]
0x000000000016e965 : retf -5 ; ror bl, -5 ; call qword ptr [rax]
0x000000000002d46d : retf 0x12 ; movsxd rax, dword ptr [rdx + r12*4] ; add rdx, rax ; jmp rdx
0x00000000001739d1 : retf 1 ; ror byte ptr [rbx - 8], 1 ; call rax
0x000000000018200d : retf ; add byte ptr [rax], al ; mov al, 0x2b ; call qword ptr [rax]
0x0000000000173a29 : retf ; add dword ptr [rax], eax ; ror byte ptr [rbp - 8], 1 ; call qword ptr [rax]
0x0000000000173ecd : retf ; clc ; call rax
0x00000000000c0900 : retf ; mov rdi, rbp ; mov rsi, rbx ; call r12
0x000000000015fe45 : retf ; std ; call qword ptr [rax - 0x2f000233]
0x000000000016e969 : retf ; sti ; call qword ptr [rax]
0x00000000000c8942 : retf ; sti ; call rcx
0x000000000016e914 : rol ah, -5 ; call qword ptr [rax]
0x000000000016e908 : rol al, 1 ; sti ; jmp qword ptr [rax]
0x000000000016e95c : rol bh, 1 ; sti ; jmp qword ptr [rax]
0x000000000008fcfd : rol bl, -0x70 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000001039ed : rol bl, -0x70 ; mov eax, 0xffffffff ; ret
0x000000000009c33d : rol bl, -0x70 ; mov eax, 1 ; ret
0x000000000015fe38 : rol bl, -3 ; inc dword ptr [rax - 0x5a] ; std ; call qword ptr [rax]
0x0000000000099a65 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000009a2ae : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000008f88c : rol bl, 0x66 ; nop ; mov rax, rdi ; ret
0x0000000000170dc8 : rol bl, 1 ; add byte ptr [rax], al ; in eax, dx ; out dx, eax ; call qword ptr [rax]
0x000000000006eafc : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000084f9d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000011d2f1 : rol bl, 1 ; nop dword ptr [rax + rax] ; call qword ptr [rax]
0x0000000000036a77 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000000efad9 : rol byte ptr [rax + 0x38], -0x2a ; cmovne eax, ecx ; ret
0x00000000000904a2 : rol byte ptr [rax + 0x48], -0x7d ; ret 0x4840
0x0000000000081e02 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000158d80 : rol byte ptr [rax + rax], 0 ; ret 4
0x00000000000ebf82 : rol byte ptr [rax + rcx*2], -0x75 ; push rsp ; ret 0x8940
0x00000000000abe1c : rol byte ptr [rax - 0x6bf0dc07], 1 ; ret 0xd008
0x000000000016f430 : rol byte ptr [rax - 0x7faf0004], -4 ; jmp rax
0x000000000009beed : rol byte ptr [rax*4 + 0x751089d2], -0xd ; ret
0x00000000000d9bc6 : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000040ce5 : rol byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000147b6d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a8b07 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000067fe0 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00000000000e6477 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b3570 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000033d0f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000018268d : rol byte ptr [rax], cl ; add byte ptr [rax - 0x70], dl ; cld ; jmp qword ptr [rbx]
0x00000000001826ed : rol byte ptr [rax], cl ; add byte ptr [rax], al ; push rsp ; call qword ptr [rax]
0x0000000000083c0b : rol byte ptr [rbp + 0x48be75c0], 1 ; add esp, 8 ; ret
0x000000000008c5b2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000081e29 : rol byte ptr [rbp - 0x149d8a2e], 1 ; ror byte ptr [rcx + 0x39], 1 ; ret
0x0000000000038352 : rol byte ptr [rbp - 0x6af0be13], cl ; ret 0xc748
0x00000000000e565b : rol byte ptr [rbp - 0x77], -9 ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000d3b6e : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8b48
0x000000000009d0e6 : rol byte ptr [rbx + rcx*4], 0x10 ; cmp edx, esi ; jne 0x9d0e9 ; ret
0x00000000000a9592 : rol byte ptr [rbx - 0x157cfd1e], cl ; add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8941
0x0000000000042c5b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x00000000000c541f : rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00000000000eb254 : rol byte ptr [rbx - 0x69f0f601], -0x40 ; ret
0x000000000002cc21 : rol byte ptr [rbx - 0x6bf07f19], -0x40 ; ret
0x000000000010002e : rol byte ptr [rbx - 0x6bf0fe05], 1 ; ret
0x000000000016f218 : rol byte ptr [rbx - 0x7caf0004], -4 ; jmp rax
0x000000000010b0e5 : rol byte ptr [rbx], -0x7d ; ret 0x8303
0x000000000009b592 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000101a62 : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x000000000009a161 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000025227 : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000000406bd : rol byte ptr [rcx + rcx*4 - 0x10], 0xf ; ret
0x00000000001702cc : rol byte ptr [rcx - 0x14], 1 ; jmp rax
0x00000000000e4b87 : rol byte ptr [rcx], -0x27 ; ret 0x3944
0x0000000000040b6b : rol byte ptr [rcx], -0x3a ; jmp qword ptr [rax]
0x000000000006b388 : rol byte ptr [rcx], -0x75 ; adc esi, esi ; ret 0x7520
0x00000000000f69aa : rol byte ptr [rcx], -0x75 ; adc esi, esi ; ret 0xf20
0x00000000000c3c82 : rol byte ptr [rcx], -0x7d ; leave ; adc byte ptr [rcx], bh ; ret 0x4b88
0x00000000000c735f : rol byte ptr [rcx], -0x7d ; ret 0x4001
0x0000000000029ffa : rol byte ptr [rcx], -0x7d ; ret 0x4801
0x00000000000c0876 : rol byte ptr [rcx], -0xa ; or esi, r10d ; jne 0xc0889 ; ret
0x000000000009b572 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000cee10 : rol byte ptr [rcx], 0x39 ; ret
0x00000000000c3c2e : rol byte ptr [rcx], 0x39 ; ret 0x5a7e
0x00000000000426e7 : rol byte ptr [rcx], 0x39 ; ret 0x894c
0x000000000004290a : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x42909 ; xor eax, eax ; ret
0x00000000000429ea : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x429e9 ; xor eax, eax ; ret
0x00000000000ea76d : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x0000000000099fb2 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x000000000005926f : rol byte ptr [rcx], 1 ; add byte ptr [rbx - 0x76be0008], al ; ret 0x850f
0x0000000000126fce : rol byte ptr [rcx], 1 ; ret 0x148
0x00000000000dac1c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000eb63d : rol byte ptr [rdi + rcx], -0x49 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000c4fb2 : rol byte ptr [rdi - 0x75], 4 ; test byte ptr [rbp + 0x39], al ; ret 0xe975
0x0000000000057261 : rol byte ptr [rdi - 0x78], 0x14 ; and dword ptr [rcx + 0x29], eax ; ret
0x000000000009b5d2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000ea0cf : rol byte ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001742c0 : rol byte ptr [rdx + rax], 0 ; adc byte ptr [rsi - 7], dh ; call qword ptr [rax]
0x000000000015fd94 : rol byte ptr [rdx - 0x7c0f0004], 1 ; cld ; call qword ptr [rax]
0x00000000001844d0 : rol byte ptr [rdx - 0xd], 1 ; jmp qword ptr [rcx]
0x000000000009b582 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000e8245 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000b84ca : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000001cca8 : rol byte ptr [rdx], 7 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x39
0x0000000000196110 : rol byte ptr [rdx], cl ; add byte ptr [rax], al ; ret
0x00000000000ab3df : rol byte ptr [rip + 0x16e], 1 ; ret
0x00000000000eb4fd : rol byte ptr [rip + 0x48c0b70f], -0x75 ; push rsp ; ret 0x8940
0x0000000000171114 : rol byte ptr [rsi - 0x10], 1 ; call qword ptr [rax]
0x000000000009b5c2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000103680 : rol cl, -0x17 ; add ecx, dword ptr [rcx - 0x54b70c37] ; ret
0x00000000000ab90f : rol cl, -0x20 ; add ebp, ecx ; ret 0xfffb
0x0000000000159f00 : rol cl, -0x3e ; ret
0x000000000015fe34 : rol cl, -3 ; inc eax ; ret
0x0000000000180c10 : rol cl, -4 ; jmp qword ptr [rax]
0x0000000000112b48 : rol cl, 1 ; call 0xffffffff80d42264
0x0000000000177bf0 : rol cl, 1 ; jmp 0x177bf6
0x00000000000abba6 : rol cl, cl ; clc ; add eax, 0x2907f9c1 ; ret 0xf089
0x00000000000ae358 : rol cl, cl ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000fd297 : rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000009b51c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000000efab1 : rol dword ptr [rax + 0x38], -0x3a ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000002566c : rol dword ptr [rax + rax], 1 ; add bh, dh ; ret 0
0x0000000000025660 : rol dword ptr [rax + rax], cl ; add bh, dh ; ret 0
0x000000000018158d : rol dword ptr [rax], 0 ; jo 0x181541 ; int1 ; call qword ptr [rsi]
0x00000000001827ad : rol dword ptr [rax], cl ; add byte ptr [rax + 0x58], dl ; call qword ptr [rcx]
0x000000000008fcf7 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00000000000575bd : rol dword ptr [rbp - 0x77], 1 ; ret 0x8948
0x000000000001f858 : rol dword ptr [rbx + rbp*8], -0x34 ; mov qword ptr [rdi], rcx ; ret
0x00000000000c7635 : rol dword ptr [rcx], 0x48 ; cmp ecx, esi ; jne 0xc7629 ; ret
0x0000000000173b51 : rol dword ptr [rcx], 1 ; add al, dh ; clc ; call qword ptr [rax]
0x000000000001f505 : rol dword ptr [rcx], 1 ; ret 0xc139
0x0000000000192815 : rol dword ptr [rcx], cl ; add al, bh ; loop 0x192818 ; jmp qword ptr [rax]
0x000000000019282d : rol dword ptr [rcx], cl ; add byte ptr [rax], al ; jrcxz 0x192830 ; jmp qword ptr [rax]
0x00000000000976b9 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x0000000000034585 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000081829 : rol ebx, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000010fd85 : rol ecx, 1 ; jmp 0xffffffff80d3f4a1
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x0000000000081828 : rol r11d, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000034584 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001718fc : ror ah, 1 ; int1 ; jmp qword ptr [rax]
0x00000000000f8b92 : ror ax, 8 ; ret
0x000000000015fe4c : ror bh, 1 ; std ; call qword ptr [rax]
0x000000000016e968 : ror bl, -5 ; call qword ptr [rax]
0x0000000000034424 : ror byte ptr [rax + 0x21], 1 ; add al, -0x29 ; xor eax, eax ; ret
0x0000000000034586 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x0000000000084e12 : ror byte ptr [rax + 0x29], -0x3e ; jbe 0x84e59 ; add rax, rdi ; ret
0x0000000000038b6c : ror byte ptr [rax + 0x29], -0x3e ; jmp 0x38ba1
0x000000000003b487 : ror byte ptr [rax + 0x29], -0x3e ; jmp 0x3b4bc
0x000000000003dd85 : ror byte ptr [rax + 0x29], -0x3e ; jmp 0x3ddbb
0x00000000000a2e8d : ror byte ptr [rax + 0x29], -0x3e ; jmp 0xa2ebc
0x0000000000081caf : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000090ade : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x000000000010bdd6 : ror byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc031
0x00000000000e0982 : ror byte ptr [rax + 0x39], -0x2a ; ja 0xe09b7 ; ret
0x0000000000115ea3 : ror byte ptr [rax + 0x39], -0x36 ; je 0x115ebf ; ret
0x00000000000f43c8 : ror byte ptr [rax + 0x39], -6 ; setae al ; ret
0x00000000000dac1e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x0000000000043653 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000a3282 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000a8a89 : ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x00000000000f5c2a : ror byte ptr [rax + 0x48e97507], -0x77 ; clc ; ret
0x0000000000055b1b : ror byte ptr [rax + 0x63], cl ; adc al, -0x6f ; add rcx, rdx ; jmp rcx
0x0000000000068994 : ror byte ptr [rax + 0x63], cl ; adc al, -0x70 ; add rax, rdx ; jmp rax
0x00000000000419a5 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000a892f : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000f5282 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x000000000010727c : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x000000000008d4d7 : ror byte ptr [rax + 0xf], 1 ; ret
0x000000000002b9c1 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x00000000000b6cab : ror byte ptr [rax + 0xf], 1 ; ret 0x4589
0x00000000000b594d : ror byte ptr [rax + 0xf], 1 ; ret 0x8941
0x00000000000ed422 : ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0x000000000002b9b2 : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00000000000ed221 : ror byte ptr [rax + 0xf], 1 ; ret 0x9848
0x00000000000e67f8 : ror byte ptr [rax + 0xf], cl ; ret 0xc148
0x0000000000031152 : ror byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8d48
0x000000000008fe43 : ror byte ptr [rax + 1], -8 ; add rax, r8 ; ret
0x000000000008c48c : ror byte ptr [rax + 1], -8 ; add rax, rcx ; ret
0x0000000000083859 : ror byte ptr [rax + 1], -8 ; ret
0x00000000000eaae7 : ror byte ptr [rax + 1], 1 ; fmul dword ptr [rax - 0x77] ; ret 0xc148
0x0000000000072669 : ror byte ptr [rax + 1], cl ; ret 0x8944
0x0000000000081cac : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000055e53 : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000002], ecx ; ret 0x8908
0x00000000000e83f3 : ror byte ptr [rax + 9], 1 ; lock or rax, rdi ; ret
0x000000000010cefd : ror byte ptr [rax + 9], 1 ; ror byte ptr [rcx - 0x77], 1 ; ret 0x8d48
0x000000000010cf3b : ror byte ptr [rax + 9], cl ; ret 0x8949
0x000000000010d09f : ror byte ptr [rax + 9], cl ; ret 0x97e9
0x0000000000084f95 : ror byte ptr [rax - 0x2d], -6 ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000175348 : ror byte ptr [rax - 0x36d00000], 1 ; std ; jmp rax
0x000000000002c5e2 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000ac997 : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc29411a8
0x00000000000a7ea0 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000b8eb0 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x0000000000084dd2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000084e02 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000008fd32 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x0000000000084df2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000007a0ec : ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000008e7ad : ror byte ptr [rax - 0x73], 0x65 ; fsubr dword ptr [rcx] ; ret 0x895b
0x00000000000f52ec : ror byte ptr [rax - 0x73], 1 ; cmp eax, 0xfffffe8c ; call rax
0x00000000000eaf71 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000b1baf : ror byte ptr [rax - 0x75], 0x74 ; ret
0x00000000000c47b1 : ror byte ptr [rax - 0x75], 4 ; ret
0x00000000000f5172 : ror byte ptr [rax - 0x77], -0x1b ; pop rbp ; ret
0x00000000000e31b8 : ror byte ptr [rax - 0x77], -0x21 ; call 0x1f4a6
0x000000000010efa8 : ror byte ptr [rax - 0x77], -0x2a ; add rdi, 0x10 ; jmp rcx
0x000000000008d4d4 : ror byte ptr [rax - 0x77], -0x30 ; cmove rax, rbx ; pop rbx ; ret
0x000000000010b6d9 : ror byte ptr [rax - 0x77], -0x3d ; jne 0x10b67b ; xor eax, eax ; pop rbx ; ret
0x0000000000102d45 : ror byte ptr [rax - 0x77], 0x37 ; ret
0x000000000008f969 : ror byte ptr [rax - 0x77], 0xa ; ret
0x00000000000a0ee3 : ror byte ptr [rax - 0x77], 1 ; jl 0xa0f14 ; or byte ptr [rcx - 0x77], al ; ret 0x8d48
0x0000000000073fbc : ror byte ptr [rax - 0x77], 1 ; ret 0x3949
0x000000000002b360 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x0000000000074745 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000aaed5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x000000000004c33c : ror byte ptr [rax - 0x77], 1 ; ret 0xbe8
0x000000000010bdd9 : ror byte ptr [rax - 0x77], 1 ; ret 0xc031
0x0000000000053904 : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000032159 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000010e5b9 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x00000000000b5971 : ror byte ptr [rax - 0x77], cl ; ret
0x000000000010d1d1 : ror byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000753e1 : ror byte ptr [rax - 0x7b], -0x2e ; jne 0x753f6 ; ret
0x000000000008e79f : ror byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xc031
0x00000000000db01e : ror byte ptr [rax - 0x7d], -0x14 ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000008fd92 : ror byte ptr [rax - 0x7d], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000008fd72 : ror byte ptr [rax - 0x7d], -0x16 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000008fd52 : ror byte ptr [rax - 0x7d], -0x16 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000006f35f : ror byte ptr [rax - 0x7d], -0x3c ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000112732 : ror byte ptr [rax - 0x7d], -0x3c ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000dca30 : ror byte ptr [rax - 0x7d], -0x3c ; movzx rax, al ; ret
0x000000000011b569 : ror byte ptr [rax - 0x7d], -0x3c ; or bl, dh ; ret
0x000000000003642d : ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000003fff4 : ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x0000000000041bca : ror byte ptr [rax - 0x7d], -0x3c ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001163ca : ror byte ptr [rax - 0x7d], -0x3c ; sbb byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x0000000000101fd6 : ror byte ptr [rax - 0x7d], -0x3c ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000008b711 : ror byte ptr [rax - 0x7d], -0x3f ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e4f3a : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x0000000000072eb2 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x000000000007b105 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc290f924
0x00000000000396b7 : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000036513 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000071a16 : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000aeae0 : ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000095cc6 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000a3ae5 : ror byte ptr [rax - 9], cl ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000738ed : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7283 : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x000000000003c82a : ror byte ptr [rax], -0x7d ; ret 0x4801
0x0000000000083bb4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000174db8 : ror byte ptr [rbp + 2], 1 ; add byte ptr [rax], dh ; cwde ; cli ; jmp qword ptr [rax]
0x0000000000096a89 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; ret
0x000000000009c650 : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x000000000010caed : ror byte ptr [rbp - 0x77], 1 ; ret 0x334c
0x000000000010ccf5 : ror byte ptr [rbp - 0x77], 1 ; ret 0x334d
0x0000000000173a2c : ror byte ptr [rbp - 8], 1 ; call qword ptr [rax]
0x00000000001739d4 : ror byte ptr [rbx - 8], 1 ; call rax
0x00000000000b8c5a : ror byte ptr [rbx], 1 ; mov ax, 0xfde8 ; jne 0xb8c34 ; ret
0x00000000000405de : ror byte ptr [rcx + 0x39], 1 ; clc ; jne 0x405bf ; ret
0x0000000000028dde : ror byte ptr [rcx + 0x39], 1 ; ret
0x00000000000daedf : ror byte ptr [rcx + 0x39], 1 ; ret 0x3375
0x000000000001d128 : ror byte ptr [rcx + 7], 1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret
0x000000000001cf60 : ror byte ptr [rcx + 7], 1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x000000000008ad05 : ror byte ptr [rcx + rcx*4 + 7], 1 ; pop rbx ; ret
0x000000000006ba7a : ror byte ptr [rcx + rcx*4 - 0x17], 0x31 ; shr al, 0x2b ; ret 4
0x000000000007cada : ror byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call 0x78dc9
0x00000000000f6c20 : ror byte ptr [rcx + rdi - 0x17], 0xf ; xchg eax, ebx ; ret 0x830f
0x00000000000335a4 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000000e2b26 : ror byte ptr [rcx - 0x39188a2a], cl ; inc dword ptr [r8] ; ret
0x00000000000338ce : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x0000000000102d8e : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x000000000010cec1 : ror byte ptr [rcx - 0x77], 1 ; ret 0x8948
0x000000000010cf00 : ror byte ptr [rcx - 0x77], 1 ; ret 0x8d48
0x000000000008afd3 : ror byte ptr [rcx - 0x77], 1 ; sbb byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000008b1f0 : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4801
0x00000000000958af : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000b76f9 : ror byte ptr [rcx - 0x7f], cl ; ret 0x2d0
0x000000000009bef0 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000a7ae0 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x00000000000738b3 : ror byte ptr [rcx - 9], cl ; hlt ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e83cc : ror byte ptr [rcx], -8 ; ret
0x00000000000857c9 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x0000000000172cb4 : ror byte ptr [rdi + rsi*8], 1 ; jmp rax
0x00000000000ab90c : ror byte ptr [rdi], -0x4a ; rol cl, -0x20 ; add ebp, ecx ; ret 0xfffb
0x00000000000b8ead : ror byte ptr [rdi], -0x4a ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000011b566 : ror byte ptr [rdi], -0x4a ; ror byte ptr [rax - 0x7d], -0x3c ; or bl, dh ; ret
0x00000000000d150d : ror byte ptr [rdi], -0x4a ; ror byte ptr [rdi], 0x47 ; ret 0x66c3
0x00000000000679ab : ror byte ptr [rdi], -0x4a ; sal bh, -0x28 ; pop rbx ; ret
0x00000000000d14ef : ror byte ptr [rdi], -0x4a ; sal bh, -0x28 ; ret
0x00000000000dcc4a : ror byte ptr [rdi], -0x4a ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x000000000006f32c : ror byte ptr [rdi], -0x61 ; ret 0x3841
0x00000000000d6568 : ror byte ptr [rdi], -0x6b ; ret
0x00000000000cb675 : ror byte ptr [rdi], -0x6b ; ret 0x8341
0x00000000000a9437 : ror byte ptr [rdi], -0x6b ; ret 0xd184
0x0000000000069d69 : ror byte ptr [rdi], -0x6b ; ret 0xdaf7
0x000000000009ce71 : ror byte ptr [rdi], -0x6b ; ret 0xe883
0x000000000009cb81 : ror byte ptr [rdi], -0x6b ; ret 0xf883
0x000000000007ee8d : ror byte ptr [rdi], -0x6c ; ret
0x0000000000112506 : ror byte ptr [rdi], -0x6c ; ret 0x3d83
0x00000000000a871d : ror byte ptr [rdi], -0x6c ; ret 0x5438
0x00000000000ae3ef : ror byte ptr [rdi], -0x6c ; ret 0x6348
0x00000000000337cb : ror byte ptr [rdi], -0x6c ; ret 0x6cdb
0x000000000001ff85 : ror byte ptr [rdi], -0x6c ; ret 0x8d48
0x000000000006c319 : ror byte ptr [rdi], -0x6c ; ret 0xdaf7
0x00000000000b8b67 : ror byte ptr [rdi], -0x6e ; ret 0xd029
0x000000000007c576 : ror byte ptr [rdi], -0x7b ; add dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000013ebaa : ror byte ptr [rdi], -0x7b ; call qword ptr [rbx]
0x000000000008fcbc : ror byte ptr [rdi], -0x7b ; jge 0x8fcca ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000094511 : ror byte ptr [rdi], -0x7b ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000092b26 : ror byte ptr [rdi], -0x7b ; ret
0x00000000000c3fe2 : ror byte ptr [rdi], -0x7b ; ret 0
0x0000000000090e57 : ror byte ptr [rdi], -0x7b ; ret 0x13
0x0000000000041e8f : ror byte ptr [rdi], -0x7c ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000039505 : ror byte ptr [rdi], -0x7c ; ret
0x0000000000077fb7 : ror byte ptr [rdi], -0x7c ; ret 0
0x00000000000494d8 : ror byte ptr [rdi], -0x7c ; std ; ret 0xffff
0x0000000000118cd8 : ror byte ptr [rdi], -0x7e ; ret
0x000000000009a382 : ror byte ptr [rdi], 0x1f ; add byte ptr [rax], r8b ; ret
0x00000000000e6f70 : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x00000000000c40bf : ror byte ptr [rdi], 0x44 ; ret 0x8348
0x000000000003318a : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000d1510 : ror byte ptr [rdi], 0x47 ; ret 0x66c3
0x0000000000045657 : ror byte ptr [rdi], 0x48 ; ret 0x689
0x00000000000a8d77 : ror byte ptr [rdi], 0x48 ; ret 0x8341
0x0000000000050921 : ror byte ptr [rdi], 0x48 ; ret 0x8941
0x0000000000036aa5 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x000000000003216e : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x32158 ; ret
0x00000000000ca40f : ror byte ptr [rdi], 1 ; ret 0x8944
0x00000000000c1e4c : ror byte ptr [rdi], 1 ; ret 0xc639
0x0000000000046cae : ror byte ptr [rdi], 1 ; sahf ; ret 0xca20
0x000000000008fa53 : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret 0x840
0x00000000000de1d5 : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret 0xb60f
0x0000000000025651 : ror byte ptr [rdi], cl ; mov byte ptr [rax - 0x8fffffe], ch ; ret 0xf800
0x000000000008fddd : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000038aea : ror byte ptr [rdi], cl ; test byte ptr [rcx + rcx], cl ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000000a8639 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000a85e0 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd138
0x0000000000171950 : ror byte ptr [rdx], 1 ; add dword ptr [rax], eax ; xor ch, dl ; int1 ; jmp qword ptr [rax]
0x0000000000174dd8 : ror byte ptr [rsi + 2], 1 ; add byte ptr [rax - 0x61], ah ; cli ; call qword ptr [rax]
0x000000000016ff14 : ror dl, 1 ; jmp 0x16ff1a
0x0000000000123b35 : ror dword ptr [rax + 1], -8 ; ret
0x00000000001239f9 : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x0000000000123c4e : ror dword ptr [rax + 1], -8 ; sub rax, rdx ; ret
0x0000000000119877 : ror dword ptr [rax + 1], cl ; ret
0x00000000000c6a32 : ror dword ptr [rax + 3], 1 ; or ecx, dword ptr [rcx - 0x7d] ; ret 0x8b10
0x000000000008dcad : ror dword ptr [rax - 0x3f], -0x19 ; or byte ptr [rax - 0x7d], cl ; ret 0x4d01
0x00000000000a8df3 : ror dword ptr [rax - 0x77], 0x4f ; and byte ptr [rbx + 0x5d], bl ; ret
0x00000000000e6d5d : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000005742b : ror dword ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000011c9ab : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000127022 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000010d1c4 : ror dword ptr [rax - 0x77], cl ; ret 0xc148
0x000000000006dfad : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x6dfa7 ; ret
0x0000000000075ecd : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x75ec7 ; ret
0x00000000000c670b : ror dword ptr [rax - 0x7d], 1 ; ret
0x00000000000aab8d : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c01
0x0000000000043de2 : ror dword ptr [rax - 0x7d], cl ; in al, dx ; cmp dh, dh ; ret 0x4801
0x00000000000ad3c4 : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000a906d : ror dword ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000002400f : ror dword ptr [rcx + 0x39], 1 ; ret 0x2b76
0x0000000000023564 : ror dword ptr [rcx + 0x39], 1 ; ret 0x3076
0x00000000000ef681 : ror dword ptr [rcx + 0x5bd8f7c8], 0x5d ; pop r12 ; ret
0x000000000004d5ca : ror dword ptr [rcx + 1], 1 ; ret
0x0000000000149cb7 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000008fc55 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], -8 ; ret
0x0000000000099fc4 : ror dword ptr [rdi], -0x51 ; ret 0x68e9
0x00000000000331b4 : ror dword ptr [rdi], -0x65 ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000461cc : ror dword ptr [rdi], -0x6c ; ret 0xe883
0x00000000000dfcdc : ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x00000000000c64ff : ror dword ptr [rdi], -0x6e ; ret 0xd138
0x000000000004638a : ror dword ptr [rdi], -0x72 ; ret
0x00000000000c71b8 : ror dword ptr [rdi], -0x79 ; cmp dword ptr [rbx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001483d8 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000148ae4 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001488b6 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x00000000001499e0 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000148836 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000148b74 : ror dword ptr [rdi], -0x7b ; je 0x148b84 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014866b : ror dword ptr [rdi], -0x7b ; jno 0x148680 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000148733 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001483b0 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000493e0 : ror dword ptr [rdi], -0x7c ; cmc ; ret
0x0000000000026b4f : ror dword ptr [rdi], -0x7c ; ret 1
0x0000000000047dce : ror dword ptr [rdi], 1 ; sahf ; ret 0xc220
0x00000000000dcc2c : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x000000000007a4fc : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8349
0x00000000000b5e7b : ror dword ptr [rdx - 0x76b7ffd2], 1 ; ret 0x9ce9
0x00000000000331b3 : ror dword ptr cs:[rdi], -0x65 ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000f8b93 : ror eax, 8 ; ret
0x000000000006dfac : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x6dfa8 ; ret
0x0000000000075ecc : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x75ec8 ; ret
0x0000000000051c43 : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x110743], al ; call qword ptr [rax]
0x000000000005369b : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x113743], al ; call qword ptr [rax]
0x000000000017f2fd : sahf ; add byte ptr [rax], al ; add ch, bh ; out dx, eax ; jmp qword ptr [rdx]
0x00000000000b4b04 : sahf ; add byte ptr cs:[rax - 0x77], cl ; ret 0x8d48
0x00000000000ef65e : sahf ; and al, 0xfffffffffffffff9 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000160495 : sahf ; call qword ptr [rdx]
0x000000000016f969 : sahf ; cld ; jmp rax
0x000000000015fde9 : sahf ; cld ; push qword ptr [rax - 0x61] ; cld ; jmp rax
0x0000000000174dd5 : sahf ; cli ; call rax
0x0000000000161c5d : sahf ; idiv bh ; call 0x21161309
0x00000000000025c2 : sahf ; jl 0x2557 ; loop 0x25a2 ; ret 0x23cb
0x00000000000025c1 : sahf ; jl 0x2558 ; loop 0x25a3 ; ret 0x23cb
0x000000000016048d : sahf ; jmp qword ptr [rax]
0x0000000000160491 : sahf ; lcall ptr [rcx] ; sahf ; call qword ptr [rdx]
0x00000000000b2f0e : sahf ; nop ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012497e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000031472 : sahf ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016ed00 : sahf ; pop rcx ; cld ; jmp qword ptr [rax]
0x00000000000abb6c : sahf ; ret 0x2941
0x000000000015b765 : sahf ; ret 0x38ae
0x0000000000047dd0 : sahf ; ret 0xc220
0x0000000000046cb0 : sahf ; ret 0xca20
0x000000000000243f : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x000000000016e561 : sahf ; std ; call qword ptr [rdx]
0x000000000016e581 : sahf ; std ; inc dword ptr [rcx] ; lahf ; std ; call rcx
0x000000000016e571 : sahf ; std ; push qword ptr [rax] ; lahf ; std ; jmp qword ptr [rax]
0x0000000000160931 : sal ah, -1 ; nop ; ret 0xfff4
0x000000000016eae0 : sal al, -5 ; call qword ptr [rax]
0x00000000000e1690 : sal bh, -0x28 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001125a2 : sal bh, -0x28 ; add rsp, 0x18 ; ret
0x00000000001128c9 : sal bh, -0x28 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000dcca6 : sal bh, -0x28 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000679ae : sal bh, -0x28 ; pop rbx ; ret
0x000000000006797b : sal bh, -0x28 ; ret
0x00000000000ab3dd : sal bh, -0x30 ; add eax, 0x16e ; ret
0x00000000000c5409 : sal bh, -0x30 ; and eax, 2 ; ret
0x000000000016eb34 : sal bh, -5 ; call qword ptr [rax]
0x0000000000173705 : sal bh, 1 ; jmp rax
0x0000000000081497 : sal bh, 1 ; ret 0x8000
0x0000000000081357 : sal bh, 1 ; ret 0xc000
0x0000000000081217 : sal bh, 1 ; ret 0xe000
0x00000000000810d7 : sal bh, 1 ; ret 0xf000
0x0000000000080f97 : sal bh, 1 ; ret 0xf800
0x0000000000080e57 : sal bh, 1 ; ret 0xfc00
0x0000000000080d17 : sal bh, 1 ; ret 0xfe00
0x0000000000080bd7 : sal bh, 1 ; ret 0xff00
0x0000000000080a97 : sal bh, 1 ; ret 0xff80
0x0000000000080957 : sal bh, 1 ; ret 0xffc0
0x0000000000080817 : sal bh, 1 ; ret 0xffe0
0x00000000000806d7 : sal bh, 1 ; ret 0xfff0
0x0000000000080597 : sal bh, 1 ; ret 0xfff8
0x0000000000080457 : sal bh, 1 ; ret 0xfffc
0x0000000000080317 : sal bh, 1 ; ret 0xfffe
0x000000000004a884 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000000423bf : sal bl, 1 ; ret
0x000000000016eb28 : sal bl, 1 ; sti ; jmp qword ptr [rax]
0x000000000009bcff : sal byte ptr [rax + rbx + 0x49], -0x7d ; ret 0x4908
0x00000000001121d5 : sal byte ptr [rax + rcx*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x00000000000d154e : sal byte ptr [rax + rdx*2 - 0xd], 1 ; ret
0x00000000000233dd : sal byte ptr [rax + rsi + 0x48], -0x7d ; ret
0x00000000001038bf : sal byte ptr [rbp + 0x1e], -0x7d ; ret 0x8401
0x000000000010365a : sal byte ptr [rbp + 0x33], cl ; ret
0x0000000000084dc8 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000006f065 : sal byte ptr [rbp + 0x58], cl ; mov rdi, rsi ; call 0x9b348
0x0000000000083c30 : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 8 ; ret
0x00000000000673a0 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000004b8e7 : sal byte ptr [rbp + 5], -0xa ; ret 0x7450
0x000000000014ce00 : sal byte ptr [rbp + 5], 0x5b ; ret
0x00000000000f43d7 : sal byte ptr [rbp + 6], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000033997 : sal byte ptr [rbp + 6], -0xd ; ret
0x00000000000f4ab4 : sal byte ptr [rbp + 9], -0xd ; ret
0x000000000010b5d4 : sal byte ptr [rbp + 9], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000753e4 : sal byte ptr [rbp + 9], cl ; ret
0x00000000001097e6 : sal byte ptr [rbp + rax + 0x48], -0x77 ; out dx, eax ; call rax
0x000000000007e259 : sal byte ptr [rbp + rax + 0x48], cl ; mov dword ptr [rbx], edx ; xor al, al ; pop rbx ; ret
0x000000000010b324 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000011011f : sal byte ptr [rbp + rax + 0x4c], -0x77 ; out dx, eax ; call rax
0x000000000010a1e8 : sal byte ptr [rbp + rcx + 0x48], -0x75 ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000b58a0 : sal byte ptr [rbp + rcx*4 - 0x3a], 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000077245 : sal byte ptr [rbp - 0x10], -0xd ; ret
0x000000000008f705 : sal byte ptr [rbp - 0x10], cl ; ret
0x000000000004290e : sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x00000000000f4cfe : sal byte ptr [rbp - 0x11], cl ; leave ; ret
0x000000000007fb90 : sal byte ptr [rbp - 0x13], -0xd ; ret
0x0000000000099bd0 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000006dfb0 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000008fa0a : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000113c16 : sal byte ptr [rbp - 0x19], cl ; pop rbx ; ret
0x00000000000c0969 : sal byte ptr [rbp - 0x1c], 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000009064b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], -0x38 ; ret
0x00000000000b9ee7 : sal byte ptr [rbp - 0x21], cl ; ret
0x000000000008fa90 : sal byte ptr [rbp - 0x23], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000010c401 : sal byte ptr [rbp - 0x24], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001060f2 : sal byte ptr [rbp - 0x25], cl ; ret
0x000000000008f7a3 : sal byte ptr [rbp - 0x26], -0xd ; ret
0x0000000000032173 : sal byte ptr [rbp - 0x27], cl ; ret
0x00000000000e1c05 : sal byte ptr [rbp - 0x28], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e1c66 : sal byte ptr [rbp - 0x29], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000b9c1f : sal byte ptr [rbp - 0x2b], cl ; xor eax, eax ; ret
0x000000000009bbe2 : sal byte ptr [rbp - 0x35], -0xd ; ret
0x00000000000f4e1c : sal byte ptr [rbp - 0x3f], -0x37 ; ret
0x0000000000083c0d : sal byte ptr [rbp - 0x42], 0x48 ; add esp, 8 ; ret
0x000000000010bcc9 : sal byte ptr [rbp - 0x4b], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000160120 : sal byte ptr [rbp - 0xd], -1 ; loopne 0x1601a2 ; call qword ptr [rax]
0x000000000007fc3a : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000f49c0 : sal byte ptr [rbp - 0xf], 0x5a ; pop r10 ; ret
0x000000000002156a : sal byte ptr [rbx + 0x48], -0x75 ; jnp 0x21590 ; call rax
0x0000000000020f9a : sal byte ptr [rbx + 0x49], cl ; mov edi, dword ptr [rdi + 0x18] ; call rdx
0x00000000000e2ab2 : sal byte ptr [rbx + rax + 0x48], -0x77 ; adc bl, dh ; ret
0x0000000000077fb2 : sal byte ptr [rbx + rax*2 + 0x48], -0x7b ; ror byte ptr [rdi], -0x7c ; ret 0
0x0000000000081dd2 : sal byte ptr [rbx + rbx + 0x48], cl ; bsf eax, edx ; ret
0x000000000010ad12 : sal byte ptr [rbx + rcx + 0x31], -0x40 ; ret
0x00000000000e31f5 : sal byte ptr [rbx + rcx + 0x48], -0x7d ; ret 0x4808
0x0000000000113182 : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x000000000002e869 : sal byte ptr [rbx + rdx + 0x48], -0x7d ; ret 0x4901
0x000000000004effe : sal byte ptr [rbx + rsi*2 + 0x41], 0x39 ; ret 0x4675
0x0000000000160108 : sal byte ptr [rbx + rsi*8 - 1], 1 ; lock je 0x160109 ; call qword ptr [rax]
0x000000000015fc70 : sal byte ptr [rbx - 0xe], 1 ; jmp rax
0x00000000000c127d : sal byte ptr [rcx + rax*2 - 0x7d], -0x3b ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000008d1f1 : sal byte ptr [rcx + rbp*8 + 0x31], -0x40 ; ret
0x00000000000eea2c : sal byte ptr [rcx + rdx*4 - 0x3a], 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011310d : sal byte ptr [rcx + rdx*8 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000015fc6c : sal byte ptr [rcx - 0xe], -1 ; sal byte ptr [rbx - 0xe], 1 ; jmp rax
0x00000000000f43c6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], -6 ; setae al ; ret
0x00000000000201cd : sal byte ptr [rcx], cl ; shr al, 0x24 ; mov al, 0xb ; add byte ptr [rcx], bh ; ret
0x000000000002f956 : sal byte ptr [rdi + 0x48], -0x7d ; ret 0xeb04
0x00000000000b57e0 : sal byte ptr [rdi + rax - 0x3a], 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000001cff0 : sal byte ptr [rdi + rax], 1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000106b96 : sal byte ptr [rdi + rbx + 0x48], -0x7d ; ret
0x000000000016014c : sal byte ptr [rdi - 0xd], -1 ; lock ja 0x16014d ; jmp qword ptr [rax]
0x0000000000174970 : sal byte ptr [rdx + rax], 0 ; loopne 0x1749b2 ; cli ; jmp rax
0x00000000000c090b : sal byte ptr [rdx + rbx*8 + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000081be3 : sal byte ptr [rdx + rcx + 0x48], cl ; bsf eax, edx ; ret
0x000000000006aa5b : sal byte ptr [rdx + rcx*2 + 0x5b], 1 ; ret
0x0000000000090ae3 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x000000000009d23d : sal byte ptr [rdx + rdx + 0x48], -0x7d ; ret
0x000000000007fe33 : sal byte ptr [rdx + rdx + 0x48], -1 ; ret 0x2288
0x000000000008fddb : sal byte ptr [rdx + rdx*8 + 0xf], -0x43 ; ror byte ptr [rax + 1], -8 ; ret
0x0000000000183ff0 : sal byte ptr [rdx], -0xd ; call qword ptr [rdx]
0x0000000000171f40 : sal byte ptr [rdx], 1 ; add al, al ; in eax, dx ; call qword ptr [rax]
0x0000000000174998 : sal byte ptr [rip + 0x39400002], -6 ; call qword ptr [rax]
0x0000000000117ed7 : sal byte ptr [rsi + rax + 0x31], -0x40 ; ret
0x000000000010f00a : sal byte ptr [rsi + rax + 0x48], -0x73 ; jge 0x10f028 ; call rax
0x0000000000113c9a : sal byte ptr [rsi + rax + 0x48], -0x73 ; jge 0x113cb8 ; call rax
0x00000000001142f3 : sal byte ptr [rsi + rax + 0x48], -0x73 ; jge 0x114311 ; call rax
0x0000000000110cbe : sal byte ptr [rsi + rax + 0x48], -0x73 ; jnp 0x110d34 ; call rax
0x00000000001116de : sal byte ptr [rsi + rax + 0x48], -0x73 ; jnp 0x111744 ; call rax
0x00000000000ee909 : sal byte ptr [rsi + rcx + 0x48], -0x77 ; fimul dword ptr [rax - 0x7d] ; ret
0x00000000000e6d87 : sal byte ptr [rsi + rcx + 0x48], 0x39 ; ret
0x00000000000f1297 : sal byte ptr [rsi + rdx + 0x48], -0x7d ; ret
0x00000000000ff10f : sal byte ptr [rsi + rsi*2 + 0x48], -0x7d ; ret
0x0000000000081b87 : sal byte ptr [rsi + rsi*2 + 0x48], cl ; bsf eax, edx ; ret
0x0000000000175340 : sal byte ptr [rsi], 1 ; add byte ptr [rax], al ; leave ; std ; call rax
0x00000000000a9761 : sal byte ptr [rsp + rcx + 0x48], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000818f1 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000008d199 : sal byte ptr [rsp + rcx*2 + 0x31], -0x40 ; ret
0x000000000016f640 : sal byte ptr [rsp + rdi*8 - 1], 0x60 ; jl 0x16f64a ; jmp rax
0x0000000000186b20 : sal ch, 1 ; hlt ; call qword ptr [rbx]
0x0000000000189df9 : sal ch, 1 ; jmp rax
0x0000000000189f59 : sal ch, cl ; jmp qword ptr [rcx]
0x000000000017194d : sal cl, cl ; call rax
0x000000000009a1d9 : sal dh, -0x3a ; lock je 0x9a1aa ; movzx eax, dl ; pop rbx ; ret
0x0000000000170964 : sal dl, -0x13 ; call rax
0x000000000008f7fd : sal dword ptr [rax + rsi*8 - 0xd], 1 ; ret
0x000000000009b758 : sal dword ptr [rbp - 0x1b], 1 ; sub eax, r8d ; ret
0x000000000016e7bc : sal dword ptr [rbp - 0x29e70003], -5 ; jmp rax
0x000000000016e798 : sal dword ptr [rbp - 0x4a3e0003], -3 ; call qword ptr [rax]
0x000000000016e778 : sal dword ptr [rbp - 0x4a3e0003], -3 ; jmp qword ptr [rax]
0x000000000016e6c8 : sal dword ptr [rbp - 0x4a3e0003], -3 ; jmp rcx
0x0000000000031470 : sal dword ptr [rbp - 0x62], 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000090331 : sal dword ptr [rbp - 0xc], 1 ; ret
0x0000000000115fc6 : sal dword ptr [rbx + 7], 1 ; ret
0x0000000000115ea1 : sal dword ptr [rcx], -0x40 ; cmp rdx, rcx ; je 0x115ec1 ; ret
0x000000000008f967 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x000000000007fb49 : sal dword ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x00000000000a83b0 : sal dword ptr [rdx + 0x4d0f4800], cl ; ret 0xc35b
0x00000000000a8395 : sal dword ptr [rdx + 0x4e0f48ff], cl ; ret 0xc35b
0x000000000010617d : sal dword ptr [rdx + rdx + 0x48], -0x7d ; ret
0x0000000000189e81 : sal ebp, 1 ; jmp qword ptr [rcx]
0x00000000000c2380 : sal ebp, 1 ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000333ec : sal ebx, -0x3d ; nop ; addss xmm0, xmm1 ; ret
0x0000000000185079 : sal ebx, 1 ; jmp rdx
0x0000000000127025 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000017370d : sal edi, 1 ; call qword ptr [rax]
0x00000000001923a1 : sal edi, 1 ; jmp qword ptr [rax]
0x0000000000192409 : sal edi, cl ; call rdx
0x0000000000171b6d : sal edx, -1 ; lock sbb byte ptr [rcx], al ; add byte ptr [rax], dh ; ret 0xfff2
0x0000000000189e98 : sal rbp, 1 ; jmp qword ptr [rcx]
0x0000000000182a3d : salc ; add byte ptr [rax], al ; rcr byte ptr [rdi - 0xe] ; jmp qword ptr [rcx]
0x0000000000149cf6 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000173c29 : salc ; add dword ptr [rax], eax ; loopne 0x173cab ; clc ; call rax
0x000000000010efab : salc ; add rdi, 0x10 ; jmp rcx
0x000000000012a366 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000014c441 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f3279 : salc ; call rax
0x000000000014be0b : salc ; clc ; ret
0x00000000000efadc : salc ; cmovne eax, ecx ; ret
0x00000000000e0985 : salc ; ja 0xe09b4 ; ret
0x000000000017007d : salc ; jmp 0x170081
0x000000000003e205 : salc ; jmp 0x3dc9f
0x00000000000c087b : salc ; jne 0xc0884 ; ret
0x00000000000e2b28 : salc ; jne 0xe2b19 ; mov byte ptr [rcx - 1], 0 ; ret
0x000000000006ec30 : salc ; mov eax, 0xffffffff ; ja 0x6ec49 ; ret
0x0000000000001bec : salc ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x000000000007e873 : salc ; mov qword ptr [rax + 8], rsi ; ret
0x000000000005b828 : salc ; mov r15, r13 ; jmp 0x57aec
0x000000000009bd19 : salc ; mov rax, rdi ; nop dword ptr [rax] ; ret
0x00000000000a8265 : salc ; mov rdi, rbp ; sub rsp, 8 ; call r12
0x00000000000022d4 : salc ; ret
0x00000000000025c6 : salc ; ret 0x23cb
0x000000000015fe59 : salc ; std ; call rax
0x00000000000da34c : salc ; std ; dec ecx ; ret
0x000000000016e7e1 : salc ; sti ; call rax
0x000000000016e8c5 : salc ; sti ; inc dword ptr [rax - 0x28] ; sti ; jmp qword ptr [rax]
0x000000000016e7c1 : salc ; sti ; jmp rax
0x000000000016e8e5 : salc ; sti ; push rax ; xlatb ; sti ; call rax
0x0000000000174100 : sar al, 1 ; add dword ptr [rax], eax ; lock xor bh, cl ; call qword ptr [rax]
0x0000000000062e1b : sar bh, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000000c530c : sar bh, cl ; dec dword ptr [rbp - 0x7cb7febd] ; ret
0x0000000000172bcc : sar bl, -0xa ; jmp rax
0x000000000016e939 : sar bl, 1 ; jmp rax
0x000000000011aa92 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000029bfb : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x00000000001164f1 : sar byte ptr [rax + 1], cl ; jne 0x116508 ; ret
0x0000000000116531 : sar byte ptr [rax + 1], cl ; jne 0x116548 ; ret
0x00000000000d673e : sar byte ptr [rax + 5], -0x77 ; ret 0x440f
0x000000000007d517 : sar byte ptr [rax + 6], -0xd ; ret
0x000000000007156c : sar byte ptr [rax + 9], -0xd ; ret
0x000000000016017c : sar byte ptr [rax - 0xd], -1 ; sar byte ptr [rax - 0xd], 1 ; jmp rax
0x0000000000160180 : sar byte ptr [rax - 0xd], 1 ; jmp rax
0x00000000000c5525 : sar byte ptr [rax], 0xe ; je 0xc54b4 ; pop rbx ; ret
0x0000000000170cb0 : sar byte ptr [rbp - 0x2a100000], 1 ; out dx, eax ; jmp qword ptr [rax]
0x00000000001612c0 : sar byte ptr [rbp - 0xb], -1 ; adc byte ptr [rsi - 0xb], bh ; jmp qword ptr [rax]
0x00000000001612bc : sar byte ptr [rbp - 0xb], 1 ; inc eax ; jge 0x1612bf ; call qword ptr [rax]
0x0000000000160208 : sar byte ptr [rbx - 0xd], -1 ; sar byte ptr [rbx - 0xd], 1 ; jmp rax
0x000000000016020c : sar byte ptr [rbx - 0xd], 1 ; jmp rax
0x00000000001720a8 : sar byte ptr [rbx], 1 ; add dword ptr [rax], eax ; loopne 0x172104 ; hlt ; jmp qword ptr [rax]
0x000000000017137c : sar byte ptr [rcx - 0x10], 1 ; jmp rax
0x00000000001721ac : sar byte ptr [rcx - 0xc], 1 ; call rax
0x00000000001601a4 : sar byte ptr [rcx - 0xd], 1 ; push rax ; jns 0x1601a5 ; call qword ptr [rax]
0x0000000000115fc4 : sar byte ptr [rcx], -0x2f ; jae 0x115fd5 ; ret
0x0000000000116004 : sar byte ptr [rcx], -0x2f ; jae 0x116015 ; ret
0x00000000001724f4 : sar byte ptr [rcx], -0xb ; jmp qword ptr [rax]
0x0000000000020669 : sar byte ptr [rdi + rbx*2], 0xf ; xchg eax, esp ; ret 0x944
0x00000000000e8213 : sar byte ptr [rdi + rdi + 0x74], 1 ; ret
0x0000000000170d10 : sar byte ptr [rdi - 0x21b00000], -0x11 ; jmp rax
0x000000000015fe30 : sar byte ptr [rdi - 0x3e3f0003], -3 ; inc eax ; ret
0x00000000001601c4 : sar byte ptr [rdx - 0xd], 1 ; push rax ; jp 0x1601c5 ; call qword ptr [rax]
0x0000000000002b65 : sar byte ptr [rdx], cl ; adc al, -0x19 ; ret
0x000000000008d225 : sar byte ptr [rdx], cl ; cmove rax, rdx ; ret
0x00000000000b849c : sar byte ptr [rsi + 9], 1 ; ret
0x000000000015c0ff : sar byte ptr [rsi + rax*2], -8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000162f7c : sar byte ptr [rsi - 6], 1 ; inc eax ; jle 0x162f84 ; call qword ptr [rax]
0x0000000000172504 : sar byte ptr [rsi], -0xb ; jmp qword ptr [rax]
0x000000000017026c : sar byte ptr [rsp + rbp*8], 1 ; call qword ptr [rax]
0x00000000000461c6 : sar dl, -1 ; call qword ptr [rax]
0x0000000000164515 : sar dl, 1 ; call rsp
0x000000000001f509 : sar dword ptr [rax - 1], 0xf ; ret 0xcaeb
0x0000000000033573 : sar eax, 0x10 ; ret
0x00000000000b5fd9 : sar eax, 0x1f ; add rsp, 8 ; ret
0x00000000000e085d : sar eax, 0x1f ; ret
0x000000000003352b : sar eax, 0x1f ; sub ecx, edx ; not eax ; and eax, ecx ; ret
0x0000000000003aa1 : sar eax, 1 ; cmp eax, ecx ; mov bl, -9 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000006ea3c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000710d0 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000006f109 : sar eax, 2 ; ret
0x00000000000f886d : sar eax, 6 ; ret
0x0000000000175425 : sar ebp, 1 ; jmp qword ptr [rax]
0x000000000016e949 : sar ebx, -1 ; nop ; ret 0xfffb
0x000000000016e93d : sar ebx, 1 ; jmp qword ptr [rax]
0x000000000015be63 : sar ecx, 1 ; jnp 0x15be24 ; ret
0x00000000000bbf27 : sar edi, cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000063052 : sar edi, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000073358 : sar edx, -1 ; xor eax, eax ; pop rbx ; ret
0x000000000003320b : sar edx, 0x1f ; not edx ; and eax, edx ; ret
0x00000000000369e4 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x0000000000032e2d : sar edx, 0x3f ; not edx ; and eax, edx ; ret
0x00000000000369f7 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000084f97 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000017f2c1 : sar esp, cl ; call qword ptr [rdx]
0x0000000000073357 : sar r10d, -1 ; xor eax, eax ; pop rbx ; ret
0x00000000000c530b : sar r15b, cl ; dec dword ptr [rbp - 0x7cb7febd] ; ret
0x000000000006ea3b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000006f108 : sar rax, 2 ; ret
0x00000000000f886c : sar rax, 6 ; ret
0x0000000000032e2c : sar rdx, 0x3f ; not edx ; and eax, edx ; ret
0x0000000000084f96 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000018a348 : sbb ah, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000119aff : sbb ah, bh ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000016eca1 : sbb ah, bh ; jmp qword ptr [rax]
0x0000000000020d7e : sbb ah, byte ptr [rax] ; call rax
0x0000000000194454 : sbb al, -0x10 ; add dword ptr [rax], eax ; js 0x194481 ; clc ; call qword ptr [rdx]
0x0000000000183954 : sbb al, -0x1b ; add byte ptr [rax], al ; sbb byte ptr [rax], bl ; call rdi
0x0000000000181954 : sbb al, -0x3b ; add byte ptr [rax], al ; cwde ; mov bh, -0xf ; call qword ptr [rax]
0x0000000000181054 : sbb al, -0x44 ; add byte ptr [rax], al ; call 0xffffffffe41801d3
0x00000000000c05f3 : sbb al, -0x48 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000018fa54 : sbb al, -0x5a ; add dword ptr [rax], eax ; sub byte ptr [rdi - 9], cl ; jmp qword ptr [rcx]
0x000000000018ee54 : sbb al, -0x66 ; add dword ptr [rax], eax ; call 0x1118e570
0x000000000017db54 : sbb al, -0x79 ; add byte ptr [rax], al ; xchg dil, bpl ; jmp qword ptr [rcx]
0x00000000000e34f3 : sbb al, -0x7d ; ret
0x000000000018b511 : sbb al, -0xa ; call rdx
0x00000000001716a5 : sbb al, -0xf ; call rax
0x00000000000b77d0 : sbb al, -3 ; sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000016ecad : sbb al, -4 ; call qword ptr [rax]
0x000000000016e441 : sbb al, -5 ; call qword ptr [rax]
0x0000000000118463 : sbb al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000daaf9 : sbb al, 0 ; add byte ptr [rax], al ; syscall ; neg eax ; ret
0x0000000000176f54 : sbb al, 0x1b ; add byte ptr [rax], al ; test al, 0x5e ; jmp 0x176f62
0x0000000000177254 : sbb al, 0x1e ; add byte ptr [rax], al ; test al, 0x7a ; jmp 0x177262
0x00000000000f327e : sbb al, 0x20 ; je 0xf32e6 ; xor eax, eax ; pop rbx ; ret
0x00000000000f327d : sbb al, 0x20 ; je 0xf32e7 ; xor eax, eax ; pop rbx ; ret
0x0000000000178754 : sbb al, 0x33 ; add byte ptr [rax], al ; cwde ; loop 0x17874d ; call qword ptr [rcx]
0x0000000000002f68 : sbb al, 0x44 ; nop ; ret 0x5bdb
0x0000000000189f54 : sbb al, 0x4b ; add dword ptr [rax], eax ; or dl, dl ; cmc ; jmp qword ptr [rcx]
0x000000000018a854 : sbb al, 0x54 ; add dword ptr [rax], eax ; mov bl, ch ; cmc ; jmp qword ptr [rcx]
0x0000000000077e74 : sbb al, 0x7c ; xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000000454 : sbb al, 0xc ; ret 0x4412
0x0000000000029443 : sbb al, 0xf ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1376
0x0000000000187105 : sbb al, 1 ; add byte ptr [rax + 0x31], cl ; cmc ; call qword ptr [rsi]
0x0000000000176e65 : sbb al, byte ptr [rax] ; add byte ptr [rax + 0x5e], bh ; jmp 0x176e71
0x0000000000176e4d : sbb al, byte ptr [rax] ; add byte ptr [rax + 0x5e], dh ; jmp 0x176e59
0x0000000000007c80 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000791f3 : sbb al, byte ptr [rbx + 0x29480fe0] ; ret
0x000000000009bd0c : sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x00000000000ffea7 : sbb al, ch ; ret
0x000000000018ab18 : sbb al, dh ; cmc ; jmp qword ptr [rcx]
0x000000000016ece5 : sbb bh, ah ; jmp rax
0x0000000000193e21 : sbb bh, al ; call qword ptr [rcx]
0x0000000000193e99 : sbb bh, al ; jmp qword ptr [rcx]
0x00000000000c05aa : sbb bh, byte ptr [rax + 2] ; ret
0x0000000000172d8d : sbb bh, dh ; call rax
0x000000000017ff31 : sbb bh, dl ; call qword ptr [rax]
0x0000000000174885 : sbb bh, dl ; jmp rax
0x00000000001787f8 : sbb bl, ah ; jmp 0x1787fe
0x00000000000e47ca : sbb bl, byte ptr [rbx + 0xf660008] ; ret
0x000000000015abe5 : sbb bl, byte ptr [rsi] ; ret
0x0000000000178c18 : sbb bl, ch ; jmp 0x178c1e
0x0000000000178c48 : sbb bl, ch ; jmp 0x178c4e
0x0000000000183959 : sbb bl, dh ; call rdi
0x00000000000334d0 : sbb bl, dh ; ret
0x000000000008afd6 : sbb byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000007265e : sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x000000000011d1df : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000115f21 : sbb byte ptr [r8 + 1], r15b ; ret
0x0000000000116246 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000000996b4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000996d6 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000099714 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000007265f : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000007e7cd : sbb byte ptr [rax + 0x33], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x6174
0x0000000000078c22 : sbb byte ptr [rax + 0x39], cl ; ret
0x00000000000c1c3b : sbb byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000002b9be : sbb byte ptr [rax + 0x39], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000011d1e0 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000000d89eb : sbb byte ptr [rax + 0x63], cl ; adc al, -0x70 ; add rax, rdx ; jmp rax
0x00000000000f7223 : sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d1ab7b
0x0000000000115f22 : sbb byte ptr [rax + 1], bh ; ret
0x0000000000065b07 : sbb byte ptr [rax + rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xba66
0x00000000000b45df : sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000c4dbe : sbb byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000d5e60 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000d7c2f : sbb byte ptr [rax - 0x77], cl ; ret
0x000000000007f8e6 : sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000a9a18 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000074455 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000b4e78 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000dd21a : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008ab7e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000007c3f7 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000025224 : sbb byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000008ab7d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000100301 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000076668 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000116247 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000072eb6 : sbb byte ptr [rax], al ; setne al ; ret
0x0000000000183958 : sbb byte ptr [rax], bl ; call rdi
0x0000000000002440 : sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000996b5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000996d7 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000099715 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000003ac4f : sbb byte ptr [rbp + 0x31], al ; rol byte ptr [rbp - 0x6af0be13], cl ; ret 0xc748
0x0000000000042d19 : sbb byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x000000000010caf4 : sbb byte ptr [rbp - 0x77], cl ; ret
0x00000000000db022 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000725c9 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007fada : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000072677 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010a00f : sbb byte ptr [rbx + 0x5d], bl ; pop r13 ; pop r14 ; ret
0x00000000000331db : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000077287 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000115ebb : sbb byte ptr [rcx + 0x1b02857], cl ; ret
0x000000000002526a : sbb byte ptr [rcx + 0x39], cl ; ret
0x00000000000b4936 : sbb byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000006e56b : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000001170b3 : sbb byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x000000000009cc68 : sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x000000000009c9b0 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r14 ; call rbx
0x00000000000c2b3e : sbb byte ptr [rcx - 0x3fcec7ba], cl ; ret
0x00000000000f38ab : sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x000000000008f51e : sbb byte ptr [rcx - 0x76b703b9], cl ; clc ; ret
0x000000000009bd01 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000171b71 : sbb byte ptr [rcx], al ; add byte ptr [rax], dh ; ret 0xfff2
0x0000000000119193 : sbb byte ptr [rcx], al ; je 0x1191a6 ; xor eax, eax ; ret
0x00000000000e07c2 : sbb byte ptr [rcx], al ; ret 0x8d48
0x000000000010b294 : sbb byte ptr [rcx], ch ; add byte ptr [rax - 0x75], cl ; add al, -0x3e ; jmp rax
0x00000000000c5777 : sbb byte ptr [rcx], dh ; leave ; mov edx, r8d ; jmp 0xc578e
0x0000000000070ba7 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000f7281 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x00000000000323f3 : sbb byte ptr [rdi + rcx - 0x51], al ; ret 0xd231
0x0000000000067978 : sbb byte ptr [rdi], cl ; mov dh, -0x40 ; neg eax ; ret
0x00000000001153e8 : sbb byte ptr [rdi], cl ; mov dh, -0x40 ; pop rbx ; pop rbp ; ret
0x00000000001163ce : sbb byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x000000000010b788 : sbb byte ptr [rdi], cl ; test dh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000bf884 : sbb byte ptr [rdi], cl ; xchg ebp, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000002047 : sbb byte ptr [rdx - 0x1a], dl ; ret
0x000000000016e4c0 : sbb byte ptr [rdx - 5], -1 ; rcr byte ptr [rbx - 5] ; jmp qword ptr [rax]
0x000000000016e570 : sbb byte ptr [rsi - 0x60cf0003], -3 ; jmp qword ptr [rax]
0x00000000000ea782 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x00000000000ea781 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000016ecf0 : sbb byte ptr [rsi], -4 ; call rax
0x0000000000177dd8 : sbb ch, al ; jmp 0x177dde
0x000000000016fd3d : sbb ch, bl ; jmp qword ptr [rax]
0x00000000000f61e2 : sbb ch, dl ; hlt ; dec dword ptr [rax - 0x7f] ; ret
0x000000000018c5c1 : sbb cl, bh ; jmp qword ptr [rsi]
0x00000000000da867 : sbb cl, byte ptr [rax - 0x77] ; ret 0x894c
0x000000000011a2d3 : sbb cl, byte ptr [rax - 0x7d] ; ret
0x000000000008dc47 : sbb cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000001077b3 : sbb cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x0000000000083fdf : sbb cl, byte ptr [rcx + rcx*4 - 0x30] ; pop rbx ; ret
0x000000000009610f : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000011ebfd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000120d6d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e7ed : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x000000000011e2f9 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011eb09 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000124d1a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000012453a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000012492a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012414a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001218cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001210ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000011e57d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000012088d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000011e8bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x000000000011ebd9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001242e9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011eca9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001213ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120bcd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001203ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000012158d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000011ea5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011e24d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000011e64d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00000000001247da : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000123ffa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012510a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011eb2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000011e31d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000001206ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e3bf : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011e71d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000120823 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121523 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121043 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001246db : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012500b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e98d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000121863 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120b63 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000120683 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121383 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000012482b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012404b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e3e3 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011ac12 : sbb cl, byte ptr [rsi] ; sub byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x000000000018a708 : sbb cl, ch ; cmc ; jmp qword ptr [rcx]
0x0000000000172d9d : sbb dh, bh ; jmp qword ptr [rax]
0x00000000000da6e4 : sbb dh, bl ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000018b461 : sbb dh, dh ; call rdi
0x00000000000f0c92 : sbb dh, dh ; ret 0x7504
0x0000000000026e02 : sbb dh, dh ; ret 0x8b01
0x00000000000f1be2 : sbb dh, dh ; ret 0x8b08
0x000000000016e7c0 : sbb dh, dl ; sti ; jmp rax
0x000000000018a128 : sbb dl, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000160fc8 : sbb dl, byte ptr [rsi] ; cmc ; call rsp
0x0000000000161060 : sbb dl, byte ptr [rsi] ; cmc ; jmp rbx
0x000000000016108c : sbb dl, byte ptr [rsi] ; cmc ; jmp rsp
0x000000000015fbc9 : sbb dl, dh ; jmp rax
0x0000000000122028 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000002fc9d : sbb dword ptr [rax + 1], ecx ; ret
0x00000000000c0583 : sbb dword ptr [rax + 1], edi ; ret
0x00000000000e6d16 : sbb dword ptr [rax - 0x77], ecx ; ret 0xf66
0x000000000008ebe6 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000176e1d : sbb dword ptr [rax], eax ; add byte ptr [rax + 0x5e], ah ; jmp 0x176e29
0x0000000000176e05 : sbb dword ptr [rax], eax ; add byte ptr [rax + 0x5e], bl ; jmp 0x176e11
0x0000000000176e35 : sbb dword ptr [rax], eax ; add byte ptr [rax + 0x5e], ch ; jmp 0x176e41
0x0000000000176d5d : sbb dword ptr [rax], eax ; add byte ptr [rax + 0x5e], dl ; jmp 0x176d69
0x0000000000176ded : sbb dword ptr [rax], eax ; add byte ptr [rax + 0x5e], dl ; jmp 0x176df9
0x0000000000121fb1 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000122029 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000b8ca5 : sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x000000000015d49d : sbb dword ptr [rbx], edx ; mov ch, -0x67 ; in eax, -1 ; lahf ; mov dh, -0x39 ; ret 0xe71f
0x000000000006237f : sbb dword ptr [rcx + 0x39], ecx ; ret 0xf4c
0x000000000010388a : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x0000000000162610 : sbb dword ptr [rcx - 9], ebx ; call rbx
0x0000000000171b91 : sbb dword ptr [rcx], eax ; add al, ah ; ret 0xfff2
0x0000000000171b79 : sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x3e], al ; jmp qword ptr [rax]
0x000000000009782e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000001caf : sbb dword ptr [rdx + 0x55], esp ; je 0x1ce1 ; ret
0x0000000000085438 : sbb dword ptr [rdx], ecx ; add dh, dh ; ret 0x7540
0x0000000000145fbc : sbb eax, -1 ; ret
0x00000000000f530b : sbb eax, 0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000041af2 : sbb eax, 0x124e1d ; mov rax, rbx ; pop rbx ; ret
0x000000000016eced : sbb eax, 0x1e80fffc ; cld ; call rax
0x00000000000ea341 : sbb eax, 0x2b2f7a ; pop rbx ; ret
0x000000000018718d : sbb eax, 0x31100001 ; cmc ; call qword ptr [rax]
0x000000000018714d : sbb eax, 0x31400001 ; cmc ; call qword ptr [rax]
0x0000000000041af3 : sbb eax, 0x4800124e ; mov eax, ebx ; pop rbx ; ret
0x00000000000fe98f : sbb eax, 0x48fffff1 ; sub esp, -0x80 ; pop rbx ; ret
0x0000000000096199 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x00000000000f3272 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x00000000000978ed : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x0000000000177175 : sbb eax, 0x64880000 ; jmp 0x177181
0x00000000001871ad : sbb eax, 0x68b00001 ; stc ; call qword ptr [rax]
0x000000000018716d : sbb eax, 0x68e00001 ; stc ; call qword ptr [rax]
0x000000000017720d : sbb eax, 0x7ab00000 ; jmp 0x177219
0x00000000000e6d9a : sbb eax, 0x7fb75 ; mov rax, rbx ; pop rbx ; ret
0x0000000000036d6f : sbb eax, 0x89000004 ; ret 0x3d83
0x000000000006b064 : sbb eax, 0xc7480033 ; ret 0xffff
0x00000000001745e9 : sbb eax, 0xc9700002 ; stc ; call qword ptr [rax]
0x0000000000069b2d : sbb eax, 0xf8830007 ; push qword ptr [rbx + rbp*4 - 0x77] ; ret 0xe283
0x0000000000176f9d : sbb eax, dword ptr [rax] ; add al, dh ; pop rsi ; jmp 0x176fa9
0x0000000000121dd1 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121e49 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000003f8da : sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x00000000000a2477 : sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x9774
0x0000000000171be1 : sbb eax, dword ptr [rcx] ; add byte ptr [rax - 0x32], dl ; jmp qword ptr [rax]
0x0000000000174591 : sbb eax, dword ptr [rdx] ; add byte ptr [rax], ah ; ret
0x0000000000176f9c : sbb eax, dword ptr fs:[rax] ; add al, dh ; pop rsi ; jmp 0x176faa
0x000000000010f260 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x00000000000c541e : sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x0000000000042c5a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00000000000c5408 : sbb eax, eax ; not eax ; and eax, 2 ; ret
0x000000000014b6c5 : sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000193db1 : sbb eax, edi ; call qword ptr [rsi]
0x00000000001182cb : sbb ecx, dword ptr [rax - 0x39] ; ret
0x000000000006aea4 : sbb ecx, dword ptr [rax - 0x39] ; ret 0xffff
0x000000000004f030 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x00000000000ad453 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000050111 : sbb ecx, esi ; xor al, 0 ; call rax
0x000000000016e47d : sbb edi, ebx ; push qword ptr [rax] ; cmp bl, bh ; call qword ptr [rax]
0x000000000016eca9 : sbb edi, esp ; inc eax ; sbb al, -4 ; call qword ptr [rax]
0x000000000015e684 : sbb edx, dword ptr [rcx] ; add byte ptr [rax], al ; mov bl, 0x16 ; add byte ptr [rax], al ; ret 0x16
0x00000000000025bf : sbb esi, dword ptr [rdx] ; sahf ; jl 0x255a ; loop 0x25a5 ; ret 0x23cb
0x00000000000f507e : sbb esi, ebx ; ret
0x0000000000172dcd : sbb esi, edi ; call rax
0x0000000000172de5 : sbb esi, edi ; jmp qword ptr [rax]
0x000000000016ece1 : sbb esp, edi ; call qword ptr [rax - 0x1f0003e6]
0x00000000000a2476 : sbb r8d, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x9774
0x0000000000145fbb : sbb rax, -1 ; ret
0x000000000011fd52 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001902e5 : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; cmp byte ptr [rdi - 9], dh ; call rcx
0x0000000000124d6e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x00000000001893b1 : scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001706d5 : scasb al, byte ptr [rdi] ; in al, dx ; call rax
0x00000000000c808e : scasb al, byte ptr [rdi] ; jae 0xc808c ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000171edd : scasb al, byte ptr [rdi] ; jmp rax
0x0000000000035bbe : scasb al, byte ptr [rdi] ; ret
0x0000000000002f66 : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000033373 : scasd eax, dword ptr [rdi] ; adc eax, dword ptr [rax] ; movaps xmm0, xmm1 ; ret
0x0000000000124e6d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000170ae1 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; mov edi, gs ; jmp rax
0x00000000001903ed : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; rcr bl ; clc ; call qword ptr [rax]
0x0000000000174e95 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000001894a1 : scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x0000000000171865 : scasd eax, dword ptr [rdi] ; int1 ; jmp qword ptr [rax]
0x00000000000f7226 : scasd eax, dword ptr [rdi] ; jmp 0x76d1ab78
0x00000000000e496d : scasd eax, dword ptr [rdi] ; mov esp, 0x415d002b ; pop rsp ; ret
0x000000000011314c : scasd eax, dword ptr [rdi] ; pop rbx ; ret
0x0000000000117844 : scasd eax, dword ptr [rdi] ; ret
0x000000000006fcac : scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000099fc6 : scasd eax, dword ptr [rdi] ; ret 0x68e9
0x00000000000a959a : scasd eax, dword ptr [rdi] ; ret 0x8941
0x0000000000031155 : scasd eax, dword ptr [rdi] ; ret 0x8d48
0x0000000000035066 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x00000000000323f6 : scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000099fb5 : scasd eax, dword ptr [rdi] ; ret 0xda89
0x0000000000099fc3 : scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], -0x51 ; ret 0x68e9
0x0000000000002baf : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efb1 ; ret
0x000000000000258c : scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000000ea805 : seta al ; movzx eax, al ; neg eax ; ret
0x00000000000dcc48 : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000f43cc : setae al ; ret
0x00000000000eb258 : setbe al ; ret
0x00000000000bc428 : sete al ; movzx eax, al ; ret
0x000000000002cc25 : sete al ; ret
0x00000000000d4a30 : setne al ; lea eax, dword ptr [rax + rax*8 + 5] ; ret
0x00000000000d150b : setne al ; movzx eax, al ; cmova eax, edx ; ret
0x00000000000679a9 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000d14ed : setne al ; movzx eax, al ; neg eax ; ret
0x00000000000e4fed : setne al ; movzx eax, al ; pop rbx ; ret
0x00000000000343e6 : setne al ; movzx eax, al ; ret
0x00000000001125a0 : setne al ; neg eax ; add rsp, 0x18 ; ret
0x0000000000072eb8 : setne al ; ret
0x0000000000078e87 : setne dl ; jmp 0x78e95
0x0000000000175421 : sgdt ptr [rax] ; rcl cl ; std ; jmp qword ptr [rax]
0x000000000018a3c0 : shl ah, -0xb ; jmp qword ptr [rcx]
0x000000000003c6cc : shl bh, -1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000018a300 : shl bl, 1 ; cmc ; jmp qword ptr [rcx]
0x0000000000171ca0 : shl byte ptr [rax], 1 ; add dword ptr [rax], eax ; xor byte ptr [rdi], al ; jmp qword ptr [rax]
0x00000000001944a0 : shl byte ptr [rax], 1 ; clc ; jmp qword ptr [rcx]
0x0000000000170968 : shl byte ptr [rbp - 0xc600000], 1 ; in eax, dx ; jmp qword ptr [rax]
0x0000000000160034 : shl byte ptr [rbp - 0xd], -1 ; shl byte ptr [rbp - 0xd], 1 ; jmp rax
0x0000000000160038 : shl byte ptr [rbp - 0xd], 1 ; jmp rax
0x000000000015ffc0 : shl byte ptr [rbx - 0xd], -1 ; shl byte ptr [rbx - 0xd], 1 ; jmp rax
0x000000000015ffc4 : shl byte ptr [rbx - 0xd], 1 ; jmp rax
0x000000000017423c : shl byte ptr [rbx - 7], 1 ; jmp rax
0x000000000016f928 : shl byte ptr [rdi - 0x58af0004], -4 ; jmp rax
0x000000000017246c : shl byte ptr [rdi], 1 ; cmc ; jmp rax
0x000000000016e45c : shl byte ptr [rdi], 1 ; sti ; push qword ptr [rax + 0x29] ; sti ; call qword ptr [rax]
0x00000000000090b8 : shl byte ptr [rdx + 0x11], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000015ff80 : shl byte ptr [rdx - 0xd], -1 ; shl byte ptr [rdx - 0xd], 1 ; jmp rax
0x000000000015ff84 : shl byte ptr [rdx - 0xd], 1 ; jmp rax
0x00000000001716d4 : shl byte ptr [rdx], -0xf ; jmp qword ptr [rax]
0x0000000000099aef : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000032f06 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x0000000000148d6b : shl byte ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000080075 : shl byte ptr [rsi + 0xf], -0x15 ; ret 0xf66
0x0000000000149cb3 : shl byte ptr [rsi + 0xf], -0x29 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000148d82 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000083966 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000083977 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000008fc18 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000148c61 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a9581 : shl byte ptr [rsi - 0x77], cl ; push rbp ; ret 0x6348
0x000000000015fe6c : shl cl, 1 ; std ; call qword ptr [rax]
0x000000000018a570 : shl dh, 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001563a0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x000000000016e5a0 : shl dword ptr [rbx - 0x5bae0003], 1 ; std ; jmp rcx
0x000000000016e590 : shl dword ptr [rcx - 0x5dae0003], 1 ; std ; call rcx
0x000000000016e5bc : shl dword ptr [rdi - 0x57b10003], 1 ; std ; jmp rsi
0x000000000015bfe8 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000016e598 : shl dword ptr [rdx - 0x5cae0003], 1 ; std ; call rcx
0x0000000000148ce6 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009994b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x0000000000083962 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000148d9d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000148d86 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000148d6f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000014782b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000148d01 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000084bec : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000008fe58 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x0000000000148bc1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000103ada : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x0000000000034543 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000431dc : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000043167 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000043136 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000c31c2 : shl edi, 2 ; call 0x1f445
0x00000000000200d9 : shl edi, 4 ; add rdi, rbp ; call rax
0x0000000000036a38 : shl edx, 0x20 ; mov rax, rcx ; or rax, rdx ; ret
0x00000000000c893b : shl edx, 2 ; xor esi, esi ; call 0x854f9
0x00000000000c314d : shl esi, 2 ; call 0x1f435
0x000000000010394b : shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x0000000000103b0c : shl esi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000000431db : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000043166 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000043135 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000034542 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000c31c1 : shl rdi, 2 ; call 0x1f446
0x00000000000200d8 : shl rdi, 4 ; add rdi, rbp ; call rax
0x00000000000c314c : shl rsi, 2 ; call 0x1f436
0x0000000000103b0b : shl rsi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x000000000016ead4 : shr ah, 1 ; sti ; jmp qword ptr [rax]
0x0000000000170d9c : shr al, -0x11 ; call qword ptr [rax]
0x00000000000201cf : shr al, 0x24 ; mov al, 0xb ; add byte ptr [rcx], bh ; ret
0x000000000006ba7f : shr al, 0x2b ; ret 4
0x00000000000e3842 : shr al, 8 ; ret 0xfff6
0x00000000000f4346 : shr ax, 0xe ; and eax, 1 ; ret
0x000000000018aad0 : shr bh, 1 ; cmc ; jmp qword ptr [rcx]
0x000000000011d9e1 : shr bl, -0x1b ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000a963a : shr bl, -0x30 ; movzx esi, word ptr [rbp - 0x40] ; jmp 0xa960d
0x000000000016fffd : shr bl, 1 ; call qword ptr [rax]
0x000000000016ffed : shr bl, 1 ; jmp rax
0x00000000000aacbd : shr bl, cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x8d4c
0x00000000001709c8 : shr byte ptr [rax + 0x56600000], -0x12 ; call qword ptr [rax]
0x0000000000174788 : shr byte ptr [rax], 1 ; add al, byte ptr [rax] ; add byte ptr [rax], -6 ; call qword ptr [rax]
0x00000000000e324b : shr byte ptr [rbx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfff3
0x000000000009064f : shr byte ptr [rcx], -0x38 ; ret
0x00000000000a3ff5 : shr byte ptr [rcx], 1 ; ret
0x00000000000ae369 : shr byte ptr [rcx], cl ; ret 0xf201
0x0000000000084f9b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000dcc4d : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x000000000009c754 : shr byte ptr [rdi], 1 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000016f710 : shr byte ptr [rdx - 0x55af0004], -4 ; jmp rax
0x00000000001747d0 : shr byte ptr [rdx], 2 ; add byte ptr [rax], dl ; or dl, bh ; call qword ptr [rax]
0x0000000000171f44 : shr ch, -0xd ; call qword ptr [rax]
0x00000000000594a6 : shr cl, -6 ; ret 0xffff
0x0000000000173ed0 : shr cl, 1 ; add dword ptr [rax], eax ; jo 0x173ea9 ; clc ; jmp qword ptr [rax]
0x000000000017a969 : shr dh, 1 ; jmp qword ptr [rcx]
0x000000000006321e : shr dl, -1 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000003f8a8 : shr dl, 0x12 ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000029979 : shr dword ptr [rax + 0x41], 0x39 ; ret
0x00000000000e43ea : shr dword ptr [rbx], 0 ; add rsp, 8 ; ret
0x0000000000036bbb : shr dword ptr [rbx], 0x36 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000ae0be : shr dword ptr [rcx], cl ; ret
0x00000000000f8c28 : shr eax, 0x18 ; ret
0x0000000000033231 : shr eax, 0x1f ; ret
0x0000000000149c2c : shr eax, 0x20 ; cmp ecx, eax ; jne 0x149c3f ; xor eax, eax ; ret
0x0000000000032e60 : shr eax, 0x3f ; ret
0x00000000000e83c8 : shr eax, 0xc ; xor al, al ; or eax, edi ; ret
0x000000000009a1ea : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x00000000000f4347 : shr eax, 0xe ; and eax, 1 ; ret
0x0000000000073622 : shr eax, 4 ; and eax, 1 ; ret
0x0000000000103ae0 : shr eax, 4 ; ret
0x0000000000073632 : shr eax, 5 ; and eax, 1 ; ret
0x000000000009a1c9 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000000343ff : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000eb5e8 : shr eax, cl ; and eax, 1 ; nop dword ptr [rax] ; ret
0x000000000008ad01 : shr eax, cl ; or r8, r10 ; mov qword ptr [rdi], r8 ; pop rbx ; ret
0x000000000017003d : shr ebx, 1 ; call rax
0x0000000000103681 : shr ecx, 3 ; mov ecx, ecx ; rep stosq qword ptr [rdi], rax ; ret
0x000000000011cc11 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000034457 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000432ec : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000043271 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000043240 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000079143 : shr ecx, cl ; ret 0
0x000000000005dcd9 : shr ecx, cl ; ret 0xffa2
0x0000000000170c8d : shr edi, 1 ; call rax
0x000000000006eae3 : shr edx, 2 ; sub eax, edx ; ret
0x000000000011675a : shr edx, 3 ; add rax, rcx ; jmp rax
0x0000000000071430 : shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x0000000000071530 : shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x000000000002c759 : shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2c770 ; ret
0x00000000000432eb : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000043270 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000004323f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000032e5f : shr rax, 0x3f ; ret
0x00000000000e83c7 : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x0000000000103adf : shr rax, 4 ; ret
0x000000000006eae2 : shr rdx, 2 ; sub eax, edx ; ret
0x0000000000116759 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x000000000008f6b1 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000008f621 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000d499e : sldt word ptr [rax] ; add byte ptr [rsp + rcx - 0xd], dh ; ret
0x000000000006d3e7 : sldt word ptr [rax] ; mov edx, eax ; jmp 0x6d393
0x000000000006d3e6 : sldt word ptr [rax] ; mov edx, eax ; jmp 0x6d394
0x0000000000155565 : sldt word ptr [rax] ; ret 0xf
0x0000000000171639 : stc ; add byte ptr [rax], al ; add byte ptr [rax], al ; int1 ; jmp qword ptr [rax]
0x0000000000171631 : stc ; add byte ptr [rax], al ; cmp bh, -0x10 ; jmp rax
0x0000000000184d6d : stc ; add byte ptr [rax], al ; ret
0x00000000000abb69 : stc ; add dword ptr [rdi], ecx ; sahf ; ret 0x2941
0x000000000004131f : stc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x543a
0x00000000000ec3a3 : stc ; and eax, 0x8948002b ; ret 0x8d48
0x00000000000e316f : stc ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x8440
0x00000000000abe1e : stc ; and ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd008
0x0000000000174106 : stc ; call qword ptr [rax]
0x000000000002d293 : stc ; call qword ptr [rbx]
0x00000000001740fe : stc ; call rax
0x0000000000161a61 : stc ; cmc ; call qword ptr [rax]
0x0000000000161a49 : stc ; cmc ; push qword ptr [rax] ; cli ; cmc ; call qword ptr [rax]
0x00000000000e6d05 : stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000e1e53 : stc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000008bcc0 : stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000008cd76 : stc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000174216 : stc ; dec dword ptr [rax] ; add byte ptr [rdx], al ; add byte ptr [rax], al ; push rdi ; stc ; jmp qword ptr [rax]
0x00000000000d4c72 : stc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x840f
0x0000000000174276 : stc ; dec eax ; add al, byte ptr [rdx] ; add byte ptr [rax + 0x6c], al ; stc ; jmp rax
0x00000000001743be : stc ; dec eax ; lar eax, word ptr [rax] ; mov al, -0x6c ; stc ; jmp rax
0x0000000000174296 : stc ; inc dword ptr [rax] ; add al, 2 ; add al, al ; jo 0x1742a1 ; jmp qword ptr [rax]
0x00000000000e3539 : stc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00000000001742be : stc ; inc eax ; add al, 2 ; add byte ptr [rax], dl ; jbe 0x1742c9 ; call qword ptr [rax]
0x00000000001745e6 : stc ; inc eax ; sbb eax, 0xc9700002 ; stc ; call qword ptr [rax]
0x0000000000123e22 : stc ; je 0x123dee ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001254b2 : stc ; je 0x12547e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000017403e : stc ; jmp qword ptr [rax]
0x000000000018c5c2 : stc ; jmp qword ptr [rsi]
0x000000000017400e : stc ; jmp rax
0x000000000015be64 : stc ; jnp 0x15be23 ; ret
0x000000000017458e : stc ; lcall ptr [rax + 0x2000021b] ; ret
0x0000000000174006 : stc ; lcall ptr [rax - 0xffffe0e] ; add ecx, edi ; jmp rax
0x000000000017436e : stc ; ljmp ptr [rax + 0x5000020c] ; xchg eax, ecx ; stc ; call qword ptr [rax]
0x000000000012cb48 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000008f955 : stc ; mov qword ptr [rdx], rcx ; ret
0x000000000008f59b : stc ; mov rax, rdi ; ret
0x00000000000b0bf1 : stc ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000000d154b : stc ; or cl, byte ptr [rcx - 0xcaf8b30] ; ret
0x0000000000113277 : stc ; pop rbx ; mov qword ptr [r12], rcx ; pop rbp ; pop r12 ; ret
0x00000000001743e6 : stc ; push qword ptr [rax + 0x10] ; add al, byte ptr [rax] ; nop ; cwde ; stc ; jmp rax
0x000000000017408e : stc ; push qword ptr [rax + 0x500001f6] ; and cl, bh ; jmp rax
0x0000000000174286 : stc ; push qword ptr [rax + 3] ; add al, byte ptr [rax] ; mov al, 0x6f ; stc ; call rax
0x000000000004332d : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000009bf8d : stc ; push qword ptr [rbp - 0x11] ; sub rax, 4 ; ret
0x0000000000090222 : stc ; push qword ptr [rbp - 0xe] ; sub rax, 1 ; ret
0x000000000014be0a : stc ; salc ; clc ; ret
0x000000000015ecfc : stc ; test ebp, edi ; call rsi
0x000000000015ed70 : stc ; test ebp, edi ; inc edx ; test ebp, edi ; jmp rax
0x0000000000081795 : stc ; xor byte ptr [rcx - 0x6bf0be32], cl ; ret 0xf883
0x00000000000abe10 : stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf980
0x00000000001716d1 : std ; add byte ptr [rax], al ; shl byte ptr [rdx], -0xf ; jmp qword ptr [rax]
0x0000000000099eb9 : std ; add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x000000000016e666 : std ; call qword ptr [rax + 0x20fffda4]
0x000000000015fe66 : std ; call qword ptr [rax - 0x2f000221]
0x000000000015fe56 : std ; call qword ptr [rax - 0x2f00022a]
0x000000000015fe46 : std ; call qword ptr [rax - 0x2f000233]
0x000000000015fe3e : std ; call qword ptr [rax]
0x000000000016e562 : std ; call qword ptr [rdx]
0x000000000016e5f6 : std ; call qword ptr [rsi]
0x000000000015fe4a : std ; call rax
0x000000000016e59e : std ; call rcx
0x00000000000da6b9 : std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000014bf0d : std ; dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x000000000010bd19 : std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000072507 : std ; dec dword ptr [rax - 0x7f] ; ret
0x000000000016e5be : std ; dec dword ptr [rsi - 0x58] ; std ; jmp rsi
0x00000000000da34d : std ; dec ecx ; ret
0x000000000005b2c2 : std ; fdivp st(7) ; inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x00000000000336cd : std ; fstp st(1) ; ret
0x00000000001611fd : std ; hlt ; jmp rbx
0x000000000016e56e : std ; inc dword ptr [rax + 0x30fffd9e] ; lahf ; std ; jmp qword ptr [rax]
0x000000000015fe3a : std ; inc dword ptr [rax - 0x5a] ; std ; call qword ptr [rax]
0x000000000016e672 : std ; inc dword ptr [rax - 0x5a] ; std ; jmp rax
0x000000000016e662 : std ; inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rax + 0x20fffda4]
0x000000000015fe7e : std ; inc dword ptr [rax] ; push rdi ; call qword ptr [rax]
0x000000000016e582 : std ; inc dword ptr [rcx] ; lahf ; std ; call rcx
0x000000000015fe36 : std ; inc eax ; ret
0x000000000016e79a : std ; inc ecx ; mov ch, -3 ; call qword ptr [rax]
0x000000000016e796 : std ; inc ecx ; mov ch, -3 ; inc ecx ; mov ch, -3 ; call qword ptr [rax]
0x000000000016e776 : std ; inc ecx ; mov ch, -3 ; inc ecx ; mov ch, -3 ; jmp qword ptr [rax]
0x000000000016e6c6 : std ; inc ecx ; mov ch, -3 ; inc ecx ; mov ch, -3 ; jmp rcx
0x000000000016e77a : std ; inc ecx ; mov ch, -3 ; jmp qword ptr [rax]
0x000000000016e6ca : std ; inc ecx ; mov ch, -3 ; jmp rcx
0x000000000016e7ba : std ; inc ecx ; mov ch, -3 ; lcall ptr [rax] ; salc ; sti ; jmp rax
0x0000000000171a1d : std ; int1 ; jmp qword ptr [rax]
0x00000000000ff63b : std ; jbe 0xff643 ; ret
0x000000000016e576 : std ; jmp qword ptr [rax]
0x000000000017666a : std ; jmp qword ptr [rdi]
0x0000000000175b32 : std ; jmp qword ptr [rdx]
0x000000000016e676 : std ; jmp rax
0x000000000016e5a6 : std ; jmp rcx
0x000000000016e566 : std ; jmp rdx
0x000000000016e5c2 : std ; jmp rsi
0x00000000000b8c5f : std ; jne 0xb8c2f ; ret
0x00000000001752e6 : std ; lcall ptr [rax + 0x7000005c] ; ret
0x000000000016e7be : std ; lcall ptr [rax] ; salc ; sti ; jmp rax
0x0000000000175336 : std ; ljmp ptr [rax + 0x76] ; add byte ptr [rax], al ; xor al, cl ; std ; call rax
0x000000000012c36b : std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000083e85 : std ; or dword ptr [rax], eax ; ret
0x000000000017f301 : std ; out dx, eax ; jmp qword ptr [rdx]
0x000000000016e66e : std ; push qword ptr [rax + 0x40fffda5] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x000000000015fe7a : std ; push qword ptr [rax - 0x39] ; std ; inc dword ptr [rax] ; push rdi ; call qword ptr [rax]
0x000000000016e572 : std ; push qword ptr [rax] ; lahf ; std ; jmp qword ptr [rax]
0x000000000016e5b6 : std ; push qword ptr [rcx] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call rcx
0x000000000016e5f2 : std ; push qword ptr [rsi - 0x5a] ; std ; call qword ptr [rsi]
0x00000000000494db : std ; ret 0xffff
0x00000000000b77d1 : std ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000b7792 : std ; sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000016ea21 : std ; sti ; inc dword ptr [rax - 1] ; sti ; jmp qword ptr [rax]
0x00000000001716a1 : sti ; add byte ptr [rax], al ; and byte ptr [rcx + rsi*8], bl ; call rax
0x0000000000100030 : sti ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000000000a818f : sti ; add ebp, dword ptr [rcx] ; ret
0x000000000016e502 : sti ; call qword ptr [rax + 0x10fffb72]
0x000000000016e50a : sti ; call qword ptr [rax + 0x10fffb75]
0x000000000016e512 : sti ; call qword ptr [rax + 0x10fffb78]
0x000000000016e51a : sti ; call qword ptr [rax + 0x10fffb7b]
0x000000000016e522 : sti ; call qword ptr [rax + 0x10fffb7e]
0x000000000016e52a : sti ; call qword ptr [rax + 0x10fffb81]
0x000000000016e532 : sti ; call qword ptr [rax + 0x10fffb84]
0x000000000016eb16 : sti ; call qword ptr [rax - 0x1f000412]
0x000000000016eac2 : sti ; call qword ptr [rax - 0x1f000419]
0x000000000016e936 : sti ; call qword ptr [rax - 0x1f000430]
0x000000000016e94a : sti ; call qword ptr [rax - 0x1f00043e]
0x000000000016e4f2 : sti ; call qword ptr [rax - 0x1f000495]
0x000000000016e3e6 : sti ; call qword ptr [rax]
0x000000000016e95a : sti ; call rax
0x00000000000c8943 : sti ; call rcx
0x000000000018adb1 : sti ; cmc ; call qword ptr [rsi]
0x00000000000b77d2 : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000b7793 : sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000069961 : sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x0000000000161239 : sti ; hlt ; call rdi
0x000000000016e7da : sti ; inc dword ptr [rax + 0x10fffbe3] ; salc ; sti ; call rax
0x000000000016e41a : sti ; inc dword ptr [rax + 0x12] ; sti ; push qword ptr [rax] ; adc edi, ebx ; jmp qword ptr [rax]
0x000000000016e49a : sti ; inc dword ptr [rax + 0x45] ; sti ; jmp qword ptr [rax]
0x000000000016e4ee : sti ; inc dword ptr [rax + 0x6a] ; sti ; call qword ptr [rax - 0x1f000495]
0x000000000016e3e2 : sti ; inc dword ptr [rax + 5] ; sti ; call qword ptr [rax]
0x000000000016eb12 : sti ; inc dword ptr [rax - 0x13] ; sti ; call qword ptr [rax - 0x1f000412]
0x000000000016e81a : sti ; inc dword ptr [rax - 0x1d] ; sti ; call rax
0x000000000016e816 : sti ; inc dword ptr [rax - 0x1f] ; sti ; inc dword ptr [rax - 0x1d] ; sti ; call rax
0x000000000016e846 : sti ; inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x000000000016e8c6 : sti ; inc dword ptr [rax - 0x28] ; sti ; jmp qword ptr [rax]
0x000000000016eb22 : sti ; inc dword ptr [rax - 0x2f00040e] ; sti ; jmp qword ptr [rax]
0x000000000016eace : sti ; inc dword ptr [rax - 0x2f000415] ; in al, dx ; sti ; jmp qword ptr [rax]
0x000000000016e4be : sti ; inc dword ptr [rax - 0x2f0004a6] ; pop rbx ; sti ; jmp qword ptr [rax]
0x000000000016e932 : sti ; inc dword ptr [rax - 0x31] ; sti ; call qword ptr [rax - 0x1f000430]
0x000000000016e946 : sti ; inc dword ptr [rax - 0x3f] ; sti ; call qword ptr [rax - 0x1f00043e]
0x000000000016e7d6 : sti ; inc dword ptr [rax - 0x7f00041f] ; jrcxz 0x16e7e3 ; call qword ptr [rax]
0x000000000016ea22 : sti ; inc dword ptr [rax - 1] ; sti ; jmp qword ptr [rax]
0x000000000016eaa6 : sti ; inc dword ptr [rax] ; add ah, bh ; jmp rax
0x000000000016e3d2 : sti ; inc dword ptr [rax] ; add bh, bl ; call rax
0x000000000016e43a : sti ; inc dword ptr [rax] ; or edi, ebx ; push qword ptr [rax + 0x1c] ; sti ; call qword ptr [rax]
0x000000000016e47a : sti ; inc dword ptr [rax] ; sbb edi, ebx ; push qword ptr [rax] ; cmp bl, bh ; call qword ptr [rax]
0x000000000016e4a2 : sti ; inc dword ptr [rax] ; sti ; jmp rax
0x00000000001046c7 : sti ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000016eb32 : sti ; inc eax ; idiv ebx ; call qword ptr [rax]
0x000000000016eade : sti ; inc eax ; lock sti ; call qword ptr [rax]
0x000000000016e4ce : sti ; inc eax ; pop rdi ; sti ; call qword ptr [rax]
0x000000000016e966 : sti ; inc eax ; retf ; sti ; call qword ptr [rax]
0x0000000000162398 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x000000000016e422 : sti ; jmp qword ptr [rax]
0x00000000001901a2 : sti ; jmp qword ptr [rdx]
0x000000000018c882 : sti ; jmp qword ptr [rsi]
0x0000000000164552 : sti ; jmp rax
0x000000000012c748 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000008f57d : sti ; mov rax, rdi ; ret
0x0000000000029d52 : sti ; or al, 0x74 ; and cl, byte ptr [rax - 0x7d] ; ret
0x00000000000fd18a : sti ; or dword ptr [rdi], ecx ; ret
0x000000000016e43e : sti ; push qword ptr [rax + 0x1c] ; sti ; call qword ptr [rax]
0x000000000016e45e : sti ; push qword ptr [rax + 0x29] ; sti ; call qword ptr [rax]
0x000000000016e4fa : sti ; push qword ptr [rax + 0x59] ; sti ; call qword ptr [rax]
0x000000000016e4ca : sti ; push qword ptr [rax + 0x5e] ; sti ; inc eax ; pop rdi ; sti ; call qword ptr [rax]
0x000000000016e3de : sti ; push qword ptr [rax + 4] ; sti ; inc dword ptr [rax + 5] ; sti ; call qword ptr [rax]
0x000000000016eada : sti ; push qword ptr [rax - 0x11] ; sti ; inc eax ; lock sti ; call qword ptr [rax]
0x000000000016e8c2 : sti ; push qword ptr [rax - 0x2a] ; sti ; inc dword ptr [rax - 0x28] ; sti ; jmp qword ptr [rax]
0x000000000016e85e : sti ; push qword ptr [rax - 0x2b] ; sti ; push qword ptr [rax] ; xlatb ; sti ; call qword ptr [rax]
0x000000000016e8de : sti ; push qword ptr [rax - 0x2c] ; sti ; jmp qword ptr [rax]
0x000000000016e962 : sti ; push qword ptr [rax - 0x36] ; sti ; inc eax ; retf ; sti ; call qword ptr [rax]
0x000000000016eb2e : sti ; push qword ptr [rax - 0xa] ; sti ; inc eax ; idiv ebx ; call qword ptr [rax]
0x000000000016e41e : sti ; push qword ptr [rax] ; adc edi, ebx ; jmp qword ptr [rax]
0x000000000016e3ce : sti ; push qword ptr [rax] ; add ebx, edi ; inc dword ptr [rax] ; add bh, bl ; call rax
0x000000000016e47e : sti ; push qword ptr [rax] ; cmp bl, bh ; call qword ptr [rax]
0x000000000016e456 : sti ; push qword ptr [rax] ; sti ; call rax
0x000000000016e862 : sti ; push qword ptr [rax] ; xlatb ; sti ; call qword ptr [rax]
0x000000000016e882 : sti ; push rax ; salc ; sti ; call rax
0x000000000016e8e6 : sti ; push rax ; xlatb ; sti ; call rax
0x000000000015bfea : sti ; ret
0x000000000003d3f8 : sti ; ret 0xffbf
0x000000000017475d : sti ; stc ; jmp rax
0x00000000000bf799 : sti ; sub ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xfb80
0x000000000002b4a7 : sti ; test rax, rax ; je 0x2b4b5 ; call rax
0x00000000000e5250 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000009968 : stosb byte ptr [rdi], al ; add byte ptr [r8], al ; and al, byte ptr [rax] ; or al, 0 ; ret
0x00000000001709f1 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; adc byte ptr [rdx - 0x11], dh ; jmp qword ptr [rax]
0x000000000017fe6d : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov al, -1 ; stc ; call qword ptr [rax]
0x000000000017fe9d : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; nop ; cli ; call qword ptr [rax]
0x000000000017fee5 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; sub byte ptr [rsi - 0x10], bl ; jmp qword ptr [rsi]
0x000000000017fecd : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; xor byte ptr [rsi - 0x10], bl ; call qword ptr [rax]
0x000000000018fe4d : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; and byte ptr [rbp - 9], ah ; jmp rdx
0x000000000016f7d1 : stosb byte ptr [rdi], al ; cld ; jmp qword ptr [rdx]
0x000000000016f715 : stosb byte ptr [rdi], al ; cld ; jmp rax
0x000000000015c4c4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000000c4a3d : stosb byte ptr [rdi], al ; cmc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000017185d : stosb byte ptr [rdi], al ; int1 ; jmp rax
0x0000000000177609 : stosb byte ptr [rdi], al ; jmp 0x17760d
0x00000000000f7510 : stosb byte ptr [rdi], al ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000000a8ca2 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rbp + 0x63] ; ret
0x00000000000a8ca3 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rbp + 0x63] ; ret
0x0000000000170a41 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x11], bh ; jmp qword ptr [rax]
0x000000000017ff5d : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; push rsp ; cli ; call qword ptr [rax]
0x000000000016f7cd : stosd dword ptr [rdi], eax ; cld ; call qword ptr [rdx + 0x22fffcaa]
0x000000000016f749 : stosd dword ptr [rdi], eax ; cld ; call qword ptr [rsi]
0x000000000016f909 : stosd dword ptr [rdi], eax ; cld ; call rax
0x000000000016f905 : stosd dword ptr [rdi], eax ; cld ; inc dword ptr [rax - 0x55] ; cld ; call rax
0x000000000016f889 : stosd dword ptr [rdi], eax ; cld ; jmp rsp
0x0000000000189281 : stosd dword ptr [rdi], eax ; cmc ; call qword ptr [rax]
0x0000000000160bf0 : stosd dword ptr [rdi], eax ; div esp ; jmp qword ptr [rdx]
0x00000000001865d9 : stosd dword ptr [rdi], eax ; hlt ; call qword ptr [rbx]
0x0000000000186619 : stosd dword ptr [rdi], eax ; hlt ; call qword ptr [rsi]
0x0000000000186659 : stosd dword ptr [rdi], eax ; hlt ; jmp qword ptr [rcx]
0x0000000000044151 : stosd dword ptr [rdi], eax ; idiv bh ; dec ecx ; ret
0x0000000000179d89 : stosd dword ptr [rdi], eax ; in al, dx ; call qword ptr [rdi]
0x0000000000179da1 : stosd dword ptr [rdi], eax ; in al, dx ; jmp qword ptr [rbx]
0x0000000000103904 : stosd dword ptr [rdi], eax ; nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000162650 : stosd dword ptr [rdi], eax ; pop rax ; idiv edi ; rcr dword ptr [rdx - 9], cl ; jmp rsp
0x000000000003445c : stosd dword ptr [rdi], eax ; ret
0x0000000000069971 : stosd dword ptr [rdi], eax ; ret 0
0x00000000000c8941 : stosd dword ptr [rdi], eax ; retf ; sti ; call rcx
0x00000000000a8ca1 : stosd dword ptr [rdi], eax ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rbp + 0x63] ; ret
0x0000000000186688 : stosq qword ptr [rdi], rax ; hlt ; jmp qword ptr [rcx]
0x000000000003445b : stosq qword ptr [rdi], rax ; ret
0x0000000000078f2d : str word ptr [rax + 0x39] ; ret
0x000000000005f27e : str word ptr [rax + 0x63] ; adc al, -0x68 ; add rax, rdx ; jmp rax
0x000000000006833e : str word ptr [rax + 0x63] ; add al, -0x7e ; add rdx, rax ; jmp rdx
0x00000000000690ee : str word ptr [rax + 0x63] ; add al, -0x7f ; add rcx, rax ; jmp rcx
0x0000000000068a4b : str word ptr [rax + 0x63] ; or al, 0xffffffffffffff88 ; add rax, rcx ; jmp rax
0x000000000001fe92 : str word ptr [rax - 0x39] ; ret 0x800
0x0000000000111d55 : str word ptr [rax - 0x77] ; ret 0x8348
0x000000000006831b : str word ptr [rax - 0x77] ; ret 0x8948
0x00000000000787bb : str word ptr [rax - 0x7d] ; ret 0xe910
0x0000000000021fec : str word ptr [rcx + rcx*4 - 0x11] ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000015d9b1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000016ec09 : sub ah, bh ; call rax
0x000000000016eb45 : sub ah, bh ; jmp rax
0x000000000016ec69 : sub ah, bh ; push rax ; sub esp, edi ; jmp rax
0x000000000014c7c2 : sub ah, byte ptr [rbp + 0x25] ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x0000000000171cd5 : sub al, -0xd ; call rax
0x000000000015fc25 : sub al, -0xe ; jmp rax
0x00000000000738a1 : sub al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000000ed60 : sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000191828 : sub al, 0 ; add byte ptr [rax], al ; hlt ; ret
0x0000000000177d20 : sub al, 0 ; add byte ptr [rax], al ; in al, dx ; sub byte ptr [rax], al ; add al, bh ; ret
0x000000000018ddf0 : sub al, 0 ; add byte ptr [rax], al ; mov esp, 0x88000189 ; ret 0xfff6
0x0000000000177cf0 : sub al, 0 ; add byte ptr [rax], al ; mov esp, 0xa8000028 ; ret
0x000000000001f64a : sub al, 0 ; add byte ptr [rax], al ; mov r12d, eax ; call 0xeb919
0x0000000000177c80 : sub al, 0 ; add byte ptr [rax], al ; sub byte ptr [rax], r8b ; add byte ptr [rax], bl ; ret
0x00000000000d10a5 : sub al, 0 ; mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000ceb25 : sub al, 0 ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000186464 : sub al, 0x10 ; add dword ptr [rax], eax ; js 0x186403 ; hlt ; jmp qword ptr [rdi]
0x0000000000176664 : sub al, 0x12 ; add byte ptr [rax], al ; js 0x1766cb ; std ; jmp qword ptr [rdi]
0x0000000000176e64 : sub al, 0x1a ; add byte ptr [rax], al ; js 0x176ecf ; jmp 0x176e72
0x0000000000187864 : sub al, 0x24 ; add dword ptr [rax], eax ; test al, 0x42 ; cmc ; jmp qword ptr [rcx]
0x00000000000ea390 : sub al, 0x2f ; sub eax, dword ptr [rax] ; je 0xea39f ; pop rbp ; ret
0x0000000000188964 : sub al, 0x35 ; add dword ptr [rax], eax ; pop rax ; mov ebp, esi ; jmp qword ptr [rcx]
0x0000000000036ae4 : sub al, 0x36 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000178a64 : sub al, 0x36 ; add byte ptr [rax], al ; mov cl, ch ; jmp 0x178a72
0x000000000009b202 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x0000000000189364 : sub al, 0x3f ; add dword ptr [rax], eax ; cwde ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000000c5773 : sub al, 0x4c ; mov esi, dword ptr [rbx + 0x18] ; xor ecx, ecx ; mov edx, r8d ; jmp 0xc5792
0x000000000016efc0 : sub al, 0x4f ; cld ; call rdx
0x000000000017a964 : sub al, 0x55 ; add byte ptr [rax], al ; pop rax ; shr dh, 1 ; jmp qword ptr [rcx]
0x000000000009b205 : sub al, 0x75 ; pop rax ; ret
0x00000000001483b3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000171e19 : sub al, 1 ; add al, dl ; test dh, bl ; jmp qword ptr [rax]
0x0000000000188105 : sub al, 1 ; add byte ptr [rax + 0x73], bh ; cmc ; jmp rbx
0x0000000000102c1c : sub al, bh ; dec dword ptr [rax - 0x75] ; add byte ptr [r8 + 1], r9b ; ret
0x000000000010aa12 : sub al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; call rbx
0x0000000000032442 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; pop rbx ; ret
0x00000000000f4b22 : sub al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000f8b2a : sub al, byte ptr [rax] ; add rsp, 0x28 ; jmp rax
0x00000000001002a5 : sub al, byte ptr [rax] ; call rax
0x00000000000f4cbf : sub al, byte ptr [rax] ; cmp rdx, rax ; jne 0xf4ca8 ; ret
0x00000000000fb510 : sub al, byte ptr [rax] ; jne 0xfb528 ; jmp 0xfb542
0x00000000000f528c : sub al, byte ptr [rax] ; pop rbp ; ret
0x00000000000f4404 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4418 ; xor eax, eax ; ret
0x00000000000f4434 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4448 ; xor eax, eax ; ret
0x00000000000f4464 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4478 ; xor eax, eax ; ret
0x00000000000f4494 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf44a8 ; xor eax, eax ; ret
0x00000000000f44c4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf44d8 ; xor eax, eax ; ret
0x00000000000f44f4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4508 ; xor eax, eax ; ret
0x00000000000f4524 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4538 ; xor eax, eax ; ret
0x00000000000f4554 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4568 ; xor eax, eax ; ret
0x00000000000f4584 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4598 ; xor eax, eax ; ret
0x00000000000f45b4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf45c8 ; xor eax, eax ; ret
0x00000000000f45e4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf45f8 ; xor eax, eax ; ret
0x00000000000f4614 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4628 ; xor eax, eax ; ret
0x00000000000f4644 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4658 ; xor eax, eax ; ret
0x00000000000f4674 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4688 ; xor eax, eax ; ret
0x00000000000f46a4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf46b8 ; xor eax, eax ; ret
0x00000000000f46d4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf46e8 ; xor eax, eax ; ret
0x00000000000f4704 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4718 ; xor eax, eax ; ret
0x00000000000f4734 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4748 ; xor eax, eax ; ret
0x00000000000f4764 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4778 ; xor eax, eax ; ret
0x00000000000f4794 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf47a8 ; xor eax, eax ; ret
0x00000000000f47f4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4808 ; xor eax, eax ; ret
0x00000000000f4824 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4838 ; xor eax, eax ; ret
0x00000000000f4854 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4868 ; xor eax, eax ; ret
0x00000000000f4884 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4898 ; xor eax, eax ; ret
0x00000000000f48b4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf48c8 ; xor eax, eax ; ret
0x00000000000f48e4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf48f8 ; xor eax, eax ; ret
0x00000000000f4914 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4928 ; xor eax, eax ; ret
0x00000000000f4944 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4958 ; xor eax, eax ; ret
0x00000000000f4974 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4988 ; xor eax, eax ; ret
0x00000000000f4e55 : sub al, byte ptr [rax] ; test rax, rax ; je 0xf4e67 ; ret
0x0000000000056272 : sub al, byte ptr [rbx - 0x1ef43] ; call qword ptr [rax]
0x00000000001747d1 : sub al, byte ptr [rdx] ; add byte ptr [rax], dl ; or dl, bh ; call qword ptr [rax]
0x000000000006e6bc : sub bh, bh ; loopne 0x6e659 ; mov eax, 0xffffffff ; ret
0x000000000016ead0 : sub bl, -5 ; call rax
0x0000000000183d71 : sub bl, dh ; call rdi
0x00000000000e0987 : sub bl, dh ; ret
0x00000000000a9a1b : sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000009b1f6 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000d0182 : sub byte ptr [r13 - 0x7c258b37], r8b ; ret 0x4901
0x0000000000072665 : sub byte ptr [r8 + 0x63], r9b ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000001161c1 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000011c9a1 : sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000011def3 : sub byte ptr [r8], r8b ; test eax, eax ; jne 0x11df09 ; xor eax, eax ; ret
0x000000000011df23 : sub byte ptr [r8], r8b ; test eax, eax ; jne 0x11df39 ; xor eax, eax ; ret
0x000000000011df53 : sub byte ptr [r8], r8b ; test eax, eax ; jne 0x11df69 ; xor eax, eax ; ret
0x0000000000115fc1 : sub byte ptr [r9], r14b ; sar byte ptr [rcx], -0x2f ; jae 0x115fd8 ; ret
0x0000000000116001 : sub byte ptr [r9], r14b ; sar byte ptr [rcx], -0x2f ; jae 0x116018 ; ret
0x000000000003b71f : sub byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000058412 : sub byte ptr [rax + 0x48000000], 0x39 ; ret
0x00000000000d9f47 : sub byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000072666 : sub byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000001115ce : sub byte ptr [rax + 1], bh ; ret
0x0000000000038b69 : sub byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], -0x3e ; jmp 0x38ba4
0x0000000000028ddb : sub byte ptr [rax + 1], cl ; ror byte ptr [rcx + 0x39], 1 ; ret
0x00000000001161c2 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000079924 : sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff6
0x000000000007cd64 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rcx
0x000000000010e748 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000010d1ac : sub byte ptr [rax - 0x77], cl ; ret 0x4388
0x000000000008c1c8 : sub byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000dd077 : sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000697f4 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000006d7a8 : sub byte ptr [rax - 0x78], al ; cmp al, byte ptr [rax + 0xf] ; mov dh, -0x39 ; ret
0x0000000000073654 : sub byte ptr [rax - 0x78], al ; cmp byte ptr [rax + 0xf], al ; mov dh, -0x39 ; ret
0x000000000004f664 : sub byte ptr [rax - 0x78], al ; xor byte ptr [rbp + 0x29442b14], cl ; ret 0x3948
0x0000000000073653 : sub byte ptr [rax - 0x78], r8b ; cmp byte ptr [rax + 0xf], al ; mov dh, -0x39 ; ret
0x00000000000b2f93 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], -0x7b ; ret
0x00000000000b2f92 : sub byte ptr [rax - 0x7b], r9b ; ror byte ptr [rdi], -0x7b ; ret
0x00000000000c2023 : sub byte ptr [rax - 0x7d], cl ; in al, dx ; or al, ch ; ret
0x00000000000d53f8 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000003c693 : sub byte ptr [rax - 9], cl ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000022d1 : sub byte ptr [rax], 0x10 ; salc ; ret
0x0000000000177d25 : sub byte ptr [rax], al ; add al, bh ; ret
0x0000000000177c45 : sub byte ptr [rax], al ; add byte ptr [rax - 0x3e], bh ; jmp 0x177c4f
0x000000000006404a : sub byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000177c85 : sub byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x0000000000177cb5 : sub byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x000000000011abaf : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000113195 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000011bfdd : sub byte ptr [rax], al ; call 0xe8274
0x000000000011a73b : sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000113bb5 : sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x113bc8 ; ret
0x000000000011acc5 : sub byte ptr [rax], al ; jmp rax
0x000000000011d277 : sub byte ptr [rax], al ; jne 0x11d288 ; add rsp, 0x38 ; ret
0x00000000001130bc : sub byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000011acbe : sub byte ptr [rax], al ; mov rax, qword ptr [rip + 0x280d79] ; jmp rax
0x000000000011ac14 : sub byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000117ed4 : sub byte ptr [rax], al ; test eax, eax ; je 0x117ee8 ; xor eax, eax ; ret
0x000000000011de64 : sub byte ptr [rax], al ; test eax, eax ; jne 0x11de78 ; xor eax, eax ; ret
0x000000000011de94 : sub byte ptr [rax], al ; test eax, eax ; jne 0x11dea8 ; xor eax, eax ; ret
0x000000000011dec4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x11ded8 ; xor eax, eax ; ret
0x000000000011def4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x11df08 ; xor eax, eax ; ret
0x000000000011df24 : sub byte ptr [rax], al ; test eax, eax ; jne 0x11df38 ; xor eax, eax ; ret
0x000000000011df54 : sub byte ptr [rax], al ; test eax, eax ; jne 0x11df68 ; xor eax, eax ; ret
0x00000000000c6fb5 : sub byte ptr [rax], bh ; ret 0x860f
0x00000000000c6f1f : sub byte ptr [rax], bh ; ret 0x870f
0x00000000000022d2 : sub byte ptr [rax], dl ; salc ; ret
0x0000000000177c84 : sub byte ptr [rax], r8b ; add byte ptr [rax], bl ; ret
0x000000000011de63 : sub byte ptr [rax], r8b ; test eax, eax ; jne 0x11de79 ; xor eax, eax ; ret
0x000000000011de93 : sub byte ptr [rax], r8b ; test eax, eax ; jne 0x11dea9 ; xor eax, eax ; ret
0x000000000011dec3 : sub byte ptr [rax], r8b ; test eax, eax ; jne 0x11ded9 ; xor eax, eax ; ret
0x00000000001135be : sub byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000009b1fa : sub byte ptr [rbp + 0x63], dh ; ret
0x000000000009b1f9 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000fe7bb : sub byte ptr [rbp - 0x76b7fffa], cl ; ret 0xff31
0x00000000000d0183 : sub byte ptr [rbp - 0x7c258b37], al ; ret 0x4901
0x00000000000c0612 : sub byte ptr [rbp - 0xf], dh ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x000000000001fecc : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000a9a1c : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006732b : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000011ce13 : sub byte ptr [rbx + rcx*4 + 0x2d], cl ; popfq ; jmp qword ptr [rdi]
0x000000000017cca2 : sub byte ptr [rbx - 0x1ff1aafb], al ; add al, 2 ; ret 0xe0a
0x000000000011d123 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x000000000011d122 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x0000000000081674 : sub byte ptr [rbx], ah ; or al, byte ptr [rax] ; ret
0x000000000009b1f7 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000079f62 : sub byte ptr [rcx + rcx*4 + 0x62], cl ; and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000116297 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000033985 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; jmp rdx
0x00000000001877b8 : sub byte ptr [rcx - 0xb], al ; jmp qword ptr [rcx]
0x0000000000187c55 : sub byte ptr [rcx], al ; add byte ptr [rax + 0x50], ch ; cmc ; jmp qword ptr [rdi]
0x0000000000113e3f : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000c1387 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f2e7f : sub byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000115fc2 : sub byte ptr [rcx], dh ; sar byte ptr [rcx], -0x2f ; jae 0x115fd7 ; ret
0x0000000000116002 : sub byte ptr [rcx], dh ; sar byte ptr [rcx], -0x2f ; jae 0x116017 ; ret
0x000000000017cf78 : sub byte ptr [rdi - 0x11], bl ; jmp qword ptr [rdi]
0x000000000017d5d8 : sub byte ptr [rdi - 0x11], ch ; call qword ptr [rax]
0x000000000010bbfc : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000018fa58 : sub byte ptr [rdi - 9], cl ; jmp qword ptr [rcx]
0x00000000000a6f64 : sub byte ptr [rdi], ch ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000180ff8 : sub byte ptr [rdx - 0xf], al ; jmp qword ptr [rbx]
0x0000000000174781 : sub byte ptr [rdx], al ; add byte ptr [rax - 1], dh ; stc ; call rax
0x000000000007a911 : sub byte ptr [rdx], dh ; add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x000000000017fee8 : sub byte ptr [rsi - 0x10], bl ; jmp qword ptr [rsi]
0x0000000000002bec : sub byte ptr [rsi], cl ; and byte ptr [rsi - 0x32], dh ; clc ; ret
0x000000000011a73a : sub byte ptr ds:[rax], al ; call qword ptr [rax]
0x000000000017c0e9 : sub ch, bh ; jmp qword ptr [rdx]
0x000000000016fd7d : sub ch, bl ; jmp qword ptr [rax]
0x00000000001707d5 : sub ch, ch ; jmp rax
0x00000000000fd32d : sub ch, dh ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000017d049 : sub ch, dl ; call rdx
0x00000000000630cd : sub cl, -0x66 ; loopne 0x630d9 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000173ec8 : sub cl, 1 ; add byte ptr [rax], al ; retf ; clc ; call rax
0x0000000000032fe1 : sub cl, al ; ret
0x00000000000a8ca4 : sub cl, byte ptr [rbp + 0x63] ; ret
0x000000000002b679 : sub cl, byte ptr [rdi] ; xchg al, cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000000e5d8d : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a8922 : sub dl, byte ptr [rax + 7] ; add byte ptr [rax - 0x39], cl ; ret 0x400
0x000000000007e8d6 : sub dl, byte ptr [rdx] ; xor al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000084e92 : sub dword ptr [rax + rax], ecx ; ret
0x0000000000177d85 : sub dword ptr [rax], eax ; add al, bh ; ret
0x0000000000100223 : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000106bd5 : sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x106be9 ; ret
0x000000000010b295 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000106d85 : sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000100a8d : sub dword ptr [rax], eax ; ret
0x000000000010680e : sub dword ptr [rax], eax ; test eax, eax ; je 0x10681e ; ret
0x0000000000109b74 : sub dword ptr [rax], eax ; test eax, eax ; je 0x109b86 ; ret
0x00000000000ec523 : sub dword ptr [rbp + 0x2b], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000161364 : sub dword ptr [rbp - 0x7ae0000b], eax ; cmc ; call qword ptr [rbx]
0x0000000000141ea3 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x00000000000cfe2f : sub dword ptr [rcx + 0x63], ecx ; ret
0x000000000008a864 : sub dword ptr [rcx], esi ; add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000012a997 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12a9ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012aae7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12aafd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ac37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12ac4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ad87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12ad9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012aed7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12aeed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b027 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12b03d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b177 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12b18d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b2c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12b2dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b417 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12b42d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b567 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12b57d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b6b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12b6cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b807 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12b81d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b957 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12b96d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012baa7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12babd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012bbf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12bc0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d367 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d37d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d4b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d4cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d607 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d61d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d757 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d76d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d8a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d8bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d9f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12da0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012db47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12db5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012dc97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12dcad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012dde7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12ddfd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012df37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12df4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012e087 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12e09d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012e1d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12e1ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012e327 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12e33d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012e477 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12e48d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012e5c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12e5dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fd37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12fd4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fe87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12fe9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ffd7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12ffed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130127 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13013d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130277 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13028d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001303c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1303dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130517 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13052d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130667 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13067d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001307b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1307cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130907 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13091d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130a57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x130a6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130ba7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x130bbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130cf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x130d0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130e47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x130e5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130f97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x130fad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000119191 : sub dword ptr [rdi + 0x18], 1 ; je 0x1191a8 ; xor eax, eax ; ret
0x000000000000258b : sub dword ptr [rdi + 0x2009646], -0x7a ; out dx, al ; ret 0x88ad
0x000000000012a8f3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a8ef : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000012a99d : sub dword ptr [rdi], esp ; jmp r9
0x0000000000149a09 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007a8ec : sub dword ptr [rdx], esi ; add byte ptr [rcx], bh ; ret 0xa7e
0x000000000014c2b0 : sub dword ptr [rip + 0x5c74800], esp ; ret 0x2528
0x0000000000148b96 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000001131b6 : sub eax, -0x80 ; add rsp, 8 ; ret
0x000000000007ce85 : sub eax, 0x10 ; add rsp, 8 ; ret
0x000000000011609a : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015fc29 : sub eax, 0x2f60fff2 ; jmp rax
0x000000000007e2ae : sub eax, 0x31fa0d ; call 0x6a4f7
0x00000000000cf485 : sub eax, 0x36740000 ; xor eax, eax ; ret
0x000000000010bc92 : sub eax, 0x39489848 ; ret
0x0000000000033249 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x000000000007166f : sub eax, 0x8900004b ; ret 0x9feb
0x0000000000114bb4 : sub eax, 0x89480005 ; ret 0xff31
0x00000000000edec1 : sub eax, 0x8948002b ; ret 0x850f
0x000000000006bb50 : sub eax, 0x89480033 ; ret
0x000000000001fb61 : sub eax, 0xbcbf0038 ; add byte ptr [rax], al ; add al, ch ; ret 0x7a4
0x0000000000112912 : sub eax, 1 ; add rsp, 0x18 ; ret
0x0000000000029a94 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000107c8d : sub eax, 1 ; pop r13 ; pop r14 ; ret
0x0000000000042c5f : sub eax, 1 ; ret
0x000000000009bf92 : sub eax, 4 ; ret
0x00000000000ea413 : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000e324c : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x1f4a8
0x00000000000ea406 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000052142 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call 0x6e359
0x00000000000e49c3 : sub eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x00000000000e1cc3 : sub eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000ea4f8 : sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000e3239 : sub eax, dword ptr [rax] ; call 0x1f4a4
0x00000000000ea392 : sub eax, dword ptr [rax] ; je 0xea39d ; pop rbp ; ret
0x00000000000e1af4 : sub eax, dword ptr [rax] ; jne 0xe1b09 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e2b6b : sub eax, dword ptr [rax] ; mov byte ptr [rcx - 1], 0 ; ret
0x00000000000e5035 : sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000eae85 : sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000ea7b5 : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000e1d59 : sub eax, dword ptr [rax] ; mov rdx, rax ; jmp 0xe1cf3
0x00000000000e496f : sub eax, dword ptr [rax] ; pop rbp ; pop r12 ; ret
0x00000000000e2eb0 : sub eax, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e438c : sub eax, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ea344 : sub eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000e4939 : sub eax, dword ptr [rax] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e3f2e : sub eax, dword ptr [rax] ; ret
0x000000000002d55f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009a3c1 : sub eax, dword ptr [rcx + r8*4] ; je 0x9a3a7 ; ret
0x000000000009a3c2 : sub eax, dword ptr [rcx + rax*4] ; je 0x9a3a6 ; ret
0x00000000000413b4 : sub eax, dword ptr [rcx - 0x7d] ; cld ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xca38
0x00000000001046c4 : sub eax, dword ptr [rcx - 0x7d] ; sti ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x0000000000171e01 : sub eax, dword ptr [rcx] ; add byte ptr [rax - 0x7c], dh ; call rax
0x0000000000077a9e : sub eax, dword ptr [rdi + 0x18] ; ret
0x0000000000072fa5 : sub eax, dword ptr [rdi + 0x20] ; ret
0x0000000000072e95 : sub eax, dword ptr [rdi + 0x38] ; ret
0x000000000006f105 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000072f96 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000072e86 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x000000000009a37a : sub eax, dword ptr [rdx + rcx*4] ; je 0x9a366 ; ret
0x0000000000077263 : sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000ea412 : sub eax, dword ptr cs:[rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000ea405 : sub eax, dword ptr cs:[rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000efad8 : sub eax, eax ; cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000009b75c : sub eax, eax ; ret
0x000000000006e917 : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009c72b : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x00000000000769f9 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000004445d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000814fc : sub eax, ecx ; ret
0x0000000000081cb1 : sub eax, edi ; ret
0x00000000000efa6f : sub eax, edx ; cmp dil, cl ; cmovne eax, esi ; ret
0x00000000000369e9 : sub eax, edx ; ret
0x000000000003322f : sub eax, edx ; shr eax, 0x1f ; ret
0x0000000000032e5d : sub eax, edx ; shr rax, 0x3f ; ret
0x00000000000abc21 : sub eax, edx ; sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000014be97 : sub eax, edx ; vzeroupper ; ret
0x0000000000050d3d : sub eax, esp ; jmp 0x50cd9
0x0000000000074798 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000050d3c : sub eax, r12d ; jmp 0x50cda
0x00000000000efad7 : sub eax, r8d ; cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000009b75b : sub eax, r8d ; ret
0x0000000000061e13 : sub ebp, -1 ; push rsi ; ret
0x000000000015c25e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000015acf5 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000002f67 : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000a673c : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016e461 : sub ebx, edi ; call qword ptr [rax]
0x0000000000034454 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000792d9 : sub ecx, dword ptr [rax + 0x39] ; ret
0x0000000000043865 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000095e51 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000bd89d : sub ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x8341
0x00000000000bf79a : sub ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xfb80
0x00000000000a823f : sub ecx, eax ; lea rax, qword ptr [r8 + rcx] ; ret
0x00000000000abc23 : sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000003352e : sub ecx, edx ; not eax ; and eax, ecx ; ret
0x000000000009a58c : sub edi, 0x10 ; add rax, rdi ; ret
0x0000000000181101 : sub edi, edx ; call qword ptr [rdi]
0x00000000001748e5 : sub edi, edx ; jmp qword ptr [rax]
0x000000000016ebcd : sub edi, esp ; jmp qword ptr [rax]
0x0000000000090363 : sub edx, 1 ; mov byte ptr [rcx], r8b ; jne 0x90359 ; ret
0x000000000009b822 : sub edx, 1 ; mov dword ptr [rcx], r8d ; jne 0x9b819 ; ret
0x0000000000077290 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000077285 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000084e14 : sub edx, eax ; jbe 0x84e57 ; add rax, rdi ; ret
0x0000000000084e24 : sub edx, eax ; jbe 0x84e59 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000084e34 : sub edx, eax ; jbe 0x84e59 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000084e44 : sub edx, eax ; jbe 0x84e59 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000038b6e : sub edx, eax ; jmp 0x38b9f
0x000000000003b489 : sub edx, eax ; jmp 0x3b4ba
0x000000000003dd87 : sub edx, eax ; jmp 0x3ddb9
0x00000000000a2e8f : sub edx, eax ; jmp 0xa2eba
0x000000000003356f : sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x00000000001810e9 : sub edx, edi ; jmp qword ptr [rdi]
0x000000000015fc1d : sub edx, esi ; jmp rax
0x000000000006fe06 : sub edx, esi ; mov rdi, rbx ; call rax
0x00000000001036de : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x000000000011c84a : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], -0x3c ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000036bbc : sub esi, dword ptr [rsi] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000181ff9 : sub esi, edx ; call qword ptr [rax]
0x000000000018b8c9 : sub esi, esi ; call rdi
0x00000000000db020 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe994 : sub esp, -0x80 ; pop rbx ; ret
0x00000000000fe9a1 : sub esp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000001f62e : sub esp, 0x68 ; call 0xeb885
0x00000000000a826a : sub esp, 8 ; call r12
0x0000000000107f9f : sub esp, 8 ; mov rcx, rdx ; xor edx, edx ; call rax
0x000000000016ebe9 : sub esp, edi ; call qword ptr [rax]
0x000000000016ebc9 : sub esp, edi ; inc dword ptr [rax + 0x2b] ; cld ; jmp qword ptr [rax]
0x000000000016ec6d : sub esp, edi ; jmp rax
0x0000000000084e91 : sub qword ptr [r8 + r8], rcx ; ret
0x0000000000177d84 : sub qword ptr [rax], r8 ; add al, bh ; ret
0x00000000000769f8 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000630cc : sub r9b, -0x66 ; loopne 0x630da ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000001131b5 : sub rax, -0x80 ; add rsp, 8 ; ret
0x000000000007ce84 : sub rax, 0x10 ; add rsp, 8 ; ret
0x0000000000090226 : sub rax, 1 ; ret
0x000000000009bf91 : sub rax, 4 ; ret
0x0000000000077a9d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000072fa4 : sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000072e94 : sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000006f104 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000072f95 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000072e85 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000001239fd : sub rax, r8 ; ret
0x000000000009c72a : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000081cb0 : sub rax, rdi ; ret
0x00000000000369fd : sub rax, rdx ; ret
0x0000000000032e5c : sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000014be96 : sub rax, rdx ; vzeroupper ; ret
0x00000000000a823e : sub rcx, rax ; lea rax, qword ptr [r8 + rcx] ; ret
0x000000000009a58b : sub rdi, 0x10 ; add rax, rdi ; ret
0x0000000000084e13 : sub rdx, rax ; jbe 0x84e58 ; add rax, rdi ; ret
0x0000000000038b6d : sub rdx, rax ; jmp 0x38ba0
0x000000000003b488 : sub rdx, rax ; jmp 0x3b4bb
0x000000000003dd86 : sub rdx, rax ; jmp 0x3ddba
0x00000000000a2e8e : sub rdx, rax ; jmp 0xa2ebb
0x000000000006fe05 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000000db01f : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe993 : sub rsp, -0x80 ; pop rbx ; ret
0x00000000000fe9a0 : sub rsp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000001f62d : sub rsp, 0x68 ; call 0xeb886
0x000000000001f62c : sub rsp, 0x68 ; call 0xeb887
0x00000000000a8269 : sub rsp, 8 ; call r12
0x0000000000107f9e : sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call rax
0x0000000000032f40 : subps xmm0, xmm1 ; ret
0x0000000000032f3f : subsd xmm0, xmm1 ; ret
0x00000000000332c4 : subss xmm0, xmm1 ; ret
0x0000000000104960 : syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000daafd : syscall ; neg eax ; ret
0x00000000000f49e7 : syscall ; pop rdx ; pop rsi ; ret
0x00000000000b84d5 : syscall ; ret
0x00000000000e820f : syscall ; test rax, rax ; jl 0xe825e ; je 0xe8222 ; ret
0x00000000001938bc : test ah, ah ; add dword ptr [rax], eax ; rcl byte ptr [rdx], -8 ; call qword ptr [rdx]
0x0000000000105ad7 : test ah, ch ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010b778 : test ah, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000009bb09 : test al, -0x10 ; jne 0x9bb68 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009bb08 : test al, -0x10 ; jne 0x9bb69 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000021937 : test al, -0x18 ; ret
0x0000000000173e18 : test al, -0x1d ; add dword ptr [rax], eax ; loopne 0x173dd2 ; clc ; call rax
0x0000000000178788 : test al, -0x1e ; jmp 0x17878e
0x0000000000171158 : test al, -0x26 ; add byte ptr [rax], al ; push rax ; lock ; jmp rax
0x0000000000170cd0 : test al, -0x42 ; add byte ptr [rax], al ; rcr cl ; out dx, eax ; jmp rax
0x000000000015fcf8 : test al, -0x4f ; jmp rax
0x0000000000170aa0 : test al, -0x53 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x11], bh ; jmp rax
0x00000000001866e8 : test al, -0x55 ; hlt ; jmp qword ptr [rcx]
0x0000000000179d88 : test al, -0x55 ; in al, dx ; call qword ptr [rdi]
0x000000000017e5e8 : test al, -0x60 ; out dx, eax ; call rax
0x000000000015b5b7 : test al, -0x69 ; xchg eax, esp ; ret
0x0000000000170560 : test al, -0x74 ; add byte ptr [rax], al ; push rax ; jb 0x17055a ; call rax
0x0000000000170528 : test al, -0x75 ; add byte ptr [rax], al ; lock outsb dx, byte ptr [rsi] ; in al, dx ; call rax
0x0000000000188828 : test al, -0x79 ; cmc ; jmp qword ptr [rbx]
0x000000000016e5c1 : test al, -3 ; jmp rsi
0x000000000016f769 : test al, -4 ; call qword ptr [rsi + 0x26fffca7]
0x000000000016f8a5 : test al, -4 ; call rsp
0x000000000016f8a1 : test al, -4 ; inc dword ptr [rax + rbp*4 - 4] ; call rsp
0x000000000016f725 : test al, -4 ; jmp qword ptr [rax]
0x0000000000174e2d : test al, -6 ; call qword ptr [rax]
0x0000000000174e1d : test al, -6 ; jmp rax
0x00000000001709c9 : test al, 0 ; add byte ptr [rax + 0x56], ah ; out dx, al ; call qword ptr [rax]
0x0000000000113217 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000010e5d2 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000112359 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002bca0 : test al, 0 ; add byte ptr [rax], al ; ret
0x0000000000174a60 : test al, 0x39 ; add al, byte ptr [rax] ; and byte ptr [rbx - 6], al ; jmp rax
0x0000000000172080 : test al, 0x3a ; add dword ptr [rax], eax ; mov al, 0x4b ; hlt ; call qword ptr [rax]
0x00000000001720a0 : test al, 0x3b ; add dword ptr [rax], eax ; jo 0x1720fb ; hlt ; call rax
0x0000000000187868 : test al, 0x42 ; cmc ; jmp qword ptr [rcx]
0x00000000000bc95a : test al, 0x48 ; add eax, edx ; jmp rax
0x00000000000b42c3 : test al, 0x48 ; mov edi, dword ptr [rbp - 0x68] ; call r14
0x0000000000020d7a : test al, 0x48 ; mov esi, dword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000176f58 : test al, 0x5e ; jmp 0x176f5e
0x0000000000172588 : test al, 0x5f ; add dword ptr [rax], eax ; mov al, -0x75 ; cmc ; jmp rax
0x0000000000177258 : test al, 0x7a ; jmp 0x17725e
0x0000000000174370 : test al, 0xc ; add al, byte ptr [rax] ; push rax ; xchg eax, ecx ; stc ; call qword ptr [rax]
0x000000000008d1f0 : test al, al ; je 0x8d1e3 ; xor eax, eax ; ret
0x000000000008d198 : test al, al ; je 0x8d1ee ; xor eax, eax ; ret
0x000000000008f7a2 : test al, al ; jne 0x8f785 ; ret
0x000000000008f8e0 : test al, al ; jne 0x8f8c6 ; xor eax, eax ; ret
0x000000000009064a : test al, al ; jne 0x90638 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000f5c29 : test al, al ; mov byte ptr [rdi], al ; jne 0xf5c21 ; mov rax, rdi ; ret
0x00000000000f5df9 : test al, al ; mov byte ptr [rdi], al ; jne 0xf5df1 ; mov rax, r10 ; ret
0x0000000000118510 : test al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000016f2d5 : test bh, ah ; call qword ptr [rdx + 0x22fffc83]
0x000000000016f251 : test bh, ah ; call qword ptr [rsi]
0x000000000016f411 : test bh, ah ; call rax
0x000000000016f40d : test bh, ah ; inc dword ptr [rax - 0x7c] ; cld ; call rax
0x000000000016f391 : test bh, ah ; jmp rsp
0x0000000000173cb5 : test bh, al ; call qword ptr [rax]
0x0000000000173ca5 : test bh, al ; jmp rax
0x0000000000023171 : test bh, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000038138 : test bh, bh ; cmove eax, edx ; add rsp, 8 ; ret
0x0000000000038170 : test bh, bh ; cmovne eax, edx ; add rsp, 8 ; ret
0x000000000016e535 : test bh, bl ; call qword ptr [rax]
0x0000000000194581 : test bh, bl ; jmp qword ptr [rdx]
0x00000000000494da : test bh, ch ; ret 0xffff
0x00000000000dd721 : test bh, dl ; dec dword ptr [rcx - 0x73] ; add qword ptr [rax - 0x77], r9 ; ret 0x3948
0x00000000000b3278 : test bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xed31
0x000000000002cbe6 : test byte ptr [rax + 0x200], bh ; ret
0x00000000000b8fda : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x000000000010e4a5 : test byte ptr [rax + 0x63], 0x34 ; mov al, 0x48 ; add eax, esi ; jmp rax
0x0000000000111555 : test byte ptr [rax + 0x63], 0xc ; mov al, 0x48 ; add eax, ecx ; jmp rax
0x000000000017d8bc : test byte ptr [rax + rax - 0x1084e000], al ; jmp qword ptr [rsi]
0x00000000000d9bc4 : test byte ptr [rax + rax*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000417a5 : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x67e9
0x000000000010d06d : test byte ptr [rax + rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000041ae9 : test byte ptr [rax - 0x77], -0x28 ; pop rbx ; ret
0x00000000000c975b : test byte ptr [rax - 0x9fffffc], bl ; ret 0xf08
0x00000000000cc3cb : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x84c6
0x00000000000cd2c3 : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000170401 : test byte ptr [rax], al ; add al, ah ; in al, dx ; call qword ptr [rax]
0x000000000017d8bd : test byte ptr [rax], al ; add byte ptr [rax], ah ; jnp 0x17d8b8 ; jmp qword ptr [rsi]
0x000000000011d5aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x0000000000149e8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000014203a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x000000000009557a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009654a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000014206a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000009656a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009657a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000b3cca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; ret
0x0000000000069dba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000001420aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000965ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007750a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000014204a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009655a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000c550a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000007133a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000673aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000003717a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008fdaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000c4fb6 : test byte ptr [rbp + 0x39], al ; ret 0xe975
0x000000000017d9bc : test byte ptr [rbp + 0x7f900000], al ; out dx, eax ; call rax
0x00000000001811bc : test byte ptr [rbp - 0x71900000], bh ; int1 ; call qword ptr [rsi]
0x00000000000b596b : test byte ptr [rbp - 0x7b000002], ah ; ror byte ptr [rax - 0x77], cl ; ret
0x00000000000f327c : test byte ptr [rbx + 0x1c], 0x20 ; je 0xf32e8 ; xor eax, eax ; pop rbx ; ret
0x00000000000bd061 : test byte ptr [rbx - 0x76fffffd], ch ; ret 0x8349
0x00000000000768e6 : test byte ptr [rbx], -0x80 ; jne 0x768f6 ; pop rbx ; ret
0x000000000001fb47 : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000031c90 : test byte ptr [rcx + 0x63], 0x34 ; mov bl, 0x4c ; add esi, ebx ; jmp rsi
0x0000000000104ce1 : test byte ptr [rcx + rbp - 0xe], -0x7d ; ret 0xe82e
0x000000000003cb84 : test byte ptr [rcx + rbp*8 + 0x3948ffff], ch ; ret
0x00000000000c0878 : test byte ptr [rcx + rcx - 0x2a], 0x75 ; add dh, bl ; ret
0x0000000000038aec : test byte ptr [rcx + rcx], cl ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000000ef8a4 : test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x00000000000e5252 : test byte ptr [rcx - 0x77], -0x2c ; mov rbp, rax ; call rax
0x00000000000b2d1a : test byte ptr [rcx - 0x7d], -0x3a ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000011e3e6 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000174091 : test byte ptr [rcx], 0 ; push rax ; and cl, bh ; jmp rax
0x000000000005de6e : test byte ptr [rcx], al ; add byte ptr [rbx - 0x76be0008], al ; ret 0xd75
0x0000000000178dbc : test byte ptr [rcx], bh ; add byte ptr [rax], al ; loopne 0x178dbb ; jmp 0x178dca
0x0000000000029f22 : test byte ptr [rcx], cl ; add al, 0 ; add byte ptr [rbx + rcx*4 + 0xd], al ; ret 0x378d
0x0000000000081d64 : test byte ptr [rdi + 0x48000000], dl ; bsf eax, edx ; ret
0x000000000018a3bc : test byte ptr [rdi + 1], cl ; add al, al ; in al, -0xb ; jmp qword ptr [rcx]
0x000000000008e7aa : test byte ptr [rdi], -0x6b ; ror byte ptr [rax - 0x73], 0x65 ; fsubr dword ptr [rcx] ; ret 0x895b
0x00000000000819a6 : test byte ptr [rdi], -0x7c ; ret
0x0000000000072ee2 : test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000072ef2 : test byte ptr [rdi], 8 ; sete al ; ret
0x0000000000095ef8 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x00000000000a2e24 : test byte ptr [rdi], cl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000002cb74 : test byte ptr [rdx + 0x200], al ; ret
0x000000000002e181 : test byte ptr [rdx], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000074393 : test byte ptr [rdx], dh ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000007757b : test byte ptr [rdx], dh ; add byte ptr [rcx], al ; ret
0x00000000001879bc : test byte ptr [rip + 0x4a800001], ah ; cmc ; jmp qword ptr [rcx]
0x000000000017f2bc : test byte ptr [rsi - 0x2c600000], bl ; cld ; call qword ptr [rdx]
0x00000000000d643c : test byte ptr [rsi - 0x76000003], cl ; ret 0xdb31
0x0000000000064048 : test byte ptr [rsi], bl ; sub byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000020143 : test byte ptr [rsp + rdx], al ; ret
0x000000000009a1b2 : test ch, -0x10 ; je 0x9a1ab ; movzx eax, cl ; pop rbx ; ret
0x000000000017069d : test ch, ah ; jmp rax
0x0000000000116e98 : test ch, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000044c4b : test ch, bl ; or al, 0 ; add dh, dh ; ret
0x00000000000314f5 : test ch, dh ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x000000000003cb7b : test cl, al ; add eax, dword ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0x840f
0x000000000002f968 : test cl, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x0000000000028db7 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000000000105256 : test cl, cl ; jne 0x1051ac ; ret
0x000000000008d1d9 : test cl, cl ; jne 0x8d1b2 ; mov rax, rdi ; ret
0x000000000008f748 : test cl, cl ; jne 0x8f73d ; ret
0x000000000008f887 : test cl, cl ; jne 0x8f87e ; xor eax, eax ; ret
0x00000000000999af : test cl, cl ; jne 0x999a4 ; ret
0x0000000000099a5f : test cl, cl ; jne 0x99a54 ; ret
0x0000000000099d1f : test cl, cl ; jne 0x99d18 ; sub rax, 1 ; ret
0x00000000000ef935 : test cl, cl ; jne 0xef925 ; ret
0x000000000009a1da : test dh, -0x10 ; je 0x9a1a9 ; movzx eax, dl ; pop rbx ; ret
0x000000000009a1da : test dh, -0x10 ; je 0x9a1ab ; movzx eax, dl ; pop rbx ; ret
0x000000000006b5e4 : test dh, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000c3964 : test dh, bh ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000190ba9 : test dh, bh ; jmp qword ptr [rbx]
0x0000000000173205 : test dh, bh ; jmp rax
0x0000000000171e05 : test dh, bl ; call rax
0x0000000000171e1d : test dh, bl ; jmp qword ptr [rax]
0x0000000000161711 : test dh, ch ; call rax
0x00000000001616a1 : test dh, ch ; call rbx
0x00000000000493e2 : test dh, ch ; ret
0x000000000010b78a : test dh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001845bc : test dh, cl ; add byte ptr [rax], al ; xor byte ptr [rcx - 0xd], cl ; jmp qword ptr [rdi]
0x000000000008f940 : test dh, dh ; jne 0x8f937 ; mov qword ptr [rdx], rcx ; ret
0x0000000000023495 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000016f410 : test dil, spl ; call rax
0x0000000000149d14 : test dl, 0x40 ; jne 0x149cd9 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000149d42 : test dl, 4 ; jne 0x149cd9 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000001828bc : test dl, ah ; add byte ptr [rax], al ; nop ; pop rcx ; call rdi
0x000000000002565f : test dl, bl ; add al, 0 ; add bh, dh ; ret 0
0x000000000002566b : test dl, cl ; add al, 0 ; add bh, dh ; ret 0
0x00000000001060f1 : test dl, dl ; jne 0x1060d5 ; ret
0x0000000000032172 : test dl, dl ; jne 0x32154 ; ret
0x000000000008f704 : test dl, dl ; jne 0x8f6fd ; ret
0x0000000000099bcf : test dl, dl ; jne 0x99bc8 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000b9c1e : test dl, dl ; jne 0xb9bfd ; xor eax, eax ; ret
0x00000000000b9ee6 : test dl, dl ; jne 0xb9ece ; ret
0x0000000000078c8f : test dword ptr [rax + 0x32], edx ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000085a99 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x000000000009622b : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000009773b : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x000000000009763b : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x000000000009bac7 : test dword ptr [rax + rax - 0x72b80000], edx ; lock ; ret
0x000000000005cc55 : test dword ptr [rax + rdi*8 - 0x76be0001], edx ; ret 0x8b48
0x0000000000055e56 : test dword ptr [rax - 0x7c000002], ecx ; ret 0x8908
0x000000000006b5e5 : test dword ptr [rax], 0x89480000 ; ret 0x8b48
0x00000000001715e9 : test dword ptr [rax], 0xf0f8a000 ; jmp qword ptr [rax]
0x000000000004fe52 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000007d247 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000007d246 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000005dc94 : test dword ptr [rbp - 0x7600005e], edi ; ret
0x000000000008aa3f : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000008fcbe : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000bde7d : test dword ptr [rbx + 0x39000001], esp ; ret 0xeb7c
0x0000000000001b0e : test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x000000000009b110 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x000000000009b9f8 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000141f88 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000141f68 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000141e80 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000097830 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000148697 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000148ae6 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000002b63 : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x000000000008fc28 : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000084d8a : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x00000000000857b0 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x0000000000141c8a : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000014866d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000095e12 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000014857d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014848d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009b157 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x000000000014bbc7 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x000000000009b127 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x0000000000026540 : test dword ptr [rcx + rdi - 0x2e], 0x394de275 ; ret 0x850f
0x000000000014202a : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x000000000010a067 : test dword ptr [rcx - 0x72b40000], esi ; and al, 0x18 ; call qword ptr [rax]
0x000000000004c9bd : test dword ptr [rcx - 0x7c000011], esp ; ret
0x00000000000d4b1a : test dword ptr [rcx - 0x9fffffe], ecx ; ret 0xf01
0x000000000005dce4 : test dword ptr [rcx], eax ; add byte ptr [rbx - 0x76be0008], al ; ret 0x850f
0x000000000009ba5a : test dword ptr [rcx], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; lock ; ret
0x0000000000064880 : test dword ptr [rcx], ebp ; ret
0x000000000008599a : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x00000000000343e3 : test dword ptr [rdi + rax*8], edx ; setne al ; movzx eax, al ; ret
0x0000000000095f77 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000095f57 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x00000000000f1a38 : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x00000000000f1ed4 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x000000000008a855 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x00000000000345c6 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x000000000005844f : test dword ptr [rdi], ebp ; xor al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x8b48
0x0000000000096111 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x0000000000097519 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x00000000001499e2 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001483b2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000045fb1 : test dword ptr [rdx + rdi*8 + 0x1ffff], esp ; add byte ptr [rax], al ; jmp rax
0x0000000000141f47 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x00000000000588de : test dword ptr [rdx], edi ; out -1, al ; inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x0000000000057497 : test dword ptr [rip - 0x7cb80000], edx ; ret
0x000000000009ba9d : test dword ptr [rsi + 0x48000000], edi ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000014b552 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000095f35 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x0000000000095f15 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x0000000000095e2d : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x000000000008ab3e : test dword ptr [rsi - 0xc000005], esp ; ret
0x00000000001488b8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000000c5d6e : test eax, 0x415d5b90 ; pop rsp ; ret
0x000000000010b293 : test eax, 0x48002918 ; mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x000000000008deae : test eax, 0x4bb ; add byte ptr [rax + 0x29], cl ; ret
0x000000000015d2a0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000001323e6 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000332f8 : test eax, 0x7fffff ; je 0x332f1 ; ret
0x000000000005dce3 : test eax, 0x83000185 ; clc ; inc dword ptr [rcx - 0x77] ; ret 0x850f
0x0000000000062ea4 : test eax, 0x89000017 ; ret 0x348
0x000000000016f721 : test eax, 0xa890fffc ; cld ; jmp qword ptr [rax]
0x000000000016f7d9 : test eax, 0xa942fffc ; cld ; call rdx
0x000000000016f759 : test eax, 0xa956fffc ; cld ; jmp rsi
0x000000000016f915 : test eax, 0xa980fffc ; cld ; call qword ptr [rax]
0x0000000000162396 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x00000000000e6f6f : test eax, eax ; cmove eax, edx ; ret
0x0000000000036aa4 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x0000000000106810 : test eax, eax ; je 0x10681c ; ret
0x0000000000109181 : test eax, eax ; je 0x109191 ; mov rdi, rsp ; call rax
0x00000000001097e5 : test eax, eax ; je 0x1097f5 ; mov rdi, rbp ; call rax
0x0000000000109b76 : test eax, eax ; je 0x109b84 ; ret
0x000000000010a7a3 : test eax, eax ; je 0x10a7b3 ; mov rdi, r14 ; call rax
0x000000000010ad11 : test eax, eax ; je 0x10ad26 ; xor eax, eax ; ret
0x000000000010ee28 : test eax, eax ; je 0x10ee38 ; mov rdi, r12 ; call rax
0x000000000010f009 : test eax, eax ; je 0x10f01b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000011005f : test eax, eax ; je 0x11006f ; mov rdi, rbp ; call rax
0x000000000011011e : test eax, eax ; je 0x11012e ; mov rdi, r13 ; call rax
0x0000000000110cbd : test eax, eax ; je 0x110ccf ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000111369 : test eax, eax ; je 0x111379 ; mov rdi, r12 ; call rax
0x00000000001116dd : test eax, eax ; je 0x1116ef ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000011310c : test eax, eax ; je 0x1130ea ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001130dd : test eax, eax ; je 0x1130ed ; pop rbx ; ret
0x0000000000113149 : test eax, eax ; je 0x113101 ; pop rbx ; ret
0x0000000000113c99 : test eax, eax ; je 0x113cab ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001142f2 : test eax, eax ; je 0x114304 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000117ed6 : test eax, eax ; je 0x117ee6 ; xor eax, eax ; ret
0x000000000011edf3 : test eax, eax ; je 0x11edff ; xchg eax, edx ; sub eax, edx ; ret
0x000000000011fdd8 : test eax, eax ; je 0x11fde4 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000000202dc : test eax, eax ; je 0x202ec ; call rax
0x0000000000020308 : test eax, eax ; je 0x20314 ; jmp rax
0x0000000000021569 : test eax, eax ; je 0x21558 ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x000000000002a2b2 : test eax, eax ; je 0x2a2bc ; call rax
0x000000000002b4a9 : test eax, eax ; je 0x2b4b3 ; call rax
0x0000000000073b8d : test eax, eax ; je 0x73b9d ; pop rbx ; ret
0x0000000000078d43 : test eax, eax ; je 0x78d4d ; call rax
0x000000000007d269 : test eax, eax ; je 0x7d273 ; call rax
0x00000000000818f0 : test eax, eax ; je 0x81908 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b769c : test eax, eax ; je 0xb76a6 ; call rax
0x00000000000b78b1 : test eax, eax ; je 0xb78bf ; call rax
0x00000000000c090a : test eax, eax ; je 0xc08f0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0f9c : test eax, eax ; je 0xe0fa7 ; ret
0x00000000000e2ab1 : test eax, eax ; je 0xe2ac0 ; mov qword ptr [rax], rdx ; ret
0x00000000000e640c : test eax, eax ; je 0xe64b0 ; call rax
0x00000000000e6583 : test eax, eax ; je 0xe6688 ; call rax
0x00000000000f4e58 : test eax, eax ; je 0xf4e64 ; ret
0x00000000000f700a : test eax, eax ; je 0xf7020 ; add rsp, 8 ; ret
0x00000000000ff654 : test eax, eax ; je 0xff664 ; mov rdi, rbx ; call rax
0x00000000000e8212 : test eax, eax ; jl 0xe825b ; je 0xe821f ; ret
0x0000000000106bda : test eax, eax ; jne 0x106be4 ; ret
0x000000000010c3a0 : test eax, eax ; jne 0x10c387 ; xor eax, eax ; pop rbx ; ret
0x000000000010f246 : test eax, eax ; jne 0x10f254 ; ret
0x0000000000113eb6 : test eax, eax ; jne 0x113ec4 ; ret
0x000000000011de66 : test eax, eax ; jne 0x11de76 ; xor eax, eax ; ret
0x000000000011de96 : test eax, eax ; jne 0x11dea6 ; xor eax, eax ; ret
0x000000000011dec6 : test eax, eax ; jne 0x11ded6 ; xor eax, eax ; ret
0x000000000011def6 : test eax, eax ; jne 0x11df06 ; xor eax, eax ; ret
0x000000000011df26 : test eax, eax ; jne 0x11df36 ; xor eax, eax ; ret
0x000000000011df56 : test eax, eax ; jne 0x11df66 ; xor eax, eax ; ret
0x000000000014c7c6 : test eax, eax ; jne 0x14c7d5 ; ret
0x000000000014cdff : test eax, eax ; jne 0x14ce0d ; pop rbx ; ret
0x0000000000033996 : test eax, eax ; jne 0x339a5 ; ret
0x000000000006739f : test eax, eax ; jne 0x673b8 ; mov rax, rbx ; pop rbx ; ret
0x0000000000077244 : test eax, eax ; jne 0x7723d ; ret
0x0000000000078655 : test eax, eax ; jne 0x78689 ; xor edi, edi ; call qword ptr [r14]
0x000000000007fb8f : test eax, eax ; jne 0x7fb85 ; ret
0x0000000000083c0c : test eax, eax ; jne 0x83bd6 ; add rsp, 8 ; ret
0x0000000000083c2f : test eax, eax ; jne 0x83c48 ; add rsp, 8 ; ret
0x0000000000084dc7 : test eax, eax ; jne 0x84e27 ; xor rax, rax ; ret
0x000000000008fcf8 : test eax, eax ; jne 0x8fd76 ; xor eax, eax ; ret
0x000000000009bbe1 : test eax, eax ; jne 0x9bbb5 ; ret
0x000000000009bca6 : test eax, eax ; jne 0x9bc9e ; xor eax, eax ; ret
0x00000000000f43d6 : test eax, eax ; jne 0xf43e9 ; mov eax, 1 ; ret
0x00000000000f4406 : test eax, eax ; jne 0xf4416 ; xor eax, eax ; ret
0x00000000000f4436 : test eax, eax ; jne 0xf4446 ; xor eax, eax ; ret
0x00000000000f4466 : test eax, eax ; jne 0xf4476 ; xor eax, eax ; ret
0x00000000000f4496 : test eax, eax ; jne 0xf44a6 ; xor eax, eax ; ret
0x00000000000f44c6 : test eax, eax ; jne 0xf44d6 ; xor eax, eax ; ret
0x00000000000f44f6 : test eax, eax ; jne 0xf4506 ; xor eax, eax ; ret
0x00000000000f4526 : test eax, eax ; jne 0xf4536 ; xor eax, eax ; ret
0x00000000000f4556 : test eax, eax ; jne 0xf4566 ; xor eax, eax ; ret
0x00000000000f4586 : test eax, eax ; jne 0xf4596 ; xor eax, eax ; ret
0x00000000000f45b6 : test eax, eax ; jne 0xf45c6 ; xor eax, eax ; ret
0x00000000000f45e6 : test eax, eax ; jne 0xf45f6 ; xor eax, eax ; ret
0x00000000000f4616 : test eax, eax ; jne 0xf4626 ; xor eax, eax ; ret
0x00000000000f4646 : test eax, eax ; jne 0xf4656 ; xor eax, eax ; ret
0x00000000000f4676 : test eax, eax ; jne 0xf4686 ; xor eax, eax ; ret
0x00000000000f46a6 : test eax, eax ; jne 0xf46b6 ; xor eax, eax ; ret
0x00000000000f46d6 : test eax, eax ; jne 0xf46e6 ; xor eax, eax ; ret
0x00000000000f4706 : test eax, eax ; jne 0xf4716 ; xor eax, eax ; ret
0x00000000000f4736 : test eax, eax ; jne 0xf4746 ; xor eax, eax ; ret
0x00000000000f4766 : test eax, eax ; jne 0xf4776 ; xor eax, eax ; ret
0x00000000000f4796 : test eax, eax ; jne 0xf47a6 ; xor eax, eax ; ret
0x00000000000f47f6 : test eax, eax ; jne 0xf4806 ; xor eax, eax ; ret
0x00000000000f4826 : test eax, eax ; jne 0xf4836 ; xor eax, eax ; ret
0x00000000000f4856 : test eax, eax ; jne 0xf4866 ; xor eax, eax ; ret
0x00000000000f4886 : test eax, eax ; jne 0xf4896 ; xor eax, eax ; ret
0x00000000000f48b6 : test eax, eax ; jne 0xf48c6 ; xor eax, eax ; ret
0x00000000000f48e6 : test eax, eax ; jne 0xf48f6 ; xor eax, eax ; ret
0x00000000000f4916 : test eax, eax ; jne 0xf4926 ; xor eax, eax ; ret
0x00000000000f4946 : test eax, eax ; jne 0xf4956 ; xor eax, eax ; ret
0x00000000000f4976 : test eax, eax ; jne 0xf4986 ; xor eax, eax ; ret
0x00000000000f49bf : test eax, eax ; jne 0xf49bb ; pop rdx ; pop r10 ; ret
0x00000000000f4ab3 : test eax, eax ; jne 0xf4ac5 ; ret
0x00000000000f4e1b : test eax, eax ; jne 0xf4de5 ; leave ; ret
0x000000000007156b : test eax, eax ; js 0x7157d ; ret
0x000000000007d516 : test eax, eax ; js 0x7d525 ; ret
0x00000000000a5298 : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000007387e : test ebp, ebp ; jne 0x73898 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000084cf0 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000015ecfd : test ebp, edi ; call rsi
0x000000000015ed71 : test ebp, edi ; inc edx ; test ebp, edi ; jmp rax
0x000000000015ed75 : test ebp, edi ; jmp rax
0x0000000000179671 : test ebp, esp ; jmp qword ptr [rdi]
0x00000000000c5d6b : test ebx, ebx ; je 0xc5d21 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014c8a4 : test ebx, ebx ; mov rdx, rbx ; jne 0x14c8a1 ; pop rbx ; ret
0x0000000000149d02 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000149d0f : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000002a40e : test ecx, ecx ; je 0x2a418 ; call rcx
0x0000000000067ad8 : test ecx, ecx ; je 0x67ae5 ; ret
0x000000000009bbcb : test ecx, ecx ; jne 0x9bbc5 ; ret
0x000000000009d099 : test ecx, ecx ; jne 0x9d057 ; mov rax, rdx ; ret
0x000000000009a413 : test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0x9a40f ; ret
0x00000000000837f7 : test ecx, ecx ; or eax, dword ptr [rax] ; ret
0x000000000005b2c1 : test edi, ebp ; fdivp st(7) ; inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000014c57b : test edi, edi ; jne 0x14c56f ; pop rbx ; ret
0x00000000000f8c22 : test edi, edi ; js 0xf8c39 ; mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000058823 : test edi, esi ; loope 0x5882d ; inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000016f209 : test edi, esp ; call qword ptr [rax]
0x000000000016f405 : test edi, esp ; jmp qword ptr [rax]
0x000000000016f2c9 : test edi, esp ; jmp rdx
0x000000000010b323 : test edx, edx ; je 0x10b333 ; mov rdi, rbp ; call rdx
0x000000000014c174 : test edx, edx ; je 0x14c17e ; call rdx
0x000000000014c287 : test edx, edx ; je 0x14c296 ; call rdx
0x0000000000020f99 : test edx, edx ; je 0x20f88 ; mov rdi, qword ptr [r15 + 0x18] ; call rdx
0x00000000000732ea : test edx, edx ; je 0x73301 ; mov eax, 0xffffffff ; ret
0x0000000000081b39 : test edx, edx ; je 0x81b47 ; bsf eax, edx ; ret
0x0000000000081b39 : test edx, edx ; je 0x81b48 ; bsf eax, edx ; ret
0x0000000000081be2 : test edx, edx ; je 0x81bf7 ; bsf rax, rdx ; ret
0x0000000000081be2 : test edx, edx ; je 0x81bf8 ; bsf rax, rdx ; ret
0x0000000000081b86 : test edx, edx ; je 0x81c08 ; bsf rax, rdx ; ret
0x0000000000081dd1 : test edx, edx ; je 0x81df7 ; bsf rax, rdx ; ret
0x0000000000081dd1 : test edx, edx ; je 0x81df8 ; bsf rax, rdx ; ret
0x00000000000b7831 : test edx, edx ; je 0xb783f ; call rdx
0x0000000000103659 : test edx, edx ; jne 0x103695 ; ret
0x0000000000113c15 : test edx, edx ; jne 0x113c05 ; pop rbx ; ret
0x000000000006dfaf : test edx, edx ; jne 0x6dfa5 ; ret
0x000000000006f064 : test edx, edx ; jne 0x6f0c9 ; mov rdi, rsi ; call 0x9b349
0x00000000000753e3 : test edx, edx ; jne 0x753f4 ; ret
0x0000000000075ecf : test edx, edx ; jne 0x75ec5 ; ret
0x000000000007fc39 : test edx, edx ; jne 0x7fc35 ; ret
0x00000000000f4cfd : test edx, edx ; jne 0xf4cf5 ; leave ; ret
0x000000000009beef : test edx, edx ; mov dword ptr [rax], edx ; jne 0x9beef ; ret
0x00000000000a7adf : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xa7ae0 ; ret
0x00000000001164f0 : test edx, edx ; mov eax, 1 ; jne 0x116509 ; ret
0x0000000000116530 : test edx, edx ; mov eax, 1 ; jne 0x116549 ; ret
0x000000000009c339 : test edx, edx ; sete al ; ret
0x0000000000149cf5 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000070357 : test edx, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000171405 : test esi, eax ; jmp rax
0x0000000000161369 : test esi, ebp ; call qword ptr [rbx]
0x0000000000161321 : test esi, ebp ; call rax
0x0000000000161319 : test esi, ebp ; jmp rsp
0x0000000000161365 : test esi, ebp ; lcall ptr [rdi] ; test esi, ebp ; call qword ptr [rbx]
0x0000000000173215 : test esi, edi ; call qword ptr [rax]
0x0000000000182dc1 : test esi, edx ; jmp qword ptr [rcx]
0x0000000000029a49 : test esi, esi ; je 0x29a55 ; pop rbx ; ret
0x0000000000081cc1 : test esi, esi ; jne 0x81cd0 ; xor rax, rax ; ret
0x000000000008c9ce : test esi, esi ; jne 0x8c9e1 ; jmp 0x8c99b
0x000000000005db9b : test esp, edx ; mov ah, -1 ; inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000007fbef : test esp, esp ; jne 0x7fc20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000345c5 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x000000000007fbee : test r12, r12 ; jne 0x7fc21 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f4e1a : test r8, r8 ; jne 0xf4de6 ; leave ; ret
0x000000000008f7a1 : test r8b, r8b ; jne 0x8f786 ; ret
0x000000000008f8df : test r8b, r8b ; jne 0x8f8c7 ; xor eax, eax ; ret
0x000000000011edf2 : test r8d, r8d ; je 0x11ee00 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000011fdd7 : test r8d, r8d ; je 0x11fde5 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000009bbe0 : test r8d, r8d ; jne 0x9bbb6 ; ret
0x000000000009d098 : test r9d, r9d ; jne 0x9d058 ; mov rax, rdx ; ret
0x0000000000109180 : test rax, rax ; je 0x109192 ; mov rdi, rsp ; call rax
0x00000000001097e4 : test rax, rax ; je 0x1097f6 ; mov rdi, rbp ; call rax
0x000000000010a7a2 : test rax, rax ; je 0x10a7b4 ; mov rdi, r14 ; call rax
0x000000000010ee27 : test rax, rax ; je 0x10ee39 ; mov rdi, r12 ; call rax
0x000000000010f008 : test rax, rax ; je 0x10f01c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000011005e : test rax, rax ; je 0x110070 ; mov rdi, rbp ; call rax
0x000000000011011d : test rax, rax ; je 0x11012f ; mov rdi, r13 ; call rax
0x0000000000110cbc : test rax, rax ; je 0x110cd0 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000111368 : test rax, rax ; je 0x11137a ; mov rdi, r12 ; call rax
0x00000000001116dc : test rax, rax ; je 0x1116f0 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00000000001130dc : test rax, rax ; je 0x1130ee ; pop rbx ; ret
0x0000000000113148 : test rax, rax ; je 0x113102 ; pop rbx ; ret
0x0000000000113c98 : test rax, rax ; je 0x113cac ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001142f1 : test rax, rax ; je 0x114305 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000000202db : test rax, rax ; je 0x202ed ; call rax
0x0000000000020307 : test rax, rax ; je 0x20315 ; jmp rax
0x0000000000021568 : test rax, rax ; je 0x21559 ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x000000000002a2b1 : test rax, rax ; je 0x2a2bd ; call rax
0x000000000002b4a8 : test rax, rax ; je 0x2b4b4 ; call rax
0x0000000000073b8c : test rax, rax ; je 0x73b9e ; pop rbx ; ret
0x0000000000078d42 : test rax, rax ; je 0x78d4e ; call rax
0x000000000007d268 : test rax, rax ; je 0x7d274 ; call rax
0x00000000000818ef : test rax, rax ; je 0x81909 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b769b : test rax, rax ; je 0xb76a7 ; call rax
0x00000000000b78b0 : test rax, rax ; je 0xb78c0 ; call rax
0x00000000000e0f9b : test rax, rax ; je 0xe0fa8 ; ret
0x00000000000e2ab0 : test rax, rax ; je 0xe2ac1 ; mov qword ptr [rax], rdx ; ret
0x00000000000e640b : test rax, rax ; je 0xe64b1 ; call rax
0x00000000000e6582 : test rax, rax ; je 0xe6689 ; call rax
0x00000000000f4e57 : test rax, rax ; je 0xf4e65 ; ret
0x00000000000f7009 : test rax, rax ; je 0xf7021 ; add rsp, 8 ; ret
0x00000000000ff653 : test rax, rax ; je 0xff665 ; mov rdi, rbx ; call rax
0x00000000000e8211 : test rax, rax ; jl 0xe825c ; je 0xe8220 ; ret
0x0000000000077243 : test rax, rax ; jne 0x7723e ; ret
0x0000000000078654 : test rax, rax ; jne 0x7868a ; xor edi, edi ; call qword ptr [r14]
0x000000000007fb8e : test rax, rax ; jne 0x7fb86 ; ret
0x000000000007387d : test rbp, rbp ; jne 0x73899 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002a40d : test rcx, rcx ; je 0x2a419 ; call rcx
0x000000000014c57a : test rdi, rdi ; jne 0x14c570 ; pop rbx ; ret
0x000000000010b322 : test rdx, rdx ; je 0x10b334 ; mov rdi, rbp ; call rdx
0x000000000014c173 : test rdx, rdx ; je 0x14c17f ; call rdx
0x000000000014c286 : test rdx, rdx ; je 0x14c297 ; call rdx
0x0000000000020f98 : test rdx, rdx ; je 0x20f89 ; mov rdi, qword ptr [r15 + 0x18] ; call rdx
0x0000000000081be1 : test rdx, rdx ; je 0x81bf8 ; bsf rax, rdx ; ret
0x0000000000081be1 : test rdx, rdx ; je 0x81bf9 ; bsf rax, rdx ; ret
0x0000000000081b85 : test rdx, rdx ; je 0x81c09 ; bsf rax, rdx ; ret
0x0000000000081dd0 : test rdx, rdx ; je 0x81df8 ; bsf rax, rdx ; ret
0x0000000000081dd0 : test rdx, rdx ; je 0x81df9 ; bsf rax, rdx ; ret
0x00000000000b7830 : test rdx, rdx ; je 0xb7840 ; call rdx
0x0000000000113c14 : test rdx, rdx ; jne 0x113c06 ; pop rbx ; ret
0x000000000006dfae : test rdx, rdx ; jne 0x6dfa6 ; ret
0x00000000000753e2 : test rdx, rdx ; jne 0x753f5 ; ret
0x0000000000075ece : test rdx, rdx ; jne 0x75ec6 ; ret
0x000000000007fc38 : test rdx, rdx ; jne 0x7fc36 ; ret
0x00000000000f4cfc : test rdx, rdx ; jne 0xf4cf6 ; leave ; ret
0x0000000000182dd8 : test rsi, rdx ; jmp qword ptr [rcx]
0x0000000000081cc0 : test rsi, rsi ; jne 0x81cd1 ; xor rax, rax ; ret
0x000000000008c9cd : test rsi, rsi ; jne 0x8c9e2 ; jmp 0x8c99c
0x0000000000161710 : test sil, bpl ; call rax
0x000000000008f93f : test sil, sil ; jne 0x8f938 ; mov qword ptr [rdx], rcx ; ret
0x0000000000002b62 : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000074ce7 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x00000000001271ba : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x00000000001270f0 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x0000000000126eb9 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014bdf0 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000126fff : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x0000000000126e23 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000126e86 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014bd9a : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000014be05 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000014be09 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000123e21 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014be99 : vzeroupper ; ret
0x00000000001707d1 : wait ; add byte ptr [rax], al ; nop ; sub ch, ch ; jmp rax
0x000000000016f9fd : wait ; cld ; call qword ptr [rdx]
0x000000000016f97d : wait ; cld ; jmp qword ptr [rsi]
0x000000000016fb3d : wait ; cld ; jmp rax
0x000000000016e63c : wait ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp qword ptr [rax]
0x00000000000f5251 : wait ; ret
0x00000000000a1cad : wait ; ret 0xc
0x000000000007e699 : wait ; ret 0xe
0x0000000000033189 : wait ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000ea229 : wait ; xor byte ptr [rbx], ch ; add byte ptr [rcx + 1], cl ; fmul qword ptr [rax + 0x39] ; ret
0x00000000000995ed : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009966f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000099771 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000002bb4 : xabort -0xd ; ret
0x0000000000002bb0 : xbegin 0xfffffffff8c6efb0 ; ret
0x000000000011ebff : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011f423 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000120d6f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e7ef : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x000000000011f513 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011f333 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011e2fb : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002b67b : xchg al, cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000011eb0b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000124d1c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000012453c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000017db59 : xchg bh, ch ; jmp qword ptr [rcx]
0x000000000012492c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012414c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126c4d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000173245 : xchg bh, dh ; call rax
0x000000000016fe15 : xchg bl, ch ; jmp qword ptr [rax]
0x0000000000125751 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000126951 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000126051 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000126351 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000125a49 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011fd7b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x00000000001218cf : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001210af : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000011e57f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000012088f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000021f16 : xchg byte ptr [rax - 0x75], cl ; ret
0x000000000011e8bf : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x000000000011f8d3 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000000cee0d : xchg byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret
0x000000000011ebdb : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001242eb : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011ecab : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000077f6b : xchg byte ptr [rax], dl ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf08
0x00000000000a5c11 : xchg byte ptr [rbp + 0x29], cl ; ret
0x00000000001213ef : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f063 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x00000000000218a6 : xchg byte ptr [rbp + rcx*4 + 0x24], cl ; ret
0x0000000000120bcf : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000111ce4 : xchg byte ptr [rbp + rdi*8 - 1], al ; dec dword ptr [rax - 0x7d] ; ret 0x4807
0x00000000001203af : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000012158f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000011ea5f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011fab3 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011f243 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000011e24f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00000000000472c4 : xchg byte ptr [rbx - 0x1600000a], cl ; ret
0x0000000000180579 : xchg byte ptr [rbx], al ; mov dword ptr [rdx], es ; push rdx ; ret
0x0000000000067367 : xchg byte ptr [rbx], dh ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000011fc93 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000008b986 : xchg byte ptr [rcx - 0x76b70001], dl ; ret 0xc031
0x00000000001122c6 : xchg byte ptr [rcx], al ; add al, ch ; ret 0xffe2
0x000000000018dacd : xchg byte ptr [rcx], al ; add al, dl ; mov bl, -0xa ; call qword ptr [rcx]
0x000000000011e64f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00000000001247dc : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000123ffc : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012510c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011eb2f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000011fba3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011e31f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000001206ef : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e3c1 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f4e5 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f5d5 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f3f5 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000074194 : xchg byte ptr [rdx], dh ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000011e71f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000125cf6 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120825 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121525 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126bf6 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001262f6 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000125ff6 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000121045 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001246dd : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001259ee : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000b6304 : xchg byte ptr [rsi], ch ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000012500d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e98f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011f153 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000012307f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000122e9f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000123877 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000016156d : xchg ch, dh ; call rdx
0x00000000001615c1 : xchg ch, dh ; jmp rsi
0x000000000016169d : xchg ch, dh ; ljmp ptr [rcx] ; test dh, ch ; call rbx
0x0000000000122797 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000123697 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000be32b : xchg cl, ch ; ret 0xfffb
0x0000000000121865 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120b65 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000120685 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121385 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000012482d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000002591 : xchg dh, ch ; ret 0x88ad
0x000000000012404d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e3e5 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017db58 : xchg dil, bpl ; jmp qword ptr [rcx]
0x000000000011f305 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f125 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f215 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f035 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000015fc91 : xchg dl, dh ; call qword ptr [rax - 0x1f000d78]
0x000000000015fc90 : xchg dl, sil ; call qword ptr [rax - 0x1f000d78]
0x0000000000063202 : xchg dword ptr [rax - 0x76fffffe], ebp ; ret 0x348
0x000000000002dd80 : xchg dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000002ddef : xchg dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x0000000000022841 : xchg dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000017db55 : xchg dword ptr [rax], eax ; add byte ptr [rax - 0x7a], cl ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000170479 : xchg dword ptr [rax], eax ; add byte ptr [rax], dl ; in al, dx ; call qword ptr [rax]
0x0000000000063035 : xchg dword ptr [rbp - 0x76ffffee], edi ; ret 0x348
0x000000000009bbdf : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], -0xd ; ret
0x00000000000bd969 : xchg dword ptr [rbx + 0x39fffffb], ebp ; ret
0x000000000015af6c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000000aec03 : xchg dword ptr [rcx + rax - 0x39], ecx ; jmp rdi
0x00000000000da9e1 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000062ea3 : xchg dword ptr [rcx - 0x76ffffe9], ebp ; ret 0x348
0x000000000005ad37 : xchg dword ptr [rcx - 0x7d000000], edx ; ret 0x8308
0x00000000000ace75 : xchg dword ptr [rdi + rbp*8 - 1], esp ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000f49bd : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0xf49bd ; pop rdx ; pop r10 ; ret
0x000000000005a398 : xchg dword ptr [rdx - 0x76ffffcf], esp ; ret 0x348
0x0000000000062ae3 : xchg dword ptr [rsi - 0x76ffffeb], ebx ; ret 0x348
0x00000000000b6184 : xchg dword ptr [rsi], ebp ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000015b10b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000001223d8 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x00000000000a52a9 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015fdd1 : xchg eax, ebp ; cld ; call rax
0x0000000000174db5 : xchg eax, ebp ; cli ; call rax
0x000000000015de43 : xchg eax, ebp ; in al, dx ; lock ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, -0x55 ; ret
0x000000000004d577 : xchg eax, ebp ; je 0x4d57f ; dec dword ptr [rcx - 0x77] ; ret
0x000000000015e5ac : xchg eax, ebp ; jrcxz 0x15e5b5 ; push qword ptr [rax] ; jrcxz 0x15e5b9 ; call rdi
0x00000000000fd002 : xchg eax, ebp ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00000000000020c3 : xchg eax, ebp ; ret
0x0000000000100e58 : xchg eax, ebp ; ret 0x2041
0x0000000000038a5a : xchg eax, ebp ; ret 0x2948
0x000000000008f785 : xchg eax, ebp ; ret 0x3941
0x00000000000342b5 : xchg eax, ebp ; ret 0x5489
0x0000000000078e88 : xchg eax, ebp ; ret 0x7eb
0x00000000000cb677 : xchg eax, ebp ; ret 0x8341
0x000000000007a4fe : xchg eax, ebp ; ret 0x8349
0x00000000000e3142 : xchg eax, ebp ; ret 0x8440
0x000000000008d176 : xchg eax, ebp ; ret 0x8445
0x000000000003844f : xchg eax, ebp ; ret 0x8545
0x00000000000420c7 : xchg eax, ebp ; ret 0x854d
0x0000000000039409 : xchg eax, ebp ; ret 0x941
0x000000000002f126 : xchg eax, ebp ; ret 0x953d
0x00000000000a863b : xchg eax, ebp ; ret 0xb60f
0x000000000004611c : xchg eax, ebp ; ret 0xbd83
0x000000000008e7a4 : xchg eax, ebp ; ret 0xc031
0x0000000000038357 : xchg eax, ebp ; ret 0xc748
0x00000000000328c0 : xchg eax, ebp ; ret 0xc984
0x00000000000a85e2 : xchg eax, ebp ; ret 0xd138
0x00000000000a9439 : xchg eax, ebp ; ret 0xd184
0x00000000000383ac : xchg eax, ebp ; ret 0xd348
0x0000000000069d6b : xchg eax, ebp ; ret 0xdaf7
0x000000000009ce73 : xchg eax, ebp ; ret 0xe883
0x0000000000041f72 : xchg eax, ebp ; ret 0xe8c1
0x0000000000041f5e : xchg eax, ebp ; ret 0xe8d1
0x00000000001046b3 : xchg eax, ebp ; ret 0xf45
0x0000000000100f28 : xchg eax, ebp ; ret 0xf685
0x000000000009cb83 : xchg eax, ebp ; ret 0xf883
0x000000000008e7ac : xchg eax, ebp ; ror byte ptr [rax - 0x73], 0x65 ; fsubr dword ptr [rcx] ; ret 0x895b
0x00000000000e1b72 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x00000000000d150c : xchg eax, ebp ; ror byte ptr [rdi], -0x4a ; ror byte ptr [rdi], 0x47 ; ret 0x66c3
0x00000000000679aa : xchg eax, ebp ; ror byte ptr [rdi], -0x4a ; sal bh, -0x28 ; pop rbx ; ret
0x00000000000d14ee : xchg eax, ebp ; ror byte ptr [rdi], -0x4a ; sal bh, -0x28 ; ret
0x00000000000e168f : xchg eax, ebp ; sal bh, -0x28 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001125a1 : xchg eax, ebp ; sal bh, -0x28 ; add rsp, 0x18 ; ret
0x000000000006bb4f : xchg eax, ebp ; sub eax, 0x89480033 ; ret
0x0000000000002b61 : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x00000000001706d1 : xchg eax, ebx ; add byte ptr [rax], al ; push rax ; scasb al, byte ptr [rdi] ; in al, dx ; call rax
0x00000000000be631 : xchg eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000147800 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000003909 : xchg eax, ebx ; and cl, ah ; ret
0x00000000000fda79 : xchg eax, ebx ; and eax, dword ptr [rax] ; add bh, dh ; fsubr st(1) ; ret 0xfffd
0x000000000009be49 : xchg eax, ebx ; clc ; or al, byte ptr [rax] ; ret
0x000000000009543c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000012a4a2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000005d9f9 : xchg eax, ebx ; mov byte ptr [rcx], al ; add byte ptr [rbx - 0x76be0008], al ; ret 0x850f
0x000000000017e1f1 : xchg eax, ebx ; out dx, eax ; jmp qword ptr [rax]
0x000000000010695c : xchg eax, ebx ; ret
0x00000000000f6c25 : xchg eax, ebx ; ret 0x830f
0x00000000000e3f2d : xchg eax, ebx ; sub eax, dword ptr [rax] ; ret
0x000000000010b6de : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x00000000000df0cf : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000017e5e5 : xchg eax, ecx ; add byte ptr [rax], al ; test al, -0x60 ; out dx, eax ; call rax
0x0000000000022903 : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000055b1f : xchg eax, ecx ; add rcx, rdx ; jmp rcx
0x0000000000188da1 : xchg eax, ecx ; cmc ; jmp qword ptr [rsi]
0x000000000016e5b4 : xchg eax, ecx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call rcx
0x000000000015fca5 : xchg eax, ecx ; jmp qword ptr [rax]
0x0000000000121971 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000005c7df : xchg eax, ecx ; mov ebx, 0x89000000 ; ret 0x8b48
0x00000000000e30ab : xchg eax, ecx ; ret
0x0000000000174375 : xchg eax, ecx ; stc ; call qword ptr [rax]
0x00000000001091ac : xchg eax, ecx ; sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000012009f : xchg eax, ecx ; sub eax, edx ; ret
0x00000000001091ab : xchg eax, ecx ; xchg eax, ecx ; sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000000da515 : xchg eax, edi ; adc eax, 0x433b0000 ; or al, 0x74 ; ret 0x9066
0x000000000005143c : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x110743], al ; call qword ptr [rax]
0x00000000000533e8 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x113743], al ; call qword ptr [rax]
0x000000000003a216 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc801
0x00000000000daaac : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000018ebf5 : xchg eax, edi ; add dword ptr [rax], eax ; cwde ; add esi, edi ; call qword ptr [rax]
0x0000000000172fd1 : xchg eax, edi ; add dword ptr [rax], eax ; xor byte ptr [rsi - 9], al ; call rax
0x0000000000160ec0 : xchg eax, edi ; hlt ; hlt ; dec dword ptr [rbp - 0xf] ; hlt ; call rsp
0x000000000015e2f8 : xchg eax, edi ; jrcxz 0x15e2fd ; jmp qword ptr [rdi]
0x000000000015e378 : xchg eax, edi ; jrcxz 0x15e37d ; jmp qword ptr [rdi]
0x000000000015e3f8 : xchg eax, edi ; jrcxz 0x15e3fd ; jmp qword ptr [rdi]
0x000000000015e478 : xchg eax, edi ; jrcxz 0x15e47d ; jmp qword ptr [rdi]
0x000000000015e4f8 : xchg eax, edi ; jrcxz 0x15e4fd ; jmp qword ptr [rdi]
0x000000000015e578 : xchg eax, edi ; jrcxz 0x15e57d ; jmp qword ptr [rdi]
0x000000000017e351 : xchg eax, edi ; out dx, eax ; call qword ptr [rdx]
0x00000000000334a5 : xchg eax, edi ; ret 0x1377
0x00000000000331a7 : xchg eax, edi ; ret 0x1477
0x0000000000076a58 : xchg eax, edi ; ret 0x32
0x0000000000033176 : xchg eax, edi ; ret 0x5e77
0x0000000000038f29 : xchg eax, edi ; ret 0xd284
0x00000000001104d4 : xchg eax, edi ; ret 0xda09
0x00000000000ea806 : xchg eax, edi ; ror byte ptr [rdi], -0x4a ; sal bh, -0x28 ; ret
0x00000000000dcc49 : xchg eax, edi ; ror byte ptr [rdi], -0x4a ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000b8b66 : xchg eax, edi ; ror byte ptr [rdi], -0x6e ; ret 0xd029
0x00000000000dfcdb : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x00000000000c64fe : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xd138
0x000000000009d097 : xchg eax, edi ; test r9d, r9d ; jne 0x9d059 ; mov rax, rdx ; ret
0x000000000015b5b8 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000004484a : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000017e6b5 : xchg eax, edx ; add byte ptr [rax], al ; cwde ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; call qword ptr [rdi]
0x00000000001706b9 : xchg eax, edx ; add byte ptr [rax], al ; mov esp, gs ; call qword ptr [rax]
0x000000000016effc : xchg eax, edx ; cld ; jmp qword ptr [rdx]
0x0000000000186481 : xchg eax, edx ; hlt ; call rsp
0x0000000000186469 : xchg eax, edx ; hlt ; jmp qword ptr [rdi]
0x0000000000106e1d : xchg eax, edx ; idiv edi ; xor eax, eax ; ret
0x000000000016f4ec : xchg eax, edx ; ja 0x16f4ee ; call qword ptr [rdx]
0x000000000015ce7d : xchg eax, edx ; jae 0x15ce5a ; push rsi ; pop rdx ; je 0x15ce4f ; ret 0xacfc
0x000000000016f4cc : xchg eax, edx ; jnp 0x16f4ce ; call qword ptr [rdx]
0x000000000016f4dc : xchg eax, edx ; jns 0x16f4de ; call qword ptr [rdx]
0x000000000016f4d4 : xchg eax, edx ; jp 0x16f4d6 ; call qword ptr [rdx]
0x000000000016f4e4 : xchg eax, edx ; js 0x16f4e6 ; call qword ptr [rdx]
0x00000000001609c4 : xchg eax, edx ; mov ah, -0xc ; call qword ptr [rdx - 0x2b000b4c]
0x00000000001609c8 : xchg eax, edx ; mov ah, -0xc ; call rsp
0x00000000000a2e87 : xchg eax, edx ; mov rdx, r8 ; add rax, rax ; sub rdx, rax ; jmp 0xa2ec2
0x000000000017e061 : xchg eax, edx ; out dx, eax ; jmp qword ptr [rdx]
0x000000000016edec : xchg eax, edx ; pop rbx ; cld ; jmp qword ptr [rdx]
0x00000000000dcc2e : xchg eax, edx ; ret 0x970f
0x00000000000dfcde : xchg eax, edx ; ret 0xcc80
0x00000000000b8b69 : xchg eax, edx ; ret 0xd029
0x00000000000c6501 : xchg eax, edx ; ret 0xd138
0x00000000000799bb : xchg eax, edx ; ret 0xe
0x00000000001239ed : xchg eax, edx ; ret 0xf40
0x000000000015af6f : xchg eax, edx ; ret 0xf869
0x0000000000174385 : xchg eax, edx ; stc ; jmp rax
0x000000000016f7d0 : xchg eax, edx ; stosb byte ptr [rdi], al ; cld ; jmp qword ptr [rdx]
0x0000000000113bb4 : xchg eax, edx ; sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x113bc9 ; ret
0x000000000011edf7 : xchg eax, edx ; sub eax, edx ; ret
0x0000000000147b00 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000133be3 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000000258e : xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x000000000017140d : xchg eax, esi ; call qword ptr [rax]
0x000000000016f76c : xchg eax, esi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp qword ptr [rsi]
0x000000000015fcad : xchg eax, esi ; inc eax ; cwde ; call qword ptr [rax]
0x0000000000147bbd : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000f2586 : xchg eax, esi ; lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000053a26 : xchg eax, esi ; loop 0x53a31 ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x0000000000147b1b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017e2d9 : xchg eax, esi ; out dx, eax ; call qword ptr [rsi]
0x000000000016ed48 : xchg eax, esi ; pop rdi ; cld ; jmp qword ptr [rsi]
0x0000000000023106 : xchg eax, esi ; ret
0x00000000000bc6c5 : xchg eax, esi ; ret 0x840
0x00000000000817c6 : xchg eax, esi ; ret 0xb60f
0x000000000015d80c : xchg eax, esi ; ret 0xcd11
0x000000000010370d : xchg eax, esi ; ret 0xf980
0x0000000000147b6c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000b2be8 : xchg eax, esi ; ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x00000000000f6c1f : xchg eax, esi ; ror byte ptr [rcx + rdi - 0x17], 0xf ; xchg eax, ebx ; ret 0x830f
0x000000000017e89d : xchg eax, esp ; add byte ptr [rax], al ; add al, cl ; out dx, eax ; call qword ptr [rsi]
0x000000000009bac8 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; lock ; ret
0x00000000001796cc : xchg eax, esp ; add byte ptr [rax], al ; jo 0x179660 ; in al, dx ; call rdx
0x00000000000a2474 : xchg eax, esp ; and al, 0x44 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x9774
0x000000000003f8d7 : xchg eax, esp ; and al, 0x54 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x000000000006dc17 : xchg eax, esp ; and al, 0xfffffffffffffff0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000015fa54 : xchg eax, esp ; cdq ; lock push qword ptr [rdx + rbx*4 - 0x10] ; call rsp
0x0000000000177339 : xchg eax, esp ; jmp 0x17733d
0x000000000018c4cc : xchg eax, esp ; jo 0x18c4d7 ; add al, dh ; jg 0x18c4d0 ; jmp qword ptr [rsi]
0x00000000001844cc : xchg eax, esp ; lock add byte ptr [rax], al ; rol byte ptr [rdx - 0xd], 1 ; jmp qword ptr [rcx]
0x00000000000b9c5b : xchg eax, esp ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x00000000000dabf3 : xchg eax, esp ; pop rbx ; ret
0x000000000018aacc : xchg eax, esp ; push rsi ; add dword ptr [rax], eax ; shr bh, 1 ; cmc ; jmp qword ptr [rcx]
0x000000000015da1f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x15d9b0 ; ret 0x48f
0x0000000000040598 : xchg eax, esp ; ret
0x00000000000a87be : xchg eax, esp ; ret 0x14c
0x00000000001057ac : xchg eax, esp ; ret 0x203c
0x000000000003378e : xchg eax, esp ; ret 0x2cdb
0x000000000008f83e : xchg eax, esp ; ret 0x3941
0x0000000000112508 : xchg eax, esp ; ret 0x3d83
0x00000000000c6f1a : xchg eax, esp ; ret 0x4422
0x0000000000079a67 : xchg eax, esp ; ret 0x52e9
0x00000000000d1d37 : xchg eax, esp ; ret 0x5408
0x00000000000a871f : xchg eax, esp ; ret 0x5438
0x0000000000041322 : xchg eax, esp ; ret 0x543a
0x00000000000ae3f1 : xchg eax, esp ; ret 0x6348
0x00000000000337cd : xchg eax, esp ; ret 0x6cdb
0x00000000000e2241 : xchg eax, esp ; ret 0x8041
0x00000000000bd89f : xchg eax, esp ; ret 0x8341
0x000000000005c5fe : xchg eax, esp ; ret 0x8348
0x000000000008fa55 : xchg eax, esp ; ret 0x840
0x00000000000d4c75 : xchg eax, esp ; ret 0x840f
0x00000000000de69d : xchg eax, esp ; ret 0x8440
0x0000000000099f55 : xchg eax, esp ; ret 0x8444
0x00000000000ba745 : xchg eax, esp ; ret 0x8548
0x0000000000031353 : xchg eax, esp ; ret 0x854d
0x00000000000d315d : xchg eax, esp ; ret 0x8944
0x00000000000d3b74 : xchg eax, esp ; ret 0x8b48
0x000000000001ff87 : xchg eax, esp ; ret 0x8d48
0x000000000002066d : xchg eax, esp ; ret 0x944
0x00000000000cbf08 : xchg eax, esp ; ret 0xb3c
0x000000000002dd3f : xchg eax, esp ; ret 0xb60f
0x00000000000510e7 : xchg eax, esp ; ret 0xc084
0x00000000000cb711 : xchg eax, esp ; ret 0xc085
0x00000000000c886a : xchg eax, esp ; ret 0xc683
0x00000000000d01cc : xchg eax, esp ; ret 0xc931
0x00000000000bda45 : xchg eax, esp ; ret 0xca09
0x00000000000413ba : xchg eax, esp ; ret 0xca38
0x00000000000abe21 : xchg eax, esp ; ret 0xd008
0x00000000000cb78f : xchg eax, esp ; ret 0xd009
0x000000000006744e : xchg eax, esp ; ret 0xd089
0x0000000000068487 : xchg eax, esp ; ret 0xd108
0x000000000002007c : xchg eax, esp ; ret 0xd284
0x000000000006c31b : xchg eax, esp ; ret 0xdaf7
0x00000000000461ce : xchg eax, esp ; ret 0xe883
0x0000000000116b51 : xchg eax, esp ; ret 0xea83
0x00000000000c086a : xchg eax, esp ; ret 0xf631
0x0000000000081744 : xchg eax, esp ; ret 0xf883
0x00000000000abe13 : xchg eax, esp ; ret 0xf980
0x000000000009e4d4 : xchg eax, esp ; ret 0xf983
0x00000000000f11ad : xchg eax, esp ; ret 0xfa80
0x00000000000bf79c : xchg eax, esp ; ret 0xfb80
0x000000000005eae8 : xchg eax, esp ; ret 0xfb83
0x0000000000099eb6 : xchg eax, esp ; ret 0xfd83
0x000000000004d50f : xchg eax, esp ; ret 0xfe83
0x000000000009c33c : xchg eax, esp ; rol bl, -0x70 ; mov eax, 1 ; ret
0x00000000000dca2f : xchg eax, esp ; ror byte ptr [rax - 0x7d], -0x3c ; movzx rax, al ; ret
0x000000000003fff3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], -0x3c ; or byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x00000000001163c9 : xchg eax, esp ; ror byte ptr [rax - 0x7d], -0x3c ; sbb byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x000000000008b710 : xchg eax, esp ; ror byte ptr [rax - 0x7d], -0x3f ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ab90b : xchg eax, esp ; ror byte ptr [rdi], -0x4a ; rol cl, -0x20 ; add ebp, ecx ; ret 0xfffb
0x0000000000020668 : xchg eax, esp ; sar byte ptr [rdi + rbx*2], 0xf ; xchg eax, esp ; ret 0x944
0x00000000001743c5 : xchg eax, esp ; stc ; jmp rax
0x0000000000180f09 : xchg eax, esp ; sti ; call qword ptr [rax]
0x000000000017fecc : xchg eax, esp ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; xor byte ptr [rsi - 0x10], bl ; call qword ptr [rax]
0x000000000018dacc : xchg eax, esp ; xchg byte ptr [rcx], al ; add al, dl ; mov bl, -0xa ; call qword ptr [rcx]
0x00000000000f427a : xchg eax, r8d ; mov eax, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000001091f7 : xchg eax, r9d ; sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000000bf886 : xchg ebp, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000188829 : xchg ebp, esi ; jmp qword ptr [rbx]
0x000000000018caf1 : xchg esi, esi ; jmp rcx
0x00000000001796d1 : xchg esp, ebp ; call rdx
0x00000000000e44ef : xchg esp, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000001583c9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000173c41 : xlatb ; add dword ptr [rax], eax ; nop ; jns 0x173c45 ; jmp qword ptr [rax]
0x000000000012a369 : xlatb ; add r9, r11 ; jmp r9
0x00000000000e3e85 : xlatb ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000105309 : xlatb ; jg 0x1052c5 ; mov byte ptr [r11], 0 ; ret
0x000000000017008d : xlatb ; jmp 0x170091
0x00000000000f4ac9 : xlatb ; jmp rax
0x00000000000e71f6 : xlatb ; jne 0xe71ef ; mov rax, qword ptr [rax + 8] ; ret
0x000000000015bfe3 : xlatb ; jo 0x15c05f ; mov ebp, 0xfb67d10d ; ret
0x0000000000077efa : xlatb ; mov byte ptr [rax + rsi], dil ; ret
0x0000000000044ad2 : xlatb ; mov byte ptr [rsi], al ; jne 0x44ab8 ; mov rax, rsi ; ret
0x00000000000e1c68 : xlatb ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000007ffc9 : xlatb ; ret
0x0000000000081b5f : xlatb ; ret 0x4166
0x000000000015d486 : xlatb ; ret 0x4e27
0x0000000000003234 : xlatb ; ret 0x5a51
0x00000000000839c7 : xlatb ; ret 0x94c
0x0000000000084bef : xlatb ; ret 0xc085
0x000000000007ffc0 : xlatb ; ret 0xc148
0x000000000008fe5b : xlatb ; ret 0xf188
0x000000000008c5b1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000008fcf6 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00000000000958ae : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000149cb6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000008fc54 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], -8 ; ret
0x0000000000081496 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000081356 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000081216 : xlatb ; sal bh, 1 ; ret 0xe000
0x00000000000810d6 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000080f96 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000080e56 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000080d16 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000080bd6 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000080a96 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000080956 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000080816 : xlatb ; sal bh, 1 ; ret 0xffe0
0x00000000000806d6 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000080596 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000080456 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000080316 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000149cb2 : xlatb ; shl byte ptr [rsi + 0xf], -0x29 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000083965 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000083976 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000016e865 : xlatb ; sti ; call qword ptr [rax]
0x000000000016e8e9 : xlatb ; sti ; call rax
0x000000000016e845 : xlatb ; sti ; inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x0000000000034428 : xlatb ; xor eax, eax ; ret
0x000000000018a360 : xor ah, ah ; cmc ; jmp qword ptr [rcx]
0x00000000000950a8 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000009503e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x000000000016ec39 : xor ah, bh ; inc dword ptr [rax + 0x32] ; cld ; call rax
0x00000000000025c0 : xor ah, byte ptr [rsi] ; sahf ; jl 0x2559 ; loop 0x25a4 ; ret 0x23cb
0x000000000017891d : xor al, 0 ; add al, dh ; in eax, -0x15 ; jmp rsp
0x00000000000601ce : xor al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001916d8 : xor al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x0000000000191680 : xor al, 0 ; add byte ptr [rax], al ; ret 1
0x0000000000050113 : xor al, 0 ; call rax
0x000000000015af6a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000176f6c : xor al, 0x1b ; add byte ptr [rax], al ; mov al, 0x5e ; jmp 0x176f7a
0x000000000018716c : xor al, 0x1d ; add dword ptr [rax], eax ; loopne 0x1871e1 ; stc ; call qword ptr [rax]
0x000000000007c822 : xor al, 0x24 ; jmp rax
0x000000000008c9cb : xor al, 0x24 ; test rsi, rsi ; jne 0x8c9e4 ; jmp 0x8c99e
0x00000000000b84c8 : xor al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000000000c09e2 : xor al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000178b6c : xor al, 0x37 ; add byte ptr [rax], al ; adc dl, ch ; jmp 0x178b7a
0x0000000000002041 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000008fd7b : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000018a16c : xor al, 0x4d ; add dword ptr [rax], eax ; push rax ; loop 0x18a16f ; call qword ptr [rax]
0x000000000018a56c : xor al, 0x51 ; add dword ptr [rax], eax ; shl dh, 1 ; cmc ; jmp qword ptr [rcx]
0x000000000018c46c : xor al, 0x70 ; add dword ptr [rax], eax ; nop ; jg 0x18c470 ; jmp qword ptr [rsi]
0x00000000000d012d : xor al, 0xffffff83 ; ret 0x4101
0x000000000009a261 : xor al, 0xffffffffffffff81 ; add rcx, rsi ; jmp rcx
0x00000000000d012e : xor al, 0xffffffffffffff83 ; ret 0x4101
0x000000000009a229 : xor al, 0xffffffffffffff90 ; add rax, rsi ; jmp rax
0x000000000017fe6c : xor al, 0xffffffffffffffaa ; add byte ptr [rax], al ; mov al, -1 ; stc ; call qword ptr [rax]
0x00000000000b0c64 : xor al, 0xffffffffffffffb0 ; add rax, rsi ; jmp rax
0x000000000002aeaa : xor al, 0xffffffffffffffb0 ; add rsi, r8 ; jmp rsi
0x00000000000aeb9e : xor al, 0xffffffffffffffb1 ; add rcx, rsi ; jmp rcx
0x0000000000031c93 : xor al, 0xffffffffffffffb3 ; add rsi, r11 ; jmp rsi
0x00000000000c579d : xor al, 0xffffffffffffffb6 ; cmp ebp, esi ; jge 0xc5787 ; mov edx, eax ; jmp 0xc578c
0x000000000010680c : xor al, 0xffffffffffffffb8 ; sub dword ptr [rax], eax ; test eax, eax ; je 0x106820 ; ret
0x000000000018196c : xor al, 0xffffffffffffffc5 ; add byte ptr [rax], al ; nop ; mov bh, -0xf ; call qword ptr [rdx]
0x000000000015c14a : xor al, 0xffffffffffffffd8 ; ret
0x0000000000183d6c : xor al, 0xffffffffffffffe9 ; add byte ptr [rax], al ; and byte ptr [rax], ch ; call rdi
0x000000000017083d : xor al, 0xffffffffffffffed ; jmp qword ptr [rax]
0x0000000000184d6c : xor al, 0xfffffffffffffff9 ; add byte ptr [rax], al ; ret
0x000000000017494d : xor al, 0xfffffffffffffffa ; call qword ptr [rax]
0x000000000016f189 : xor al, 0xfffffffffffffffc ; call qword ptr [rax]
0x00000000000b77c8 : xor al, 0xfffffffffffffffd ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000001888d5 : xor al, 1 ; add byte ptr [rax - 0x78], bl ; cmc ; jmp qword ptr [rcx]
0x000000000009b128 : xor al, 1 ; add byte ptr [rax], al ; ret
0x0000000000188885 : xor al, 1 ; add byte ptr [rax], cl ; mov ch, dh ; jmp qword ptr [rcx]
0x000000000007a384 : xor al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000e83cb : xor al, al ; or eax, edi ; ret
0x000000000007e25f : xor al, al ; pop rbx ; ret
0x00000000000d5f2b : xor al, al ; ret
0x000000000017869d : xor al, byte ptr [rax] ; add byte ptr [rax - 0x1f], al ; jmp 0x1786a9
0x00000000001786b5 : xor al, byte ptr [rax] ; add byte ptr [rax - 0x1f], cl ; jmp 0x1786c1
0x00000000000775e9 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000058451 : xor al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x8b48
0x000000000007e7fc : xor al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000007e8d8 : xor al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000077dd3 : xor al, byte ptr [rax] ; add dword ptr [rbx - 0xd], ebx ; ret
0x0000000000077576 : xor al, byte ptr [rax] ; add dword ptr [rip + 0x3284a5], 1 ; ret
0x000000000007bf80 : xor al, byte ptr [rax] ; mov edi, 0x8b8 ; call 0x78209
0x000000000007c0b3 : xor al, byte ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x000000000007ac58 : xor al, byte ptr [rax] ; mov qword ptr [rsp + 0x28], rdx ; xor edi, edi ; call qword ptr [rax]
0x000000000007aae9 : xor al, byte ptr [rax] ; mov rdi, r13 ; call qword ptr [rax]
0x00000000000774e5 : xor al, byte ptr [rax] ; ret
0x000000000007abad : xor al, byte ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x0000000000171f41 : xor al, byte ptr [rcx] ; add al, al ; in eax, dx ; call qword ptr [rax]
0x000000000008cd92 : xor al, byte ptr [rdi + rcx - 0x4a] ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000017869c : xor al, byte ptr fs:[rax] ; add byte ptr [rax - 0x1f], al ; jmp 0x1786aa
0x000000000009c997 : xor al, ch ; ret
0x0000000000118f18 : xor al, ch ; ret 0xb
0x000000000017533c : xor al, cl ; std ; call rax
0x000000000018ab30 : xor al, dh ; cmc ; jmp qword ptr [rcx]
0x00000000000df2a8 : xor ax, ax ; ret
0x000000000016f1c1 : xor bh, ah ; call qword ptr [rax + 0x10fffc33]
0x000000000016ec1d : xor bh, ah ; call qword ptr [rax]
0x000000000016ec3d : xor bh, ah ; call rax
0x0000000000174105 : xor bh, cl ; call qword ptr [rax]
0x00000000001740fd : xor bh, cl ; call rax
0x000000000018ac50 : xor bh, dh ; cmc ; jmp qword ptr [rcx]
0x000000000016e864 : xor bh, dl ; sti ; call qword ptr [rax]
0x0000000000170da8 : xor bl, al ; add byte ptr [rax], al ; nop ; jmp 0xffffffffc3680daa
0x0000000000189a80 : xor bl, al ; cmc ; jmp rax
0x0000000000084e4c : xor bl, al ; nop ; xor rax, rax ; ret
0x00000000000f42f2 : xor bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000016f9f0 : xor bl, byte ptr [rbp - 0x635d0004] ; cld ; call qword ptr [rdx]
0x00000000000f5aaa : xor bl, byte ptr [rbx] ; add eax, dword ptr [rax] ; ret
0x0000000000077efe : xor bl, dh ; ret
0x000000000017a118 : xor bpl, bpl ; call rdi
0x0000000000107278 : xor byte ptr [eax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x000000000009b21c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000084d0d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000042527 : xor byte ptr [r8 - 0x75], r9b ; jg 0x4259d ; xor eax, eax ; ret
0x00000000000d0129 : xor byte ptr [r9 - 0x75], r8b ; xor al, 0xffffff83 ; ret 0x4101
0x000000000004d948 : xor byte ptr [rax + 0x29], cl ; ret 0x448b
0x000000000007ffef : xor byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000007fed1 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000008fd56 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000003dd82 : xor byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], -0x3e ; jmp 0x3ddbe
0x000000000017123c : xor byte ptr [rax - 0x10], ch ; jmp qword ptr [rax]
0x000000000017d480 : xor byte ptr [rax - 0x11], ch ; jmp qword ptr [rsi]
0x00000000000428a8 : xor byte ptr [rax - 0x75], cl ; jbe 0x42924 ; xor eax, eax ; ret
0x0000000000042528 : xor byte ptr [rax - 0x75], cl ; jg 0x4259c ; xor eax, eax ; ret
0x00000000000428a7 : xor byte ptr [rax - 0x75], r9b ; jbe 0x42925 ; xor eax, eax ; ret
0x000000000007fdff : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000011635a : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x00000000000e5aff : xor byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x000000000009cb46 : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000072673 : xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000002ed64 : xor byte ptr [rax - 0x77], cl ; ret
0x00000000000ef8e6 : xor byte ptr [rax - 0x77], cl ; ret 0x4d64
0x00000000000e2b38 : xor byte ptr [rax - 0x77], cl ; ret 0x8840
0x00000000000c53e6 : xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000107279 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000233df : xor byte ptr [rax - 0x7d], cl ; ret
0x00000000000e2524 : xor byte ptr [rax - 0x7d], cl ; ret 0xc604
0x00000000000ef923 : xor byte ptr [rax - 0x7d], cl ; ret 0xf601
0x0000000000083c58 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x000000000002005e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002eca0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000002d10d : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000002dbf6 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x0000000000052075 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r15 ; call 0x6e359
0x000000000009a285 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006e49a : xor byte ptr [rax], al ; je 0x6e4a4 ; ret
0x000000000016e480 : xor byte ptr [rax], bh ; sti ; call qword ptr [rax]
0x0000000000099807 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000004f667 : xor byte ptr [rbp + 0x29442b14], cl ; ret 0x3948
0x00000000000594a3 : xor byte ptr [rbp + 0x31], al ; shr cl, -6 ; ret 0xffff
0x000000000009b220 : xor byte ptr [rbp + 0x3d], dh ; ret
0x000000000009b21f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000cfe70 : xor byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000768e8 : xor byte ptr [rbp + 5], 0x5b ; ret
0x000000000015fc9c : xor byte ptr [rbp - 0x707f000e], cl ; call rax
0x0000000000186050 : xor byte ptr [rbp - 0xc], bh ; call qword ptr [rdx]
0x0000000000171d64 : xor byte ptr [rbp - 0xd], ch ; jmp qword ptr [rax]
0x000000000007d27c : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b93a3 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000194c9f : xor byte ptr [rbx + 0xa550206], al ; ret
0x000000000017e8bf : xor byte ptr [rbx + 0xaea0206], al ; ret
0x00000000000859fb : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000160100 : xor byte ptr [rbx + rsi*8 - 1], 0xa0 ; je 0x160101 ; call rax
0x0000000000171cd4 : xor byte ptr [rbx + rsi*8], ch ; call rax
0x00000000000769ae : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x0000000000038f24 : xor byte ptr [rbx - 0x68f0f606], al ; ret 0xd284
0x00000000000817c1 : xor byte ptr [rbx - 0x69f0f606], al ; ret 0xb60f
0x00000000000d61fa : xor byte ptr [rbx - 0x76b7fe16], al ; ret
0x000000000016eb7c : xor byte ptr [rbx], 0xfc ; call qword ptr [rax]
0x000000000016ea0c : xor byte ptr [rbx], al ; cld ; call qword ptr [rax]
0x0000000000187460 : xor byte ptr [rbx], bh ; cmc ; jmp qword ptr [rcx]
0x000000000009b21d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000ea22a : xor byte ptr [rbx], ch ; add byte ptr [rcx + 1], cl ; fmul qword ptr [rax + 0x39] ; ret
0x000000000016e420 : xor byte ptr [rbx], dl ; sti ; jmp qword ptr [rax]
0x0000000000001b20 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x00000000000b3804 : xor byte ptr [rcx + 0xf], al ; mov bh, 0x40 ; adc byte ptr [rax + 1], cl ; ret 0x8349
0x000000000007ab16 : xor byte ptr [rcx + rcx*4 + 0x74], cl ; and al, 0x28 ; call rcx
0x0000000000081796 : xor byte ptr [rcx - 0x6bf0be32], cl ; ret 0xf883
0x00000000000d012a : xor byte ptr [rcx - 0x75], al ; xor al, 0xffffff83 ; ret 0x4101
0x000000000003b7e9 : xor byte ptr [rcx - 0x77], al ; ret 0x4489
0x00000000001845c0 : xor byte ptr [rcx - 0xd], cl ; jmp qword ptr [rdi]
0x00000000001751c4 : xor byte ptr [rcx - 5], dh ; jmp qword ptr [rax]
0x00000000000fe9a3 : xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x00000000000e009c : xor byte ptr [rcx], 0xc0 ; ret
0x0000000000171ed9 : xor byte ptr [rcx], al ; add byte ptr [rax - 0x52], dl ; jmp rax
0x00000000001884c5 : xor byte ptr [rcx], al ; add byte ptr [rax - 0x80], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001884dd : xor byte ptr [rcx], al ; add byte ptr [rax - 0x80], dh ; cmc ; jmp qword ptr [rcx]
0x000000000016e3d0 : xor byte ptr [rcx], al ; sti ; inc dword ptr [rax] ; add bh, bl ; call rax
0x0000000000187340 : xor byte ptr [rcx], bh ; cmc ; call qword ptr [rcx]
0x00000000001724ec : xor byte ptr [rcx], bh ; cmc ; jmp rax
0x000000000016ebe8 : xor byte ptr [rcx], ch ; cld ; call qword ptr [rax]
0x00000000000c1f3f : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000eb252 : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], -0x40 ; ret
0x00000000000c0602 : xor byte ptr [rcx], dl ; je 0xc0616 ; xor eax, eax ; ret
0x0000000000170aa4 : xor byte ptr [rdi - 0x11], bh ; jmp rax
0x000000000017059c : xor byte ptr [rdi - 0x14], dh ; jmp rax
0x0000000000173700 : xor byte ptr [rdi - 0x2f4fffff], 0xf7 ; jmp rax
0x000000000016e574 : xor byte ptr [rdi - 0x5fdf0003], bl ; std ; call qword ptr [rax]
0x0000000000172008 : xor byte ptr [rdi], 1 ; add byte ptr [rax + 0x3e], ah ; hlt ; jmp rax
0x0000000000171ca4 : xor byte ptr [rdi], al ; jmp qword ptr [rax]
0x0000000000174804 : xor byte ptr [rdi], cl ; cli ; jmp qword ptr [rax]
0x00000000000e4531 : xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x00000000000abe11 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf980
0x00000000001704c4 : xor byte ptr [rdx - 0x14], ch ; jmp rax
0x00000000001769f0 : xor byte ptr [rdx - 0x15], dl ; call qword ptr [rax]
0x0000000000170b40 : xor byte ptr [rdx - 0x59700000], 0xef ; call rax
0x000000000016ec1c : xor byte ptr [rdx], 0xfc ; call qword ptr [rax]
0x00000000001748e1 : xor byte ptr [rdx], al ; add byte ptr [rax + 0x2b], dl ; cli ; jmp qword ptr [rax]
0x000000000016ea8c : xor byte ptr [rdx], al ; cld ; jmp qword ptr [rax]
0x00000000001958f3 : xor byte ptr [rdx], al ; ret
0x00000000001831cf : xor byte ptr [rdx], al ; ret 0xe0a
0x000000000016ecec : xor byte ptr [rip + 0x1e80fffc], bl ; cld ; call rax
0x00000000001478af : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008392c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000084d0e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000017800f : xor byte ptr [rsi + rcx + 0x28], ah ; ret
0x000000000017fed0 : xor byte ptr [rsi - 0x10], bl ; call qword ptr [rax]
0x0000000000172fd4 : xor byte ptr [rsi - 9], al ; call rax
0x000000000016e458 : xor byte ptr [rsi], ah ; sti ; call rax
0x0000000000176530 : xor byte ptr [rsi], ch ; jmp 0x176536
0x000000000017017d : xor ch, ah ; call qword ptr [rax]
0x000000000016e830 : xor ch, bl ; sti ; call qword ptr [rax]
0x000000000017a119 : xor ch, ch ; call rdi
0x0000000000099598 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000995ae : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000995d0 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000995ee : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009960e : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x0000000000099634 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000099650 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x0000000000099670 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000099690 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000996b6 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000996d8 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000996f6 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000099716 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000099732 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x0000000000099752 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x0000000000099772 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000099792 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000997b8 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x0000000000099808 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000994de : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000994fc : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009951c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009953e : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009955e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009957e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000099414 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x0000000000099426 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009943c : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x0000000000099454 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009946a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009947c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009949a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000994a6 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000994bc : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x0000000000099400 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000171954 : xor ch, dl ; int1 ; jmp qword ptr [rax]
0x0000000000170cac : xor ch, dl ; out dx, eax ; call rax
0x000000000016e880 : xor ch, dl ; sti ; push rax ; salc ; sti ; call rax
0x000000000017464c : xor cl, bl ; stc ; jmp qword ptr [rax]
0x0000000000109b72 : xor cl, byte ptr [rax - 0x3f7affd7] ; je 0x109b88 ; ret
0x000000000010e4ef : xor cl, byte ptr [rax - 0x77] ; jp 0x10e501 ; ret
0x0000000000110d4f : xor cl, byte ptr [rax - 0x77] ; jp 0x110d61 ; ret
0x0000000000110d67 : xor cl, byte ptr [rax - 0x77] ; jp 0x110d79 ; ret
0x000000000011159f : xor cl, byte ptr [rax - 0x77] ; jp 0x1115b1 ; ret
0x00000000001115b7 : xor cl, byte ptr [rax - 0x77] ; jp 0x1115c9 ; ret
0x00000000001115e7 : xor cl, byte ptr [rax - 0x77] ; jp 0x1115f9 ; ret
0x00000000000b30a1 : xor cl, byte ptr [rax - 0x77] ; ret 0xed31
0x00000000000a606a : xor cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000010de8a : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000c0617 : xor cl, byte ptr [rax] ; xor eax, eax ; ret
0x0000000000094f20 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000017534c : xor cl, cl ; std ; jmp rax
0x0000000000189e80 : xor cl, dl ; cmc ; jmp qword ptr [rcx]
0x000000000016eaa4 : xor dh, bh ; sti ; inc dword ptr [rax] ; add ah, bh ; jmp rax
0x0000000000183ff1 : xor dh, bl ; call qword ptr [rdx]
0x000000000002b3a3 : xor dh, dh ; ret 0x4002
0x000000000010c8f4 : xor dh, dh ; ret 0xc707
0x000000000015fc35 : xor dh, dl ; jmp rax
0x00000000001740fc : xor dil, cl ; call rax
0x000000000016ec3c : xor dil, spl ; call rax
0x000000000016eb24 : xor dl, 0xfb ; call rax
0x000000000018a140 : xor dl, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000161a4c : xor dl, bh ; cmc ; call qword ptr [rax]
0x0000000000161a44 : xor dl, bh ; cmc ; jmp rax
0x0000000000161a58 : xor dl, bh ; cmc ; push qword ptr [rax] ; cli ; cmc ; call qword ptr [rax]
0x0000000000161a40 : xor dl, bh ; cmc ; push qword ptr [rax] ; cli ; cmc ; jmp rax
0x000000000002c5df : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x000000000005b25b : xor dword ptr [rax - 0x77cffff], esi ; inc dword ptr [rcx - 0x77] ; ret 0x850f
0x000000000008f93e : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00000000000c1ab5 : xor dword ptr [rax - 0x7d], ecx ; mov byte ptr [rcx], 0x39 ; ret 0xe37c
0x00000000000849ec : xor dword ptr [rax], eax ; add rsp, 0x100 ; ret
0x0000000000083bda : xor dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000007e2b1 : xor dword ptr [rax], eax ; call 0x6a4f4
0x000000000007f92d : xor dword ptr [rax], eax ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000007d514 : xor dword ptr [rax], eax ; test eax, eax ; js 0x7d527 ; ret
0x0000000000161798 : xor dword ptr [rbp - 0x4d5b000b], esi ; cmc ; call rcx
0x00000000000490db : xor dword ptr [rcx - 0x76b70001], edi ; ret 0x3aeb
0x0000000000171f11 : xor dword ptr [rcx], eax ; add al, dh ; mov bh, -0xd ; call qword ptr [rax]
0x000000000005c7bb : xor dword ptr [rcx], edi ; ret 0x8948
0x0000000000174901 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0x2d], ah ; cli ; jmp rax
0x000000000003fd20 : xor eax, 0x1cb ; call rax
0x000000000006b73b : xor eax, 0x20 ; call rax
0x00000000000dfe9e : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000011bfda : xor eax, 0x286821 ; call 0xe8277
0x00000000000e2b68 : xor eax, 0x2bd903 ; mov byte ptr [rcx - 1], 0 ; ret
0x000000000007e882 : xor eax, 0x321289 ; ret
0x000000000005ef80 : xor eax, 0x33dfab ; call rax
0x0000000000055a08 : xor eax, 0x347523 ; call rax
0x00000000000554a4 : xor eax, 0x347a87 ; call rax
0x0000000000050110 : xor eax, 0x34ce1b ; call rax
0x000000000004a3fc : xor eax, 0x352b2f ; call rax
0x0000000000044e50 : xor eax, 0x3580db ; call rax
0x000000000016f1c9 : xor eax, 0x3690fffc ; cld ; call qword ptr [rax]
0x0000000000174999 : xor eax, 0x39400002 ; cli ; call qword ptr [rax]
0x000000000004063d : xor eax, 0x4c64100 ; adc byte ptr [rax], al ; ret
0x000000000010d862 : xor eax, 0x58f72 ; call 0x69ab7
0x000000000010d846 : xor eax, 0x5a57f ; call 0x69ab7
0x0000000000029da7 : xor eax, 0x89000563 ; ret 0x8d48
0x0000000000188965 : xor eax, 0x89580001 ; cmc ; jmp qword ptr [rcx]
0x000000000018897d : xor eax, 0x89700001 ; cmc ; jmp qword ptr [rcx]
0x00000000001889ad : xor eax, 0x89d00001 ; cmc ; jmp qword ptr [rcx]
0x00000000001889dd : xor eax, 0x8a300001 ; cmc ; jmp qword ptr [rcx]
0x00000000000407c5 : xor eax, 0x8b486400 ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x000000000000245d : xor eax, 0xdd410018 ; out -0x57, al ; ret 0xbd07
0x0000000000178a05 : xor eax, 0xe9480000 ; jmp 0x178a11
0x0000000000178a1d : xor eax, 0xe9600000 ; jmp 0x178a29
0x0000000000178a35 : xor eax, 0xe9680000 ; jmp 0x178a41
0x00000000000f5a17 : xor eax, 0xf6000313 ; ret 0x7540
0x00000000000771ab : xor eax, 0xffffe700 ; call rax
0x0000000000076cfb : xor eax, 0xffffebb0 ; call rax
0x0000000000075e3b : xor eax, 0xfffffa70 ; call rax
0x0000000000075bf3 : xor eax, 0xfffffcb8 ; call rax
0x000000000006b9f3 : xor eax, 0xfffffd68 ; call rax
0x000000000002005b : xor eax, dword ptr [0x30] ; call rax
0x000000000002d10a : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000116d8e : xor eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001787f5 : xor eax, dword ptr [rax] ; add byte ptr [rax], bl ; jrcxz 0x1787ec ; jmp qword ptr [rsi]
0x000000000005ef83 : xor eax, dword ptr [rax] ; call rax
0x0000000000067368 : xor eax, dword ptr [rax] ; pop rbx ; pop rbp ; ret
0x000000000004131c : xor eax, dword ptr [rcx - 0x7d] ; stc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x543a
0x00000000000b2f10 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000041bc9 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007dc2e : xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000ab472 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000101fd5 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000112731 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000011d9d8 : xor eax, eax ; add rsp, 0x38 ; ret
0x000000000003642c : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000033f60 : xor eax, eax ; add rsp, 8 ; pop rbx ; ret
0x000000000007ce90 : xor eax, eax ; add rsp, 8 ; ret
0x000000000002cc20 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x00000000000e3841 : xor eax, eax ; call 0x4fa54
0x000000000006ba7e : xor eax, eax ; call 0xb7cb4
0x0000000000070d26 : xor eax, eax ; call r12
0x0000000000116360 : xor eax, eax ; call rdx
0x0000000000036a76 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x36a88 ; pop rbx ; ret
0x00000000000c5524 : xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xc54b5 ; pop rbx ; ret
0x0000000000115fc3 : xor eax, eax ; cmp ecx, edx ; jae 0x115fd6 ; ret
0x0000000000116003 : xor eax, eax ; cmp ecx, edx ; jae 0x116016 ; ret
0x00000000000eb253 : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000c23a3 : xor eax, eax ; cmp edx, dword ptr [rsi + 4] ; je 0xc23b8 ; ret
0x00000000000e4f39 : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0xe4f51 ; ret
0x0000000000115ea2 : xor eax, eax ; cmp rdx, rcx ; je 0x115ec0 ; ret
0x00000000000f43c7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000000e0981 : xor eax, eax ; cmp rsi, rdx ; ja 0xe09b8 ; ret
0x00000000000594a5 : xor eax, eax ; jmp 0x557aa
0x000000000009d64f : xor eax, eax ; jmp 0x9d379
0x000000000009da7e : xor eax, eax ; jmp 0x9d819
0x00000000000c96d0 : xor eax, eax ; jmp 0xc969a
0x00000000000cd9be : xor eax, eax ; jmp 0xcd987
0x000000000010b570 : xor eax, eax ; jmp rcx
0x0000000000102d8d : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000e0030 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x0000000000037042 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x0000000000102d44 : xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x000000000008f968 : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000f5171 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000006ba79 : xor eax, eax ; mov rcx, r13 ; xor eax, eax ; call 0xb7cb9
0x000000000010efa7 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000000376f0 : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000009a381 : xor eax, eax ; nop dword ptr [rax + rax] ; ret
0x000000000006ad39 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006a43c : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000f51e1 : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000109522 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000010ac7f : xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000002266f : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002958a : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000227b3 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000032486 : xor eax, eax ; pop rbx ; ret
0x0000000000034406 : xor eax, eax ; ret
0x000000000009064e : xor eax, eax ; sub eax, ecx ; ret
0x0000000000072ee0 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000072ef0 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x000000000009a1d8 : xor eax, eax ; test dh, -0x10 ; je 0x9a1ab ; movzx eax, dl ; pop rbx ; ret
0x000000000009c337 : xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000000753e0 : xor eax, eax ; test rdx, rdx ; jne 0x753f7 ; ret
0x000000000003734a : xor eax, ecx ; ret
0x00000000000369e7 : xor eax, edx ; sub eax, edx ; ret
0x00000000000369fb : xor eax, edx ; sub rax, rdx ; ret
0x00000000001614a5 : xor ebp, 0xf581dcff ; call rdx
0x000000000016149d : xor ebp, 0xf581f0ff ; jmp rsi
0x0000000000161569 : xor ebp, 0xffffffff ; pop rcx ; xchg ch, dh ; call rdx
0x00000000001615bd : xor ebp, 0xffffffff ; pop rcx ; xchg ch, dh ; jmp rsi
0x000000000016170d : xor ebp, 0xffffffff ; test sil, bpl ; call rax
0x00000000000fb644 : xor ebp, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000160c40 : xor ebp, eax ; hlt ; call rdx
0x0000000000100221 : xor ebp, eax ; sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000009db36 : xor ebp, ebp ; mov edx, eax ; jmp 0x9dae3
0x00000000000a0166 : xor ebp, ebp ; mov edx, eax ; jmp 0xa0113
0x00000000000a25f6 : xor ebp, ebp ; mov edx, eax ; jmp 0xa25a3
0x0000000000176619 : xor ebp, ebx ; call qword ptr [rdx]
0x000000000007f9e3 : xor ebp, edx ; xor dword ptr [rax], eax ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000187151 : xor ebp, esi ; call qword ptr [rax]
0x0000000000187109 : xor ebp, esi ; call qword ptr [rsi]
0x000000000006a419 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000007eeaa : xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000037ad3 : xor ebx, ebx ; jmp 0x377bd
0x0000000000037f12 : xor ebx, ebx ; jmp 0x37c5d
0x0000000000183f61 : xor ebx, esi ; jmp qword ptr [rcx]
0x00000000000b8d6e : xor ebx, esi ; ret
0x000000000010cbf8 : xor ecx, dword ptr [rax + 0x31] ; ret 0xc148
0x000000000007f97c : xor ecx, dword ptr [rcx + rcx*4 + 0x4b] ; call rcx
0x000000000002b5e2 : xor ecx, eax ; ret 0x4809
0x0000000000028f12 : xor ecx, ecx ; call r15
0x0000000000033120 : xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000c5778 : xor ecx, ecx ; mov edx, r8d ; jmp 0xc578d
0x0000000000103699 : xor ecx, ecx ; mov word ptr [rax + rdx - 2], cx ; ret
0x000000000009c64d : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000107419 : xor edi, dword ptr [0x30] ; call rax
0x0000000000078659 : xor edi, edi ; call qword ptr [r14]
0x000000000007abaf : xor edi, edi ; call qword ptr [rax]
0x000000000003189c : xor edi, edi ; jmp 0x31866
0x00000000000c787a : xor edi, edi ; jmp 0xc7844
0x00000000000d313e : xor edi, edi ; jmp 0xd3107
0x000000000007862a : xor edi, edi ; mov r13, rdx ; call qword ptr [r14]
0x0000000000077ef9 : xor edi, edx ; mov byte ptr [rax + rsi], dil ; ret
0x000000000016f185 : xor edi, esp ; call qword ptr [rax + 0x10fffc34]
0x000000000016eb7d : xor edi, esp ; call qword ptr [rax]
0x000000000002ec9d : xor edx, dword ptr [0x30] ; call rdx
0x0000000000001b0c : xor edx, dword ptr [rdx - 0x7b] ; mov bl, -0x12 ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000000abb21 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x0000000000107fa5 : xor edx, edx ; call rax
0x000000000004a883 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x00000000000738b2 : xor edx, edx ; div r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000738ec : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7282 : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; ret
0x000000000009c64f : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000008fa0d : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000766a9 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000083bb3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000000b4f58 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000014c069 : xor esi, dword ptr [rbp*8 + 0x1f0fff] ; ret
0x000000000010cbf6 : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x31] ; ret 0xc148
0x0000000000184061 : xor esi, ebx ; jmp qword ptr [rcx]
0x000000000010365c : xor esi, ebx ; ret
0x000000000007e872 : xor esi, edx ; mov qword ptr [rax + 8], rsi ; ret
0x00000000000c893e : xor esi, esi ; call 0x854f6
0x00000000000e5251 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x000000000016f181 : xor esp, edi ; call qword ptr [rax]
0x0000000000102dde : xor r8d, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000070d25 : xor r8d, r8d ; call r12
0x00000000000594a4 : xor r8d, r8d ; jmp 0x557ab
0x00000000000cd9bd : xor r8d, r8d ; jmp 0xcd988
0x00000000000c0616 : xor r9b, byte ptr [rax] ; xor eax, eax ; ret
0x0000000000028f11 : xor r9d, r9d ; call r15
0x00000000000dfe9d : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000002005a : xor rax, qword ptr [0x30] ; call rax
0x000000000002d109 : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000020059 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002d108 : xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000008d19b : xor rax, r8 ; ret
0x0000000000081cc5 : xor rax, rax ; ret
0x00000000000369fa : xor rax, rdx ; sub rax, rdx ; ret
0x0000000000187108 : xor rbp, rsi ; call qword ptr [rsi]
0x0000000000107418 : xor rdi, qword ptr [0x30] ; call rax
0x0000000000107417 : xor rdi, qword ptr fs:[0x30] ; call rax
0x000000000002ec9c : xor rdx, qword ptr [0x30] ; call rdx
0x000000000002ec9b : xor rdx, qword ptr fs:[0x30] ; call rdx
0x000000000007e871 : xor rsi, rdx ; mov qword ptr [rax + 8], rsi ; ret
0x000000000016ec38 : xor spl, dil ; inc dword ptr [rax + 0x32] ; cld ; call rax

Unique gadgets found: 21263
