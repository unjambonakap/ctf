
# This file was *autogenerated* from the file public/parameters.sage
from sage.all_cmdline import *   # import sage library

_sage_const_775807209463167910095539163959068826 = Integer(775807209463167910095539163959068826); _sage_const_2 = Integer(2); _sage_const_0 = Integer(0); _sage_const_23426 = Integer(23426); _sage_const_100 = Integer(100); _sage_const_591153005086204165523829267245014771 = Integer(591153005086204165523829267245014771); _sage_const_238266381988261346751878607720968495 = Integer(238266381988261346751878607720968495); _sage_const_889774351128949770355298446172353873 = Integer(889774351128949770355298446172353873); _sage_const_67890 = Integer(67890); _sage_const_341454032985370081366658659122300896 = Integer(341454032985370081366658659122300896); _sage_const_12345 = Integer(12345)
param = {   "hacklu":
            ((_sage_const_889774351128949770355298446172353873 , _sage_const_12345 , _sage_const_67890 ),
            # Generator of Subgroup of prime order 73 bits, 79182553273022138539034276599687 to be excact
            (_sage_const_238266381988261346751878607720968495 , _sage_const_591153005086204165523829267245014771 ),
            # challenge Q = xP, x random from [0, 79182553273022138539034276599687)
            (_sage_const_341454032985370081366658659122300896 , _sage_const_775807209463167910095539163959068826 )
            )
        }

serverAdress = '0.0.0.0'
serverPort = _sage_const_23426 

(p, a, b), (px, py), (qx, qy) = param["hacklu"]
E = EllipticCurve(GF(p), [a, b])
P = E((px, py))
Q = E((qx, qy))
print(P.order())

def is_distinguished_point(p):
    return p[_sage_const_0 ] < _sage_const_2 **(_sage_const_100 )

