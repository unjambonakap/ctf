Gadgets information
============================================================
0x00000000000ac3dd : adc al, 0 ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000015734f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001573b9 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000080294 : adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000008021a : adc al, 0 ; add dword ptr [rip + 0x1404e1], 1 ; ret
0x000000000007e431 : adc al, 0 ; jne 0x7e447 ; jmp 0x7e461
0x0000000000070904 : adc al, 0 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b09c : adc al, 0 ; mov rax, qword ptr [rsp + 8] ; jmp 0x7b06f
0x0000000000072a31 : adc al, 0 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a946 : adc al, 0 ; xor eax, eax ; pop rbx ; ret
0x000000000010022f : adc al, 0x11 ; test edx, edx ; jne 0x100246 ; ret
0x000000000003015f : adc al, 0x11 ; test edx, edx ; jne 0x30176 ; ret
0x00000000000ff90f : adc al, 0x11 ; test edx, edx ; jne 0xff926 ; ret
0x000000000013cfd5 : adc al, 0x13 ; jmp rdx
0x0000000000092349 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000015ac40 : adc al, 0x16 ; sub eax, edx ; vzeroupper ; ret
0x0000000000109cee : adc al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x109d4a ; leave ; ret
0x000000000003a491 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000000a30b3 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000080c15 : adc al, 0x30 ; ret
0x000000000015b26d : adc al, 0x3a ; sub eax, edx ; vzeroupper ; ret
0x00000000000ebadc : adc al, 0x48 ; add esp, 0x28 ; ret
0x0000000000137616 : adc al, 0x48 ; add esp, 0x38 ; ret
0x00000000000a05e0 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000000a1453 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000009462b : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000024218 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000109b99 : adc al, 0x5b ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x0000000000109b97 : adc al, 0x74 ; adc al, 0x5b ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x000000000011cdc6 : adc al, 0x83 ; ret
0x000000000006a8b9 : adc al, 0x83 ; ret 0x4108
0x0000000000122d90 : adc al, 0x88 ; add rdx, r8 ; jmp rdx
0x00000000000d2cf1 : adc al, 0x88 ; je 0xd2d14 ; ret
0x00000000000d18c4 : adc al, 0x89 ; add rdx, r9 ; jmp rdx
0x0000000000090a58 : adc al, 0x90 ; add rdx, r8 ; jmp rdx
0x0000000000090987 : adc al, 0x90 ; add rdx, rax ; jmp rdx
0x0000000000075c35 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000001587e0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000156f0e : adc al, 0x91 ; sub eax, edx ; ret
0x00000000000bc2b9 : adc al, 0x93 ; add rdx, rbx ; jmp rdx
0x000000000013cfd1 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000048114 : adc al, 0x96 ; add rdx, rsi ; cmp ecx, 0x2f ; jmp rdx
0x000000000005fbe0 : adc al, 0x96 ; add rdx, rsi ; jmp rdx
0x0000000000035517 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000090f47 : adc al, 0xa ; jmp r10
0x00000000000924b3 : adc al, 0xa ; sub eax, edx ; ret
0x000000000015adbd : adc al, 0xa ; sub eax, edx ; vzeroupper ; ret
0x00000000000ff6cf : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000fbe13 : adc al, 0xb8 ; call 0xf0fbe20
0x00000000001380f8 : adc al, 0xc7 ; setne al ; movzx eax, al ; ret
0x0000000000138128 : adc al, 0xc7 ; xor eax, eax ; ret
0x000000000016bbd9 : adc al, 0xd8 ; test rdx, rdx ; je 0x16bbe9 ; call rdx
0x00000000000a3aa8 : adc al, 0xe ; cmp rdi, rdx ; jb 0xa3abb ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000155021 : adc al, 0xe ; sub eax, edx ; ret
0x000000000015be0a : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x00000000000b6048 : adc al, 0xe ; test edx, edx ; jne 0xb6046 ; ret
0x00000000000bd16d : adc al, 0xe9 ; ret 0xffe7
0x000000000012646c : adc al, 0xf ; ror qword ptr [r8 + 0x63], 1 ; ret 0x5489
0x00000000000a0fc9 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x000000000003c79f : adc al, 0xf ; test dword ptr [rbx], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003cc8f : adc al, 0xf ; test dword ptr [rcx], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000073b60 : adc al, 0xf6 ; ret 0x7420
0x00000000000c32c6 : adc al, 0xff ; pop rbx ; pop rbp ; lea rax, qword ptr [rax + rdx*8] ; ret
0x0000000000167048 : adc al, 1 ; add byte ptr [rax], al ; ret
0x0000000000090736 : adc al, 7 ; cmp edx, esi ; je 0x90736 ; ret
0x000000000009065a : adc al, 7 ; test dl, dl ; jne 0x90656 ; ret
0x0000000000044db9 : adc al, 9 ; ret 0x8d74
0x00000000000719c5 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000001574f7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000157561 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000005e133 : adc al, byte ptr [rax] ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000037609 : adc al, byte ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003773d : adc al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000090d81 : adc al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000005189b : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rsi*4] ; add rax, rdi ; jmp rax
0x000000000005174a : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rdi ; jmp rax
0x000000000009b8b4 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000eceae : adc al, ch ; lodsb al, byte ptr [rsi] ; ret 1
0x00000000000fcb97 : adc al, ch ; ret
0x00000000001023f8 : adc al, ch ; ret 0x1e1
0x0000000000114818 : adc al, ch ; ret 0xf0db
0x000000000005feef : adc bh, byte ptr [rcx] ; ret 0x850f
0x00000000001131c0 : adc bh, dh ; ret 0x8080
0x000000000003687c : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000012b791 : adc bl, byte ptr [rdx + 0x31] ; rcr byte ptr [rcx - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x000000000009ea45 : adc bl, ch ; call 0xffffffffc3da739a
0x000000000009e955 : adc bl, ch ; call 0xffffffffc40272aa
0x00000000000a1a95 : adc bl, ch ; call 0xffffffffc402a3ea
0x0000000000048d66 : adc bl, ch ; jge 0x48dbc ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000009fba6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009eef6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009ef67 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009eec7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000ff83a : adc bl, dl ; call 0xffffffffc311d8ca
0x000000000010016a : adc bl, dl ; call 0xffffffffc311e1fa
0x000000000009fba5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009eef5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000007cd7a : adc byte ptr [r11 + 0xa], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000011d0e6 : adc byte ptr [r13 + 0x5b0475c0], r8b ; ret
0x000000000013749b : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000ccdd2 : adc byte ptr [r8 + 1], r9b ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000077352 : adc byte ptr [r8 + 1], r9b ; ret
0x00000000001193b3 : adc byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000802b3 : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x00000000000a302c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a304e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a308c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a310e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000b7d61 : adc byte ptr [r9], r13b ; ror byte ptr [rbp + 0x480f0750], 1 ; ret 0xfd83
0x00000000000565ae : adc byte ptr [rax + 0x29], cl ; ret 0xc148
0x0000000000124d58 : adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x00000000000874bd : adc byte ptr [rax + 0x33], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x6974
0x00000000000caeea : adc byte ptr [rax + 0x39], cl ; ret
0x000000000002b2fe : adc byte ptr [rax + 0x39], cl ; ret 0x2174
0x000000000002b397 : adc byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000000393d9 : adc byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x000000000010b8a5 : adc byte ptr [rax + 0x39], cl ; ret 0x977
0x0000000000080f4b : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x000000000013749c : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000025843 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000f540f : adc byte ptr [rax + 1], bh ; ret
0x00000000000b61be : adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000000ccdd3 : adc byte ptr [rax + 1], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000004943e : adc byte ptr [rax + 1], cl ; ret
0x0000000000094626 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000076719 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000107848 : adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000012a82d : adc byte ptr [rax + 1], dil ; ret
0x000000000012c5ac : adc byte ptr [rax + 9], ch ; add byte ptr [rax + 0x39], cl ; ret
0x000000000006dc04 : adc byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a3234 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a3132 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a30b0 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000013413b : adc byte ptr [rax - 0x39], cl ; ret
0x00000000000ff6cc : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000030172 : adc byte ptr [rax - 0x73], cl ; add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000ff924 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000000ff923 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000002421b : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000009e6fc : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000002d3e8 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000074fbc : adc byte ptr [rax - 0x77], cl ; mov qword ptr [rax], rdx ; ret
0x00000000000a5b8e : adc byte ptr [rax - 0x77], cl ; out dx, eax ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000122aff : adc byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp 0x12ed28
0x0000000000074f7b : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000074f7f : adc byte ptr [rax - 0x77], cl ; ret
0x000000000003dead : adc byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000083f23 : adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000007feb4 : adc byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000109ddd : adc byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000003eaef : adc byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000802b4 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x000000000009a4a4 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x000000000008e8d0 : adc byte ptr [rax - 0x7d], cl ; call 0xffffffffc34231e3
0x0000000000060982 : adc byte ptr [rax - 0x7d], cl ; ret
0x000000000008219b : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f56d7 : adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000094394 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000002aae6 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x00000000000d7fee : adc byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000e2c9b : adc byte ptr [rax - 1], bh ; ret
0x000000000006830a : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000159771 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000157701 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000ef474 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001223e1 : adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x1223bb
0x0000000000122d12 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x00000000001213f5 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000a4131 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006e891 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000ed87a : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006de5d : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000084d50 : adc byte ptr [rax], al ; call 0x80f84
0x0000000000104b27 : adc byte ptr [rax], al ; je 0x104b36 ; xor eax, eax ; ret
0x000000000006f2a1 : adc byte ptr [rax], al ; jmp 0x6f26b
0x00000000000b976a : adc byte ptr [rax], al ; jmp 0xb9784
0x000000000002ca39 : adc byte ptr [rax], al ; mov rdi, rbx ; call r12
0x00000000000459ab : adc byte ptr [rax], al ; ret
0x00000000000a302d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a304f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a308d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a310f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a3211 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000ed879 : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e048 : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000084d4f : adc byte ptr [rax], r8b ; call 0x80f85
0x0000000000124c35 : adc byte ptr [rbp + 0x31], cl ; ret 0x314d
0x000000000011d0e7 : adc byte ptr [rbp + 0x5b0475c0], al ; ret
0x00000000000a58ee : adc byte ptr [rbp - 0x77], cl ; int1 ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000006fff9 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002d3c9 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007cd7b : adc byte ptr [rbx + 0xa], dh ; movzx eax, byte ptr [rax] ; ret
0x00000000000812e0 : adc byte ptr [rbx + rcx*4 + 0x41], cl ; or byte ptr [rbp - 0x77], cl ; ret 0x8349
0x000000000007ff0a : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000016c691 : adc byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; ret
0x0000000000118b6e : adc byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; ret
0x0000000000124d65 : adc byte ptr [rcx + 0x31], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000104ccc : adc byte ptr [rcx + 0xb], al ; sbb byte ptr [rcx - 0x77], r8b ; ret
0x000000000008a343 : adc byte ptr [rcx + 0xf], cl ; ret 0x294d
0x00000000000f7a5b : adc byte ptr [rcx + 9], cl ; ror dword ptr [rcx + rcx*4 + 0x48], 1 ; or bl, ch ; ret 0x1f0f
0x00000000000c6745 : adc byte ptr [rcx + rcx*4 + 0x34], cl ; sbb byte ptr [rax - 0x7d], cl ; ret
0x0000000000076e92 : adc byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000103f76 : adc byte ptr [rcx + rcx*4 - 0x12], cl ; xor r15d, r15d ; call rax
0x0000000000039441 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000a3192 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a3172 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000012527c : adc byte ptr [rcx - 0x77], al ; ror byte ptr [rax - 0x76b701ad], 1 ; ret 0xc148
0x00000000000f794b : adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000353bb : adc byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000118b60 : adc byte ptr [rcx - 0x78], al ; sbb cl, byte ptr [rcx - 0x7d] ; ret 0x4502
0x0000000000080e77 : adc byte ptr [rcx - 0x7d], al ; ret
0x00000000000b97df : adc byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000001550a3 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000158c47 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000eb93a : adc byte ptr [rcx - 0xa], al ; ret 0x4901
0x000000000012bebe : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000037d98 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000b157d : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011d138 : adc byte ptr [rcx], al ; je 0x11d168 ; add rsp, 8 ; ret
0x000000000011d137 : adc byte ptr [rcx], al ; je 0x11d169 ; add rsp, 8 ; ret
0x0000000000025840 : adc byte ptr [rcx], bh ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000a5fe5 : adc byte ptr [rcx], bh ; bnd je 0xa5ff7 ; test edx, edx ; jne 0xa5fe9 ; ret
0x000000000003b3d5 : adc byte ptr [rcx], ch ; ret 0xc269
0x000000000007ff0d : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000000b7d62 : adc byte ptr [rcx], ch ; ror byte ptr [rbp + 0x480f0750], 1 ; ret 0xfd83
0x000000000010407e : adc byte ptr [rcx], dh ; idiv byte ptr [rdi + 0x2000004] ; call rcx
0x0000000000077c74 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000d63c7 : adc byte ptr [rcx], dh ; rol byte ptr [rax + 0xf00657b], cl ; xchg eax, ebp ; ret 0xd201
0x0000000000107873 : adc byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000001357a8 : adc byte ptr [rcx], dh ; shr al, 0x10 ; ret 0xfffb
0x000000000002583f : adc byte ptr [rcx], dil ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000c31a6 : adc byte ptr [rdi - 0x3a], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000030579 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000010d4ca : adc byte ptr [rdi], cl ; mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000007b55c : adc byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; neg eax ; ret
0x000000000003e395 : adc byte ptr [rdi], cl ; test bl, bh ; add eax, 0xb8480000 ; ret 0xffff
0x00000000001056d6 : adc byte ptr [rdi], cl ; test byte ptr [rbx - 0x7d000000], ch ; ret 0x8801
0x000000000014f3a8 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000165173 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000156291 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000156381 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001561a1 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000015f00b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015db0f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000015ed0f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015e40f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015e70f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015de07 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000156be9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000156741 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000155ed1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000156921 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001560b1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000156b01 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000156a11 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000156353 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000156443 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000156263 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015e0b4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015ecb4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015efb4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015e6b4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015e3b4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000015ddac : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000155fc1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x0000000000159eed : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000159d0d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015a6e5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000159605 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015a505 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000156173 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000155f93 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000156083 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000155ea3 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00000000000e3918 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8948
0x000000000013d4da : adc byte ptr [rdx + 9], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000123a6c : adc byte ptr [rdx - 0xa], bl ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001626cb : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016257a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x0000000000161b75 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000091095 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000094efb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009f0df : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009f0de : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000b708e : adc byte ptr [rsp - 0x10], al ; ret
0x000000000004a243 : adc byte ptr [rsp - 4], al ; ret
0x000000000004a289 : adc byte ptr [rsp - 8], al ; ret
0x000000000015e0b7 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000b7aec : adc cl, byte ptr [rax + 0x29] ; ret 0x148
0x000000000004dd9f : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x64] ; ret 0x4c40
0x00000000000f4342 : adc cl, byte ptr [rax - 0x77] ; ret 0x8348
0x0000000000083fc2 : adc cl, byte ptr [rax - 0x7d] ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0xc083
0x000000000003c45f : adc cl, byte ptr [rax - 0x7d] ; ret
0x000000000009e945 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000004dda2 : adc cl, byte ptr [rbx + rcx*4 + 0x64] ; ret 0x4c40
0x00000000000d2c92 : adc cl, byte ptr [rcx - 0x35c6b730] ; jne 0xd2c90 ; ret
0x000000000010495d : adc cl, byte ptr [rcx - 0x77] ; ror byte ptr [rax - 0x3f], 1 ; loop 0x104970 ; jmp 0x104933
0x00000000000bd247 : adc dh, dh ; ret
0x0000000000121ae9 : adc dh, dh ; ret 0x7401
0x00000000000833f6 : adc dh, dh ; ret 0xf0f
0x000000000013483a : adc dl, dl ; sti ; inc dword ptr [rbx - 0x7bf00008] ; ret 1
0x0000000000071d83 : adc dword ptr [rax + 0x39], ecx ; ret 0x3973
0x000000000010a3eb : adc dword ptr [rax + 0xf480003], eax ; ret 0xfc3
0x0000000000023abe : adc dword ptr [rax - 0x77], ecx ; add eax, 0x19f802 ; ret
0x00000000000a4bbd : adc dword ptr [rax - 0x77], ecx ; clc ; ret
0x000000000005df62 : adc dword ptr [rax - 0x77], ecx ; ret 0xc148
0x00000000000ec255 : adc dword ptr [rax - 0x7d], ecx ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000a46b7 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4504
0x000000000008fc88 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000ddfff : adc dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x000000000015c64b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x0000000000157697 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000159609 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000259af : adc dword ptr [rax], eax ; mov rdi, r13 ; mov rcx, qword ptr [rbp - 0x70] ; call rcx
0x00000000000253aa : adc dword ptr [rax], eax ; mov rdi, rbx ; mov rax, qword ptr [rbp - 0x68] ; call rax
0x0000000000034e5e : adc dword ptr [rbx + 0x31], ebx ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000fc1a9 : adc dword ptr [rbx + 0x3c7426fa], eax ; ret
0x000000000008a779 : adc dword ptr [rbx + 0xf480001], 0x44 ; ret 0x66c3
0x0000000000066605 : adc dword ptr [rbx - 0x7af0f308], eax ; ret
0x000000000003b916 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a3d2c : adc dword ptr [rbx], eax ; ret
0x00000000000892d3 : adc dword ptr [rbx], ecx ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000a3ca5 : adc dword ptr [rbx], esp ; ret
0x00000000001643ab : adc dword ptr [rcx + 7], edi ; ret
0x0000000000118178 : adc dword ptr [rcx + rcx*4 - 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a3ca0 : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000164046 : adc dword ptr [rcx - 1], ebx ; ret
0x000000000016400a : adc dword ptr [rcx - 1], edi ; ret
0x00000000000d82ed : adc dword ptr [rcx], eax ; ret 0x428d
0x000000000008585f : adc dword ptr [rdi + 0x13], ebp ; add byte ptr [rax], al ; ret
0x000000000012a77a : adc dword ptr [rdi + 0x20], edx ; ret
0x00000000000ead96 : adc dword ptr [rdi + 0x30], eax ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x000000000012a74a : adc dword ptr [rdi + 0x30], eax ; ret
0x00000000000a3d27 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000ead9a : adc dword ptr [rdi + 0x40], eax ; ret
0x0000000000038744 : adc dword ptr [rdi + 0x60], eax ; movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x0000000000038748 : adc dword ptr [rdi + 0x70], eax ; ret
0x00000000000eb0ca : adc dword ptr [rdi + 0x78], edi ; ret
0x00000000000eba3f : adc dword ptr [rdi + 0xf8], edi ; ret
0x000000000012731a : adc dword ptr [rdi + 8], eax ; ret
0x0000000000118ee4 : adc dword ptr [rdi + rdx + 8], eax ; ret
0x00000000000a3a47 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x00000000000a3c09 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000a3c0e : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x00000000000a3be6 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000000a3beb : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000016450d : adc dword ptr [rdi - 8], edi ; ret
0x00000000000a3a44 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000000d3db7 : adc dword ptr [rdi], eax ; ret
0x0000000000036c94 : adc dword ptr [rdi], ecx ; ret
0x0000000000036c75 : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x0000000000036fe2 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x0000000000164760 : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000012a78b : adc dword ptr [rdx], ebx ; ret
0x000000000012732b : adc dword ptr [rdx], ecx ; ret
0x0000000000129e8b : adc dword ptr [rdx], edx ; ret
0x000000000012a76b : adc dword ptr [rdx], esp ; ret
0x00000000000eb07a : adc dword ptr [rsi + 0x70], edi ; ret
0x0000000000164893 : adc dword ptr [rsi + 3], edx ; ret
0x0000000000164930 : adc dword ptr [rsi + 7], edx ; ret
0x0000000000164732 : adc dword ptr [rsi - 1], edx ; ret
0x000000000016b91a : adc dword ptr [rsp - 0x28], eax ; ret
0x0000000000157696 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000a5fc3 : adc eax, 0x10538 ; cmovne rax, rdx ; ret
0x0000000000089238 : adc eax, 0x10c93 ; cmovne rax, rdx ; ret
0x00000000000b61ba : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x00000000000897c8 : adc eax, 0x12323 ; cmovne rax, rdx ; ret
0x0000000000090d7e : adc eax, 0x12cf05 ; add rsp, 8 ; ret
0x0000000000080b57 : adc eax, 0x13d5d4 ; ret
0x000000000007ad7d : adc eax, 0x143226 ; xor eax, eax ; pop rbx ; ret
0x000000000007ad63 : adc eax, 0x143240 ; xor eax, eax ; pop rbx ; ret
0x000000000007a95d : adc eax, 0x143646 ; xor eax, eax ; pop rbx ; ret
0x000000000007a943 : adc eax, 0x143660 ; xor eax, eax ; pop rbx ; ret
0x0000000000038a81 : adc eax, 0x185586 ; ret
0x0000000000035eb7 : adc eax, 0x1880ec ; xor eax, eax ; pop rbx ; ret
0x0000000000136a09 : adc eax, 0x18c48348 ; pop rbx ; pop rbp ; ret
0x000000000002f2bc : adc eax, 0x19077c ; ret
0x00000000000224d7 : adc eax, 0x1a0c54 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000012bd71 : adc eax, 0x20c48348 ; pop rbx ; ret
0x000000000012bc4e : adc eax, 0x2f5d ; call qword ptr [rax]
0x000000000010a58a : adc eax, 0x37e51 ; cmovne rax, rdx ; ret
0x000000000010a3ea : adc eax, 0x38011 ; cmovne rax, rdx ; ret
0x000000000010a4ba : adc eax, 0x3aa31 ; cmovne rax, rdx ; ret
0x00000000000b5eea : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000027e37 : adc eax, 0x3d8d4800 ; pop rax ; ret 0x15
0x0000000000028e24 : adc eax, 0x3d8d4800 ; ret
0x00000000000ba66a : adc eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000eb947 : adc eax, 0x48fffff8 ; add esp, 0x18 ; ret
0x000000000010bf65 : adc eax, 0x540d6 ; cmovne rax, rdx ; ret
0x00000000000347a5 : adc eax, 0x5894800 ; ret 0x189d
0x000000000003709c : adc eax, 0x590ff300 ; enter 0x280f, -0x3f ; ret
0x00000000000eafba : adc eax, 0x5bc33948 ; setl al ; ret
0x000000000009f8a8 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x00000000000377a3 : adc eax, 0x6f0f6600 ; ret 0xe867
0x00000000000a0ffc : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x00000000000370e9 : adc eax, 0x7e0f6600 ; ret 0xd089
0x0000000000063431 : adc eax, 0x83480000 ; ret
0x0000000000157221 : adc eax, 0x83480000 ; ret 0xe910
0x00000000000e0d0f : adc eax, 0x8948fff4 ; ret 0x8d48
0x0000000000134b3b : adc eax, 0x8a870 ; add rsp, 8 ; ret
0x000000000012c50d : adc eax, 0x968ae ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000123212 : adc eax, 0x9a7a9 ; jmp qword ptr [rdx + rax*8]
0x000000000010d393 : adc eax, 0xb08f0 ; add rsp, 8 ; ret
0x00000000000892d1 : adc eax, 0xb119a ; cmovne rax, rdx ; ret
0x000000000008982b : adc eax, 0xb1eb0 ; cmovne rax, rdx ; ret
0x000000000008abda : adc eax, 0xb7831 ; cmovne rax, rdx ; ret
0x000000000008a89a : adc eax, 0xb7b51 ; cmovne rax, rdx ; ret
0x000000000008a72a : adc eax, 0xba7d1 ; cmovne rax, rdx ; ret
0x00000000000a4da5 : adc eax, 0xbb2a6 ; cmovne rax, rdx ; ret
0x000000000008aab0 : adc eax, 0xbcf8b ; cmovne rax, rdx ; ret
0x000000000008aa10 : adc eax, 0xbd00b ; cmovne rax, rdx ; ret
0x000000000008ab00 : adc eax, 0xbf09b ; cmovne rax, rdx ; ret
0x000000000008aa60 : adc eax, 0xbf11b ; cmovne rax, rdx ; ret
0x00000000000a4d0d : adc eax, 0xc1e4e ; cmovne rax, rdx ; ret
0x0000000000089328 : adc eax, 0xc2dc3 ; cmovne rax, rdx ; ret
0x0000000000089868 : adc eax, 0xc4033 ; cmovne rax, rdx ; ret
0x000000000008a978 : adc eax, 0xc5aa3 ; cmovne rax, rdx ; ret
0x000000000008a9b8 : adc eax, 0xc7273 ; cmovne rax, rdx ; ret
0x00000000000f5711 : adc eax, 0xcb99a ; add rsp, 8 ; ret
0x00000000000f56de : adc eax, 0xcb9cd ; ret
0x000000000008a68d : adc eax, 0xdad5e ; cmovne rax, rdx ; ret
0x0000000000089284 : adc eax, 0xdbe47 ; cmovne rax, rdx ; ret
0x00000000000b699a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000000d3f4d : adc eax, 0xe9f66 ; jmp 0xd3f1d
0x0000000000086d9a : adc eax, 0xf8428d48 ; ret
0x00000000000a3f98 : adc eax, 0xf880272 ; ret
0x000000000005a578 : adc eax, 0xfffffb85 ; add rax, rdx ; jmp rax
0x00000000000c7dab : adc eax, dword ptr [rax + rax*8 - 0x7cb7f08c] ; ret
0x000000000015c3ae : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000159429 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000085861 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000874fe : adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000008757f : adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000080a7b : adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000375b0 : adc eax, dword ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000089938 : adc eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000887a5 : adc eax, dword ptr [rax] ; call qword ptr [rax]
0x00000000000811d6 : adc eax, dword ptr [rax] ; cmp rax, rdx ; jne 0x811e5 ; ret
0x0000000000086d97 : adc eax, dword ptr [rax] ; jae 0x86db8 ; lea rax, qword ptr [rdx - 8] ; ret
0x0000000000081cf5 : adc eax, dword ptr [rax] ; jmp 0x81cc2
0x00000000000858bd : adc eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x0000000000082043 : adc eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; ret
0x00000000000898f3 : adc eax, dword ptr [rax] ; mov qword ptr [rip + 0x136f4c], rax ; ret
0x00000000000838d8 : adc eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rdx ; xor edi, edi ; call qword ptr [rax]
0x000000000008ab5d : adc eax, dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000080189 : adc eax, dword ptr [rax] ; ret
0x000000000008f629 : adc eax, dword ptr [rbp + 0x38] ; ret
0x00000000000906fa : adc eax, dword ptr [rcx + 0x39] ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x00000000000ca6c8 : adc eax, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x3de9
0x000000000009b8b8 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000015ddaf : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004872d : adc eax, eax ; ret
0x0000000000048866 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x000000000008ff9a : adc ebp, dword ptr [rcx] ; test dword ptr [rax - 0x3f], 0x834808e0 ; ret 0x4801
0x000000000010178a : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; mov eax, edx ; ret
0x000000000007db8f : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007f0cb : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000058ba4 : adc ebx, ebp ; fcomp st(5) ; fsubr st(1) ; ret 0xfffe
0x00000000000e4018 : adc ecx, dword ptr [rax + 1] ; ret 0x3944
0x000000000007138c : adc ecx, dword ptr [rax - 0x75] ; mov edi, 0xe0 ; jmp rax
0x000000000007f0af : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000003a551 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000d4e37 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x000000000008d223 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8301
0x0000000000024722 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8401
0x0000000000104797 : adc ecx, dword ptr [rbx - 0x76bef7b5] ; ret
0x00000000000ccef9 : adc ecx, dword ptr [rbx - 0x7cb7fbad] ; ret
0x000000000002c78c : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x00000000000a726f : adc ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000118df1 : adc ecx, dword ptr [rcx - 0x7d] ; ret 0x4502
0x00000000000ccffa : adc ecx, dword ptr [rdi] ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000009ba84 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x000000000009baa4 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x000000000009bac4 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x000000000009b90e : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000011ca81 : adc ecx, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000013cfd6 : adc edi, dword ptr [rsi] ; jmp rdx
0x00000000000b87ec : adc edi, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fbb19 : adc esi, dword ptr [rcx + rax - 0x3d] ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x0000000000072280 : adc esi, esi ; ret 0x7520
0x000000000015df92 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001643aa : adc qword ptr [rcx + 7], rdi ; ret
0x0000000000164045 : adc qword ptr [rcx - 1], rbx ; ret
0x0000000000164009 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000016450c : adc qword ptr [rdi - 8], rdi ; ret
0x0000000000164892 : adc qword ptr [rsi + 3], rdx ; ret
0x000000000016492f : adc qword ptr [rsi + 7], rdx ; ret
0x0000000000164731 : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000114817 : adc r8b, bpl ; ret 0xf0db
0x0000000000159590 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011ca80 : adc r9, qword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000000377a2 : adc rax, 0x6f0f6600 ; ret 0xe867
0x0000000000048865 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000a406f : add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000a4185 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x00000000000a40ba : add ah, bh ; inc dword ptr [rbx] ; ret
0x000000000016488e : add ah, byte ptr [rdx - 0xf] ; jl 0x1648e3 ; adc dword ptr [rsi + 3], edx ; ret
0x000000000009b90b : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x0000000000059975 : add al, 0 ; add al, ch ; ret
0x0000000000029103 : add al, 0 ; add bh, dh ; ret 0
0x000000000004dec8 : add al, 0 ; add bl, ch ; ret
0x00000000000da78a : add al, 0 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000f468f : add al, 0 ; add byte ptr [rax - 0x6bf0df07], al ; ret 0xf980
0x0000000000032c94 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x448b
0x00000000000623dd : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001557dd : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015a329 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000155801 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000b6a23 : add al, 0 ; add byte ptr [rax], al ; ret
0x0000000000129a54 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000006dc05 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000067770 : add al, 0 ; add byte ptr [rdi], cl ; ret
0x000000000004061d : add al, 0 ; add byte ptr [rdi], cl ; ret 0xc101
0x0000000000104082 : add al, 0 ; add byte ptr [rdx], al ; call rcx
0x0000000000058b78 : add al, 0 ; add cl, bl ; in eax, 0xdf ; loopne 0x58b11 ; ret 0xe680
0x00000000000c87ec : add al, 0 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce6cf : add al, 0 ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x0000000000030178 : add al, 0x10 ; ret
0x00000000000ff839 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x00000000000ff92a : add al, 0x11 ; ret
0x00000000000a4104 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000008021f : add al, 0x14 ; add byte ptr [rcx], al ; ret
0x0000000000092345 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00000000000922da : add al, 0x17 ; sub eax, ecx ; ret
0x000000000003aef4 : add al, 0x18 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000ba705 : add al, 0x20 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012eb7f : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rdx
0x0000000000119468 : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000037723 : add al, 0x24 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000feee8 : add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000fef49 : add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000039608 : add al, 0x24 ; call rax
0x00000000000a4b57 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c4a3 : add al, 0x24 ; mov rdi, rbx ; call rax
0x00000000000878e0 : add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001096e7 : add al, 0x25 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000244be : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000049ebf : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x49f17 ; leave ; ret
0x0000000000024254 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000037aff : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000007243b : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x0000000000118d26 : add al, 0x2b ; pop rbx ; pop rbp ; ret
0x00000000000a2ee9 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a2efb : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x0000000000099a0e : add al, 0x31 ; ret
0x000000000009990a : add al, 0x37 ; ret
0x000000000011d665 : add al, 0x39 ; add al, 0xf ; xchg eax, esp ; ret 0xd021
0x0000000000059213 : add al, 0x39 ; ret
0x0000000000075aff : add al, 0x3a ; ret
0x0000000000078a22 : add al, 0x41 ; mov ecx, dword ptr [rax + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x789d7
0x00000000000a46bb : add al, 0x45 ; test eax, eax ; jne 0xa46b6 ; ret
0x00000000000ce7b3 : add al, 0x45 ; test edi, edi ; jns 0xce7a9 ; lea rax, qword ptr [rdx + rax*8] ; jmp 0xce7b2
0x00000000000a044b : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000000a129b : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x0000000000119025 : add al, 0x48 ; lea eax, dword ptr [rdi + rsi + 8] ; ret
0x0000000000151b19 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000151b2b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x000000000007384c : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x0000000000144a1a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000000742c0 : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov eax, edi ; mov dword ptr [rcx], edi ; ret
0x0000000000074416 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x00000000000909ed : add al, 0x48 ; mov eax, edi ; ret
0x0000000000099cb8 : add al, 0x48 ; xor eax, eax ; ret
0x000000000004d6d0 : add al, 0x4c ; cmp edi, eax ; jbe 0x4d6cf ; pop rbx ; ret
0x00000000000a51b8 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x18] ; call rbx
0x00000000000a5588 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x0000000000108ad8 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000eaf6d : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000011d0eb : add al, 0x5b ; ret
0x0000000000151b27 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009b99c : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000002c78a : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000003013e : add al, 0x73 ; and al, 0x83 ; ret 0x8b05
0x00000000000d2e39 : add al, 0x74 ; cmp al, 0x11 ; je 0xd2e51 ; xor eax, eax ; ret
0x000000000003b1ce : add al, 0x75 ; add eax, 0x18c48348 ; ret
0x00000000000d3647 : add al, 0x75 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d95f2 : add al, 0x75 ; mov ebx, 0xf708588b ; ret
0x000000000012844a : add al, 0x75 ; ret
0x0000000000030554 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x0000000000030574 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x00000000000304b4 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x0000000000030534 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x0000000000030454 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x00000000000304f4 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x0000000000030494 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x00000000000304d4 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x00000000000305f4 : add al, 0x78 ; and eax, 1 ; ret
0x0000000000030474 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x0000000000030514 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x0000000000030434 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000000b722b : add al, 0x80 ; pop r15 ; ret
0x00000000000a467c : add al, 0x80 ; sub eax, dword ptr [r8 + r9*4] ; je 0xa4668 ; ret
0x000000000006f043 : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000016869c : add al, 0x81 ; add rcx, rax ; jmp rcx
0x00000000000a4622 : add al, 0x81 ; je 0xa460c ; ret
0x0000000000156f0b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000a461e : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0xa4610 ; ret
0x00000000001587e3 : add al, 0x81 ; sub eax, edx ; ret
0x000000000002489d : add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000096d47 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000051ed6 : add al, 0x83 ; add rax, rdi ; jmp rax
0x0000000000050bf8 : add al, 0x83 ; add rax, rsi ; jmp rax
0x0000000000118fe4 : add al, 0x83 ; loopne 0x11906b ; ret
0x0000000000078a12 : add al, 0x83 ; loopne 0x78a1f ; mov edx, eax ; mov eax, edx ; ret
0x0000000000078a26 : add al, 0x83 ; loopne 0x78a30 ; mov edx, eax ; jmp 0x789d3
0x0000000000078a25 : add al, 0x83 ; loopne 0x78a31 ; mov edx, eax ; jmp 0x789d4
0x0000000000078b26 : add al, 0x83 ; loopne 0x78b30 ; mov edx, eax ; jmp 0x78ad3
0x0000000000078b25 : add al, 0x83 ; loopne 0x78b31 ; mov edx, eax ; jmp 0x78ad4
0x000000000007b468 : add al, 0x83 ; loopne 0x7b471 ; ret
0x000000000005911e : add al, 0x83 ; ret
0x0000000000118e73 : add al, 0x83 ; ret 0x3908
0x0000000000069997 : add al, 0x83 ; ret 0x4801
0x0000000000057a02 : add al, 0x83 ; ret 0x4c02
0x0000000000118e4e : add al, 0x83 ; ret 0x8108
0x00000000000a48e3 : add al, 0x85 ; leave ; jne 0xa48b5 ; ret
0x00000000000a48e2 : add al, 0x85 ; leave ; jne 0xa48b6 ; ret
0x00000000000a5fe9 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000005174e : add al, 0x86 ; add rax, rdi ; jmp rax
0x0000000000060b10 : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000005fd48 : add al, 0x87 ; add rax, rdi ; jmp rax
0x000000000004e9d5 : add al, 0x87 ; add rax, rdx ; jmp rax
0x00000000000511c9 : add al, 0x87 ; add rax, rsi ; jmp rax
0x00000000000a4af6 : add al, 0x87 ; test r8d, r8d ; jne 0xa4acf ; ret
0x0000000000151b16 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000009b97b : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000012fa13 : add al, 0x88 ; add edi, dword ptr [rax + 1] ; jmp 0x12f9e9
0x000000000012faa3 : add al, 0x88 ; add edi, dword ptr [rax + 1] ; jmp 0x12fa79
0x00000000000a4680 : add al, 0x88 ; je 0xa4664 ; ret
0x00000000000eec90 : add al, 0x89 ; ret
0x00000000000dfd34 : add al, 0x89 ; ret 0xb60f
0x0000000000067642 : add al, 0x89 ; ret 0xe283
0x000000000009b964 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000d5802 : add al, 0x8b ; push rbp ; add al, 1 ; ret 0x341
0x00000000000d1891 : add al, 0x8d ; add rbx, rbp ; ret 0xf66
0x00000000000a40d3 : add al, 0x96 ; add rax, rsi ; jmp rax
0x00000000000dcd65 : add al, 0x96 ; mov r15, rdi ; add rax, rsi ; jmp rax
0x00000000000ca4f5 : add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000000ff6d2 : add al, 0xa ; ret
0x000000000015a963 : add al, 0xa ; sub rax, rdi ; ret
0x00000000000dc647 : add al, 0xa1 ; add rax, rcx ; jmp rax
0x0000000000067fa7 : add al, 0xa7 ; add rax, rdi ; jmp rax
0x00000000000dc73e : add al, 0xaa ; add rax, rdx ; jmp rax
0x000000000005189f : add al, 0xb0 ; add rax, rdi ; jmp rax
0x00000000001272ec : add al, 0xb1 ; add rax, rcx ; jmp rax
0x00000000000ca02d : add al, 0xb2 ; add rax, rdx ; jmp rax
0x0000000000030175 : add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000012fe57 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000003080c : add al, 0xb8 ; ret
0x00000000000cd315 : add al, 0xba ; add rax, rdx ; jmp rax
0x00000000000a400b : add al, 0xbe ; add rax, rsi ; jmp rax
0x00000000000ce7bb : add al, 0xc2 ; jmp 0xce7aa
0x000000000011d421 : add al, 0xc6 ; sbb byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000c32cc : add al, 0xd0 ; ret
0x000000000013814b : add al, 0xd7 ; xor eax, eax ; ret
0x00000000000487c1 : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x48819
0x000000000004a011 : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x4a069
0x000000000012f0f7 : add al, 0xe8 ; ret
0x00000000000ae868 : add al, 0xe8 ; ret 0xf818
0x000000000002dbec : add al, 0xe8 ; test rax, rax ; je 0x2dbfc ; call rax
0x00000000000786b3 : add al, 0xeb ; ret
0x00000000000d1662 : add al, 0xeb ; ret 0x1f0f
0x0000000000030459 : add al, 0xf ; mov bh, 0xc0 ; ret
0x0000000000090951 : add al, 0xf ; mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x0000000000090b03 : add al, 0xf ; mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000d303f : add al, 0xf ; mov word ptr [rdx], es ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x3944
0x000000000015501d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00000000000f5022 : add al, 0xf ; or dword ptr [rax], eax ; call 0x71287
0x00000000000bb953 : add al, 0xf ; test dl, ch ; sbb byte ptr [rax], al ; add dh, dh ; ret
0x00000000000b5df5 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000009f67b : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x000000000008448a : add al, 0xf ; xchg dword ptr [rdi - 0x7d000000], ebp ; ret 0xe977
0x00000000000e557c : add al, 0xf ; xchg eax, esp ; ret
0x000000000011d668 : add al, 0xf ; xchg eax, esp ; ret 0xd021
0x0000000000144d83 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000000b5e28 : add al, 1 ; add byte ptr [rax], al ; ret
0x00000000000d1695 : add al, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006e834 : add al, 1 ; ret
0x00000000000d5805 : add al, 1 ; ret 0x341
0x000000000006e8a2 : add al, 1 ; xor eax, eax ; ret
0x00000000000ae3c9 : add al, 2 ; cmp eax, 0xff ; je 0xae3dc ; ret
0x0000000000090dc3 : add al, 3 ; add byte ptr [rax - 0x77], cl ; ret 0x15ff
0x0000000000162dd7 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000051ed2 : add al, 6 ; movsxd rax, dword ptr [r11 + rax*4] ; add rax, rdi ; jmp rax
0x000000000009f7c8 : add al, 7 ; add byte ptr [rax], al ; ret
0x0000000000099421 : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000050bf4 : add al, 7 ; movsxd rax, dword ptr [r11 + rax*4] ; add rax, rsi ; jmp rax
0x000000000009964c : add al, 7 ; ret
0x000000000007a477 : add al, 8 ; add byte ptr [rax], al ; ret
0x00000000000fefbb : add al, 8 ; mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x00000000000924af : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000000388c1 : add al, ah ; call 0x37ff9
0x000000000009facb : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000015ee92 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000461df : add al, byte ptr [rax + rax*8 - 0x76b31b8b] ; ret 0xbae9
0x000000000009e941 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x0000000000084b45 : add al, byte ptr [rax] ; add al, ch ; ret
0x000000000002a8be : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000093e92 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000137386 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x00000000001307b1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x000000000004a86b : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000e1f2b : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; mov r8b, 0x83 ; ret 0x4802
0x000000000002e202 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000047773 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000164a38 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001161f8 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000840d5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000008f0fe : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d562d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000015597d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001585a1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001559a1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000030046 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000003dec6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000127e63 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x000000000012a6e3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000129d93 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x000000000012d033 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x000000000012eb81 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rdx
0x00000000000e3bf5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x0000000000063774 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x5f9e6
0x000000000004a338 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000c3a82 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000038f6e : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000101c21 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ed317 : add al, byte ptr [rax] ; add byte ptr [rbx + rdi + 0x34], cl ; and al, 0xf ; xchg eax, esp ; ret 0x2044
0x00000000000ce31e : add al, byte ptr [rax] ; add byte ptr [rbx - 0x6bf0db08], al ; ret 0x394c
0x0000000000166774 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000169270 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x8166
0x0000000000045610 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; ret
0x00000000001153de : add al, byte ptr [rax] ; mov rdi, rbx ; mov rax, qword ptr [rsp] ; call rax
0x000000000016b916 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000011204a : add al, byte ptr [rax] ; pop r12 ; pop r13 ; ret
0x00000000000f96e2 : add al, byte ptr [rax] ; pop rbx ; ret
0x000000000011b0d3 : add al, byte ptr [rax] ; ret
0x0000000000118df5 : add al, byte ptr [rbp - 0x77] ; sbb byte ptr [rcx + 0x11894dd0], cl ; ret
0x00000000000d5bea : add al, byte ptr [rbx - 0x6f3cf740] ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000cb037 : add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xe902
0x0000000000109172 : add al, byte ptr [rcx + 0x39] ; ret
0x000000000011f61e : add al, byte ptr [rcx + 0x5e] ; sub eax, 1 ; ret
0x0000000000063771 : add al, byte ptr [rcx - 0x41] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x5f9e9
0x0000000000075b0e : add al, byte ptr [rcx - 0x73] ; inc ebx ; xor eax, eax ; ret
0x000000000005920f : add al, byte ptr [rcx - 0x75] ; add al, 0x39 ; ret
0x0000000000118d7c : add al, byte ptr [rcx - 0x77] ; add byte ptr [rcx + 0x11894dd0], cl ; ret
0x0000000000029e65 : add al, byte ptr [rcx - 0x77] ; ret
0x00000000000dc4b9 : add al, byte ptr [rcx - 0xa] ; ret 0x7580
0x00000000000a4cc6 : add al, byte ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000004a20b : add al, byte ptr [rdx] ; sar bh, 0xff ; ret
0x000000000009f8ca : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000002db7f : add al, ch ; add rax, qword ptr [r8] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b87e9 : add al, ch ; and dword ptr [rbx], edx ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000037bee : add al, ch ; cld ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000f2394 : add al, ch ; idiv byte ptr [rdi - 3] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000084e1d : add al, ch ; insd dword ptr [rdi], dx ; ret
0x00000000000eea17 : add al, ch ; jae 0xeea75 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000107257 : add al, ch ; jmp 0x107262
0x00000000001229cb : add al, ch ; jmp rbx
0x0000000000085961 : add al, ch ; leave ; loopne 0x8596d ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000031947 : add al, ch ; ret
0x000000000002c808 : add al, ch ; ret 0x10ab
0x00000000000ae088 : add al, ch ; ret 0xf822
0x00000000000e54a8 : add al, ch ; ret 0xffed
0x000000000012ab96 : add ax, word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000004a209 : add bh, al ; add al, byte ptr [rdx] ; sar bh, 0xff ; ret
0x000000000002507f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000023ac2 : add bh, al ; sbb dword ptr [rax], eax ; ret
0x000000000004f355 : add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x00000000000d3f4b : add bh, bh ; adc eax, 0xe9f66 ; jmp 0xd3f1f
0x000000000003a54f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000124fcd : add bh, bh ; add byte ptr [rax + 0x31], cl ; ret 0xc148
0x000000000012500c : add bh, bh ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8948
0x00000000000e55cc : add bh, bh ; dec dword ptr [rbx - 0x76b6ebb0] ; ret 0xc748
0x0000000000169a07 : add bh, bh ; dec dword ptr [rcx + 0x21] ; ret 0x949
0x00000000000eb0ec : add bh, bh ; jne 0xeb0fe ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000b4f0a : add bh, bh ; ret
0x0000000000031cc0 : add bh, bh ; ror byte ptr [rcx + rcx*4 - 0x19], 1 ; call qword ptr [rip + 0x18c2dc]
0x000000000004a124 : add bh, byte ptr [rax + 1] ; ret
0x000000000004a36f : add bh, byte ptr [rax + 2] ; ret
0x0000000000038c7b : add bh, byte ptr [rax - 1] ; jmp 0x38c4c
0x00000000000fc16d : add bh, byte ptr [rax - 1] ; jmp 0xfc13e
0x00000000000fcb1d : add bh, byte ptr [rax - 1] ; jmp 0xfcaee
0x00000000000fcbed : add bh, byte ptr [rax - 1] ; jmp 0xfcbbe
0x000000000003805b : add bh, byte ptr [rax - 1] ; ret
0x0000000000166b42 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000000ae3ca : add bh, byte ptr [rip + 0xff] ; je 0xae3db ; ret
0x0000000000169b21 : add bh, dh ; fisub dword ptr [rsi - 0x7f] ; ret 0x7fff
0x00000000000d5c7a : add bh, dh ; ret
0x0000000000029105 : add bh, dh ; ret 0
0x00000000000290f9 : add bh, dh ; ret 0xf800
0x00000000000f5b27 : add bh, dh ; ret 0xfc07
0x000000000003c6a7 : add bh, dh ; ret 0xffef
0x00000000000cabcc : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000b67b0 : add bl, al ; mov eax, 2 ; ret
0x000000000007890d : add bl, al ; nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000d122d : add bl, al ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000012a84d : add bl, al ; nop ; xor eax, eax ; ret
0x0000000000127431 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000cac33 : add bl, al ; nop dword ptr [rax] ; mov rsi, rsp ; call qword ptr [rdx]
0x00000000000f56e2 : add bl, al ; nop dword ptr [rax] ; ret
0x00000000000d112a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000088a14 : add bl, al ; ret
0x0000000000038976 : add bl, al ; xor eax, eax ; ret
0x000000000009061f : add bl, al ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000003693b : add bl, bl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000036a97 : add bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; fadd st(0) ; ret
0x00000000000cd072 : add bl, byte ptr [r11 + 0x5d] ; pop r12 ; ret
0x00000000000cd073 : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008a7da : add bl, byte ptr [rcx + 0xd] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000b976b : add bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000b97dd : add bl, ch ; adc byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x0000000000131c4e : add bl, ch ; fidivr word ptr [rax - 1] ; ret
0x00000000000d57d1 : add bl, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; nop dword ptr [rax] ; ret
0x000000000004deca : add bl, ch ; ret
0x000000000012f8fb : add bl, ch ; ret 0x9066
0x0000000000123fb4 : add bl, ch ; ret 0xf66
0x000000000003719f : add bl, dh ; addps xmm0, xmm0 ; ret
0x000000000009fe7f : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009fe8f : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000016b917 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x000000000003709d : add bl, dh ; mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x000000000003719e : add bl, sil ; addps xmm0, xmm0 ; ret
0x00000000000f9087 : add byte ptr [r11 + rcx*4 + 0x7d], r9b ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000002b81b : add byte ptr [r15], r9b ; mov dh, 0x48 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000001180cd : add byte ptr [r8 + 1], r9b ; ret
0x000000000008a5ca : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008c612 : add byte ptr [r8 - 0x77], r9b ; ret 0x1aeb
0x000000000010d6f7 : add byte ptr [r8 - 0x77], r9b ; ret 0xf641
0x00000000000c7e05 : add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000008c430 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000a412f : add byte ptr [rax + 0x10], bh ; pop rbx ; ret
0x000000000006e88f : add byte ptr [rax + 0x10], bh ; ret
0x000000000016531e : add byte ptr [rax + 0x1478d48], dl ; ret
0x0000000000109adf : add byte ptr [rax + 0x16], bh ; ret
0x0000000000036f6f : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000000a414f : add byte ptr [rax + 0x20], bh ; pop rbx ; ret
0x0000000000044cc2 : add byte ptr [rax + 0x21], cl ; ret 0x8948
0x00000000001674d6 : add byte ptr [rax + 0x21], cl ; ret 0x8b48
0x0000000000169f7e : add byte ptr [rax + 0x21], cl ; ret 0xf685
0x0000000000059aee : add byte ptr [rax + 0x29], cl ; ret
0x0000000000119ba7 : add byte ptr [rax + 0x29], cl ; ret 0x149
0x000000000008ec64 : add byte ptr [rax + 0x29], cl ; ret 0x1f0f
0x00000000000bb1a2 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00000000000a413f : add byte ptr [rax + 0x30], bh ; pop rbx ; ret
0x0000000000124fcf : add byte ptr [rax + 0x31], cl ; ret 0xc148
0x0000000000028f83 : add byte ptr [rax + 0x39], cl ; ret
0x00000000000ce8df : add byte ptr [rax + 0x39], cl ; ret 0x4874
0x000000000011b4c0 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000007c317 : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000000b8b93 : add byte ptr [rax + 0x39], cl ; ret 0x940f
0x00000000000c6329 : add byte ptr [rax + 0x39], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b48
0x00000000000811d7 : add byte ptr [rax + 0x39], cl ; sal byte ptr [rbp + 1], 1 ; ret
0x00000000000a416f : add byte ptr [rax + 0x40], bh ; pop rbx ; ret
0x00000000000c9dd7 : add byte ptr [rax + 0x40], bh ; ret
0x00000000000a40e7 : add byte ptr [rax + 0x485bf0e5], al ; cmovne eax, edx ; ret
0x00000000000224db : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000000a415f : add byte ptr [rax + 0x60], bh ; pop rbx ; ret
0x0000000000090984 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rdx, rax ; jmp rdx
0x00000000000672b2 : add byte ptr [rax + 0x63], cl ; adc al, 0x96 ; add rdx, rsi ; jmp rdx
0x0000000000035514 : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000006f040 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000168699 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rcx, rax ; jmp rcx
0x0000000000030edc : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000005174b : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rdi ; jmp rax
0x000000000006fd3f : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000005d8b1 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rsi ; jmp rax
0x00000000000ca4f2 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000005189c : add byte ptr [rax + 0x63], cl ; add al, 0xb0 ; add rax, rdi ; jmp rax
0x00000000000a4008 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x00000000000d9bfc : add byte ptr [rax + 0x63], cl ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000002e067 : add byte ptr [rax + 0x63], cl ; ret
0x00000000000e25b6 : add byte ptr [rax + 0x63], cl ; ret 0x15eb
0x000000000015a9cb : add byte ptr [rax + 0x63], cl ; ret 0x8348
0x0000000000058842 : add byte ptr [rax + 0x63], cl ; ret 0x8948
0x00000000000d0a3f : add byte ptr [rax + 0x63], cl ; ret 0x8b44
0x000000000003d606 : add byte ptr [rax + 0x63], cl ; ret 0xc748
0x00000000000d1b8b : add byte ptr [rax + 0x63], cl ; ret 0xc790
0x00000000000d82e6 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rdi], 1 ; mov dh, 0x14 ; adc dword ptr [rcx], eax ; ret 0x428d
0x000000000007009b : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000004e510 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000009e93f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000000a03ef : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000c9d1f : add byte ptr [rax + 0x7e], bh ; ret
0x000000000011929f : add byte ptr [rax + 0x7fffffff], bh ; ret
0x00000000000a410f : add byte ptr [rax + 0x80], bh ; pop rbx ; ret
0x00000000000304f8 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x000000000007dd13 : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000099869 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000016a286 : add byte ptr [rax + 0xf], cl ; mov edx, 0x21482fea ; ret 0x36e9
0x000000000002653f : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x0000000000027af9 : add byte ptr [rax + 0xf], cl ; ret
0x000000000008923c : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000012c68d : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000283b0 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000eef42 : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000136cff : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000b9156 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x00000000000a4da9 : add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000000c9d0a : add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x000000000008cb04 : add byte ptr [rax + 0xf], cl ; ret 0xc3c3
0x000000000007bdbc : add byte ptr [rax + 0xf], cl ; ret 0xc748
0x000000000008cb3a : add byte ptr [rax + 0xf], cl ; ret 0xf3c3
0x00000000000892d5 : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000011b056 : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000c9d8e : add byte ptr [rax + 0xff], bh ; cmovne rax, rdx ; ret
0x00000000000c9c81 : add byte ptr [rax + 0xfffa], bh ; cmovne rax, rdx ; ret
0x00000000000c9d2f : add byte ptr [rax + 0xfffa], bh ; ret
0x00000000000eafcf : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000004a135 : add byte ptr [rax + 1], bh ; ret
0x0000000000093e94 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000015bb29 : add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000027193 : add byte ptr [rax + 1], cl ; ret
0x0000000000137388 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000004965f : add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000015bb20 : add byte ptr [rax + 1], cl ; ret 0x8c0f
0x00000000000eafce : add byte ptr [rax + 1], dil ; pop rbx ; ret
0x0000000000108b96 : add byte ptr [rax + 1], dil ; ret
0x000000000004a336 : add byte ptr [rax + 2], bh ; ret
0x000000000015b1ac : add byte ptr [rax + 5], cl ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000a411f : add byte ptr [rax + 8], bh ; pop rbx ; ret
0x000000000009fa4c : add byte ptr [rax + rax], 0 ; ret
0x0000000000059974 : add byte ptr [rax + rax], al ; add al, ch ; ret
0x0000000000088cef : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006776f : add byte ptr [rax + rax], al ; add byte ptr [rdi], cl ; ret
0x0000000000086699 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000084a19 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000003cf63 : add byte ptr [rax + rax], cl ; add byte ptr [rbp + 0x15], dh ; xor eax, eax ; ret
0x00000000000b6485 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000016bc4d : add byte ptr [rax + rcx*2 - 0x75], ah ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000045b37 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0x2ce8
0x0000000000128cf8 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x00000000001067ea : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0xeac1
0x000000000003877d : add byte ptr [rax - 0x2d], cl ; loopne 0x387d3 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000119465 : add byte ptr [rax - 0x39], cl ; add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000003df4f : add byte ptr [rax - 0x39], cl ; ret
0x000000000004a8a4 : add byte ptr [rax - 0x39], cl ; ret 0xc001
0x0000000000084d8f : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000037bf3 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000b6a0f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000b6a4f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000b69ff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000b6a3f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000003c5bc : add byte ptr [rax - 0x3dbbf0b8], al ; jmp 0x3c5dd
0x0000000000036849 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x0000000000036fce : add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000005734b : add byte ptr [rax - 0x3f], cl ; call 0xffffffffc28ebb5c
0x00000000000224c9 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000002d394 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x00000000000f1d34 : add byte ptr [rax - 0x3fcef877], al ; ret
0x000000000008a6ae : add byte ptr [rax - 0x418bf71b], al ; ret
0x00000000000fe26f : add byte ptr [rax - 0x41], cl ; ret
0x000000000003e39b : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000005229f : add byte ptr [rax - 0x50f43], al ; jmp qword ptr [rax]
0x000000000008846e : add byte ptr [rax - 0x5e1f00d], dl ; ret
0x00000000000f4691 : add byte ptr [rax - 0x6bf0df07], al ; ret 0xf980
0x000000000002f32f : add byte ptr [rax - 0x73], cl ; add eax, 0x154fe8 ; ret
0x00000000000f96f7 : add byte ptr [rax - 0x73], cl ; add eax, 0x8c772 ; pop rbx ; ret
0x0000000000060727 : add byte ptr [rax - 0x73], cl ; add qword ptr [rax - 0x7d], rcx ; ret
0x000000000011b8f9 : add byte ptr [rax - 0x73], cl ; and byte ptr [r8 - 0x7d], cl ; ret
0x00000000000b64cf : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000b64df : add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000008325e : add byte ptr [rax - 0x73], cl ; dec dword ptr [r9 - 0x7b] ; ret
0x00000000000b64bf : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000833f2 : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000000f4288 : add byte ptr [rax - 0x73], cl ; push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x000000000006f29b : add byte ptr [rax - 0x73], cl ; xor eax, 0x10fdfd ; jmp 0x6f271
0x00000000000450cd : add byte ptr [rax - 0x73], cl ; xor eax, 0x1bb ; call rax
0x0000000000082197 : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000016b065 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000039677 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; call rax
0x00000000001180ca : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 + 1], r9b ; ret
0x00000000000c7e02 : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000003ad29 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000d51a6 : add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000000000008885f : add byte ptr [rax - 0x75], cl ; add eax, 0x1356e9 ; call qword ptr [rax]
0x000000000008879f : add byte ptr [rax - 0x75], cl ; add eax, 0x1357a9 ; call qword ptr [rax]
0x0000000000134cf6 : add byte ptr [rax - 0x75], cl ; add eax, 0x8a6b2 ; call qword ptr [rax]
0x0000000000134705 : add byte ptr [rax - 0x75], cl ; add eax, 0x8aca3 ; call qword ptr [rax]
0x000000000013761f : add byte ptr [rax - 0x75], cl ; add eax, 0x8bae1 ; call qword ptr [rax]
0x00000000000827e4 : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x0000000000122a21 : add byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000007b09d : add byte ptr [rax - 0x75], cl ; and al, 8 ; jmp 0x7b06e
0x0000000000025147 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000e845a : add byte ptr [rax - 0x75], cl ; je 0xe848b ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000888bb : add byte ptr [rax - 0x75], cl ; jg 0x88910 ; mov rsi, rbp ; call rax
0x0000000000036002 : add byte ptr [rax - 0x75], cl ; jl 0x36032 ; or al, ch ; ret
0x00000000000df1eb : add byte ptr [rax - 0x75], cl ; jl 0xdf21b ; jo 0xdf1fa ; ret 0xc083
0x000000000003abf8 : add byte ptr [rax - 0x75], cl ; jnp 0x3ac0a ; call rax
0x0000000000088a3f : add byte ptr [rax - 0x75], cl ; jnp 0x88a91 ; call rax
0x000000000003a455 : add byte ptr [rax - 0x75], cl ; js 0x3a47f ; call rdx
0x00000000000e1f2d : add byte ptr [rax - 0x75], cl ; mov r8b, 0x83 ; ret 0x4802
0x00000000000d5c1f : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xb60f
0x00000000000e06eb : add byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x77] ; ret 0xa9e8
0x00000000000f9ac7 : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x0000000000080947 : add byte ptr [rax - 0x75], cl ; push r8 ; jmp 0x80917
0x00000000000dbe86 : add byte ptr [rax - 0x75], cl ; push rbp ; add byte ptr [rcx + 0x63], cl ; ret 0x8b48
0x00000000000eb1e2 : add byte ptr [rax - 0x75], cl ; push rdx ; sbb byte ptr [rax - 0x73], cl ; lodsb al, byte ptr [rsi] ; ret 0x8207
0x000000000013e90f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000c532f : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000fe7fe : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000007a427 : add byte ptr [rax - 0x75], cl ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000f5176 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x0000000000137498 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000898f4 : add byte ptr [rax - 0x77], cl ; add eax, 0x136f4c ; ret
0x0000000000080af0 : add byte ptr [rax - 0x77], cl ; add eax, 0x13d5e8 ; ret
0x0000000000080ac0 : add byte ptr [rax - 0x77], cl ; add eax, 0x13d620 ; ret
0x00000000001378a3 : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000000a4e5f : add byte ptr [rax - 0x77], cl ; clc ; and edx, 3 ; jne 0xa4e81 ; ret
0x00000000000909a2 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000714be : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000087d59 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; nop ; xor eax, eax ; ret
0x000000000008803e : add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call rax
0x0000000000035d8f : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret
0x00000000001153df : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; add al, 0x24 ; call rax
0x0000000000136fd4 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x0000000000114a06 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 8 ; call rax
0x00000000000253ab : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; cwde ; call rax
0x000000000002e204 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000102604 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfff7
0x00000000000d2f07 : add byte ptr [rax - 0x77], cl ; jb 0xd2f33 ; xor eax, eax ; ret
0x00000000000f7553 : add byte ptr [rax - 0x77], cl ; je 0xf7567 ; pop rbx ; ret
0x000000000007bb4b : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x0000000000088363 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x0000000000123721 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000072440 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000121e77 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x20] ; call qword ptr [rax]
0x00000000001081ca : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r13 ; call rax
0x00000000000838d9 : add byte ptr [rax - 0x77], cl ; push rsp ; and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000022494 : add byte ptr [rax - 0x77], cl ; ret
0x000000000008a2a4 : add byte ptr [rax - 0x77], cl ; ret 0x14c
0x0000000000090dc5 : add byte ptr [rax - 0x77], cl ; ret 0x15ff
0x000000000008c613 : add byte ptr [rax - 0x77], cl ; ret 0x1aeb
0x000000000011ca08 : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000047775 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000072365 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000050e1b : add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000045b3b : add byte ptr [rax - 0x77], cl ; ret 0x2ce8
0x00000000000719c7 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000003deca : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000089683 : add byte ptr [rax - 0x77], cl ; ret 0x394d
0x00000000000ca6ca : add byte ptr [rax - 0x77], cl ; ret 0x3de9
0x0000000000032c96 : add byte ptr [rax - 0x77], cl ; ret 0x448b
0x000000000007177a : add byte ptr [rax - 0x77], cl ; ret 0x45f7
0x00000000000ca69c : add byte ptr [rax - 0x77], cl ; ret 0x6be9
0x0000000000049edf : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000dd96a : add byte ptr [rax - 0x77], cl ; ret 0x84c6
0x000000000016b6f7 : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x000000000002f4be : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000068f6d : add byte ptr [rax - 0x77], cl ; ret 0x8944
0x0000000000101faa : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000c9227 : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000a824b : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000724d8 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000f90db : add byte ptr [rax - 0x77], cl ; ret 0xabe
0x00000000000ef4af : add byte ptr [rax - 0x77], cl ; ret 0xbceb
0x00000000000886c8 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000ca747 : add byte ptr [rax - 0x77], cl ; ret 0xc0e9
0x0000000000044d92 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000016a24f : add byte ptr [rax - 0x77], cl ; ret 0xc149
0x00000000000ba07f : add byte ptr [rax - 0x77], cl ; ret 0xd1e9
0x00000000000ef317 : add byte ptr [rax - 0x77], cl ; ret 0xdbe9
0x000000000010a727 : add byte ptr [rax - 0x77], cl ; ret 0xf44
0x000000000010d6f8 : add byte ptr [rax - 0x77], cl ; ret 0xf641
0x00000000000572af : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x8348
0x000000000005b307 : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x8349
0x00000000000904c7 : add byte ptr [rax - 0x77], cl ; sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x00000000000a3b44 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000137450 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000003ab23 : add byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000016b760 : add byte ptr [rax - 0x7ab70000], al ; ret 0x7f75
0x000000000016b84e : add byte ptr [rax - 0x7ab80000], al ; ret
0x00000000000dd7da : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x8548
0x000000000016b851 : add byte ptr [rax - 0x7b], cl ; ret
0x00000000000240b8 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x4864
0x0000000000068dea : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000003ed85 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000b475a : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 4
0x00000000000edc9a : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x11e9
0x000000000012d333 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000f4200 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x34], cl ; xor eax, eax ; pop rbx ; ret
0x000000000002682f : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rbx*2 + 0x48], 0x89 ; ret
0x00000000000e076f : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x00000000000f5705 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x0000000000136786 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rdx*2 + 0x48], 0x89 ; ret
0x0000000000038ac3 : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x95 ; ret
0x00000000000cc653 : add byte ptr [rax - 0x7bf0ffc8], al ; ret
0x00000000001536d7 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000044e26 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc33d963d
0x0000000000085c32 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000873f1 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000000e73fd : add byte ptr [rax - 0x7d], cl ; clc ; push qword ptr [rsp + rbx*8 - 0x77] ; ret 0xc085
0x0000000000084db4 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000245fb : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000840d7 : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x00000000000e886d : add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00000000000a341f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000001045af : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000003d7d7 : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000008ff6f : add byte ptr [rax - 0x7d], cl ; ret 0x4501
0x0000000000025085 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d7f21 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000d562f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000004e4f3 : add byte ptr [rax - 0x7d], cl ; ret 0x4817
0x00000000001047d1 : add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x0000000000028019 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000015509f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000af527 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000011870f : add byte ptr [rax - 0x7d], cl ; ret 0x4c0c
0x000000000015a8b8 : add byte ptr [rax - 0x7d], cl ; ret 0x6610
0x000000000008b8b7 : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000089447 : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000002464c : add byte ptr [rax - 0x7d], cl ; ret 0x8401
0x0000000000027fef : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000ce4bb : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000157083 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000132533 : add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x00000000001550c3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000342b5 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000923ef : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000099def : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000007227a : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x0000000000045d8f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x000000000010fc70 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000074aa8 : add byte ptr [rax - 0x7f], cl ; ret
0x0000000000030048 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000014259b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000725ef : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x0000000000042447 : add byte ptr [rax - 0x7f], cl ; sti ; ret 0xffbf
0x00000000000597f7 : add byte ptr [rax - 1], bh ; mov qword ptr [rdi], rcx ; ret
0x0000000000035edd : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000037ddd : add byte ptr [rax - 1], bh ; ret
0x000000000007ff96 : add byte ptr [rax - 1], dil ; ret
0x000000000004c839 : add byte ptr [rax - 9], cl ; fisttp word ptr [rcx - 0x39] ; ret
0x0000000000084e1a : add byte ptr [rax], 0 ; add al, ch ; insd dword ptr [rdi], dx ; ret
0x0000000000053774 : add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000aed27 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000011b4bd : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000015bb1d : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8c0f
0x00000000000a8248 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000ae91c : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000015ad42 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000016c14b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000825fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call rax
0x0000000000144d8b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000f9ac3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000088a3b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x000000000015a96b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movsxd rax, ecx ; ret
0x000000000007db9b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000000a409b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000071303 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; or dword ptr [rdi], 0x20 ; ret
0x00000000000b11c3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000002e56b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000089473 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008614f : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000078c46 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x30], al ; pop rbx ; ret
0x00000000000743bf : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00000000000a826c : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x8548
0x00000000000d5cc4 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0xc35b
0x0000000000118e54 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0xfc3
0x0000000000161df3 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008c056 : add byte ptr [rax], 0 ; cmove rax, rdx ; ret
0x00000000000e3a77 : add byte ptr [rax], ah ; add byte ptr [rax], al ; ret
0x0000000000030538 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x000000000012d031 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x0000000000084e1b : add byte ptr [rax], al ; add al, ch ; insd dword ptr [rdi], dx ; ret
0x00000000001229c9 : add byte ptr [rax], al ; add al, ch ; jmp rbx
0x000000000003e7c5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000002c806 : add byte ptr [rax], al ; add al, ch ; ret 0x10ab
0x00000000000e54a6 : add byte ptr [rax], al ; add al, ch ; ret 0xffed
0x000000000004a207 : add byte ptr [rax], al ; add bh, al ; add al, byte ptr [rdx] ; sar bh, 0xff ; ret
0x000000000004f353 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000003a54d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000169a05 : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx + 0x21] ; ret 0x949
0x00000000000d5c78 : add byte ptr [rax], al ; add bh, dh ; ret
0x000000000008a69d : add byte ptr [rax], al ; add bh, dh ; ret 0
0x000000000003c6a5 : add byte ptr [rax], al ; add bh, dh ; ret 0xffef
0x00000000000cabca : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000b67ae : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x000000000012a84b : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x0000000000088a12 : add byte ptr [rax], al ; add bl, al ; ret
0x0000000000038974 : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x0000000000036939 : add byte ptr [rax], al ; add bl, bl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000e055c : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000012f8f9 : add byte ptr [rax], al ; add bl, ch ; ret 0x9066
0x0000000000123fb2 : add byte ptr [rax], al ; add bl, ch ; ret 0xf66
0x000000000009fe7d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009fe8d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00000000000a412d : add byte ptr [rax], al ; add byte ptr [rax + 0x10], bh ; pop rbx ; ret
0x000000000016531c : add byte ptr [rax], al ; add byte ptr [rax + 0x1478d48], dl ; ret
0x00000000000a414d : add byte ptr [rax], al ; add byte ptr [rax + 0x20], bh ; pop rbx ; ret
0x00000000001674d4 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret 0x8b48
0x0000000000059aec : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000008ec62 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x1f0f
0x00000000000bb1a0 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00000000000a413d : add byte ptr [rax], al ; add byte ptr [rax + 0x30], bh ; pop rbx ; ret
0x0000000000028f81 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000ce8dd : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x4874
0x000000000011b4be : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000c6327 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b48
0x00000000000a416d : add byte ptr [rax], al ; add byte ptr [rax + 0x40], bh ; pop rbx ; ret
0x00000000000a415d : add byte ptr [rax], al ; add byte ptr [rax + 0x60], bh ; pop rbx ; ret
0x00000000000d9bfa : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000005030f : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000d0a3d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b44
0x00000000000d1b89 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xc790
0x00000000000a03ed : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000c9d1d : add byte ptr [rax], al ; add byte ptr [rax + 0x7e], bh ; ret
0x0000000000027af7 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000134616 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000283ae : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000c9cd7 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000000c9d08 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x000000000008cb02 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3c3
0x000000000007bdba : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc748
0x000000000008cb38 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xf3c3
0x00000000000c9d91 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000011b054 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000c9d2d : add byte ptr [rax], al ; add byte ptr [rax + 0xfffa], bh ; ret
0x00000000000ef528 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000004a133 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000b60f4 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000015bb27 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000027191 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000004965d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000015bb1e : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8c0f
0x000000000004a334 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000a411d : add byte ptr [rax], al ; add byte ptr [rax + 8], bh ; pop rbx ; ret
0x00000000000b6483 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000045b35 : add byte ptr [rax], al ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0x2ce8
0x000000000003df4d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000004ac3d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000003c5ba : add byte ptr [rax], al ; add byte ptr [rax - 0x3dbbf0b8], al ; jmp 0x3c5df
0x0000000000036fcc : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x00000000000224c7 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000002d392 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x00000000000f1d32 : add byte ptr [rax], al ; add byte ptr [rax - 0x3fcef877], al ; ret
0x000000000008846c : add byte ptr [rax], al ; add byte ptr [rax - 0x5e1f00d], dl ; ret
0x000000000011b8f7 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; and byte ptr [r8 - 0x7d], cl ; ret
0x00000000000b64cd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000b64dd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000b64bd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000833f0 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000082195 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d51a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x00000000000827e2 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000d4fe5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000df1e9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jl 0xdf21d ; jo 0xdf1fc ; ret 0xc083
0x0000000000088a3d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jnp 0x88a93 ; call rax
0x000000000003a453 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x3a481 ; call rdx
0x00000000000f9ac5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x0000000000080945 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push r8 ; jmp 0x80919
0x00000000000a121d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000008803c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call rax
0x00000000000b8712 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000102602 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfff7
0x0000000000088361 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000007243e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000000262c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011ca06 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000004eea4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000072363 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000050e19 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000003dec8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000049edd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000012c95b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000f4222 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000a8249 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000e429d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000016a24d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc149
0x00000000000ba07d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xd1e9
0x000000000005df4d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x8349
0x000000000016b75e : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x7f75
0x000000000016b84c : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab80000], al ; ret
0x0000000000068de8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000012d331 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000cc651 : add byte ptr [rax], al ; add byte ptr [rax - 0x7bf0ffc8], al ; ret
0x0000000000044e24 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call 0xffffffffc33d963f
0x0000000000084db2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000002d9fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a341d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000003d7d5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000008ff6d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4501
0x0000000000025083 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001047cf : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x0000000000028017 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000156bc3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000af525 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000011870d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c0c
0x000000000015a8b6 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6610
0x00000000000c8d38 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000011aa17 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000158741 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000132531 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x0000000000156bed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000726fa : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000923ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000045d8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x0000000000143d94 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000725ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x0000000000035edb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000037ddb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000004c837 : add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; fisttp word ptr [rcx - 0x39] ; ret
0x000000000003a54b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000169a03 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx + 0x21] ; ret 0x949
0x000000000008a69b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret 0
0x000000000003cbbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret 0xffef
0x000000000009fe8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000003df4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000004ac3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000003c5b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x3dbbf0b8], al ; jmp 0x3c5e1
0x00000000000b64cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000b64db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000b64bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000a121b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000008898b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000000814f9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000049edb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000e429b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000ba07b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xd1e9
0x000000000002d9fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a341b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000011870b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c0c
0x00000000000725eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000000e2c7f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000169f78 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax + 0x21], cl ; ret 0xf685
0x000000000008c431 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000008c3e5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000161f3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 5], cl ; ret 5
0x0000000000118b7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000a365b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000a721b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x00000000001372cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4918
0x000000000013a60b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000009104b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000f66fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000000000b69cc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000f4150 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000003a54c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000825fc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000130018 : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000000f0d78 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x00000000000fd6db : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x00000000000f3bb9 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x000000000008cb37 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000008cb01 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000036938 : add byte ptr [rax], al ; add byte ptr [rax], al ; fld xword ptr [rsp - 0x18] ; ret
0x000000000006ad6d : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x66fe1
0x00000000000e055b : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xe0529
0x00000000000509b5 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000047fca : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x47fdb ; push r10 ; ret
0x00000000000484b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x484c4 ; push r10 ; ret
0x00000000000d2d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea eax, dword ptr [rsi + 1] ; ret
0x000000000016539c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000001653ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000001653bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000001653cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000001653dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016532c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016533c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016534c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016535c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016536c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016537c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016538c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000b64bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000b64dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000b64cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x00000000000a03ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000009edac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000014f7bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000014f78c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000c9d1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7e ; ret
0x00000000000c9d2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfffa ; ret
0x0000000000038a8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000004a132 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000004a333 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000003aee3 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000144d8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000014f7cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x0000000000080f64 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x60], rcx ; ret
0x000000000009fdfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000009fe0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000122e0a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f9ac4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000a121c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000080944 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rcx, qword ptr [rbx + 0x50] ; jmp 0x8091a
0x0000000000088a3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x000000000010707c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r14 ; call 0x103309
0x000000000008898c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x000000000009fe7c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009fe8c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000015a96c : add byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rax, ecx ; ret
0x000000000007db9c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000000a409c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000144edc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000016531b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016530b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, qword ptr [rdi] ; ret
0x000000000009fdbb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009fdcb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; ret
0x000000000014f76a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; ret
0x000000000009fdaa : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov word ptr [rdi], dx ; ret
0x00000000000b61ca : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor rax, rax ; ret
0x000000000009fa88 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x0000000000094639 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000003c5b9 : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x44 ; ret 0x14eb
0x0000000000071304 : add byte ptr [rax], al ; add byte ptr [rax], al ; or dword ptr [rdi], 0x20 ; ret
0x000000000008c432 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000a4057 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; cmove rax, rdx ; ret
0x000000000008c3e6 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002d295 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000244c0 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000003cf50 : add byte ptr [rax], al ; add byte ptr [rax], al ; test dl, dl ; cmovne eax, ecx ; ret
0x000000000015bc0c : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000000f403c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000003a30c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000073ba4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov rax, rdi ; ret
0x000000000010b71c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; mov rax, rsi ; ret
0x00000000000b64ec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000169f7a : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax + 0x21], cl ; ret 0xf685
0x000000000004da98 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x38 ; ret
0x000000000007b135 : add byte ptr [rax], al ; add byte ptr [rbp + 0x11], dh ; add rsp, 0x48 ; ret
0x00000000000ebad8 : add byte ptr [rax], al ; add byte ptr [rbp + 0x14], dh ; add rsp, 0x28 ; ret
0x0000000000137612 : add byte ptr [rax], al ; add byte ptr [rbp + 0x14], dh ; add rsp, 0x38 ; ret
0x00000000000f1f56 : add byte ptr [rax], al ; add byte ptr [rbp + 0x18], dh ; add rsp, 0x38 ; ret
0x00000000000ba422 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; add rsp, 0x28 ; ret
0x00000000000fbaac : add byte ptr [rax], al ; add byte ptr [rbp + 0x22], dh ; add rsp, 0x68 ; ret
0x00000000001377f8 : add byte ptr [rax], al ; add byte ptr [rbp + 0x24], dh ; add rsp, 0x48 ; ret
0x000000000012d2d0 : add byte ptr [rax], al ; add byte ptr [rbp + 0x28], dh ; add rsp, 0x28 ; ret
0x000000000011390a : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], dh ; add rsp, 0x38 ; ret
0x0000000000134adf : add byte ptr [rax], al ; add byte ptr [rbp + 0x30], dh ; add rsp, 0x18 ; ret
0x000000000007c27c : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000008ad11 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x00000000000f3df1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x37], dh ; add rsp, 0x68 ; ret
0x00000000000e1bf5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], al ; ret 0x4f7e
0x00000000000f1e5f : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], dh ; add rsp, 0x38 ; ret
0x00000000000f4ca5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; add rsp, 0x38 ; ret
0x00000000000f4d74 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3c], dh ; add rsp, 0x38 ; ret
0x00000000000587c7 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000008c433 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000f1aa8 : add byte ptr [rax], al ; add byte ptr [rbp + 0x46], dh ; add rsp, 0x58 ; ret
0x00000000000f1967 : add byte ptr [rax], al ; add byte ptr [rbp + 0x47], dh ; add rsp, 0x18 ; ret
0x0000000000049ec2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x47], dh ; leave ; ret
0x00000000000f1b4d : add byte ptr [rax], al ; add byte ptr [rbp + 0x49], dh ; add rsp, 0x58 ; ret
0x0000000000109cf1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4b], dh ; leave ; ret
0x000000000007c047 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x00000000000c4d7c : add byte ptr [rax], al ; add byte ptr [rbp + 0x52], dh ; add rsp, 0x38 ; ret
0x00000000000e2dcc : add byte ptr [rax], al ; add byte ptr [rbp + 0x55], dh ; add rsp, 0x38 ; ret
0x00000000000c982c : add byte ptr [rax], al ; add byte ptr [rbp + 0x62], dh ; add rsp, 0x38 ; ret
0x00000000000f2f5e : add byte ptr [rax], al ; add byte ptr [rbp + 0x75], dh ; add rsp, 0x38 ; ret
0x000000000010ca75 : add byte ptr [rax], al ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x28 ; ret
0x00000000000f1fba : add byte ptr [rax], al ; add byte ptr [rbp + 0xc], dh ; add rsp, 0x18 ; ret
0x000000000006e654 : add byte ptr [rax], al ; add byte ptr [rbp + 0xe], dh ; add rsp, 0x18 ; ret
0x00000000000d5cd4 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; cmp byte ptr [rsi], cl ; je 0xd5c7b ; ret
0x0000000000047fcb : add byte ptr [rax], al ; add byte ptr [rbp + 3], dh ; push r10 ; ret
0x00000000000378c0 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000003ada0 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x000000000012eb92 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x48 ; ret
0x00000000000f1a08 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x58 ; ret
0x000000000012cb02 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x78 ; ret
0x00000000000d338d : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x75], cl ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000001303c9 : add byte ptr [rax], al ; add byte ptr [rbp - 0x17cc8113], al ; sti ; ret 0xffff
0x0000000000023ae2 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3c], dh ; ret
0x0000000000168c33 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x8949
0x00000000000f97a5 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000007d38d : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000002cbe1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x00000000000a4058 : add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; cmove eax, edx ; ret
0x000000000011b25b : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f05f8], al ; ret 0x8941
0x000000000011b2b2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f0ff8], al ; ret 0x8941
0x000000000011b2da : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f1ef8], al ; ret 0x8941
0x0000000000038c5c : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000024384 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000026486 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000163f28 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x0000000000161f3d : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 5], cl ; ret 5
0x000000000005dbe8 : add byte ptr [rax], al ; add byte ptr [rbx - 0x4ff43], al ; call qword ptr [rax]
0x000000000005e11d : add byte ptr [rax], al ; add byte ptr [rbx - 0x50743], al ; jmp qword ptr [rax]
0x0000000000118d8d : add byte ptr [rax], al ; add byte ptr [rbx - 0x548afe06], al ; jmp 0x118d62
0x000000000006043a : add byte ptr [rax], al ; add byte ptr [rbx - 0x60f43], al ; call qword ptr [rax]
0x0000000000038aeb : add byte ptr [rax], al ; add byte ptr [rbx - 0x6af00008], al ; ret 0xd321
0x00000000000785f3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x760e76cd], cl ; ret 0xe181
0x00000000000566ae : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000094572 : add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x00000000000ccf3d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7f3ad], cl ; ret
0x000000000004f073 : add byte ptr [rax], al ; add byte ptr [rbx - 0x8f743], al ; call qword ptr [rax]
0x0000000000031cfe : add byte ptr [rax], al ; add byte ptr [rbx], al ; jnp 0x31d4d ; call qword ptr [rip + 0x18c226]
0x00000000000b32f2 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2d8d4ce8], cl ; ret 0xc71
0x000000000014f7bd : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000000da7c9 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret
0x00000000000585c8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x0000000000136394 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000109bb1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x00000000000c2f78 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop r14 ; jmp rax
0x000000000004cd0a : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000d8309 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0xb60f
0x000000000005a18d : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000008d10e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000005e553 : add byte ptr [rax], al ; add byte ptr [rcx + 1], bh ; jmp rax
0x00000000000a365d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000016a665 : add byte ptr [rax], al ; add byte ptr [rcx + 9], cl ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3145
0x00000000000ae3cd : add byte ptr [rax], al ; add byte ptr [rcx + rax - 0x3d], dh ; or eax, 0xffffffff ; ret
0x000000000011b4db : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xf41
0x000000000011c046 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x17e9
0x000000000011c0d5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x65e9
0x000000000011bec7 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8944
0x0000000000078c47 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x30], al ; pop rbx ; ret
0x00000000000743c0 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000015fa4d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000010707d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0x103308
0x000000000004275a : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret
0x000000000011e815 : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; ret
0x00000000001181fb : add byte ptr [rax], al ; add byte ptr [rcx - 0x76b7f3a9], cl ; ret
0x000000000005843a : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x1be9
0x000000000005773e : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x40e9
0x0000000000058394 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x44c6
0x000000000005802a : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x4ae9
0x0000000000057531 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000000576b9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc5e9
0x0000000000044206 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x1f0f
0x00000000000a826d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8548
0x000000000003dc52 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8944
0x0000000000125fdd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7cb76fec], cl ; ret 0x4801
0x00000000000854af : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000083da9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000008ad7f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000a721d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x00000000001372cd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4918
0x000000000013a60d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000009104d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000ab17e : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; fmul dword ptr [rcx - 0x39] ; ret
0x0000000000094744 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000009476a : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000015b3ed : add byte ptr [rax], al ; add byte ptr [rcx], ch ; enter 0x2275, -0x7d ; ret 0x8101
0x00000000000bd614 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2941
0x00000000000bf04c : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x448d
0x00000000000bacba : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x858b
0x00000000000c140e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8944
0x00000000000c19ef : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8948
0x00000000000bee83 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x894c
0x00000000000c17b7 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x00000000000c14b6 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000bf7d6 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d44
0x00000000000c2474 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d45
0x00000000000f2605 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xc085
0x00000000000be3f2 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000babf0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd129
0x00000000000bd5db : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xe889
0x0000000000073ba5 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000005c8d3 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; leave ; jmp rax
0x000000000002631a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000009407a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x0000000000035f28 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0xae ; ret
0x000000000010b71d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x00000000000b5f32 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000167162 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000016816e : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x44], al ; ret 0x8548
0x000000000012b1e8 : add byte ptr [rax], al ; add byte ptr [rdi - 0x18], ah ; call rsp
0x000000000012a776 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdi + 0x20], edx ; ret
0x000000000012a746 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], eax ; ret
0x0000000000127316 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdi + 8], eax ; ret
0x000000000012a787 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], ebx ; ret
0x0000000000127327 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], ecx ; ret
0x0000000000129e87 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], edx ; ret
0x000000000012a767 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], esp ; ret
0x00000000000eb9ae : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], edi ; ret
0x0000000000109765 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8948d789 ; ret
0x0000000000109b1e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x0000000000144e6d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000144edd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000be01d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a409d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000007db9d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00000000000940bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000058c55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; push rax ; ret 0xf41
0x00000000000da6d0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x00000000000c6e50 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000be47f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x0000000000046e77 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x1fe9
0x00000000000f0d79 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x41c3
0x00000000000c7ef8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4589
0x000000000010997b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x66c3
0x0000000000046810 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xb841
0x000000000002d3d9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x000000000003dbe5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc101
0x00000000000d5cc5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc35b
0x00000000000e3bf6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xfc3
0x0000000000129608 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x000000000015aa0b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000006e09c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b48
0x0000000000046f8d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xb0e9
0x00000000000cac52 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xbdeb
0x0000000000052643 : add byte ptr [rax], al ; add byte ptr [rdx + 1], bh ; jmp rax
0x00000000000c62d7 : add byte ptr [rax], al ; add byte ptr [rdx + rdx*8 - 0x76b7738b], al ; ret
0x0000000000080a69 : add byte ptr [rax], al ; add byte ptr [rdx], al ; jbe 0x80a76 ; ret
0x0000000000161df4 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000944ca : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000093fe2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000014f76b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov word ptr [rcx], dx ; ret
0x000000000009fdab : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov word ptr [rdi], dx ; ret
0x00000000000a2e7b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000b61cb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; xor rax, rax ; ret
0x0000000000029e55 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000069011 : add byte ptr [rax], al ; add cl, ch ; ret 0xffdf
0x000000000002c7bb : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000006ad6e : add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x0000000000080a6a : add byte ptr [rax], al ; add dh, byte ptr [rsi + 1] ; ret
0x00000000000bd2d4 : add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000f66fd : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000000000005b778 : add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00000000001665d1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000124a5e : add byte ptr [rax], al ; add dh, dh ; ret 0x7507
0x00000000000d50cd : add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x000000000002e9ef : add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x000000000009a150 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x000000000009a159 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00000000000570ad : add byte ptr [rax], al ; add dh, dh ; ret 0xf50
0x00000000000cdbad : add byte ptr [rax], al ; add dh, dh ; test dword ptr [rdi + rdx*8 - 1], edi ; jmp qword ptr [rax]
0x000000000012d0cb : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000006e89e : add byte ptr [rax], al ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x0000000000031cff : add byte ptr [rax], al ; add edi, dword ptr [rbx + 0x40] ; call qword ptr [rip + 0x18c226]
0x00000000000b69ce : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000093e93 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000015bb28 : add byte ptr [rax], al ; add rax, rdi ; vzeroupper ; ret
0x0000000000127e65 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x000000000012a6e5 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000129d95 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000127248 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x0000000000087bfc : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000016c69e : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000038b15 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000eb12d : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000037874 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000244a3 : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000012edf5 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000016b31c : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000007e182 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000f0cd8 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000f2357 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000f3547 : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000000ec4e0 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x00000000000ec665 : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x00000000001234a4 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0x00000000000251b6 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000036b27 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000a40e6 : add byte ptr [rax], al ; and ch, 0xf0 ; pop rbx ; cmovne rax, rdx ; ret
0x00000000000fb888 : add byte ptr [rax], al ; and eax, 0xfffff000 ; or eax, edx ; ret
0x000000000003083f : add byte ptr [rax], al ; and eax, esi ; ret
0x00000000000940be : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000099d50 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000099868 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x0000000000115fe2 : add byte ptr [rax], al ; call 0x222e4
0x0000000000037bed : add byte ptr [rax], al ; call 0x37ff9
0x000000000012bc51 : add byte ptr [rax], al ; call qword ptr [rax]
0x000000000003a54e : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000002c832 : add byte ptr [rax], al ; call r14
0x0000000000024258 : add byte ptr [rax], al ; call rax
0x000000000003a495 : add byte ptr [rax], al ; call rdx
0x00000000000f0d7a : add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000118e56 : add byte ptr [rax], al ; cmovb eax, edx ; ret
0x00000000000fd6dd : add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x00000000000e3bf7 : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000f3bbb : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000a4092 : add byte ptr [rax], al ; cmove rax, rcx ; ret
0x00000000000898a7 : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000d5cc6 : add byte ptr [rax], al ; cmovne eax, edx ; pop rbx ; ret
0x000000000010997c : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x000000000008cb03 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000c82c3 : add byte ptr [rax], al ; cmovne rdx, rax ; mov rax, rdx ; ret
0x0000000000103cae : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000001536d6 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000e3b7c : add byte ptr [rax], al ; cmp dx, 2 ; je 0xe3b90 ; ret
0x00000000000cac4f : add byte ptr [rax], al ; cmp eax, 0x4000 ; sete dl ; jmp 0xcac21
0x00000000000e0c1f : add byte ptr [rax], al ; cmp eax, 0x4000 ; sete dl ; jmp 0xe0bf1
0x0000000000118d8e : add byte ptr [rax], al ; cmp edx, 1 ; jne 0x118d48 ; jmp 0x118d61
0x0000000000075499 : add byte ptr [rax], al ; cmp qword ptr [rsi + 0x30], 0 ; je 0x754b1 ; ret
0x000000000008572f : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x856ff ; ret
0x0000000000036a96 : add byte ptr [rax], al ; fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x000000000003693a : add byte ptr [rax], al ; fld xword ptr [rsp - 0x18] ; ret
0x000000000010bf44 : add byte ptr [rax], al ; je 0x10bf54 ; ret
0x000000000008848a : add byte ptr [rax], al ; je 0x88494 ; ret
0x00000000000a4d84 : add byte ptr [rax], al ; je 0xa4d94 ; ret
0x00000000000ae3ce : add byte ptr [rax], al ; je 0xae3d7 ; ret
0x00000000000b6484 : add byte ptr [rax], al ; je 0xb64f8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000167163 : add byte ptr [rax], al ; jg 0x167176 ; neg eax ; ret
0x00000000000b5f33 : add byte ptr [rax], al ; jg 0xb5f3f ; neg eax ; ret
0x0000000000163f29 : add byte ptr [rax], al ; jl 0x163f36 ; neg eax ; ret
0x000000000010e81b : add byte ptr [rax], al ; jmp 0x10e5b8
0x000000000010ed5b : add byte ptr [rax], al ; jmp 0x10eb17
0x00000000001223e3 : add byte ptr [rax], al ; jmp 0x1223b9
0x0000000000123fb3 : add byte ptr [rax], al ; jmp 0x123f7c
0x000000000012fa19 : add byte ptr [rax], al ; jmp 0x12f9e3
0x000000000012faa9 : add byte ptr [rax], al ; jmp 0x12fa73
0x000000000004dec9 : add byte ptr [rax], al ; jmp 0x4de93
0x0000000000053c19 : add byte ptr [rax], al ; jmp 0x53be3
0x0000000000063776 : add byte ptr [rax], al ; jmp 0x5f9e4
0x000000000006ad6f : add byte ptr [rax], al ; jmp 0x66fdf
0x0000000000070cf1 : add byte ptr [rax], al ; jmp 0x70b6d
0x00000000000723e4 : add byte ptr [rax], al ; jmp 0x723b5
0x00000000000b45f9 : add byte ptr [rax], al ; jmp 0xb4049
0x00000000000ca627 : add byte ptr [rax], al ; jmp 0xca419
0x00000000000e055d : add byte ptr [rax], al ; jmp 0xe0527
0x00000000000f95e1 : add byte ptr [rax], al ; jmp 0xf9169
0x0000000000037b03 : add byte ptr [rax], al ; jmp rax
0x000000000012724f : add byte ptr [rax], al ; jmp rcx
0x0000000000109cf2 : add byte ptr [rax], al ; jne 0x109d46 ; leave ; ret
0x000000000010ca76 : add byte ptr [rax], al ; jne 0x10ca8d ; add rsp, 0x28 ; ret
0x000000000010cad6 : add byte ptr [rax], al ; jne 0x10caed ; add rsp, 0x28 ; ret
0x000000000011390b : add byte ptr [rax], al ; jne 0x113940 ; add rsp, 0x38 ; ret
0x00000000001139d6 : add byte ptr [rax], al ; jne 0x1139e7 ; add rsp, 0x28 ; ret
0x0000000000118fb0 : add byte ptr [rax], al ; jne 0x118fc8 ; add rsp, 0x18 ; ret
0x000000000011acae : add byte ptr [rax], al ; jne 0x11acbf ; add rsp, 0x18 ; ret
0x000000000011f241 : add byte ptr [rax], al ; jne 0x11f252 ; add rsp, 0x18 ; ret
0x0000000000120ff9 : add byte ptr [rax], al ; jne 0x12100c ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000123acc : add byte ptr [rax], al ; jne 0x123b1c ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000123f2e : add byte ptr [rax], al ; jne 0x123f41 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000124212 : add byte ptr [rax], al ; jne 0x12424b ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001242b0 : add byte ptr [rax], al ; jne 0x1242ee ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000124ab2 : add byte ptr [rax], al ; jne 0x124ad0 ; add rsp, 0x40 ; pop rbx ; ret
0x000000000012b481 : add byte ptr [rax], al ; jne 0x12b4aa ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012b845 : add byte ptr [rax], al ; jne 0x12b85f ; add rsp, 0x18 ; ret
0x000000000012b95d : add byte ptr [rax], al ; jne 0x12b980 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000012b9ed : add byte ptr [rax], al ; jne 0x12ba10 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000012bd6e : add byte ptr [rax], al ; jne 0x12bd90 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000012cb03 : add byte ptr [rax], al ; jne 0x12cb14 ; add rsp, 0x78 ; ret
0x000000000012cb79 : add byte ptr [rax], al ; jne 0x12cb8a ; add rsp, 0x78 ; ret
0x000000000012cbe9 : add byte ptr [rax], al ; jne 0x12cbfa ; add rsp, 0x78 ; ret
0x000000000012cc59 : add byte ptr [rax], al ; jne 0x12cc6a ; add rsp, 0x78 ; ret
0x000000000012ccba : add byte ptr [rax], al ; jne 0x12cccb ; add rsp, 0x78 ; ret
0x000000000012cd1e : add byte ptr [rax], al ; jne 0x12cd2f ; add rsp, 0x78 ; ret
0x000000000012cd89 : add byte ptr [rax], al ; jne 0x12cd9a ; add rsp, 0x78 ; ret
0x000000000012ce03 : add byte ptr [rax], al ; jne 0x12ce14 ; add rsp, 0x78 ; ret
0x000000000012d2d1 : add byte ptr [rax], al ; jne 0x12d305 ; add rsp, 0x28 ; ret
0x000000000012eb93 : add byte ptr [rax], al ; jne 0x12eba4 ; add rsp, 0x48 ; ret
0x000000000012ebfc : add byte ptr [rax], al ; jne 0x12ec4c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012ec8c : add byte ptr [rax], al ; jne 0x12ecdb ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012ed5c : add byte ptr [rax], al ; jne 0x12edae ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012efec : add byte ptr [rax], al ; jne 0x12f03d ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f07c : add byte ptr [rax], al ; jne 0x12f0cc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f118 : add byte ptr [rax], al ; jne 0x12f12b ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f178 : add byte ptr [rax], al ; jne 0x12f18b ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f1cc : add byte ptr [rax], al ; jne 0x12f222 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f25c : add byte ptr [rax], al ; jne 0x12f2ac ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f8cc : add byte ptr [rax], al ; jne 0x12f91e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f95c : add byte ptr [rax], al ; jne 0x12f9ae ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f9ec : add byte ptr [rax], al ; jne 0x12fa3e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012fa7c : add byte ptr [rax], al ; jne 0x12face ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000134ae0 : add byte ptr [rax], al ; jne 0x134b1c ; add rsp, 0x18 ; ret
0x0000000000134f67 : add byte ptr [rax], al ; jne 0x134fa5 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000134ff7 : add byte ptr [rax], al ; jne 0x135035 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013756f : add byte ptr [rax], al ; jne 0x1375a4 ; add rsp, 0x38 ; ret
0x0000000000137613 : add byte ptr [rax], al ; jne 0x137633 ; add rsp, 0x38 ; ret
0x00000000001376b0 : add byte ptr [rax], al ; jne 0x1376d4 ; add rsp, 0x38 ; ret
0x00000000001377f9 : add byte ptr [rax], al ; jne 0x137829 ; add rsp, 0x48 ; ret
0x0000000000137d37 : add byte ptr [rax], al ; jne 0x137d4e ; add rsp, 0x28 ; ret
0x000000000015bef2 : add byte ptr [rax], al ; jne 0x15be08 ; ret
0x0000000000160380 : add byte ptr [rax], al ; jne 0x160308 ; ret
0x0000000000023ae3 : add byte ptr [rax], al ; jne 0x23aaf ; ret
0x00000000000378c1 : add byte ptr [rax], al ; jne 0x378d2 ; add rsp, 0x18 ; ret
0x0000000000038584 : add byte ptr [rax], al ; jne 0x385b3 ; add rsp, 0x40 ; pop rbx ; ret
0x000000000003ada1 : add byte ptr [rax], al ; jne 0x3adb2 ; add rsp, 0x28 ; ret
0x000000000003ae91 : add byte ptr [rax], al ; jne 0x3aea2 ; add rsp, 0x28 ; ret
0x000000000003b44b : add byte ptr [rax], al ; jne 0x3b469 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003b6bb : add byte ptr [rax], al ; jne 0x3b6cc ; add rsp, 0x18 ; ret
0x000000000003b708 : add byte ptr [rax], al ; jne 0x3b719 ; add rsp, 0x18 ; ret
0x000000000003b75a : add byte ptr [rax], al ; jne 0x3b76b ; add rsp, 0x18 ; ret
0x000000000003b7a7 : add byte ptr [rax], al ; jne 0x3b7b8 ; add rsp, 0x18 ; ret
0x000000000003b7fa : add byte ptr [rax], al ; jne 0x3b80b ; add rsp, 0x18 ; ret
0x000000000003b847 : add byte ptr [rax], al ; jne 0x3b858 ; add rsp, 0x18 ; ret
0x000000000003cf65 : add byte ptr [rax], al ; jne 0x3cf84 ; xor eax, eax ; ret
0x000000000003f985 : add byte ptr [rax], al ; jne 0x3f9a4 ; xor eax, eax ; ret
0x00000000000423b5 : add byte ptr [rax], al ; jne 0x423d4 ; xor eax, eax ; ret
0x0000000000047fcc : add byte ptr [rax], al ; jne 0x47fd9 ; push r10 ; ret
0x00000000000484b5 : add byte ptr [rax], al ; jne 0x484c2 ; push r10 ; ret
0x0000000000049ec3 : add byte ptr [rax], al ; jne 0x49f13 ; leave ; ret
0x000000000004a6d5 : add byte ptr [rax], al ; jne 0x4a6f4 ; xor eax, eax ; ret
0x000000000004da99 : add byte ptr [rax], al ; jne 0x4dab5 ; add rsp, 0x38 ; ret
0x000000000006e655 : add byte ptr [rax], al ; jne 0x6e66f ; add rsp, 0x18 ; ret
0x000000000007b136 : add byte ptr [rax], al ; jne 0x7b153 ; add rsp, 0x48 ; ret
0x00000000000819a8 : add byte ptr [rax], al ; jne 0x819f3 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000a6a25 : add byte ptr [rax], al ; jne 0xa6a44 ; xor eax, eax ; ret
0x00000000000a92a5 : add byte ptr [rax], al ; jne 0xa92c4 ; xor eax, eax ; ret
0x00000000000ab8b5 : add byte ptr [rax], al ; jne 0xab8d4 ; xor eax, eax ; ret
0x00000000000b1221 : add byte ptr [rax], al ; jne 0xb124d ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000b2335 : add byte ptr [rax], al ; jne 0xb2354 ; xor eax, eax ; ret
0x00000000000b705b : add byte ptr [rax], al ; jne 0xb706e ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000ba423 : add byte ptr [rax], al ; jne 0xba449 ; add rsp, 0x28 ; ret
0x00000000000ba554 : add byte ptr [rax], al ; jne 0xba56e ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000c00e6 : add byte ptr [rax], al ; jne 0xc00f7 ; add rsp, 0x18 ; ret
0x00000000000c2e66 : add byte ptr [rax], al ; jne 0xc2e77 ; add rsp, 0x18 ; ret
0x00000000000c4d7d : add byte ptr [rax], al ; jne 0xc4ddb ; add rsp, 0x38 ; ret
0x00000000000c8e0f : add byte ptr [rax], al ; jne 0xc8e37 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000c8faf : add byte ptr [rax], al ; jne 0xc8fd7 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000c94ed : add byte ptr [rax], al ; jne 0xc954b ; add rsp, 0x38 ; ret
0x00000000000c958d : add byte ptr [rax], al ; jne 0xc95eb ; add rsp, 0x38 ; ret
0x00000000000c982d : add byte ptr [rax], al ; jne 0xc989b ; add rsp, 0x38 ; ret
0x00000000000c98dd : add byte ptr [rax], al ; jne 0xc994b ; add rsp, 0x38 ; ret
0x00000000000d5d3a : add byte ptr [rax], al ; jne 0xd5c7b ; ret
0x00000000000d5cd5 : add byte ptr [rax], al ; jne 0xd5cf0 ; cmp byte ptr [rsi], cl ; je 0xd5c7a ; ret
0x00000000000e2dcd : add byte ptr [rax], al ; jne 0xe2e2e ; add rsp, 0x38 ; ret
0x00000000000ebad9 : add byte ptr [rax], al ; jne 0xebaf9 ; add rsp, 0x28 ; ret
0x00000000000ebc98 : add byte ptr [rax], al ; jne 0xebcab ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ebd1e : add byte ptr [rax], al ; jne 0xebd2f ; add rsp, 0x18 ; ret
0x00000000000ebd70 : add byte ptr [rax], al ; jne 0xebd81 ; add rsp, 0x18 ; ret
0x00000000000ece05 : add byte ptr [rax], al ; jne 0xece75 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000f1968 : add byte ptr [rax], al ; jne 0xf19bb ; add rsp, 0x18 ; ret
0x00000000000f1a09 : add byte ptr [rax], al ; jne 0xf1a1a ; add rsp, 0x58 ; ret
0x00000000000f1aa9 : add byte ptr [rax], al ; jne 0xf1afb ; add rsp, 0x58 ; ret
0x00000000000f1b4e : add byte ptr [rax], al ; jne 0xf1ba3 ; add rsp, 0x58 ; ret
0x00000000000f1e60 : add byte ptr [rax], al ; jne 0xf1ea5 ; add rsp, 0x38 ; ret
0x00000000000f1f57 : add byte ptr [rax], al ; jne 0xf1f7b ; add rsp, 0x38 ; ret
0x00000000000f1fbb : add byte ptr [rax], al ; jne 0xf1fd3 ; add rsp, 0x18 ; ret
0x00000000000f2e0d : add byte ptr [rax], al ; jne 0xf2e6b ; add rsp, 0x38 ; ret
0x00000000000f2ead : add byte ptr [rax], al ; jne 0xf2f0b ; add rsp, 0x38 ; ret
0x00000000000f2f5f : add byte ptr [rax], al ; jne 0xf2fe0 ; add rsp, 0x38 ; ret
0x00000000000f302f : add byte ptr [rax], al ; jne 0xf30b0 ; add rsp, 0x38 ; ret
0x00000000000f3d14 : add byte ptr [rax], al ; jne 0xf3d25 ; add rsp, 0x28 ; ret
0x00000000000f3df2 : add byte ptr [rax], al ; jne 0xf3e35 ; add rsp, 0x68 ; ret
0x00000000000f4ca6 : add byte ptr [rax], al ; jne 0xf4ced ; add rsp, 0x38 ; ret
0x00000000000f4d75 : add byte ptr [rax], al ; jne 0xf4dbd ; add rsp, 0x38 ; ret
0x00000000000f7517 : add byte ptr [rax], al ; jne 0xf7528 ; add rsp, 0x18 ; ret
0x00000000000fbaad : add byte ptr [rax], al ; jne 0xfbadb ; add rsp, 0x68 ; ret
0x00000000000fd45c : add byte ptr [rax], al ; jne 0xfd46d ; add rsp, 0x18 ; ret
0x00000000000fd9f1 : add byte ptr [rax], al ; jne 0xfda43 ; add rsp, 0x58 ; ret
0x00000000000d2d0e : add byte ptr [rax], al ; lea eax, dword ptr [rsi + 1] ; ret
0x0000000000121f39 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x20] ; call qword ptr [rax]
0x000000000016539e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000001653ae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000001653be : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000001653ce : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000001653de : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000001652fd : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000016532e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016533e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016534e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016535e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016536e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000001652aa : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016537e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016538e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000b635b : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000b64be : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000b64de : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000b64ce : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000002f32e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x154fe8] ; ret
0x00000000000450cc : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1bb] ; call rax
0x00000000000d1263 : add byte ptr [rax], al ; mov byte ptr [rdi], 0x5b ; ret
0x00000000000a03ee : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000009edae : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000109986 : add byte ptr [rax], al ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x000000000014f7be : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000014f7ae : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000014f78e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000012fb24 : add byte ptr [rax], al ; mov dword ptr [rdi + 0x28], edx ; ret
0x00000000001181fc : add byte ptr [rax], al ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x0000000000090aae : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + rax - 1] ; ret
0x000000000009fdee : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000004a208 : add byte ptr [rax], al ; mov dword ptr [rdx], 0xffffc002 ; ret
0x0000000000080a9f : add byte ptr [rax], al ; mov dword ptr [rip + 0x13d665], eax ; ret
0x0000000000122d57 : add byte ptr [rax], al ; mov dword ptr [rsi + 8], eax ; ret
0x0000000000122dce : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x0000000000122dbe : add byte ptr [rax], al ; mov dword ptr [rsi], 0xb ; ret
0x0000000000122dee : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x0000000000122dde : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000eb9c8 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000c5574 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c563e : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000009faae : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a412e : add byte ptr [rax], al ; mov eax, 0x10 ; pop rbx ; ret
0x000000000006e88e : add byte ptr [rax], al ; mov eax, 0x10 ; ret
0x0000000000109ade : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000000a414e : add byte ptr [rax], al ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000a413e : add byte ptr [rax], al ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000a416e : add byte ptr [rax], al ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000c9dd6 : add byte ptr [rax], al ; mov eax, 0x40 ; ret
0x00000000000a415e : add byte ptr [rax], al ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000c9d1e : add byte ptr [rax], al ; mov eax, 0x7e ; ret
0x000000000011929e : add byte ptr [rax], al ; mov eax, 0x7fffffff ; ret
0x00000000000c9d2e : add byte ptr [rax], al ; mov eax, 0xfffa ; ret
0x0000000000035edc : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000037ddc : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000ef529 : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x000000000004a134 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000004a335 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000000a411e : add byte ptr [rax], al ; mov eax, 8 ; pop rbx ; ret
0x00000000000f981e : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000003aee5 : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000154eae : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000136395 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000087502 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000011873e : add byte ptr [rax], al ; mov eax, ecx ; ret
0x000000000010d496 : add byte ptr [rax], al ; mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000024a14 : add byte ptr [rax], al ; mov eax, edi ; ret
0x0000000000047d45 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x00000000000585c9 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005887f : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000056709 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000006edf9 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x0000000000078c48 : add byte ptr [rax], al ; mov eax, r10d ; pop rbx ; ret
0x000000000010391f : add byte ptr [rax], al ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000743c1 : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x000000000005e554 : add byte ptr [rax], al ; mov ecx, 1 ; jmp rax
0x000000000009edee : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000047992 : add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0x24] ; call rax
0x00000000001350ff : add byte ptr [rax], al ; mov edx, 0xffffffff ; mov eax, edx ; ret
0x0000000000052644 : add byte ptr [rax], al ; mov edx, 1 ; jmp rax
0x000000000009edde : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000736b8 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x73655
0x000000000007912e : add byte ptr [rax], al ; mov edx, eax ; jmp 0x790bc
0x0000000000079253 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x791e7
0x00000000001081c9 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x0000000000137497 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000013744f : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001378a2 : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000014f7fe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000014f80e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000014f81e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000014f82e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000014f83e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000014f84e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000014f7ee : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000014f7ce : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000012fc18 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rdx ; ret
0x0000000000080f66 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x60], rcx ; ret
0x000000000009fdfe : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000009fe3e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009fe4e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009fe5e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009fe6e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009fe2e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000009fe0e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000004a148 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000071168 : add byte ptr [rax], al ; mov qword ptr [rdx + 0x130], rcx ; ret
0x0000000000080aef : add byte ptr [rax], al ; mov qword ptr [rip + 0x13d5e8], rax ; ret
0x0000000000080abf : add byte ptr [rax], al ; mov qword ptr [rip + 0x13d620], rax ; ret
0x0000000000122d48 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003ba66 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x0000000000122d14 : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x00000000000308fd : add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000078c79 : add byte ptr [rax], al ; mov r10d, eax ; jmp 0x78c07
0x0000000000079549 : add byte ptr [rax], al ; mov r10d, eax ; jmp 0x794d7
0x000000000006c4ac : add byte ptr [rax], al ; mov r14d, eax ; jmp 0x68720
0x00000000001171c8 : add byte ptr [rax], al ; mov r8d, 0xffffffff ; jmp 0x11719e
0x0000000000037c5c : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000b69fe : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000b6a0e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000b6a1e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000b6a2e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000b6a3e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000b6a4e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000077563 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000108a7e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000f9ac6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000003ad28 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000123ade : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000008885e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x1356e9] ; call qword ptr [rax]
0x000000000008879e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x1357a9] ; call qword ptr [rax]
0x0000000000134cf5 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x8a6b2] ; call qword ptr [rax]
0x0000000000134704 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x8aca3] ; call qword ptr [rax]
0x0000000000122a20 : add byte ptr [rax], al ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000000a4eb6 : add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000015fa4e : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x000000000007ccdb : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000714bd : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003b110 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000035e7c : add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000000a007e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000134e6e : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000072f90 : add byte ptr [rax], al ; mov rax, rsi ; pop rbx ; ret
0x0000000000080946 : add byte ptr [rax], al ; mov rcx, qword ptr [rbx + 0x50] ; jmp 0x80918
0x00000000000a3b43 : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000003a454 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000088a3e : add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x00000000000888ba : add byte ptr [rax], al ; mov rdi, qword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x0000000000036001 : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 8] ; call 0x222d9
0x000000000010707e : add byte ptr [rax], al ; mov rdi, r14 ; call 0x103307
0x0000000000123720 : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x000000000007243f : add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x000000000010c0ba : add byte ptr [rax], al ; mov rdi, rbx ; call 0x782e8
0x0000000000102603 : add byte ptr [rax], al ; mov rdi, rbx ; call 0x7e857
0x0000000000071ad3 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rip + 0x14c2fa]
0x000000000006fa57 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000009ee1e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000087a2b : add byte ptr [rax], al ; mov rdx, r15 ; mov rdi, r13 ; call rax
0x00000000000ef4ae : add byte ptr [rax], al ; mov rdx, rax ; jmp 0xef475
0x0000000000088362 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008803d : add byte ptr [rax], al ; mov rsi, rbx ; mov rdi, r13 ; call rax
0x000000000004d84e : add byte ptr [rax], al ; mov rsp, rdx ; ret
0x00000000000f2159 : add byte ptr [rax], al ; mov word ptr [rdi + 0x16], ax ; ret
0x00000000000908de : add byte ptr [rax], al ; mov word ptr [rdi], dx ; add rax, rdi ; ret
0x00000000000909ae : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000003baa8 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x000000000009fe7e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009fe8e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000005d8b0 : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rsi ; jmp rax
0x000000000015a96e : add byte ptr [rax], al ; movsxd rax, ecx ; ret
0x00000000000e25b5 : add byte ptr [rax], al ; movsxd rax, edx ; jmp 0xe25d5
0x000000000012a777 : add byte ptr [rax], al ; movups xmmword ptr [rdi + 0x20], xmm2 ; ret
0x000000000012a747 : add byte ptr [rax], al ; movups xmmword ptr [rdi + 0x30], xmm0 ; ret
0x0000000000127317 : add byte ptr [rax], al ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x0000000000127328 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm1 ; ret
0x0000000000129e88 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm2 ; ret
0x000000000012a788 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm3 ; ret
0x000000000012a768 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm4 ; ret
0x00000000000eb9af : add byte ptr [rax], al ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000007db9e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000000a409e : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000144ede : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000144e6e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000016531d : add byte ptr [rax], al ; nop ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016530d : add byte ptr [rax], al ; nop ; lea rax, qword ptr [rdi] ; ret
0x000000000014f79c : add byte ptr [rax], al ; nop ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000009fdbd : add byte ptr [rax], al ; nop ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009fddc : add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009fdcd : add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; ret
0x00000000001148ed : add byte ptr [rax], al ; nop ; mov eax, 1 ; pop rbx ; ret
0x000000000014f7dd : add byte ptr [rax], al ; nop ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000009fe1d : add byte ptr [rax], al ; nop ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000014f77d : add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000014f76c : add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; ret
0x000000000009fdac : add byte ptr [rax], al ; nop ; mov word ptr [rdi], dx ; ret
0x000000000015b7bd : add byte ptr [rax], al ; nop ; vzeroupper ; xor eax, eax ; ret
0x00000000000a2e7c : add byte ptr [rax], al ; nop ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000b61cc : add byte ptr [rax], al ; nop ; xor rax, rax ; ret
0x000000000016c0f1 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000014f75a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov byte ptr [rcx], dl ; ret
0x000000000009fd9a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x000000000009e70a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x000000000002e567 : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000009463b : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000003c5bb : add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x44 ; ret 0x14eb
0x00000000000a4029 : add byte ptr [rax], al ; or byte ptr [rdi], 0xa2 ; jmp 0xa3ff9
0x0000000000071306 : add byte ptr [rax], al ; or dword ptr [rdi], 0x20 ; ret
0x0000000000109bb2 : add byte ptr [rax], al ; pop r12 ; pop rbp ; ret
0x00000000000c2f79 : add byte ptr [rax], al ; pop r13 ; pop r14 ; jmp rax
0x00000000001234f3 : add byte ptr [rax], al ; pop rbp ; jmp rcx
0x00000000000586ee : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000587c8 : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008c434 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000a4059 : add byte ptr [rax], al ; pop rbx ; cmove rax, rdx ; ret
0x00000000000566af : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000010b0f8 : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000710c1 : add byte ptr [rax], al ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000002cbe2 : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x0000000000038c5d : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000024385 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026487 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002d297 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000007d38e : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000244c2 : add byte ptr [rax], al ; ret
0x00000000000cac54 : add byte ptr [rax], al ; sete dl ; jmp 0xcac1c
0x00000000000cac53 : add byte ptr [rax], al ; sete dl ; jmp 0xcac1d
0x00000000000e0c24 : add byte ptr [rax], al ; sete dl ; jmp 0xe0bec
0x00000000000e0c23 : add byte ptr [rax], al ; sete dl ; jmp 0xe0bed
0x00000000000e3c16 : add byte ptr [rax], al ; setne al ; lea eax, dword ptr [rax + rax*8 + 5] ; ret
0x00000000000c9f1d : add byte ptr [rax], al ; setne al ; ret
0x0000000000084aee : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000000eb00a : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000016283c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000036838 : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x00000000000bae30 : add byte ptr [rax], al ; sub eax, edx ; sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000f2606 : add byte ptr [rax], al ; sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x0000000000118a9f : add byte ptr [rax], al ; sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x00000000000786ad : add byte ptr [rax], al ; sub qword ptr [rax + 0x20], 4 ; jmp 0x78681
0x000000000007f4d6 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000a3881 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000eba8e : add byte ptr [rax], al ; syscall ; neg eax ; ret
0x0000000000109155 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000000b78b7 : add byte ptr [rax], al ; syscall ; ret
0x000000000003cf39 : add byte ptr [rax], al ; test dil, dil ; cmove eax, ecx ; ret
0x000000000003cf75 : add byte ptr [rax], al ; test dil, dil ; cmovne eax, ecx ; ret
0x000000000003cf52 : add byte ptr [rax], al ; test dl, dl ; cmovne eax, ecx ; ret
0x0000000000122c83 : add byte ptr [rax], al ; test eax, eax ; je 0x122c98 ; xor eax, eax ; ret
0x00000000001303ca : add byte ptr [rax], al ; test ebp, ebp ; jle 0x13040b ; call 0x12c6d8
0x00000000000ca257 : add byte ptr [rax], al ; test edi, edi ; js 0xca266 ; ret
0x00000000001099e9 : add byte ptr [rax], al ; test rax, rax ; je 0x109a27 ; call rax
0x000000000008952e : add byte ptr [rax], al ; test rax, rax ; je 0x89548 ; pop rbx ; ret
0x00000000000e076e : add byte ptr [rax], al ; test rax, rax ; je 0xe0789 ; xor eax, eax ; ret
0x000000000012d332 : add byte ptr [rax], al ; test rax, rax ; jne 0x12d328 ; pop rbx ; ret
0x000000000015bc0e : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x000000000016b083 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000ed8e2 : add byte ptr [rax], al ; xor eax, eax ; call 0x39b16
0x000000000002631b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a2c7 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000003a30e : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015b41e : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x000000000003b67a : add byte ptr [rax], al ; xor eax, ecx ; ret
0x000000000005c8d4 : add byte ptr [rax], al ; xor ecx, ecx ; jmp rax
0x000000000010b7be : add byte ptr [rax], al ; xor ecx, ecx ; mov rax, rcx ; ret
0x0000000000073ba6 : add byte ptr [rax], al ; xor edi, edi ; mov rax, rdi ; ret
0x000000000007800e : add byte ptr [rax], al ; xor edx, edx ; jmp 0x77fdb
0x000000000005e544 : add byte ptr [rax], al ; xor edx, edx ; jmp rax
0x00000000000710fe : add byte ptr [rax], al ; xor edx, edx ; mov rax, rdx ; ret
0x00000000000a3931 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000010b71e : add byte ptr [rax], al ; xor esi, esi ; mov rax, rsi ; ret
0x000000000003a98e : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r9 ; call rdx
0x0000000000034f6e : add byte ptr [rax], al ; xor r12d, r12d ; jmp 0x34f3e
0x00000000000b5f3e : add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000003a52b : add byte ptr [rax], bl ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000169f7c : add byte ptr [rax], cl ; add byte ptr [rax + 0x21], cl ; ret 0xf685
0x0000000000030498 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x0000000000030578 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x00000000000251b5 : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008997d : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x0000000000036a95 : add byte ptr [rax], r8b ; fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x0000000000085d4d : add byte ptr [rax], r8b ; jmp rax
0x0000000000109985 : add byte ptr [rax], r8b ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x000000000006e88d : add byte ptr [rax], r8b ; mov eax, 0x10 ; ret
0x0000000000109add : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x00000000000c9dd5 : add byte ptr [rax], r8b ; mov eax, 0x40 ; ret
0x000000000011929d : add byte ptr [rax], r8b ; mov eax, 0x7fffffff ; ret
0x000000000006e6e5 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000076125 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000cabc5 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000011873d : add byte ptr [rax], r8b ; mov eax, ecx ; ret
0x0000000000101d4d : add byte ptr [rax], r8b ; mov eax, edx ; ret
0x000000000009eddd : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000108a7d : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000a4eb5 : add byte ptr [rax], r8b ; mov rax, r8 ; ret
0x00000000000a007d : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x000000000009ee1d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000ef4ad : add byte ptr [rax], r8b ; mov rdx, rax ; jmp 0xef476
0x000000000007756d : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000123575 : add byte ptr [rax], r8b ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000002ff95 : add byte ptr [rax], r8b ; ret
0x00000000000d395d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a4015 : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x00000000000488a5 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000015b41d : add byte ptr [rax], r8b ; xor eax, eax ; vzeroupper ; ret
0x000000000010b7bd : add byte ptr [rax], r8b ; xor ecx, ecx ; mov rax, rcx ; ret
0x000000000007800d : add byte ptr [rax], r8b ; xor edx, edx ; jmp 0x77fdc
0x00000000000710fd : add byte ptr [rax], r8b ; xor edx, edx ; mov rax, rdx ; ret
0x0000000000034f6d : add byte ptr [rax], r8b ; xor r12d, r12d ; jmp 0x34f3f
0x00000000000b5f3d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x000000000004da9a : add byte ptr [rbp + 0x10], dh ; add rsp, 0x38 ; ret
0x000000000003b44c : add byte ptr [rbp + 0x11], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000124ab3 : add byte ptr [rbp + 0x11], dh ; add rsp, 0x40 ; pop rbx ; ret
0x000000000007b137 : add byte ptr [rbp + 0x11], dh ; add rsp, 0x48 ; ret
0x00000000000ebada : add byte ptr [rbp + 0x14], dh ; add rsp, 0x28 ; ret
0x0000000000137614 : add byte ptr [rbp + 0x14], dh ; add rsp, 0x38 ; ret
0x0000000000136a07 : add byte ptr [rbp + 0x15], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012bd6f : add byte ptr [rbp + 0x15], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000003cf66 : add byte ptr [rbp + 0x15], dh ; xor eax, eax ; ret
0x000000000012b95e : add byte ptr [rbp + 0x16], dh ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000f1f58 : add byte ptr [rbp + 0x18], dh ; add rsp, 0x38 ; ret
0x00000000000ba424 : add byte ptr [rbp + 0x1a], dh ; add rsp, 0x28 ; ret
0x00000000000c8e10 : add byte ptr [rbp + 0x1b], dh ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000012b482 : add byte ptr [rbp + 0x1c], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001172e6 : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b1222 : add byte ptr [rbp + 0x1f], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000038585 : add byte ptr [rbp + 0x22], dh ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000fbaae : add byte ptr [rbp + 0x22], dh ; add rsp, 0x68 ; ret
0x00000000001377fa : add byte ptr [rbp + 0x24], dh ; add rsp, 0x48 ; ret
0x000000000012d2d2 : add byte ptr [rbp + 0x28], dh ; add rsp, 0x28 ; ret
0x000000000004d7cf : add byte ptr [rbp + 0x29], cl ; ret
0x000000000011390c : add byte ptr [rbp + 0x29], dh ; add rsp, 0x38 ; ret
0x00000000000b0ff7 : add byte ptr [rbp + 0x29dc75db], al ; ret
0x0000000000124213 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010722f : add byte ptr [rbp + 0x2e], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000134ae1 : add byte ptr [rbp + 0x30], dh ; add rsp, 0x18 ; ret
0x000000000007c27e : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000016813d : add byte ptr [rbp + 0x31], al ; fisttp dword ptr [rax - 0x77] ; ret 0x3be9
0x0000000000034f6f : add byte ptr [rbp + 0x31], al ; in al, 0xeb ; ret
0x000000000008ad13 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x00000000001242b1 : add byte ptr [rbp + 0x31], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012212e : add byte ptr [rbp + 0x34], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011a695 : add byte ptr [rbp + 0x37], dh ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000f3df3 : add byte ptr [rbp + 0x37], dh ; add rsp, 0x68 ; ret
0x00000000000b1053 : add byte ptr [rbp + 0x391874db], al ; ret
0x00000000000b1149 : add byte ptr [rbp + 0x391a74db], al ; ret
0x000000000008dd5f : add byte ptr [rbp + 0x39], al ; ret 0x2b74
0x00000000000e1bf7 : add byte ptr [rbp + 0x39], al ; ret 0x4f7e
0x00000000000cdf8b : add byte ptr [rbp + 0x39], al ; rol byte ptr [rbp + 0xf], 1 ; ret 0x3944
0x0000000000044bd9 : add byte ptr [rbp + 0x39], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000f1e61 : add byte ptr [rbp + 0x39], dh ; add rsp, 0x38 ; ret
0x0000000000135d71 : add byte ptr [rbp + 0x3a], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f4ca7 : add byte ptr [rbp + 0x3b], dh ; add rsp, 0x38 ; ret
0x00000000000f4d76 : add byte ptr [rbp + 0x3c], dh ; add rsp, 0x38 ; ret
0x000000000012ba97 : add byte ptr [rbp + 0x3d], dh ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000819a9 : add byte ptr [rbp + 0x3e], dh ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000586ef : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000587c9 : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000008c435 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000012ec8d : add byte ptr [rbp + 0x42], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000123acd : add byte ptr [rbp + 0x43], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012efed : add byte ptr [rbp + 0x44], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012ed5d : add byte ptr [rbp + 0x45], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001190ac : add byte ptr [rbp + 0x46], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f1aaa : add byte ptr [rbp + 0x46], dh ; add rsp, 0x58 ; ret
0x00000000000f1969 : add byte ptr [rbp + 0x47], dh ; add rsp, 0x18 ; ret
0x0000000000049ec4 : add byte ptr [rbp + 0x47], dh ; leave ; ret
0x000000000006dfb2 : add byte ptr [rbp + 0x480975c0], al ; mov eax, ebx ; pop rbx ; ret
0x000000000012f1cd : add byte ptr [rbp + 0x49], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f1b4f : add byte ptr [rbp + 0x49], dh ; add rsp, 0x58 ; ret
0x00000000000f3a58 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011948b : add byte ptr [rbp + 0x4b], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000109cf3 : add byte ptr [rbp + 0x4b], dh ; leave ; ret
0x0000000000071222 : add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x000000000004d329 : add byte ptr [rbp + 0x51], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c4d7e : add byte ptr [rbp + 0x52], dh ; add rsp, 0x38 ; ret
0x000000000011954a : add byte ptr [rbp + 0x54], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007e485 : add byte ptr [rbp + 0x54], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000e2dce : add byte ptr [rbp + 0x55], dh ; add rsp, 0x38 ; ret
0x0000000000044d67 : add byte ptr [rbp + 0x5a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c982e : add byte ptr [rbp + 0x62], dh ; add rsp, 0x38 ; ret
0x00000000000ece06 : add byte ptr [rbp + 0x63], dh ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000c6e63 : add byte ptr [rbp + 0x6e], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000044c89 : add byte ptr [rbp + 0x6e], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000f2f60 : add byte ptr [rbp + 0x75], dh ; add rsp, 0x38 ; ret
0x000000000013476b : add byte ptr [rbp + 0xa], dh ; jmp 0x134799
0x000000000007e432 : add byte ptr [rbp + 0xa], dh ; jmp 0x7e460
0x000000000010ca77 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x28 ; ret
0x0000000000126942 : add byte ptr [rbp + 0xb], dh ; jmp 0x126973
0x000000000003198d : add byte ptr [rbp + 0xb], dh ; jmp 0x319bd
0x0000000000032a35 : add byte ptr [rbp + 0xb], dh ; jmp 0x32a65
0x00000000000e69d2 : add byte ptr [rbp + 0xb], dh ; jmp 0xe6a02
0x00000000000f1fbc : add byte ptr [rbp + 0xc], dh ; add rsp, 0x18 ; ret
0x00000000000ba555 : add byte ptr [rbp + 0xd], dh ; add rsp, 0x30 ; pop rbx ; ret
0x000000000006e656 : add byte ptr [rbp + 0xe], dh ; add rsp, 0x18 ; ret
0x00000000000c85c4 : add byte ptr [rbp + 0xe], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012bc82 : add byte ptr [rbp + 0xe], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000048edf : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000048dcf : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000000d5cd6 : add byte ptr [rbp + 0xf], dh ; cmp byte ptr [rsi], cl ; je 0xd5c79 ; ret
0x000000000008f7c7 : add byte ptr [rbp + 1], al ; loope 0x8f754 ; ret 0x4501
0x00000000000d2b6b : add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x0000000000047fcd : add byte ptr [rbp + 3], dh ; push r10 ; ret
0x00000000000378c2 : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000003ada2 : add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x000000000012eb94 : add byte ptr [rbp + 5], dh ; add rsp, 0x48 ; ret
0x00000000000f1a0a : add byte ptr [rbp + 5], dh ; add rsp, 0x58 ; ret
0x000000000012cb04 : add byte ptr [rbp + 5], dh ; add rsp, 0x78 ; ret
0x00000000000ebc99 : add byte ptr [rbp + 6], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000b705c : add byte ptr [rbp + 6], dh ; add rsp, 0x40 ; pop rbx ; ret
0x000000000003acce : add byte ptr [rbp + 7], dh ; pop rbx ; ret
0x00000000000579fe : add byte ptr [rbp + rcx*4 + 0x47], cl ; add al, 0x83 ; ret 0x4c02
0x0000000000121c67 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x1c ; call qword ptr [rax]
0x0000000000121f3a : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call qword ptr [rax]
0x00000000000a535b : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x28 ; call r12
0x00000000000d338f : add byte ptr [rbp + rcx*4 + 0x75], cl ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000d3307 : add byte ptr [rbp + rcx*4 + 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000126972 : add byte ptr [rbp + rcx*4 + 5], cl ; ret
0x00000000001303cb : add byte ptr [rbp - 0x17cc8113], al ; sti ; ret 0xffff
0x0000000000023ae4 : add byte ptr [rbp - 0x3c], dh ; ret
0x00000000000b17ff : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000006828f : add byte ptr [rbp - 0x76b70088], cl ; ret
0x00000000000da8b4 : add byte ptr [rbp - 0x76d88b40], al ; ret 0xe283
0x0000000000168c35 : add byte ptr [rbp - 0x77], cl ; ret 0x8949
0x0000000000169cab : add byte ptr [rbp - 0x77], cl ; ret 0x894d
0x0000000000087bd9 : add byte ptr [rbp - 0x7ad58140], al ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000000a6548 : add byte ptr [rbp - 0x7b], al ; in al, 0x75 ; ret 0x8b48
0x00000000000a720c : add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xa7230
0x00000000000a9a4b : add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xa9a70
0x00000000000ac08c : add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xac0b0
0x00000000000b2c6b : add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xb2c90
0x000000000003ed7c : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x8e ; ret
0x0000000000083707 : add byte ptr [rbp - 0x7c], al ; ror byte ptr [rdi], 0x84 ; ret 2
0x00000000000905af : add byte ptr [rbp - 0x7c], al ; sal byte ptr [rsp + rbp*2 + 0x44], 0x38 ; ret 0x4153
0x00000000000f97a7 : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000012287e : add byte ptr [rbp - 0x7ed28a40], al ; ret
0x0000000000047397 : add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000008021b : add byte ptr [rbx + 0x1404e105], al ; add byte ptr [rcx], al ; ret
0x0000000000156f09 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000086d98 : add byte ptr [rbx + 0x15], dh ; lea rax, qword ptr [rdx - 8] ; ret
0x000000000004745d : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000002458b : add byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000002cbe3 : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x000000000007a57c : add byte ptr [rbx + 0x440f02fe], 0xd1 ; mov dword ptr [rdi], edx ; ret
0x000000000009edef : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x0000000000151aff : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x0000000000154eaf : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000c862a : add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x18 ; ret
0x00000000000a126f : add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x00000000000a405a : add byte ptr [rbx + 0x48], bl ; cmove eax, edx ; ret
0x0000000000090609 : add byte ptr [rbx + 0x48], bl ; mov dword ptr [rdi], edx ; ret
0x00000000000710c2 : add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000011b25d : add byte ptr [rbx + 0x4f0f05f8], al ; ret 0x8941
0x000000000011b2b4 : add byte ptr [rbx + 0x4f0f0ff8], al ; ret 0x8941
0x000000000011b2dc : add byte ptr [rbx + 0x4f0f1ef8], al ; ret 0x8941
0x000000000014466f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000000537c3 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000038c5e : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000024386 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000026488 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000126346 : add byte ptr [rbx + 0x634801ea], al ; ret 0x1178
0x000000000002e6d5 : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000008a6d1 : add byte ptr [rbx + 0xb491], cl ; add bh, dh ; ret 0
0x0000000000163f2a : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x0000000000128446 : add byte ptr [rbx + rax*4 + 0x38], ah ; add al, 0x75 ; ret
0x00000000000fc1a6 : add byte ptr [rbx + rcx*4 + 0x11], ah ; cmp edx, 0x26 ; je 0xfc1f4 ; ret
0x0000000000083f1f : add byte ptr [rbx + rcx*4 + 0x48], cl ; adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000004a0a7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000048857 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000f9088 : add byte ptr [rbx + rcx*4 + 0x7d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000161f3f : add byte ptr [rbx + rcx*4 + 5], cl ; ret 5
0x00000000000ed319 : add byte ptr [rbx + rdi + 0x34], cl ; and al, 0xf ; xchg eax, esp ; ret 0x2044
0x000000000003972f : add byte ptr [rbx - 0x127cb7fd], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000007586f : add byte ptr [rbx - 0x3b7cb7fe], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000f96fe : add byte ptr [rbx - 0x3d], bl ; mov rdx, rax ; jmp 0xf96e3
0x000000000012fed0 : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax + rax] ; ret
0x00000000000f981f : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x000000000011cefa : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x11cf10 ; ret
0x00000000000a43a4 : add byte ptr [rbx - 0x3f7cfe3e], al ; add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x000000000011e1f7 : add byte ptr [rbx - 0x4b763ecc], cl ; ret
0x000000000005dbea : add byte ptr [rbx - 0x4ff43], al ; call qword ptr [rax]
0x000000000005e11f : add byte ptr [rbx - 0x50743], al ; jmp qword ptr [rax]
0x00000000000a43b5 : add byte ptr [rbx - 0x50f0fe3e], al ; ror dword ptr [rdi], -0x51 ; ret 0xfae9
0x0000000000118d8f : add byte ptr [rbx - 0x548afe06], al ; jmp 0x118d60
0x000000000006043c : add byte ptr [rbx - 0x60f43], al ; call qword ptr [rax]
0x0000000000038aed : add byte ptr [rbx - 0x6af00008], al ; ret 0xd321
0x00000000000ce320 : add byte ptr [rbx - 0x6bf0db08], al ; ret 0x394c
0x000000000003ad2c : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000785f5 : add byte ptr [rbx - 0x760e76cd], cl ; ret 0xe181
0x00000000000e4db7 : add byte ptr [rbx - 0x76b7fd02], al ; ret 0x940f
0x000000000002d093 : add byte ptr [rbx - 0x76f7dbbc], cl ; ret
0x00000000000566b0 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000118aa0 : add byte ptr [rbx - 0x77bffe12], al ; ja 0x118ab1 ; ret
0x0000000000094574 : add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x0000000000056d80 : add byte ptr [rbx - 0x7ac7dbbc], cl ; ror byte ptr [rdi], 0x8e ; ret
0x0000000000067e04 : add byte ptr [rbx - 0x7af09608], al ; ret
0x00000000001201e2 : add byte ptr [rbx - 0x7af0f503], al ; ret
0x0000000000166776 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000e149b : add byte ptr [rbx - 0x7bf0fa01], al ; ret
0x00000000000ccf3f : add byte ptr [rbx - 0x7cb7f3ad], cl ; ret
0x000000000004f075 : add byte ptr [rbx - 0x8f743], al ; call qword ptr [rax]
0x000000000010a3ec : add byte ptr [rbx], 0 ; cmovne rax, rdx ; ret
0x0000000000031d00 : add byte ptr [rbx], al ; jnp 0x31d4b ; call qword ptr [rip + 0x18c226]
0x000000000007ff07 : add byte ptr [rbx], ch ; push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000118d7f : add byte ptr [rcx + 0x11894dd0], cl ; ret
0x000000000005883c : add byte ptr [rcx + 0x16585d05], cl ; add byte ptr [rax + 0x63], cl ; ret 0x8948
0x000000000010d517 : add byte ptr [rcx + 0x18e8c1f8], cl ; ret
0x00000000000de602 : add byte ptr [rcx + 0x29], al ; ret
0x000000000007734f : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x00000000000b32f4 : add byte ptr [rcx + 0x2d8d4ce8], cl ; ret 0xc71
0x00000000000da7d4 : add byte ptr [rcx + 0x31c789c1], cl ; rol byte ptr [rcx + 0x39], cl ; ret 0x57e
0x000000000014f7bf : add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000000da7cb : add byte ptr [rcx + 0x39], al ; ret
0x0000000000099e1f : add byte ptr [rcx + 0x39], cl ; ret
0x0000000000080d61 : add byte ptr [rcx + 0x39], cl ; ret 0x2977
0x000000000003e7ad : add byte ptr [rcx + 0x39], cl ; ret 0xed75
0x00000000000585ca : add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x0000000000136396 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000070905 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000011a85c : add byte ptr [rcx + 0x480575d0], cl ; add esp, 0x18 ; ret
0x00000000000f3ca8 : add byte ptr [rcx + 0x480575d0], cl ; add esp, 0x58 ; ret
0x00000000000f3129 : add byte ptr [rcx + 0x481175d0], cl ; add esp, 0x28 ; ret
0x00000000000e297b : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x00000000000f6f7e : add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x0000000000030aa5 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000011204b : add byte ptr [rcx + 0x5c], al ; pop r13 ; ret
0x00000000000b6df8 : add byte ptr [rcx + 0x5c], al ; pop r14 ; mov dword ptr [r11 + 0xc], edi ; ret
0x0000000000109bb3 : add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x00000000000c2f7a : add byte ptr [rcx + 0x5d], al ; pop r14 ; jmp rax
0x000000000007db62 : add byte ptr [rcx + 0x5d], al ; pop r14 ; ret
0x0000000000161af0 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000004cd0c : add byte ptr [rcx + 0x63], cl ; ret
0x000000000005e135 : add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000000dbe8a : add byte ptr [rcx + 0x63], cl ; ret 0x8b48
0x00000000000d830b : add byte ptr [rcx + 0x63], cl ; ret 0xb60f
0x000000000004ebf7 : add byte ptr [rcx + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0xe920
0x00000000000eb587 : add byte ptr [rcx + 0xf], al ; mov bh, 4 ; and al, 0x89 ; ret 0xe283
0x000000000005a18f : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000008d110 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000167a18 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000005e555 : add byte ptr [rcx + 1], bh ; jmp rax
0x000000000002e179 : add byte ptr [rcx + 1], cl ; ret
0x000000000016a4a7 : add byte ptr [rcx + 9], cl ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3145
0x00000000000ae3cf : add byte ptr [rcx + rax - 0x3d], dh ; or eax, 0xffffffff ; ret
0x000000000011b4dd : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xf41
0x000000000011c048 : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x17e9
0x000000000011c0d7 : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x65e9
0x000000000011bec9 : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8944
0x00000000000c5575 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000c563f : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x0000000000090907 : add byte ptr [rcx + rcx*4 + 7], al ; add rax, rdi ; ret
0x00000000000c47a4 : add byte ptr [rcx + rcx*4 - 0x10], cl ; call rax
0x00000000000259b0 : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov rcx, qword ptr [rbp - 0x70] ; call rcx
0x00000000000ea9ba : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rsi, rbp ; call 0xe6c99
0x0000000000103920 : add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078c49 : add byte ptr [rcx + rcx*4 - 0x30], al ; pop rbx ; ret
0x00000000000743c2 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00000000000a4eb7 : add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000015fa4f : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x00000000000782a6 : add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, qword ptr [rbp - 0x40] ; call r12
0x0000000000087a2c : add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r13 ; call rax
0x000000000010707f : add byte ptr [rcx + rcx*4 - 9], cl ; call 0x103306
0x000000000008a0ef : add byte ptr [rcx + rcx*8 - 0x7cb7df8c], al ; ret 0x4801
0x0000000000085730 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x856fe ; ret
0x0000000000042454 : add byte ptr [rcx - 0x39], cl ; ret
0x0000000000130d6c : add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x00000000000f4fdc : add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x000000000005e5cf : add byte ptr [rcx - 0x45], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000005c8cf : add byte ptr [rcx - 0x45], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ecx, ecx ; jmp rax
0x000000000005270f : add byte ptr [rcx - 0x46], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000167389 : add byte ptr [rcx - 0x47], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000005e53f : add byte ptr [rcx - 0x47], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor edx, edx ; jmp rax
0x000000000011e817 : add byte ptr [rcx - 0x73], al ; ret
0x0000000000106cc5 : add byte ptr [rcx - 0x75], cl ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x00000000001181fd : add byte ptr [rcx - 0x76b7f3a9], cl ; ret
0x00000000000909d7 : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x0000000000023cc4 : add byte ptr [rcx - 0x77], al ; ret
0x000000000005843c : add byte ptr [rcx - 0x77], al ; ret 0x1be9
0x000000000005cfad : add byte ptr [rcx - 0x77], al ; ret 0x1d74
0x00000000000dfba7 : add byte ptr [rcx - 0x77], al ; ret 0x1f0f
0x0000000000056b7b : add byte ptr [rcx - 0x77], al ; ret 0x3145
0x00000000000d2fb3 : add byte ptr [rcx - 0x77], al ; ret 0x3944
0x00000000000cd908 : add byte ptr [rcx - 0x77], al ; ret 0x3b4c
0x0000000000057740 : add byte ptr [rcx - 0x77], al ; ret 0x40e9
0x0000000000058396 : add byte ptr [rcx - 0x77], al ; ret 0x44c6
0x000000000005802c : add byte ptr [rcx - 0x77], al ; ret 0x4ae9
0x000000000002bacf : add byte ptr [rcx - 0x77], al ; ret 0x6e9
0x00000000000282ad : add byte ptr [rcx - 0x77], al ; ret 0x80e9
0x0000000000057533 : add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000078c7a : add byte ptr [rcx - 0x77], al ; ret 0x83eb
0x00000000000bd648 : add byte ptr [rcx - 0x77], al ; ret 0x8944
0x0000000000028787 : add byte ptr [rcx - 0x77], al ; ret 0x8949
0x00000000000cd8a5 : add byte ptr [rcx - 0x77], al ; ret 0x8d41
0x00000000000576bb : add byte ptr [rcx - 0x77], al ; ret 0xc5e9
0x000000000002e13b : add byte ptr [rcx - 0x77], al ; ret 0xf883
0x00000000000f4f67 : add byte ptr [rcx - 0x77], cl ; enter -0x39bf, 0x40 ; inc dword ptr [rax] ; ret
0x000000000003ebd4 : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000044208 : add byte ptr [rcx - 0x77], cl ; ret 0x1f0f
0x000000000004d6ef : add byte ptr [rcx - 0x77], cl ; ret 0x294d
0x00000000000a426f : add byte ptr [rcx - 0x77], cl ; ret 0x3949
0x0000000000169272 : add byte ptr [rcx - 0x77], cl ; ret 0x8166
0x00000000000a826f : add byte ptr [rcx - 0x77], cl ; ret 0x8548
0x000000000003dc54 : add byte ptr [rcx - 0x77], cl ; ret 0x8944
0x000000000008c4b3 : add byte ptr [rcx - 0x77], cl ; ret 0xcb8
0x00000000000a7ce7 : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000b809c : add byte ptr [rcx - 0x77], cl ; sbb al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016b763 : add byte ptr [rcx - 0x7b], cl ; ret 0x7f75
0x0000000000125fdf : add byte ptr [rcx - 0x7cb76fec], cl ; ret 0x4801
0x00000000000553bd : add byte ptr [rcx - 0x7d], al ; out dx, eax ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000854b1 : add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000004e6b3 : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000008ad81 : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000a721f : add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x00000000001372cf : add byte ptr [rcx - 0x7d], cl ; ret 0x4918
0x000000000006f5ef : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000d3fff : add byte ptr [rcx - 0x7d], cl ; ret 0x4d08
0x000000000013a60f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000009104f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000080c5e : add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x000000000006e36b : add byte ptr [rcx - 0x80], al ; int 0xc2
0x0000000000108137 : add byte ptr [rcx - 0x877b], cl ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000550df : add byte ptr [rcx - 0x9b7b], cl ; dec dword ptr [rax + 0x63] ; ret
0x00000000000d4146 : add byte ptr [rcx - 0xa], al ; mov byte ptr [rcx], 0x74 ; and esi, esi ; ret
0x000000000010d497 : add byte ptr [rcx - 0xda08], cl ; inc dword ptr [rax] ; ret
0x00000000000ab180 : add byte ptr [rcx - 9], cl ; fmul dword ptr [rcx - 0x39] ; ret
0x0000000000094746 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000009476c : add byte ptr [rcx - 9], cl ; ret 2
0x000000000003083d : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x000000000012371e : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x00000000000f2157 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov word ptr [rdi + 0x16], ax ; ret
0x00000000000a387f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000003a727 : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001198a2 : add byte ptr [rcx], al ; jmp 0x11986b
0x00000000000e3bf2 : add byte ptr [rcx], al ; mov edx, 2 ; cmove eax, edx ; ret
0x0000000000030558 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000011493b : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000005a6eb : add byte ptr [rcx], al ; ret
0x0000000000160b9f : add byte ptr [rcx], bh ; enter 0x2c75, -0x7d ; ret 0x8104
0x00000000000243ca : add byte ptr [rcx], bh ; ret
0x00000000001699b4 : add byte ptr [rcx], bl ; sal bh, cl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x0000000000169b52 : add byte ptr [rcx], bl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x000000000015af1f : add byte ptr [rcx], ch ; enter 0x1d75, -0x7d ; ret 0x8101
0x000000000015b3ef : add byte ptr [rcx], ch ; enter 0x2275, -0x7d ; ret 0x8101
0x0000000000089a99 : add byte ptr [rcx], ch ; ret
0x00000000000bd616 : add byte ptr [rcx], ch ; ret 0x2941
0x00000000000bf04e : add byte ptr [rcx], ch ; ret 0x448d
0x00000000000bacbc : add byte ptr [rcx], ch ; ret 0x858b
0x00000000000c1410 : add byte ptr [rcx], ch ; ret 0x8944
0x00000000000c19f1 : add byte ptr [rcx], ch ; ret 0x8948
0x00000000000bee85 : add byte ptr [rcx], ch ; ret 0x894c
0x00000000000c17b9 : add byte ptr [rcx], ch ; ret 0x8b48
0x00000000000c14b8 : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000bf7d8 : add byte ptr [rcx], ch ; ret 0x8d44
0x00000000000c2476 : add byte ptr [rcx], ch ; ret 0x8d45
0x00000000000f2607 : add byte ptr [rcx], ch ; ret 0xc085
0x00000000000be3f4 : add byte ptr [rcx], ch ; ret 0xd089
0x00000000000babf2 : add byte ptr [rcx], ch ; ret 0xd129
0x00000000000bd5dd : add byte ptr [rcx], ch ; ret 0xe889
0x000000000010d4b2 : add byte ptr [rcx], cl ; clc ; bswap eax ; ret
0x0000000000168609 : add byte ptr [rcx], dh ; dec dword ptr [rax + 9] ; ret
0x0000000000073ba7 : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000000fe091 : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000e5b17 : add byte ptr [rcx], dh ; fild dword ptr [rbx - 0x6af0fd08] ; ret
0x00000000000e5577 : add byte ptr [rcx], dh ; fild dword ptr [rbx - 0x6bf0fb06] ; ret
0x00000000000e42bd : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x000000000005c8d5 : add byte ptr [rcx], dh ; leave ; jmp rax
0x000000000010b7bf : add byte ptr [rcx], dh ; leave ; mov rax, rcx ; ret
0x00000000000b6d5c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000002631c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000009407c : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x00000000000679d4 : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x0000000000050c4f : add byte ptr [rcx], dh ; rol byte ptr [rcx - 0x46], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000003b9e0 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a3932 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000016031f : add byte ptr [rcx], dh ; ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x00000000000ed8e3 : add byte ptr [rcx], dh ; shr al, 0x25 ; ret 0xfff4
0x0000000000035f2a : add byte ptr [rcx], dh ; shr al, 0xae ; ret
0x0000000000106425 : add byte ptr [rcx], dh ; shr al, cl ; sbb edx, -1 ; dec dword ptr [rcx] ; ret
0x000000000007800f : add byte ptr [rcx], dh ; shr bl, cl ; ret 0xe867
0x000000000010b71f : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x0000000000045612 : add byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; ret
0x000000000010c7de : add byte ptr [rcx], sil ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x00000000000b5f34 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000167164 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x0000000000168170 : add byte ptr [rdi + rcx + 0x44], al ; ret 0x8548
0x00000000000573de : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x000000000007d569 : add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000012500e : add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8948
0x0000000000030458 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x00000000000bb952 : add byte ptr [rdi + rcx], al ; test dl, ch ; sbb byte ptr [rax], al ; add dh, dh ; ret
0x00000000000e5b82 : add byte ptr [rdi + rcx], al ; xchg eax, esp ; ret
0x000000000012b1ea : add byte ptr [rdi - 0x18], ah ; call rsp
0x00000000000f5025 : add byte ptr [rdi - 0x18], ah ; push rsp ; ret 0xfff7
0x000000000007e847 : add byte ptr [rdi - 0x18], ah ; ret 0xfffe
0x000000000007e846 : add byte ptr [rdi - 0x18], spl ; ret 0xfffe
0x0000000000037193 : add byte ptr [rdi], bh ; mov dword ptr [rdi], edx ; movd xmm0, eax ; ret
0x00000000000245a1 : add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x000000000012a778 : add byte ptr [rdi], cl ; adc dword ptr [rdi + 0x20], edx ; ret
0x000000000012a748 : add byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], eax ; ret
0x0000000000127318 : add byte ptr [rdi], cl ; adc dword ptr [rdi + 8], eax ; ret
0x000000000012a789 : add byte ptr [rdi], cl ; adc dword ptr [rdx], ebx ; ret
0x0000000000127329 : add byte ptr [rdi], cl ; adc dword ptr [rdx], ecx ; ret
0x0000000000129e89 : add byte ptr [rdi], cl ; adc dword ptr [rdx], edx ; ret
0x000000000012a769 : add byte ptr [rdi], cl ; adc dword ptr [rdx], esp ; ret
0x00000000000eb9b0 : add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], edi ; ret
0x0000000000109767 : add byte ptr [rdi], cl ; add eax, 0x8948d789 ; ret
0x0000000000109b20 : add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x0000000000143e26 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000144e6f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000305f1 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x30582 ; loopne 0x30602 ; ret
0x00000000000ff104 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0xff095 ; loopne 0xff115 ; ret
0x0000000000144edf : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000cad17 : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000002931c : add byte ptr [rdi], cl ; mov dh, 0x48 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000000be01f : add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a409f : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x00000000000922ef : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000007db9f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000035426 : add byte ptr [rdi], cl ; mov dh, 4 ; or byte ptr [rax - 0x77], cl ; ret 0xc085
0x000000000015be7f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000945af : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000945bf : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000009459f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000940af : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000000940df : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000940cf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000940bf : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000058c57 : add byte ptr [rdi], cl ; push rax ; ret 0xf41
0x0000000000036f8b : add byte ptr [rdi], cl ; push rsp ; ret
0x00000000000da6d2 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000067772 : add byte ptr [rdi], cl ; ret
0x00000000000be481 : add byte ptr [rdi], cl ; ret 0x144
0x0000000000046e79 : add byte ptr [rdi], cl ; ret 0x1fe9
0x00000000000f0d7b : add byte ptr [rdi], cl ; ret 0x41c3
0x00000000000c7efa : add byte ptr [rdi], cl ; ret 0x4589
0x000000000010997d : add byte ptr [rdi], cl ; ret 0x66c3
0x0000000000128d07 : add byte ptr [rdi], cl ; ret 0x8d48
0x00000000001067f9 : add byte ptr [rdi], cl ; ret 0x8d49
0x0000000000046812 : add byte ptr [rdi], cl ; ret 0xb841
0x000000000002d3db : add byte ptr [rdi], cl ; ret 0xc083
0x000000000003dbe7 : add byte ptr [rdi], cl ; ret 0xc101
0x00000000000d5cc7 : add byte ptr [rdi], cl ; ret 0xc35b
0x00000000000e3bf8 : add byte ptr [rdi], cl ; ret 0xfc3
0x00000000000bad7a : add byte ptr [rdi], cl ; sahf ; ret 0x2941
0x0000000000081b05 : add byte ptr [rdi], cl ; test dword ptr [rax + rax + 0x39480000], edx ; ret
0x00000000000e3d58 : add byte ptr [rdi], cl ; test dword ptr [rbp - 0x7efffffd], esp ; ret 0xffe0
0x00000000000bd9ea : add byte ptr [rdi], cl ; test dword ptr [rdx - 0x7600000f], ecx ; ret 0xe283
0x0000000000064888 : add byte ptr [rdi], cl ; test eax, eax ; ret
0x000000000004a8cb : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000d63cd : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd201
0x000000000012960a : add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x000000000015aa0d : add byte ptr [rdi], cl ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000000dced8 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000d3e9f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3789
0x00000000000df2fc : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x854d
0x000000000006e09f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b48
0x0000000000046f8f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xb0e9
0x00000000000cac55 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xbdeb
0x00000000000df696 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd020
0x000000000002610a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf0e9
0x00000000000c9dc8 : add byte ptr [rdx + 0x20], bh ; cmovne rax, rdx ; ret
0x000000000014d78f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x0000000000067fa4 : add byte ptr [rdx + 0x63], cl ; add al, 0xa7 ; add rax, rdi ; jmp rax
0x00000000000cd312 : add byte ptr [rdx + 0x63], cl ; add al, 0xba ; add rax, rdx ; jmp rax
0x0000000000052645 : add byte ptr [rdx + 1], bh ; jmp rax
0x00000000000c62d9 : add byte ptr [rdx + rdx*8 - 0x76b7738b], al ; ret
0x00000000000ba702 : add byte ptr [rdx - 0x3a], al ; add al, 0x20 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000135100 : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x00000000000b04cc : add byte ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f4220 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000308fb : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x00000000000305aa : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000011cb76 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x0000000000104084 : add byte ptr [rdx], al ; call rcx
0x0000000000080a6b : add byte ptr [rdx], al ; jbe 0x80a74 ; ret
0x00000000000304b8 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x00000000000f8537 : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cac50 : add byte ptr [rip + 0x4000], bh ; sete dl ; jmp 0xcac20
0x00000000000e0c20 : add byte ptr [rip + 0x4000], bh ; sete dl ; jmp 0xe0bf0
0x00000000000fb889 : add byte ptr [rip - 0x1000], ah ; or eax, edx ; ret
0x000000000016933a : add byte ptr [rsi + 0x63], cl ; and al, 0xa2 ; add rdx, r12 ; jmp rdx
0x000000000012c24b : add byte ptr [rsi + 0xa], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000015aa31 : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx + 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000015a871 : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x2e] ; cmp cl, byte ptr [rax - 0x7d] ; ret 0x2910
0x0000000000161df6 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000f6ddc : add byte ptr [rsi + 0xf], ah ; out dx, eax ; shl byte ptr [rsi + 0xf], cl ; ret 0x67a
0x000000000003786a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000053d91 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x00000000000377a4 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xe867
0x0000000000053d57 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000000944cc : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000093fe4 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000007ffb7 : add byte ptr [rsi + rax - 0x17], dh ; push rcx ; call 0xffffffffc398ffc9
0x000000000008c3c7 : add byte ptr [rsi + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000112d4d : add byte ptr [rsi - 0x3f], ah ; ret
0x000000000014f79d : add byte ptr [rsi - 0x70], ah ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000009fddd : add byte ptr [rsi - 0x70], ah ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009edbd : add byte ptr [rsi - 0x70], ah ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000014f76d : add byte ptr [rsi - 0x70], ah ; mov word ptr [rcx], dx ; ret
0x000000000009fdad : add byte ptr [rsi - 0x70], ah ; mov word ptr [rdi], dx ; ret
0x00000000000a2e7d : add byte ptr [rsi - 0x70], ah ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000122e8d : add byte ptr [rsi - 0x70], ah ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b61cd : add byte ptr [rsi - 0x70], ah ; xor rax, rax ; ret
0x00000000000f2336 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000089805 : add byte ptr [rsp + rbp - 0x75], dh ; push rdx ; js 0x8980a ; ret 0
0x00000000000e7b40 : add byte ptr [rsp + rdx*2 + 0x5b], dh ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000004dc90 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f4287 : add byte ptr ds:[rax - 0x73], cl ; push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x00000000000f7552 : add byte ptr ds:[rax - 0x77], cl ; je 0xf7568 ; pop rbx ; ret
0x000000000003884e : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000012c918 : add byte ptr gs:[rax - 0x7d], cl ; ret
0x00000000000a6547 : add byte ptr gs:[rbp - 0x7b], al ; in al, 0x75 ; ret 0x8b48
0x0000000000116ed4 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000d63cc : add byte ptr gs:[rdi], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000d6078 : add ch, al ; ret 0xf4c3
0x000000000015b9fe : add ch, al ; std ; je 0x15ba6b ; and ch, al ; std ; xlatb ; ret
0x000000000015baec : add ch, al ; std ; je 0x15bb59 ; and ch, al ; std ; xlatb ; ret
0x000000000015ba92 : add ch, al ; std ; xlatb ; ret
0x000000000015ba9e : add ch, al ; std ; xlatb ; ret 0xc085
0x0000000000104964 : add ch, bl ; ret
0x00000000000b7d49 : add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000075bca : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000064a94 : add ch, cl ; ret
0x00000000000386ea : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000000a40c8 : add cl, al ; call 0xffffffff83ccc9e0
0x0000000000058b7a : add cl, bl ; in eax, 0xdf ; loopne 0x58b0f ; ret 0xe680
0x00000000000f96d5 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x000000000009b94c : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x00000000000beae7 : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000011835a : add cl, byte ptr [rax + 0x39] ; ret 0x1072
0x000000000005a752 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000007b396 : add cl, byte ptr [rax + 0x39] ; ret 0x870f
0x0000000000118368 : add cl, byte ptr [rax + 0x39] ; ret 0xc019
0x00000000000f96d6 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x00000000000632ec : add cl, byte ptr [rax + 0x63] ; ror byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000001601b8 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x0000000000083fc6 : add cl, byte ptr [rax + 0xf] ; ret 0xc083
0x0000000000128f9d : add cl, byte ptr [rax + 0xf] ; ret 0xea89
0x000000000008e497 : add cl, byte ptr [rax - 0x39] ; ret 0xffff
0x000000000009b94d : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000000909cf : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000763d0 : add cl, byte ptr [rax - 0x77] ; ret
0x000000000005ca9f : add cl, byte ptr [rax - 0x77] ; ret 0x51ff
0x00000000000e4dba : add cl, byte ptr [rax - 0x77] ; ret 0x940f
0x000000000005734f : add cl, byte ptr [rax - 0x77] ; ret 0xf748
0x00000000000f56d2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rax + rdx + 0x48], 0x83 ; ret 0x4808
0x00000000000cd264 : add cl, byte ptr [rax - 0x7d] ; ret
0x000000000003b2e7 : add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x000000000009e8d0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000059780 : add cl, byte ptr [rax - 0x7d] ; ret 0x8b04
0x00000000000cb03a : add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x000000000009e933 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000012fc09 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x00000000000d65f7 : add cl, byte ptr [rbp - 0x76be00ab] ; ret 0x8d4c
0x0000000000144cb2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000c5732 : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x0000000000045bd2 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4101
0x0000000000045c0e : add cl, byte ptr [rcx - 0x7d] ; ret 0xeb01
0x0000000000030478 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00000000001047cb : add cl, byte ptr [rdi] ; test dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000000000e5b1c : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x000000000015aa37 : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00000000001049de : add cl, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000029e57 : add cl, ch ; ret
0x0000000000069013 : add cl, ch ; ret 0xffdf
0x00000000000e9e14 : add cl, ch ; ret 0xffee
0x000000000002c7bd : add cl, ch ; ret 0xfffd
0x000000000006ad70 : add cl, ch ; ret 0xffff
0x00000000000904b7 : add dh, al ; inc dword ptr [r8] ; mov qword ptr [rdx], rcx ; ret
0x00000000001035ff : add dh, al ; jmp qword ptr [rax]
0x000000000011a042 : add dh, al ; ret
0x0000000000144e63 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000a2ebb : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000b805f : add dh, byte ptr [rdi + 7] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000008a713 : add dh, byte ptr [rdx + rdx*2 - 9] ; ret 0
0x0000000000080a6c : add dh, byte ptr [rsi + 1] ; ret
0x00000000000bb959 : add dh, dh ; ret
0x00000000000f3230 : add dh, dh ; ret 0x7402
0x0000000000086776 : add dh, dh ; ret 0x7404
0x000000000005b77a : add dh, dh ; ret 0x7408
0x000000000010b6ef : add dh, dh ; ret 0x7420
0x00000000001651a7 : add dh, dh ; ret 0x7501
0x00000000001651b4 : add dh, dh ; ret 0x7502
0x00000000001651c1 : add dh, dh ; ret 0x7504
0x000000000011815d : add dh, dh ; ret 0x7507
0x0000000000165179 : add dh, dh ; ret 0x7510
0x0000000000165186 : add dh, dh ; ret 0x7520
0x00000000000d50cf : add dh, dh ; ret 0x7540
0x0000000000086a15 : add dh, dh ; ret 0xf02
0x000000000002e9f1 : add dh, dh ; ret 0xf04
0x000000000005ba87 : add dh, dh ; ret 0xf10
0x000000000009a152 : add dh, dh ; ret 0xf20
0x000000000005a1c7 : add dh, dh ; ret 0xf40
0x00000000000570af : add dh, dh ; ret 0xf50
0x00000000000cdb37 : add dh, dh ; test dword ptr [rdi + rdx*8 - 1], edi ; jmp qword ptr [rax]
0x00000000000b4f09 : add dil, r15b ; ret
0x0000000000036d27 : add dl, dh ; mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x000000000008d8b6 : add dword ptr [ecx - 0x77], ecx ; ret
0x0000000000071d7f : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3973
0x00000000000f97a9 : add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000026543 : add dword ptr [r8 - 0x7d], r9d ; ret
0x00000000000d128d : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x0000000000151ac1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x0000000000055ffa : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x00000000000a49d3 : add dword ptr [rax + 0x39], ecx ; bnd jne 0xa49ce ; ret
0x000000000002737b : add dword ptr [rax + 0x39], ecx ; ret
0x000000000011e210 : add dword ptr [rax + 0x39], ecx ; ret 0xe277
0x000000000008d284 : add dword ptr [rax + 0x39], ecx ; ret 0xe675
0x000000000008d663 : add dword ptr [rax + 0x39], ecx ; ret 0xe775
0x0000000000057341 : add dword ptr [rax + 0x39], ecx ; ret 0xe975
0x00000000000901a0 : add dword ptr [rax + 0x39], ecx ; ret 0xea75
0x000000000008d1d7 : add dword ptr [rax + 0x39], ecx ; ret 0xeb75
0x00000000000afab5 : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x00000000000b0edc : add dword ptr [rax + 0x39], ecx ; ret 0xee75
0x00000000000b03ab : add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x000000000008e66b : add dword ptr [rax + 0x39], ecx ; ret 0xef77
0x000000000004853b : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x0000000000109f0c : add dword ptr [rax + 0x3b], ecx ; pop rbp ; mov eax, 0x89483f74 ; ret
0x0000000000126349 : add dword ptr [rax + 0x63], ecx ; ret 0x1178
0x000000000010453b : add dword ptr [rax + 0xf], eax ; ret 0xfc3
0x00000000000cf18a : add dword ptr [rax + 0xf], ecx ; fmul dword ptr [r8 - 0x7d] ; ret
0x00000000001671e4 : add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x00000000000b735b : add dword ptr [rax + 1], ecx ; ret
0x0000000000024028 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000035bde : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000d125f : add dword ptr [rax + 1], edi ; mov byte ptr [rdi], 0x5b ; ret
0x00000000000d1210 : add dword ptr [rax + 1], edi ; ret
0x00000000000f8104 : add dword ptr [rax + 9], ecx ; ret 0x8948
0x00000000000f816b : add dword ptr [rax + 9], ecx ; ret 0x8949
0x000000000004594b : add dword ptr [rax + 9], ecx ; rol byte ptr [rbx - 0x248adb07], 1 ; ret
0x00000000000cce37 : add dword ptr [rax + rax*8 - 0x3fce1e8b], eax ; ret
0x00000000000ce6ce : add dword ptr [rax + rax], eax ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x0000000000051374 : add dword ptr [rax - 0x50f43], eax ; jmp qword ptr [rax]
0x00000000000caa43 : add dword ptr [rax - 0x6bf08406], eax ; ret 0xb60f
0x00000000000316f4 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x00000000000f96d2 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x0000000000071d80 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3973
0x00000000000553fc : add dword ptr [rax - 0x75], ecx ; or ecx, dword ptr [rax + 0x39] ; ret 0x8c0f
0x0000000000123fd9 : add dword ptr [rax - 0x75], ecx ; xor byte ptr [r15], r9b ; ret 0x8b48
0x00000000000e98ee : add dword ptr [rax - 0x75], ecx ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009b926 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000080b54 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x13d5d4 ; ret
0x000000000014d722 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000008c3ac : add dword ptr [rax - 0x77], ecx ; fisttp word ptr [rax + 0x29] ; ret 0x8d48
0x000000000007454c : add dword ptr [rax - 0x77], ecx ; jb 0x74581 ; mov byte ptr [rcx], dil ; ret
0x000000000007b498 : add dword ptr [rax - 0x77], ecx ; jb 0x7b4cd ; mov byte ptr [rcx], dil ; ret
0x000000000007b5a8 : add dword ptr [rax - 0x77], ecx ; jb 0x7b5dd ; mov byte ptr [rcx], dil ; ret
0x0000000000084648 : add dword ptr [rax - 0x77], ecx ; push rcx ; or byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000004e6ad : add dword ptr [rax - 0x77], ecx ; push rcx ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000007b4d1 : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000610a8 : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000026b21 : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x000000000007cfc6 : add dword ptr [rax - 0x77], ecx ; ret 0x3175
0x0000000000130deb : add dword ptr [rax - 0x77], ecx ; ret 0x6348
0x0000000000118aa3 : add dword ptr [rax - 0x78], eax ; ja 0x118aae ; ret
0x000000000008907b : add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x0000000000034e0f : add dword ptr [rax - 0x7cb700b1], ecx ; ret 0x4901
0x00000000001536da : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000008caa8 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x0000000000025a3c : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000117f75 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x0000000000039399 : add dword ptr [rax - 0x7d], ecx ; ret 0x4001
0x000000000008e90c : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000011770e : add dword ptr [rax - 0x7d], ecx ; ret 0x4104
0x0000000000028d0a : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000d51a9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x00000000000272e9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x0000000000083342 : add dword ptr [rax - 0x7d], ecx ; ret 0x4910
0x00000000000cf142 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x00000000000c3172 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c48
0x00000000000e2d78 : add dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x00000000000cad1b : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000003173f : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000006ff38 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x00000000000a4eab : add dword ptr [rax - 0x7d], ecx ; stc ; push qword ptr [rbp - 0x12] ; ret
0x0000000000045501 : add dword ptr [rax - 0x7f], ecx ; ret
0x0000000000060d37 : add dword ptr [rax - 0x80], eax ; lcall ptr [rbp + 0x74] ; ret 0x8440
0x000000000004f4c9 : add dword ptr [rax - 0x8e743], eax ; jmp qword ptr [rax]
0x000000000005ad2d : add dword ptr [rax - 0x93343], eax ; jmp qword ptr [rax]
0x00000000000ecefd : add dword ptr [rax - 1], edi ; jmp 0xecece
0x00000000000f36bd : add dword ptr [rax - 1], edi ; jmp 0xf368e
0x00000000000f377d : add dword ptr [rax - 1], edi ; jmp 0xf374e
0x0000000000034ac8 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000000fe804 : add dword ptr [rax], 1 ; ret
0x000000000014f74c : add dword ptr [rax], eax ; add bl, al ; ret
0x000000000008fac3 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000d2fc2 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000e25b4 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x15eb
0x000000000004a8a2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xc001
0x0000000000084d8d : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000008325c : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; dec dword ptr [r9 - 0x7b] ; ret
0x0000000000122a1f : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000036000 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; jl 0x36034 ; or al, ch ; ret
0x00000000000dbe84 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; push rbp ; add byte ptr [rcx + 0x63], cl ; ret 0x8b48
0x00000000001378a1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000012371f : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000007aaef : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000dd968 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x84c6
0x00000000000724d6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000016acb7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000a3b42 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000085c30 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000245f9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003c7a3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000155b1d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000c8b88 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000015d50f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000155a71 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000342b3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000074aa6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000025081 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000087cc7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000012d0cd : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000167161 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x167178 ; neg eax ; ret
0x00000000000b5f31 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xb5f41 ; neg eax ; ret
0x0000000000163f27 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x163f38 ; neg eax ; ret
0x0000000000123fb1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x123f7e
0x000000000012fa17 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x12f9e5
0x000000000012faa7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x12fa75
0x0000000000050c54 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000000d1261 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov byte ptr [rdi], 0x5b ; ret
0x000000000012fb22 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x28], edx ; ret
0x00000000001273a3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000087500 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000005e552 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov ecx, 1 ; jmp rax
0x0000000000052642 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edx, 1 ; jmp rax
0x000000000012fc16 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rdx ; ret
0x000000000004a146 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000122d46 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006fa55 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000012a775 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdi + 0x20], xmm2 ; ret
0x000000000012a745 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdi + 0x30], xmm0 ; ret
0x0000000000127315 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x0000000000127326 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm1 ; ret
0x0000000000129e86 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm2 ; ret
0x000000000012a786 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm3 ; ret
0x000000000012a766 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm4 ; ret
0x00000000000587c6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e6c80 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000088b54 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026485 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000075525 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000038973 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000ca255 : add dword ptr [rax], eax ; add byte ptr [rax], al ; test edi, edi ; js 0xca268 ; ret
0x000000000005c8d2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ecx, ecx ; jmp rax
0x000000000005e542 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor edx, edx ; jmp rax
0x000000000012287c : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7ed28a40], al ; ret
0x000000000006ef6f : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000004509e : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001201e0 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0f503], al ; ret
0x00000000000e1499 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fa01], al ; ret
0x00000000000de600 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x29], al ; ret
0x0000000000087a2a : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r13 ; call rax
0x00000000000d2fb1 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x3944
0x00000000000d42f8 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d08
0x000000000005a6e9 : add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0x00000000000b7e7b : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000000e42bb : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x00000000000ed8e1 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; shr al, 0x25 ; ret 0xfff4
0x000000000007d567 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000015ba90 : add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret
0x000000000015ba9c : add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret 0xc085
0x0000000000049e15 : add dword ptr [rax], eax ; add cl, ch ; ret 0xfffd
0x00000000001651a5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00000000001651b2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x00000000001651bf : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000165177 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000165184 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000165191 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000114556 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000000f5c7d : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x0000000000089767 : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000008923b : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000047396 : add dword ptr [rax], eax ; jne 0x47395 ; pop rbx ; ret
0x0000000000090608 : add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000003ba24 : add dword ptr [rax], eax ; ret
0x0000000000104a33 : add dword ptr [rax], esp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016acb6 : add dword ptr [rax], r8d ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000f79a2 : add dword ptr [rbp + 0x1b], esi ; ret
0x000000000005b6e1 : add dword ptr [rbp + 0x31], eax ; in al, 0xc6 ; test esp, ecx ; idiv bh ; jmp qword ptr [rax]
0x00000000000f796e : add dword ptr [rbp + 0x3f], esi ; ret
0x000000000008ded0 : add dword ptr [rbp + 0x40ea75d2], eax ; or byte ptr [rdi], dh ; ret
0x00000000000a55fc : add dword ptr [rbp + rcx*4 + 0x4c], ecx ; and al, 0x20 ; call rbx
0x00000000000a5058 : add dword ptr [rbp + rcx*4 + 0x4c], ecx ; and al, 0x28 ; call rbx
0x000000000011ce7d : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000012ed02 : add dword ptr [rbp - 0x10], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000008b783 : add dword ptr [rbp - 0x16], esi ; ret
0x00000000000a4a07 : add dword ptr [rbp - 0x1a], esi ; ret
0x0000000000048564 : add dword ptr [rbp - 0x1f], esi ; mov eax, 1 ; ret
0x0000000000088a6a : add dword ptr [rbp - 0x2d], esi ; mov rdi, rsi ; call rax
0x00000000000f428c : add dword ptr [rbp - 0x2f], esi ; ret
0x0000000000118d92 : add dword ptr [rbp - 0x55], esi ; jmp 0x118d5d
0x0000000000118e02 : add dword ptr [rbp - 0x55], esi ; mov eax, 0xffffffff ; ret
0x00000000000b17a6 : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000000f91a9 : add dword ptr [rbp - 0xc], esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008caac : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x0000000000144d22 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000ddd00 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x000000000008feff : add dword ptr [rbx + 0x294803e0], eax ; ret 0x14c
0x00000000000b72c2 : add dword ptr [rbx + 0x48], ebx ; mov eax, edx ; ret
0x0000000000118e97 : add dword ptr [rbx - 0x3d], ebx ; nop word ptr [rax + rax] ; ret
0x000000000005cfbc : add dword ptr [rbx - 0x4ff43], eax ; call qword ptr [rax]
0x000000000005cfe8 : add dword ptr [rbx - 0x50743], eax ; jmp qword ptr [rax]
0x00000000000a43a7 : add dword ptr [rbx - 0x50f0fe40], eax ; ret 0xda89
0x0000000000051348 : add dword ptr [rbx - 0x51743], eax ; call qword ptr [rax]
0x0000000000035303 : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000004f4a3 : add dword ptr [rbx - 0x8f743], eax ; call qword ptr [rax]
0x00000000000d414a : add dword ptr [rbx - 0xa], esi ; ret
0x000000000003b2e5 : add dword ptr [rbx], eax ; add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x0000000000089bea : add dword ptr [rcx + 0x29], ecx ; ret
0x000000000008ad60 : add dword ptr [rcx + 0x39], ecx ; ret
0x0000000000089c47 : add dword ptr [rcx + 0x39], ecx ; ret 0x672
0x00000000000d2264 : add dword ptr [rcx + 0x39], ecx ; ret 0xe275
0x00000000000ce8f2 : add dword ptr [rcx + 0x39], ecx ; ret 0xe875
0x00000000000d5cc1 : add dword ptr [rcx + 0x80e1], eax ; add byte ptr [rdi], cl ; ret 0xc35b
0x0000000000118d73 : add dword ptr [rcx + 0xf], eax ; mov dh, 0x42 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000011a1f9 : add dword ptr [rcx + 0xf], eax ; xchg eax, edi ; ret
0x000000000010d6f3 : add dword ptr [rcx + 0xf], ecx ; mov esi, 0x89480045 ; ret 0xf641
0x00000000000eb93e : add dword ptr [rcx + 0xf], ecx ; ret
0x00000000000f7a0c : add dword ptr [rcx + 9], ecx ; ret 0x894d
0x00000000000f7f03 : add dword ptr [rcx + rcx*4 + 0x6a], ecx ; or byte ptr [rcx - 0x7d], al ; ret 0x4901
0x0000000000031b8c : add dword ptr [rcx + rcx*4 - 0x19], ecx ; call qword ptr [rip + 0x18c242]
0x0000000000118dc4 : add dword ptr [rcx + rcx*8 + 0x6348e775], eax ; ret 0xc741
0x00000000000d1123 : add dword ptr [rcx - 0x1e], edi ; mov eax, 1 ; ret
0x000000000009b966 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000afa18 : add dword ptr [rcx - 0x77], eax ; ret
0x00000000000498f0 : add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x000000000008d5ff : add dword ptr [rcx - 0x77], ecx ; ret
0x000000000002896f : add dword ptr [rcx - 0x77], ecx ; ret 0x8348
0x0000000000045bcf : add dword ptr [rcx - 0x78], eax ; add cl, byte ptr [rcx - 0x7d] ; ret 0x4101
0x00000000000f806b : add dword ptr [rcx - 0x7d], eax ; ret 0x4801
0x0000000000118d78 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000003d2e7 : add dword ptr [rcx - 0xa], eax ; ret
0x0000000000139fbd : add dword ptr [rcx], 0x89480000 ; ret
0x00000000000b63bb : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000001671e2 : add dword ptr [rcx], eax ; add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x00000000001671e0 : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x00000000000d5be5 : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00000000000d61c5 : add dword ptr [rcx], edi ; ret 0xee7f
0x000000000004fa3e : add dword ptr [rcx], esi ; fcmovnb st(0), st(6) ; test dword ptr [rax], ebx ; idiv edi ; jmp qword ptr [rax]
0x00000000000685a5 : add dword ptr [rcx], esi ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000000e6d88 : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a3f96 : add dword ptr [rdi + 0x15], esi ; jb 0xa3fa4 ; mov byte ptr [rdi], cl ; ret
0x000000000012fe54 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000012fe64 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000012fef7 : add dword ptr [rdi + 0x28], esi ; ret
0x0000000000123d46 : add dword ptr [rdi + rax + 0x48], esi ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000080c62 : add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x000000000008c5a4 : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000030559 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x000000000009069b : add dword ptr [rdi], ecx ; mov esi, 0xc984070c ; jne 0x90699 ; ret
0x0000000000090657 : add dword ptr [rdi], ecx ; mov esi, 0xd2840714 ; jne 0x90659 ; ret
0x0000000000090733 : add dword ptr [rdi], ecx ; mov esi, 0xf2390714 ; je 0x90739 ; ret
0x00000000000a43aa : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x00000000000a43b8 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], -0x51 ; ret 0xfae9
0x000000000014f59e : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000107702 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x0000000000118ad9 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8341
0x00000000000441ed : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x2041
0x00000000000b76f0 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x73e9
0x0000000000046844 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x7c8b
0x0000000000046b2d : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x940a
0x00000000000e4c88 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd009
0x0000000000046b3e : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x00000000000a461f : add dword ptr [rdx + 0x2b], 0xe2748104 ; ret
0x000000000009b924 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x00000000000e3bf3 : add dword ptr [rdx + 2], edi ; cmove eax, edx ; ret
0x00000000001647b0 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000006e832 : add dword ptr [rdx + 4], 1 ; ret
0x000000000006e8a0 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000001640e1 : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000fe54f : add dword ptr [rdx + rax*2], 1 ; ret
0x000000000011d59b : add dword ptr [rdx + rcx + 0x48], esi ; mov dword ptr [rdi], eax ; ret
0x0000000000123dab : add dword ptr [rdx + rcx + 0x5b], esi ; pop rbp ; pop r12 ; ret
0x000000000016befb : add dword ptr [rdx - 0x7cb70015], edx ; ret
0x0000000000118b72 : add dword ptr [rdx], eax ; pop rbx ; ret
0x0000000000118b71 : add dword ptr [rdx], r8d ; pop rbx ; ret
0x000000000008021c : add dword ptr [rip + 0x1404e1], 1 ; ret
0x000000000009b8b5 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000009b937 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000011d139 : add dword ptr [rsp + 0x48], esi ; add esp, 8 ; ret
0x000000000011d5e1 : add dword ptr [rsp + rcx + 0x5b], esi ; pop rbp ; pop r12 ; ret
0x000000000015efb7 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001181da : add eax, 0x10 ; ret
0x00000000000a4cc4 : add eax, 0x10287 ; cmove rax, rdx ; ret
0x0000000000089764 : add eax, 0x103a7 ; cmove rax, rdx ; ret
0x0000000000089794 : add eax, 0x10517 ; cmove rax, rdx ; ret
0x00000000000b9767 : add eax, 0x107354 ; jmp 0xb9787
0x00000000000a4724 : add eax, 0x10b57 ; cmove rax, rdx ; ret
0x00000000000a4934 : add eax, 0x11617 ; cmove rax, rdx ; ret
0x00000000000a4aa4 : add eax, 0x11737 ; cmove rax, rdx ; ret
0x00000000000a4748 : add eax, 0x118d3 ; cmovne rax, rdx ; ret
0x00000000000a46f4 : add eax, 0x11957 ; cmove rax, rdx ; ret
0x00000000000a4824 : add eax, 0x11f97 ; cmove rax, rdx ; ret
0x00000000000889a3 : add eax, 0x1355a8 ; call qword ptr [rax]
0x0000000000088862 : add eax, 0x1356e9 ; call qword ptr [rax]
0x00000000000887a2 : add eax, 0x1357a9 ; call qword ptr [rax]
0x0000000000089935 : add eax, 0x136f0e ; add rsp, 8 ; ret
0x00000000000898f7 : add eax, 0x136f4c ; ret
0x00000000000858ba : add eax, 0x138609 ; mov qword ptr [rax], rdi ; ret
0x000000000008585e : add eax, 0x13af11 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000082040 : add eax, 0x13be83 ; mov qword ptr [rax], rdx ; ret
0x0000000000080b79 : add eax, 0x13d5ca ; ret
0x0000000000080b69 : add eax, 0x13d5d2 ; ret
0x0000000000080b19 : add eax, 0x13d5da ; ret
0x0000000000080af3 : add eax, 0x13d5e8 ; ret
0x0000000000080b09 : add eax, 0x13d5f2 ; ret
0x0000000000080ac3 : add eax, 0x13d620 ; ret
0x0000000000080aa2 : add eax, 0x13d665 ; ret
0x0000000000080a78 : add eax, 0x13d693 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000080186 : add eax, 0x13f335 ; ret
0x0000000000080ad8 : add eax, 0x13fcaf ; ret
0x0000000000080291 : add eax, 0x14046e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002f332 : add eax, 0x154fe8 ; ret
0x00000000000c7374 : add eax, 0x158b4800 ; ret
0x0000000000024316 : add eax, 0x15fb50 ; ret
0x0000000000024326 : add eax, 0x161989 ; ret
0x00000000000ba49a : add eax, 0x16d ; ret
0x00000000000459a4 : add eax, 0x17abf7 ; mov byte ptr [rax + rdx], 0 ; ret
0x0000000000038aa4 : add eax, 0x18555f ; mov eax, edx ; ret
0x0000000000038a55 : add eax, 0x1855ae ; ret
0x0000000000038a45 : add eax, 0x1855c2 ; ret
0x000000000003b886 : add eax, 0x187a1b ; add rsp, 8 ; ret
0x00000000000378c4 : add eax, 0x18c48348 ; ret
0x00000000000300d2 : add eax, 0x18dcb9 ; mov qword ptr [rax], rdx ; ret
0x000000000008a55b : add eax, 0x18de0 ; cmove rax, rdx ; ret
0x000000000008ac28 : add eax, 0x18ed3 ; cmove rax, rdx ; ret
0x000000000008a8e8 : add eax, 0x191f3 ; cmove rax, rdx ; ret
0x000000000002ca86 : add eax, 0x192e05 ; ret
0x000000000008a778 : add eax, 0x19383 ; cmove rax, rdx ; ret
0x000000000008a7f3 : add eax, 0x19658 ; cmovne rax, rdx ; ret
0x0000000000089b88 : add eax, 0x19db3 ; cmovne rax, rdx ; ret
0x00000000000251d6 : add eax, 0x19df5d ; ret
0x00000000000251c6 : add eax, 0x19df75 ; ret
0x0000000000023ac1 : add eax, 0x19f802 ; ret
0x00000000000898c8 : add eax, 0x19fc3 ; cmovne rax, rdx ; ret
0x0000000000089358 : add eax, 0x1a483 ; cmovne rax, rdx ; ret
0x0000000000083da6 : add eax, 0x1be ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000016c503 : add eax, 0x1f0f00 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016bad0 : add eax, 0x1f0f6600 ; add byte ptr [rax], r8b ; ret
0x000000000015b76a : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x00000000000308fa : add eax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000003ada4 : add eax, 0x28c48348 ; ret
0x00000000000badb7 : add eax, 0x2907f9c1 ; ret 0x8944
0x000000000014f624 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x0000000000090b34 : add eax, 0x3817 ; cmove rax, rdx ; ret
0x00000000000aed3a : add eax, 0x39480000 ; ret
0x000000000003ae24 : add eax, 0x39480018 ; ret
0x000000000012b2ef : add eax, 0x3d8d4800 ; ret 0x590
0x000000000015b78a : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000109bb0 : add eax, 0x41000000 ; pop rsp ; pop rbp ; ret
0x0000000000079547 : add eax, 0x41000053 ; mov edx, eax ; jmp 0x794d9
0x000000000010a3c6 : add eax, 0x440f4800 ; ret 0xfc3
0x0000000000078b22 : add eax, 0x4488b41 ; and eax, 1 ; mov edx, eax ; jmp 0x78ad7
0x000000000010bf68 : add eax, 0x450f4800 ; ret 0x90c3
0x0000000000090d7f : add eax, 0x480012cf ; add esp, 8 ; ret
0x0000000000151b58 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x000000000014d808 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000009ee76 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000012eb96 : add eax, 0x48c48348 ; ret
0x0000000000151bd9 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000014d849 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000016c200 : add eax, 0x54807 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000010a563 : add eax, 0x556c8 ; cmove rax, rdx ; ret
0x000000000010a493 : add eax, 0x557b8 ; cmove rax, rdx ; ret
0x000000000010a3c3 : add eax, 0x55888 ; cmove rax, rdx ; ret
0x000000000016c3a7 : add eax, 0x55a38 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000010a639 : add eax, 0x55a92 ; cmove rax, rdx ; ret
0x00000000000f1a0c : add eax, 0x58c48348 ; ret
0x000000000010a5b7 : add eax, 0x5a3f4 ; cmove rax, rdx ; ret
0x000000000010a4e7 : add eax, 0x5a4e4 ; cmove rax, rdx ; ret
0x000000000010a417 : add eax, 0x5a5b4 ; cmove rax, rdx ; ret
0x000000000010a67f : add eax, 0x5a8dc ; cmove rax, rdx ; ret
0x0000000000111d28 : add eax, 0x5bf08948 ; ret
0x00000000000e7b99 : add eax, 0x5d000000 ; pop r12 ; ret
0x000000000015bbc3 : add eax, 0x60 ; add rax, rdi ; ret
0x000000000015b7aa : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x000000000011cfe7 : add eax, 0x64000a10 ; mov rax, qword ptr [rax] ; ret
0x000000000012cb06 : add eax, 0x78c48348 ; ret
0x000000000008c054 : add eax, 0x80e7 ; cmove rax, rdx ; ret
0x000000000009f69e : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x000000000015570d : add eax, 0x83480000 ; ret 0x4910
0x0000000000158261 : add eax, 0x83480000 ; ret 0xe910
0x0000000000155661 : add eax, 0x83480000 ; ret 0xeb10
0x0000000000151b5b : add eax, 0x8428d48 ; ret
0x00000000000fd694 : add eax, 0x84ea7 ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000078b12 : add eax, 0x8901e083 ; ret 0xd089
0x000000000012d854 : add eax, 0x89480009 ; ret
0x0000000000109769 : add eax, 0x8948d789 ; ret
0x0000000000109b22 : add eax, 0x89c78944 ; ret
0x00000000000f2467 : add eax, 0x89fffffe ; ret 0x8b48
0x0000000000134cf9 : add eax, 0x8a6b2 ; call qword ptr [rax]
0x0000000000134708 : add eax, 0x8aca3 ; call qword ptr [rax]
0x000000000004752b : add eax, 0x8b410a74 ; pop rsi ; cld ; jmp 0x474ff
0x000000000016bc4c : add eax, 0x8b486400 ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000137622 : add eax, 0x8bae1 ; call qword ptr [rax]
0x00000000000f96fa : add eax, 0x8c772 ; pop rbx ; ret
0x000000000012c611 : add eax, 0x96786 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000008a644 : add eax, 0x97c7 ; cmove rax, rdx ; ret
0x00000000000a0d82 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x000000000011cfe6 : add eax, 0xa1005 ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000121a1a : add eax, 0xa10c9 ; add rsp, 8 ; ret
0x0000000000121a05 : add eax, 0xa10de ; test eax, eax ; je 0x121a19 ; ret
0x0000000000121084 : add eax, 0xa19f7 ; ret
0x0000000000121058 : add eax, 0xa1a23 ; add rsp, 8 ; ret
0x000000000011cb59 : add eax, 0xa5be6 ; test eax, eax ; je 0x11cb71 ; ret
0x0000000000115415 : add eax, 0xaa3e6 ; add rsp, 8 ; ret
0x0000000000109c3d : add eax, 0xb81ae ; pop rbp ; ret
0x000000000003e399 : add eax, 0xb8480000 ; ret 0xffff
0x00000000001092a8 : add eax, 0xba26f ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000fee86 : add eax, 0xbef9d ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000fe4e1 : add eax, 0xbfcd6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000fe4b8 : add eax, 0xbfcff ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000fe487 : add eax, 0xbfd30 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000fe461 : add eax, 0xbfd56 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000162b2a : add eax, 0xc0310000 ; ret
0x0000000000151bdd : add eax, 0xc428d48 ; ret
0x00000000000a04fd : add eax, 0xc478d48 ; ret
0x00000000000f7004 : add eax, 0xca1d7 ; add rsp, 0x18 ; ret
0x00000000000f6fac : add eax, 0xca26f ; pop rbp ; pop r12 ; ret
0x00000000000f6a8c : add eax, 0xca6ff ; add rsp, 8 ; ret
0x00000000000f6a29 : add eax, 0xca782 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f4185 : add eax, 0xcb5b6 ; add rsp, 8 ; ret
0x00000000000f577f : add eax, 0xcb92c ; add rsp, 8 ; ret
0x00000000000a135d : add eax, 0xd478d48 ; ret
0x000000000008abb3 : add eax, 0xd50a8 ; cmove rax, rdx ; ret
0x000000000008a873 : add eax, 0xd53c8 ; cmove rax, rdx ; ret
0x000000000008a703 : add eax, 0xd5558 ; cmove rax, rdx ; ret
0x000000000008c084 : add eax, 0xd577 ; cmove rax, rdx ; ret
0x000000000008a7d9 : add eax, 0xd5902 ; cmove rax, rdx ; ret
0x000000000008ac07 : add eax, 0xd9dd4 ; cmove rax, rdx ; ret
0x000000000008a8c7 : add eax, 0xda0f4 ; cmove rax, rdx ; ret
0x000000000008a757 : add eax, 0xda284 ; cmove rax, rdx ; ret
0x000000000008a81f : add eax, 0xda74c ; cmove rax, rdx ; ret
0x000000000016c0c9 : add eax, 0xdb854800 ; jne 0x16c0b8 ; pop rbx ; ret
0x000000000016c0c8 : add eax, 0xdb854800 ; jne 0x16c0b9 ; pop rbx ; ret
0x000000000016bef9 : add eax, 0xeb9201e8 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000089796 : add eax, 0xf480001 ; ret 0x66c3
0x00000000000a5fc5 : add eax, 0xf480001 ; ret 0xfc3
0x0000000000144d13 : add eax, 0xf7f0ff3 ; ret
0x00000000000e4db5 : add eax, 0xfe830000 ; add cl, byte ptr [rax - 0x77] ; ret 0x940f
0x00000000000898a4 : add eax, 0xff67 ; cmove rax, rdx ; ret
0x000000000010a5d8 : add eax, 0xfff994f3 ; cmove rax, rdx ; ret
0x000000000010a508 : add eax, 0xfff995e3 ; cmove rax, rdx ; ret
0x000000000010a438 : add eax, 0xfff996b3 ; cmove rax, rdx ; ret
0x000000000010a653 : add eax, 0xfff997e8 ; cmovne rax, rdx ; ret
0x00000000000ebbb8 : add eax, 0xffffff43 ; cmove rax, rdx ; ret
0x00000000000fe7ab : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000fe7ea : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x0000000000025065 : add eax, 1 ; push rax ; call rbx
0x000000000008a91f : add eax, 1 ; ret
0x00000000000b69b8 : add eax, 2 ; ret
0x00000000000b69d1 : add eax, 3 ; ret
0x00000000000a4dd4 : add eax, 4 ; mov dword ptr [rax], edx ; test edx, edx ; jne 0xa4dd9 ; ret
0x00000000000d5beb : add eax, 8 ; ret
0x00000000000244bd : add eax, dword ptr [0] ; ret
0x00000000000290f7 : add eax, dword ptr [rax] ; add bh, dh ; ret 0xf800
0x0000000000037bf1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000f4831 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x6bf0df07], al ; ret 0xf980
0x000000000002db82 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012ab97 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000b4758 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 4
0x00000000000b0695 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d7f1f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000001558ad : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000158401 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001558d1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000128142 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000fe120 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000010997a : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000b6a13 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000117247 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x0000000000042452 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x39], cl ; ret
0x0000000000130d6a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x0000000000023cc2 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000010a3ed : add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000f3b7b : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000a4071 : add eax, dword ptr [rax] ; ret
0x0000000000054a05 : add eax, dword ptr [rbp - 0x7b] ; dec dword ptr [rdi] ; lahf ; ret 0x87e
0x000000000010a893 : add eax, dword ptr [rbp - 0x7c] ; sal byte ptr [rbp - 0x6b], 0x48 ; mov eax, edi ; ret
0x000000000008c611 : add eax, dword ptr [rbp] ; mov rdx, rax ; jmp 0x8c638
0x000000000014f5e9 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000047fcf : add eax, dword ptr [rcx + 0x52] ; ret
0x00000000000ff929 : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000089766 : add eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000ff6d1 : add eax, dword ptr [rdx + rcx] ; ret
0x000000000014f6e9 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000000d7f1e : add eax, dword ptr ds:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000003bc15 : add eax, eax ; cmp r8, r9 ; jb 0x3bbfe ; xor eax, eax ; ret
0x00000000000d5bc8 : add eax, eax ; pop rbx ; pop rbp ; ret
0x000000000015bc91 : add eax, eax ; vzeroupper ; ret
0x00000000000d6833 : add eax, ebp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffff
0x0000000000064d55 : add eax, ebp ; jmp 0x60f9d
0x00000000000acb17 : add eax, ebp ; ret
0x00000000000627d8 : add eax, ebp ; ret 0x1cb
0x0000000000085248 : add eax, ebp ; ret 0xffd3
0x000000000010a6cc : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000015f3b8 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000006f046 : add eax, ecx ; jmp rax
0x0000000000093e99 : add eax, ecx ; ret
0x000000000015abd0 : add eax, ecx ; sub rax, rdi ; ret
0x000000000015f75d : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000015b5e6 : add eax, ecx ; vzeroupper ; ret
0x000000000015bc8e : add eax, edi ; add rax, r8 ; vzeroupper ; ret
0x0000000000093e96 : add eax, edi ; add rax, rcx ; ret
0x000000000015b5e3 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x00000000000946ca : add eax, edi ; add rax, rsi ; ret
0x0000000000051751 : add eax, edi ; jmp rax
0x0000000000051dfb : add eax, edi ; mov r14d, 1 ; jmp rax
0x00000000000908c9 : add eax, edi ; ret
0x000000000015f815 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x000000000015b75a : add eax, edi ; vzeroupper ; ret
0x00000000000ebb25 : add eax, edx ; cmp rdi, rsi ; ja 0xebb1f ; ret
0x00000000000248a0 : add eax, edx ; jmp rax
0x0000000000119290 : add eax, edx ; mov edx, 0x7fffffff ; cmovs eax, edx ; ret
0x0000000000123d74 : add eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000099ca6 : add eax, edx ; sub rax, rdi ; ret
0x00000000000b66bb : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x00000000000f3b79 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000050bfb : add eax, esi ; jmp rax
0x000000000005db28 : add eax, esi ; mov edx, 1 ; jmp rax
0x00000000000946cd : add eax, esi ; ret
0x000000000003968b : add ebp, 8 ; jmp 0x39657
0x00000000000c0856 : add ebp, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000123e6e : add ebp, eax ; mov qword ptr [rbx + 0x60], r13 ; jmp 0x123e3f
0x00000000000d6831 : add ebx, 1 ; call 0xd2ae5
0x00000000001378a6 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000007ebee : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000080f06 : add ebx, dword ptr [rbx + 0x5d] ; ret
0x00000000000fe81d : add ebx, eax ; nop ; ret
0x00000000000488a1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000015be4b : add ebx, eax ; nop dword ptr [rax] ; ret
0x00000000000ae3d1 : add ebx, eax ; or eax, 0xffffffff ; ret
0x00000000000fbb1b : add ebx, eax ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x000000000003dabd : add ebx, ebp ; or byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000111d33 : add ebx, ebp ; pushfq ; xor eax, eax ; ret
0x00000000001198a3 : add ebx, ebp ; ret 0x2e66
0x00000000000d1894 : add ebx, ebp ; ret 0xf66
0x0000000000144ed3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000000a3f7b : add ecx, 0x40 ; cmp rdx, rcx ; jne 0xa3f70 ; ret
0x000000000009b9ba : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000113194 : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00000000000827e7 : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000ddd03 : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x000000000008ff02 : add ecx, dword ptr [rax + 0x29] ; ret 0x14c
0x00000000000f90c0 : add ecx, dword ptr [rax + 0xf] ; ret 0xc148
0x0000000000107742 : add ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0xc083
0x000000000010dd49 : add ecx, dword ptr [rax + 9] ; ret 0x850f
0x000000000016c143 : add ecx, dword ptr [rax - 0x73] ; insb byte ptr [rdi], dx ; ret
0x000000000009b9be : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000010dc51 : add ecx, dword ptr [rax - 0x77] ; ret
0x00000000000289f1 : add ecx, dword ptr [rax - 0x77] ; ret 0x8b45
0x0000000000107027 : add ecx, dword ptr [rax - 0x77] ; ret 0xe883
0x000000000003e637 : add ecx, dword ptr [rax - 0x77] ; ret 0xf641
0x00000000000d5415 : add ecx, dword ptr [rax - 0x77] ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000003964a : add ecx, dword ptr [rax - 0x7d] ; in eax, dx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000004becb : add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000f1ff9 : add ecx, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000003a540 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x0000000000144c42 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000009ee14 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000009b9bb : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000000c0796 : add ecx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000035e60 : add ecx, dword ptr [rdi + 0x20] ; mov rax, rcx ; ret
0x0000000000027fd8 : add ecx, dword ptr [rdi + r9 + 0x49] ; ret 0xc149
0x0000000000027fd9 : add ecx, dword ptr [rdi + rcx + 0x49] ; ret 0xc149
0x0000000000028a5d : add ecx, dword ptr [rdi] ; mov dh, 0x48 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000009f660 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000000468d1 : add ecx, dword ptr [rdi] ; xchg eax, edi ; ret 0x8545
0x00000000000b17ac : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000000b1805 : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000000c0c5c : add ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000137b7b : add ecx, dword ptr [rsp + 8] ; call rax
0x000000000016869f : add ecx, eax ; jmp rcx
0x0000000000053c89 : add ecx, eax ; mov eax, r9d ; ret
0x000000000005bc5d : add ecx, ebp ; int1 ; in eax, 0xff ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004e86f : add ecx, ebp ; ret
0x0000000000167a58 : add ecx, ebp ; ret 0xfffc
0x000000000013ce9f : add ecx, ebx ; jmp r9
0x0000000000161af6 : add ecx, ebx ; jmp rcx
0x00000000000f74a4 : add ecx, ebx ; ret
0x00000000000f71c0 : add ecx, ebx ; ret 0x3941
0x00000000000908b6 : add ecx, ecx ; jmp rcx
0x00000000000dfa2d : add ecx, edi ; jmp rcx
0x00000000000a4044 : add ecx, esi ; jmp rcx
0x0000000000127e41 : add edi, 0x10 ; jmp rcx
0x00000000001234ef : add edi, 0x23b0 ; pop rbp ; jmp rcx
0x000000000012a6e8 : add edi, 0x58 ; jmp rcx
0x0000000000129d98 : add edi, 0x68 ; jmp rcx
0x000000000012724b : add edi, 0xc8 ; jmp rcx
0x00000000000cce35 : add edi, 1 ; test al, al ; jne 0xcce26 ; xor eax, eax ; ret
0x000000000012fa15 : add edi, dword ptr [rax + 1] ; jmp 0x12f9e7
0x000000000012faa5 : add edi, dword ptr [rax + 1] ; jmp 0x12fa77
0x0000000000031d01 : add edi, dword ptr [rbx + 0x40] ; call qword ptr [rip + 0x18c226]
0x0000000000106c4c : add edi, dword ptr [rcx] ; ret 0x830f
0x000000000003902f : add edi, dword ptr [rsp + 8] ; mov rsi, r15 ; call r14
0x0000000000118dd4 : add edi, eax ; mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x00000000000fc271 : add edi, ebp ; xor eax, eax ; ret
0x000000000016b974 : add edi, ebx ; call r12
0x000000000013ce9c : add edi, edx ; add r9, r11 ; jmp r9
0x0000000000035625 : add edi, edx ; jmp rdi
0x0000000000118731 : add edx, 0xc ; cmp rdx, r8 ; jne 0x118721 ; ret
0x00000000000d2e28 : add edx, 1 ; cmp dword ptr [rdi], edx ; jg 0xd2e27 ; ret
0x00000000000a4ae6 : add edx, 4 ; mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xa4ae9 ; ret
0x00000000000a46b9 : add edx, 4 ; test r8d, r8d ; jne 0xa46b8 ; ret
0x00000000000945d8 : add edx, eax ; jl 0x94647 ; add rax, rdi ; ret
0x00000000000945e8 : add edx, eax ; jl 0x94649 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000094608 : add edx, eax ; jl 0x94649 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000094628 : add edx, eax ; jl 0x94649 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000d7cc8 : add edx, eax ; jmp 0xd7ce6
0x000000000009098a : add edx, eax ; jmp rdx
0x0000000000049482 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000bc2bc : add edx, ebx ; jmp rdx
0x00000000000d18c7 : add edx, ecx ; jmp rdx
0x000000000003551a : add edx, edi ; jmp rdx
0x0000000000048117 : add edx, esi ; cmp ecx, 0x2f ; jmp rdx
0x000000000005fbe3 : add edx, esi ; jmp rdx
0x0000000000169340 : add edx, esp ; jmp rdx
0x0000000000129019 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000a49d1 : add esi, 1 ; cmp rdx, rsi ; jne 0xa49d0 ; ret
0x00000000000a2f19 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a4e65 : add esi, dword ptr [rbp + 0x10] ; ret
0x000000000003b980 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000b76ea : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x73e9
0x00000000001231ff : add esi, dword ptr [rsi + 0xe] ; mov eax, 2 ; ret
0x000000000002459f : add esi, eax ; add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x0000000000090606 : add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000045d93 : add esi, eax ; jmp qword ptr [rax]
0x000000000002e6db : add esi, eax ; jmp rsi
0x000000000012fb59 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000006c00e : add esi, eax ; mov qword ptr [rsi], rax ; jmp 0x682a5
0x000000000004f362 : add esi, eax ; test dword ptr [rax], ebx ; idiv edi ; jmp qword ptr [rax]
0x000000000005ab4a : add esi, eax ; test esp, ecx ; idiv bh ; jmp qword ptr [rax]
0x0000000000144df3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000a3aae : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000136e57 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000084af2 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000000386ed : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x0000000000163f2c : add esi, edi ; fadd st(3) ; ret
0x00000000000a4188 : add esi, edi ; int1 ; mov eax, eax ; ret
0x00000000000d5c98 : add esi, esi ; ret
0x0000000000123302 : add esi, esi ; ret 0x7402
0x00000000000e3ecd : add esi, esi ; ret 0xf01
0x00000000000daf73 : add esi, esi ; ret 0xf04
0x00000000000e1fa8 : add esi, esp ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000007b55a : add esp, 0x10 ; movzx eax, al ; pop rbx ; neg eax ; ret
0x000000000007e895 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000002d3c7 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000375b3 : add esp, 0x10 ; pop rbx ; ret
0x0000000000077c72 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016c6a1 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000a387d : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000006e046 : add esp, 0x1010 ; pop rbx ; ret
0x000000000006de5a : add esp, 0x1018 ; pop rbx ; pop rbp ; ret
0x0000000000037d96 : add esp, 0x110 ; pop rbx ; ret
0x0000000000038277 : add esp, 0x118 ; ret
0x00000000000ed928 : add esp, 0x130 ; pop rbx ; ret
0x00000000000384fa : add esp, 0x140 ; pop rbx ; ret
0x0000000000037c1e : add esp, 0x148 ; ret
0x0000000000114fc4 : add esp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000877aa : add esp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x0000000000072c88 : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000006e69a : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000004df8b : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000038b01 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000030d9b : add esp, 0x18 ; ret
0x000000000007f041 : add esp, 0x20 ; mov ecx, edx ; xor edx, edx ; pop rbx ; jmp rax
0x00000000000377dc : add esp, 0x20 ; movdqa xmm0, xmm3 ; pop rbx ; ret
0x000000000007ede1 : add esp, 0x20 ; pop rbx ; jmp rax
0x000000000002cd0f : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000037726 : add esp, 0x20 ; pop rbx ; ret
0x00000000000244a6 : add esp, 0x28 ; jmp rax
0x0000000000024100 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000121ee1 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x0000000000044bdd : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000003ada6 : add esp, 0x28 ; ret
0x0000000000078326 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba559 : add esp, 0x30 ; pop rbx ; ret
0x000000000016b31f : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000025e5f : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000044d6b : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000004da9e : add esp, 0x38 ; ret
0x000000000012912e : add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000038589 : add esp, 0x40 ; pop rbx ; ret
0x00000000000fef4c : add esp, 0x40 ; ret
0x00000000000f898e : add esp, 0x418 ; ret
0x000000000004d936 : add esp, 0x450 ; pop rbx ; ret
0x00000000000ca428 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012ba9b : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000007b13b : add esp, 0x48 ; ret
0x0000000000121d22 : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001345c4 : add esp, 0x520 ; pop rbx ; ret
0x0000000000048185 : add esp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011a699 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000ee1e9 : add esp, 0x58 ; ret
0x00000000000a4fb8 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f235a : add esp, 0x60 ; pop rbx ; ret
0x00000000000f354a : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000000ec4e3 : add esp, 0x68 ; ret
0x00000000000a55d8 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ec668 : add esp, 0x78 ; ret
0x000000000005887b : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000078a00 : add esp, 0x80 ; mov eax, edx ; ret
0x000000000006edf5 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x0000000000045345 : add esp, 0x80 ; pop rbx ; ret
0x000000000006e8ed : add esp, 0x80 ; ret
0x000000000003a2c3 : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000013654f : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000012b8c1 : add esp, 0x88 ; ret
0x000000000013004a : add esp, 0x90 ; pop rbx ; ret
0x000000000003838d : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000012d1e0 : add esp, 0x98 ; ret
0x00000000000f258e : add esp, 0xa0 ; pop rbx ; ret
0x000000000007c07d : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000038df6 : add esp, 0xa8 ; ret
0x000000000002cbde : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x000000000012b682 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000006ea4a : add esp, 0xd0 ; pop rbx ; ret
0x00000000000706a6 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000045b55 : add esp, 0xd8 ; ret
0x00000000000b7b93 : add esp, 0xe0 ; pop rbx ; ret
0x00000000000d5bc5 : add esp, 8 ; add eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000123d71 : add esp, 8 ; add eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000118d22 : add esp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x0000000000053908 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000b160c : add esp, 8 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x00000000000249fc : add esp, 8 ; mov eax, edi ; neg eax ; ret
0x0000000000070e02 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006eb7e : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000089a72 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000347f6 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000bad2c : add esp, 8 ; mov rax, rdx ; ret
0x0000000000072e0e : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000756e3 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000128103 : add esp, 8 ; movzx eax, al ; add eax, 1 ; ret
0x00000000000fbd5a : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000001235cf : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000453a6 : add esp, 8 ; movzx eax, al ; ret
0x000000000011cffe : add esp, 8 ; movzx eax, ax ; ret
0x0000000000130236 : add esp, 8 ; not eax ; shr eax, 0x1f ; ret
0x000000000012eafc : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000001234a7 : add esp, 8 ; pop rbx ; pop rbp ; jmp rcx
0x0000000000085a76 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000026891 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000251b9 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000036aeb : add esp, 8 ; ret
0x0000000000134405 : add esp, 8 ; sar eax, 0x1f ; ret
0x0000000000123d5b : add esp, 8 ; sub esi, eax ; pop rbx ; pop rbp ; mov eax, esi ; ret
0x0000000000026474 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000be022 : add qword ptr [r8 - 0x7d], rcx ; ret
0x000000000004a8a1 : add qword ptr [r8], rax ; add byte ptr [rax - 0x39], cl ; ret 0xc001
0x000000000002932a : add qword ptr [rax + 0x39], rcx ; ret
0x000000000006072a : add qword ptr [rax - 0x7d], rcx ; ret
0x00000000000a5057 : add qword ptr [rbp + rcx*4 + 0x4c], rcx ; and al, 0x28 ; call rbx
0x00000000000afa17 : add qword ptr [rcx - 0x77], r8 ; ret
0x000000000014f59d : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000144ed2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000003968a : add r13, 8 ; jmp 0x39658
0x0000000000123e6d : add r13, rax ; mov qword ptr [rbx + 0x60], r13 ; jmp 0x123e40
0x000000000006c00d : add r14, rax ; mov qword ptr [rsi], rax ; jmp 0x682a6
0x0000000000144e62 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000000f322f : add r14b, r14b ; ret 0x7402
0x0000000000144df2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000003902e : add r15, qword ptr [rsp + 8] ; mov rsi, r15 ; call r14
0x000000000015a490 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000156924 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000002a8bd : add r8b, byte ptr [r8] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000137b7a : add r9, qword ptr [rsp + 8] ; call rax
0x000000000013ce9e : add r9, r11 ; jmp r9
0x0000000000118359 : add r9b, byte ptr [r8 + 0x39] ; ret 0x1072
0x00000000000909ce : add r9b, byte ptr [r8 - 0x77] ; clc ; ret
0x0000000000053c88 : add r9d, eax ; mov eax, r9d ; ret
0x000000000015eb92 : add rax, -0x7cb80000 ; ret 0xe910
0x000000000014f623 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000b69c0 : add rax, 1 ; ret
0x00000000000b69b7 : add rax, 2 ; ret
0x00000000000b69d0 : add rax, 3 ; ret
0x00000000000244bc : add rax, qword ptr [0] ; ret
0x000000000002db81 : add rax, qword ptr [r8] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008c610 : add rax, qword ptr [rbp] ; mov rdx, rax ; jmp 0x8c639
0x00000000000244bb : add rax, qword ptr fs:[0] ; ret
0x0000000000064d54 : add rax, r13 ; jmp 0x60f9e
0x000000000015bc90 : add rax, r8 ; vzeroupper ; ret
0x000000000010a6cb : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000015f3b7 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000006f045 : add rax, rcx ; jmp rax
0x0000000000093e98 : add rax, rcx ; ret
0x000000000015abcf : add rax, rcx ; sub rax, rdi ; ret
0x000000000015f75c : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000015b5e5 : add rax, rcx ; vzeroupper ; ret
0x000000000015bc8d : add rax, rdi ; add rax, r8 ; vzeroupper ; ret
0x0000000000093e95 : add rax, rdi ; add rax, rcx ; ret
0x000000000015b5e2 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x00000000000946c9 : add rax, rdi ; add rax, rsi ; ret
0x0000000000051750 : add rax, rdi ; jmp rax
0x0000000000051dfa : add rax, rdi ; mov r14d, 1 ; jmp rax
0x00000000000908c8 : add rax, rdi ; ret
0x000000000015f814 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x000000000015b759 : add rax, rdi ; vzeroupper ; ret
0x000000000002489f : add rax, rdx ; jmp rax
0x0000000000099ca5 : add rax, rdx ; sub rax, rdi ; ret
0x0000000000050bfa : add rax, rsi ; jmp rax
0x000000000005db27 : add rax, rsi ; mov edx, 1 ; jmp rax
0x00000000000946cc : add rax, rsi ; ret
0x00000000000d6830 : add rbx, 1 ; call 0xd2ae6
0x00000000000d1893 : add rbx, rbp ; ret 0xf66
0x0000000000035e5f : add rcx, qword ptr [rdi + 0x20] ; mov rax, rcx ; ret
0x0000000000161af5 : add rcx, r11 ; jmp rcx
0x00000000000908b5 : add rcx, r9 ; jmp rcx
0x000000000016869e : add rcx, rax ; jmp rcx
0x00000000000dfa2c : add rcx, rdi ; jmp rcx
0x00000000000a4043 : add rcx, rsi ; jmp rcx
0x0000000000127e40 : add rdi, 0x10 ; jmp rcx
0x00000000001234ee : add rdi, 0x23b0 ; pop rbp ; jmp rcx
0x000000000012a6e7 : add rdi, 0x58 ; jmp rcx
0x0000000000129d97 : add rdi, 0x68 ; jmp rcx
0x000000000012724a : add rdi, 0xc8 ; jmp rcx
0x0000000000035624 : add rdi, r10 ; jmp rdi
0x0000000000118dd3 : add rdi, rax ; mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x000000000016b973 : add rdi, rbx ; call r12
0x000000000013ce9b : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000118730 : add rdx, 0xc ; cmp rdx, r8 ; jne 0x118722 ; ret
0x00000000000d2e27 : add rdx, 1 ; cmp dword ptr [rdi], edx ; jg 0xd2e28 ; ret
0x00000000000a46b8 : add rdx, 4 ; test r8d, r8d ; jne 0xa46b9 ; ret
0x000000000016933f : add rdx, r12 ; jmp rdx
0x0000000000090a5a : add rdx, r8 ; jmp rdx
0x0000000000049481 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000000d18c6 : add rdx, r9 ; jmp rdx
0x00000000000945d7 : add rdx, rax ; jl 0x94648 ; add rax, rdi ; ret
0x00000000000945d6 : add rdx, rax ; jl 0x94649 ; add rax, rdi ; ret
0x00000000000d7cc7 : add rdx, rax ; jmp 0xd7ce7
0x0000000000090989 : add rdx, rax ; jmp rdx
0x00000000000bc2bb : add rdx, rbx ; jmp rdx
0x0000000000035519 : add rdx, rdi ; jmp rdx
0x0000000000048116 : add rdx, rsi ; cmp ecx, 0x2f ; jmp rdx
0x000000000005fbe2 : add rdx, rsi ; jmp rdx
0x0000000000129018 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000a49d0 : add rsi, 1 ; cmp rdx, rsi ; jne 0xa49d1 ; ret
0x000000000002e6da : add rsi, r8 ; jmp rsi
0x000000000012fb58 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000007e894 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000002d3c6 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000375b2 : add rsp, 0x10 ; pop rbx ; ret
0x000000000016c6a0 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000006e045 : add rsp, 0x1010 ; pop rbx ; ret
0x000000000006de59 : add rsp, 0x1018 ; pop rbx ; pop rbp ; ret
0x0000000000037d95 : add rsp, 0x110 ; pop rbx ; ret
0x0000000000038276 : add rsp, 0x118 ; ret
0x00000000000ed927 : add rsp, 0x130 ; pop rbx ; ret
0x00000000000384f9 : add rsp, 0x140 ; pop rbx ; ret
0x0000000000037c1d : add rsp, 0x148 ; ret
0x0000000000114fc3 : add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000877a9 : add rsp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x0000000000072c87 : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000006e699 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x0000000000038b00 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000030d9a : add rsp, 0x18 ; ret
0x000000000007f040 : add rsp, 0x20 ; mov ecx, edx ; xor edx, edx ; pop rbx ; jmp rax
0x00000000000377db : add rsp, 0x20 ; movdqa xmm0, xmm3 ; pop rbx ; ret
0x000000000007ede0 : add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000002cd0e : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000037725 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000244a5 : add rsp, 0x28 ; jmp rax
0x0000000000044bdc : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000003ada5 : add rsp, 0x28 ; ret
0x0000000000078325 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba558 : add rsp, 0x30 ; pop rbx ; ret
0x000000000016b31e : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000044d6a : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000004da9d : add rsp, 0x38 ; ret
0x000000000012912d : add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000038588 : add rsp, 0x40 ; pop rbx ; ret
0x00000000000fef4b : add rsp, 0x40 ; ret
0x00000000000f898d : add rsp, 0x418 ; ret
0x000000000004d935 : add rsp, 0x450 ; pop rbx ; ret
0x000000000012ba9a : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000007b13a : add rsp, 0x48 ; ret
0x0000000000121d21 : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001345c3 : add rsp, 0x520 ; pop rbx ; ret
0x000000000011a698 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000ee1e8 : add rsp, 0x58 ; ret
0x00000000000a4fb7 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f2359 : add rsp, 0x60 ; pop rbx ; ret
0x00000000000f3549 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000000ec4e2 : add rsp, 0x68 ; ret
0x00000000000a55d7 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ec667 : add rsp, 0x78 ; ret
0x00000000000789ff : add rsp, 0x80 ; mov eax, edx ; ret
0x0000000000045344 : add rsp, 0x80 ; pop rbx ; ret
0x000000000006e8ec : add rsp, 0x80 ; ret
0x000000000013654e : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000012b8c0 : add rsp, 0x88 ; ret
0x0000000000130049 : add rsp, 0x90 ; pop rbx ; ret
0x000000000003838c : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000012d1df : add rsp, 0x98 ; ret
0x00000000000f258d : add rsp, 0xa0 ; pop rbx ; ret
0x000000000007c07c : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000038df5 : add rsp, 0xa8 ; ret
0x000000000012b681 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000006ea49 : add rsp, 0xd0 ; pop rbx ; ret
0x00000000000706a5 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000045b54 : add rsp, 0xd8 ; ret
0x00000000000b7b92 : add rsp, 0xe0 ; pop rbx ; ret
0x00000000000d5bc4 : add rsp, 8 ; add eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000123d70 : add rsp, 8 ; add eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000118d21 : add rsp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x0000000000053907 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000b160b : add rsp, 8 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x00000000000249fb : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x0000000000070e01 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006eb7d : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000089a71 : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000347f5 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000bad2b : add rsp, 8 ; mov rax, rdx ; ret
0x0000000000072e0d : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000756e2 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000fbd59 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000001235ce : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000453a5 : add rsp, 8 ; movzx eax, al ; ret
0x000000000011cffd : add rsp, 8 ; movzx eax, ax ; ret
0x0000000000130235 : add rsp, 8 ; not eax ; shr eax, 0x1f ; ret
0x000000000012eafb : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000001234a6 : add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0x00000000000251b8 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000036aea : add rsp, 8 ; ret
0x0000000000134404 : add rsp, 8 ; sar eax, 0x1f ; ret
0x0000000000026473 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001035fe : add sil, al ; jmp qword ptr [rax]
0x00000000000fe803 : add word ptr [rax], 1 ; ret
0x00000000000fe54e : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000036ebf : addps xmm0, xmm0 ; ret
0x0000000000036ebe : addsd xmm0, xmm0 ; ret
0x00000000000371a0 : addss xmm0, xmm0 ; ret
0x00000000001161f6 : and al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009c171 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000e70f6 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a4b86 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008c3c6 : and al, 0 ; je 0x8c3e0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dd966 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x84c6
0x0000000000121900 : and al, 0x10 ; call qword ptr [rax]
0x00000000000b7661 : and al, 0x10 ; call rax
0x0000000000078099 : and al, 0x10 ; call rbx
0x0000000000137f53 : and al, 0x10 ; call rdx
0x000000000003687b : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x0000000000090993 : and al, 0x10 ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000007edf8 : and al, 0x10 ; mov qword ptr [rsp + 8], rdi ; call 0x7b0c9
0x0000000000039440 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000076e91 : and al, 0x10 ; mov rdi, r13 ; call rax
0x000000000012ee1a : and al, 0x10 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000103f75 : and al, 0x10 ; mov rsi, r13 ; xor r15d, r15d ; call rax
0x00000000001357a7 : and al, 0x10 ; xor eax, eax ; call 0xf19c6
0x00000000001357a6 : and al, 0x10 ; xor eax, eax ; call 0xf19c7
0x000000000010407d : and al, 0x10 ; xor esi, esi ; mov edi, 0x2000004 ; call rcx
0x0000000000090955 : and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x0000000000059972 : and al, 0x18 ; add byte ptr [rax + rax], al ; add al, ch ; ret
0x00000000000df694 : and al, 0x18 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd020
0x0000000000107700 : and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x0000000000085fc3 : and al, 0x18 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000002421f : and al, 0x18 ; call rax
0x0000000000077fa4 : and al, 0x18 ; call rbx
0x000000000008395d : and al, 0x18 ; call rcx
0x000000000008398c : and al, 0x18 ; call rdx
0x00000000000b211b : and al, 0x18 ; lea r9, qword ptr [rsp + 0x30] ; call r12
0x0000000000122397 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x40] ; call qword ptr [rax]
0x000000000010803e : and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000908c3 : and al, 0x18 ; mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x00000000000b765c : and al, 0x18 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000001214ba : and al, 0x18 ; mov rdi, rbp ; call r14
0x0000000000137f4e : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x00000000001218fb : and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x0000000000024ff0 : and al, 0x18 ; xor r8d, r8d ; call rbx
0x0000000000121c6b : and al, 0x1c ; call qword ptr [rax]
0x000000000004dec6 : and al, 0x20 ; add al, 0 ; add bl, ch ; ret
0x0000000000130016 : and al, 0x20 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000121e7e : and al, 0x20 ; call qword ptr [rax]
0x0000000000027402 : and al, 0x20 ; call r15
0x00000000000a558c : and al, 0x20 ; call rbx
0x0000000000127781 : and al, 0x20 ; call rdx
0x0000000000083958 : and al, 0x20 ; mov qword ptr [rsp + 0x18], rax ; call rcx
0x00000000000c4935 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000039604 : and al, 0x20 ; mov rax, qword ptr [rsp] ; call rax
0x0000000000047996 : and al, 0x24 ; call rax
0x00000000000ed8df : and al, 0x28 ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; shr al, 0x25 ; ret 0xfff4
0x00000000000a535f : and al, 0x28 ; call r12
0x0000000000122a25 : and al, 0x28 ; call rax
0x00000000000a505c : and al, 0x28 ; call rbx
0x0000000000127566 : and al, 0x28 ; call rcx
0x00000000000273fd : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000000868d3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x0000000000111e3e : and al, 0x2c ; mov word ptr [rcx + 4], ax ; xor eax, eax ; jmp 0x111e14
0x00000000000b2120 : and al, 0x30 ; call r12
0x0000000000027bd5 : and al, 0x30 ; call r14
0x00000000000284a6 : and al, 0x30 ; call r15
0x0000000000027d61 : and al, 0x30 ; call rbx
0x0000000000029c81 : and al, 0x30 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000027988 : and al, 0x38 ; call r14
0x00000000000280f5 : and al, 0x38 ; call r15
0x0000000000029475 : and al, 0x38 ; call rbx
0x0000000000029034 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000027bd0 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00000000000284a1 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x0000000000027d5c : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000012c405 : and al, 0x3a ; call qword ptr [rax]
0x0000000000125da8 : and al, 0x3b ; sbb byte ptr [r15], cl ; xchg eax, edx ; ret 0x8b48
0x000000000012239c : and al, 0x40 ; call qword ptr [rax]
0x0000000000027983 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000000280f0 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000029470 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000114d5a : and al, 0x41 ; call rsp
0x00000000000373d0 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000037724 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000000000feee9 : and al, 0x48 ; add esp, 0x38 ; ret
0x00000000000fef4a : and al, 0x48 ; add esp, 0x40 ; ret
0x00000000001377fc : and al, 0x48 ; add esp, 0x48 ; ret
0x000000000011d13b : and al, 0x48 ; add esp, 8 ; ret
0x000000000002af06 : and al, 0x48 ; call r14
0x0000000000028836 : and al, 0x48 ; call r15
0x000000000011d60a : and al, 0x48 ; mov dword ptr [rbp + 0x18], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001373c1 : and al, 0x48 ; mov eax, dword ptr [rax + 0x170] ; jmp rax
0x00000000000a4b58 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c4a4 : and al, 0x48 ; mov edi, ebx ; call rax
0x000000000002af01 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000028831 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000000878e1 : and al, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000108519 : and al, 0x60 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000000c4683 : and al, 0x60 ; mov rdi, qword ptr [rsp + 8] ; call r12
0x00000000000aed26 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000011b4bc : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000a8247 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000a826b : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8548
0x00000000000dd2dc : and al, 0x83 ; clc ; push qword ptr [rax + rcx + 0x39] ; ret
0x0000000000030140 : and al, 0x83 ; ret 0x8b05
0x00000000000d0a3b : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b44
0x000000000003e9e3 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000003eb9e : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000005752f : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x00000000000d65e5 : and al, 0x89 ; ret
0x00000000000c3e68 : and al, 0x89 ; ret 0x8b48
0x00000000000d8218 : and al, 0x89 ; ret 0xe281
0x00000000000eb58c : and al, 0x89 ; ret 0xe283
0x00000000000da6ce : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x000000000011b4d9 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xf41
0x000000000011c044 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x17e9
0x000000000011c0d3 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x65e9
0x000000000011bec5 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8944
0x0000000000027af5 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000002c804 : and al, 0xa0 ; add byte ptr [rax], al ; add al, ch ; ret 0x10ab
0x000000000016933d : and al, 0xa2 ; add rdx, r12 ; jmp rdx
0x000000000011d5df : and al, 0xa8 ; add dword ptr [rsp + rcx + 0x5b], esi ; pop rbp ; pop r12 ; ret
0x0000000000038143 : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c86bd : and al, 0xc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c862d : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000ececb : and al, 0xc ; call 0x1091c4
0x00000000000ececa : and al, 0xc ; call 0x1091c5
0x0000000000090934 : and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x000000000011bdc5 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000035f26 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0xae ; ret
0x0000000000037341 : and al, 0xc8 ; ret
0x0000000000107d95 : and al, 0xd0 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x000000000003733b : and al, 0xd0 ; movdqa xmm0, xmmword ptr [rsp - 0x38] ; ret
0x000000000016b91c : and al, 0xd8 ; ret
0x0000000000090a22 : and al, 0xe ; mov byte ptr [rdi + 6], al ; mov rax, rdi ; ret
0x0000000000090b07 : and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x0000000000074aa4 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000f2465 : and al, 0xe8 ; add eax, 0x89fffffe ; ret 0x8b48
0x000000000004a2c9 : and al, 0xe8 ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000369ac : and al, 0xe8 ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x000000000004d3fb : and al, 0xe8 ; pinsrw xmm0, eax, 6 ; ret
0x00000000000368ee : and al, 0xe8 ; ret
0x0000000000090a01 : and al, 0xec ; mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x0000000000090ae6 : and al, 0xec ; mov word ptr [rdi + 4], dx ; ret
0x000000000016c68c : and al, 0xf ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003854b : and al, 0xf ; xchg eax, ebp ; ret 0x8948
0x0000000000038b5f : and al, 0xf ; xchg eax, ebp ; ret 0xd321
0x00000000000ed31d : and al, 0xf ; xchg eax, esp ; ret 0x2044
0x00000000000ce323 : and al, 0xf ; xchg eax, esp ; ret 0x394c
0x0000000000036a66 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000368e8 : and al, 0xf0 ; fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x000000000016b257 : and al, 0xf0 ; movdqa xmm0, xmmword ptr [rsp - 0x18] ; ret
0x00000000000b708a : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000b7090 : and al, 0xf0 ; ret
0x00000000000909e9 : and al, 0xf4 ; mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x000000000009091c : and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000f7039 : and al, 0xf6 ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000004a285 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004a28b : and al, 0xf8 ; ret
0x00000000000909cb : and al, 0xfa ; mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x00000000000908fe : and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x000000000004a23f : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000004a245 : and al, 0xfc ; ret
0x00000000000a6806 : and al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003b1cd : and al, 4 ; jne 0x3b1de ; add rsp, 0x18 ; ret
0x000000000003b1cc : and al, 4 ; jne 0x3b1df ; add rsp, 0x18 ; ret
0x000000000009f7a8 : and al, 7 ; add byte ptr [rax], al ; ret
0x0000000000039125 : and al, 7 ; mov rdi, r12 ; call rbx
0x0000000000028785 : and al, 8 ; add byte ptr [rcx - 0x77], al ; ret 0x8949
0x0000000000046b3c : and al, 8 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x0000000000030d98 : and al, 8 ; add rsp, 0x18 ; ret
0x00000000000fcf73 : and al, 8 ; call 0x1091c4
0x00000000000fcf72 : and al, 8 ; call 0x1091c5
0x0000000000036006 : and al, 8 ; call 0x222d4
0x000000000007edfd : and al, 8 ; call 0x7b0c4
0x0000000000083652 : and al, 8 ; call qword ptr [rax]
0x00000000000c4688 : and al, 8 ; call r12
0x0000000000114a0d : and al, 8 ; call rax
0x000000000003913d : and al, 8 ; call rbx
0x0000000000122972 : and al, 8 ; call rcx
0x0000000000036a9a : and al, 8 ; fadd st(0) ; ret
0x00000000000369fe : and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000036964 : and al, 8 ; fsubrp st(1) ; ret
0x000000000007b0a1 : and al, 8 ; jmp 0x7b06a
0x000000000007b0a0 : and al, 8 ; jmp 0x7b06b
0x0000000000119147 : and al, 8 ; jne 0x119181 ; add rsp, 0x38 ; ret
0x00000000000f7b3b : and al, 8 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000071339 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000012c161 : and al, 8 ; mov rdi, qword ptr [rsp] ; call rax
0x0000000000039031 : and al, 8 ; mov rsi, r15 ; call r14
0x000000000003687f : and al, 8 ; ret
0x00000000000838dd : and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000131da3 : and al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000037872 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000036b25 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000009e94a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x0000000000030556 : and ax, 0x100 ; movzx eax, ax ; ret
0x0000000000030576 : and ax, 0x1000 ; movzx eax, ax ; ret
0x00000000000304b6 : and ax, 0x200 ; movzx eax, ax ; ret
0x0000000000030536 : and ax, 0x2000 ; movzx eax, ax ; ret
0x0000000000030456 : and ax, 0x400 ; movzx eax, ax ; ret
0x00000000000304f6 : and ax, 0x4000 ; movzx eax, ax ; ret
0x0000000000030496 : and ax, 0x800 ; movzx eax, ax ; ret
0x00000000000304d6 : and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000009fd87 : and bl, al ; nop dword ptr [rax] ; ret
0x00000000000772e2 : and byte ptr [r8 + 1], r9b ; ret
0x000000000011b8fc : and byte ptr [r8 - 0x7d], cl ; ret
0x00000000000a3236 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000e0559 : and byte ptr [r8], r8b ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000082ca5 : and byte ptr [r9 + 0x39], cl ; ret 0x850f
0x00000000000b7dd1 : and byte ptr [r9 + 0x5e], r8b ; pop r15 ; ret
0x00000000000fb901 : and byte ptr [rax + 0x21], cl ; clc ; or rax, rsi ; ret
0x0000000000084bf0 : and byte ptr [rax + 0x39], cl ; ret 0x3f73
0x000000000015f2ca : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000012a784 : and byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm3 ; ret
0x000000000015b76c : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x000000000004e0fb : and byte ptr [rax + 1], cl ; ret
0x000000000015bbf6 : and byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000094606 : and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000004dec7 : and byte ptr [rax + rax], al ; add bl, ch ; ret
0x000000000012c664 : and byte ptr [rax + rcx*2 - 0x77], 3 ; pop rbx ; ret
0x0000000000039605 : and byte ptr [rax - 0x75], cl ; add al, 0x24 ; call rax
0x00000000000c4936 : and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000d5065 : and byte ptr [rax - 0x75], cl ; cmp dword ptr [rax + 9], ecx ; cmp cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000083959 : and byte ptr [rax - 0x77], cl ; and al, 0x18 ; call rcx
0x00000000000f82a7 : and byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000012fcc4 : and byte ptr [rax - 0x77], cl ; ja 0x12fce9 ; mov dword ptr [rdi + 0x28], edx ; ret
0x0000000000088a9b : and byte ptr [rax - 0x77], cl ; jae 0x88ab1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f178d : and byte ptr [rax - 0x77], cl ; ret
0x00000000000466d0 : and byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000134e36 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x0000000000112a03 : and byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000d9e41 : and byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000362c7 : and byte ptr [rax - 0x77], cl ; ret 0x8d4d
0x000000000002eb58 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2eb6c ; call rax
0x0000000000026366 : and byte ptr [rax - 0x7d], cl ; ret
0x000000000008a0f3 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000015b9bb : and byte ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000000fdc97 : and byte ptr [rax - 0x7d], cl ; ret 0x4c14
0x00000000000f46b6 : and byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000007bfc2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000064028 : and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000005a086 : and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4817
0x00000000000e055a : and byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x00000000000c9dca : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000005d6a2 : and byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000a4151 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006828d : and byte ptr [rax], al ; add byte ptr [rbp - 0x76b70088], cl ; ret
0x0000000000167a16 : and byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000000a0efc : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000a3237 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x0000000000048954 : and byte ptr [rbp + rcx*4 + 0x3c], cl ; ret 0x894c
0x000000000016089d : and byte ptr [rbp - 0x27], dh ; vzeroupper ; ret
0x0000000000088728 : and byte ptr [rbx + 0x50], 0xfe ; mov qword ptr [rbx], rdi ; call rcx
0x00000000000b8407 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002cd11 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000786b2 : and byte ptr [rbx + rbp*8], al ; ret
0x000000000016135a : and byte ptr [rbx], bh ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000004eb6c : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000082ca6 : and byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000007f043 : and byte ptr [rcx + 0x5bd231d1], cl ; jmp rax
0x00000000000b7dd2 : and byte ptr [rcx + 0x5e], al ; pop r15 ; ret
0x0000000000073710 : and byte ptr [rcx - 0x3b7cb7d7], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000774ad : and byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x000000000004d371 : and byte ptr [rcx], cl ; ret 0x9574
0x000000000007e7e7 : and byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000ead94 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], eax ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000a3d25 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000030539 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000cf13e : and byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x00000000000f92f8 : and byte ptr [rdi], cl ; test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000009fa79 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000007086f : and byte ptr [rdi], cl ; test dword ptr [rdx - 0x77000000], ebx ; ret 0xe281
0x00000000000342af : and byte ptr [rdi], cl ; test ebx, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000165180 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000131b66 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000f4694 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf980
0x0000000000161b8a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000377de : and byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000012fef4 : and byte ptr [rsi + 9], dh ; add dword ptr [rdi + 0x28], esi ; ret
0x00000000000f4fc1 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x0000000000107931 : and byte ptr [rsp + rcx + 0x5b], dh ; ret
0x00000000000b69b2 : and ch, 0xf ; je 0xb69d9 ; add rax, 2 ; ret
0x00000000000a40e8 : and ch, 0xf0 ; pop rbx ; cmovne rax, rdx ; ret
0x000000000008a6af : and ch, 8 ; je 0x8a677 ; ret
0x00000000000a4d2f : and ch, 8 ; je 0xa4cf7 ; ret
0x000000000015ba03 : and ch, al ; std ; xlatb ; ret
0x00000000000b699d : and cl, 0xf ; je 0xb69c5 ; ret
0x00000000000b9838 : and cl, byte ptr [rax - 0x77] ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000538f2 : and cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000bdf45 : and cl, byte ptr [rax - 0x7d] ; ret
0x00000000001045a3 : and cl, byte ptr [rax - 0x7d] ; ret 0xeb01
0x000000000008ad68 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000da34e : and cl, byte ptr [rdi] ; mov dh, 0x57 ; cmp dh, dh ; ret 0xf08
0x00000000000cdec4 : and dh, dh ; inc dword ptr [rcx - 0x77] ; ret 0xf883
0x0000000000080ac4 : and dh, dl ; adc eax, dword ptr [rax] ; ret
0x000000000007e430 : and dl, byte ptr [rax + rax] ; jne 0x7e448 ; jmp 0x7e462
0x000000000010a6b3 : and dword ptr [rax - 0x77], ecx ; ret
0x0000000000060f4a : and dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000075a20 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000075a7c : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b87eb : and dword ptr [rbx], edx ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000089359 : and dword ptr [rcx + rax + 0x450f4800], 0xffffffc2 ; ret
0x00000000000947fe : and dword ptr [rcx - 0x77], ecx ; ret
0x000000000013814a : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x000000000007b454 : and dword ptr [rdi], 0xffffffcf ; ret
0x00000000000387d4 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000016bc4b : and dword ptr [rip - 0x74b79c00], eax ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000247b3 : and dword ptr [rsi - 0x76b7ffe7], edx ; ret
0x000000000009f8ab : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x00000000000244bf : and eax, 0 ; ret
0x00000000001096e8 : and eax, 0x10 ; ret
0x00000000000f1c87 : and eax, 0x100f ; ret
0x0000000000035110 : and eax, 0x188e93 ; nop dword ptr [rax] ; ret
0x000000000002d22f : and eax, 0x190d74 ; nop dword ptr [rax] ; ret
0x0000000000036aae : and eax, 0x200 ; ret
0x0000000000109cef : and eax, 0x28 ; jne 0x109d49 ; leave ; ret
0x0000000000049ec0 : and eax, 0x28 ; jne 0x49f16 ; leave ; ret
0x00000000000244a0 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x0000000000024255 : and eax, 0x30 ; call rax
0x000000000003a492 : and eax, 0x30 ; call rdx
0x0000000000037b00 : and eax, 0x30 ; jmp rax
0x000000000004798f : and eax, 0x30 ; mov edi, dword ptr [rsp + 0x24] ; call rax
0x000000000003a451 : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000007243c : and eax, 0x30 ; mov rdi, rbp ; call rax
0x00000000000c2f76 : and eax, 0x30 ; pop r13 ; pop r14 ; jmp rax
0x00000000000a406e : and eax, 0x3fc00 ; ret
0x00000000000a4184 : and eax, 0x3fffc00 ; div ecx ; mov eax, eax ; ret
0x00000000000a40b9 : and eax, 0x3fffc00 ; ret
0x00000000000e2c7c : and eax, 0x40 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000016c07f : and eax, 0x51f24 ; ret
0x0000000000030666 : and eax, 0x7f ; ret
0x00000000000a419e : and eax, 0x7ff80000 ; div esi ; mov eax, eax ; ret
0x00000000000a4107 : and eax, 0x7ff80000 ; ret
0x0000000000036e88 : and eax, 0x80 ; ret
0x0000000000036fcb : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x000000000007a476 : and eax, 0x804 ; ret
0x00000000001219ea : and eax, 0x9c5b9 ; nop ; pop rbx ; ret
0x00000000001091eb : and eax, 0xc ; cmp eax, 4 ; je 0x1091fc ; ret
0x00000000001093b6 : and eax, 0xc ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e3c04 : and eax, 0xf ; ret
0x00000000000c3780 : and eax, 0xfa823 ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000000fb88a : and eax, 0xfffff000 ; or eax, edx ; ret
0x000000000010d4ae : and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x000000000010d49a : and eax, 0xffffff ; ret
0x00000000001181d7 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x0000000000078a27 : and eax, 1 ; mov edx, eax ; jmp 0x789d2
0x0000000000078b27 : and eax, 1 ; mov edx, eax ; jmp 0x78ad2
0x0000000000078a13 : and eax, 1 ; mov edx, eax ; mov eax, edx ; ret
0x00000000000305f6 : and eax, 1 ; ret
0x00000000000d5be8 : and eax, 2 ; add eax, 8 ; ret
0x0000000000030476 : and eax, 2 ; movzx eax, ax ; ret
0x000000000011f61c : and eax, 2 ; pop r14 ; sub eax, 1 ; ret
0x000000000004889c : and eax, 2 ; sub eax, 1 ; ret
0x00000000000fc2b3 : and eax, 3 ; ret
0x0000000000030516 : and eax, 4 ; movzx eax, ax ; ret
0x0000000000030436 : and eax, 8 ; movzx eax, ax ; ret
0x00000000000371b8 : and eax, 8 ; ret
0x00000000000897ca : and eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000004ff9f : and eax, dword ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000014f6c9 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000000367f3 : and eax, ecx ; ret
0x00000000000fb903 : and eax, edi ; or rax, rsi ; ret
0x0000000000036c1a : and eax, edx ; movq xmm0, rax ; ret
0x0000000000036b61 : and eax, edx ; ret
0x0000000000036ba4 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000030841 : and eax, esi ; ret
0x0000000000075a21 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000075a7d : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001124fa : and ebx, 0x840f2000 ; ret
0x0000000000109186 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x109199 ; ret
0x0000000000121059 : and ebx, dword ptr [rdx] ; or al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000003b676 : and ecx, 0x3ff ; xor eax, ecx ; ret
0x00000000000d5cc2 : and ecx, 0x80 ; cmovne eax, edx ; pop rbx ; ret
0x0000000000163105 : and ecx, 0xff ; sub eax, ecx ; ret
0x0000000000162838 : and ecx, 0xffff ; sub eax, ecx ; ret
0x0000000000078910 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000d5d09 : and ecx, 1 ; jne 0xd5c7b ; ret
0x00000000000cd212 : and ecx, dword ptr [rbx - 0x7cb7fbbe] ; ret 0x4c04
0x0000000000032a39 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; call rax
0x0000000000031991 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; jmp rax
0x0000000000126946 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; pop rdx ; ret
0x00000000000e69d6 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret 0xda4
0x000000000011c407 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x00000000000f5646 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x8440
0x00000000000f5659 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x0000000000030676 : and edi, 0xffffff80 ; sete al ; ret
0x00000000000a4e63 : and edx, 3 ; jne 0xa4e7d ; ret
0x000000000008757d : and edx, dword ptr [rdx + 0x10013] ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000a6d12 : and edx, edi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000016749f : and esi, 0x89497fff ; ret 0xc148
0x00000000000d414c : and esi, esi ; ret
0x00000000000897c9 : and esp, dword ptr [rbx] ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000138149 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000387d3 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001124f9 : and r11d, 0x840f2000 ; ret
0x00000000000fb902 : and rax, rdi ; or rax, rsi ; ret
0x0000000000036c19 : and rax, rdx ; movq xmm0, rax ; ret
0x0000000000036f8f : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000036f8c : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000118d56 : bnd jb 0x118d4c ; mov eax, 0xffffffff ; ret
0x0000000000090739 : bnd je 0x90733 ; ret
0x00000000000a5fe7 : bnd je 0xa5ff5 ; test edx, edx ; jne 0xa5fe7 ; ret
0x000000000008b8c2 : bnd jne 0x8b8bb ; ret
0x00000000000a49d6 : bnd jne 0xa49cb ; ret
0x00000000000941aa : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x00000000000940c0 : bsf eax, eax ; add rax, rdi ; ret
0x000000000015b7d1 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x00000000000940d0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000940e0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000940b0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000009400f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000099647 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008a919 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x0000000000099b4a : bsf eax, edx ; ret
0x00000000000b65a7 : bsf eax, edx ; shr rax, 2 ; ret
0x0000000000099ca2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000099760 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000099b92 : bsf rax, rdx ; ret
0x00000000000b65a6 : bsf rax, rdx ; shr rax, 2 ; ret
0x000000000015bbc0 : bsr eax, eax ; add eax, 0x60 ; add rax, rdi ; ret
0x00000000000946c6 : bsr eax, eax ; add rax, rdi ; add rax, rsi ; ret
0x00000000000944f6 : bsr eax, eax ; add rax, rdi ; ret
0x000000000015baaf : bsr eax, eax ; add rax, rdi ; vzeroupper ; ret
0x00000000000945a0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000945b0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000945c0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x0000000000099afb : bsr eax, esi ; add rax, rdi ; ret
0x0000000000099a09 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000099905 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000009986a : bsr rax, rax ; add rax, rdi ; ret
0x0000000000099afa : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000099a08 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000099904 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000012a7ed : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000010d456 : bswap eax ; ret
0x0000000000107083 : call 0x103302
0x00000000001086aa : call 0x1071e6
0x00000000000eadd7 : call 0x1087392b
0x00000000000eceaf : call 0x109162
0x00000000000ececd : call 0x1091c2
0x00000000000b6fa0 : call 0x1099c7
0x00000000000511d6 : call 0x110511d8
0x000000000005134b : call 0x1105134d
0x00000000000513c1 : call 0x110513c3
0x0000000000051d98 : call 0x11051d9a
0x0000000000051f7e : call 0x11051f80
0x00000000000c7371 : call 0x11f998
0x0000000000111adb : call 0x11fb09
0x000000000011490f : call 0x120b17
0x00000000001303d0 : call 0x12c6d2
0x0000000000122aef : call 0x12ed22
0x000000000012300a : call 0x12f222
0x0000000000138124 : call 0x141cc937
0x0000000000036008 : call 0x222d2
0x0000000000115fe4 : call 0x222e2
0x0000000000076057 : call 0x22312
0x00000000000fe9b2 : call 0x22447
0x000000000003729d : call 0x244ffdf2
0x000000000016befa : call 0x25107
0x00000000000af46c : call 0x30137
0x0000000000024124 : call 0x30352
0x00000000000abf7d : call 0x30359
0x0000000000037bef : call 0x37ff7
0x00000000000ed8e6 : call 0x39b12
0x00000000000fb879 : call 0x48d24189
0x000000000003d240 : call 0x48e37
0x0000000000049e13 : call 0x49f26
0x000000000014445a : call 0x4f935458
0x0000000000144459 : call 0x4f935459
0x0000000000146f8a : call 0x4f937f88
0x0000000000146f89 : call 0x4f937f89
0x0000000000079ac1 : call 0x50757
0x000000000005f452 : call 0x5c368
0x000000000005f451 : call 0x5c369
0x000000000003456a : call 0x70862
0x0000000000034569 : call 0x70863
0x00000000000f5027 : call 0x71282
0x00000000000f5026 : call 0x71283
0x000000000011e901 : call 0x74f1914b
0x00000000000693a5 : call 0x75622
0x00000000000f4781 : call 0x76108397
0x000000000010c0c0 : call 0x782e2
0x000000000010c0bf : call 0x782e3
0x00000000000d5aa1 : call 0x78cfe3aa
0x00000000000dbf78 : call 0x78d04881
0x000000000007edff : call 0x7b0c2
0x0000000000102608 : call 0x7e852
0x0000000000084d52 : call 0x80f82
0x0000000000023d41 : call 0xa3fc6
0x0000000000023c09 : call 0xa4456
0x00000000000d6834 : call 0xd2ae2
0x00000000000ea9c1 : call 0xe6c92
0x00000000000f0b96 : call 0xece82
0x00000000000fbe15 : call 0xf0fbe1e
0x00000000000fbe51 : call 0xf0fbe5a
0x00000000001357ab : call 0xf19c2
0x0000000000135939 : call 0xf1be2
0x000000000016bfbb : call 0xf8242
0x0000000000036815 : call 0xffffffff81c5f13d
0x000000000006df39 : call 0xffffffff834f10bc
0x00000000000a40ca : call 0xffffffff83ccc9de
0x000000000012dce0 : call 0xffffffff98fba61f
0x00000000000d5ba6 : call 0xffffffffb8cfe4f6
0x000000000004d3fc : call 0xffffffffc0c8e36d
0x00000000000b6c66 : call 0xffffffffc234b4ae
0x00000000000b8f98 : call 0xffffffffc244d7a5
0x0000000000047ac6 : call 0xffffffffc28dbbee
0x000000000005734e : call 0xffffffffc28ebb59
0x0000000000076cf7 : call 0xffffffffc2916cff
0x0000000000076cf6 : call 0xffffffffc2916d00
0x000000000002f333 : call 0xffffffffc303088b
0x0000000000080af4 : call 0xffffffffc3081ed2
0x000000000009f6e4 : call 0xffffffffc309f6f4
0x00000000000fefc0 : call 0xffffffffc311d04c
0x00000000000ff050 : call 0xffffffffc311d0dc
0x00000000000ff0f0 : call 0xffffffffc311d17c
0x00000000000ff180 : call 0xffffffffc311d20c
0x00000000000ff210 : call 0xffffffffc311d29c
0x00000000000ff2a0 : call 0xffffffffc311d32c
0x00000000000ff340 : call 0xffffffffc311d3cc
0x00000000000ff3e0 : call 0xffffffffc311d46c
0x00000000000ff480 : call 0xffffffffc311d50c
0x00000000000ff510 : call 0xffffffffc311d59c
0x00000000000ff5ab : call 0xffffffffc311d637
0x00000000000ff640 : call 0xffffffffc311d6cc
0x00000000000ff83c : call 0xffffffffc311d8c8
0x00000000000ff992 : call 0xffffffffc311da1e
0x00000000000ffa22 : call 0xffffffffc311daae
0x00000000000ffab2 : call 0xffffffffc311db3e
0x00000000000ffb32 : call 0xffffffffc311dbbe
0x00000000000ffbc2 : call 0xffffffffc311dc4e
0x00000000000ffc42 : call 0xffffffffc311dcce
0x00000000000ffcd2 : call 0xffffffffc311dd5e
0x00000000000ffd62 : call 0xffffffffc311ddee
0x00000000000ffdf2 : call 0xffffffffc311de7e
0x00000000000ffe82 : call 0xffffffffc311df0e
0x00000000000fff0f : call 0xffffffffc311df9b
0x00000000000fff92 : call 0xffffffffc311e01e
0x000000000010016c : call 0xffffffffc311e1f8
0x00000000000fc2b2 : call 0xffffffffc313a33e
0x000000000004c05c : call 0xffffffffc32501a4
0x0000000000044e29 : call 0xffffffffc33d963a
0x00000000000473c8 : call 0xffffffffc33dbbd2
0x000000000008e8d3 : call 0xffffffffc34231e0
0x00000000000f4450 : call 0xffffffffc3488c5a
0x0000000000030e98 : call 0xffffffffc35f4ffe
0x000000000007ffbc : call 0xffffffffc398ffc4
0x0000000000152485 : call 0xffffffffc39b339e
0x0000000000153505 : call 0xffffffffc39b441e
0x000000000009ea47 : call 0xffffffffc3da7398
0x000000000009e957 : call 0xffffffffc40272a8
0x00000000000a1a97 : call 0xffffffffc402a3e8
0x0000000000167d7b : call 0xffffffffe2d7c68b
0x0000000000168183 : call 0xffffffffe6d7c993
0x0000000000168208 : call 0xffffffffe6d7ca18
0x0000000000168452 : call 0xffffffffe6d7cc62
0x0000000000051780 : call 0xffffffffe9051785
0x00000000000bae25 : call 0xffffffffeacd702d
0x0000000000046e02 : call 0xffffffffefa1f21f
0x0000000000046d92 : call 0xfffffffff011f1af
0x0000000000046d32 : call 0xfffffffff071f14f
0x0000000000046902 : call 0xfffffffff4a1ed1f
0x0000000000046622 : call 0xfffffffff781ea3f
0x00000000000461ca : call 0xfffffffffbd9e5e7
0x000000000003b646 : call 0xfffffffffc03db59
0x00000000000f78c5 : call 0xffffffffff6bba2b
0x0000000000064d56 : call 0xffffffffffc88b47
0x000000000012b78f : call qword ptr [r10]
0x0000000000036cd0 : call qword ptr [rax - 0x3d]
0x00000000000273dd : call qword ptr [rax]
0x000000000003a550 : call qword ptr [rbx]
0x000000000005d0cd : call qword ptr [rcx]
0x00000000000bc78d : call qword ptr [rdi]
0x0000000000058455 : call qword ptr [rdx]
0x0000000000071ad8 : call qword ptr [rip + 0x14c2fa]
0x0000000000061ad0 : call qword ptr [rip + 0x15c282]
0x0000000000031bc1 : call qword ptr [rip + 0x18c211]
0x0000000000031d04 : call qword ptr [rip + 0x18c226]
0x0000000000031b90 : call qword ptr [rip + 0x18c242]
0x0000000000031cc6 : call qword ptr [rip + 0x18c2dc]
0x0000000000116a68 : call qword ptr [rip + 0xa753a]
0x00000000000e9f30 : call qword ptr [rip + 0xd4072]
0x00000000000e9e0f : call qword ptr [rip + 0xd4193]
0x00000000000d67be : call qword ptr [rip + 0xe77e4]
0x00000000000c1bf6 : call qword ptr [rip + 0xfc20c]
0x0000000000107905 : call qword ptr [rsi + 0x74]
0x000000000004dd24 : call qword ptr [rsi]
0x000000000002ca3e : call r12
0x000000000002798a : call r14
0x0000000000027404 : call r15
0x0000000000107f47 : call r8
0x000000000011f951 : call rax
0x000000000003018c : call rbx
0x00000000000259b8 : call rcx
0x0000000000027405 : call rdi
0x000000000003a45a : call rdx
0x000000000002798b : call rsi
0x000000000002ca3f : call rsp
0x0000000000086d96 : cdq ; adc eax, dword ptr [rax] ; jae 0x86db9 ; lea rax, qword ptr [rdx - 8] ; ret
0x000000000007c27b : cdq ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000007dea3 : cdq ; call qword ptr [rbx]
0x000000000003aca8 : cdq ; idiv rsi ; ret
0x000000000010be92 : cdq ; mov rax, rdi ; ret
0x00000000000fe08e : cdq ; mov word ptr [rax], cs ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000001608df : cdq ; vzeroupper ; ret
0x00000000000e5600 : clc ; add al, 0xf ; xchg eax, esp ; ret
0x0000000000075b0d : clc ; add al, byte ptr [rcx - 0x73] ; inc ebx ; xor eax, eax ; ret
0x000000000003cf62 : clc ; add byte ptr [rax + rax], cl ; add byte ptr [rbp + 0x15], dh ; xor eax, eax ; ret
0x00000000000eb9ad : clc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], edi ; ret
0x0000000000083fc5 : clc ; add cl, byte ptr [rax + 0xf] ; ret 0xc083
0x00000000000763cf : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000005ca9e : clc ; add cl, byte ptr [rax - 0x77] ; ret 0x51ff
0x00000000000e5b1b : clc ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x000000000012ed01 : clc ; add dword ptr [rbp - 0x10], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000035302 : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x0000000000080c61 : clc ; add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x000000000008c5a3 : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b76ef : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x73e9
0x00000000001181d9 : clc ; add eax, 0x10 ; ret
0x00000000000badb6 : clc ; add eax, 0x2907f9c1 ; ret 0x8944
0x0000000000107741 : clc ; add ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0xc083
0x00000000000468d0 : clc ; add ecx, dword ptr [rdi] ; xchg eax, edi ; ret 0x8545
0x00000000001231fe : clc ; add esi, dword ptr [rsi + 0xe] ; mov eax, 2 ; ret
0x000000000015bc8f : clc ; add rax, r8 ; vzeroupper ; ret
0x0000000000093e97 : clc ; add rax, rcx ; ret
0x000000000015b5e4 : clc ; add rax, rcx ; vzeroupper ; ret
0x00000000000946cb : clc ; add rax, rsi ; ret
0x00000000000ce322 : clc ; and al, 0xf ; xchg eax, esp ; ret 0x394c
0x0000000000030665 : clc ; and eax, 0x7f ; ret
0x000000000010d499 : clc ; and eax, 0xffffff ; ret
0x00000000000a4e62 : clc ; and edx, 3 ; jne 0xa4e7e ; ret
0x000000000010d455 : clc ; bswap eax ; ret
0x00000000000389d2 : clc ; clc ; jne 0x389c6 ; xor eax, eax ; ret
0x0000000000038a22 : clc ; clc ; jne 0x38a16 ; xor eax, eax ; ret
0x00000000000488f1 : clc ; clc ; jne 0x488e7 ; mov rax, rdx ; ret
0x0000000000129d16 : clc ; cmc ; dec dword ptr [rbx - 0x76b7ff83] ; ret
0x0000000000118069 : clc ; cmc ; je 0x118065 ; pop rbx ; ret
0x00000000001630a9 : clc ; cmp rcx, rax ; jne 0x1630db ; xor eax, eax ; ret
0x00000000001630a8 : clc ; cmp rcx, rax ; jne 0x1630dc ; xor eax, eax ; ret
0x0000000000163ee9 : clc ; cmp rcx, rax ; jne 0x163f1b ; xor eax, eax ; ret
0x0000000000163ee8 : clc ; cmp rcx, rax ; jne 0x163f1c ; xor eax, eax ; ret
0x000000000003aca6 : clc ; cqo ; idiv rsi ; ret
0x00000000000873f4 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000004fd0e : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000083897 : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000071bfe : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x00000000000af46f : clc ; dec dword ptr [rcx - 0x39] ; ret 0xfffe
0x000000000005ff82 : clc ; dec dword ptr [rdi] ; test dword ptr [rdx - 0x76ffffa1], esi ; ret
0x0000000000038aef : clc ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd321
0x0000000000078fd1 : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000051752 : clc ; jmp rax
0x000000000016705a : clc ; jne 0x167167 ; ret
0x0000000000167059 : clc ; jne 0x167168 ; ret
0x00000000000389d3 : clc ; jne 0x389c5 ; xor eax, eax ; ret
0x0000000000038a23 : clc ; jne 0x38a15 ; xor eax, eax ; ret
0x00000000000488f2 : clc ; jne 0x488e6 ; mov rax, rdx ; ret
0x00000000000c8e16 : clc ; leave ; ret
0x0000000000073b79 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000742c6 : clc ; mov dword ptr [rcx], edi ; ret
0x000000000013e8f7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000013f267 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001441e7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000013f467 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000144157 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000013f667 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001440c7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000013e913 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a3fa2 : clc ; mov qword ptr [rdi], rcx ; ret
0x00000000001601d1 : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000001640b0 : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000a3b6e : clc ; mov qword ptr [rdi], rsi ; ret
0x0000000000051dfc : clc ; mov r14d, 1 ; jmp rax
0x000000000004a286 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000003561f : clc ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000024a00 : clc ; neg eax ; ret
0x00000000000bc789 : clc ; or cl, byte ptr [rax - 0x7d] ; call qword ptr [rdi]
0x0000000000069957 : clc ; or dh, byte ptr [rbp + rdx - 0x77] ; ret 0x854d
0x0000000000073b97 : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb904 : clc ; or rax, rsi ; ret
0x00000000000d14d0 : clc ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d14f5 : clc ; pop r14 ; pop r15 ; neg eax ; ret
0x00000000000817a4 : clc ; pop rbp ; pop r12 ; ret
0x000000000004d778 : clc ; pop rbx ; cmovb rax, rdi ; ret
0x0000000000090e3e : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000dd2de : clc ; push qword ptr [rax + rcx + 0x39] ; ret
0x00000000000754bc : clc ; push qword ptr [rax + rcx + 0x5b] ; ret
0x00000000000c4057 : clc ; push qword ptr [rbx + rax*2 - 0x77] ; ret 0xe283
0x000000000012c7d9 : clc ; push qword ptr [rbx + rdi*2 - 0x7d] ; ret 0x3901
0x0000000000136703 : clc ; push qword ptr [rcx + rcx + 0x48] ; add esp, 8 ; ret
0x0000000000070b3c : clc ; push qword ptr [rdx + rbp*4 - 0x77] ; ret 0xe283
0x00000000000e7496 : clc ; push qword ptr [rsi + rbx*8 + 0x39] ; ret
0x00000000000e7400 : clc ; push qword ptr [rsp + rbx*8 - 0x77] ; ret 0xc085
0x0000000000024a17 : clc ; ret
0x0000000000026e64 : clc ; ret 0x19
0x000000000010d465 : clc ; rol ax, 8 ; ret
0x000000000003ac37 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000010d32f : clc ; sar rax, 6 ; ret
0x000000000012e5c7 : clc ; sbb cl, byte ptr [rcx + 0x430f41c8] ; ret 0xf801
0x0000000000023ac3 : clc ; sbb dword ptr [rax], eax ; ret
0x0000000000048e1a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000010d519 : clc ; shr eax, 0x18 ; ret
0x00000000000b66bf : clc ; shr rax, 2 ; ret
0x000000000015f816 : clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000015b75b : clc ; vzeroupper ; ret
0x0000000000080ada : cld ; adc eax, dword ptr [rax] ; ret
0x00000000001187de : cld ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c9d12 : cld ; add byte ptr [rax], al ; ret
0x0000000000037bf0 : cld ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000a4070 : cld ; add eax, dword ptr [rax] ; ret
0x0000000000167152 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x167168 ; xor eax, eax ; ret
0x0000000000167151 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x167169 ; xor eax, eax ; ret
0x00000000000b995d : cld ; dec dword ptr [rax + 0x39] ; ret
0x000000000005bc9e : cld ; dec dword ptr [rax - 0x77] ; ret 0x7de9
0x000000000005a920 : cld ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000005e982 : cld ; dec dword ptr [rax - 0x77] ; ret 0xdae9
0x0000000000123d2d : cld ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000369fb : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00000000000a4186 : cld ; inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x00000000000a40bb : cld ; inc dword ptr [rbx] ; ret
0x0000000000119ba4 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000047531 : cld ; jmp 0x474f9
0x0000000000163cf6 : cld ; jne 0x163f2f ; xor eax, eax ; ret
0x0000000000167155 : cld ; jne 0x167165 ; xor eax, eax ; ret
0x0000000000167154 : cld ; jne 0x167166 ; xor eax, eax ; ret
0x0000000000167075 : cld ; jne 0x167167 ; ret
0x0000000000167074 : cld ; jne 0x167168 ; ret
0x000000000013f082 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013f285 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013f485 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013f685 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a3faa : cld ; mov dword ptr [rdi], ecx ; ret
0x00000000001601dc : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000001640c2 : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000a3b7c : cld ; mov dword ptr [rdi], esi ; ret
0x00000000000b6046 : cld ; mov dword ptr [rsi + rcx], edx ; test edx, edx ; jne 0xb6048 ; ret
0x00000000000a3b76 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000013ecb6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144376 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013ee96 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001442f6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013f076 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144276 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013ead6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001443f6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000004a240 : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000fe4ba : cld ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004a246 : cld ; ret
0x000000000013982b : cld ; ret 4
0x00000000000a4bb9 : cld ; test eax, eax ; jne 0xa4bd7 ; mov rax, rdi ; ret
0x0000000000164b56 : cld ; vzeroupper ; ret
0x000000000003773c : cli ; adc al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000000000003b3d4 : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00000000000b7aeb : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x148
0x0000000000084489 : cli ; add al, 0xf ; xchg dword ptr [rdi - 0x7d000000], ebp ; ret 0xe977
0x00000000000e557b : cli ; add al, 0xf ; xchg eax, esp ; ret
0x00000000000b7d48 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000beae6 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000005a751 : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000000cf189 : cli ; add dword ptr [rax + 0xf], ecx ; fmul dword ptr [r8 - 0x7d] ; ret
0x0000000000118d91 : cli ; add dword ptr [rbp - 0x55], esi ; jmp 0x118d5e
0x0000000000118e01 : cli ; add dword ptr [rbp - 0x55], esi ; mov eax, 0xffffffff ; ret
0x00000000000a3f95 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0xa3fa5 ; mov byte ptr [rdi], cl ; ret
0x000000000012fe63 : cli ; add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00000000000441ec : cli ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x2041
0x00000000001647af : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x00000000001640e0 : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000083da5 : cli ; add eax, 0x1be ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000b17ab : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000000b1804 : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000109a14 : cli ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f4fc0 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x000000000007b453 : cli ; and dword ptr [rdi], 0xffffffcf ; ret
0x00000000000f5645 : cli ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x8440
0x00000000000d12d3 : cli ; cmp byte ptr [rsi + 0x30], 0x11 ; je 0xd12e9 ; xor eax, eax ; ret
0x00000000000c2e83 : cli ; cmp esi, 1 ; je 0xc2e98 ; xor eax, eax ; ret
0x000000000007eb73 : cli ; cmp qword ptr [rdi + 0x38], 0 ; je 0x7eb88 ; ret
0x00000000000f83fb : cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000e5df1 : cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a6d13 : cli ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000c9c83 : cli ; inc dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000a408f : cli ; inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; ret
0x0000000000038afd : cli ; je 0x38b19 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006e79b : cli ; je 0x6e7c7 ; mov eax, 0xffffffff ; ret
0x00000000000fc1ab : cli ; je 0xfc1ef ; ret
0x000000000015fcdd : cli ; jg 0x15fcf0 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000001601c6 : cli ; jg 0x1601d6 ; vzeroupper ; ret
0x000000000016409b : cli ; jg 0x1640ae ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000016477a : cli ; jg 0x16478c ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000164a85 : cli ; jg 0x164a98 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000016509c : cli ; jg 0x1650ac ; vzeroupper ; ret
0x000000000008a5a2 : cli ; jl 0x8a5a4 ; dec dword ptr [rax + 1] ; ret
0x000000000003551b : cli ; jmp rdx
0x00000000000c9f1a : cli ; jne 0xc9f97 ; add byte ptr [rax], al ; setne al ; ret
0x00000000000caa45 : cli ; jnp 0xcaa5b ; xchg eax, esp ; ret 0xb60f
0x00000000000e0a15 : cli ; jnp 0xe0a2b ; xchg eax, esp ; ret 0xb60f
0x0000000000024313 : cli ; lea rax, qword ptr [rip + 0x15fb50] ; ret
0x0000000000024323 : cli ; lea rax, qword ptr [rip + 0x161989] ; ret
0x00000000000909cc : cli ; mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x00000000000908ff : cli ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000eb113 : cli ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000013f488 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000109783 : cli ; mov eax, 0x18 ; syscall ; ret
0x00000000000c9423 : cli ; mov eax, 0x27 ; syscall ; ret
0x00000000000ec2e3 : cli ; mov eax, 0x5f ; syscall ; ret
0x00000000000c9443 : cli ; mov eax, 0x66 ; syscall ; ret
0x00000000000c9463 : cli ; mov eax, 0x68 ; syscall ; ret
0x00000000000c9453 : cli ; mov eax, 0x6b ; syscall ; ret
0x00000000000c9473 : cli ; mov eax, 0x6c ; syscall ; ret
0x00000000000c9433 : cli ; mov eax, 0x6e ; syscall ; ret
0x00000000000c9703 : cli ; mov eax, 0x6f ; syscall ; ret
0x00000000000b78b3 : cli ; mov eax, 0xc9 ; syscall ; ret
0x00000000000fc343 : cli ; mov eax, 0xe4 ; syscall ; ret
0x000000000007ec33 : cli ; mov eax, 0xffffffff ; ret
0x0000000000120f23 : cli ; mov eax, 1 ; ret
0x0000000000123443 : cli ; mov eax, 2 ; ret
0x000000000007fed3 : cli ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000012fe73 : cli ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000eb103 : cli ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000f1c83 : cli ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000007a4a3 : cli ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000007a473 : cli ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00000000000c3c83 : cli ; mov eax, dword ptr [rdi] ; ret
0x000000000007b463 : cli ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x000000000007b473 : cli ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000038a53 : cli ; mov eax, dword ptr [rip + 0x1855ae] ; ret
0x0000000000038a43 : cli ; mov eax, dword ptr [rip + 0x1855c2] ; ret
0x0000000000030663 : cli ; mov eax, edi ; and eax, 0x7f ; ret
0x000000000010d453 : cli ; mov eax, edi ; bswap eax ; ret
0x000000000010d463 : cli ; mov eax, edi ; rol ax, 8 ; ret
0x000000000007f393 : cli ; mov rax, -1 ; ret
0x000000000012fae3 : cli ; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000c3c43 : cli ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000077f13 : cli ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000801a3 : cli ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000080183 : cli ; mov rax, qword ptr [rip + 0x13f335] ; ret
0x000000000002ca83 : cli ; mov rax, qword ptr [rip + 0x192e05] ; ret
0x00000000000251d3 : cli ; mov rax, qword ptr [rip + 0x19df5d] ; ret
0x00000000000251c3 : cli ; mov rax, qword ptr [rip + 0x19df75] ; ret
0x000000000003aca3 : cli ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x00000000000801b3 : cli ; mov rax, rdi ; ret
0x0000000000087a2f : cli ; mov rdi, r13 ; call rax
0x00000000000569f1 : cli ; mov rdx, r8 ; jmp 0x56a06
0x00000000000569f0 : cli ; mov rdx, r8 ; jmp 0x56a07
0x0000000000111dd8 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000037753 : cli ; movmskps eax, xmm0 ; and eax, 8 ; ret
0x00000000000eb0d3 : cli ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000094819 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000156176 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e56bd : cli ; or cl, byte ptr [rcx - 0x77] ; ret 0xf44
0x000000000003e7f7 : cli ; or dword ptr [rdi], ecx ; xchg eax, edi ; ret 0xd284
0x00000000000893e4 : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x3145
0x0000000000089392 : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xf631
0x000000000011b98a : cli ; or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd108
0x00000000000371b3 : cli ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x0000000000071a34 : cli ; push qword ptr [rcx + rdi + 0x48] ; mov eax, edx ; pop rbx ; ret
0x00000000000c9ef5 : cli ; push rsp ; push rbx ; setne al ; ret
0x00000000000a3eb6 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000023f93 : cli ; ret
0x0000000000071ada : cli ; ret 0x14
0x0000000000108b63 : cli ; setae al ; ret
0x000000000011478a : cli ; std ; jbe 0x114794 ; ret
0x0000000000099be9 : cli ; test rdx, rdx ; je 0x99c09 ; bsf rax, rdx ; ret
0x0000000000099b8c : cli ; test rdx, rdx ; je 0x99c19 ; bsf rax, rdx ; ret
0x0000000000099db8 : cli ; test rdx, rdx ; je 0x99de9 ; bsf rax, rdx ; ret
0x000000000007d9c3 : cli ; test rdx, rdx ; jne 0x7d9d8 ; xor eax, eax ; ret
0x00000000000a3ea3 : cli ; test rdx, rdx ; jne 0xa3eb6 ; mov rax, rdi ; ret
0x0000000000099cb3 : cli ; test rsi, rsi ; jne 0x99cc6 ; xor rax, rax ; ret
0x00000000000b6503 : cli ; test rsi, rsi ; jne 0xb6516 ; xor rax, rax ; ret
0x0000000000030673 : cli ; xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x0000000000109703 : cli ; xor eax, eax ; cmp rdi, rsi ; sete al ; ret
0x0000000000077f03 : cli ; xor eax, eax ; ret
0x000000000007a483 : cli ; xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x000000000007a493 : cli ; xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x000000000015a6e8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000ca2cf : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c91b8 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x3d48
0x00000000000cad40 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000129d17 : cmc ; dec dword ptr [rbx - 0x76b7ff83] ; ret
0x000000000011806a : cmc ; je 0x118064 ; pop rbx ; ret
0x00000000001442fa : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013ed0e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000166663 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000000d12e4 : cmc ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x0000000000166667 : cmc ; sub eax, edx ; ret
0x00000000000f0d7c : cmova eax, edx ; ret
0x00000000000807bd : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000000807bc : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000004d6dd : cmovb eax, edi ; ret
0x00000000000fd6e0 : cmovb eax, edx ; ret
0x000000000004d6dc : cmovb rax, rdi ; ret
0x00000000000fd6df : cmovb rax, rdx ; ret
0x0000000000109ad1 : cmovbe eax, edx ; add rsp, 0x20 ; pop rbx ; ret
0x000000000008946d : cmovbe eax, edx ; ret
0x00000000000f3bbe : cmove eax, ebx ; pop rbx ; ret
0x000000000003cf3e : cmove eax, ecx ; ret
0x000000000008a91c : cmove eax, edx ; add eax, 1 ; ret
0x00000000000b7958 : cmove eax, edx ; add rsp, 0x28 ; ret
0x00000000000873f7 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000003c5bf : cmove eax, edx ; jmp 0x3c5da
0x000000000002ffff : cmove eax, edx ; ret
0x000000000003b068 : cmove ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000569ef : cmove edi, edx ; mov rdx, r8 ; jmp 0x56a08
0x000000000007a580 : cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000f3bbd : cmove rax, rbx ; pop rbx ; ret
0x00000000000a4094 : cmove rax, rcx ; ret
0x000000000008a93d : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000b7957 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x00000000000873f6 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000003c5be : cmove rax, rdx ; jmp 0x3c5db
0x000000000002fffe : cmove rax, rdx ; ret
0x000000000003b067 : cmove rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x00000000000569ee : cmove rdi, rdx ; mov rdx, r8 ; jmp 0x56a09
0x00000000000569ed : cmove rdi, rdx ; mov rdx, r8 ; jmp 0x56a0a
0x0000000000074f3b : cmovg eax, ecx ; test rdx, rdx ; jne 0x74f38 ; ret
0x000000000007e513 : cmovg eax, ecx ; test rdx, rdx ; jne 0x7e510 ; ret
0x00000000000b6012 : cmovg eax, edx ; ret
0x00000000000b72a2 : cmovg edx, eax ; mov rax, rdx ; ret
0x0000000000074f3a : cmovg rax, rcx ; test rdx, rdx ; jne 0x74f39 ; ret
0x000000000007e512 : cmovg rax, rcx ; test rdx, rdx ; jne 0x7e511 ; ret
0x00000000000b72a1 : cmovg rdx, rax ; mov rax, rdx ; ret
0x000000000003cf56 : cmovne eax, ecx ; ret
0x000000000008c377 : cmovne eax, edi ; ret
0x000000000012c6c6 : cmovne eax, edx ; add rsp, 8 ; ret
0x00000000000d5cc8 : cmovne eax, edx ; pop rbx ; ret
0x000000000008923e : cmovne eax, edx ; ret
0x000000000015f194 : cmovne eax, edx ; vzeroupper ; ret
0x00000000000c82c6 : cmovne edx, eax ; mov rax, rdx ; ret
0x0000000000077ee4 : cmovne rax, rcx ; ret
0x000000000008c376 : cmovne rax, rdi ; ret
0x000000000012c6c5 : cmovne rax, rdx ; add rsp, 8 ; ret
0x000000000008923d : cmovne rax, rdx ; ret
0x000000000015f193 : cmovne rax, rdx ; vzeroupper ; ret
0x00000000000c82c5 : cmovne rdx, rax ; mov rax, rdx ; ret
0x0000000000103cb1 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000002e9b5 : cmovns eax, dword ptr [rcx] ; ror byte ptr [rax - 0x77], 1 ; ret 0x8349
0x00000000000f260c : cmovns eax, edx ; ret
0x0000000000103cb0 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000caee6 : cmovs eax, dword ptr [rbx + 0x394810c2] ; ret
0x0000000000048590 : cmovs eax, dword ptr [rbx + 0x5d5b10c4] ; pop r12 ; ret
0x0000000000121fa8 : cmovs eax, dword ptr [rbx - 0x3fcef73c] ; pop rbx ; pop rbp ; ret
0x0000000000094390 : cmovs eax, dword ptr [rbx - 0x7cb7ef39] ; ret 0x4810
0x0000000000027210 : cmovs eax, edx ; ret
0x000000000010bb40 : cmovs ecx, dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x0000000000089090 : cmovs ecx, dword ptr [rcx - 0x3f76b3c9] ; ret
0x00000000000a403e : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x00000000000a40d0 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x000000000015ade8 : cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x000000000015aa34 : cmp ah, byte ptr [rbx + 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000015ab6f : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000015a874 : cmp ah, byte ptr [rbx - 0x2e] ; cmp cl, byte ptr [rax - 0x7d] ; ret 0x2910
0x00000000000d2e3c : cmp al, 0x11 ; je 0xd2e4e ; xor eax, eax ; ret
0x00000000000d2e3b : cmp al, 0x11 ; je 0xd2e4f ; xor eax, eax ; ret
0x0000000000026108 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf0e9
0x000000000008c3c5 : cmp al, 0x24 ; add byte ptr [rsi + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000012c165 : cmp al, 0x24 ; call rax
0x00000000001373c0 : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x170] ; jmp rax
0x000000000011ecfe : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000cce44 : cmp al, 0x3f ; jne 0xcce39 ; mov eax, 1 ; ret
0x00000000000f4d78 : cmp al, 0x48 ; add esp, 0x38 ; ret
0x0000000000036357 : cmp al, 0x5f ; jne 0x36329 ; mov rdx, r8 ; jmp 0x3638f
0x0000000000065563 : cmp al, 0x89 ; ret 0xc083
0x00000000000b8554 : cmp al, 0x8d ; je 0xb8594 ; inc dword ptr [rcx] ; ret 0xb70f
0x0000000000035622 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x00000000000d682e : cmp al, 0xd8 ; add rbx, 1 ; call 0xd2ae8
0x0000000000163cd3 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016bd2b : cmp al, 5 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000009f990 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x0000000000102601 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x7e859
0x0000000000113461 : cmp al, byte ptr [rdi] ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000166b26 : cmp al, byte ptr [rsi - 1] ; jne 0x166b4c ; xor eax, eax ; ret
0x00000000000940b6 : cmp al, dh ; ret
0x00000000000940b5 : cmp al, r14b ; ret
0x000000000003684a : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x0000000000029476 : cmp bh, bh ; rol dword ptr [rcx - 0x77], cl ; ret 0x5a58
0x00000000000fecdc : cmp bl, 0xff ; dec dword ptr [rax + 0xf] ; ret 0xc748
0x00000000000f7a26 : cmp bl, byte ptr [rbx + 0x5d] ; ret
0x0000000000105944 : cmp bl, ch ; ret
0x00000000000b5f16 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000d4136 : cmp byte ptr [r15], r9b ; test dl, dl ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000076714 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000000dfe6d : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001038fe : cmp byte ptr [r9 + r9*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004eec9 : cmp byte ptr [rax + 0x39], cl ; ret
0x000000000007bf9d : cmp byte ptr [rax + 0x39], cl ; ret 0x1d75
0x000000000007be8f : cmp byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000047394 : cmp byte ptr [rax + 1], 0 ; jne 0x47397 ; pop rbx ; ret
0x00000000000940f7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000000d9e3c : cmp byte ptr [rax - 0x73], cl ; jl 0xd9e6d ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000029035 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000076715 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000000f9675 : cmp byte ptr [rax - 0x76b7d006], al ; ret 0x1175
0x0000000000047258 : cmp byte ptr [rax - 0x77], cl ; ret
0x000000000007b8ff : cmp byte ptr [rax - 0x77], cl ; ret 0x1b8
0x0000000000106676 : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000106675 : cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x00000000001216e9 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000001232b0 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebx ; call rdx
0x0000000000071bfb : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000035665 : cmp byte ptr [rax - 0x7d], cl ; ret
0x000000000002e639 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f4e96 : cmp byte ptr [rax - 1], bh ; ret
0x00000000001536d8 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000940e6 : cmp byte ptr [rax], ah ; ret
0x0000000000090b36 : cmp byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000002718f : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000007eb77 : cmp byte ptr [rax], al ; je 0x7eb84 ; ret
0x00000000000dfe6e : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000099424 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x00000000000945c6 : cmp byte ptr [rax], dh ; ret
0x00000000000940d6 : cmp byte ptr [rax], dl ; ret
0x00000000000940d5 : cmp byte ptr [rax], r10b ; ret
0x00000000000940e5 : cmp byte ptr [rax], r12b ; ret
0x00000000000945c5 : cmp byte ptr [rax], r14b ; ret
0x0000000000099423 : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000b5f1a : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000b5f19 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000f9822 : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000001068d9 : cmp byte ptr [rbp - 0x77], cl ; sbb byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000001068d8 : cmp byte ptr [rbp - 0x77], r9b ; sbb byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000016b321 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x0000000000025e61 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000044d6d : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000d2b68 : cmp byte ptr [rbx + 0x63], 0 ; jne 0xd2b77 ; pop rbx ; ret
0x00000000000b5f17 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000130e85 : cmp byte ptr [rcx + 0x39], cl ; ret
0x00000000001038ff : cmp byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078c64 : cmp byte ptr [rcx + rcx*4 - 0x30], al ; ret
0x00000000000fdb6a : cmp byte ptr [rcx], 0 ; je 0xfdb75 ; ret
0x00000000001536d9 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x0000000000056d64 : cmp byte ptr [rcx], ch ; ret 0x8341
0x00000000000a0de4 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x000000000003accc : cmp byte ptr [rdi], 0 ; jne 0x3acde ; pop rbx ; ret
0x000000000007eb2c : cmp byte ptr [rdi], cl ; ret 0x389
0x00000000000d4137 : cmp byte ptr [rdi], cl ; test dl, dl ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000125da0 : cmp byte ptr [rdi], cl ; xchg eax, edx ; ret 0x975
0x0000000000103f95 : cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5422
0x000000000016257d : cmp byte ptr [rdi], dl ; ret
0x0000000000163090 : cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000163079 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000163062 : cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000161b1e : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a5fc4 : cmp byte ptr [rip + 0xf480001], al ; ret 0xfc3
0x000000000002f31d : cmp byte ptr [rsi + 0x17], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000115fde : cmp byte ptr [rsi + 0x2e], bh ; call 0x222e8
0x00000000000d12d4 : cmp byte ptr [rsi + 0x30], 0x11 ; je 0xd12e8 ; xor eax, eax ; ret
0x00000000000f4286 : cmp byte ptr [rsi], 0 ; lea rdx, qword ptr [rsi + 1] ; jne 0xf4269 ; ret
0x00000000000d5cd9 : cmp byte ptr [rsi], cl ; je 0xd5c76 ; ret
0x000000000005cb47 : cmp ch, al ; ret
0x00000000000c721a : cmp ch, byte ptr [rbx + 0xf] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000015ab72 : cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000b7270 : cmp cl, al ; je 0xb7288 ; mov rax, rdx ; pop rbx ; ret
0x00000000000eaf4d : cmp cl, byte ptr [rax + 0x63] ; ret 0xc283
0x00000000000811a2 : cmp cl, byte ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7502
0x000000000011ab65 : cmp cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0xc601
0x000000000015a877 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x2910
0x00000000000d506b : cmp cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000053770 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000133a22 : cmp cl, byte ptr [rbp - 0x76b70005] ; ret
0x000000000015f191 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x0000000000116a6a : cmp dh, byte ptr [rbp + 0xa] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c7da9 : cmp dh, byte ptr [rbx + rdx - 0x7c] ; sal byte ptr [rdi + rcx + 0x48], 0x83 ; ret
0x000000000016507e : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000009a135 : cmp dh, dh ; ret 0x7501
0x00000000000da352 : cmp dh, dh ; ret 0xf08
0x00000000000f96ae : cmp dl, 0x2f ; jne 0xf9708 ; mov rdx, rax ; jmp 0xf96cd
0x00000000000a3f94 : cmp dl, 1 ; ja 0xa3fb7 ; jb 0xa3fa6 ; mov byte ptr [rdi], cl ; ret
0x00000000001640df : cmp dl, 1 ; jb 0x1640f1 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001647ae : cmp dl, 1 ; jb 0x1647bc ; mov byte ptr [rdi], cl ; ret
0x0000000000089431 : cmp dl, 3 ; je 0x89447 ; movsx eax, dl ; ret
0x0000000000089431 : cmp dl, 3 ; je 0x89448 ; movsx eax, dl ; ret
0x0000000000086e15 : cmp dl, al ; jne 0x86e08 ; sub rax, 0x10 ; ret
0x0000000000086e14 : cmp dl, r8b ; jne 0x86e09 ; sub rax, 0x10 ; ret
0x00000000000f9666 : cmp dword ptr [rax + 0x39], ecx ; ret
0x0000000000071d88 : cmp dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000d5068 : cmp dword ptr [rax + 9], ecx ; cmp cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000001306b7 : cmp dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000fdb6b : cmp dword ptr [rax], eax ; je 0xfdb74 ; ret
0x0000000000143e28 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000104b25 : cmp dword ptr [rdi + 0x10], 0 ; je 0x104b38 ; xor eax, eax ; ret
0x000000000007a458 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000011d67d : cmp dword ptr [rdi + 0x18], eax ; sete al ; ret
0x000000000012fef2 : cmp dword ptr [rdi + 0x20], esi ; jbe 0x12ff08 ; add dword ptr [rdi + 0x28], esi ; ret
0x000000000007eb75 : cmp dword ptr [rdi + 0x38], 0 ; je 0x7eb86 ; ret
0x000000000011d666 : cmp dword ptr [rdi + 4], ecx ; sete dl ; and eax, edx ; ret
0x0000000000108afe : cmp dword ptr [rdi], 0 ; je 0x108b0d ; ret
0x00000000000d2e2b : cmp dword ptr [rdi], edx ; jg 0xd2e24 ; ret
0x0000000000077ee2 : cmp dword ptr [rdx + 0x48], eax ; cmovne eax, ecx ; ret
0x0000000000023adf : cmp dword ptr [rdx + 0xd8], eax ; jne 0x23ab3 ; ret
0x00000000000b9153 : cmp dword ptr [rdx], ebp ; or eax, 0x440f4800 ; ret 0x8d48
0x0000000000088485 : cmp dword ptr [rip + 0x138384], 0 ; je 0x88499 ; ret
0x000000000007549c : cmp dword ptr [rsi + 0x30], 0 ; je 0x754ae ; ret
0x0000000000082041 : cmp dword ptr [rsi - 0x76b7ffed], 0x10 ; ret
0x00000000000f7551 : cmp dword ptr [rsi], 0 ; mov rbx, rsi ; je 0xf7569 ; pop rbx ; ret
0x00000000000e3b7e : cmp dx, 2 ; je 0xe3b8e ; ret
0x00000000000f0fb1 : cmp eax, -0x5f ; je 0xf0fc8 ; neg eax ; pop rbx ; ret
0x00000000000f1211 : cmp eax, -0x5f ; je 0xf1228 ; neg eax ; pop rbx ; ret
0x0000000000118068 : cmp eax, -0xb ; je 0x118066 ; pop rbx ; ret
0x0000000000136702 : cmp eax, -1 ; je 0x136719 ; add rsp, 8 ; ret
0x000000000006e780 : cmp eax, -1 ; je 0x6e795 ; ret
0x00000000000754bb : cmp eax, -1 ; je 0x754ce ; pop rbx ; ret
0x00000000000389d1 : cmp eax, -8 ; jne 0x389c7 ; xor eax, eax ; ret
0x0000000000038a21 : cmp eax, -8 ; jne 0x38a17 ; xor eax, eax ; ret
0x00000000000488f0 : cmp eax, -8 ; jne 0x488e8 ; mov rax, rdx ; ret
0x0000000000084d4d : cmp eax, 0x10466e ; call 0x80f87
0x000000000002411f : cmp eax, 0x163a94 ; call 0x30357
0x0000000000080a68 : cmp eax, 0x2000000 ; jbe 0x80a77 ; ret
0x00000000000cac51 : cmp eax, 0x4000 ; sete dl ; jmp 0xcac1f
0x00000000000e0c21 : cmp eax, 0x4000 ; sete dl ; jmp 0xe0bef
0x00000000000375df : cmp eax, 0x4800131c ; add esp, 0x10 ; pop rbx ; ret
0x000000000012ba99 : cmp eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000000e29df : cmp eax, 0x48ffffff ; add esp, 0x18 ; ret
0x000000000016bfb6 : cmp eax, 0x53c05 ; call 0xf8247
0x000000000015f584 : cmp eax, 0x89000001 ; ret 0x8948
0x000000000005266e : cmp eax, 0x89000009 ; ret 0xc083
0x000000000008c9bf : cmp eax, 0x89fffff7 ; ret
0x00000000000f5021 : cmp eax, 0x90f04 ; call 0x71288
0x000000000008caff : cmp eax, 0xba ; add byte ptr [rax + 0xf], cl ; ret 0xc3c3
0x000000000007a125 : cmp eax, 0xc7480014 ; ret 0xffff
0x00000000000f64bf : cmp eax, 0xc7ce4 ; ret
0x00000000000ae3cb : cmp eax, 0xff ; je 0xae3da ; ret
0x000000000010999c : cmp eax, 0xfffff000 ; ja 0x1099af ; ret
0x0000000000109a56 : cmp eax, 0xfffff000 ; ja 0x109a67 ; ret
0x000000000010b7fe : cmp eax, 0xfffff000 ; ja 0x10b817 ; ret
0x000000000010b8d1 : cmp eax, 0xfffff000 ; ja 0x10b8e7 ; ret
0x0000000000038042 : cmp eax, 0xfffff000 ; ja 0x38057 ; ret
0x00000000000380b1 : cmp eax, 0xfffff000 ; ja 0x380c7 ; ret
0x00000000000380fe : cmp eax, 0xfffff000 ; ja 0x38157 ; ret
0x000000000003bb39 : cmp eax, 0xfffff000 ; ja 0x3bb9f ; ret
0x000000000006e6fc : cmp eax, 0xfffff000 ; ja 0x6e70f ; ret
0x000000000006e72f : cmp eax, 0xfffff000 ; ja 0x6e747 ; ret
0x00000000000b798c : cmp eax, 0xfffff000 ; ja 0xb799f ; ret
0x00000000000c3c5c : cmp eax, 0xfffff000 ; ja 0xc3c6f ; ret
0x00000000000c8326 : cmp eax, 0xfffff000 ; ja 0xc837f ; ret
0x00000000000c83bc : cmp eax, 0xfffff000 ; ja 0xc841f ; ret
0x00000000000c84af : cmp eax, 0xfffff000 ; ja 0xc851f ; ret
0x00000000000c85f9 : cmp eax, 0xfffff000 ; ja 0xc863f ; ret
0x00000000000c8679 : cmp eax, 0xfffff000 ; ja 0xc86d7 ; ret
0x00000000000eabec : cmp eax, 0xfffff000 ; ja 0xeac57 ; ret
0x00000000000eac9c : cmp eax, 0xfffff000 ; ja 0xead07 ; ret
0x00000000000ebd9a : cmp eax, 0xfffff000 ; ja 0xebdaf ; ret
0x00000000000ebdf8 : cmp eax, 0xfffff000 ; ja 0xebe07 ; ret
0x00000000000ebe4a : cmp eax, 0xfffff000 ; ja 0xebe5f ; ret
0x00000000000ec0a2 : cmp eax, 0xfffff000 ; ja 0xec0b7 ; ret
0x00000000000ec106 : cmp eax, 0xfffff000 ; ja 0xec117 ; ret
0x00000000000ec15e : cmp eax, 0xfffff000 ; ja 0xec177 ; ret
0x00000000000ec389 : cmp eax, 0xfffff000 ; ja 0xec39f ; ret
0x00000000000ec776 : cmp eax, 0xfffff000 ; ja 0xec7d7 ; ret
0x00000000000ec819 : cmp eax, 0xfffff000 ; ja 0xec87f ; ret
0x00000000000ec8bc : cmp eax, 0xfffff000 ; ja 0xec8cf ; ret
0x00000000000ec8ec : cmp eax, 0xfffff000 ; ja 0xec8ff ; ret
0x00000000000ece99 : cmp eax, 0xfffff000 ; ja 0xecee7 ; ret
0x00000000000ed019 : cmp eax, 0xfffff000 ; ja 0xed06f ; ret
0x00000000000f0be9 : cmp eax, 0xfffff000 ; ja 0xf0c4f ; ret
0x00000000000f1694 : cmp eax, 0xfffff000 ; ja 0xf16a7 ; ret
0x00000000000f16e8 : cmp eax, 0xfffff000 ; ja 0xf16f7 ; ret
0x00000000000f17bc : cmp eax, 0xfffff000 ; ja 0xf1827 ; ret
0x00000000000f186c : cmp eax, 0xfffff000 ; ja 0xf18d7 ; ret
0x00000000000f190c : cmp eax, 0xfffff000 ; ja 0xf191f ; ret
0x00000000000f1a2c : cmp eax, 0xfffff000 ; ja 0xf1a3f ; ret
0x00000000000f1bbc : cmp eax, 0xfffff000 ; ja 0xf1bcf ; ret
0x00000000000f1be9 : cmp eax, 0xfffff000 ; ja 0xf1bff ; ret
0x00000000000f1c1f : cmp eax, 0xfffff000 ; ja 0xf1c37 ; ret
0x00000000000f1c5c : cmp eax, 0xfffff000 ; ja 0xf1c6f ; ret
0x00000000000f2033 : cmp eax, 0xfffff000 ; ja 0xf2087 ; ret
0x00000000000f2245 : cmp eax, 0xfffff000 ; ja 0xf2257 ; ret
0x00000000000f2286 : cmp eax, 0xfffff000 ; ja 0xf2297 ; ret
0x00000000000f2849 : cmp eax, 0xfffff000 ; ja 0xf28af ; ret
0x00000000000f28f9 : cmp eax, 0xfffff000 ; ja 0xf295f ; ret
0x00000000000f29af : cmp eax, 0xfffff000 ; ja 0xf2a27 ; ret
0x00000000000f2a6f : cmp eax, 0xfffff000 ; ja 0xf2ae7 ; ret
0x00000000000f343c : cmp eax, 0xfffff000 ; ja 0xf34af ; ret
0x00000000000f3659 : cmp eax, 0xfffff000 ; ja 0xf36a7 ; ret
0x00000000000f3719 : cmp eax, 0xfffff000 ; ja 0xf3767 ; ret
0x00000000000f37d8 : cmp eax, 0xfffff000 ; ja 0xf37e7 ; ret
0x00000000000f4bec : cmp eax, 0xfffff000 ; ja 0xf4bff ; ret
0x00000000000f4dd1 : cmp eax, 0xfffff000 ; ja 0xf4de7 ; ret
0x00000000000f4e0c : cmp eax, 0xfffff000 ; ja 0xf4e1f ; ret
0x00000000000f4e3c : cmp eax, 0xfffff000 ; ja 0xf4e4f ; ret
0x00000000000f67d9 : cmp eax, 0xfffff000 ; ja 0xf683f ; ret
0x00000000000f8f83 : cmp eax, 0xfffff000 ; ja 0xf8f97 ; ret
0x00000000000fbb8c : cmp eax, 0xfffff000 ; ja 0xfbb9f ; ret
0x00000000000fbc32 : cmp eax, 0xfffff000 ; ja 0xfbcaf ; ret
0x00000000000fbce4 : cmp eax, 0xfffff000 ; ja 0xfbcf7 ; ret
0x00000000000fbe1c : cmp eax, 0xfffff000 ; ja 0xfbe87 ; ret
0x00000000000fbecc : cmp eax, 0xfffff000 ; ja 0xfbf37 ; ret
0x00000000000fbf7c : cmp eax, 0xfffff000 ; ja 0xfbfe7 ; ret
0x00000000000fc02c : cmp eax, 0xfffff000 ; ja 0xfc0af ; ret
0x00000000000fc0f9 : cmp eax, 0xfffff000 ; ja 0xfc157 ; ret
0x00000000000fc214 : cmp eax, 0xfffff000 ; ja 0xfc227 ; ret
0x00000000000fcaa9 : cmp eax, 0xfffff000 ; ja 0xfcb07 ; ret
0x00000000000fcb79 : cmp eax, 0xfffff000 ; ja 0xfcbd7 ; ret
0x00000000000fcce2 : cmp eax, 0xfffff000 ; ja 0xfcd57 ; ret
0x00000000000fcd9c : cmp eax, 0xfffff000 ; ja 0xfce1f ; ret
0x00000000000fce69 : cmp eax, 0xfffff000 ; ja 0xfcecf ; ret
0x00000000000fcf22 : cmp eax, 0xfffff000 ; ja 0xfcf97 ; ret
0x00000000000fcfd9 : cmp eax, 0xfffff000 ; ja 0xfd03f ; ret
0x00000000000fd08c : cmp eax, 0xfffff000 ; ja 0xfd10f ; ret
0x00000000000fd48c : cmp eax, 0xfffff000 ; ja 0xfd4f7 ; ret
0x00000000000fd53c : cmp eax, 0xfffff000 ; ja 0xfd5af ; ret
0x00000000000fd5ec : cmp eax, 0xfffff000 ; ja 0xfd657 ; ret
0x00000000000fd78c : cmp eax, 0xfffff000 ; ja 0xfd7f7 ; ret
0x00000000000fd83c : cmp eax, 0xfffff000 ; ja 0xfd8b7 ; ret
0x00000000000fd8ec : cmp eax, 0xfffff000 ; ja 0xfd8ff ; ret
0x00000000000fd91c : cmp eax, 0xfffff000 ; ja 0xfd92f ; ret
0x00000000000fd94c : cmp eax, 0xfffff000 ; ja 0xfd95f ; ret
0x00000000000fd97c : cmp eax, 0xfffff000 ; ja 0xfd98f ; ret
0x00000000000fda5f : cmp eax, 0xfffff000 ; ja 0xfda77 ; ret
0x00000000000fda9c : cmp eax, 0xfffff000 ; ja 0xfdaaf ; ret
0x00000000000fdacc : cmp eax, 0xfffff000 ; ja 0xfdadf ; ret
0x00000000000fdaff : cmp eax, 0xfffff000 ; ja 0xfdb17 ; ret
0x00000000000fdb3c : cmp eax, 0xfffff000 ; ja 0xfdb4f ; ret
0x000000000013443f : cmp eax, 0xfffff001 ; jae 0x13444e ; ret
0x000000000013448f : cmp eax, 0xfffff001 ; jae 0x13449e ; ret
0x000000000003807c : cmp eax, 0xfffff001 ; jae 0x3808b ; ret
0x00000000000385bc : cmp eax, 0xfffff001 ; jae 0x385cb ; ret
0x0000000000047e92 : cmp eax, 0xfffff001 ; jae 0x47ea5 ; xor eax, eax ; ret
0x00000000000b7a7c : cmp eax, 0xfffff001 ; jae 0xb7a8b ; ret
0x00000000000ba38c : cmp eax, 0xfffff001 ; jae 0xba39b ; ret
0x00000000000ba3bc : cmp eax, 0xfffff001 ; jae 0xba3cb ; ret
0x00000000000c827c : cmp eax, 0xfffff001 ; jae 0xc828b ; ret
0x00000000000c846f : cmp eax, 0xfffff001 ; jae 0xc847e ; ret
0x00000000000c854c : cmp eax, 0xfffff001 ; jae 0xc855b ; ret
0x00000000000c898c : cmp eax, 0xfffff001 ; jae 0xc899b ; ret
0x00000000000c948c : cmp eax, 0xfffff001 ; jae 0xc949b ; ret
0x00000000000c96ac : cmp eax, 0xfffff001 ; jae 0xc96bb ; ret
0x00000000000c96dc : cmp eax, 0xfffff001 ; jae 0xc96eb ; ret
0x00000000000c973c : cmp eax, 0xfffff001 ; jae 0xc974b ; ret
0x00000000000c976c : cmp eax, 0xfffff001 ; jae 0xc977b ; ret
0x00000000000c979c : cmp eax, 0xfffff001 ; jae 0xc97ab ; ret
0x00000000000c97cc : cmp eax, 0xfffff001 ; jae 0xc97db ; ret
0x00000000000e2a5c : cmp eax, 0xfffff001 ; jae 0xe2a6b ; ret
0x00000000000e2a8c : cmp eax, 0xfffff001 ; jae 0xe2a9b ; ret
0x00000000000e2abc : cmp eax, 0xfffff001 ; jae 0xe2acb ; ret
0x00000000000e2aec : cmp eax, 0xfffff001 ; jae 0xe2afb ; ret
0x00000000000e2b1c : cmp eax, 0xfffff001 ; jae 0xe2b2b ; ret
0x00000000000e2b4c : cmp eax, 0xfffff001 ; jae 0xe2b5b ; ret
0x00000000000e2b7c : cmp eax, 0xfffff001 ; jae 0xe2b8b ; ret
0x00000000000e2bac : cmp eax, 0xfffff001 ; jae 0xe2bbb ; ret
0x00000000000ebcbc : cmp eax, 0xfffff001 ; jae 0xebccb ; ret
0x00000000000ec1ac : cmp eax, 0xfffff001 ; jae 0xec1bb ; ret
0x00000000000ec1dc : cmp eax, 0xfffff001 ; jae 0xec1eb ; ret
0x00000000000ec2fc : cmp eax, 0xfffff001 ; jae 0xec30b ; ret
0x00000000000ec32c : cmp eax, 0xfffff001 ; jae 0xec33b ; ret
0x00000000000ec3ec : cmp eax, 0xfffff001 ; jae 0xec3fb ; ret
0x00000000000ec41c : cmp eax, 0xfffff001 ; jae 0xec42b ; ret
0x00000000000ecd3c : cmp eax, 0xfffff001 ; jae 0xecd4b ; ret
0x00000000000ecf1c : cmp eax, 0xfffff001 ; jae 0xecf2b ; ret
0x00000000000ecf4c : cmp eax, 0xfffff001 ; jae 0xecf5b ; ret
0x00000000000ecf7c : cmp eax, 0xfffff001 ; jae 0xecf8b ; ret
0x00000000000ecfac : cmp eax, 0xfffff001 ; jae 0xecfbb ; ret
0x00000000000ecfdc : cmp eax, 0xfffff001 ; jae 0xecfeb ; ret
0x00000000000ed09c : cmp eax, 0xfffff001 ; jae 0xed0ab ; ret
0x00000000000ed0cc : cmp eax, 0xfffff001 ; jae 0xed0db ; ret
0x00000000000ed98c : cmp eax, 0xfffff001 ; jae 0xed99b ; ret
0x00000000000ed9bc : cmp eax, 0xfffff001 ; jae 0xed9cb ; ret
0x00000000000ed9ec : cmp eax, 0xfffff001 ; jae 0xed9fb ; ret
0x00000000000eda1f : cmp eax, 0xfffff001 ; jae 0xeda2e ; ret
0x00000000000ee20c : cmp eax, 0xfffff001 ; jae 0xee21b ; ret
0x00000000000ee23f : cmp eax, 0xfffff001 ; jae 0xee24e ; ret
0x00000000000ee26c : cmp eax, 0xfffff001 ; jae 0xee27b ; ret
0x00000000000ee29c : cmp eax, 0xfffff001 ; jae 0xee2ab ; ret
0x00000000000ee2cc : cmp eax, 0xfffff001 ; jae 0xee2db ; ret
0x00000000000ee2ff : cmp eax, 0xfffff001 ; jae 0xee30e ; ret
0x00000000000ee32c : cmp eax, 0xfffff001 ; jae 0xee33b ; ret
0x00000000000ee35c : cmp eax, 0xfffff001 ; jae 0xee36b ; ret
0x00000000000ee38c : cmp eax, 0xfffff001 ; jae 0xee39b ; ret
0x00000000000f124f : cmp eax, 0xfffff001 ; jae 0xf125e ; ret
0x00000000000f22bc : cmp eax, 0xfffff001 ; jae 0xf22cb ; ret
0x00000000000f263c : cmp eax, 0xfffff001 ; jae 0xf264b ; ret
0x00000000000f280c : cmp eax, 0xfffff001 ; jae 0xf281b ; ret
0x00000000000f329c : cmp eax, 0xfffff001 ; jae 0xf32ab ; ret
0x00000000000f33fc : cmp eax, 0xfffff001 ; jae 0xf340b ; ret
0x00000000000f35ec : cmp eax, 0xfffff001 ; jae 0xf35fb ; ret
0x00000000000f361c : cmp eax, 0xfffff001 ; jae 0xf362b ; ret
0x00000000000f36dc : cmp eax, 0xfffff001 ; jae 0xf36eb ; ret
0x00000000000f379c : cmp eax, 0xfffff001 ; jae 0xf37ab ; ret
0x00000000000f3adc : cmp eax, 0xfffff001 ; jae 0xf3aeb ; ret
0x00000000000f3b0c : cmp eax, 0xfffff001 ; jae 0xf3b1b ; ret
0x00000000000f3b3c : cmp eax, 0xfffff001 ; jae 0xf3b4b ; ret
0x00000000000f64ee : cmp eax, 0xfffff001 ; jae 0xf64fd ; ret
0x00000000000f676c : cmp eax, 0xfffff001 ; jae 0xf677b ; ret
0x00000000000f679c : cmp eax, 0xfffff001 ; jae 0xf67ab ; ret
0x00000000000f686c : cmp eax, 0xfffff001 ; jae 0xf687b ; ret
0x00000000000f689c : cmp eax, 0xfffff001 ; jae 0xf68ab ; ret
0x00000000000f68cf : cmp eax, 0xfffff001 ; jae 0xf68de ; ret
0x00000000000f68fc : cmp eax, 0xfffff001 ; jae 0xf690b ; ret
0x00000000000f692c : cmp eax, 0xfffff001 ; jae 0xf693b ; ret
0x00000000000f695c : cmp eax, 0xfffff001 ; jae 0xf696b ; ret
0x00000000000f698c : cmp eax, 0xfffff001 ; jae 0xf699b ; ret
0x00000000000f983f : cmp eax, 0xfffff001 ; jae 0xf984e ; ret
0x00000000000f986c : cmp eax, 0xfffff001 ; jae 0xf987b ; ret
0x00000000000f989c : cmp eax, 0xfffff001 ; jae 0xf98ab ; ret
0x00000000000f98cf : cmp eax, 0xfffff001 ; jae 0xf98de ; ret
0x00000000000f98ff : cmp eax, 0xfffff001 ; jae 0xf990e ; ret
0x00000000000f992c : cmp eax, 0xfffff001 ; jae 0xf993b ; ret
0x00000000000f995f : cmp eax, 0xfffff001 ; jae 0xf996e ; ret
0x00000000000f998c : cmp eax, 0xfffff001 ; jae 0xf999b ; ret
0x00000000000f99bc : cmp eax, 0xfffff001 ; jae 0xf99cb ; ret
0x00000000000f99ef : cmp eax, 0xfffff001 ; jae 0xf99fe ; ret
0x00000000000f9a1c : cmp eax, 0xfffff001 ; jae 0xf9a2b ; ret
0x00000000000f9a4f : cmp eax, 0xfffff001 ; jae 0xf9a5e ; ret
0x00000000000fb9ec : cmp eax, 0xfffff001 ; jae 0xfb9fb ; ret
0x00000000000fba1c : cmp eax, 0xfffff001 ; jae 0xfba2b ; ret
0x00000000000fbb5c : cmp eax, 0xfffff001 ; jae 0xfbb6b ; ret
0x00000000000fbbbc : cmp eax, 0xfffff001 ; jae 0xfbbcb ; ret
0x00000000000fbbec : cmp eax, 0xfffff001 ; jae 0xfbbfb ; ret
0x00000000000fbd1c : cmp eax, 0xfffff001 ; jae 0xfbd2b ; ret
0x00000000000fbdaf : cmp eax, 0xfffff001 ; jae 0xfbdbe ; ret
0x00000000000fbddc : cmp eax, 0xfffff001 ; jae 0xfbdeb ; ret
0x00000000000fc2ec : cmp eax, 0xfffff001 ; jae 0xfc2fb ; ret
0x00000000000fc31c : cmp eax, 0xfffff001 ; jae 0xfc32b ; ret
0x00000000000fc35f : cmp eax, 0xfffff001 ; jae 0xfc36e ; ret
0x00000000000fc38c : cmp eax, 0xfffff001 ; jae 0xfc39b ; ret
0x00000000000fc3bc : cmp eax, 0xfffff001 ; jae 0xfc3cb ; ret
0x00000000000fc3ec : cmp eax, 0xfffff001 ; jae 0xfc3fb ; ret
0x00000000000fc41c : cmp eax, 0xfffff001 ; jae 0xfc42b ; ret
0x00000000000fc44c : cmp eax, 0xfffff001 ; jae 0xfc45b ; ret
0x00000000000fc47c : cmp eax, 0xfffff001 ; jae 0xfc48b ; ret
0x00000000000fc4ac : cmp eax, 0xfffff001 ; jae 0xfc4bb ; ret
0x00000000000fc4dc : cmp eax, 0xfffff001 ; jae 0xfc4eb ; ret
0x00000000000fc50f : cmp eax, 0xfffff001 ; jae 0xfc51e ; ret
0x00000000000fc53c : cmp eax, 0xfffff001 ; jae 0xfc54b ; ret
0x00000000000fc56f : cmp eax, 0xfffff001 ; jae 0xfc57e ; ret
0x00000000000fc59c : cmp eax, 0xfffff001 ; jae 0xfc5ab ; ret
0x00000000000fc5cc : cmp eax, 0xfffff001 ; jae 0xfc5db ; ret
0x00000000000fc5fc : cmp eax, 0xfffff001 ; jae 0xfc60b ; ret
0x00000000000fc62c : cmp eax, 0xfffff001 ; jae 0xfc63b ; ret
0x00000000000fc65c : cmp eax, 0xfffff001 ; jae 0xfc66b ; ret
0x00000000000fc68f : cmp eax, 0xfffff001 ; jae 0xfc69e ; ret
0x00000000000fc6bf : cmp eax, 0xfffff001 ; jae 0xfc6ce ; ret
0x00000000000fc6ec : cmp eax, 0xfffff001 ; jae 0xfc6fb ; ret
0x00000000000fc71c : cmp eax, 0xfffff001 ; jae 0xfc72b ; ret
0x00000000000fc74f : cmp eax, 0xfffff001 ; jae 0xfc75e ; ret
0x00000000000fc77f : cmp eax, 0xfffff001 ; jae 0xfc78e ; ret
0x00000000000fc7af : cmp eax, 0xfffff001 ; jae 0xfc7be ; ret
0x00000000000fc7dc : cmp eax, 0xfffff001 ; jae 0xfc7eb ; ret
0x00000000000fc80c : cmp eax, 0xfffff001 ; jae 0xfc81b ; ret
0x00000000000fc83c : cmp eax, 0xfffff001 ; jae 0xfc84b ; ret
0x00000000000fc86c : cmp eax, 0xfffff001 ; jae 0xfc87b ; ret
0x00000000000fc89f : cmp eax, 0xfffff001 ; jae 0xfc8ae ; ret
0x00000000000fc8cc : cmp eax, 0xfffff001 ; jae 0xfc8db ; ret
0x00000000000fc8fc : cmp eax, 0xfffff001 ; jae 0xfc90b ; ret
0x00000000000fc92f : cmp eax, 0xfffff001 ; jae 0xfc93e ; ret
0x00000000000fc95c : cmp eax, 0xfffff001 ; jae 0xfc96b ; ret
0x00000000000fc98f : cmp eax, 0xfffff001 ; jae 0xfc99e ; ret
0x00000000000fc9bf : cmp eax, 0xfffff001 ; jae 0xfc9ce ; ret
0x00000000000fc9ec : cmp eax, 0xfffff001 ; jae 0xfc9fb ; ret
0x00000000000fca1c : cmp eax, 0xfffff001 ; jae 0xfca2b ; ret
0x00000000000fca4c : cmp eax, 0xfffff001 ; jae 0xfca5b ; ret
0x00000000000fcb3c : cmp eax, 0xfffff001 ; jae 0xfcb4b ; ret
0x00000000000fcc0c : cmp eax, 0xfffff001 ; jae 0xfcc1b ; ret
0x00000000000fcc3c : cmp eax, 0xfffff001 ; jae 0xfcc4b ; ret
0x00000000000fcc6f : cmp eax, 0xfffff001 ; jae 0xfcc7e ; ret
0x00000000000fcc9c : cmp eax, 0xfffff001 ; jae 0xfccab ; ret
0x00000000000fd14f : cmp eax, 0xfffff001 ; jae 0xfd15e ; ret
0x00000000000fd17c : cmp eax, 0xfffff001 ; jae 0xfd18b ; ret
0x00000000000fd1ac : cmp eax, 0xfffff001 ; jae 0xfd1bb ; ret
0x00000000000fd1df : cmp eax, 0xfffff001 ; jae 0xfd1ee ; ret
0x0000000000109cbf : cmp eax, 0xfffffe7c ; call rax
0x000000000008c5a2 : cmp eax, 1 ; ja 0x8c589 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ed00 : cmp eax, 1 ; jne 0x12ecfe ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000000a45d3 : cmp eax, 2 ; je 0xa45ef ; xor eax, eax ; ret
0x000000000012ecf5 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000d25cd : cmp eax, 3 ; je 0xd25e5 ; ret
0x00000000001091ee : cmp eax, 4 ; je 0x1091f9 ; ret
0x00000000000f7969 : cmp eax, dword ptr [rcx - 0xa] ; or byte ptr [r9], al ; jne 0xf79b8 ; ret
0x00000000000d2479 : cmp eax, dword ptr [rcx] ; ret 0xc083
0x000000000007cd79 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x7cd90 ; movzx eax, byte ptr [rax] ; ret
0x00000000000b5e3e : cmp eax, dword ptr [rsi + 0x10] ; jne 0xb5f39 ; ret
0x00000000000b5e53 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xb5f39 ; ret
0x00000000000b5e68 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xb5f39 ; ret
0x00000000000b5e83 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xb5f39 ; ret
0x00000000000b5e9e : cmp eax, dword ptr [rsi + 0x20] ; jne 0xb5f39 ; ret
0x00000000000b5eb3 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xb5f35 ; ret
0x00000000000b5ec8 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xb5f35 ; ret
0x00000000000b5ed3 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xb5f35 ; ret
0x00000000000b5eee : cmp eax, dword ptr [rsi + 0x30] ; jne 0xb5f35 ; ret
0x00000000000b5f03 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xb5f35 ; ret
0x00000000000b5f18 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xb5f35 ; ret
0x00000000000b5f23 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xb5f35 ; ret
0x00000000000b5e23 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xb5f39 ; ret
0x00000000000b5df3 : cmp eax, dword ptr [rsi + 4] ; jne 0xb5f39 ; ret
0x00000000000b5e08 : cmp eax, dword ptr [rsi + 8] ; jne 0xb5f39 ; ret
0x000000000016702a : cmp eax, dword ptr [rsi - 0x10] ; jne 0x167169 ; ret
0x0000000000167043 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x167169 ; ret
0x0000000000167153 : cmp eax, dword ptr [rsi - 4] ; jne 0x167167 ; xor eax, eax ; ret
0x0000000000167073 : cmp eax, dword ptr [rsi - 4] ; jne 0x167169 ; ret
0x0000000000167058 : cmp eax, dword ptr [rsi - 8] ; jne 0x167169 ; ret
0x00000000000b5ddd : cmp eax, dword ptr [rsi] ; jne 0xb5f38 ; ret
0x000000000003bc18 : cmp eax, ecx ; jb 0x3bbfb ; xor eax, eax ; ret
0x00000000000907bd : cmp eax, ecx ; je 0x907a4 ; ret
0x0000000000166b43 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000004d777 : cmp eax, edi ; pop rbx ; cmovb rax, rdi ; ret
0x00000000000802cf : cmp eax, edx ; jae 0x802ff ; movzx eax, byte ptr [rax] ; ret
0x0000000000108a73 : cmp eax, edx ; jb 0x108a6e ; xor eax, eax ; ret
0x0000000000118432 : cmp eax, edx ; jne 0x118411 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000004853d : cmp eax, edx ; jne 0x48536 ; xor eax, eax ; ret
0x0000000000048625 : cmp eax, edx ; jne 0x4861e ; xor eax, eax ; ret
0x00000000000811d9 : cmp eax, edx ; jne 0x811e2 ; ret
0x00000000000b5ff5 : cmp eax, edx ; jne 0xb5fe6 ; xor eax, eax ; ret
0x000000000010393d : cmp eax, esi ; jb 0x103959 ; mov eax, 1 ; ret
0x000000000010918a : cmp ebx, 0xa ; je 0x109195 ; ret
0x0000000000080f03 : cmp ebx, eax ; je 0x80f10 ; pop rbx ; pop rbp ; ret
0x00000000000473cb : cmp ebx, eax ; jne 0x473c5 ; pop rbx ; ret
0x00000000000eafbc : cmp ebx, eax ; pop rbx ; setl al ; ret
0x000000000011b0cd : cmp ebx, ecx ; jg 0x11b08e ; mov byte ptr [r10], 0 ; ret
0x00000000000ee9ed : cmp ebx, esi ; dec dword ptr [rax + 0x39] ; ret
0x00000000000c3356 : cmp ebx, esp ; jne 0xc3348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000048f74 : cmp ecx, -1 ; jne 0x48f70 ; mov rax, rdx ; ret
0x00000000000a4ead : cmp ecx, -1 ; jne 0xa4ea5 ; ret
0x000000000004594f : cmp ecx, 0x24 ; jne 0x45934 ; ret
0x0000000000048119 : cmp ecx, 0x2f ; jmp rdx
0x00000000000c9ce6 : cmp ecx, 0x58465342 ; jne 0xc9cf8 ; ret
0x000000000010bf40 : cmp ecx, 0xc00 ; je 0x10bf58 ; ret
0x00000000000a4d80 : cmp ecx, 0xc00 ; je 0xa4d98 ; ret
0x0000000000123da9 : cmp ecx, 1 ; je 0x123dc1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000122074 : cmp ecx, dword ptr [rax - 0x75] ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000056a2d : cmp ecx, dword ptr [rax - 0x77] ; jmp 0x48c7f383
0x000000000002514a : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000e3bac : cmp ecx, dword ptr [rax - 0xc] ; jne 0xe3ba8 ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000011d0e4 : cmp ecx, dword ptr [rbx - 0x3f7aefb9] ; jne 0x11d0f9 ; pop rbx ; ret
0x000000000016089a : cmp ecx, dword ptr [rsi + rdx + 0x20] ; jne 0x160882 ; vzeroupper ; ret
0x00000000001608ba : cmp ecx, dword ptr [rsi + rdx + 0x40] ; jne 0x160882 ; vzeroupper ; ret
0x00000000001608da : cmp ecx, dword ptr [rsi + rdx + 0x60] ; jne 0x160882 ; vzeroupper ; ret
0x0000000000160d16 : cmp ecx, dword ptr [rsi + rdx] ; jne 0x160cf1 ; vzeroupper ; ret
0x00000000000b6010 : cmp ecx, eax ; cmovg eax, edx ; ret
0x00000000001630ab : cmp ecx, eax ; jne 0x1630d9 ; xor eax, eax ; ret
0x0000000000163eeb : cmp ecx, eax ; jne 0x163f19 ; xor eax, eax ; ret
0x0000000000163f1f : cmp ecx, eax ; jne 0x163f2c ; xor eax, eax ; ret
0x000000000012fc27 : cmp ecx, edx ; jae 0x12fc36 ; xor eax, eax ; ret
0x000000000012fc67 : cmp ecx, edx ; jae 0x12fc76 ; xor eax, eax ; ret
0x0000000000090770 : cmp ecx, edx ; je 0x90770 ; cmp ecx, esi ; je 0x90770 ; ret
0x00000000000ee3d4 : cmp ecx, edx ; seta al ; sbb eax, 0 ; ret
0x0000000000090774 : cmp ecx, esi ; je 0x9076c ; ret
0x00000000000b600f : cmp ecx, r8d ; cmovg eax, edx ; ret
0x000000000004d9cb : cmp edi, 0xf ; ja 0x4d9b8 ; mov rax, rsi ; ret
0x000000000004d9f3 : cmp edi, 7 ; ja 0x4d9e0 ; mov rax, rsi ; ret
0x000000000004da36 : cmp edi, 9 ; ja 0x4da18 ; mov rax, rsi ; ret
0x00000000000ff21d : cmp edi, 9 ; setbe al ; ret
0x0000000000053c6e : cmp edi, eax ; ja 0x53c57 ; mov eax, r9d ; ret
0x00000000000f26fe : cmp edi, eax ; ja 0xf272e ; xor eax, eax ; ret
0x000000000004d9a6 : cmp edi, eax ; jae 0x4d997 ; mov rax, rsi ; ret
0x000000000004d6d2 : cmp edi, eax ; jbe 0x4d6cd ; pop rbx ; ret
0x00000000000ba47c : cmp edi, ecx ; je 0xba48c ; ret
0x00000000000ba47b : cmp edi, ecx ; je 0xba48d ; ret
0x00000000001254c2 : cmp edi, ecx ; jne 0x1254b4 ; ret
0x00000000000a3aab : cmp edi, edx ; jb 0xa3ab8 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000003896e : cmp edi, edx ; jne 0x38969 ; mov eax, 1 ; ret
0x00000000000f9aa5 : cmp edi, edx ; jne 0xf9aa0 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000ebb28 : cmp edi, esi ; ja 0xebb1c ; ret
0x0000000000109707 : cmp edi, esi ; sete al ; ret
0x0000000000053c6d : cmp edi, r8d ; ja 0x53c58 ; mov eax, r9d ; ret
0x0000000000071a33 : cmp edx, -1 ; je 0x71a7a ; mov rax, rdx ; pop rbx ; ret
0x000000000007a0e3 : cmp edx, -1 ; je 0x7a12a ; mov rax, rdx ; pop rbx ; ret
0x0000000000114789 : cmp edx, -3 ; jbe 0x114795 ; ret
0x00000000000fc1aa : cmp edx, 0x26 ; je 0xfc1f0 ; ret
0x00000000000c9f2b : cmp edx, 0x2f ; setne al ; ret
0x00000000000c9eda : cmp edx, 0x414a53 ; setne al ; ret
0x00000000000c9ef4 : cmp edx, 0x5346544e ; setne al ; ret
0x00000000000c9f19 : cmp edx, 0x7275 ; setne al ; ret
0x000000000010d489 : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x0000000000118d90 : cmp edx, 1 ; jne 0x118d46 ; jmp 0x118d5f
0x00000000000e3b7f : cmp edx, 2 ; je 0xe3b8d ; ret
0x00000000000d2cef : cmp edx, dword ptr [r8 + rcx*4] ; je 0xd2d16 ; ret
0x00000000000d2cf0 : cmp edx, dword ptr [rax + rcx*4] ; je 0xd2d15 ; ret
0x00000000000589cc : cmp edx, dword ptr [rbx] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000160324 : cmp edx, dword ptr [rsi] ; jne 0x160310 ; ret
0x0000000000138253 : cmp edx, eax ; ja 0x13824e ; xor eax, eax ; ret
0x00000000000d1534 : cmp edx, eax ; je 0xd1547 ; ret
0x0000000000118735 : cmp edx, eax ; jne 0x11871d ; ret
0x0000000000085732 : cmp edx, eax ; jne 0x856fc ; ret
0x000000000011836a : cmp edx, eax ; sbb eax, eax ; ret
0x0000000000075cfd : cmp edx, ecx ; jae 0x75d09 ; mov eax, dword ptr [rdx] ; ret
0x000000000015ab3c : cmp edx, ecx ; jle 0x15abe8 ; ret
0x0000000000160196 : cmp edx, ecx ; jne 0x160182 ; vzeroupper ; ret
0x0000000000165059 : cmp edx, ecx ; jne 0x16503d ; vzeroupper ; ret
0x00000000000a3f7f : cmp edx, ecx ; jne 0xa3f6c ; ret
0x00000000000d2c96 : cmp edx, ecx ; jne 0xd2c8c ; ret
0x0000000000108b62 : cmp edx, edi ; setae al ; ret
0x0000000000118d55 : cmp edx, esi ; jb 0x118d4d ; mov eax, 0xffffffff ; ret
0x0000000000090738 : cmp edx, esi ; je 0x90734 ; ret
0x00000000000a5fe6 : cmp edx, esi ; je 0xa5ff6 ; test edx, edx ; jne 0xa5fe8 ; ret
0x000000000008b8c1 : cmp edx, esi ; jne 0x8b8bc ; ret
0x00000000000a49d5 : cmp edx, esi ; jne 0xa49cc ; ret
0x0000000000075dda : cmp esi, -1 ; setne al ; neg eax ; ret
0x00000000000569eb : cmp esi, 0x41 ; cmove rdi, rdx ; mov rdx, r8 ; jmp 0x56a0c
0x0000000000118e52 : cmp esi, 0x80 ; cmovb eax, edx ; ret
0x00000000000c2e84 : cmp esi, 1 ; je 0xc2e97 ; xor eax, eax ; ret
0x000000000007a57d : cmp esi, 2 ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x000000000002d258 : cmp esi, 3 ; je 0x2d265 ; ret
0x00000000000597be : cmp esi, 9 ; jbe 0x5979d ; mov qword ptr [rdi], rcx ; ret
0x0000000000066d3e : cmp esi, 9 ; jbe 0x66d1d ; mov qword ptr [rdi], rcx ; ret
0x000000000006fbce : cmp esi, 9 ; jbe 0x6fbad ; mov qword ptr [rdi], rcx ; ret
0x0000000000161220 : cmp esi, dword ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x0000000000123c52 : cmp esi, dword ptr [rdx + 0x28] ; ja 0x123c49 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000015fcc9 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000ee7c9 : cmp esi, ebx ; dec dword ptr [rbp + rcx*4 + 0x2c] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x0000000000075afa : cmp esi, ecx ; jb 0x75af7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000080c0f : cmp esi, ecx ; jb 0x80bf8 ; mov byte ptr [rax + rsi], r10b ; ret
0x000000000007f4ca : cmp esi, ecx ; jne 0x7f4c7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000004d6da : cmp esi, edi ; cmovb rax, rdi ; ret
0x000000000005e981 : cmp esp, edi ; dec dword ptr [rax - 0x77] ; ret 0xdae9
0x0000000000104b24 : cmp qword ptr [rdi + 0x10], 0 ; je 0x104b39 ; xor eax, eax ; ret
0x000000000007a457 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000007eb74 : cmp qword ptr [rdi + 0x38], 0 ; je 0x7eb87 ; ret
0x0000000000108afd : cmp qword ptr [rdi], 0 ; je 0x108b0e ; ret
0x0000000000077ee1 : cmp qword ptr [rdx + 0x48], r8 ; cmovne eax, ecx ; ret
0x0000000000023ade : cmp qword ptr [rdx + 0xd8], rax ; jne 0x23ab4 ; ret
0x000000000007549b : cmp qword ptr [rsi + 0x30], 0 ; je 0x754af ; ret
0x00000000000d1533 : cmp r10d, r8d ; je 0xd1548 ; ret
0x0000000000109189 : cmp r11d, 0xa ; je 0x109196 ; ret
0x000000000011b0cc : cmp r11d, r9d ; jg 0x11b08f ; mov byte ptr [r10], 0 ; ret
0x00000000000488ef : cmp r8, -8 ; jne 0x488e9 ; mov rax, rdx ; ret
0x000000000003bc17 : cmp r8, r9 ; jb 0x3bbfc ; xor eax, eax ; ret
0x00000000000907bc : cmp r8d, ecx ; je 0x907a5 ; ret
0x000000000010999b : cmp rax, -0x1000 ; ja 0x1099b0 ; ret
0x0000000000109a55 : cmp rax, -0x1000 ; ja 0x109a68 ; ret
0x000000000010b7fd : cmp rax, -0x1000 ; ja 0x10b818 ; ret
0x000000000010b8d0 : cmp rax, -0x1000 ; ja 0x10b8e8 ; ret
0x0000000000038041 : cmp rax, -0x1000 ; ja 0x38058 ; ret
0x00000000000380b0 : cmp rax, -0x1000 ; ja 0x380c8 ; ret
0x00000000000380fd : cmp rax, -0x1000 ; ja 0x38158 ; ret
0x000000000003bb38 : cmp rax, -0x1000 ; ja 0x3bba0 ; ret
0x000000000006e6fb : cmp rax, -0x1000 ; ja 0x6e710 ; ret
0x000000000006e72e : cmp rax, -0x1000 ; ja 0x6e748 ; ret
0x00000000000b798b : cmp rax, -0x1000 ; ja 0xb79a0 ; ret
0x00000000000c3c5b : cmp rax, -0x1000 ; ja 0xc3c70 ; ret
0x00000000000c8325 : cmp rax, -0x1000 ; ja 0xc8380 ; ret
0x00000000000c83bb : cmp rax, -0x1000 ; ja 0xc8420 ; ret
0x00000000000c84ae : cmp rax, -0x1000 ; ja 0xc8520 ; ret
0x00000000000c85f8 : cmp rax, -0x1000 ; ja 0xc8640 ; ret
0x00000000000c8678 : cmp rax, -0x1000 ; ja 0xc86d8 ; ret
0x00000000000eabeb : cmp rax, -0x1000 ; ja 0xeac58 ; ret
0x00000000000eac9b : cmp rax, -0x1000 ; ja 0xead08 ; ret
0x00000000000ebd99 : cmp rax, -0x1000 ; ja 0xebdb0 ; ret
0x00000000000ebdf7 : cmp rax, -0x1000 ; ja 0xebe08 ; ret
0x00000000000ebe49 : cmp rax, -0x1000 ; ja 0xebe60 ; ret
0x00000000000ec0a1 : cmp rax, -0x1000 ; ja 0xec0b8 ; ret
0x00000000000ec105 : cmp rax, -0x1000 ; ja 0xec118 ; ret
0x00000000000ec15d : cmp rax, -0x1000 ; ja 0xec178 ; ret
0x00000000000ec388 : cmp rax, -0x1000 ; ja 0xec3a0 ; ret
0x00000000000ec775 : cmp rax, -0x1000 ; ja 0xec7d8 ; ret
0x00000000000ec818 : cmp rax, -0x1000 ; ja 0xec880 ; ret
0x00000000000ec8bb : cmp rax, -0x1000 ; ja 0xec8d0 ; ret
0x00000000000ec8eb : cmp rax, -0x1000 ; ja 0xec900 ; ret
0x00000000000ece98 : cmp rax, -0x1000 ; ja 0xecee8 ; ret
0x00000000000ed018 : cmp rax, -0x1000 ; ja 0xed070 ; ret
0x00000000000f0be8 : cmp rax, -0x1000 ; ja 0xf0c50 ; ret
0x00000000000f1693 : cmp rax, -0x1000 ; ja 0xf16a8 ; ret
0x00000000000f16e7 : cmp rax, -0x1000 ; ja 0xf16f8 ; ret
0x00000000000f17bb : cmp rax, -0x1000 ; ja 0xf1828 ; ret
0x00000000000f186b : cmp rax, -0x1000 ; ja 0xf18d8 ; ret
0x00000000000f190b : cmp rax, -0x1000 ; ja 0xf1920 ; ret
0x00000000000f1a2b : cmp rax, -0x1000 ; ja 0xf1a40 ; ret
0x00000000000f1bbb : cmp rax, -0x1000 ; ja 0xf1bd0 ; ret
0x00000000000f1be8 : cmp rax, -0x1000 ; ja 0xf1c00 ; ret
0x00000000000f1c1e : cmp rax, -0x1000 ; ja 0xf1c38 ; ret
0x00000000000f1c5b : cmp rax, -0x1000 ; ja 0xf1c70 ; ret
0x00000000000f2032 : cmp rax, -0x1000 ; ja 0xf2088 ; ret
0x00000000000f2244 : cmp rax, -0x1000 ; ja 0xf2258 ; ret
0x00000000000f2285 : cmp rax, -0x1000 ; ja 0xf2298 ; ret
0x00000000000f2848 : cmp rax, -0x1000 ; ja 0xf28b0 ; ret
0x00000000000f28f8 : cmp rax, -0x1000 ; ja 0xf2960 ; ret
0x00000000000f29ae : cmp rax, -0x1000 ; ja 0xf2a28 ; ret
0x00000000000f2a6e : cmp rax, -0x1000 ; ja 0xf2ae8 ; ret
0x00000000000f343b : cmp rax, -0x1000 ; ja 0xf34b0 ; ret
0x00000000000f3658 : cmp rax, -0x1000 ; ja 0xf36a8 ; ret
0x00000000000f3718 : cmp rax, -0x1000 ; ja 0xf3768 ; ret
0x00000000000f37d7 : cmp rax, -0x1000 ; ja 0xf37e8 ; ret
0x00000000000f4beb : cmp rax, -0x1000 ; ja 0xf4c00 ; ret
0x00000000000f4dd0 : cmp rax, -0x1000 ; ja 0xf4de8 ; ret
0x00000000000f4e0b : cmp rax, -0x1000 ; ja 0xf4e20 ; ret
0x00000000000f4e3b : cmp rax, -0x1000 ; ja 0xf4e50 ; ret
0x00000000000f67d8 : cmp rax, -0x1000 ; ja 0xf6840 ; ret
0x00000000000f8f82 : cmp rax, -0x1000 ; ja 0xf8f98 ; ret
0x00000000000fbb8b : cmp rax, -0x1000 ; ja 0xfbba0 ; ret
0x00000000000fbc31 : cmp rax, -0x1000 ; ja 0xfbcb0 ; ret
0x00000000000fbce3 : cmp rax, -0x1000 ; ja 0xfbcf8 ; ret
0x00000000000fbe1b : cmp rax, -0x1000 ; ja 0xfbe88 ; ret
0x00000000000fbecb : cmp rax, -0x1000 ; ja 0xfbf38 ; ret
0x00000000000fbf7b : cmp rax, -0x1000 ; ja 0xfbfe8 ; ret
0x00000000000fc02b : cmp rax, -0x1000 ; ja 0xfc0b0 ; ret
0x00000000000fc0f8 : cmp rax, -0x1000 ; ja 0xfc158 ; ret
0x00000000000fc213 : cmp rax, -0x1000 ; ja 0xfc228 ; ret
0x00000000000fcaa8 : cmp rax, -0x1000 ; ja 0xfcb08 ; ret
0x00000000000fcb78 : cmp rax, -0x1000 ; ja 0xfcbd8 ; ret
0x00000000000fcce1 : cmp rax, -0x1000 ; ja 0xfcd58 ; ret
0x00000000000fcd9b : cmp rax, -0x1000 ; ja 0xfce20 ; ret
0x00000000000fce68 : cmp rax, -0x1000 ; ja 0xfced0 ; ret
0x00000000000fcf21 : cmp rax, -0x1000 ; ja 0xfcf98 ; ret
0x00000000000fcfd8 : cmp rax, -0x1000 ; ja 0xfd040 ; ret
0x00000000000fd08b : cmp rax, -0x1000 ; ja 0xfd110 ; ret
0x00000000000fd48b : cmp rax, -0x1000 ; ja 0xfd4f8 ; ret
0x00000000000fd53b : cmp rax, -0x1000 ; ja 0xfd5b0 ; ret
0x00000000000fd5eb : cmp rax, -0x1000 ; ja 0xfd658 ; ret
0x00000000000fd78b : cmp rax, -0x1000 ; ja 0xfd7f8 ; ret
0x00000000000fd83b : cmp rax, -0x1000 ; ja 0xfd8b8 ; ret
0x00000000000fd8eb : cmp rax, -0x1000 ; ja 0xfd900 ; ret
0x00000000000fd91b : cmp rax, -0x1000 ; ja 0xfd930 ; ret
0x00000000000fd94b : cmp rax, -0x1000 ; ja 0xfd960 ; ret
0x00000000000fd97b : cmp rax, -0x1000 ; ja 0xfd990 ; ret
0x00000000000fda5e : cmp rax, -0x1000 ; ja 0xfda78 ; ret
0x00000000000fda9b : cmp rax, -0x1000 ; ja 0xfdab0 ; ret
0x00000000000fdacb : cmp rax, -0x1000 ; ja 0xfdae0 ; ret
0x00000000000fdafe : cmp rax, -0x1000 ; ja 0xfdb18 ; ret
0x00000000000fdb3b : cmp rax, -0x1000 ; ja 0xfdb50 ; ret
0x000000000013443e : cmp rax, -0xfff ; jae 0x13444f ; ret
0x000000000013448e : cmp rax, -0xfff ; jae 0x13449f ; ret
0x000000000003807b : cmp rax, -0xfff ; jae 0x3808c ; ret
0x00000000000385bb : cmp rax, -0xfff ; jae 0x385cc ; ret
0x00000000000b7a7b : cmp rax, -0xfff ; jae 0xb7a8c ; ret
0x00000000000ba38b : cmp rax, -0xfff ; jae 0xba39c ; ret
0x00000000000ba3bb : cmp rax, -0xfff ; jae 0xba3cc ; ret
0x00000000000c827b : cmp rax, -0xfff ; jae 0xc828c ; ret
0x00000000000c846e : cmp rax, -0xfff ; jae 0xc847f ; ret
0x00000000000c854b : cmp rax, -0xfff ; jae 0xc855c ; ret
0x00000000000c898b : cmp rax, -0xfff ; jae 0xc899c ; ret
0x00000000000c948b : cmp rax, -0xfff ; jae 0xc949c ; ret
0x00000000000c96ab : cmp rax, -0xfff ; jae 0xc96bc ; ret
0x00000000000c96db : cmp rax, -0xfff ; jae 0xc96ec ; ret
0x00000000000c973b : cmp rax, -0xfff ; jae 0xc974c ; ret
0x00000000000c976b : cmp rax, -0xfff ; jae 0xc977c ; ret
0x00000000000c979b : cmp rax, -0xfff ; jae 0xc97ac ; ret
0x00000000000c97cb : cmp rax, -0xfff ; jae 0xc97dc ; ret
0x00000000000e2a5b : cmp rax, -0xfff ; jae 0xe2a6c ; ret
0x00000000000e2a8b : cmp rax, -0xfff ; jae 0xe2a9c ; ret
0x00000000000e2abb : cmp rax, -0xfff ; jae 0xe2acc ; ret
0x00000000000e2aeb : cmp rax, -0xfff ; jae 0xe2afc ; ret
0x00000000000e2b1b : cmp rax, -0xfff ; jae 0xe2b2c ; ret
0x00000000000e2b4b : cmp rax, -0xfff ; jae 0xe2b5c ; ret
0x00000000000e2b7b : cmp rax, -0xfff ; jae 0xe2b8c ; ret
0x00000000000e2bab : cmp rax, -0xfff ; jae 0xe2bbc ; ret
0x00000000000ebcbb : cmp rax, -0xfff ; jae 0xebccc ; ret
0x00000000000ec1ab : cmp rax, -0xfff ; jae 0xec1bc ; ret
0x00000000000ec1db : cmp rax, -0xfff ; jae 0xec1ec ; ret
0x00000000000ec2fb : cmp rax, -0xfff ; jae 0xec30c ; ret
0x00000000000ec32b : cmp rax, -0xfff ; jae 0xec33c ; ret
0x00000000000ec3eb : cmp rax, -0xfff ; jae 0xec3fc ; ret
0x00000000000ec41b : cmp rax, -0xfff ; jae 0xec42c ; ret
0x00000000000ecd3b : cmp rax, -0xfff ; jae 0xecd4c ; ret
0x00000000000ecf1b : cmp rax, -0xfff ; jae 0xecf2c ; ret
0x00000000000ecf4b : cmp rax, -0xfff ; jae 0xecf5c ; ret
0x00000000000ecf7b : cmp rax, -0xfff ; jae 0xecf8c ; ret
0x00000000000ecfab : cmp rax, -0xfff ; jae 0xecfbc ; ret
0x00000000000ecfdb : cmp rax, -0xfff ; jae 0xecfec ; ret
0x00000000000ed09b : cmp rax, -0xfff ; jae 0xed0ac ; ret
0x00000000000ed0cb : cmp rax, -0xfff ; jae 0xed0dc ; ret
0x00000000000ed98b : cmp rax, -0xfff ; jae 0xed99c ; ret
0x00000000000ed9bb : cmp rax, -0xfff ; jae 0xed9cc ; ret
0x00000000000ed9eb : cmp rax, -0xfff ; jae 0xed9fc ; ret
0x00000000000eda1e : cmp rax, -0xfff ; jae 0xeda2f ; ret
0x00000000000ee20b : cmp rax, -0xfff ; jae 0xee21c ; ret
0x00000000000ee23e : cmp rax, -0xfff ; jae 0xee24f ; ret
0x00000000000ee26b : cmp rax, -0xfff ; jae 0xee27c ; ret
0x00000000000ee29b : cmp rax, -0xfff ; jae 0xee2ac ; ret
0x00000000000ee2cb : cmp rax, -0xfff ; jae 0xee2dc ; ret
0x00000000000ee2fe : cmp rax, -0xfff ; jae 0xee30f ; ret
0x00000000000ee32b : cmp rax, -0xfff ; jae 0xee33c ; ret
0x00000000000ee35b : cmp rax, -0xfff ; jae 0xee36c ; ret
0x00000000000ee38b : cmp rax, -0xfff ; jae 0xee39c ; ret
0x00000000000f124e : cmp rax, -0xfff ; jae 0xf125f ; ret
0x00000000000f22bb : cmp rax, -0xfff ; jae 0xf22cc ; ret
0x00000000000f263b : cmp rax, -0xfff ; jae 0xf264c ; ret
0x00000000000f280b : cmp rax, -0xfff ; jae 0xf281c ; ret
0x00000000000f329b : cmp rax, -0xfff ; jae 0xf32ac ; ret
0x00000000000f33fb : cmp rax, -0xfff ; jae 0xf340c ; ret
0x00000000000f35eb : cmp rax, -0xfff ; jae 0xf35fc ; ret
0x00000000000f361b : cmp rax, -0xfff ; jae 0xf362c ; ret
0x00000000000f36db : cmp rax, -0xfff ; jae 0xf36ec ; ret
0x00000000000f379b : cmp rax, -0xfff ; jae 0xf37ac ; ret
0x00000000000f3adb : cmp rax, -0xfff ; jae 0xf3aec ; ret
0x00000000000f3b0b : cmp rax, -0xfff ; jae 0xf3b1c ; ret
0x00000000000f3b3b : cmp rax, -0xfff ; jae 0xf3b4c ; ret
0x00000000000f64ed : cmp rax, -0xfff ; jae 0xf64fe ; ret
0x00000000000f676b : cmp rax, -0xfff ; jae 0xf677c ; ret
0x00000000000f679b : cmp rax, -0xfff ; jae 0xf67ac ; ret
0x00000000000f686b : cmp rax, -0xfff ; jae 0xf687c ; ret
0x00000000000f689b : cmp rax, -0xfff ; jae 0xf68ac ; ret
0x00000000000f68ce : cmp rax, -0xfff ; jae 0xf68df ; ret
0x00000000000f68fb : cmp rax, -0xfff ; jae 0xf690c ; ret
0x00000000000f692b : cmp rax, -0xfff ; jae 0xf693c ; ret
0x00000000000f695b : cmp rax, -0xfff ; jae 0xf696c ; ret
0x00000000000f698b : cmp rax, -0xfff ; jae 0xf699c ; ret
0x00000000000f983e : cmp rax, -0xfff ; jae 0xf984f ; ret
0x00000000000f986b : cmp rax, -0xfff ; jae 0xf987c ; ret
0x00000000000f989b : cmp rax, -0xfff ; jae 0xf98ac ; ret
0x00000000000f98ce : cmp rax, -0xfff ; jae 0xf98df ; ret
0x00000000000f98fe : cmp rax, -0xfff ; jae 0xf990f ; ret
0x00000000000f992b : cmp rax, -0xfff ; jae 0xf993c ; ret
0x00000000000f995e : cmp rax, -0xfff ; jae 0xf996f ; ret
0x00000000000f998b : cmp rax, -0xfff ; jae 0xf999c ; ret
0x00000000000f99bb : cmp rax, -0xfff ; jae 0xf99cc ; ret
0x00000000000f99ee : cmp rax, -0xfff ; jae 0xf99ff ; ret
0x00000000000f9a1b : cmp rax, -0xfff ; jae 0xf9a2c ; ret
0x00000000000f9a4e : cmp rax, -0xfff ; jae 0xf9a5f ; ret
0x00000000000fb9eb : cmp rax, -0xfff ; jae 0xfb9fc ; ret
0x00000000000fba1b : cmp rax, -0xfff ; jae 0xfba2c ; ret
0x00000000000fbb5b : cmp rax, -0xfff ; jae 0xfbb6c ; ret
0x00000000000fbbbb : cmp rax, -0xfff ; jae 0xfbbcc ; ret
0x00000000000fbbeb : cmp rax, -0xfff ; jae 0xfbbfc ; ret
0x00000000000fbd1b : cmp rax, -0xfff ; jae 0xfbd2c ; ret
0x00000000000fbdae : cmp rax, -0xfff ; jae 0xfbdbf ; ret
0x00000000000fbddb : cmp rax, -0xfff ; jae 0xfbdec ; ret
0x00000000000fc2eb : cmp rax, -0xfff ; jae 0xfc2fc ; ret
0x00000000000fc31b : cmp rax, -0xfff ; jae 0xfc32c ; ret
0x00000000000fc35e : cmp rax, -0xfff ; jae 0xfc36f ; ret
0x00000000000fc38b : cmp rax, -0xfff ; jae 0xfc39c ; ret
0x00000000000fc3bb : cmp rax, -0xfff ; jae 0xfc3cc ; ret
0x00000000000fc3eb : cmp rax, -0xfff ; jae 0xfc3fc ; ret
0x00000000000fc41b : cmp rax, -0xfff ; jae 0xfc42c ; ret
0x00000000000fc44b : cmp rax, -0xfff ; jae 0xfc45c ; ret
0x00000000000fc47b : cmp rax, -0xfff ; jae 0xfc48c ; ret
0x00000000000fc4ab : cmp rax, -0xfff ; jae 0xfc4bc ; ret
0x00000000000fc4db : cmp rax, -0xfff ; jae 0xfc4ec ; ret
0x00000000000fc50e : cmp rax, -0xfff ; jae 0xfc51f ; ret
0x00000000000fc53b : cmp rax, -0xfff ; jae 0xfc54c ; ret
0x00000000000fc56e : cmp rax, -0xfff ; jae 0xfc57f ; ret
0x00000000000fc59b : cmp rax, -0xfff ; jae 0xfc5ac ; ret
0x00000000000fc5cb : cmp rax, -0xfff ; jae 0xfc5dc ; ret
0x00000000000fc5fb : cmp rax, -0xfff ; jae 0xfc60c ; ret
0x00000000000fc62b : cmp rax, -0xfff ; jae 0xfc63c ; ret
0x00000000000fc65b : cmp rax, -0xfff ; jae 0xfc66c ; ret
0x00000000000fc68e : cmp rax, -0xfff ; jae 0xfc69f ; ret
0x00000000000fc6be : cmp rax, -0xfff ; jae 0xfc6cf ; ret
0x00000000000fc6eb : cmp rax, -0xfff ; jae 0xfc6fc ; ret
0x00000000000fc71b : cmp rax, -0xfff ; jae 0xfc72c ; ret
0x00000000000fc74e : cmp rax, -0xfff ; jae 0xfc75f ; ret
0x00000000000fc77e : cmp rax, -0xfff ; jae 0xfc78f ; ret
0x00000000000fc7ae : cmp rax, -0xfff ; jae 0xfc7bf ; ret
0x00000000000fc7db : cmp rax, -0xfff ; jae 0xfc7ec ; ret
0x00000000000fc80b : cmp rax, -0xfff ; jae 0xfc81c ; ret
0x00000000000fc83b : cmp rax, -0xfff ; jae 0xfc84c ; ret
0x00000000000fc86b : cmp rax, -0xfff ; jae 0xfc87c ; ret
0x00000000000fc89e : cmp rax, -0xfff ; jae 0xfc8af ; ret
0x00000000000fc8cb : cmp rax, -0xfff ; jae 0xfc8dc ; ret
0x00000000000fc8fb : cmp rax, -0xfff ; jae 0xfc90c ; ret
0x00000000000fc92e : cmp rax, -0xfff ; jae 0xfc93f ; ret
0x00000000000fc95b : cmp rax, -0xfff ; jae 0xfc96c ; ret
0x00000000000fc98e : cmp rax, -0xfff ; jae 0xfc99f ; ret
0x00000000000fc9be : cmp rax, -0xfff ; jae 0xfc9cf ; ret
0x00000000000fc9eb : cmp rax, -0xfff ; jae 0xfc9fc ; ret
0x00000000000fca1b : cmp rax, -0xfff ; jae 0xfca2c ; ret
0x00000000000fca4b : cmp rax, -0xfff ; jae 0xfca5c ; ret
0x00000000000fcb3b : cmp rax, -0xfff ; jae 0xfcb4c ; ret
0x00000000000fcc0b : cmp rax, -0xfff ; jae 0xfcc1c ; ret
0x00000000000fcc3b : cmp rax, -0xfff ; jae 0xfcc4c ; ret
0x00000000000fcc6e : cmp rax, -0xfff ; jae 0xfcc7f ; ret
0x00000000000fcc9b : cmp rax, -0xfff ; jae 0xfccac ; ret
0x00000000000fd14e : cmp rax, -0xfff ; jae 0xfd15f ; ret
0x00000000000fd17b : cmp rax, -0xfff ; jae 0xfd18c ; ret
0x00000000000fd1ab : cmp rax, -0xfff ; jae 0xfd1bc ; ret
0x00000000000fd1de : cmp rax, -0xfff ; jae 0xfd1ef ; ret
0x00000000000389d0 : cmp rax, -8 ; jne 0x389c8 ; xor eax, eax ; ret
0x0000000000038a20 : cmp rax, -8 ; jne 0x38a18 ; xor eax, eax ; ret
0x0000000000080a67 : cmp rax, 0x2000000 ; jbe 0x80a78 ; ret
0x000000000007cd78 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x7cd91 ; movzx eax, byte ptr [rax] ; ret
0x000000000004d776 : cmp rax, rdi ; pop rbx ; cmovb rax, rdi ; ret
0x00000000000802ce : cmp rax, rdx ; jae 0x80300 ; movzx eax, byte ptr [rax] ; ret
0x0000000000108a72 : cmp rax, rdx ; jb 0x108a6f ; xor eax, eax ; ret
0x0000000000108a71 : cmp rax, rdx ; jb 0x108a70 ; xor eax, eax ; ret
0x000000000004853c : cmp rax, rdx ; jne 0x48537 ; xor eax, eax ; ret
0x0000000000048624 : cmp rax, rdx ; jne 0x4861f ; xor eax, eax ; ret
0x00000000000811d8 : cmp rax, rdx ; jne 0x811e3 ; ret
0x00000000000b5ff4 : cmp rax, rdx ; jne 0xb5fe7 ; xor eax, eax ; ret
0x00000000000c3355 : cmp rbx, r12 ; jne 0xc3349 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000080f02 : cmp rbx, rax ; je 0x80f11 ; pop rbx ; pop rbp ; ret
0x00000000000473ca : cmp rbx, rax ; jne 0x473c6 ; pop rbx ; ret
0x00000000000eafbb : cmp rbx, rax ; pop rbx ; setl al ; ret
0x0000000000048f73 : cmp rcx, -1 ; jne 0x48f71 ; mov rax, rdx ; ret
0x00000000000a4eac : cmp rcx, -1 ; jne 0xa4ea6 ; ret
0x00000000000c9ce5 : cmp rcx, 0x58465342 ; jne 0xc9cf9 ; ret
0x00000000001630aa : cmp rcx, rax ; jne 0x1630da ; xor eax, eax ; ret
0x0000000000163eea : cmp rcx, rax ; jne 0x163f1a ; xor eax, eax ; ret
0x00000000000ee3d3 : cmp rcx, rdx ; seta al ; sbb eax, 0 ; ret
0x000000000004d9ca : cmp rdi, 0xf ; ja 0x4d9b9 ; mov rax, rsi ; ret
0x000000000004d9f2 : cmp rdi, 7 ; ja 0x4d9e1 ; mov rax, rsi ; ret
0x000000000004da35 : cmp rdi, 9 ; ja 0x4da19 ; mov rax, rsi ; ret
0x000000000004d9a5 : cmp rdi, r8 ; jae 0x4d998 ; mov rax, rsi ; ret
0x000000000004d6d1 : cmp rdi, r8 ; jbe 0x4d6ce ; pop rbx ; ret
0x00000000000f26fd : cmp rdi, rax ; ja 0xf272f ; xor eax, eax ; ret
0x00000000001254c1 : cmp rdi, rcx ; jne 0x1254b5 ; ret
0x00000000000a3aaa : cmp rdi, rdx ; jb 0xa3ab9 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000f9aa4 : cmp rdi, rdx ; jne 0xf9aa1 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000ebb27 : cmp rdi, rsi ; ja 0xebb1d ; ret
0x0000000000109706 : cmp rdi, rsi ; sete al ; ret
0x0000000000114788 : cmp rdx, -3 ; jbe 0x114796 ; ret
0x00000000000c9f2a : cmp rdx, 0x2f ; setne al ; ret
0x0000000000118734 : cmp rdx, r8 ; jne 0x11871e ; ret
0x0000000000085731 : cmp rdx, r8 ; jne 0x856fd ; ret
0x0000000000138252 : cmp rdx, rax ; ja 0x13824f ; xor eax, eax ; ret
0x0000000000118369 : cmp rdx, rax ; sbb eax, eax ; ret
0x0000000000075cfc : cmp rdx, rcx ; jae 0x75d0a ; mov eax, dword ptr [rdx] ; ret
0x0000000000160195 : cmp rdx, rcx ; jne 0x160183 ; vzeroupper ; ret
0x0000000000165058 : cmp rdx, rcx ; jne 0x16503e ; vzeroupper ; ret
0x00000000000a3f7e : cmp rdx, rcx ; jne 0xa3f6d ; ret
0x00000000000a3f7d : cmp rdx, rcx ; jne 0xa3f6e ; ret
0x00000000000d2c95 : cmp rdx, rcx ; jne 0xd2c8d ; ret
0x0000000000108b61 : cmp rdx, rdi ; setae al ; ret
0x000000000008b8c0 : cmp rdx, rsi ; jne 0x8b8bd ; ret
0x00000000000a49d4 : cmp rdx, rsi ; jne 0xa49cd ; ret
0x0000000000075af9 : cmp rsi, rcx ; jb 0x75af8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000080c0e : cmp rsi, rcx ; jb 0x80bf9 ; mov byte ptr [rax + rsi], r10b ; ret
0x000000000007f4c9 : cmp rsi, rcx ; jne 0x7f4c8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000004d6d9 : cmp rsi, rdi ; cmovb rax, rdi ; ret
0x000000000005e980 : cmp rsp, r15 ; dec dword ptr [rax - 0x77] ; ret 0xdae9
0x000000000015dc37 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015df37 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015ee37 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015eb37 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x0000000000162b29 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000000a4da6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov dl, 0xb ; add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000000f6a8e : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, 0 ; add rsp, 8 ; ret
0x0000000000157d16 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015e837 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000134cfb : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; call qword ptr [rax]
0x000000000015e537 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000711a5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000089765 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000067fa8 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rax, rdi ; jmp rax
0x000000000009c170 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000f6a2b : cmpsd dword ptr [rsi], dword ptr [rdi] ; or al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd695 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or byte ptr [rax], r8b ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000123214 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or dword ptr [rax], eax ; jmp qword ptr [rdx + rax*8]
0x000000000008a821 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or eax, 0x440f4800 ; ret 0xfc3
0x000000000008a72c : cmpsd dword ptr [rsi], dword ptr [rdi] ; or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000121005 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000000d6835 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffff
0x000000000008a820 : cmpsq qword ptr [rsi], qword ptr [rdi] ; or eax, 0x440f4800 ; ret 0xfc3
0x00000000000f6e7f : comisd xmm1, xmm4 ; jae 0xf6e79 ; divsd xmm0, xmm2 ; jmp 0xf6ee3
0x00000000000f6e80 : comiss xmm1, xmm4 ; jae 0xf6e78 ; divsd xmm0, xmm2 ; jmp 0xf6ee2
0x00000000000a402c : cpuid ; jmp 0xa3ff6
0x000000000003aca7 : cqo ; idiv rsi ; ret
0x0000000000027af6 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000079374 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003838f : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000245f8 : cwde ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b0694 : cwde ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000253b2 : cwde ; call rax
0x00000000000619bc : cwde ; ret
0x00000000000c4583 : cwde ; str word ptr [rax - 0x77] ; ret 0x8948
0x000000000009d6b9 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x000000000009b6a1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000009d6ba : dec byte ptr [rax + 0x29] ; ret 0x149
0x000000000009b6a2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000164b51 : dec byte ptr [rax + 0x7f] ; jl 0x164b76 ; cld ; vzeroupper ; ret
0x00000000000f7a36 : dec byte ptr [rax + 9] ; ret
0x000000000003ac88 : dec byte ptr [rax - 0x3f] ; loop 0x3acb5 ; or rax, rdx ; ret
0x000000000005a6ae : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x0000000000087de9 : dec byte ptr [rax - 0x77] ; ret 0x15ff
0x00000000000bbf29 : dec byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000125282 : dec byte ptr [rax - 0x77] ; ret 0xc148
0x00000000000c2374 : dec byte ptr [rax - 0x7d] ; ret
0x00000000000813a3 : dec byte ptr [rcx + rcx*4 + 0x41] ; or cl, ch ; ret
0x00000000000392b8 : dec byte ptr [rcx + rcx*4 - 0x19] ; call rbx
0x000000000011f94a : dec byte ptr [rcx + rcx*4 - 0x3b] ; mov rdi, rbx ; call rax
0x00000000000597bf : dec byte ptr [rcx] ; jbe 0x5979c ; mov qword ptr [rdi], rcx ; ret
0x0000000000066d3f : dec byte ptr [rcx] ; jbe 0x66d1c ; mov qword ptr [rdi], rcx ; ret
0x000000000006fbcf : dec byte ptr [rcx] ; jbe 0x6fbac ; mov qword ptr [rdi], rcx ; ret
0x0000000000089466 : dec byte ptr [rcx] ; mov edx, 0xffffffff ; cmovbe eax, edx ; ret
0x000000000008bb53 : dec byte ptr [rdi] ; xor dword ptr [rsi + 1], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000547c7 : dec dword ptr [r8 - 0x77] ; ret 0xf748
0x0000000000083261 : dec dword ptr [r9 - 0x7b] ; ret
0x0000000000046ae1 : dec dword ptr [rax + 0x29] ; ret
0x000000000009d83a : dec dword ptr [rax + 0x29] ; ret 0x149
0x000000000009b7e2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000000cbc76 : dec dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000065e61 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000008778e : dec dword ptr [rax + 0x31] ; ret 0x8948
0x000000000004d775 : dec dword ptr [rax + 0x39] ; clc ; pop rbx ; cmovb rax, rdi ; ret
0x0000000000047384 : dec dword ptr [rax + 0x39] ; ret
0x00000000000ce8fe : dec dword ptr [rax + 0x39] ; ret 0x2974
0x0000000000083023 : dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000687c9 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000007c281 : dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000000db571 : dec dword ptr [rax + 0x39] ; ret 0xe975
0x00000000000db6a0 : dec dword ptr [rax + 0x39] ; ret 0xea75
0x000000000008e44e : dec dword ptr [rax + 0x39] ; ret 0xec75
0x00000000000c7e65 : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x4589
0x00000000000c62b8 : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8941
0x00000000001016cc : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0x0000000000051ae1 : dec dword ptr [rax + 0x63] ; add al, 0x86 ; add rax, rdi ; jmp rax
0x000000000005fd45 : dec dword ptr [rax + 0x63] ; add al, 0x87 ; add rax, rdi ; jmp rax
0x000000000004e9d2 : dec dword ptr [rax + 0x63] ; add al, 0x87 ; add rax, rdx ; jmp rax
0x00000000000511c6 : dec dword ptr [rax + 0x63] ; add al, 0x87 ; add rax, rsi ; jmp rax
0x00000000000519fc : dec dword ptr [rax + 0x63] ; add al, 0xb0 ; add rax, rdi ; jmp rax
0x00000000000550e5 : dec dword ptr [rax + 0x63] ; ret
0x000000000004c177 : dec dword ptr [rax + 0x63] ; ret 0x6fe9
0x0000000000099af9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000008a938 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x000000000002fffd : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000000873f5 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000000a8223 : dec dword ptr [rax + 0xf] ; ret 0x8948
0x00000000000fecdf : dec dword ptr [rax + 0xf] ; ret 0xc748
0x000000000010a657 : dec dword ptr [rax + 0xf] ; ret 0xfc3
0x00000000000390af : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x000000000004553a : dec dword ptr [rax + 1] ; ret
0x000000000016860b : dec dword ptr [rax + 9] ; ret
0x0000000000167e0f : dec dword ptr [rax + 9] ; ret 0x3b74
0x0000000000167647 : dec dword ptr [rax + 9] ; ret 0x840f
0x00000000000387cf : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x0000000000035d7f : dec dword ptr [rax - 0x39] ; ret
0x00000000000ca675 : dec dword ptr [rax - 0x39] ; ret 0
0x00000000000ca68b : dec dword ptr [rax - 0x39] ; ret 0x8000
0x00000000000ca62d : dec dword ptr [rax - 0x39] ; ret 0xff80
0x00000000000388c7 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000bd740 : dec dword ptr [rax - 0x41] ; ret
0x000000000012bc4b : dec dword ptr [rax - 0x73] ; adc eax, 0x2f5d ; call qword ptr [rax]
0x00000000000cd06f : dec dword ptr [rax - 0x73] ; add bl, byte ptr [r11 + 0x5d] ; pop r12 ; ret
0x0000000000029327 : dec dword ptr [rax - 0x73] ; add qword ptr [rax + 0x39], rcx ; ret
0x00000000001129ff : dec dword ptr [rax - 0x73] ; and byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000ccf6f : dec dword ptr [rax - 0x73] ; or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000013d3d6 : dec dword ptr [rax - 0x73] ; push rdx ; sar byte ptr [rsi], 0x41 ; jmp rcx
0x0000000000104794 : dec dword ptr [rax - 0x75] ; adc ecx, dword ptr [rbx - 0x76bef7b5] ; ret
0x0000000000064a91 : dec dword ptr [rax - 0x75] ; add ch, cl ; ret
0x00000000000889a0 : dec dword ptr [rax - 0x75] ; add eax, 0x1355a8 ; call qword ptr [rax]
0x000000000012aa60 : dec dword ptr [rax - 0x75] ; and al, 8 ; call rcx
0x0000000000118159 : dec dword ptr [rax - 0x75] ; push rbp ; add dh, dh ; ret 0x7507
0x0000000000083988 : dec dword ptr [rax - 0x77] ; and al, 0x18 ; call rdx
0x0000000000073ba9 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000000f278d : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000087f28 : dec dword ptr [rax - 0x77] ; fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x000000000008fcc7 : dec dword ptr [rax - 0x77] ; fimul word ptr [rax + 0x29] ; ret 0x14c
0x000000000012fcf0 : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x0000000000130617 : dec dword ptr [rax - 0x77] ; jl 0x130648 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000002b9f1 : dec dword ptr [rax - 0x77] ; ret
0x00000000000ca5f3 : dec dword ptr [rax - 0x77] ; ret 0x14e9
0x00000000000ca506 : dec dword ptr [rax - 0x77] ; ret 0x1e9
0x00000000000cba69 : dec dword ptr [rax - 0x77] ; ret 0x2eb8
0x000000000006e218 : dec dword ptr [rax - 0x77] ; ret 0x33e9
0x00000000000efcc7 : dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000007a077 : dec dword ptr [rax - 0x77] ; ret 0x38b
0x00000000000efb99 : dec dword ptr [rax - 0x77] ; ret 0x394c
0x00000000000c91b9 : dec dword ptr [rax - 0x77] ; ret 0x3d48
0x00000000000849c5 : dec dword ptr [rax - 0x77] ; ret 0x3d83
0x000000000005bc9f : dec dword ptr [rax - 0x77] ; ret 0x7de9
0x0000000000083898 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000084a84 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000085eb0 : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000005e14e : dec dword ptr [rax - 0x77] ; ret 0x8944
0x0000000000047352 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000003600c : dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000630f8 : dec dword ptr [rax - 0x77] ; ret 0x894c
0x00000000000ca4bb : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000008bf56 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000b9f89 : dec dword ptr [rax - 0x77] ; ret 0x8d4a
0x000000000008f568 : dec dword ptr [rax - 0x77] ; ret 0x93eb
0x00000000000e4a1b : dec dword ptr [rax - 0x77] ; ret 0xabf
0x000000000005a921 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000000321d8 : dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000016ad5c : dec dword ptr [rax - 0x77] ; ret 0xc148
0x000000000008736b : dec dword ptr [rax - 0x77] ; ret 0xcb8
0x000000000005e983 : dec dword ptr [rax - 0x77] ; ret 0xdae9
0x0000000000071bff : dec dword ptr [rax - 0x77] ; ret 0xf41
0x00000000000ca611 : dec dword ptr [rax - 0x77] ; ret 0xf6e9
0x000000000010ba59 : dec dword ptr [rax - 0x77] ; ret 0xf741
0x0000000000034987 : dec dword ptr [rax - 0x77] ; ret 0xf748
0x0000000000119226 : dec dword ptr [rax - 0x77] ; ret 0xfc3
0x00000000000e1faa : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000dab07 : dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x75], 4 ; ret
0x00000000000dd741 : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x854d
0x00000000000b7953 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000109c33 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x000000000011f402 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rdi*2 + 0x48], 0x89 ; ret
0x00000000000f4bb6 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x48], 0x39 ; ret
0x00000000000f9661 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi + 0x48], 0x39 ; ret
0x00000000000fdbae : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x000000000011ca52 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret 0x1be
0x000000000004a474 : dec dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x84 ; ret 0
0x000000000004fd0b : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000114787 : dec dword ptr [rax - 0x7d] ; cli ; std ; jbe 0x114797 ; ret
0x0000000000035306 : dec dword ptr [rax - 0x7d] ; ret
0x00000000000d1fb6 : dec dword ptr [rax - 0x7d] ; ret 0x4101
0x0000000000063fb2 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000fdec9 : dec dword ptr [rax - 0x7d] ; ret 0x4802
0x000000000016793f : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x00000000001678b8 : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x000000000002a290 : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000ba0f8 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x0000000000028a61 : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000006a2d2 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x00000000000c6387 : dec dword ptr [rax - 0x7d] ; ret 0xeb01
0x00000000000338d9 : dec dword ptr [rax - 0x7d] ; ret 0xeb04
0x0000000000079ac5 : dec dword ptr [rax - 0x7f] ; ret
0x0000000000143e2c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000efcc4 : dec dword ptr [rbp + 0x63] ; dec dword ptr [rax - 0x77] ; ret 0x348
0x00000000000ee7cb : dec dword ptr [rbp + rcx*4 + 0x2c] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000d42d3 : dec dword ptr [rbp - 0x73] ; pop rsp ; ret 0xf08
0x000000000016a6bf : dec dword ptr [rbp - 0x76b73eb6] ; ret 0xd348
0x000000000016adaa : dec dword ptr [rbp - 0x76b73fb2] ; ret
0x00000000000629ed : dec dword ptr [rbp - 0x77] ; in eax, 0xeb ; ret
0x00000000000dd58b : dec dword ptr [rbp - 0x7b] ; in al, 0xf ; xchg eax, esp ; ret 0x8548
0x000000000010a391 : dec dword ptr [rbx + 0xb491] ; add bh, dh ; ret 0
0x00000000000e55ce : dec dword ptr [rbx - 0x76b6ebb0] ; ret 0xc748
0x0000000000129c87 : dec dword ptr [rbx - 0x76b7ff83] ; ret
0x00000000000cedc9 : dec dword ptr [rbx - 0x7cb769cc] ; ret 0x3b01
0x00000000000d61be : dec dword ptr [rbx - 0x7cb7d3ad] ; rol byte ptr [rcx], 0x39 ; ret 0xee7f
0x000000000013297c : dec dword ptr [rbx - 0x934b] ; dec dword ptr [rax - 0x39] ; ret
0x000000000005bd74 : dec dword ptr [rbx - 0x94f43] ; dec dword ptr [rcx + 0x63] ; ret
0x0000000000169a09 : dec dword ptr [rcx + 0x21] ; ret 0x949
0x000000000005cf77 : dec dword ptr [rcx + 0x29] ; ret 0xb8
0x000000000005e67e : dec dword ptr [rcx + 0x29] ; ret 0xf4c
0x0000000000046aec : dec dword ptr [rcx + 0x39] ; ret 0x1677
0x0000000000045bfd : dec dword ptr [rcx + 0x39] ; ret 0x830f
0x0000000000052af2 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x00000000000a76a9 : dec dword ptr [rcx + 0x39] ; ret 0x870f
0x000000000005e2ff : dec dword ptr [rcx + 0x39] ; ror byte ptr [rdi], 0x85 ; jmp rdx
0x00000000000338f8 : dec dword ptr [rcx + 0x3c8349c0] ; ret
0x000000000007d1c5 : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000000d3ff2 : dec dword ptr [rcx + 0x5c8d4dcb] ; ret 0xeb08
0x000000000005bd7a : dec dword ptr [rcx + 0x63] ; ret
0x00000000000f819c : dec dword ptr [rcx + 0x63] ; ret 0x8b49
0x000000000016929d : dec dword ptr [rcx + 9] ; ret 0x8d4c
0x000000000006bfb3 : dec dword ptr [rcx + rcx*4 + 0x2c] ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000031bbd : dec dword ptr [rcx + rcx*4 - 0x11] ; call qword ptr [rip + 0x18c211]
0x000000000003653c : dec dword ptr [rcx + rcx*4 - 0x3e] ; jmp 0x3656a
0x0000000000034565 : dec dword ptr [rcx + rcx*4 - 1] ; call 0x70867
0x00000000000693a1 : dec dword ptr [rcx + rcx*4 - 1] ; call 0x75626
0x00000000000af470 : dec dword ptr [rcx - 0x39] ; ret 0xfffe
0x00000000000afa14 : dec dword ptr [rcx - 0x73] ; add qword ptr [rcx - 0x77], r8 ; ret
0x000000000016b96e : dec dword ptr [rcx - 0x75] ; jge 0x16b98c ; add rdi, rbx ; call r12
0x00000000000878dd : dec dword ptr [rcx - 0x77] ; add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000051277 : dec dword ptr [rcx - 0x77] ; ret
0x00000000000ce942 : dec dword ptr [rcx - 0x77] ; ret 0x4be9
0x000000000010bee4 : dec dword ptr [rcx - 0x77] ; ret 0x854d
0x000000000008a1af : dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x0000000000083262 : dec dword ptr [rcx - 0x7b] ; ret
0x00000000001016a5 : dec dword ptr [rcx - 0x7d] ; mov byte ptr [rcx], 0xe9 ; ret
0x000000000002921a : dec dword ptr [rcx - 0x7d] ; ret
0x00000000000a4c81 : dec dword ptr [rcx - 0x7d] ; ret 0x4908
0x000000000004ee4b : dec dword ptr [rcx - 0x8cf7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000080cb3 : dec dword ptr [rcx - 9] ; ret
0x000000000004da37 : dec dword ptr [rcx] ; ja 0x4da17 ; mov rax, rsi ; ret
0x0000000000045038 : dec dword ptr [rcx] ; ret
0x00000000000cae44 : dec dword ptr [rcx] ; ret 0x8944
0x00000000000ff21e : dec dword ptr [rcx] ; setbe al ; ret
0x00000000000b018c : dec dword ptr [rdi + rcx + 0x46] ; ret 0x8548
0x000000000004d9cc : dec dword ptr [rdi] ; ja 0x4d9b7 ; mov rax, rsi ; ret
0x0000000000053e4f : dec dword ptr [rdi] ; lahf ; ret 0x87e
0x0000000000054b36 : dec dword ptr [rdi] ; lahf ; ret 0x8f0f
0x0000000000061143 : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x000000000003068a : dec dword ptr [rdi] ; mov bh, 4 ; js 0x3061b ; loopne 0x3069b ; ret
0x00000000000ffac5 : dec dword ptr [rdi] ; mov bh, 4 ; js 0xffa56 ; loopne 0xffad6 ; ret
0x000000000004244e : dec dword ptr [rdi] ; mov word ptr [rbx], gs ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x39], cl ; ret
0x000000000005441b : dec dword ptr [rdi] ; ret
0x000000000002720f : dec dword ptr [rdi] ; ret 0x66c3
0x0000000000109ad0 : dec dword ptr [rdi] ; ret 0x8348
0x000000000008946c : dec dword ptr [rdi] ; ret 0xfc3
0x000000000002910b : dec dword ptr [rdi] ; test byte ptr [rdx], dh ; add al, 0 ; add bh, dh ; ret 0
0x000000000011aa13 : dec dword ptr [rdi] ; test dh, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000005ff83 : dec dword ptr [rdi] ; test dword ptr [rdx - 0x76ffffa1], esi ; ret
0x00000000001669d0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000861b3 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x0000000000038af0 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd321
0x0000000000075ddc : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000078fd2 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000efcc2 : dec dword ptr es:[rbp + 0x63] ; dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000009d839 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x000000000009b7e1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000034e11 : dec qword ptr [r8 - 0x7d] ; ret 0x4901
0x0000000000029326 : dec qword ptr [rax - 0x73] ; add qword ptr [rax + 0x39], rcx ; ret
0x0000000000028a60 : dec qword ptr [rax - 0x7d] ; ret 0x8801
0x000000000002d255 : div byte ptr [rax + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x2d268 ; ret
0x0000000000037959 : div byte ptr [rbp + 0xc] ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000f822b : div byte ptr [rbp + 2] ; ret
0x0000000000099cb6 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000000904ae : div byte ptr [rbp - 0x11] ; mov qword ptr [rdx], rcx ; ret
0x0000000000080d46 : div byte ptr [rcx + rcx*2 + 0x48] ; mov dword ptr [rsi], edi ; ret
0x00000000000760dc : div byte ptr [rcx] ; in eax, dx ; sub rdx, r8 ; call 0x22318
0x00000000000da34c : div byte ptr [rdx + 0xf] ; mov dh, 0x57 ; cmp dh, dh ; ret 0xf08
0x00000000000ebb29 : div dword ptr [rdi - 0x14] ; ret
0x0000000000053c86 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x00000000000a4189 : div ecx ; mov eax, eax ; ret
0x00000000000a41a3 : div esi ; mov eax, eax ; ret
0x0000000000053c85 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x00000000000f6e86 : divps xmm0, xmm2 ; jmp 0xf6edc
0x00000000000f6e85 : divsd xmm0, xmm2 ; jmp 0xf6edd
0x000000000004d9cd : emms ; loopne 0x4da1f ; mov eax, esi ; ret
0x00000000000907be : enter -0x208c, -0x3d ; xor eax, eax ; ret
0x000000000015b807 : enter -0x23b, -0x29 ; ret 0xc085
0x000000000009a131 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000bae21 : enter -0x2fd7, -0x2f ; call 0xffffffffeacd7031
0x00000000000f4f6a : enter -0x39bf, 0x40 ; inc dword ptr [rax] ; ret
0x0000000000124d54 : enter -0x3eb8, -0x16 ; adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x00000000000763cc : enter -0x3eb8, -8 ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000166b44 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000009d6b6 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x000000000009b69e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000009d836 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x000000000009b7de : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000007f4da : enter -0x72bf, 0x40 ; inc ebx ; xor eax, eax ; ret
0x000000000015af40 : enter -0x73b, 0x77 ; ret
0x0000000000036f2c : enter -0x73f, 0x1f ; not eax ; and eax, edx ; ret
0x000000000003635a : enter -0x76b4, -0x3e ; jmp 0x3638c
0x00000000000592d6 : enter -0x76f9, 2 ; mov eax, 1 ; ret
0x000000000015bf34 : enter -2, -1 ; ret
0x0000000000052632 : enter -6, -1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000000655ae : enter -6, -1 ; jmp 0x6557b
0x000000000012729b : enter 0, 0 ; call rax
0x000000000012724d : enter 0, 0 ; jmp rcx
0x000000000015f3b9 : enter 0x148, -8 ; vzeroupper ; ret
0x000000000015af21 : enter 0x1d75, -0x7d ; ret 0x8101
0x000000000015b3f1 : enter 0x2275, -0x7d ; ret 0x8101
0x00000000000370a1 : enter 0x280f, -0x3f ; ret
0x000000000004a1d1 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000015f75e : enter 0x2948, -0x30 ; vzeroupper ; ret
0x000000000015abd1 : enter 0x2948, -8 ; ret
0x0000000000160ba1 : enter 0x2c75, -0x7d ; ret 0x8104
0x00000000000922dd : enter 0x31c3, -0x40 ; ret
0x0000000000059828 : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x000000000012a82b : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x000000000012a733 : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x0000000000129ed7 : enter 0x4789, 0x48 ; mov eax, 1 ; ret
0x0000000000129e3c : enter 0x4789, 0x54 ; mov eax, 1 ; ret
0x0000000000129f04 : enter 0x4789, 0x58 ; mov eax, 1 ; ret
0x0000000000083341 : enter 0x4801, -0x7d ; ret 0x4910
0x000000000010a564 : enter 0x556, 0 ; cmove rax, rdx ; ret
0x00000000000d18c1 : enter 0x6349, 0x14 ; mov dword ptr [rcx + rax - 0x36], ecx ; jmp rdx
0x000000000008a874 : enter 0xd53, 0 ; cmove rax, rdx ; ret
0x000000000012e5ca : enter 0xf41, 0x43 ; ret 0xf801
0x0000000000162bd6 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000099479 : enter 0xf66, -0x15 ; ret
0x00000000000a1154 : enter 5, 0 ; ret
0x0000000000023ae1 : fadd dword ptr [rax] ; add byte ptr [rax], al ; jne 0x23ab1 ; ret
0x00000000000706a8 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000045b57 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000ee3da : fadd dword ptr [rax] ; ret
0x000000000004e490 : fadd dword ptr [rcx + 0xf] ; ret
0x00000000000b600e : fadd dword ptr [rcx + rdi - 0x3f] ; cmovg eax, edx ; ret
0x0000000000109aca : fadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x0000000000036ae8 : fadd st(0) ; add rsp, 8 ; ret
0x0000000000036a9c : fadd st(0) ; ret
0x0000000000167168 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x0000000000163f2e : fadd st(3) ; ret
0x00000000000a4683 : fadd st(3), st(0) ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000f96e0 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x0000000000162721 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000072e97 : fbstp dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; pop r13 ; jmp rax
0x000000000012296c : fbstp dword ptr [rcx] ; ror byte ptr [rax - 0x75], 0x4c ; and al, 8 ; call rcx
0x000000000009070d : fcmovb st(0), st(3) ; nop ; ret
0x0000000000080b1a : fcmovbe st(0), st(5) ; adc eax, dword ptr [rax] ; ret
0x000000000015f87b : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x000000000004fa40 : fcmovnb st(0), st(6) ; test dword ptr [rax], ebx ; idiv edi ; jmp qword ptr [rax]
0x00000000000f409f : fcomp dword ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000008cdeb : fcomp dword ptr [rbx + 0x48] ; cmovne eax, edi ; ret
0x00000000000717d8 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000072b9d : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000002d3eb : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000347fb : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000087d5c : fcomp dword ptr [rbx - 0x3d] ; nop ; xor eax, eax ; ret
0x00000000000f703f : fcomp dword ptr [rdx + 0x5b] ; ret
0x0000000000058ba6 : fcomp st(5) ; fsubr st(1) ; ret 0xfffe
0x00000000000696bb : fcos ; dec dword ptr [rax + 0x39] ; ret
0x000000000012c2f4 : fdiv dword ptr [rbp + 0x20] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001380c3 : fdiv dword ptr [rbp + 6] ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000123fad : fdiv qword ptr [rbp - 0x54] ; mov eax, 1 ; jmp 0x123f82
0x0000000000139d08 : fdiv qword ptr [rcx + 8] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000085b8e : fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000bd73e : fdivr st(7) ; dec dword ptr [rax - 0x41] ; ret
0x00000000001536dd : fdivr st(7) ; ret
0x000000000009e56e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000106749 : fdivrp st(6) ; ret 0x7508
0x000000000011b02e : ffree st(3) ; xor eax, eax ; ret
0x00000000000bd7b9 : fiadd dword ptr [rax + 0xf482df9] ; ret 0x8949
0x000000000003cb18 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x00000000000a8221 : fiadd dword ptr [rbp + 0x450f48ff] ; ret 0x8948
0x000000000004c330 : fiadd dword ptr [rbp - 0x7b] ; fisttp dword ptr [rax + 0xf] ; ret 0x8948
0x0000000000053c71 : fiadd word ptr [rcx + rcx*4 - 0x38] ; ret
0x0000000000121a06 : ficom word ptr [rax] ; or al, byte ptr [rax] ; test eax, eax ; je 0x121a18 ; ret
0x0000000000089146 : ficomp dword ptr [rbx + 0x5d] ; ret
0x000000000003d3d6 : fidiv dword ptr [rcx] ; dec dword ptr [rax - 0x39] ; ret
0x000000000013739d : fidivr dword ptr [rax + 1] ; ret
0x000000000005a6e3 : fidivr dword ptr [rcx] ; ret 0x820f
0x00000000000bc2bd : fidivr dword ptr [rsi] ; jmp rdx
0x0000000000131c50 : fidivr word ptr [rax - 1] ; ret
0x00000000000e7499 : fidivr word ptr [rcx] ; ret
0x00000000000e5b19 : fild dword ptr [rbx - 0x6af0fd08] ; ret
0x00000000000e5579 : fild dword ptr [rbx - 0x6bf0fb06] ; ret
0x00000000000e55fe : fild dword ptr [rbx - 0x6bf0fb08] ; ret
0x00000000000e56bb : fild dword ptr [rbx - 0x76b6f506] ; ret 0xf44
0x000000000016760d : fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x3145
0x000000000016b343 : fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x94c
0x00000000001076fc : fild dword ptr [rcx - 0xa] ; and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x000000000002b8d7 : fild dword ptr [rcx - 0xa] ; ret 0xf06
0x000000000007b8fb : fild word ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax - 0x77], cl ; ret 0x1b8
0x0000000000082572 : fimul dword ptr [rax + 0x21] ; ret 0x8948
0x0000000000055ffd : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x00000000000890e3 : fimul dword ptr [rax + 1] ; ret 0x772
0x000000000003d404 : fimul dword ptr [rax + 9] ; ret 0x850f
0x00000000000372a8 : fimul dword ptr [rax + 9] ; ret 0x8948
0x0000000000155f96 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000f04a6 : fimul dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ab2c8 : fimul dword ptr [rax - 0x77] ; ret
0x00000000000c61e6 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000113197 : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00000000000beafe : fimul dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x48 ; ret 0x8348
0x0000000000087f2b : fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x0000000000088167 : fimul dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, r12 ; call rax
0x0000000000124627 : fimul dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, r13 ; call rax
0x0000000000152482 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39b33a1
0x0000000000153502 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39b4421
0x0000000000036826 : fimul dword ptr [rcx] ; ret 0xc889
0x00000000000c0b44 : fimul dword ptr [rdi] ; ret 0x144
0x0000000000114939 : fimul dword ptr [rdx] ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000008fcca : fimul word ptr [rax + 0x29] ; ret 0x14c
0x000000000010154c : fimul word ptr [rax - 0x39] ; ret 0xffff
0x00000000000f433e : fimul word ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8348
0x00000000000d1167 : fimul word ptr [rax - 0x77] ; out dx, eax ; call r12
0x000000000012fcf3 : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000001035be : fimul word ptr [rax - 0x77] ; ret
0x00000000000487c2 : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x48818
0x000000000004a012 : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x4a068
0x00000000000f82aa : fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x0000000000088041 : fimul word ptr [rcx + rcx*4 - 0x11] ; call rax
0x00000000000396bf : fimul word ptr [rcx + rcx*4 - 0x11] ; mov rax, qword ptr [rsp] ; call rax
0x000000000012cf11 : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000011af4d : fimul word ptr [rcx - 0x76b7a411] ; ret 0x415d
0x0000000000137125 : fimul word ptr [rdi] ; test byte ptr [rax + rax - 0x7cb70000], dh ; ret
0x000000000006e369 : fist word ptr [rcx] ; add byte ptr [rcx - 0x80], al ; int 0xc2
0x00000000000f78c1 : fistp word ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; jmp rax
0x0000000000072c8d : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000075354 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x000000000007c20f : fistp word ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; jmp rax
0x000000000004c333 : fisttp dword ptr [rax + 0xf] ; ret 0x8948
0x00000000000b7427 : fisttp dword ptr [rax + 1] ; ret
0x000000000002d46a : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000493e5 : fisttp dword ptr [rax - 0x77] ; ret
0x0000000000168140 : fisttp dword ptr [rax - 0x77] ; ret 0x3be9
0x00000000000fe357 : fisttp dword ptr [rax - 0x77] ; sbb eax, 0xbfe61 ; pop rbx ; ret
0x00000000000fe33d : fisttp dword ptr [rax - 0x77] ; sbb eax, 0xbfe7b ; pop rbx ; ret
0x00000000000e42bf : fisttp dword ptr [rax - 0x7d] ; ret
0x000000000004e48e : fisttp dword ptr [rcx + 0x4d0f41d8] ; ret
0x00000000000e4034 : fisttp dword ptr [rcx - 0x75] ; adc ecx, dword ptr [rax + 1] ; ret 0x3944
0x00000000000493ff : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000063174 : fisttp dword ptr [rdi] ; lahf ; ret 0xd329
0x0000000000119660 : fisttp dword ptr [rdi] ; ret 0x8b48
0x00000000000b7618 : fisttp dword ptr [rdi] ; sahf ; ret 0xc221
0x000000000008d120 : fisttp dword ptr [rdi] ; test byte ptr [rbx], bl ; or eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000087bdf : fisttp dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000000dd7dd : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x8548
0x00000000000dd744 : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x854d
0x0000000000110208 : fisttp dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001035bb : fisttp qword ptr [rax + 0x29] ; fimul word ptr [rax - 0x77] ; ret
0x000000000015aa42 : fisttp qword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x000000000010142d : fisttp qword ptr [rax - 0x39] ; ret 0xffff
0x0000000000034e35 : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x000000000002c922 : fisttp qword ptr [rdi] ; ret 0xc389
0x000000000008c3af : fisttp word ptr [rax + 0x29] ; ret 0x8d48
0x0000000000035d92 : fisttp word ptr [rax - 0x39] ; ret
0x000000000005ca9b : fisttp word ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax - 0x77] ; ret 0x51ff
0x00000000001153e2 : fisttp word ptr [rax - 0x75] ; add al, 0x24 ; call rax
0x0000000000136fd7 : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x0000000000114a09 : fisttp word ptr [rax - 0x75] ; and al, 8 ; call rax
0x00000000000253ae : fisttp word ptr [rax - 0x75] ; cwde ; call rax
0x0000000000106005 : fisttp word ptr [rax - 0x77] ; ret
0x000000000008cb69 : fisttp word ptr [rax - 0x77] ; ret 0x5d5b
0x00000000000bc358 : fisttp word ptr [rax - 0x77] ; ret 0x8948
0x000000000012e6c2 : fisttp word ptr [rax - 0x77] ; ret 0x8949
0x0000000000116a01 : fisttp word ptr [rax - 0x77] ; ret 0xc031
0x0000000000050eeb : fisttp word ptr [rax - 0x77] ; ret 0xff41
0x0000000000025d63 : fisttp word ptr [rax - 0x7d] ; ret
0x000000000004947f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000004c83c : fisttp word ptr [rcx - 0x39] ; ret
0x000000000015c8ed : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000000e2c98 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x0000000000162af1 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000589a7 : fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000000d9616 : fisub dword ptr [rsi - 0x7f] ; loope 0xd9621 ; add esi, esi ; ret
0x0000000000169b23 : fisub dword ptr [rsi - 0x7f] ; ret 0x7fff
0x00000000001627f1 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000161091 : fisubr word ptr [rcx] ; enter -0x73b, 0x77 ; ret
0x0000000000167995 : fld dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x3145
0x000000000004965b : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000015f5b2 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000004ec5c : fld xword ptr [rcx] ; ret
0x0000000000036a98 : fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x00000000000369fc : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000036962 : fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x000000000003687d : fld xword ptr [rsp + 8] ; ret
0x00000000000368ec : fld xword ptr [rsp - 0x18] ; ret
0x00000000000b5139 : fldenv dword ptr [rsi + 0xf] ; jbe 0xb5196 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000093ff9 : fldenv dword ptr [rsi + 0xf] ; je 0x94056 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000942e7 : fldenv dword ptr [rsi + 0xf] ; je 0x94344 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000162b71 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000093ef1 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000000cf18d : fmul dword ptr [r8 - 0x7d] ; ret
0x0000000000048864 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000077dda : fmul dword ptr [rax - 0x77] ; ret
0x000000000006bfb7 : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000028ba4 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000011f839 : fmul dword ptr [rcx + rcx*4 - 0xf] ; mov rdi, r13 ; call r12
0x00000000000ab183 : fmul dword ptr [rcx - 0x39] ; ret
0x00000000000bdeb5 : fmul dword ptr [rdi] ; mov dh, 0x40 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000724d2 : fmul dword ptr [rdi] ; test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000b35cd : fmul qword ptr [rax - 0x77] ; ret
0x00000000000c4113 : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000091099 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000094eff : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000011014b : fmul qword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000013cea0 : fnstcw word ptr [rsi] ; jmp r9
0x0000000000161af7 : fnstcw word ptr [rsi] ; jmp rcx
0x0000000000036aaa : fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x00000000001628f1 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000036a00 : fscale ; fstp st(1) ; ret
0x0000000000034985 : fsin ; dec dword ptr [rax - 0x77] ; ret 0xf748
0x000000000008c5a6 : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000036aac : fstp st(0) ; and eax, 0x200 ; ret
0x0000000000036a02 : fstp st(1) ; ret
0x0000000000036960 : fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x00000000000369ae : fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x00000000000368ea : fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x000000000003808c : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000038058 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000036aad : fsub dword ptr [rip + 0x200] ; ret
0x0000000000162bf1 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009a514 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000000a373b : fsub qword ptr [rsi + 0xf] ; jmp 0xa3707
0x00000000001629f1 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009959c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000000c1ce6 : fsub st(1), st(0) ; ret 0xffe4
0x000000000011ed9d : fsub st(3), st(0) ; mov al, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000109637 : fsubp st(0) ; ret
0x000000000010a680 : fsubr qword ptr [rax + 0xf480005] ; ret 0xfc3
0x000000000015b413 : fsubr qword ptr [rcx] ; enter -0x73b, 0x77 ; ret
0x00000000000b0ffb : fsubr qword ptr [rcx] ; ret
0x0000000000058ba8 : fsubr st(1) ; ret 0xfffe
0x0000000000036966 : fsubrp st(1) ; ret
0x0000000000130350 : fucomi st(0) ; stosb byte ptr [rdi], al ; ret
0x00000000000d70b3 : fucomi st(1) ; ret
0x000000000003f558 : fucomi st(1) ; ret 0xfffb
0x00000000000c8852 : fucompi st(0) ; jns 0xc885a ; dec dword ptr [rax - 0x77] ; ret
0x000000000007912a : fucompi st(0) ; mov al, 0x58 ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x790c0
0x000000000007a072 : fucompi st(0) ; mov byte ptr [rbx - 0x76b70001], cl ; ret 0x38b
0x00000000000f52f4 : fucompi st(0) ; out 0xcf, al ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000002e207 : fucompi st(0) ; ret
0x0000000000102607 : fucompi st(0) ; ret 0xfff7
0x00000000000ca1cd : fucompi st(0) ; sub eax, 0x89000220 ; ret 0xc748
0x00000000000f91ab : hlt ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000090773 : hlt ; cmp ecx, esi ; je 0x9076d ; ret
0x00000000000e0d10 : hlt ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000e1fa9 : hlt ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000010ac5d : hlt ; dec dword ptr [rax - 0x7f] ; ret
0x000000000006e368 : hlt ; fist word ptr [rcx] ; add byte ptr [rcx - 0x80], al ; int 0xc2
0x0000000000167045 : hlt ; jne 0x167167 ; ret
0x0000000000167044 : hlt ; jne 0x167168 ; ret
0x00000000000e3bae : hlt ; jne 0xe3ba6 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000e3bad : hlt ; jne 0xe3ba7 ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000010d568 : hlt ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000909ea : hlt ; mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x000000000009091d : hlt ; mov byte ptr [rdi + 4], dl ; ret
0x000000000014427a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013eefe : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000166653 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000009073b : hlt ; ret
0x0000000000166657 : hlt ; sub eax, edx ; ret
0x000000000005bd78 : idiv bh ; dec dword ptr [rcx + 0x63] ; ret
0x000000000005acd8 : idiv bh ; inc esi ; test esp, ecx ; idiv bh ; jmp qword ptr [rax]
0x000000000005ab4e : idiv bh ; jmp qword ptr [rax]
0x00000000000f6ac5 : idiv bh ; mov rax, rbx ; pop rbx ; ret
0x00000000000f703a : idiv bh ; pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x0000000000104080 : idiv byte ptr [rdi + 0x2000004] ; call rcx
0x00000000000f2396 : idiv byte ptr [rdi - 3] ; dec dword ptr [rax - 0x77] ; ret
0x000000000002720a : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x000000000004f079 : idiv edi ; call qword ptr [rax]
0x00000000000388c5 : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000010bc1d : idiv edi ; dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000004ee4f : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000467ca : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000004fd09 : idiv edi ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000046626 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret 0x4901
0x000000000004f852 : idiv edi ; inc dword ptr [rax - 0x8e743] ; jmp qword ptr [rax]
0x000000000004f6c6 : idiv edi ; inc dword ptr [rbp - 0x7b] ; in al, 0xf ; lahf ; ret
0x000000000004f002 : idiv edi ; jmp qword ptr [rax]
0x000000000003acaa : idiv esi ; ret
0x000000000003ac87 : idiv esi ; shl rdx, 0x20 ; or rax, rdx ; ret
0x000000000003aca9 : idiv rsi ; ret
0x0000000000168c3b : imul byte ptr [rcx] ; ret 0xd189
0x000000000009dd68 : imul cl ; ret 8
0x00000000000459a5 : imul dword ptr [rbx + 0x4c60017] ; adc byte ptr [rax], al ; ret
0x0000000000133a20 : imul eax ; cmp cl, byte ptr [rbp - 0x76b70005] ; ret
0x0000000000133351 : imul eax ; jns 0x13334c ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000dd8e7 : imul eax ; ret
0x00000000000c479f : imul eax ; sub ebp, dword ptr [rdi + rax] ; add byte ptr [rcx + rcx*4 - 0x10], cl ; call rax
0x00000000001651b1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000001671e6 : imul eax, edx ; shr rax, 0x38 ; ret
0x0000000000103c64 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007aaa7 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103bc4 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000107575 : imul ecx, dword ptr [rbx], 0x440f4800 ; ret
0x00000000000ba479 : imul ecx, ecx, 0x64 ; cmp edi, ecx ; je 0xba48f ; ret
0x000000000002be11 : imul edi, edi, 0x8941ffff ; ret 0x64e9
0x0000000000036539 : imul edi, edx, 0x894cffff ; ret 0x25eb
0x00000000000338f5 : imul edi, esi, -1 ; dec dword ptr [rcx + 0x3c8349c0] ; ret
0x0000000000103c14 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004745b : imul edx, dword ptr [rdi], 0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000004aeb3 : imul esi, ebp, 0x63480012 ; ret 0xc748
0x0000000000084631 : imul esp, dword ptr [rbx + rdx - 0x2ac6b700], 0xf ; xchg eax, ebp ; ret 0xb60f
0x00000000001671e5 : imul rax, rdx ; shr rax, 0x38 ; ret
0x0000000000167078 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000000fc345 : in al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x0000000000060f48 : in al, 0 ; and dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x000000000002f9d4 : in al, 0x18 ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000907bb : in al, 0x41 ; cmp eax, ecx ; je 0x907a6 ; ret
0x0000000000123b7e : in al, 0x49 ; lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x00000000000ebb8a : in al, 0x5b ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000008c17a : in al, 0x5b ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000d31db : in al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000009e94c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000000fb958 : in al, 0x74 ; or ecx, dword ptr [rax - 0x77] ; out dx, eax ; call r12
0x000000000012ca69 : in al, 0x75 ; or al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000a654b : in al, 0x75 ; ret 0x8b48
0x00000000000f64c0 : in al, 0x7c ; or al, 0 ; ret
0x00000000000fe05f : in al, 0x89 ; ret
0x000000000010f8f8 : in al, 0xa ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000010a4e8 : in al, 0xa4 ; add eax, 0x440f4800 ; ret 0xfc3
0x00000000000a4cf6 : in al, 0xb ; add bh, dh ; ret 0
0x000000000005b6e4 : in al, 0xc6 ; test esp, ecx ; idiv bh ; jmp qword ptr [rax]
0x00000000000e2979 : in al, 0xd ; add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x0000000000034f72 : in al, 0xeb ; ret
0x000000000004f6cb : in al, 0xf ; lahf ; ret
0x0000000000100a9b : in al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x00000000000dd58e : in al, 0xf ; xchg eax, esp ; ret 0x8548
0x000000000014425a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000a3f82 : in al, 0xf3 ; ret
0x000000000016c131 : in al, 4 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000009f7e8 : in al, 6 ; add byte ptr [rax], al ; ret
0x00000000000ecead : in al, dx ; adc al, ch ; lodsb al, byte ptr [rsi] ; ret 1
0x00000000000fcb96 : in al, dx ; adc al, ch ; ret
0x0000000000053773 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000d8308 : in al, dx ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0xb60f
0x0000000000155660 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001148a3 : in al, dx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e2978 : in al, dx ; in al, 0xd ; add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x00000000000d250d : in al, dx ; jl 0xd2549 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f4fc3 : in al, dx ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000013eefa : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000090a02 : in al, dx ; mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x0000000000090ae7 : in al, dx ; mov word ptr [rdi + 4], dx ; ret
0x000000000014465a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000010b926 : in al, dx ; or al, ch ; ret
0x000000000010b9c7 : in al, dx ; or byte ptr [rax + 0x39], cl ; ret 0x976
0x00000000000712e7 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x0000000000081642 : in al, dx ; or byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8348
0x0000000000084d6b : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000156384 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000048bd7 : in al, dx ; or byte ptr [rbp + 0x39], cl ; ret
0x0000000000104a75 : in al, dx ; or byte ptr [rbx + 0x5e0b185f], cl ; sbb dh, dh ; ret
0x0000000000131bd1 : in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000906a3 : in al, dx ; ret
0x00000000000fbc5a : in al, dx ; sbb al, ch ; call rsp
0x0000000000035eb8 : in al, dx ; sbb byte ptr [rax], 0 ; xor eax, eax ; pop rbx ; ret
0x00000000000ec258 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000a445c : in al, dx ; sub byte ptr [rbx + rcx*4 + 0x35], cl ; ret
0x0000000000037637 : in eax, 0x1b ; adc eax, dword ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ceddd : in eax, 0x39 ; ret 0x850f
0x00000000000ebb7a : in eax, 0x44 ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010f829 : in eax, 0xa ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000058b7c : in eax, 0xdf ; loopne 0x58b0d ; ret 0xe680
0x00000000000629f0 : in eax, 0xeb ; ret
0x00000000000b69b3 : in eax, 0xf ; je 0xb69d8 ; add rax, 2 ; ret
0x00000000000a40e9 : in eax, 0xf0 ; pop rbx ; cmovne rax, rdx ; ret
0x00000000001442da : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000037607 : in eax, 0xfb ; adc al, byte ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000005bc60 : in eax, 0xff ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000bca21 : in eax, 0xff ; inc dword ptr [rcx - 0x77] ; sbb byte ptr [r8 - 0x77], r9b ; int 0x80
0x00000000000f896d : in eax, 8 ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000008a6b0 : in eax, 8 ; je 0x8a676 ; ret
0x00000000000a4d30 : in eax, 8 ; je 0xa4cf6 ; ret
0x000000000003964d : in eax, dx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000010176f : in eax, dx ; je 0x101791 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000103e8e : in eax, dx ; jg 0x103e69 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001303cd : in eax, dx ; jle 0x130408 ; call 0x12c6d5
0x000000000016ba33 : in eax, dx ; jne 0x16ba21 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016bd75 : in eax, dx ; jne 0x16bd5f ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016bea9 : in eax, dx ; jne 0x16be89 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e5ef4 : in eax, dx ; jne 0xe5ee1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a3652 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000a3019 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a302f : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a3051 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a306f : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a308f : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a30b5 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a30d1 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a30f1 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a3111 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a3137 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a3159 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a3177 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a3197 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a31b3 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a31d3 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a31f3 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a3213 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a3239 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a3289 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a2f5f : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a2f7d : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a2f9d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a2fbf : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a2fdf : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a2fff : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a2e95 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a2ea7 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a2ebd : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a2ed5 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a2eeb : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a2efd : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a2f1b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a2f27 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a2f3d : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a2e81 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000013ed0a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a720f : in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xa722d
0x00000000000a9a4e : in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xa9a6d
0x00000000000ac08f : in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xac0ad
0x00000000000b2c6e : in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xb2c8d
0x00000000001446da : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000dc73b : in eax, dx ; movsxd rax, dword ptr [rdx + r13*4] ; add rax, rdx ; jmp rax
0x0000000000159ef0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000fbb1e : in eax, dx ; pop rax ; pop rdi ; call rax
0x0000000000030e94 : in eax, dx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000005cc5f : in eax, dx ; push rbp ; cld ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000074f42 : in eax, dx ; ret
0x0000000000133aee : in eax, dx ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a37a2 : in eax, dx ; sub rax, 1 ; ret
0x00000000000760de : in eax, dx ; sub rdx, r8 ; call 0x22316
0x0000000000088a02 : in eax, dx ; xor eax, eax ; ret
0x00000000001647ac : inc bl ; cmp dl, 1 ; jb 0x1647be ; mov byte ptr [rdi], cl ; ret
0x00000000000468cd : inc byte ptr [r11 - 0x68f0fc08] ; ret 0x8545
0x0000000000088727 : inc byte ptr [rax + 0x48fe5063] ; mov dword ptr [rbx], edi ; call rcx
0x0000000000118e53 : inc byte ptr [rax + 0xf000000] ; ret 0xfc3
0x000000000007eb26 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x00000000000468ce : inc byte ptr [rbx - 0x68f0fc08] ; ret 0x8545
0x000000000002d259 : inc byte ptr [rbx] ; je 0x2d264 ; ret
0x00000000000569ec : inc byte ptr [rcx + 0x48] ; cmove edi, edx ; mov rdx, r8 ; jmp 0x56a0b
0x00000000000c2e85 : inc byte ptr [rcx] ; je 0xc2e96 ; xor eax, eax ; ret
0x000000000007a57e : inc byte ptr [rdx] ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000898a5 : inc dword ptr [eax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000904b9 : inc dword ptr [r8] ; mov qword ptr [rdx], rcx ; ret
0x00000000000f96ad : inc dword ptr [rax + 0x4e752ffa] ; mov rdx, rax ; jmp 0xf96ce
0x00000000000cd030 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x000000000004f854 : inc dword ptr [rax - 0x8e743] ; jmp qword ptr [rax]
0x000000000005b40f : inc dword ptr [rax - 0x93343] ; jmp qword ptr [rax]
0x0000000000169b1f : inc dword ptr [rax] ; add bh, dh ; fisub dword ptr [rsi - 0x7f] ; ret 0x7fff
0x00000000001692bf : inc dword ptr [rax] ; add byte ptr [rax + 0x21], cl ; ret 0x8948
0x00000000000898a6 : inc dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000c9c84 : inc dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000002f815 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000039839 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000006900f : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xffdf
0x000000000006ad6c : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x00000000000a4090 : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; ret
0x00000000000c9d90 : inc dword ptr [rax] ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000ae3cc : inc dword ptr [rax] ; add byte ptr [rax], al ; je 0xae3d9 ; ret
0x000000000016705d : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000163107 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000169ca9 : inc dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x894d
0x00000000001699b2 : inc dword ptr [rax] ; add byte ptr [rcx], bl ; sal bh, cl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x0000000000169b50 : inc dword ptr [rax] ; add byte ptr [rcx], bl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x00000000000904ba : inc dword ptr [rax] ; mov qword ptr [rdx], rcx ; ret
0x000000000010d4b1 : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x00000000000f4f6e : inc dword ptr [rax] ; ret
0x000000000010483d : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6af0be40], cl ; ret 0x3945
0x00000000000cdf10 : inc dword ptr [rbp + 0x39] ; ror byte ptr [rdi], 1 ; xchg eax, esi ; ret 0x8341
0x0000000000045a66 : inc dword ptr [rbp + 0x5b0574c0] ; ret
0x000000000012c915 : inc dword ptr [rbp - 0x75] ; add byte ptr gs:[rax - 0x7d], cl ; ret
0x000000000004f6c8 : inc dword ptr [rbp - 0x7b] ; in al, 0xf ; lahf ; ret
0x00000000000f59f2 : inc dword ptr [rbp - 0x7cce8b40] ; ret
0x00000000000f5a5a : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00000000000632e9 : inc dword ptr [rbx + 0x634802c2] ; ror byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000005f456 : inc dword ptr [rbx + rcx*4 + 0x25] ; ret 0x1640
0x0000000000051345 : inc dword ptr [rbx - 0x427cfe20] ; call 0x11051353
0x00000000000bd166 : inc dword ptr [rbx - 0x76be9b40] ; adc al, 0xe9 ; ret 0xffe7
0x000000000013483d : inc dword ptr [rbx - 0x7bf00008] ; ret 1
0x0000000000118067 : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x000000000003b678 : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000000a4187 : inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x00000000000a40bc : inc dword ptr [rbx] ; ret
0x000000000012f475 : inc dword ptr [rcx + 0x5c] ; xor eax, eax ; pop r13 ; pop r14 ; jmp rcx
0x000000000012f4a6 : inc dword ptr [rcx + 0x5d] ; xor eax, eax ; pop r14 ; jmp rcx
0x0000000000129604 : inc dword ptr [rcx + 0xfffb] ; add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x0000000000044202 : inc dword ptr [rcx - 0x47] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x1f0f
0x000000000005911a : inc dword ptr [rcx - 0x75] ; add al, 0x83 ; ret
0x00000000000bc73d : inc dword ptr [rcx - 0x77] ; or byte ptr [r8 - 0x77], r9b ; int 0x80
0x00000000000c14c9 : inc dword ptr [rcx - 0x77] ; ret
0x00000000000bac5e : inc dword ptr [rcx - 0x77] ; ret 0x23e9
0x000000000005df28 : inc dword ptr [rcx - 0x77] ; ret 0x2941
0x000000000002afdc : inc dword ptr [rcx - 0x77] ; ret 0x5ce9
0x000000000002be14 : inc dword ptr [rcx - 0x77] ; ret 0x64e9
0x00000000000d65fa : inc dword ptr [rcx - 0x77] ; ret 0x8d4c
0x00000000000cdec6 : inc dword ptr [rcx - 0x77] ; ret 0xf883
0x00000000000bca23 : inc dword ptr [rcx - 0x77] ; sbb byte ptr [r8 - 0x77], r9b ; int 0x80
0x0000000000058405 : inc dword ptr [rcx - 0x7d] ; ret 0xc604
0x0000000000119ba5 : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret 0x149
0x00000000000ccd03 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000005fda5 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b8558 : inc dword ptr [rcx] ; ret 0xb70f
0x000000000004d9f4 : inc dword ptr [rdi] ; ja 0x4d9df ; mov rax, rsi ; ret
0x000000000004752a : inc dword ptr [rip - 0x74bef58c] ; pop rsi ; cld ; jmp 0x47500
0x000000000015d0cd : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000000b8557 : inc dword ptr ss:[rcx] ; ret 0xb70f
0x000000000003684d : inc eax ; shr eax, 0x1f ; ret
0x000000000015c05c : inc ebp ; std ; xlatb ; ret 0xe883
0x00000000001382a7 : inc ebx ; mov eax, 0xfffffffe ; ret
0x0000000000166b49 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000d5d42 : inc ebx ; xor eax, eax ; pop rbx ; ret
0x0000000000075b12 : inc ebx ; xor eax, eax ; ret
0x00000000000c0854 : inc edi ; add ebp, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c0794 : inc edi ; add ecx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c0c5a : inc edi ; add ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001198a0 : inc esi ; add byte ptr [rcx], al ; jmp 0x11986d
0x00000000000f42f1 : inc esi ; jmp qword ptr [r8]
0x000000000004effe : inc esi ; test dword ptr [rax], ebx ; idiv edi ; jmp qword ptr [rax]
0x000000000005acda : inc esi ; test esp, ecx ; idiv bh ; jmp qword ptr [rax]
0x000000000004effd : inc rsi ; test dword ptr [rax], ebx ; idiv edi ; jmp qword ptr [rax]
0x0000000000156b04 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000369ab : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x00000000000368ed : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000036a99 : insb byte ptr [rdi], dx ; and al, 8 ; fadd st(0) ; ret
0x00000000000369fd : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000036963 : insb byte ptr [rdi], dx ; and al, 8 ; fsubrp st(1) ; ret
0x000000000003687e : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000127380 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x000000000016c146 : insb byte ptr [rdi], dx ; ret
0x0000000000079ac3 : insb byte ptr [rdi], dx ; std ; dec dword ptr [rax - 0x7f] ; ret
0x00000000000c706b : insb byte ptr [rdi], dx ; str word ptr [rax - 0x77] ; ret 0x8548
0x00000000000c7128 : insb byte ptr [rdi], dx ; str word ptr [rax - 0x77] ; ret 0x8948
0x000000000004f750 : insb byte ptr [rdi], dx ; sub eax, dword ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000159770 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000008cdb4 : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000015a670 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001169d7 : insd dword ptr [rdi], dx ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f83f6 : insd dword ptr [rdi], dx ; mov eax, 0xfad2a3e8 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000084e1f : insd dword ptr [rdi], dx ; ret
0x000000000007a57b : int 0x80
0x00000000000f59ef : int 0x83
0x000000000006e36e : int 0xc2
0x0000000000037adb : int 0xff
0x00000000000e3bab : int1 ; cmp ecx, dword ptr [rax - 0xc] ; jne 0xe3ba9 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000589cb : int1 ; cmp edx, dword ptr [rbx] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000103b14 : int1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000011ca51 : int1 ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret 0x1be
0x00000000000ba478 : int1 ; imul ecx, ecx, 0x64 ; cmp edi, ecx ; je 0xba490 ; ret
0x000000000005bc5f : int1 ; in eax, 0xff ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000090775 : int1 ; je 0x9076b ; ret
0x000000000016472f : int1 ; jl 0x164780 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000164750 : int1 ; jl 0x1647a1 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000164763 : int1 ; jl 0x1647b4 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000164838 : int1 ; jl 0x164889 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000164890 : int1 ; jl 0x1648e1 ; adc dword ptr [rsi + 3], edx ; ret
0x000000000016492d : int1 ; jl 0x16497e ; adc dword ptr [rsi + 7], edx ; ret
0x00000000000a4045 : int1 ; jmp rcx
0x00000000000d6676 : int1 ; jne 0xd6611 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000a4026 : int1 ; mov eax, 0x80000006 ; cpuid ; jmp 0xa3ffc
0x00000000000a418a : int1 ; mov eax, eax ; ret
0x00000000001440cb : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000013f4cf : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000123c30 : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000011f83c : int1 ; mov rdi, r13 ; call r12
0x00000000000a58f1 : int1 ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000024fec : int1 ; mov rsi, qword ptr [rsp + 0x18] ; xor r8d, r8d ; call rbx
0x0000000000166623 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000002c9db : int1 ; or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000008aa62 : int1 ; or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000473ce : int1 ; pop rbx ; ret
0x000000000010ac5b : int1 ; pop rdx ; hlt ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000109132 : int1 ; pop rdx ; pop r10 ; ret
0x00000000000a4aee : int1 ; ret
0x000000000003456b : int1 ; ret 3
0x0000000000166627 : int1 ; sub eax, edx ; ret
0x00000000000d2cec : int1 ; xor eax, eax ; cmp edx, dword ptr [r8 + rcx*4] ; je 0xd2d19 ; ret
0x000000000008caae : int1 ; xor eax, eax ; ret
0x00000000001096c5 : iretd ; call rax
0x000000000003a994 : iretd ; call rdx
0x00000000000fb925 : iretd ; sub rsp, 8 ; call rsi
0x0000000000105943 : ja 0x105980 ; jmp 0x10590d
0x00000000001099a1 : ja 0x1099aa ; ret
0x0000000000109a34 : ja 0x109a08 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000109a5b : ja 0x109a62 ; ret
0x000000000010b803 : ja 0x10b812 ; ret
0x000000000010b8d6 : ja 0x10b8e2 ; ret
0x000000000010d32b : ja 0x10d33e ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000118aa6 : ja 0x118aab ; ret
0x0000000000120ef5 : ja 0x120f48 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000123c55 : ja 0x123c46 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000012fb5d : ja 0x12fb79 ; ret
0x000000000012fcc7 : ja 0x12fce6 ; mov dword ptr [rdi + 0x28], edx ; ret
0x000000000012fcc3 : ja 0x12fcee ; mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; ret
0x000000000012fef3 : ja 0x12ff1c ; jbe 0x12ff07 ; add dword ptr [rdi + 0x28], esi ; ret
0x000000000012fef8 : ja 0x12ff24 ; ret
0x0000000000138255 : ja 0x13824c ; xor eax, eax ; ret
0x000000000015fcc8 : ja 0x15fd0e ; jb 0x15fcda ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001601b5 : ja 0x1601ec ; jb 0x1601c4 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000161a09 : ja 0x1619d7 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000164507 : ja 0x16450b ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000164a58 : ja 0x164ab6 ; jb 0x164a6a ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000016507d : ja 0x1650c2 ; jb 0x16508c ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000030171 : ja 0x3018c ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000301b9 : ja 0x301d4 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000034e44 : ja 0x34e25 ; mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000038047 : ja 0x38052 ; ret
0x00000000000380b6 : ja 0x380c2 ; ret
0x0000000000038103 : ja 0x38152 ; ret
0x000000000003bb3e : ja 0x3bb9a ; ret
0x000000000004d9ce : ja 0x4d9b5 ; mov rax, rsi ; ret
0x000000000004d9f6 : ja 0x4d9dd ; mov rax, rsi ; ret
0x000000000004da39 : ja 0x4da15 ; mov rax, rsi ; ret
0x0000000000053c70 : ja 0x53c55 ; mov eax, r9d ; ret
0x000000000006e701 : ja 0x6e70a ; ret
0x000000000006e734 : ja 0x6e742 ; ret
0x000000000006e77e : ja 0x6e7b7 ; cmp eax, -1 ; je 0x6e797 ; ret
0x000000000007ae09 : ja 0x7ae21 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008c085 : ja 0x8c063 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000008c085 : ja 0x8c064 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000008c5a5 : ja 0x8c586 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009edd7 : ja 0x9eddd ; ret
0x000000000009edf3 : ja 0x9edfd ; mov dword ptr [rdi], ecx ; ret
0x000000000009ee34 : ja 0x9ee43 ; mov qword ptr [rdi], rcx ; ret
0x000000000009eeb9 : ja 0x9eecd ; ret
0x000000000009ef0f : ja 0x9ef27 ; ret
0x000000000009ef91 : ja 0x9efad ; ret
0x00000000000a0417 : ja 0xa0421 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a0433 : ja 0xa0441 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a0484 : ja 0xa0497 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a0569 : ja 0xa0581 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a05df : ja 0xa05fb ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a0661 : ja 0xa0681 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a20e7 : ja 0xa20ed ; ret
0x00000000000a2103 : ja 0xa210d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a2144 : ja 0xa2153 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a21c9 : ja 0xa21dd ; ret
0x00000000000a221f : ja 0xa2237 ; ret
0x00000000000a22a1 : ja 0xa22bd ; ret
0x00000000000a2bd7 : ja 0xa2bdd ; ret
0x00000000000a2bf3 : ja 0xa2bfd ; mov dword ptr [rdi], ecx ; ret
0x00000000000a2c34 : ja 0xa2c43 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a2cb9 : ja 0xa2ccd ; ret
0x00000000000a2d0f : ja 0xa2d27 ; ret
0x00000000000a2d91 : ja 0xa2dad ; ret
0x00000000000a3b58 : ja 0xa3b89 ; jb 0xa3b6a ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a3f97 : ja 0xa3fb4 ; jb 0xa3fa3 ; mov byte ptr [rdi], cl ; ret
0x00000000000b61b9 : ja 0xb61d9 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000b7991 : ja 0xb799a ; ret
0x00000000000b8060 : ja 0xb8071 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000c3c61 : ja 0xc3c6a ; ret
0x00000000000c832b : ja 0xc837a ; ret
0x00000000000c83c1 : ja 0xc841a ; ret
0x00000000000c84b4 : ja 0xc851a ; ret
0x00000000000c85fe : ja 0xc863a ; ret
0x00000000000c867e : ja 0xc86d2 ; ret
0x00000000000d67c1 : ja 0xd67d6 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e2cdf : ja 0xe2cef ; setne al ; movzx eax, al ; ret
0x00000000000eabf1 : ja 0xeac52 ; ret
0x00000000000eaca1 : ja 0xead02 ; ret
0x00000000000eb115 : ja 0xeb11f ; xor eax, eax ; ret
0x00000000000ebb2a : ja 0xebb1a ; ret
0x00000000000ebb79 : ja 0xebb69 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ebd9f : ja 0xebdaa ; ret
0x00000000000ebdfd : ja 0xebe02 ; ret
0x00000000000ebe4f : ja 0xebe5a ; ret
0x00000000000ec0a7 : ja 0xec0b2 ; ret
0x00000000000ec10b : ja 0xec112 ; ret
0x00000000000ec163 : ja 0xec172 ; ret
0x00000000000ec38e : ja 0xec39a ; ret
0x00000000000ec77b : ja 0xec7d2 ; ret
0x00000000000ec81e : ja 0xec87a ; ret
0x00000000000ec8c1 : ja 0xec8ca ; ret
0x00000000000ec8f1 : ja 0xec8fa ; ret
0x00000000000ece9e : ja 0xecee2 ; ret
0x00000000000ed01e : ja 0xed06a ; ret
0x00000000000f0a67 : ja 0xf0a78 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000f0bee : ja 0xf0c4a ; ret
0x00000000000f1699 : ja 0xf16a2 ; ret
0x00000000000f16ed : ja 0xf16f2 ; ret
0x00000000000f17c1 : ja 0xf1822 ; ret
0x00000000000f1871 : ja 0xf18d2 ; ret
0x00000000000f1911 : ja 0xf191a ; ret
0x00000000000f1a31 : ja 0xf1a3a ; ret
0x00000000000f1bc1 : ja 0xf1bca ; ret
0x00000000000f1bee : ja 0xf1bfa ; ret
0x00000000000f1c24 : ja 0xf1c32 ; ret
0x00000000000f1c61 : ja 0xf1c6a ; ret
0x00000000000f1d20 : ja 0xf1d2c ; ret
0x00000000000f2038 : ja 0xf2082 ; ret
0x00000000000f224a : ja 0xf2252 ; ret
0x00000000000f228b : ja 0xf2292 ; ret
0x00000000000f2700 : ja 0xf272c ; xor eax, eax ; ret
0x00000000000f284e : ja 0xf28aa ; ret
0x00000000000f28fe : ja 0xf295a ; ret
0x00000000000f29b4 : ja 0xf2a22 ; ret
0x00000000000f2a74 : ja 0xf2ae2 ; ret
0x00000000000f3441 : ja 0xf34aa ; ret
0x00000000000f365e : ja 0xf36a2 ; ret
0x00000000000f371e : ja 0xf3762 ; ret
0x00000000000f37dd : ja 0xf37e2 ; ret
0x00000000000f4bf1 : ja 0xf4bfa ; ret
0x00000000000f4dd6 : ja 0xf4de2 ; ret
0x00000000000f4e11 : ja 0xf4e1a ; ret
0x00000000000f4e41 : ja 0xf4e4a ; ret
0x00000000000f4ebd : ja 0xf4ec9 ; ret
0x00000000000f67de : ja 0xf683a ; ret
0x00000000000f8f88 : ja 0xf8f92 ; ret
0x00000000000fbb91 : ja 0xfbb9a ; ret
0x00000000000fbc37 : ja 0xfbcaa ; ret
0x00000000000fbce9 : ja 0xfbcf2 ; ret
0x00000000000fbe21 : ja 0xfbe82 ; ret
0x00000000000fbed1 : ja 0xfbf32 ; ret
0x00000000000fbf81 : ja 0xfbfe2 ; ret
0x00000000000fc031 : ja 0xfc0aa ; ret
0x00000000000fc0fe : ja 0xfc152 ; ret
0x00000000000fc219 : ja 0xfc222 ; ret
0x00000000000fcaae : ja 0xfcb02 ; ret
0x00000000000fcb7e : ja 0xfcbd2 ; ret
0x00000000000fcce7 : ja 0xfcd52 ; ret
0x00000000000fcda1 : ja 0xfce1a ; ret
0x00000000000fce6e : ja 0xfceca ; ret
0x00000000000fcf27 : ja 0xfcf92 ; ret
0x00000000000fcfde : ja 0xfd03a ; ret
0x00000000000fd091 : ja 0xfd10a ; ret
0x00000000000fd491 : ja 0xfd4f2 ; ret
0x00000000000fd541 : ja 0xfd5aa ; ret
0x00000000000fd5f1 : ja 0xfd652 ; ret
0x00000000000fd791 : ja 0xfd7f2 ; ret
0x00000000000fd841 : ja 0xfd8b2 ; ret
0x00000000000fd8f1 : ja 0xfd8fa ; ret
0x00000000000fd921 : ja 0xfd92a ; ret
0x00000000000fd951 : ja 0xfd95a ; ret
0x00000000000fd981 : ja 0xfd98a ; ret
0x00000000000fda64 : ja 0xfda72 ; ret
0x00000000000fdaa1 : ja 0xfdaaa ; ret
0x00000000000fdad1 : ja 0xfdada ; ret
0x00000000000fdb04 : ja 0xfdb12 ; ret
0x00000000000fdb41 : ja 0xfdb4a ; ret
0x0000000000122aea : jae 0x122afb ; mov rdi, rbp ; call 0x12ed27
0x0000000000122afe : jae 0x122b19 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp 0x12ed29
0x0000000000123005 : jae 0x123016 ; mov rdi, rbp ; call 0x12f227
0x000000000012fc29 : jae 0x12fc34 ; xor eax, eax ; ret
0x000000000012fc69 : jae 0x12fc74 ; xor eax, eax ; ret
0x0000000000134444 : jae 0x134449 ; ret
0x0000000000134494 : jae 0x134499 ; ret
0x000000000013739c : jae 0x13737f ; mov eax, 1 ; ret
0x000000000003795d : jae 0x379a4 ; xor eax, eax ; pop rbx ; ret
0x0000000000037980 : jae 0x379c5 ; pop rbx ; ret
0x0000000000038081 : jae 0x38086 ; ret
0x00000000000385c1 : jae 0x385c6 ; ret
0x0000000000047e97 : jae 0x47ea0 ; xor eax, eax ; ret
0x0000000000048e82 : jae 0x48ed4 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000004d9a8 : jae 0x4d995 ; mov rax, rsi ; ret
0x0000000000075cff : jae 0x75d07 ; mov eax, dword ptr [rdx] ; ret
0x000000000007cd7c : jae 0x7cd8d ; movzx eax, byte ptr [rax] ; ret
0x00000000000802d1 : jae 0x802fd ; movzx eax, byte ptr [rax] ; ret
0x0000000000086d99 : jae 0x86db6 ; lea rax, qword ptr [rdx - 8] ; ret
0x0000000000088a9e : jae 0x88aae ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008a9b9 : jae 0x8aa34 ; or al, 0 ; cmovne rax, rdx ; ret
0x000000000008a9b9 : jae 0x8aa35 ; or al, 0 ; cmovne rax, rdx ; ret
0x00000000000b7a81 : jae 0xb7a86 ; ret
0x00000000000b9769 : jae 0xb9782 ; add bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000ba391 : jae 0xba396 ; ret
0x00000000000ba3c1 : jae 0xba3c6 ; ret
0x00000000000c8281 : jae 0xc8286 ; ret
0x00000000000c8474 : jae 0xc8479 ; ret
0x00000000000c8474 : jae 0xc847d ; ret
0x00000000000c8551 : jae 0xc8556 ; ret
0x00000000000c8991 : jae 0xc8996 ; ret
0x00000000000c9491 : jae 0xc9496 ; ret
0x00000000000c96b1 : jae 0xc96b6 ; ret
0x00000000000c96e1 : jae 0xc96e6 ; ret
0x00000000000c9741 : jae 0xc9746 ; ret
0x00000000000c9771 : jae 0xc9776 ; ret
0x00000000000c97a1 : jae 0xc97a6 ; ret
0x00000000000c97d1 : jae 0xc97d6 ; ret
0x00000000000e2a61 : jae 0xe2a66 ; ret
0x00000000000e2a91 : jae 0xe2a96 ; ret
0x00000000000e2ac1 : jae 0xe2ac6 ; ret
0x00000000000e2af1 : jae 0xe2af6 ; ret
0x00000000000e2b21 : jae 0xe2b26 ; ret
0x00000000000e2b51 : jae 0xe2b56 ; ret
0x00000000000e2b81 : jae 0xe2b86 ; ret
0x00000000000e2bb1 : jae 0xe2bb6 ; ret
0x00000000000ebcc1 : jae 0xebcc6 ; ret
0x00000000000ec1b1 : jae 0xec1b6 ; ret
0x00000000000ec1e1 : jae 0xec1e6 ; ret
0x00000000000ec301 : jae 0xec306 ; ret
0x00000000000ec331 : jae 0xec336 ; ret
0x00000000000ec3f1 : jae 0xec3f6 ; ret
0x00000000000ec421 : jae 0xec426 ; ret
0x00000000000ecd41 : jae 0xecd46 ; ret
0x00000000000ecf21 : jae 0xecf26 ; ret
0x00000000000ecf51 : jae 0xecf56 ; ret
0x00000000000ecf81 : jae 0xecf86 ; ret
0x00000000000ecfb1 : jae 0xecfb6 ; ret
0x00000000000ecfe1 : jae 0xecfe6 ; ret
0x00000000000ed0a1 : jae 0xed0a6 ; ret
0x00000000000ed0d1 : jae 0xed0d6 ; ret
0x00000000000ed991 : jae 0xed996 ; ret
0x00000000000ed9c1 : jae 0xed9c6 ; ret
0x00000000000ed9f1 : jae 0xed9f6 ; ret
0x00000000000eda24 : jae 0xeda29 ; ret
0x00000000000ee211 : jae 0xee216 ; ret
0x00000000000ee244 : jae 0xee249 ; ret
0x00000000000ee271 : jae 0xee276 ; ret
0x00000000000ee2a1 : jae 0xee2a6 ; ret
0x00000000000ee2d1 : jae 0xee2d6 ; ret
0x00000000000ee304 : jae 0xee309 ; ret
0x00000000000ee331 : jae 0xee336 ; ret
0x00000000000ee361 : jae 0xee366 ; ret
0x00000000000ee391 : jae 0xee396 ; ret
0x00000000000eea19 : jae 0xeea73 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f1254 : jae 0xf1259 ; ret
0x00000000000f22c1 : jae 0xf22c6 ; ret
0x00000000000f2641 : jae 0xf2646 ; ret
0x00000000000f2811 : jae 0xf2816 ; ret
0x00000000000f32a1 : jae 0xf32a6 ; ret
0x00000000000f3401 : jae 0xf3406 ; ret
0x00000000000f35f1 : jae 0xf35f6 ; ret
0x00000000000f3621 : jae 0xf3626 ; ret
0x00000000000f36e1 : jae 0xf36e6 ; ret
0x00000000000f37a1 : jae 0xf37a6 ; ret
0x00000000000f3ae1 : jae 0xf3ae6 ; ret
0x00000000000f3b11 : jae 0xf3b16 ; ret
0x00000000000f3b41 : jae 0xf3b46 ; ret
0x00000000000f64f3 : jae 0xf64f8 ; ret
0x00000000000f6771 : jae 0xf6776 ; ret
0x00000000000f67a1 : jae 0xf67a6 ; ret
0x00000000000f6871 : jae 0xf6876 ; ret
0x00000000000f68a1 : jae 0xf68a6 ; ret
0x00000000000f68d4 : jae 0xf68d9 ; ret
0x00000000000f6901 : jae 0xf6906 ; ret
0x00000000000f6931 : jae 0xf6936 ; ret
0x00000000000f6961 : jae 0xf6966 ; ret
0x00000000000f6991 : jae 0xf6996 ; ret
0x00000000000f6e83 : jae 0xf6e75 ; divsd xmm0, xmm2 ; jmp 0xf6edf
0x00000000000f82a6 : jae 0xf82d1 ; mov rsi, rbx ; mov rdi, r13 ; call r14
0x00000000000f9844 : jae 0xf9849 ; ret
0x00000000000f9871 : jae 0xf9876 ; ret
0x00000000000f98a1 : jae 0xf98a6 ; ret
0x00000000000f98d4 : jae 0xf98d9 ; ret
0x00000000000f9904 : jae 0xf9909 ; ret
0x00000000000f9931 : jae 0xf9936 ; ret
0x00000000000f9964 : jae 0xf9969 ; ret
0x00000000000f9991 : jae 0xf9996 ; ret
0x00000000000f99c1 : jae 0xf99c6 ; ret
0x00000000000f99f4 : jae 0xf99f9 ; ret
0x00000000000f9a21 : jae 0xf9a26 ; ret
0x00000000000f9a54 : jae 0xf9a59 ; ret
0x00000000000fb9f1 : jae 0xfb9f6 ; ret
0x00000000000fba21 : jae 0xfba26 ; ret
0x00000000000fbb61 : jae 0xfbb66 ; ret
0x00000000000fbbc1 : jae 0xfbbc6 ; ret
0x00000000000fbbf1 : jae 0xfbbf6 ; ret
0x00000000000fbd21 : jae 0xfbd26 ; ret
0x00000000000fbdb4 : jae 0xfbdb9 ; ret
0x00000000000fbde1 : jae 0xfbde6 ; ret
0x00000000000fc2f1 : jae 0xfc2f6 ; ret
0x00000000000fc321 : jae 0xfc326 ; ret
0x00000000000fc364 : jae 0xfc369 ; ret
0x00000000000fc391 : jae 0xfc396 ; ret
0x00000000000fc3c1 : jae 0xfc3c6 ; ret
0x00000000000fc3f1 : jae 0xfc3f6 ; ret
0x00000000000fc421 : jae 0xfc426 ; ret
0x00000000000fc451 : jae 0xfc456 ; ret
0x00000000000fc481 : jae 0xfc486 ; ret
0x00000000000fc4b1 : jae 0xfc4b6 ; ret
0x00000000000fc4e1 : jae 0xfc4e6 ; ret
0x00000000000fc514 : jae 0xfc519 ; ret
0x00000000000fc541 : jae 0xfc546 ; ret
0x00000000000fc574 : jae 0xfc579 ; ret
0x00000000000fc574 : jae 0xfc57d ; ret
0x00000000000fc5a1 : jae 0xfc5a6 ; ret
0x00000000000fc5d1 : jae 0xfc5d6 ; ret
0x00000000000fc601 : jae 0xfc606 ; ret
0x00000000000fc631 : jae 0xfc636 ; ret
0x00000000000fc661 : jae 0xfc666 ; ret
0x00000000000fc694 : jae 0xfc699 ; ret
0x00000000000fc6c4 : jae 0xfc6c9 ; ret
0x00000000000fc6f1 : jae 0xfc6f6 ; ret
0x00000000000fc721 : jae 0xfc726 ; ret
0x00000000000fc754 : jae 0xfc759 ; ret
0x00000000000fc784 : jae 0xfc789 ; ret
0x00000000000fc7b4 : jae 0xfc7b9 ; ret
0x00000000000fc7e1 : jae 0xfc7e6 ; ret
0x00000000000fc811 : jae 0xfc816 ; ret
0x00000000000fc841 : jae 0xfc846 ; ret
0x00000000000fc871 : jae 0xfc876 ; ret
0x00000000000fc8a4 : jae 0xfc8a9 ; ret
0x00000000000fc8d1 : jae 0xfc8d6 ; ret
0x00000000000fc901 : jae 0xfc906 ; ret
0x00000000000fc934 : jae 0xfc939 ; ret
0x00000000000fc961 : jae 0xfc966 ; ret
0x00000000000fc994 : jae 0xfc999 ; ret
0x00000000000fc9c4 : jae 0xfc9c9 ; ret
0x00000000000fc9f1 : jae 0xfc9f6 ; ret
0x00000000000fca21 : jae 0xfca26 ; ret
0x00000000000fca51 : jae 0xfca56 ; ret
0x00000000000fcb41 : jae 0xfcb46 ; ret
0x00000000000fcc11 : jae 0xfcc16 ; ret
0x00000000000fcc41 : jae 0xfcc46 ; ret
0x00000000000fcc74 : jae 0xfcc79 ; ret
0x00000000000fcc74 : jae 0xfcc7d ; ret
0x00000000000fcca1 : jae 0xfcca6 ; ret
0x00000000000fd154 : jae 0xfd159 ; ret
0x00000000000fd181 : jae 0xfd186 ; ret
0x00000000000fd1b1 : jae 0xfd1b6 ; ret
0x00000000000fd1e4 : jae 0xfd1e9 ; ret
0x000000000010000b : jb 0x100026 ; lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000010006b : jb 0x100086 ; lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000010393f : jb 0x103957 ; mov eax, 1 ; ret
0x0000000000106cc3 : jb 0x106cd9 ; add byte ptr [rcx - 0x75], cl ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x0000000000108a75 : jb 0x108a6c ; xor eax, eax ; ret
0x0000000000118d57 : jb 0x118d4b ; mov eax, 0xffffffff ; ret
0x0000000000123c59 : jb 0x123c7d ; ret
0x0000000000123c53 : jb 0x123c85 ; ja 0x123c48 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000013d4db : jb 0x13d4ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013d62b : jb 0x13d63d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013d77b : jb 0x13d78d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013d8cb : jb 0x13d8dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013da1b : jb 0x13da2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013db6b : jb 0x13db7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013dcbb : jb 0x13dccd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013de0b : jb 0x13de1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013df5b : jb 0x13df6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013e0ab : jb 0x13e0bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013e1fb : jb 0x13e20d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013e34b : jb 0x13e35d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013e49b : jb 0x13e4ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013e5eb : jb 0x13e5fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013e73b : jb 0x13e74d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013febb : jb 0x13fecd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014000b : jb 0x14001d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014015b : jb 0x14016d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001402ab : jb 0x1402bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001403fb : jb 0x14040d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014054b : jb 0x14055d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014069b : jb 0x1406ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001407eb : jb 0x1407fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014093b : jb 0x14094d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000140a8b : jb 0x140a9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000140bdb : jb 0x140bed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000140d2b : jb 0x140d3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000140e7b : jb 0x140e8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000140fcb : jb 0x140fdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014111b : jb 0x14112d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015fcca : jb 0x15fcd8 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001601b7 : jb 0x1601c2 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000001640e2 : jb 0x1640ee ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000164799 : jb 0x1647a8 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000001647a4 : jb 0x1647b7 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000001647b1 : jb 0x1647b9 ; mov byte ptr [rdi], cl ; ret
0x0000000000164a5a : jb 0x164a68 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000016507f : jb 0x16508a ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000003bc1a : jb 0x3bbf9 ; xor eax, eax ; ret
0x000000000006c4aa : jb 0x6c446 ; add byte ptr [rax], al ; mov r14d, eax ; jmp 0x68722
0x0000000000074419 : jb 0x7443f ; mov dword ptr [rcx], eax ; ret
0x000000000007454f : jb 0x7457e ; mov byte ptr [rcx], dil ; ret
0x0000000000075afc : jb 0x75af5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007b49b : jb 0x7b4ca ; mov byte ptr [rcx], dil ; ret
0x000000000007b5ab : jb 0x7b5da ; mov byte ptr [rcx], dil ; ret
0x0000000000080c11 : jb 0x80bf6 ; mov byte ptr [rax + rsi], r10b ; ret
0x000000000008908f : jb 0x890a8 ; mov qword ptr [rdi], rsi ; mov rax, r8 ; ret
0x00000000000890e7 : jb 0x890f8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000089a96 : jb 0x89a59 ; verw word ptr [rcx] ; ret
0x0000000000089c4b : jb 0x89c5c ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000008a9ba : jb 0x8a9ce ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000008b8bd : jb 0x8b8c6 ; sub cl, byte ptr [rax + 0x39] ; bnd jne 0x8b8c0 ; ret
0x000000000008b97b : jb 0x8b98c ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000008f563 : jb 0x8f49d ; mov rdx, rax ; jmp 0x8f509
0x000000000008fe43 : jb 0x8fd9d ; mov rdx, rax ; jmp 0x8fde9
0x00000000000a0daa : jb 0xa0db9 ; add byte ptr [rax], al ; ret
0x00000000000a3aad : jb 0xa3ab6 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000a3b5a : jb 0xa3b68 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a3b59 : jb 0xa3b69 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a3f99 : jb 0xa3fa1 ; mov byte ptr [rdi], cl ; ret
0x00000000000b97db : jb 0xb97f4 ; add bl, ch ; adc byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000d2f0a : jb 0xd2f30 ; xor eax, eax ; ret
0x00000000000f96fb : jb 0xf96c9 ; or byte ptr [rax], al ; pop rbx ; ret
0x00000000000ff6cb : jb 0xff6e6 ; lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000ff733 : jb 0xff74e ; lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000111cfe : jbe 0x111c73 ; xor eax, eax ; pop rbx ; ret
0x000000000011478c : jbe 0x114792 ; ret
0x0000000000123200 : jbe 0x123217 ; mov eax, 2 ; ret
0x000000000012668b : jbe 0x12669b ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000126748 : jbe 0x126758 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000012fef5 : jbe 0x12ff05 ; add dword ptr [rdi + 0x28], esi ; ret
0x000000000015b757 : jbe 0x15b7c8 ; add rax, rdi ; vzeroupper ; ret
0x0000000000160757 : jbe 0x1607c8 ; add rax, rdi ; vzeroupper ; ret
0x000000000002f31e : jbe 0x2f33e ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000004d6d4 : jbe 0x4d6cb ; pop rbx ; ret
0x0000000000057362 : jbe 0x573d1 ; test eax, 0x950f7ff0 ; ret 0xc166
0x00000000000597c1 : jbe 0x5979a ; mov qword ptr [rdi], rcx ; ret
0x0000000000066d41 : jbe 0x66d1a ; mov qword ptr [rdi], rcx ; ret
0x000000000006fbd1 : jbe 0x6fbaa ; mov qword ptr [rdi], rcx ; ret
0x0000000000080a6d : jbe 0x80a72 ; ret
0x000000000008c35e : jbe 0x8c383 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000940f6 : jbe 0x94135 ; add rax, rdi ; ret
0x0000000000094106 : jbe 0x94137 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000094116 : jbe 0x94137 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000094126 : jbe 0x94137 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000009a149 : jbe 0x9a143 ; ret 0xf10
0x000000000009bd69 : jbe 0x9bd63 ; ret 0xf10
0x00000000000b513c : jbe 0xb5193 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000b5236 : jbe 0xb5275 ; add rax, rdi ; ret
0x00000000000b5246 : jbe 0xb5277 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000b5256 : jbe 0xb5277 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000b5266 : jbe 0xb5277 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000101770 : je 0x101790 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000104b29 : je 0x104b34 ; xor eax, eax ; ret
0x0000000000104cca : je 0x104cf9 ; adc byte ptr [rcx + 0xb], al ; sbb byte ptr [rcx - 0x77], r8b ; ret
0x000000000010593f : je 0x10591d ; mov r14, qword ptr [r15 + 0x38] ; jmp 0x105911
0x0000000000107846 : je 0x107871 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000107907 : je 0x107917 ; mov eax, 7 ; ret
0x0000000000107932 : je 0x107943 ; pop rbx ; ret
0x0000000000107921 : je 0x107959 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000108b01 : je 0x108b0a ; ret
0x000000000010918d : je 0x109192 ; ret
0x00000000001091f1 : je 0x1091f6 ; ret
0x000000000010961c : je 0x109622 ; call rax
0x00000000001096c4 : je 0x109697 ; call rax
0x00000000001099ee : je 0x109a22 ; call rax
0x0000000000109b98 : je 0x109bb6 ; pop rbx ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x000000000010b930 : je 0x10b946 ; add rsp, 8 ; ret
0x000000000010bf46 : je 0x10bf52 ; ret
0x00000000001120a1 : je 0x1120a0 ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000113fca : je 0x113fd4 ; xor eax, eax ; ret
0x00000000001147a6 : je 0x1147b2 ; mov rdi, rbx ; call rax
0x000000000011806b : je 0x118063 ; pop rbx ; ret
0x0000000000118c59 : je 0x118c71 ; test eax, eax ; jne 0x118c81 ; mov eax, r8d ; ret
0x000000000011cb60 : je 0x11cb6a ; ret
0x000000000011d13a : je 0x11d166 ; add rsp, 8 ; ret
0x000000000011d549 : je 0x11d552 ; ret
0x000000000011d59c : je 0x11d5ad ; mov qword ptr [rdi], rax ; ret
0x000000000011d5e2 : je 0x11d5f6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d649 : je 0x11d672 ; ret
0x0000000000120fe6 : je 0x120ff2 ; mov rdi, rbx ; call rax
0x00000000001214b9 : je 0x1214e6 ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x00000000001216ed : je 0x1216f9 ; mov rdi, rbp ; call rax
0x0000000000121a0c : je 0x121a12 ; ret
0x0000000000122334 : je 0x12235f ; or byte ptr [rcx - 0x77], cl ; ret 0x8948
0x0000000000122715 : je 0x122721 ; mov rdi, rbx ; call rax
0x0000000000122985 : je 0x122827 ; mov rdi, rbx ; call rax
0x0000000000122a78 : je 0x122a84 ; mov rdi, rbx ; call rax
0x0000000000122c87 : je 0x122c94 ; xor eax, eax ; ret
0x00000000001232b4 : je 0x1232c0 ; mov rdi, rbx ; call rdx
0x000000000012371c : je 0x12382b ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000123d47 : je 0x123d58 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000123dac : je 0x123dbe ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001255f2 : je 0x125608 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001256b2 : je 0x1256c8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000125772 : je 0x125788 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001268f8 : je 0x126908 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000127296 : je 0x1272aa ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x0000000000127caa : je 0x127cb6 ; mov rdi, r12 ; call rax
0x0000000000127e9f : je 0x127ead ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000129111 : je 0x12911d ; mov rdi, rbp ; call rax
0x00000000001291f4 : je 0x129200 ; mov rdi, r12 ; call rax
0x0000000000129dd3 : je 0x129de1 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x000000000012a510 : je 0x12a51c ; mov rdi, r12 ; call rax
0x000000000012a883 : je 0x12a891 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000012c160 : je 0x12c18d ; or byte ptr [rax - 0x75], cl ; cmp al, 0x24 ; call rax
0x000000000012c663 : je 0x12c5ec ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000012c5e3 : je 0x12c5f3 ; pop rbx ; ret
0x000000000012d3bf : je 0x12d3cd ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012da78 : je 0x12da86 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012ee45 : je 0x12ee70 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000012ef35 : je 0x12ef60 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000131c6c : je 0x131c7c ; xor eax, eax ; ret
0x0000000000136705 : je 0x136716 ; add rsp, 8 ; ret
0x0000000000154f93 : je 0x154f5e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000155c65 : je 0x155c6d ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000155d63 : je 0x155d2e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000156c4a : je 0x156c52 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000156da3 : je 0x156d6e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000158973 : je 0x15893e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000015aa41 : je 0x15aa28 ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000015ba01 : je 0x15ba68 ; and ch, al ; std ; xlatb ; ret
0x000000000015baef : je 0x15bb56 ; and ch, al ; std ; xlatb ; ret
0x000000000015be45 : je 0x15be57 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000015c1d3 : je 0x15c19e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000015d873 : je 0x15d83e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000162e67 : je 0x162e71 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016b4a1 : je 0x16b4cc ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000016bbde : je 0x16bbe4 ; call rdx
0x000000000016bceb : je 0x16bcf6 ; call rax
0x000000000016bef8 : je 0x16bf08 ; call 0x25109
0x00000000000242ae : je 0x242ba ; mov rdi, rbp ; call rax
0x0000000000027982 : je 0x279b1 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000000280ef : je 0x2811e ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002822b : je 0x2825a ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000028830 : je 0x2885f ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000028b6e : je 0x28b9d ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x000000000002946f : je 0x2949d ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000002af00 : je 0x2af2f ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x000000000002b272 : je 0x2b2a1 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x000000000002bd48 : je 0x2bd77 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x000000000002c0b2 : je 0x2c0e1 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x000000000002d230 : je 0x2d247 ; sbb dword ptr [rax], eax ; nop dword ptr [rax] ; ret
0x000000000002d25b : je 0x2d262 ; ret
0x000000000002d256 : je 0x2d267 ; cmp esi, 3 ; je 0x2d267 ; ret
0x000000000002d951 : je 0x2d957 ; call rcx
0x000000000002dbf1 : je 0x2dbf7 ; call rax
0x000000000002eb5f : je 0x2eb65 ; call rax
0x0000000000034ac6 : je 0x34ad6 ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000000369db : je 0x3692e ; ret
0x00000000000369da : je 0x3692f ; ret
0x0000000000036c49 : je 0x36c52 ; ret
0x0000000000037019 : je 0x37022 ; ret
0x0000000000038afe : je 0x38b18 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003943f : je 0x3946b ; adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000003adc4 : je 0x3add5 ; mov dword ptr [rdi], 0 ; pop rbx ; ret
0x000000000003bc2d : je 0x3bbf7 ; mov eax, 0xffffffff ; ret
0x0000000000045a69 : je 0x45a73 ; pop rbx ; ret
0x00000000000472fa : je 0x47326 ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000004752c : je 0x4753f ; mov ebx, dword ptr [r14 - 4] ; jmp 0x474fe
0x0000000000048952 : je 0x4897e ; and byte ptr [rbp + rcx*4 + 0x3c], cl ; ret 0x894c
0x000000000006e783 : je 0x6e792 ; ret
0x000000000006e79d : je 0x6e7c5 ; mov eax, 0xffffffff ; ret
0x000000000006e79c : je 0x6e7c6 ; mov eax, 0xffffffff ; ret
0x00000000000712ab : je 0x712bf ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000007138b : je 0x713a9 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000071a36 : je 0x71a77 ; mov rax, rdx ; pop rbx ; ret
0x0000000000072a01 : je 0x72a29 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007500a : je 0x7505a ; add esp, 0x20 ; pop rbx ; ret
0x0000000000075009 : je 0x7505b ; add esp, 0x20 ; pop rbx ; ret
0x00000000000754a0 : je 0x754aa ; ret
0x00000000000754be : je 0x754cb ; pop rbx ; ret
0x0000000000078b4a : je 0x78b61 ; mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x78b61 ; ret
0x000000000007a0e6 : je 0x7a127 ; mov rax, rdx ; pop rbx ; ret
0x000000000007a8c5 : je 0x7a8d2 ; ret
0x000000000007ace5 : je 0x7acf2 ; ret
0x000000000007bb24 : je 0x7bb33 ; pop rbx ; ret
0x000000000007e963 : je 0x7e8e5 ; or eax, 0xffffffff ; ret
0x000000000007ea83 : je 0x7ea05 ; or eax, 0xffffffff ; ret
0x000000000007eb79 : je 0x7eb82 ; ret
0x0000000000080d47 : je 0x80d97 ; mov qword ptr [rsi], rdi ; ret
0x0000000000080f05 : je 0x80f0e ; pop rbx ; pop rbp ; ret
0x000000000008198e : je 0x81994 ; call rax
0x00000000000868d2 : je 0x868fe ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000087377 : je 0x87386 ; mov qword ptr [rbx], rdx ; xor eax, eax ; pop rbx ; ret
0x00000000000875e4 : je 0x876c6 ; call rax
0x000000000008771e : je 0x877f6 ; call rax
0x00000000000878cd : je 0x87918 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008848c : je 0x88492 ; ret
0x0000000000088589 : je 0x885e8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000889bf : je 0x889d5 ; mov rdi, qword ptr [rbx + 0x48] ; mov rsi, r13 ; call rax
0x0000000000089434 : je 0x89444 ; movsx eax, dl ; ret
0x0000000000089434 : je 0x89445 ; movsx eax, dl ; ret
0x000000000008942f : je 0x89448 ; cmp dl, 3 ; je 0x89449 ; movsx eax, dl ; ret
0x0000000000089533 : je 0x89543 ; pop rbx ; ret
0x000000000008a6b2 : je 0x8a674 ; ret
0x000000000008a676 : je 0x8a689 ; add bh, dh ; ret 0
0x000000000008c3c8 : je 0x8c3de ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008c60e : je 0x8c688 ; add rax, qword ptr [rbp] ; mov rdx, rax ; jmp 0x8c63b
0x000000000009073a : je 0x90732 ; ret
0x0000000000090776 : je 0x9076a ; ret
0x0000000000090772 : je 0x9076e ; cmp ecx, esi ; je 0x9076e ; ret
0x00000000000907bf : je 0x907a2 ; ret
0x0000000000093ffc : je 0x94053 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000942ea : je 0x94341 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000009466c : je 0x94648 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000099645 : je 0x99659 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000099b48 : je 0x99b52 ; bsf eax, edx ; ret
0x0000000000099b48 : je 0x99b53 ; bsf eax, edx ; ret
0x0000000000099bed : je 0x99c05 ; bsf rax, rdx ; ret
0x0000000000099bed : je 0x99c06 ; bsf rax, rdx ; ret
0x0000000000099b90 : je 0x99c15 ; bsf rax, rdx ; ret
0x0000000000099b90 : je 0x99c16 ; bsf rax, rdx ; ret
0x0000000000099dbc : je 0x99de5 ; bsf rax, rdx ; ret
0x0000000000099dbc : je 0x99de6 ; bsf rax, rdx ; ret
0x0000000000099d4c : je 0x99df9 ; bsf rax, rdx ; ret
0x000000000009f0dd : je 0x9f12e ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a07aa : je 0xa07fb ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a26aa : je 0xa26fb ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a3be7 : je 0xa3c08 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000000a45d1 : je 0xa45e9 ; cmp eax, 2 ; je 0xa45f1 ; xor eax, eax ; ret
0x00000000000a45d6 : je 0xa45ec ; xor eax, eax ; ret
0x00000000000a4624 : je 0xa460a ; ret
0x00000000000a4682 : je 0xa4662 ; ret
0x00000000000a4797 : je 0xa4789 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a4d32 : je 0xa4cf4 ; ret
0x00000000000a4d86 : je 0xa4d92 ; ret
0x00000000000a5fe8 : je 0xa5ff4 ; test edx, edx ; jne 0xa5fe6 ; ret
0x00000000000ae3d0 : je 0xae3d5 ; ret
0x00000000000b6486 : je 0xb64f6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000b6999 : je 0xb69b9 ; mov cl, dl ; and cl, 0xf ; je 0xb69c9 ; ret
0x00000000000b69a0 : je 0xb69c2 ; ret
0x00000000000b69b5 : je 0xb69d6 ; add rax, 2 ; ret
0x00000000000b7272 : je 0xb7286 ; mov rax, rdx ; pop rbx ; ret
0x00000000000b765b : je 0xb7689 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000b8556 : je 0xb8592 ; inc dword ptr [rcx] ; ret 0xb70f
0x00000000000ba47e : je 0xba48a ; ret
0x00000000000be978 : je 0xbe9a3 ; sbb byte ptr [rax + 0x63], cl ; ret 0x8944
0x00000000000c2e87 : je 0xc2e94 ; xor eax, eax ; ret
0x00000000000c2eab : je 0xc2ec9 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000c2fe7 : je 0xc3012 ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000cb34d : je 0xcb35f ; mov rdi, rbx ; call r12
0x00000000000d1197 : je 0xd1159 ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x00000000000d11a4 : je 0xd117e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d12d8 : je 0xd12e4 ; xor eax, eax ; ret
0x00000000000d1536 : je 0xd1545 ; ret
0x00000000000d152f : je 0xd1549 ; xor eax, eax ; cmp r10d, r8d ; je 0xd154c ; ret
0x00000000000d25cb : je 0xd25df ; cmp eax, 3 ; je 0xd25e7 ; ret
0x00000000000d25d0 : je 0xd25e2 ; ret
0x00000000000d2cf3 : je 0xd2d12 ; ret
0x00000000000d2e3e : je 0xd2e4c ; xor eax, eax ; ret
0x00000000000d2e3a : je 0xd2ea8 ; cmp al, 0x11 ; je 0xd2e50 ; xor eax, eax ; ret
0x00000000000d387d : je 0xd38a7 ; or byte ptr [rcx], ch ; ret
0x00000000000d5b7b : je 0xd5bc3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d5cdb : je 0xd5c74 ; ret
0x00000000000d5d22 : je 0xd5cb2 ; pop rbx ; ret
0x00000000000d6651 : je 0xd6676 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0773 : je 0xe0784 ; xor eax, eax ; ret
0x00000000000e131d : je 0xe132f ; mov rdi, rbx ; call r12
0x00000000000e3b82 : je 0xe3b8a ; ret
0x00000000000e7b41 : je 0xe7b9f ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e845d : je 0xe8488 ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000e9392 : je 0xe93bd ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000ebc35 : je 0xebc71 ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000000ee4c2 : je 0xee4f0 ; or byte ptr [rbx - 0x7af00002], al ; ret 0
0x00000000000ef505 : je 0xef540 ; mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000f0fb4 : je 0xf0fc5 ; neg eax ; pop rbx ; ret
0x00000000000f1214 : je 0xf1225 ; neg eax ; pop rbx ; ret
0x00000000000f30c2 : je 0xf30c7 ; ret
0x00000000000f4ee7 : je 0xf4ef1 ; mov qword ptr [rax], rdx ; ret
0x00000000000f4fc2 : je 0xf4fb7 ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000f64bc : je 0xf64cc ; mov dword ptr [rip + 0xc7ce4], edi ; ret
0x00000000000f7557 : je 0xf7563 ; pop rbx ; ret
0x00000000000f7556 : je 0xf7564 ; pop rbx ; ret
0x00000000000f7968 : je 0xf79ae ; test byte ptr [r11 + 8], 1 ; jne 0xf79b9 ; ret
0x00000000000f8227 : je 0xf8235 ; test rsi, rsi ; jne 0xf8237 ; ret
0x00000000000f8ca1 : je 0xf8d36 ; call rax
0x00000000000f8e2c : je 0xf8f46 ; call rax
0x00000000000fb959 : je 0xfb96c ; mov rdi, rbp ; call r12
0x00000000000fbb1a : je 0xfbb1f ; ret
0x00000000000fc1ad : je 0xfc1ed ; ret
0x00000000000fc1ac : je 0xfc1ee ; ret
0x00000000000fdb6d : je 0xfdb72 ; ret
0x00000000000fe7a9 : je 0xfe827 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000fe7e8 : je 0xfe828 ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x0000000000103e8f : jg 0x103e68 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000119296 : jg 0x1192aa ; ret 0xfc3
0x000000000011b0cf : jg 0x11b08c ; mov byte ptr [r10], 0 ; ret
0x00000000001280e6 : jg 0x128130 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1280f8 ; ret
0x000000000012d5d6 : jg 0x12d620 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12d5e8 ; ret
0x000000000013f0b9 : jg 0x13f10c ; ret
0x000000000013f13f : jg 0x13f18a ; ret
0x000000000013f2b9 : jg 0x13f30c ; ret 0x894c
0x000000000013f33f : jg 0x13f38a ; ret 0x894c
0x0000000000141a99 : jg 0x141aec ; ret
0x0000000000141b1f : jg 0x141b6a ; ret
0x0000000000141c99 : jg 0x141cec ; ret 0x894c
0x0000000000141d1f : jg 0x141d6a ; ret 0x894c
0x00000000001440a8 : jg 0x1440f9 ; loope 0x1440a7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014411f : jg 0x14416a ; ret 0xff2
0x0000000000144138 : jg 0x144189 ; loop 0x144137 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001441af : jg 0x1441fa ; ret
0x00000000001441c8 : jg 0x144219 ; jrcxz 0x1441c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000144258 : jg 0x1442a9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001442d8 : jg 0x144329 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000144358 : jg 0x1443a9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001443d8 : jg 0x144429 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000144458 : jg 0x1444a9 ; call 0x4f93545a
0x00000000001444d8 : jg 0x144529 ; jmp 0x4f9354da
0x0000000000144658 : jg 0x1446a9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001446d8 : jg 0x144729 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000144768 : jg 0x1447b9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001447e8 : jg 0x144839 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014485c : jg 0x144867 ; ret
0x00000000001448b6 : jg 0x1448c9 ; ret
0x00000000001448b1 : jg 0x144901 ; psllq mm1, qword ptr [rdi] ; jg 0x1448ce ; ret
0x0000000000144926 : jg 0x144939 ; ret
0x0000000000144996 : jg 0x1449a9 ; ret
0x0000000000144991 : jg 0x1449e1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000144a06 : jg 0x144a19 ; ret
0x0000000000144a01 : jg 0x144a51 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000144a76 : jg 0x144a89 ; ret
0x0000000000144a71 : jg 0x144ac1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000144ae6 : jg 0x144af9 ; ret
0x0000000000144ae1 : jg 0x144b31 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000144b56 : jg 0x144b69 ; ret
0x0000000000144b51 : jg 0x144ba1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000144bc6 : jg 0x144bd9 ; ret
0x0000000000144bc1 : jg 0x144c11 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000144c36 : jg 0x144c49 ; ret
0x0000000000144ca6 : jg 0x144cb9 ; ret
0x0000000000144d16 : jg 0x144d29 ; ret
0x0000000000144d11 : jg 0x144d61 ; add eax, 0xf7f0ff3 ; ret
0x0000000000144d86 : jg 0x144d99 ; ret
0x0000000000144d81 : jg 0x144dd1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000144df6 : jg 0x144e09 ; ret
0x0000000000144df1 : jg 0x144e41 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000144e66 : jg 0x144e79 ; ret
0x0000000000144e61 : jg 0x144eb1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000144ed6 : jg 0x144ee9 ; ret
0x0000000000144ed1 : jg 0x144f21 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000146bd8 : jg 0x146c29 ; loope 0x146bd7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000146c4f : jg 0x146c9a ; ret 0xff2
0x0000000000146c68 : jg 0x146cb9 ; loop 0x146c67 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000146cdf : jg 0x146d2a ; ret
0x0000000000146cf8 : jg 0x146d49 ; jrcxz 0x146cf7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000146d88 : jg 0x146dd9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000146e08 : jg 0x146e59 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000146e88 : jg 0x146ed9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000146f08 : jg 0x146f59 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000146f88 : jg 0x146fd9 ; call 0x4f937f8a
0x0000000000147008 : jg 0x147059 ; jmp 0x4f93800a
0x0000000000147188 : jg 0x1471d9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000147208 : jg 0x147259 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000147298 : jg 0x1472e9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000147318 : jg 0x147369 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014738c : jg 0x147397 ; ret
0x00000000001473e6 : jg 0x1473f9 ; ret
0x00000000001473e1 : jg 0x147431 ; psllq mm1, qword ptr [rdi] ; jg 0x1473fe ; ret
0x0000000000147456 : jg 0x147469 ; ret
0x00000000001474c6 : jg 0x1474d9 ; ret
0x00000000001474c1 : jg 0x147511 ; or eax, 0xf7f0ff3 ; ret
0x0000000000147536 : jg 0x147549 ; ret
0x0000000000147531 : jg 0x147581 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000001475a6 : jg 0x1475b9 ; ret
0x00000000001475a1 : jg 0x1475f1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000147616 : jg 0x147629 ; ret
0x0000000000147611 : jg 0x147661 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000147686 : jg 0x147699 ; ret
0x0000000000147681 : jg 0x1476d1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001476f6 : jg 0x147709 ; ret
0x00000000001476f1 : jg 0x147741 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000147766 : jg 0x147779 ; ret
0x00000000001477d6 : jg 0x1477e9 ; ret
0x0000000000147846 : jg 0x147859 ; ret
0x0000000000147841 : jg 0x147891 ; add eax, 0xf7f0ff3 ; ret
0x00000000001478b6 : jg 0x1478c9 ; ret
0x00000000001478b1 : jg 0x147901 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000147926 : jg 0x147939 ; ret
0x0000000000147921 : jg 0x147971 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000147996 : jg 0x1479a9 ; ret
0x0000000000147991 : jg 0x1479e1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000147a06 : jg 0x147a19 ; ret
0x0000000000147a01 : jg 0x147a51 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015fcde : jg 0x15fcef ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000015fe6f : jg 0x15fe99 ; vzeroupper ; ret
0x000000000015ff16 : jg 0x15ff20 ; vzeroupper ; ret
0x000000000015ffa2 : jg 0x15ffcc ; vzeroupper ; ret
0x0000000000160032 : jg 0x16003c ; vzeroupper ; ret
0x00000000001600a8 : jg 0x1600b6 ; vzeroupper ; ret
0x0000000000160108 : jg 0x160116 ; vzeroupper ; ret
0x00000000001601c7 : jg 0x1601d5 ; vzeroupper ; ret
0x0000000000164088 : jg 0x164099 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000016409c : jg 0x1640ad ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000016450e : jg 0x16450a ; ret
0x000000000016477b : jg 0x16478b ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000164771 : jg 0x164791 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000164a86 : jg 0x164a97 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000164c6a : jg 0x164c94 ; vzeroupper ; ret
0x0000000000164c69 : jg 0x164c95 ; vzeroupper ; ret
0x0000000000164d30 : jg 0x164d3a ; vzeroupper ; ret
0x0000000000164d2f : jg 0x164d3b ; vzeroupper ; ret
0x0000000000164df5 : jg 0x164e1f ; vzeroupper ; ret
0x0000000000164df4 : jg 0x164e20 ; vzeroupper ; ret
0x0000000000164eba : jg 0x164ec4 ; vzeroupper ; ret
0x0000000000164eb9 : jg 0x164ec5 ; vzeroupper ; ret
0x0000000000164f39 : jg 0x164f47 ; vzeroupper ; ret
0x0000000000164f38 : jg 0x164f48 ; vzeroupper ; ret
0x0000000000164fa5 : jg 0x164fb3 ; vzeroupper ; ret
0x0000000000164fa4 : jg 0x164fb4 ; vzeroupper ; ret
0x000000000016508f : jg 0x16509d ; vzeroupper ; ret
0x000000000016509d : jg 0x1650ab ; vzeroupper ; ret
0x0000000000167165 : jg 0x167174 ; neg eax ; ret
0x000000000016813b : jg 0x168145 ; add byte ptr [rbp + 0x31], al ; fisttp dword ptr [rax - 0x77] ; ret 0x3be9
0x00000000001699bd : jg 0x16994a ; test byte ptr [rcx + 0xf], 0x44 ; ret 0xfe83
0x000000000016b6f5 : jg 0x16b6fc ; add byte ptr [rax - 0x77], cl ; ret 0x850f
0x00000000000369d8 : jg 0x369ec ; je 0x36931 ; ret
0x0000000000037017 : jg 0x3701d ; je 0x37024 ; ret
0x00000000000372c4 : jg 0x37316 ; sub eax, edx ; shr rax, 0x3f ; ret
0x000000000003b32a : jg 0x3b373 ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x000000000004a1e9 : jg 0x4a268 ; mov al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000004a2a5 : jg 0x4a2b2 ; ret 0xf089
0x000000000004fdff : jg 0x4fe18 ; test byte ptr [rdx - 0x7c000017], al ; ret
0x0000000000057366 : jg 0x5737a ; xchg eax, ebp ; ret 0xc166
0x000000000005a6e1 : jg 0x5a710 ; fidivr dword ptr [rcx] ; ret 0x820f
0x00000000000888be : jg 0x8890d ; mov rsi, rbp ; call rax
0x000000000009eea6 : jg 0x9eeb1 ; ret
0x000000000009eeb6 : jg 0x9eec4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009eeca : jg 0x9eed9 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009eee9 : jg 0x9eef7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009eef9 : jg 0x9ef07 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009ef09 : jg 0x9ef1a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009ef2a : jg 0x9ef39 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009ef4a : jg 0x9ef59 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009ef6a : jg 0x9ef79 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009ef8a : jg 0x9ef9c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009efcd : jg 0x9efdf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009efed : jg 0x9efff ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009f00b : jg 0x9f01b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009f02b : jg 0x9f03b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009f04b : jg 0x9f05b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009f06b : jg 0x9f07b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009f618 : jg 0x9f623 ; jne 0x9fed8 ; ret
0x000000000009f63c : jg 0x9f648 ; jne 0x9fed8 ; ret
0x000000000009f65f : jg 0x9f66c ; jne 0x9fed8 ; ret
0x000000000009f67a : jg 0x9f688 ; jne 0x9fed8 ; ret
0x000000000009f69d : jg 0x9f6ac ; jne 0x9fed8 ; ret
0x000000000009f6c2 : jg 0x9f6d2 ; jne 0x9fed8 ; ret
0x000000000009f6e0 : jg 0x9f6f1 ; jne 0x9fed8 ; ret
0x000000000009f6fc : jg 0x9f70e ; jne 0x9fed8 ; ret
0x000000000009f71f : jg 0x9f732 ; jne 0x9fed8 ; ret
0x000000000009f744 : jg 0x9f758 ; jne 0x9fed8 ; ret
0x000000000009f762 : jg 0x9f777 ; jne 0x9fed8 ; ret
0x000000000009f782 : jg 0x9f798 ; jne 0x9fed8 ; ret
0x000000000009f7a4 : jg 0x9f7bb ; jne 0x9fed8 ; ret
0x000000000009f7c4 : jg 0x9f7dc ; jne 0x9fed8 ; ret
0x000000000009f7e4 : jg 0x9f7fd ; jne 0x9fed8 ; ret
0x000000000009f7fe : jg 0x9f818 ; jne 0x9fed8 ; ret
0x000000000009f821 : jg 0x9f83c ; jne 0x9fed8 ; ret
0x000000000009f846 : jg 0x9f862 ; jne 0x9fed8 ; ret
0x000000000009f864 : jg 0x9f881 ; jne 0x9fed8 ; ret
0x000000000009f884 : jg 0x9f8a2 ; jne 0x9fed8 ; ret
0x000000000009f8a7 : jg 0x9f8c6 ; jne 0x9fed8 ; ret
0x000000000009f8c6 : jg 0x9f8e6 ; jne 0x9fed8 ; ret
0x000000000009f8e6 : jg 0x9f907 ; jne 0x9fed8 ; ret
0x000000000009f906 : jg 0x9f928 ; jne 0x9fed8 ; ret
0x000000000009f929 : jg 0x9f94c ; jne 0x9fed8 ; ret
0x000000000009f95e : jg 0x9f982 ; jne 0x9fed8 ; ret
0x000000000009f98c : jg 0x9f9b1 ; jne 0x9fed8 ; ret
0x000000000009f9bc : jg 0x9f9e2 ; jne 0x9fed8 ; ret
0x000000000009f9e8 : jg 0x9fa0f ; jne 0x9fed8 ; ret
0x000000000009fa18 : jg 0x9fa40 ; jne 0x9fed8 ; ret
0x000000000009fa48 : jg 0x9fa71 ; jne 0x9fed8 ; ret
0x000000000009fa78 : jg 0x9faa2 ; jne 0x9fed8 ; ret
0x000000000009fb96 : jg 0x9fba1 ; ret
0x000000000009fba9 : jg 0x9fbb7 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009fbba : jg 0x9fbc9 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009fbd9 : jg 0x9fbe7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009fbe9 : jg 0x9fbf7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009fbfc : jg 0x9fc0d ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009fc1a : jg 0x9fc29 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009fc3a : jg 0x9fc49 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009fc5a : jg 0x9fc69 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009fc7d : jg 0x9fc8f ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009fcbd : jg 0x9fccf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009fcdd : jg 0x9fcef ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009fcfb : jg 0x9fd0b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009fd1b : jg 0x9fd2b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009fd3b : jg 0x9fd4b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009fd5b : jg 0x9fd6b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009fe92 : jg 0x9fe9d ; ret
0x000000000009ffd6 : jg 0xa000a ; ret
0x00000000000a0556 : jg 0xa0565 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a0566 : jg 0xa0578 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a0599 : jg 0xa05ab ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a05b9 : jg 0xa05cb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a06df : jg 0xa073f ; or eax, 0x1c478d48 ; ret
0x00000000000a0cfb : jg 0xa0d06 ; jne 0xa1728 ; ret
0x00000000000a0d20 : jg 0xa0d2c ; jne 0xa1728 ; ret
0x00000000000a0d43 : jg 0xa0d50 ; jne 0xa1728 ; ret
0x00000000000a0d5e : jg 0xa0d6c ; jne 0xa1728 ; ret
0x00000000000a0d81 : jg 0xa0d90 ; jne 0xa1728 ; ret
0x00000000000a0da6 : jg 0xa0db6 ; jne 0xa1728 ; ret
0x00000000000a0dc4 : jg 0xa0dd5 ; jne 0xa1728 ; ret
0x00000000000a0de0 : jg 0xa0df2 ; jne 0xa1728 ; ret
0x00000000000a0e03 : jg 0xa0e16 ; jne 0xa1728 ; ret
0x00000000000a0e28 : jg 0xa0e3c ; jne 0xa1728 ; ret
0x00000000000a0e56 : jg 0xa0e6b ; jne 0xa1728 ; ret
0x00000000000a0e76 : jg 0xa0e8c ; jne 0xa1728 ; ret
0x00000000000a0e98 : jg 0xa0eaf ; jne 0xa1728 ; ret
0x00000000000a0ec8 : jg 0xa0ee0 ; jne 0xa1728 ; ret
0x00000000000a0ef8 : jg 0xa0f11 ; jne 0xa1728 ; ret
0x00000000000a0f22 : jg 0xa0f3c ; jne 0xa1728 ; ret
0x00000000000a0f45 : jg 0xa0f60 ; jne 0xa1728 ; ret
0x00000000000a0f6a : jg 0xa0f86 ; jne 0xa1728 ; ret
0x00000000000a0f98 : jg 0xa0fb5 ; jne 0xa1728 ; ret
0x00000000000a0fc8 : jg 0xa0fe6 ; jne 0xa1728 ; ret
0x00000000000a0ffb : jg 0xa101a ; jne 0xa1728 ; ret
0x00000000000a102a : jg 0xa104a ; jne 0xa1728 ; ret
0x00000000000a105a : jg 0xa107b ; jne 0xa1728 ; ret
0x00000000000a108a : jg 0xa10ac ; jne 0xa1728 ; ret
0x00000000000a10bd : jg 0xa10e0 ; jne 0xa1728 ; ret
0x00000000000a10f2 : jg 0xa1116 ; jne 0xa1728 ; ret
0x00000000000a1120 : jg 0xa1145 ; jne 0xa1728 ; ret
0x00000000000a1150 : jg 0xa1176 ; jne 0xa1728 ; ret
0x00000000000a117c : jg 0xa11a3 ; jne 0xa1728 ; ret
0x00000000000a11ac : jg 0xa11d4 ; jne 0xa1728 ; ret
0x00000000000a11dc : jg 0xa1205 ; jne 0xa1728 ; ret
0x00000000000a120c : jg 0xa1236 ; jne 0xa1728 ; ret
0x00000000000a13b6 : jg 0xa13c5 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a13c9 : jg 0xa13db ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a1409 : jg 0xa141b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a1429 : jg 0xa143b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a154f : jg 0xa15af ; or eax, 0x1d478d48 ; ret
0x00000000000a16e2 : jg 0xa16ed ; ret
0x00000000000a1826 : jg 0xa185e ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a1825 : jg 0xa18ad ; xor byte ptr [rax - 0x73], cl ; ret
0x00000000000a21b6 : jg 0xa21c1 ; ret
0x00000000000a21c6 : jg 0xa21d4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a21da : jg 0xa21e9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a21f9 : jg 0xa2207 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a2209 : jg 0xa2217 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a2219 : jg 0xa222a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a223a : jg 0xa2249 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a225a : jg 0xa2269 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a227a : jg 0xa2289 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a229a : jg 0xa22ac ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a22dd : jg 0xa22ef ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a22fd : jg 0xa230f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a231b : jg 0xa232b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a233b : jg 0xa234b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a235b : jg 0xa236b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a237b : jg 0xa238b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a2ca6 : jg 0xa2cb1 ; ret
0x00000000000a2cb6 : jg 0xa2cc4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a2cca : jg 0xa2cd9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a2ce9 : jg 0xa2cf7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a2cf9 : jg 0xa2d07 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a2d09 : jg 0xa2d1a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a2d2a : jg 0xa2d39 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a2d4a : jg 0xa2d59 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a2d6a : jg 0xa2d79 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a2d8a : jg 0xa2d9c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a2dcd : jg 0xa2ddf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a2ded : jg 0xa2dff ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a2e0b : jg 0xa2e1b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a2e2b : jg 0xa2e3b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a2e4b : jg 0xa2e5b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a2e6b : jg 0xa2e7b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a3016 : jg 0xa3026 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a31ef : jg 0xa3250 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a320f : jg 0xa3270 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a3286 : jg 0xa32bf ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a3285 : jg 0xa330e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a3d28 : jg 0xa3d60 ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000a3df6 : jg 0xa3e2e ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000a3e84 : jg 0xa3e8f ; ret
0x00000000000a3f00 : jg 0xa3f0b ; ret
0x00000000000b5f35 : jg 0xb5f3d ; neg eax ; ret
0x00000000000c31a7 : jg 0xc3177 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c8b84 : jg 0xc8b9e ; test byte ptr [rbx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000c8d34 : jg 0xc8d4e ; test dh, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000c8ed4 : jg 0xc8eee ; test dh, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000c9cd6 : jg 0xc9ce0 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000c9d07 : jg 0xc9d10 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000c9d07 : jg 0xc9d11 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000c9e63 : jg 0xc9e6c ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000c9e63 : jg 0xc9e6d ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000ca2ce : jg 0xca2ca ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d2e2d : jg 0xd2e22 ; ret
0x00000000000e697e : jg 0xe6992 ; ret 0x8589
0x00000000000eb077 : jg 0xeb0f7 ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x00000000000eb0cb : jg 0xeb147 ; ret
0x00000000000f2397 : jg 0xf239b ; dec dword ptr [rax - 0x77] ; ret
0x0000000000127ea3 : jge 0x127eb7 ; call rax
0x000000000012d3c3 : jge 0x12d3d7 ; call rax
0x000000000012da7c : jge 0x12da90 ; call rax
0x0000000000160add : jge 0x160b1c ; ret 0xe2c4
0x0000000000160f8d : jge 0x160fcc ; ret 0xe2c4
0x000000000016b971 : jge 0x16b989 ; add rdi, rbx ; call r12
0x0000000000039676 : jge 0x3967e ; mov rax, qword ptr [rsp] ; call rax
0x0000000000048d68 : jge 0x48dba ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000065feb : jge 0x65f78 ; ret 0xc083
0x0000000000073481 : jge 0x7349c ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000e5b81 : jge 0xe5b88 ; add al, 0xf ; xchg eax, esp ; ret
0x00000000000f7cfd : jge 0xf7cb2 ; call r14
0x000000000013061a : jl 0x130645 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000013566f : jl 0x13569a ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000137f4d : jl 0x137f7b ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x0000000000163f2b : jl 0x163f34 ; neg eax ; ret
0x0000000000164008 : jl 0x164057 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000164044 : jl 0x164093 ; adc dword ptr [rcx - 1], ebx ; ret
0x0000000000164242 : jl 0x164291 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000001643a9 : jl 0x1643f8 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000016450b : jl 0x16455a ; adc dword ptr [rdi - 8], edi ; ret
0x0000000000164730 : jl 0x16477f ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000164751 : jl 0x1647a0 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000164764 : jl 0x1647b3 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000164839 : jl 0x164888 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000164891 : jl 0x1648e0 ; adc dword ptr [rsi + 3], edx ; ret
0x000000000016492e : jl 0x16497d ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000164b54 : jl 0x164b73 ; cld ; vzeroupper ; ret
0x0000000000028835 : jl 0x2885f ; call r15
0x0000000000028b73 : jl 0x28b9d ; call r15
0x0000000000029033 : jl 0x29061 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000029474 : jl 0x294a1 ; cmp bh, bh ; rol dword ptr [rcx - 0x77], cl ; ret 0x5a58
0x0000000000029c80 : jl 0x29cae ; xor byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000002af05 : jl 0x2af2f ; call r14
0x000000000002b277 : jl 0x2b2a1 ; call r15
0x000000000002bd4d : jl 0x2bd77 ; call r14
0x000000000002c0b7 : jl 0x2c0e1 ; call r15
0x000000000002e9b3 : jl 0x2e9e1 ; cmovns eax, dword ptr [rcx] ; ror byte ptr [rax - 0x77], 1 ; ret 0x8349
0x000000000002f2bd : jl 0x2f2ca ; sbb dword ptr [rax], eax ; ret
0x0000000000036005 : jl 0x3602f ; or al, ch ; ret
0x0000000000039030 : jl 0x3905d ; or byte ptr [rcx + rcx*4 - 2], cl ; call r14
0x000000000008a341 : jl 0x8a36d ; adc byte ptr [rcx + 0xf], cl ; ret 0x294d
0x000000000008a5a3 : jl 0x8a5a3 ; dec dword ptr [rax + 1] ; ret
0x00000000000945da : jl 0x94645 ; add rax, rdi ; ret
0x00000000000945ea : jl 0x94647 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000009460a : jl 0x94647 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000009462a : jl 0x94647 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000bf05a : jl 0xbf085 ; xor byte ptr [rcx - 0x77], al ; ret 0xc781
0x00000000000c4934 : jl 0xc4962 ; and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000d250e : jl 0xd2548 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d9e3f : jl 0xd9e6a ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000df1ee : jl 0xdf218 ; jo 0xdf1f7 ; ret 0xc083
0x00000000000f0cd6 : jl 0xf0ce1 ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000fbb18 : jl 0xfbb31 ; je 0xfbb21 ; ret
0x000000000010a58c : jle 0x10a597 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000128871 : jle 0x12887c ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000000000012c24c : jle 0x12c260 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001303ce : jle 0x130407 ; call 0x12c6d4
0x000000000015ab3e : jle 0x15abe6 ; ret
0x000000000002d2a2 : jle 0x2d2b5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000064c7d : jle 0x64c0a ; ret 0xc083
0x0000000000099b91 : jle 0x99bdf ; bsf eax, edx ; ret
0x0000000000099b91 : jle 0x99be0 ; bsf eax, edx ; ret
0x00000000000c9d21 : jle 0xc9d27 ; add byte ptr [rax], al ; ret
0x00000000000e25b1 : jle 0xe2790 ; movsxd rax, edx ; jmp 0xe25d9
0x00000000000eb07b : jle 0xeb0ef ; ret
0x00000000000eb0c7 : jle 0xeb13f ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x00000000000eb9b3 : jle 0xeba27 ; ret
0x00000000000eba3c : jle 0xebab7 ; movups xmmword ptr [rdi + 0xf8], xmm7 ; ret
0x00000000001016ea : jmp 0x1013e8
0x000000000010168f : jmp 0x10145e
0x00000000001015f2 : jmp 0x10163f
0x0000000000104965 : jmp 0x10492b
0x0000000000105945 : jmp 0x10590b
0x000000000010725d : jmp 0x107223
0x000000000010725a : jmp 0x10725f
0x0000000000107259 : jmp 0x107260
0x00000000001086ac : jmp 0x1086b1
0x000000000010e81d : jmp 0x10e5b6
0x000000000010ed5d : jmp 0x10eb15
0x0000000000111e46 : jmp 0x111e0c
0x00000000001171d0 : jmp 0x117196
0x0000000000118d58 : jmp 0x118d18
0x0000000000118d95 : jmp 0x118d5a
0x00000000001198a4 : jmp 0x119869
0x00000000001223e5 : jmp 0x1223b7
0x0000000000123e74 : jmp 0x123e39
0x0000000000123fb5 : jmp 0x123f7a
0x0000000000126945 : jmp 0x126970
0x000000000012e0d4 : jmp 0x12e0d6
0x0000000000122b05 : jmp 0x12ed22
0x000000000012fa1b : jmp 0x12f9e1
0x000000000012faab : jmp 0x12fa71
0x000000000013476e : jmp 0x134796
0x000000000016befd : jmp 0x16bf02
0x000000000002f0a6 : jmp 0x2ec41
0x0000000000031990 : jmp 0x319ba
0x0000000000032a38 : jmp 0x32a62
0x0000000000034f73 : jmp 0x34f39
0x0000000000035d7b : jmp 0x35c35
0x0000000000038c81 : jmp 0x38c46
0x000000000003968e : jmp 0x39654
0x0000000000041a6f : jmp 0x40b87
0x0000000000047532 : jmp 0x474f8
0x00000000000c9e53 : jmp 0x480cad9d
0x00000000000ca753 : jmp 0x480cb694
0x000000000011eac3 : jmp 0x4811f4c0
0x00000000000487c6 : jmp 0x48814
0x0000000000056a30 : jmp 0x48c7f380
0x000000000004a016 : jmp 0x4a064
0x000000000004dd8b : jmp 0x4dcea
0x000000000004decb : jmp 0x4de91
0x00000000001444da : jmp 0x4f9354d8
0x00000000001444d9 : jmp 0x4f9354d9
0x000000000014700a : jmp 0x4f938008
0x0000000000147009 : jmp 0x4f938009
0x00000000000534d1 : jmp 0x51862
0x00000000000525f4 : jmp 0x525e0
0x0000000000053c1b : jmp 0x53be1
0x00000000000550d4 : jmp 0x55099
0x0000000000055029 : jmp 0x5509e
0x0000000000063778 : jmp 0x5f9e2
0x0000000000064d57 : jmp 0x60f9b
0x00000000000629f1 : jmp 0x629b7
0x00000000000655b2 : jmp 0x65577
0x000000000006ad71 : jmp 0x66fdd
0x000000000006ade6 : jmp 0x670a2
0x000000000006c013 : jmp 0x682a0
0x000000000006c4b1 : jmp 0x6871b
0x000000000006f2a3 : jmp 0x6f269
0x0000000000070cf3 : jmp 0x70b6b
0x00000000000723e6 : jmp 0x723b3
0x0000000000078012 : jmp 0x77fd7
0x00000000000786b4 : jmp 0x7867a
0x0000000000079c65 : jmp 0x79c1d
0x0000000000079de2 : jmp 0x79d35
0x000000000007b0a3 : jmp 0x7b068
0x000000000007e435 : jmp 0x7e45d
0x00000000000e1c46 : jmp 0x7fd05593
0x000000000008094c : jmp 0x80912
0x0000000000081cf7 : jmp 0x81cc0
0x000000000009947c : jmp 0x99442
0x00000000000995d8 : jmp 0x9959d
0x000000000009969c : jmp 0x99662
0x00000000000997e8 : jmp 0x997ad
0x00000000000a35fe : jmp 0xa35c4
0x00000000000a36cf : jmp 0xa3695
0x00000000000a373e : jmp 0xa3704
0x00000000000a402e : jmp 0xa3ff4
0x00000000000abf5e : jmp 0xabec9
0x00000000000b2b31 : jmp 0xb2a90
0x00000000000b45fb : jmp 0xb4047
0x00000000000b976c : jmp 0xb9782
0x00000000000bd7c5 : jmp 0xbaf0f
0x00000000000bd685 : jmp 0xbd68f
0x00000000000c8ae2 : jmp 0xc8a2d
0x00000000000c90e6 : jmp 0xc9076
0x00000000000ca629 : jmp 0xca417
0x00000000000d106c : jmp 0xd0db0
0x00000000000d1663 : jmp 0xd1628
0x00000000000d1895 : jmp 0xd185a
0x00000000000d2abf : jmp 0xd2ac4
0x00000000000d3f52 : jmp 0xd3f18
0x00000000000e055f : jmp 0xe0525
0x00000000000e69d5 : jmp 0xe69ff
0x00000000000ecf03 : jmp 0xecec8
0x00000000000fc508 : jmp 0xf0fc511
0x00000000000f36c3 : jmp 0xf3688
0x00000000000f3783 : jmp 0xf3748
0x00000000000f6495 : jmp 0xf6479
0x00000000000f7a63 : jmp 0xf7a28
0x00000000000f95e3 : jmp 0xf9167
0x00000000000fc173 : jmp 0xfc138
0x00000000000fcb23 : jmp 0xfcae8
0x00000000000fcbf3 : jmp 0xfcbb8
0x000000000012be49 : jmp 0xffffffff80d5b561
0x00000000000d0793 : jmp 0xffffffff851cc9d3
0x0000000000061a55 : jmp 0xffffffff8b4f1a60
0x0000000000061a54 : jmp 0xffffffff8b4f1a61
0x00000000000b5e43 : jmp 0xffffffffc30b5e4c
0x0000000000048e85 : jmp 0xffffffffc31417da
0x000000000004fe03 : jmp 0xffffffffc388fe0b
0x00000000000e050e : jmp 0xffffffffc3980516
0x0000000000128cfd : jmp 0xffffffffead44f8d
0x00000000000c4067 : jmp 0xfffffffff63e02f7
0x0000000000088863 : jmp 0xffffffffff089bc2
0x00000000000f42f3 : jmp qword ptr [r8]
0x0000000000045d96 : jmp qword ptr [rax]
0x000000000010fc35 : jmp qword ptr [rbx]
0x00000000000422fd : jmp qword ptr [rcx]
0x0000000000123217 : jmp qword ptr [rdx + rax*8]
0x000000000002ff91 : jmp qword ptr [rsi + 0xf]
0x00000000000cf0ed : jmp qword ptr [rsi - 0x70]
0x00000000000f6a8d : jmp qword ptr [rsi - 0x7cb7fff4]
0x00000000001353f5 : jmp qword ptr [rsi]
0x0000000000047fd3 : jmp r10
0x000000000013cea2 : jmp r9
0x00000000000244a9 : jmp rax
0x00000000001229cd : jmp rbx
0x00000000000908b9 : jmp rcx
0x0000000000035628 : jmp rdi
0x000000000002f0ad : jmp rdx
0x000000000002e6de : jmp rsi
0x000000000011f8d5 : jmp rsp
0x0000000000100001 : jne 0x10000a ; ret
0x000000000010005e : jne 0x10006a ; ret
0x0000000000100233 : jne 0x100242 ; ret
0x0000000000103b1e : jne 0x103b2e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001045c4 : jne 0x1045b2 ; ret
0x0000000000104adf : jne 0x104a71 ; xor eax, eax ; ret
0x0000000000107230 : jne 0x107268 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010747b : jne 0x10746b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000108afb : jne 0x108b0b ; cmp qword ptr [rdi], 0 ; je 0x108b10 ; ret
0x0000000000109131 : jne 0x109129 ; pop rdx ; pop r10 ; ret
0x0000000000109cbb : jne 0x109ca6 ; lea rdi, qword ptr [rip - 0x184] ; call rax
0x0000000000109cf4 : jne 0x109d44 ; leave ; ret
0x000000000010a897 : jne 0x10a833 ; mov rax, rdi ; ret
0x000000000010a9fc : jne 0x10aa0f ; add rsp, 0xd8 ; ret
0x000000000010ab97 : jne 0x10abaa ; add rsp, 0xd8 ; ret
0x000000000010bb3f : jne 0x10bb59 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010be91 : jne 0x10be31 ; mov rax, rdi ; ret
0x000000000010c027 : jne 0x10c03a ; add rsp, 0xd8 ; ret
0x000000000010ca78 : jne 0x10ca8b ; add rsp, 0x28 ; ret
0x000000000010cad8 : jne 0x10caeb ; add rsp, 0x28 ; ret
0x000000000010cb91 : jne 0x10cba4 ; add rsp, 0xd8 ; ret
0x000000000010ce01 : jne 0x10ce14 ; add rsp, 0xd8 ; ret
0x000000000010d1d1 : jne 0x10d1e4 ; add rsp, 0xd8 ; ret
0x000000000011390d : jne 0x11393e ; add rsp, 0x38 ; ret
0x00000000001139d8 : jne 0x1139e5 ; add rsp, 0x28 ; ret
0x00000000001148a2 : jne 0x114898 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000116a6b : jne 0x116a7c ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001172e7 : jne 0x11730f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000118434 : jne 0x11840f ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000118737 : jne 0x11871b ; ret
0x0000000000118c5d : jne 0x118c7d ; mov eax, r8d ; ret
0x0000000000118d93 : jne 0x118d43 ; jmp 0x118d5c
0x0000000000118e03 : jne 0x118db7 ; mov eax, 0xffffffff ; ret
0x0000000000118fb2 : jne 0x118fc6 ; add rsp, 0x18 ; ret
0x00000000001190ad : jne 0x1190fd ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000119149 : jne 0x11917f ; add rsp, 0x38 ; ret
0x000000000011948c : jne 0x1194e1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011954b : jne 0x1195a9 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011a696 : jne 0x11a6d7 ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000011a85f : jne 0x11a86c ; add rsp, 0x18 ; ret
0x000000000011acb0 : jne 0x11acbd ; add rsp, 0x18 ; ret
0x000000000011b02d : jne 0x11b00e ; ret
0x000000000011cf00 : jne 0x11cf0a ; ret
0x000000000011cf45 : jne 0x11cf38 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011d0ea : jne 0x11d0f3 ; pop rbx ; ret
0x000000000011d4ef : jne 0x11d4e3 ; pop rbx ; ret
0x000000000011d60d : jne 0x11d62d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011e4fe : jne 0x11e50a ; ret
0x000000000011f243 : jne 0x11f250 ; add rsp, 0x18 ; ret
0x0000000000120ffb : jne 0x12100a ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000121b22 : jne 0x121b77 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000121f37 : jne 0x121f0e ; add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x20] ; call qword ptr [rax]
0x000000000012212f : jne 0x12216d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000122d25 : jne 0x122d88 ; mov dword ptr [rsi], 0 ; ret
0x0000000000123676 : jne 0x12360b ; xor eax, eax ; pop rbx ; ret
0x0000000000123ace : jne 0x123b1a ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000123f30 : jne 0x123f3f ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000123fae : jne 0x123f64 ; mov eax, 1 ; jmp 0x123f81
0x0000000000124214 : jne 0x124249 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001242b2 : jne 0x1242ec ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001244b1 : jne 0x124483 ; xor eax, eax ; pop rbx ; ret
0x0000000000124521 : jne 0x1244f6 ; mov eax, 1 ; pop rbx ; ret
0x0000000000124ab4 : jne 0x124ace ; add rsp, 0x40 ; pop rbx ; ret
0x00000000001254c4 : jne 0x1254b2 ; ret
0x000000000012683b : jne 0x12684b ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000126943 : jne 0x126958 ; jmp 0x126972
0x00000000001280ec : jne 0x1280f2 ; ret
0x00000000001287db : jne 0x1287ec ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012b483 : jne 0x12b4a8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012b847 : jne 0x12b85d ; add rsp, 0x18 ; ret
0x000000000012b8be : jne 0x12b8e5 ; add rsp, 0x88 ; ret
0x000000000012b95f : jne 0x12b97e ; add rsp, 0x30 ; pop rbx ; ret
0x000000000012b9ef : jne 0x12ba0e ; add rsp, 0x30 ; pop rbx ; ret
0x000000000012ba98 : jne 0x12badf ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000012bb68 : jne 0x12bbaf ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000012bc83 : jne 0x12bc9b ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000012bcfe : jne 0x12bd0b ; add rsp, 0x18 ; ret
0x000000000012bd70 : jne 0x12bd8e ; add rsp, 0x20 ; pop rbx ; ret
0x000000000012c2f5 : jne 0x12c31f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012ca6a : jne 0x12ca7e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012cb05 : jne 0x12cb12 ; add rsp, 0x78 ; ret
0x000000000012cb7b : jne 0x12cb88 ; add rsp, 0x78 ; ret
0x000000000012cbeb : jne 0x12cbf8 ; add rsp, 0x78 ; ret
0x000000000012cc5b : jne 0x12cc68 ; add rsp, 0x78 ; ret
0x000000000012ccbc : jne 0x12ccc9 ; add rsp, 0x78 ; ret
0x000000000012cd20 : jne 0x12cd2d ; add rsp, 0x78 ; ret
0x000000000012cd8b : jne 0x12cd98 ; add rsp, 0x78 ; ret
0x000000000012ce05 : jne 0x12ce12 ; add rsp, 0x78 ; ret
0x000000000012d1dd : jne 0x12d1f0 ; add rsp, 0x98 ; ret
0x000000000012d2d3 : jne 0x12d303 ; add rsp, 0x28 ; ret
0x000000000012d337 : jne 0x12d323 ; pop rbx ; ret
0x000000000012d5dc : jne 0x12d5e2 ; ret
0x000000000012eb95 : jne 0x12eba2 ; add rsp, 0x48 ; ret
0x000000000012ebfe : jne 0x12ec4a ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012ec8e : jne 0x12ecd9 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012ed03 : jne 0x12ecfb ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000012ed5e : jne 0x12edac ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012efee : jne 0x12f03b ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f07e : jne 0x12f0ca ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f11a : jne 0x12f129 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f17a : jne 0x12f189 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f1ce : jne 0x12f220 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f25e : jne 0x12f2aa ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f8ce : jne 0x12f91c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f95e : jne 0x12f9ac ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f9ee : jne 0x12fa3c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012fa7e : jne 0x12facc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001300bd : jne 0x1300d0 ; movzx eax, al ; add rsp, 0x18 ; ret
0x000000000013011e : jne 0x130131 ; movzx eax, al ; add rsp, 0x18 ; ret
0x0000000000130189 : jne 0x130198 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001301fc : jne 0x13020b ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000130266 : jne 0x130277 ; mov eax, 1 ; ret
0x00000000001302a6 : jne 0x1302b7 ; mov eax, 1 ; ret
0x000000000013476c : jne 0x13477e ; jmp 0x134798
0x0000000000134ae2 : jne 0x134b1a ; add rsp, 0x18 ; ret
0x0000000000134c80 : jne 0x134c95 ; xor eax, eax ; pop rbx ; ret
0x0000000000134f69 : jne 0x134fa3 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000134ff9 : jne 0x135033 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000135d72 : jne 0x135db6 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000136a08 : jne 0x136a27 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000136d15 : jne 0x136d28 ; add rsp, 0xa8 ; ret
0x0000000000136d67 : jne 0x136d7a ; add rsp, 0xa8 ; ret
0x0000000000137571 : jne 0x1375a2 ; add rsp, 0x38 ; ret
0x0000000000137615 : jne 0x137631 ; add rsp, 0x38 ; ret
0x00000000001376b2 : jne 0x1376d2 ; add rsp, 0x38 ; ret
0x00000000001377fb : jne 0x137827 ; add rsp, 0x48 ; ret
0x0000000000137d39 : jne 0x137d4c ; add rsp, 0x28 ; ret
0x00000000001380c4 : jne 0x1380d3 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000013a229 : jne 0x13a238 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013a2af : jne 0x13a2be ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014f341 : jne 0x14f8f6 ; ret
0x000000000015af3d : jne 0x15af27 ; sub eax, ecx ; vzeroupper ; ret
0x000000000015b412 : jne 0x15b3f7 ; sub eax, ecx ; vzeroupper ; ret
0x000000000015b743 : jne 0x15b767 ; xor eax, eax ; vzeroupper ; ret
0x000000000015bdfa : jne 0x15be05 ; vzeroupper ; ret
0x000000000015bef4 : jne 0x15be06 ; ret
0x000000000015c03f : jne 0x15be09 ; vzeroupper ; ret
0x000000000015fa83 : jne 0x15fab8 ; mov rax, r8 ; vzeroupper ; ret
0x0000000000160198 : jne 0x160180 ; vzeroupper ; ret
0x00000000001602fa : jne 0x160305 ; vzeroupper ; ret
0x0000000000160382 : jne 0x160306 ; ret
0x00000000001604cf : jne 0x160309 ; vzeroupper ; ret
0x0000000000160326 : jne 0x16030e ; ret
0x0000000000160743 : jne 0x160767 ; xor eax, eax ; vzeroupper ; ret
0x000000000016089e : jne 0x16087e ; vzeroupper ; ret
0x00000000001608bd : jne 0x16087f ; vzeroupper ; ret
0x0000000000160a09 : jne 0x160882 ; vzeroupper ; ret
0x0000000000160bbb : jne 0x160ba7 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000160d19 : jne 0x160cee ; vzeroupper ; ret
0x0000000000160e8f : jne 0x160cf2 ; vzeroupper ; ret
0x0000000000161090 : jne 0x161077 ; sub eax, ecx ; vzeroupper ; ret
0x00000000001630ad : jne 0x1630d7 ; xor eax, eax ; ret
0x00000000001626a1 : jne 0x1630db ; xor eax, eax ; ret
0x00000000001626c9 : jne 0x1630e7 ; xor eax, eax ; ret
0x0000000000163eed : jne 0x163f17 ; xor eax, eax ; ret
0x0000000000163cd1 : jne 0x163f1b ; xor eax, eax ; ret
0x0000000000163f21 : jne 0x163f2a ; xor eax, eax ; ret
0x0000000000163cf7 : jne 0x163f2e ; xor eax, eax ; ret
0x000000000016505b : jne 0x16503b ; vzeroupper ; ret
0x00000000001651c5 : jne 0x165156 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000165197 : jne 0x165156 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000165196 : jne 0x165157 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000166924 : jne 0x166b38 ; xor eax, eax ; ret
0x0000000000166b29 : jne 0x166b49 ; xor eax, eax ; ret
0x00000000001669d1 : jne 0x166b4d ; xor eax, eax ; ret
0x0000000000166b41 : jne 0x166b4e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000167156 : jne 0x167164 ; xor eax, eax ; ret
0x000000000016702d : jne 0x167166 ; ret
0x000000000016b5a8 : jne 0x16b5ca ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000016b727 : jne 0x16b778 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000016ba34 : jne 0x16ba20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016bd76 : jne 0x16bd5e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016be4e : jne 0x16be3e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016beaa : jne 0x16be88 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016c005 : jne 0x16bff3 ; pop rbx ; ret
0x000000000016c0ce : jne 0x16c0b3 ; pop rbx ; ret
0x000000000016c1b0 : jne 0x16c1a8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000023ae5 : jne 0x23aad ; ret
0x00000000000251c7 : jne 0x251ac ; sbb dword ptr [rax], eax ; ret
0x0000000000030163 : jne 0x30172 ; ret
0x000000000003198e : jne 0x319a2 ; jmp 0x319bc
0x0000000000032a36 : jne 0x32a4a ; jmp 0x32a64
0x0000000000034e5d : jne 0x34e78 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000035bfc : jne 0x35bd9 ; ret
0x0000000000036359 : jne 0x36327 ; mov rdx, r8 ; jmp 0x3638d
0x0000000000036355 : jne 0x36348 ; cmp al, 0x5f ; jne 0x3632b ; mov rdx, r8 ; jmp 0x36391
0x0000000000036ae6 : jne 0x36af8 ; fadd st(0) ; add rsp, 8 ; ret
0x0000000000036ebc : jne 0x36ece ; addsd xmm0, xmm0 ; ret
0x0000000000037012 : jne 0x37029 ; test eax, 0x7fffff ; je 0x37029 ; ret
0x00000000000371e8 : jne 0x371f6 ; addss xmm0, xmm0 ; ret
0x00000000000378c3 : jne 0x378d0 ; add rsp, 0x18 ; ret
0x000000000003795a : jne 0x37970 ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000037c1b : jne 0x37c2e ; add rsp, 0x148 ; ret
0x0000000000037f9e : jne 0x37fec ; add rsp, 0x148 ; ret
0x0000000000038274 : jne 0x3828e ; add rsp, 0x118 ; ret
0x0000000000038307 : jne 0x38321 ; add rsp, 0x118 ; ret
0x0000000000038586 : jne 0x385b1 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000388ef : jne 0x38902 ; add rsp, 0x148 ; ret
0x0000000000038970 : jne 0x38967 ; mov eax, 1 ; ret
0x00000000000389d4 : jne 0x389c4 ; xor eax, eax ; ret
0x0000000000038a24 : jne 0x38a14 ; xor eax, eax ; ret
0x0000000000038df3 : jne 0x38e06 ; add rsp, 0xa8 ; ret
0x000000000003ac1d : jne 0x3abe8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003accf : jne 0x3acdb ; pop rbx ; ret
0x000000000003ada3 : jne 0x3adb0 ; add rsp, 0x28 ; ret
0x000000000003ae93 : jne 0x3aea0 ; add rsp, 0x28 ; ret
0x000000000003b1cf : jne 0x3b1dc ; add rsp, 0x18 ; ret
0x000000000003b44d : jne 0x3b467 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003b6bd : jne 0x3b6ca ; add rsp, 0x18 ; ret
0x000000000003b70a : jne 0x3b717 ; add rsp, 0x18 ; ret
0x000000000003b75c : jne 0x3b769 ; add rsp, 0x18 ; ret
0x000000000003b7a9 : jne 0x3b7b6 ; add rsp, 0x18 ; ret
0x000000000003b7fc : jne 0x3b809 ; add rsp, 0x18 ; ret
0x000000000003b849 : jne 0x3b856 ; add rsp, 0x18 ; ret
0x000000000003cf67 : jne 0x3cf82 ; xor eax, eax ; ret
0x000000000003f987 : jne 0x3f9a2 ; xor eax, eax ; ret
0x00000000000423b7 : jne 0x423d2 ; xor eax, eax ; ret
0x0000000000044bda : jne 0x44c1d ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000044c8a : jne 0x44d02 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000044d68 : jne 0x44dcc ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000045952 : jne 0x45931 ; ret
0x0000000000045b52 : jne 0x45b65 ; add rsp, 0xd8 ; ret
0x00000000000471dc : jne 0x471ef ; add rsp, 0xd8 ; ret
0x0000000000047398 : jne 0x47393 ; pop rbx ; ret
0x00000000000473cd : jne 0x473c3 ; pop rbx ; ret
0x0000000000047fce : jne 0x47fd7 ; push r10 ; ret
0x00000000000484b7 : jne 0x484c0 ; push r10 ; ret
0x000000000004853f : jne 0x48534 ; xor eax, eax ; ret
0x0000000000048565 : jne 0x4854f ; mov eax, 1 ; ret
0x0000000000048627 : jne 0x4861c ; xor eax, eax ; ret
0x000000000004864d : jne 0x48637 ; mov eax, 1 ; ret
0x00000000000488f3 : jne 0x488e5 ; mov rax, rdx ; ret
0x0000000000048f77 : jne 0x48f6d ; mov rax, rdx ; ret
0x0000000000049ec5 : jne 0x49f11 ; leave ; ret
0x000000000004a1ea : jne 0x4a1a3 ; mov eax, 1 ; ret
0x000000000004a6d7 : jne 0x4a6f2 ; xor eax, eax ; ret
0x000000000004d32a : jne 0x4d385 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000004da9b : jne 0x4dab3 ; add rsp, 0x38 ; ret
0x00000000000550ce : jne 0x54cba ; jmp 0x5509f
0x0000000000059386 : jne 0x59399 ; add rsp, 0xd8 ; ret
0x0000000000059458 : jne 0x5946b ; add rsp, 0xd8 ; ret
0x0000000000059512 : jne 0x59525 ; add rsp, 0xd8 ; ret
0x00000000000595d6 : jne 0x595e9 ; add rsp, 0xd8 ; ret
0x0000000000059697 : jne 0x596aa ; add rsp, 0xd8 ; ret
0x0000000000059757 : jne 0x5976a ; add rsp, 0xd8 ; ret
0x000000000006d9e6 : jne 0x6d9f9 ; add rsp, 0xd8 ; ret
0x000000000006daba : jne 0x6dacd ; add rsp, 0xd8 ; ret
0x000000000006db77 : jne 0x6db8a ; add rsp, 0xd8 ; ret
0x000000000006df3a : jne 0x6df75 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006dfb5 : jne 0x6dfc6 ; mov rax, rbx ; pop rbx ; ret
0x000000000006e0b6 : jne 0x6e0c9 ; add rsp, 0xa8 ; ret
0x000000000006e657 : jne 0x6e66d ; add rsp, 0x18 ; ret
0x000000000006eeb6 : jne 0x6eec9 ; add rsp, 0xd8 ; ret
0x0000000000074616 : jne 0x74629 ; add rsp, 0xd8 ; ret
0x00000000000746d1 : jne 0x746e4 ; add rsp, 0xd8 ; ret
0x00000000000747c8 : jne 0x747db ; add rsp, 0xd8 ; ret
0x000000000007489b : jne 0x748ae ; add rsp, 0xd8 ; ret
0x0000000000074956 : jne 0x74969 ; add rsp, 0xd8 ; ret
0x0000000000074c66 : jne 0x74c79 ; add rsp, 0xd8 ; ret
0x0000000000074f41 : jne 0x74f32 ; ret
0x0000000000079ef7 : jne 0x79f0a ; add rsp, 0xd8 ; ret
0x000000000007b138 : jne 0x7b151 ; add rsp, 0x48 ; ret
0x000000000007b6d2 : jne 0x7b6e9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d9c7 : jne 0x7d9d4 ; xor eax, eax ; ret
0x000000000007e433 : jne 0x7e445 ; jmp 0x7e45f
0x000000000007e486 : jne 0x7e4e4 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000007e519 : jne 0x7e50a ; ret
0x000000000007f126 : jne 0x7f11a ; ret
0x000000000007f481 : jne 0x7f44b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007f4cc : jne 0x7f4c5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007febe : jne 0x7feb2 ; ret
0x00000000000811db : jne 0x811e0 ; ret
0x000000000008179f : jne 0x81793 ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000000819aa : jne 0x819f1 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000085734 : jne 0x856fa ; ret
0x0000000000086e17 : jne 0x86e06 ; sub rax, 0x10 ; ret
0x0000000000088a01 : jne 0x889f4 ; xor eax, eax ; ret
0x0000000000088a6b : jne 0x88a45 ; mov rdi, rsi ; call rax
0x0000000000088acb : jne 0x88ac2 ; ret
0x000000000008b784 : jne 0x8b772 ; ret
0x000000000008b8c3 : jne 0x8b8ba ; ret
0x000000000008c167 : jne 0x8c159 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008cad8 : jne 0x8ca58 ; xor eax, eax ; ret
0x000000000008caad : jne 0x8caa4 ; xor eax, eax ; ret
0x000000000008ded3 : jne 0x8dec4 ; or byte ptr [rdi], sil ; ret
0x00000000000904af : jne 0x904a5 ; mov qword ptr [rdx], rcx ; ret
0x0000000000090583 : jne 0x90577 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009065e : jne 0x90652 ; ret
0x00000000000906a2 : jne 0x90692 ; ret
0x000000000009070c : jne 0x906ea ; ret
0x00000000000907ba : jne 0x907a7 ; cmp r8d, ecx ; je 0x907a7 ; ret
0x0000000000090801 : jne 0x907f4 ; xor eax, eax ; ret
0x0000000000090873 : jne 0x90852 ; ret
0x000000000009259c : jne 0x92586 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000940a7 : jne 0x94104 ; xor eax, eax ; ret
0x0000000000094077 : jne 0x94128 ; xor eax, eax ; ret
0x000000000009455a : jne 0x945d4 ; xor eax, eax ; ret
0x0000000000094589 : jne 0x94604 ; xor eax, eax ; ret
0x0000000000099cb7 : jne 0x99cc2 ; xor rax, rax ; ret
0x000000000009f61a : jne 0x9fed6 ; ret
0x00000000000a0cfd : jne 0xa1726 ; ret
0x00000000000a3431 : jne 0xa3422 ; ret
0x00000000000a34e1 : jne 0xa34d2 ; ret
0x00000000000a3651 : jne 0xa3646 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000a37a1 : jne 0xa3796 ; sub rax, 1 ; ret
0x00000000000a3ea7 : jne 0xa3eb2 ; mov rax, rdi ; ret
0x00000000000a3f81 : jne 0xa3f6a ; ret
0x00000000000a46bf : jne 0xa46b2 ; ret
0x00000000000a4890 : jne 0xa4881 ; mov dword ptr [rcx + 4], 0 ; ret
0x00000000000a48e6 : jne 0xa48b2 ; ret
0x00000000000a49d7 : jne 0xa49ca ; ret
0x00000000000a4a08 : jne 0xa49f2 ; ret
0x00000000000a4afb : jne 0xa4aca ; ret
0x00000000000a4aed : jne 0xa4ae2 ; ret
0x00000000000a4bd8 : jne 0xa4bcf ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000a4bbc : jne 0xa4bd4 ; mov rax, rdi ; ret
0x00000000000a4ddb : jne 0xa4dd2 ; ret
0x00000000000a4e66 : jne 0xa4e7a ; ret
0x00000000000a4eb0 : jne 0xa4ea2 ; ret
0x00000000000a5fec : jne 0xa5fe2 ; ret
0x00000000000a6a27 : jne 0xa6a42 ; xor eax, eax ; ret
0x00000000000a92a7 : jne 0xa92c2 ; xor eax, eax ; ret
0x00000000000ab8b7 : jne 0xab8d2 ; xor eax, eax ; ret
0x00000000000ae12b : jne 0xae1a3 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000ae219 : jne 0xae27d ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000ae2eb : jne 0xae32e ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b1223 : jne 0xb124b ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000b1f56 : jne 0xb1f69 ; add rsp, 0xd8 ; ret
0x00000000000b2337 : jne 0xb2352 ; xor eax, eax ; ret
0x00000000000b4e4b : jne 0xb4ea6 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b51e7 : jne 0xb5244 ; xor eax, eax ; ret
0x00000000000b51b7 : jne 0xb5268 ; xor eax, eax ; ret
0x00000000000b5eb6 : jne 0xb5f32 ; ret
0x00000000000b5ddf : jne 0xb5f36 ; ret
0x00000000000b5dbe : jne 0xb5f38 ; xor eax, eax ; ret
0x00000000000b5ff7 : jne 0xb5fe4 ; xor eax, eax ; ret
0x00000000000b5ff2 : jne 0xb6009 ; cmp rax, rdx ; jne 0xb5fe9 ; xor eax, eax ; ret
0x00000000000b604c : jne 0xb6042 ; ret
0x00000000000b646b : jne 0xb64c6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000b6507 : jne 0xb6512 ; xor rax, rax ; ret
0x00000000000b679b : jne 0xb6755 ; mov rax, rdx ; ret
0x00000000000b6fec : jne 0xb6ff9 ; add rsp, 0x28 ; ret
0x00000000000b705d : jne 0xb706c ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000ba425 : jne 0xba447 ; add rsp, 0x28 ; ret
0x00000000000ba556 : jne 0xba56c ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000bad0d : jne 0xbad29 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000c00e8 : jne 0xc00f5 ; add rsp, 0x18 ; ret
0x00000000000c2e68 : jne 0xc2e75 ; add rsp, 0x18 ; ret
0x00000000000c3358 : jne 0xc3346 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c4d7f : jne 0xc4dd9 ; add rsp, 0x38 ; ret
0x00000000000c6e64 : jne 0xc6edc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c85c5 : jne 0xc85dd ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c8e11 : jne 0xc8e35 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000c8fb1 : jne 0xc8fd5 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000c94ef : jne 0xc9549 ; add rsp, 0x38 ; ret
0x00000000000c958f : jne 0xc95e9 ; add rsp, 0x38 ; ret
0x00000000000c982f : jne 0xc9899 ; add rsp, 0x38 ; ret
0x00000000000c98df : jne 0xc9949 ; add rsp, 0x38 ; ret
0x00000000000c9cec : jne 0xc9cf2 ; ret
0x00000000000c9f1b : jne 0xc9f96 ; add byte ptr [rax], al ; setne al ; ret
0x00000000000caa55 : jne 0xcaa2b ; xor eax, eax ; ret
0x00000000000cac2b : jne 0xcac64 ; add rsp, 0xa8 ; ret
0x00000000000cad3f : jne 0xcad3b ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000cce3a : jne 0xcce21 ; xor eax, eax ; ret
0x00000000000cce46 : jne 0xcce37 ; mov eax, 1 ; ret
0x00000000000ccec2 : jne 0xccea0 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ccfc4 : jne 0xccfa1 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d1163 : jne 0xd1159 ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x00000000000d12e3 : jne 0xd12e2 ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000000d2b6c : jne 0xd2b73 ; pop rbx ; ret
0x00000000000d2c98 : jne 0xd2c8a ; ret
0x00000000000d2c91 : jne 0xd2cae ; mov eax, edx ; cmp rdx, rcx ; jne 0xd2c91 ; ret
0x00000000000d31da : jne 0xd31c6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d3648 : jne 0xd369b ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d5d0c : jne 0xd5c78 ; ret
0x00000000000d5d3c : jne 0xd5c79 ; ret
0x00000000000d5cd7 : jne 0xd5cee ; cmp byte ptr [rsi], cl ; je 0xd5c78 ; ret
0x00000000000d6677 : jne 0xd6610 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e0a25 : jne 0xe09fb ; xor eax, eax ; ret
0x00000000000e0bfb : jne 0xe0c34 ; add rsp, 0xa8 ; ret
0x00000000000e2dcf : jne 0xe2e2c ; add rsp, 0x38 ; ret
0x00000000000e3baf : jne 0xe3ba5 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000e5ef5 : jne 0xe5ee0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e69d3 : jne 0xe69e7 ; jmp 0xe6a01
0x00000000000e6d58 : jne 0xe6d6f ; mov qword ptr [r8], r9 ; xor eax, eax ; ret
0x00000000000eb0ee : jne 0xeb0fc ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000ebadb : jne 0xebaf7 ; add rsp, 0x28 ; ret
0x00000000000ebc9a : jne 0xebca9 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ebd20 : jne 0xebd2d ; add rsp, 0x18 ; ret
0x00000000000ebd72 : jne 0xebd7f ; add rsp, 0x18 ; ret
0x00000000000ece07 : jne 0xece73 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000ee1e3 : jne 0xee1f6 ; movzx eax, al ; add rsp, 0x58 ; ret
0x00000000000f0b91 : jne 0xf0b57 ; mov edi, r12d ; call 0xece87
0x00000000000f196a : jne 0xf19b9 ; add rsp, 0x18 ; ret
0x00000000000f1a0b : jne 0xf1a18 ; add rsp, 0x58 ; ret
0x00000000000f1aab : jne 0xf1af9 ; add rsp, 0x58 ; ret
0x00000000000f1b50 : jne 0xf1ba1 ; add rsp, 0x58 ; ret
0x00000000000f1e62 : jne 0xf1ea3 ; add rsp, 0x38 ; ret
0x00000000000f1f59 : jne 0xf1f79 ; add rsp, 0x38 ; ret
0x00000000000f1fbd : jne 0xf1fd1 ; add rsp, 0x18 ; ret
0x00000000000f2e0f : jne 0xf2e69 ; add rsp, 0x38 ; ret
0x00000000000f2eaf : jne 0xf2f09 ; add rsp, 0x38 ; ret
0x00000000000f2f62 : jne 0xf2fb1 ; add esp, 0x38 ; ret
0x00000000000f2f61 : jne 0xf2fde ; add rsp, 0x38 ; ret
0x00000000000f3032 : jne 0xf3081 ; add esp, 0x38 ; ret
0x00000000000f3031 : jne 0xf30ae ; add rsp, 0x38 ; ret
0x00000000000f312c : jne 0xf3145 ; add rsp, 0x28 ; ret
0x00000000000f3a59 : jne 0xf3aad ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f3cab : jne 0xf3cb8 ; add rsp, 0x58 ; ret
0x00000000000f3d16 : jne 0xf3d23 ; add rsp, 0x28 ; ret
0x00000000000f3df4 : jne 0xf3e33 ; add rsp, 0x68 ; ret
0x00000000000f409e : jne 0xf4080 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000f410f : jne 0xf40f0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000f4204 : jne 0xf41d7 ; xor eax, eax ; pop rbx ; ret
0x00000000000f428d : jne 0xf4262 ; ret
0x00000000000f4ca8 : jne 0xf4ceb ; add rsp, 0x38 ; ret
0x00000000000f4d77 : jne 0xf4dbb ; add rsp, 0x38 ; ret
0x00000000000f540e : jne 0xf5427 ; mov eax, 1 ; ret
0x00000000000f62be : jne 0xf62d1 ; add rsp, 0xd8 ; ret
0x00000000000f6371 : jne 0xf6384 ; add rsp, 0xd8 ; ret
0x00000000000f7519 : jne 0xf7526 ; add rsp, 0x18 ; ret
0x00000000000f796f : jne 0xf79b2 ; ret
0x00000000000f79a3 : jne 0xf79c2 ; ret
0x00000000000f822c : jne 0xf8232 ; ret
0x00000000000f86eb : jne 0xf86fe ; add rsp, 0xd8 ; ret
0x00000000000f87ab : jne 0xf87be ; add rsp, 0xd8 ; ret
0x00000000000f898b : jne 0xf899e ; add rsp, 0x418 ; ret
0x00000000000f91aa : jne 0xf91a8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f96b1 : jne 0xf9705 ; mov rdx, rax ; jmp 0xf96ca
0x00000000000f9aa7 : jne 0xf9a9e ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000fbaaf : jne 0xfbad9 ; add rsp, 0x68 ; ret
0x00000000000fd45e : jne 0xfd46b ; add rsp, 0x18 ; ret
0x00000000000fd9f3 : jne 0xfda41 ; add rsp, 0x58 ; ret
0x00000000000ff6bf : jne 0xff6ca ; ret
0x00000000000ff72a : jne 0xff732 ; ret
0x00000000000ff913 : jne 0xff922 ; ret
0x000000000010453a : jno 0x104542 ; cmovne eax, edx ; ret
0x000000000010453a : jno 0x104543 ; cmovne eax, edx ; ret
0x0000000000104539 : jno 0x104544 ; cmovne eax, edx ; ret
0x0000000000139d09 : jno 0x139d18 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000016295e : jno 0x16296d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000164004 : jno 0x16400d ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000016423e : jno 0x164247 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000001643a5 : jno 0x1643b6 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000016450a : jno 0x16458e ; adc qword ptr [rdi - 8], rdi ; ret
0x0000000000047433 : jno 0x47455 ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000074415 : jno 0x74423 ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000007454b : jno 0x74557 ; mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x000000000007b497 : jno 0x7b4a3 ; mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x000000000007b5a7 : jno 0x7b5b3 ; mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x00000000000c6c4b : jno 0xc6c61 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000128bc1 : jnp 0x128c14 ; add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000129dd7 : jnp 0x129e43 ; call rax
0x000000000012a887 : jnp 0x12a8e3 ; call rax
0x000000000012c7dc : jnp 0x12c763 ; ret 0x3901
0x0000000000031d02 : jnp 0x31d49 ; call qword ptr [rip + 0x18c226]
0x000000000003abfb : jnp 0x3ac07 ; call rax
0x0000000000044cc0 : jnp 0x44cdb ; add byte ptr [rax + 0x21], cl ; ret 0x8948
0x0000000000056adc : jnp 0x558efbff ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000572bc : jnp 0x558f08df ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000889c3 : jnp 0x88a12 ; mov rsi, r13 ; call rax
0x0000000000088a42 : jnp 0x88a8e ; call rax
0x000000000008a89c : jnp 0x8a8af ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000c14c3 : jnp 0xaed8f ; inc dword ptr [rcx - 0x77] ; ret
0x00000000000b6dff : jnp 0xb6e0f ; ret
0x00000000000caa46 : jnp 0xcaa5a ; xchg eax, esp ; ret 0xb60f
0x00000000000d2b69 : jnp 0xd2bd4 ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x00000000000d63cb : jnp 0xd6437 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000e0a16 : jnp 0xe0a2a ; xchg eax, esp ; ret 0xb60f
0x00000000000fe341 : jnp 0xfe346 ; or eax, dword ptr [rax] ; pop rbx ; ret
0x000000000005dfbc : jnp 0xffffffff894770df ; adc dword ptr [rax - 0x77], ecx ; ret 0xc148
0x00000000001124f7 : jns 0x112568 ; and r11d, 0x840f2000 ; ret
0x0000000000126482 : jns 0x126492 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000133353 : jns 0x13334a ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000016400b : jns 0x16400e ; ret
0x0000000000164245 : jns 0x164248 ; ret
0x00000000001643ac : jns 0x1643b7 ; ret
0x000000000005a91f : jns 0x5a922 ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000005a91e : jns 0x5a923 ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000076534 : jns 0x7654f ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000c8847 : jns 0xc8849 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c8846 : jns 0xc884a ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c8855 : jns 0xc8857 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c8854 : jns 0xc8858 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c885d : jns 0xc885f ; dec dword ptr [rax + 0x39] ; ret
0x00000000000ce7b7 : jns 0xce7a5 ; lea rax, qword ptr [rdx + rax*8] ; jmp 0xce7ae
0x00000000000d1124 : jns 0xd110f ; mov eax, 1 ; ret
0x00000000000f3b78 : jns 0xf3b86 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000a2f16 : jns 0xffffffffed3a327c ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a2f78 : jns 0xffffffffed3a36de ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a2f98 : jns 0xffffffffed3a37fe ; mov byte ptr [rdi + 0xc], ch ; ret
0x0000000000121733 : jo 0x121799 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000134b3c : jo 0x134aee ; or byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001373c5 : jo 0x1373cc ; add byte ptr [rax], al ; jmp rax
0x00000000001373f6 : jo 0x1373fd ; add byte ptr [rax], al ; jmp rax
0x0000000000029216 : jo 0x2922e ; mov dh, 0x50 ; dec dword ptr [rcx - 0x7d] ; ret
0x0000000000030807 : jo 0x30858 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000030806 : jo 0x30859 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000004509d : jo 0x450a8 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004c008 : jo 0x4bf8f ; ret 0x453c
0x000000000005502a : jo 0x55017 ; ret 0xffef
0x0000000000074fbb : jo 0x74fd6 ; mov qword ptr [rax + 0x40], rcx ; mov qword ptr [rax], rdx ; ret
0x0000000000075c6e : jo 0x75cb7 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000007d038 : jo 0x7d089 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d083 : jo 0x7d0d4 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008572d : jo 0x85740 ; add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x85701 ; ret
0x000000000008c60f : jo 0x8c660 ; add eax, dword ptr [rbp] ; mov rdx, rax ; jmp 0x8c63a
0x00000000000a5109 : jo 0xa516f ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a53de : jo 0xa5444 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a55da : jo 0xa563c ; pop rbp ; pop r12 ; ret
0x00000000000b86be : jo 0xb86cf ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000df1f0 : jo 0xdf1f5 ; ret 0xc083
0x00000000000eb0c8 : jo 0xeb0de ; adc dword ptr [rdi + 0x78], edi ; ret
0x00000000000eba3d : jo 0xeba56 ; adc dword ptr [rdi + 0xf8], edi ; ret
0x00000000000f799d : jo 0xf79af ; test sil, 1 ; jne 0xf79c8 ; ret
0x0000000000107925 : jp 0x10797c ; mov rsi, rdx ; call rax
0x0000000000123c33 : jp 0x123c93 ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000002f31c : jp 0x2f35f ; jbe 0x2f340 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000036eba : jp 0x36ed0 ; jne 0x36ed0 ; addsd xmm0, xmm0 ; ret
0x00000000000371e6 : jp 0x371f8 ; jne 0x371f8 ; addss xmm0, xmm0 ; ret
0x0000000000042a04 : jp 0x42a1e ; add byte ptr [rax + 0x63], cl ; ret 0xc748
0x000000000010753c : jrcxz 0x107578 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000109187 : jrcxz 0x10914c ; cmp r11d, 0xa ; je 0x109198 ; ret
0x000000000010a509 : jrcxz 0x10a4a7 ; stc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000010bb92 : jrcxz 0x10bbe4 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001441ca : jrcxz 0x1441c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001441c9 : jrcxz 0x1441c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000146cfa : jrcxz 0x146cf5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000146cf9 : jrcxz 0x146cf6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000160bbc : jrcxz 0x160bed ; enter -0x73b, 0x77 ; ret
0x000000000007b712 : jrcxz 0x7b764 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c3357 : jrcxz 0xc33d5 ; out 0x5b, al ; pop rbp ; pop r12 ; ret
0x00000000000d5d20 : jrcxz 0xd5d33 ; je 0xd5cb4 ; pop rbx ; ret
0x00000000001086a8 : js 0x108722 ; call 0x1071e8
0x0000000000119210 : js 0x119228 ; mov rax, rdx ; movsxd rdx, esi ; ret
0x000000000012c7d8 : js 0x12c7d8 ; push qword ptr [rbx + rdi*2 - 0x7d] ; ret 0x3901
0x0000000000134a37 : js 0x134a48 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000024587 : js 0x24592 ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x000000000002459e : js 0x245a9 ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x000000000002972c : js 0x296b9 ; ret 0x8348
0x000000000002dea7 : js 0x2deb2 ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x000000000002debe : js 0x2dec9 ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x0000000000030435 : js 0x303c1 ; loopne 0x30448 ; movzx eax, ax ; ret
0x0000000000030475 : js 0x30401 ; loopne 0x30482 ; movzx eax, ax ; ret
0x0000000000030515 : js 0x304a1 ; loopne 0x30524 ; movzx eax, ax ; ret
0x00000000000305f5 : js 0x3057e ; loopne 0x305fe ; ret
0x000000000003068e : js 0x30617 ; loopne 0x30697 ; ret
0x00000000000306ae : js 0x3063a ; loopne 0x306c1 ; movzx eax, ax ; ret
0x00000000000306ee : js 0x3067a ; loopne 0x306fb ; movzx eax, ax ; ret
0x000000000003078e : js 0x3071a ; loopne 0x3079d ; movzx eax, ax ; ret
0x0000000000030817 : js 0x30868 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000030816 : js 0x30869 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000035d79 : js 0x35d84 ; jmp 0x35c37
0x000000000003a458 : js 0x3a47c ; call rdx
0x00000000000469fa : js 0x469ff ; ret 0x5e9
0x0000000000047395 : js 0x4739e ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x0000000000067e02 : js 0x67e15 ; add byte ptr [rbx - 0x7af09608], al ; ret
0x0000000000078b51 : js 0x78b5a ; ret
0x000000000008980a : js 0x89805 ; ret 0
0x000000000008a9ef : js 0x8a9ea ; ret 0
0x000000000008aa3f : js 0x8aa3a ; ret 0
0x000000000008aa8f : js 0x8aa8a ; ret 0
0x000000000008aadf : js 0x8aada ; ret 0
0x000000000008abdc : js 0x8abef ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000ca25b : js 0xca262 ; ret
0x00000000000d95f0 : js 0xd9603 ; add al, 0x75 ; mov ebx, 0xf708588b ; ret
0x00000000000eafb9 : js 0xeafd9 ; cmp rbx, rax ; pop rbx ; setl al ; ret
0x00000000000eb078 : js 0xeb08e ; adc dword ptr [rsi + 0x70], edi ; ret
0x00000000000f27d3 : js 0xf2790 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f4eb6 : js 0xf4ec9 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000fa6a2 : js 0xfa62f ; ret 0xe8c1
0x00000000000fa6a1 : js 0xfa630 ; ret 0xe8c1
0x00000000000fefd8 : js 0xfef64 ; loopne 0xfefeb ; movzx eax, ax ; ret
0x00000000000ff108 : js 0xff091 ; loopne 0xff111 ; ret
0x00000000000ff198 : js 0xff124 ; loopne 0xff1a5 ; movzx eax, ax ; ret
0x00000000000ff498 : js 0xff424 ; loopne 0xff4a7 ; movzx eax, ax ; ret
0x00000000000ff9a9 : js 0xff935 ; loopne 0xff9bc ; movzx eax, ax ; ret
0x00000000000ffac9 : js 0xffa52 ; loopne 0xffad2 ; ret
0x00000000000ffb49 : js 0xffad5 ; loopne 0xffb56 ; movzx eax, ax ; ret
0x00000000000ffe09 : js 0xffd95 ; loopne 0xffe18 ; movzx eax, ax ; ret
0x00000000000a2eb8 : js 0xffffffffed3a311e ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a2ee6 : js 0xffffffffed3a334c ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a2f38 : js 0xffffffffed3a379e ; mov byte ptr [rdi + 9], ch ; ret
0x000000000015a8b5 : lahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6610
0x00000000000898ca : lahf ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000085b8d : lahf ; fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000015ce2d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004f6cd : lahf ; ret
0x00000000000808cb : lahf ; ret 0x3949
0x0000000000053e51 : lahf ; ret 0x87e
0x0000000000054b38 : lahf ; ret 0x8f0f
0x0000000000063176 : lahf ; ret 0xd329
0x0000000000062ed5 : lahf ; ret 0xd629
0x0000000000061145 : lahf ; ret 0xd729
0x00000000000809e2 : lahf ; ret 0xe4e9
0x000000000015d4bd : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000f703b : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000111fa4 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000060d3a : lcall ptr [rbp + 0x74] ; ret 0x8440
0x00000000000c32c7 : lcall ptr [rbx + 0x5d] ; lea rax, qword ptr [rax + rdx*8] ; ret
0x000000000011f6d4 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007b92d : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000003a0e2 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ae4b3 : lcall ptr [rbx + 0x5d] ; pop r14 ; ret
0x0000000000073728 : lcall ptr [rbx + 0x5d] ; ret
0x000000000003acfb : lcall ptr [rbx - 0x7b] ; ror byte ptr [rdi], 0x48 ; ret 0xfc3
0x0000000000144856 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000075b0f : lea eax, dword ptr [r8 - 1] ; ret
0x0000000000118b6f : lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000d1b87 : lea eax, dword ptr [rax + rax + 0x63480000] ; ret 0xc790
0x00000000000b4f08 : lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000b722a : lea eax, dword ptr [rax + rax*4] ; pop r15 ; ret
0x00000000000e3c1b : lea eax, dword ptr [rax + rax*8 + 5] ; ret
0x00000000000940d4 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x00000000000940e4 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x00000000000945c4 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x00000000000940b4 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000000c32cb : lea eax, dword ptr [rax + rdx*8] ; ret
0x0000000000075b10 : lea eax, dword ptr [rax - 1] ; ret
0x000000000012364f : lea eax, dword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000cd071 : lea eax, dword ptr [rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ccf71 : lea eax, dword ptr [rbx + 8] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000118d25 : lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x0000000000118b70 : lea eax, dword ptr [rcx + rax + 2] ; pop rbx ; ret
0x0000000000099a0d : lea eax, dword ptr [rcx + rsi] ; ret
0x00000000000a3654 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000008a55d : lea eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000a056c : lea eax, dword ptr [rdi + 0x10] ; ret
0x00000000000a0581 : lea eax, dword ptr [rdi + 0x11] ; ret
0x00000000000a059f : lea eax, dword ptr [rdi + 0x12] ; ret
0x00000000000a05bf : lea eax, dword ptr [rdi + 0x13] ; ret
0x00000000000a05e2 : lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000000a0601 : lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000000a0621 : lea eax, dword ptr [rdi + 0x16] ; ret
0x00000000000a0641 : lea eax, dword ptr [rdi + 0x17] ; ret
0x00000000000a0664 : lea eax, dword ptr [rdi + 0x18] ; ret
0x00000000000a0689 : lea eax, dword ptr [rdi + 0x19] ; ret
0x00000000000a06a7 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x00000000000a06c7 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x00000000000a06e3 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x00000000000a0703 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x00000000000a0723 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x00000000000a0743 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x00000000000a15b3 : lea eax, dword ptr [rdi + 0x20] ; ret
0x00000000000a1829 : lea eax, dword ptr [rdi + 0x40] ; ret
0x00000000000a04bd : lea eax, dword ptr [rdi + 0xa] ; ret
0x00000000000a04dd : lea eax, dword ptr [rdi + 0xb] ; ret
0x00000000000a04ff : lea eax, dword ptr [rdi + 0xc] ; ret
0x00000000000a051f : lea eax, dword ptr [rdi + 0xd] ; ret
0x00000000000a053f : lea eax, dword ptr [rdi + 0xe] ; ret
0x00000000000a0559 : lea eax, dword ptr [rdi + 0xf] ; ret
0x00000000000a0407 : lea eax, dword ptr [rdi + 1] ; ret
0x00000000000a041a : lea eax, dword ptr [rdi + 2] ; ret
0x00000000000a0425 : lea eax, dword ptr [rdi + 3] ; ret
0x00000000000a0438 : lea eax, dword ptr [rdi + 4] ; ret
0x00000000000a044d : lea eax, dword ptr [rdi + 5] ; ret
0x00000000000a046b : lea eax, dword ptr [rdi + 6] ; ret
0x00000000000a0477 : lea eax, dword ptr [rdi + 7] ; ret
0x00000000000a048a : lea eax, dword ptr [rdi + 8] ; ret
0x00000000001181d4 : lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000a049f : lea eax, dword ptr [rdi + 9] ; ret
0x0000000000094109 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x0000000000094119 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x0000000000094013 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000118365 : lea eax, dword ptr [rdi + rax + 2] ; cmp rdx, rax ; sbb eax, eax ; ret
0x000000000015f675 : lea eax, dword ptr [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000090a69 : lea eax, dword ptr [rdi + rax - 1] ; ret
0x0000000000099420 : lea eax, dword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000009964b : lea eax, dword ptr [rdi + rax] ; ret
0x0000000000119027 : lea eax, dword ptr [rdi + rsi + 8] ; ret
0x0000000000030174 : lea eax, dword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000099909 : lea eax, dword ptr [rdi + rsi] ; ret
0x00000000000b635e : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000b64c1 : lea eax, dword ptr [rdi - 0xc] ; ret
0x00000000000b64e1 : lea eax, dword ptr [rdi - 4] ; ret
0x00000000000b64d1 : lea eax, dword ptr [rdi - 8] ; ret
0x00000000000a03f3 : lea eax, dword ptr [rdi] ; ret
0x0000000000151b9d : lea eax, dword ptr [rdx + 0xa] ; ret
0x0000000000151bbd : lea eax, dword ptr [rdx + 0xb] ; ret
0x0000000000151bdf : lea eax, dword ptr [rdx + 0xc] ; ret
0x0000000000151bff : lea eax, dword ptr [rdx + 0xd] ; ret
0x0000000000151c1f : lea eax, dword ptr [rdx + 0xe] ; ret
0x0000000000151aaf : lea eax, dword ptr [rdx + 0xf] ; ret
0x0000000000151ad7 : lea eax, dword ptr [rdx + 1] ; ret
0x0000000000151aed : lea eax, dword ptr [rdx + 2] ; ret
0x0000000000151b05 : lea eax, dword ptr [rdx + 3] ; ret
0x0000000000151b1b : lea eax, dword ptr [rdx + 4] ; ret
0x0000000000151b2d : lea eax, dword ptr [rdx + 5] ; ret
0x0000000000151b4b : lea eax, dword ptr [rdx + 6] ; ret
0x0000000000151a57 : lea eax, dword ptr [rdx + 7] ; ret
0x0000000000151b5d : lea eax, dword ptr [rdx + 8] ; ret
0x0000000000151b7d : lea eax, dword ptr [rdx + 9] ; ret
0x00000000000ce7ba : lea eax, dword ptr [rdx + rax*8] ; jmp 0xce7ab
0x000000000015a962 : lea eax, dword ptr [rdx + rcx] ; sub rax, rdi ; ret
0x0000000000075afe : lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000a4103 : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000086db1 : lea eax, dword ptr [rdx - 0x10] ; ret
0x0000000000086d9c : lea eax, dword ptr [rdx - 8] ; ret
0x0000000000151ac5 : lea eax, dword ptr [rdx] ; ret
0x00000000000a4cc3 : lea eax, dword ptr [rip + 0x10287] ; cmove rax, rdx ; ret
0x0000000000089763 : lea eax, dword ptr [rip + 0x103a7] ; cmove rax, rdx ; ret
0x0000000000089793 : lea eax, dword ptr [rip + 0x10517] ; cmove rax, rdx ; ret
0x00000000000a4723 : lea eax, dword ptr [rip + 0x10b57] ; cmove rax, rdx ; ret
0x00000000000a4933 : lea eax, dword ptr [rip + 0x11617] ; cmove rax, rdx ; ret
0x00000000000a4aa3 : lea eax, dword ptr [rip + 0x11737] ; cmove rax, rdx ; ret
0x00000000000a4747 : lea eax, dword ptr [rip + 0x118d3] ; cmovne rax, rdx ; ret
0x00000000000a46f3 : lea eax, dword ptr [rip + 0x11957] ; cmove rax, rdx ; ret
0x00000000000a4823 : lea eax, dword ptr [rip + 0x11f97] ; cmove rax, rdx ; ret
0x000000000002f331 : lea eax, dword ptr [rip + 0x154fe8] ; ret
0x0000000000024315 : lea eax, dword ptr [rip + 0x15fb50] ; ret
0x0000000000024325 : lea eax, dword ptr [rip + 0x161989] ; ret
0x000000000008a55a : lea eax, dword ptr [rip + 0x18de0] ; cmove rax, rdx ; ret
0x000000000008ac27 : lea eax, dword ptr [rip + 0x18ed3] ; cmove rax, rdx ; ret
0x000000000008a8e7 : lea eax, dword ptr [rip + 0x191f3] ; cmove rax, rdx ; ret
0x000000000008a777 : lea eax, dword ptr [rip + 0x19383] ; cmove rax, rdx ; ret
0x000000000008a7f2 : lea eax, dword ptr [rip + 0x19658] ; cmovne rax, rdx ; ret
0x0000000000089b87 : lea eax, dword ptr [rip + 0x19db3] ; cmovne rax, rdx ; ret
0x00000000000898c7 : lea eax, dword ptr [rip + 0x19fc3] ; cmovne rax, rdx ; ret
0x0000000000089357 : lea eax, dword ptr [rip + 0x1a483] ; cmovne rax, rdx ; ret
0x0000000000090b33 : lea eax, dword ptr [rip + 0x3817] ; cmove rax, rdx ; ret
0x000000000010a562 : lea eax, dword ptr [rip + 0x556c8] ; cmove rax, rdx ; ret
0x000000000010a492 : lea eax, dword ptr [rip + 0x557b8] ; cmove rax, rdx ; ret
0x000000000010a3c2 : lea eax, dword ptr [rip + 0x55888] ; cmove rax, rdx ; ret
0x000000000010a638 : lea eax, dword ptr [rip + 0x55a92] ; cmove rax, rdx ; ret
0x000000000010a5b6 : lea eax, dword ptr [rip + 0x5a3f4] ; cmove rax, rdx ; ret
0x000000000010a4e6 : lea eax, dword ptr [rip + 0x5a4e4] ; cmove rax, rdx ; ret
0x000000000010a416 : lea eax, dword ptr [rip + 0x5a5b4] ; cmove rax, rdx ; ret
0x000000000010a67e : lea eax, dword ptr [rip + 0x5a8dc] ; cmove rax, rdx ; ret
0x000000000008c053 : lea eax, dword ptr [rip + 0x80e7] ; cmove rax, rdx ; ret
0x00000000000fd693 : lea eax, dword ptr [rip + 0x84ea7] ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000f96f9 : lea eax, dword ptr [rip + 0x8c772] ; pop rbx ; ret
0x000000000008a643 : lea eax, dword ptr [rip + 0x97c7] ; cmove rax, rdx ; ret
0x0000000000121083 : lea eax, dword ptr [rip + 0xa19f7] ; ret
0x00000000000f6fab : lea eax, dword ptr [rip + 0xca26f] ; pop rbp ; pop r12 ; ret
0x000000000008abb2 : lea eax, dword ptr [rip + 0xd50a8] ; cmove rax, rdx ; ret
0x000000000008a872 : lea eax, dword ptr [rip + 0xd53c8] ; cmove rax, rdx ; ret
0x000000000008a702 : lea eax, dword ptr [rip + 0xd5558] ; cmove rax, rdx ; ret
0x000000000008c083 : lea eax, dword ptr [rip + 0xd577] ; cmove rax, rdx ; ret
0x000000000008a7d8 : lea eax, dword ptr [rip + 0xd5902] ; cmove rax, rdx ; ret
0x000000000008ac06 : lea eax, dword ptr [rip + 0xd9dd4] ; cmove rax, rdx ; ret
0x000000000008a8c6 : lea eax, dword ptr [rip + 0xda0f4] ; cmove rax, rdx ; ret
0x000000000008a756 : lea eax, dword ptr [rip + 0xda284] ; cmove rax, rdx ; ret
0x000000000008a81e : lea eax, dword ptr [rip + 0xda74c] ; cmove rax, rdx ; ret
0x00000000000898a3 : lea eax, dword ptr [rip + 0xff67] ; cmove rax, rdx ; ret
0x000000000010a652 : lea eax, dword ptr [rip - 0x66818] ; cmovne rax, rdx ; ret
0x000000000010a437 : lea eax, dword ptr [rip - 0x6694d] ; cmove rax, rdx ; ret
0x000000000010a507 : lea eax, dword ptr [rip - 0x66a1d] ; cmove rax, rdx ; ret
0x000000000010a5d7 : lea eax, dword ptr [rip - 0x66b0d] ; cmove rax, rdx ; ret
0x00000000000ebbb7 : lea eax, dword ptr [rip - 0xbd] ; cmove rax, rdx ; ret
0x00000000000d2d10 : lea eax, dword ptr [rsi + 1] ; ret
0x000000000002c82d : lea eax, dword ptr [rsp + 0xb0] ; call r14
0x00000000000a5056 : lea ecx, dword ptr [rax + 1] ; lea r9, qword ptr [rsp + 0x28] ; call rbx
0x00000000000a51b6 : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x18] ; call rbx
0x00000000000a5586 : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000782ab : lea ecx, dword ptr [rbp - 0x40] ; call r12
0x000000000013cf00 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000009ec6e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000fc2ae : lea ecx, dword ptr [rdi + rdi] ; shr eax, cl ; and eax, 3 ; ret
0x00000000000c4f6b : lea ecx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000c5028 : lea ecx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000014f3a6 : lea ecx, dword ptr [rdx + 0x10] ; jne 0x14f8f9 ; ret
0x000000000014f6a4 : lea ecx, dword ptr [rdx + 0xa] ; jne 0x14f8f9 ; ret
0x000000000014f6c4 : lea ecx, dword ptr [rdx + 0xb] ; jne 0x14f8f9 ; ret
0x000000000014f6e4 : lea ecx, dword ptr [rdx + 0xc] ; jne 0x14f8f9 ; ret
0x000000000014f706 : lea ecx, dword ptr [rdx + 0xd] ; jne 0x14f8f9 ; ret
0x000000000014f726 : lea ecx, dword ptr [rdx + 0xe] ; jne 0x14f8f9 ; ret
0x000000000014f746 : lea ecx, dword ptr [rdx + 0xf] ; jne 0x14f8f9 ; ret
0x00000000000d1892 : lea ecx, dword ptr [rdx + 1] ; jmp 0xd185d
0x000000000014f59c : lea ecx, dword ptr [rdx + 1] ; jne 0x14f8f9 ; ret
0x000000000014f5be : lea ecx, dword ptr [rdx + 2] ; jne 0x14f8f9 ; ret
0x000000000014f5e4 : lea ecx, dword ptr [rdx + 3] ; jne 0x14f8f9 ; ret
0x000000000014f5fc : lea ecx, dword ptr [rdx + 4] ; jne 0x14f8f9 ; ret
0x000000000007384a : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000014f622 : lea ecx, dword ptr [rdx + 5] ; jne 0x14f8f9 ; ret
0x000000000014f644 : lea ecx, dword ptr [rdx + 6] ; jne 0x14f8f9 ; ret
0x000000000014f662 : lea ecx, dword ptr [rdx + 7] ; jne 0x14f8f9 ; ret
0x000000000014f33e : lea ecx, dword ptr [rdx + 8] ; jne 0x14f8f9 ; ret
0x000000000014f684 : lea ecx, dword ptr [rdx + 9] ; jne 0x14f8f9 ; ret
0x00000000000487c4 : lea ecx, dword ptr [rdx] ; jmp 0x48816
0x000000000004a014 : lea ecx, dword ptr [rdx] ; jmp 0x4a066
0x00000000000ff926 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000078097 : lea ecx, dword ptr [rsp + 0x10] ; call rbx
0x0000000000077fa2 : lea ecx, dword ptr [rsp + 0x18] ; call rbx
0x0000000000121c69 : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000121e7c : lea ecx, dword ptr [rsp + 0x20] ; call qword ptr [rax]
0x00000000000a558a : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000000a535d : lea ecx, dword ptr [rsp + 0x28] ; call r12
0x00000000000a505a : lea ecx, dword ptr [rsp + 0x28] ; call rbx
0x00000000000b211e : lea ecx, dword ptr [rsp + 0x30] ; call r12
0x00000000000a57a4 : lea ecx, dword ptr [rsp + 0x30] ; call rbx
0x000000000012c403 : lea ecx, dword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000012239a : lea ecx, dword ptr [rsp + 0x40] ; call qword ptr [rax]
0x00000000001086a7 : lea edi, dword ptr [rax + 0x70] ; call 0x1071e9
0x000000000002459d : lea edi, dword ptr [rax + 1] ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x0000000000024586 : lea edi, dword ptr [rax + 1] ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x0000000000127ea2 : lea edi, dword ptr [rbp + 0x10] ; call rax
0x000000000012a886 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x0000000000129dd6 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x0000000000127299 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x000000000009f7fd : lea edi, dword ptr [rdi + 0x10] ; jne 0x9fed9 ; ret
0x00000000000a0f21 : lea edi, dword ptr [rdi + 0x10] ; jne 0xa1729 ; ret
0x000000000009f820 : lea edi, dword ptr [rdi + 0x11] ; jne 0x9fed9 ; ret
0x00000000000a0f44 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa1729 ; ret
0x000000000009f845 : lea edi, dword ptr [rdi + 0x12] ; jne 0x9fed9 ; ret
0x00000000000a0f69 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa1729 ; ret
0x000000000009f863 : lea edi, dword ptr [rdi + 0x13] ; jne 0x9fed9 ; ret
0x00000000000a0f97 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa1729 ; ret
0x000000000009f883 : lea edi, dword ptr [rdi + 0x14] ; jne 0x9fed9 ; ret
0x00000000000a0fc7 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa1729 ; ret
0x000000000009f8a6 : lea edi, dword ptr [rdi + 0x15] ; jne 0x9fed9 ; ret
0x00000000000a0ffa : lea edi, dword ptr [rdi + 0x15] ; jne 0xa1729 ; ret
0x000000000009f8c5 : lea edi, dword ptr [rdi + 0x16] ; jne 0x9fed9 ; ret
0x00000000000a1029 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa1729 ; ret
0x000000000009f8e5 : lea edi, dword ptr [rdi + 0x17] ; jne 0x9fed9 ; ret
0x00000000000a1059 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa1729 ; ret
0x000000000009f905 : lea edi, dword ptr [rdi + 0x18] ; jne 0x9fed9 ; ret
0x00000000000a1089 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa1729 ; ret
0x000000000009f928 : lea edi, dword ptr [rdi + 0x19] ; jne 0x9fed9 ; ret
0x00000000000a10bc : lea edi, dword ptr [rdi + 0x19] ; jne 0xa1729 ; ret
0x000000000009f95d : lea edi, dword ptr [rdi + 0x1a] ; jne 0x9fed9 ; ret
0x00000000000a10f1 : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa1729 ; ret
0x000000000009f98b : lea edi, dword ptr [rdi + 0x1b] ; jne 0x9fed9 ; ret
0x00000000000a111f : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa1729 ; ret
0x000000000009f9bb : lea edi, dword ptr [rdi + 0x1c] ; jne 0x9fed9 ; ret
0x00000000000a114f : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa1729 ; ret
0x000000000009f9e7 : lea edi, dword ptr [rdi + 0x1d] ; jne 0x9fed9 ; ret
0x00000000000a117b : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa1729 ; ret
0x000000000009fa17 : lea edi, dword ptr [rdi + 0x1e] ; jne 0x9fed9 ; ret
0x00000000000a11ab : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa1729 ; ret
0x000000000009fa47 : lea edi, dword ptr [rdi + 0x1f] ; jne 0x9fed9 ; ret
0x00000000000a11db : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa1729 ; ret
0x000000000009fa77 : lea edi, dword ptr [rdi + 0x20] ; jne 0x9fed9 ; ret
0x00000000000a120b : lea edi, dword ptr [rdi + 0x20] ; jne 0xa1729 ; ret
0x000000000009f743 : lea edi, dword ptr [rdi + 0xa] ; jne 0x9fed9 ; ret
0x00000000000a0e27 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa1729 ; ret
0x000000000009f761 : lea edi, dword ptr [rdi + 0xb] ; jne 0x9fed9 ; ret
0x00000000000a0e55 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa1729 ; ret
0x000000000009f781 : lea edi, dword ptr [rdi + 0xc] ; jne 0x9fed9 ; ret
0x00000000000a0e75 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa1729 ; ret
0x000000000009f7a3 : lea edi, dword ptr [rdi + 0xd] ; jne 0x9fed9 ; ret
0x00000000000a0e97 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa1729 ; ret
0x000000000009f7c3 : lea edi, dword ptr [rdi + 0xe] ; jne 0x9fed9 ; ret
0x00000000000a0ec7 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa1729 ; ret
0x000000000009f7e3 : lea edi, dword ptr [rdi + 0xf] ; jne 0x9fed9 ; ret
0x00000000000a0ef7 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa1729 ; ret
0x000000000009f617 : lea edi, dword ptr [rdi + 1] ; jne 0x9fed9 ; ret
0x00000000000a0cfa : lea edi, dword ptr [rdi + 1] ; jne 0xa1729 ; ret
0x000000000009f63b : lea edi, dword ptr [rdi + 2] ; jne 0x9fed9 ; ret
0x00000000000a0d1f : lea edi, dword ptr [rdi + 2] ; jne 0xa1729 ; ret
0x000000000009f65e : lea edi, dword ptr [rdi + 3] ; jne 0x9fed9 ; ret
0x00000000000a0d42 : lea edi, dword ptr [rdi + 3] ; jne 0xa1729 ; ret
0x000000000009f679 : lea edi, dword ptr [rdi + 4] ; jne 0x9fed9 ; ret
0x00000000000a0d5d : lea edi, dword ptr [rdi + 4] ; jne 0xa1729 ; ret
0x000000000009f69c : lea edi, dword ptr [rdi + 5] ; jne 0x9fed9 ; ret
0x00000000000a0d80 : lea edi, dword ptr [rdi + 5] ; jne 0xa1729 ; ret
0x000000000009f6c1 : lea edi, dword ptr [rdi + 6] ; jne 0x9fed9 ; ret
0x00000000000a0da5 : lea edi, dword ptr [rdi + 6] ; jne 0xa1729 ; ret
0x000000000009f6df : lea edi, dword ptr [rdi + 7] ; jne 0x9fed9 ; ret
0x00000000000a0dc3 : lea edi, dword ptr [rdi + 7] ; jne 0xa1729 ; ret
0x000000000009f6fb : lea edi, dword ptr [rdi + 8] ; jne 0x9fed9 ; ret
0x00000000000a0ddf : lea edi, dword ptr [rdi + 8] ; jne 0xa1729 ; ret
0x000000000009f71e : lea edi, dword ptr [rdi + 9] ; jne 0x9fed9 ; ret
0x00000000000a0e02 : lea edi, dword ptr [rdi + 9] ; jne 0xa1729 ; ret
0x0000000000084d4c : lea edi, dword ptr [rip + 0x10466e] ; call 0x80f88
0x000000000002411e : lea edi, dword ptr [rip + 0x163a94] ; call 0x30358
0x00000000000f5020 : lea edi, dword ptr [rip + 0x90f04] ; call 0x71289
0x0000000000109cbe : lea edi, dword ptr [rip - 0x184] ; call rax
0x000000000007fec2 : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000079c62 : lea edx, dword ptr [rax + 1] ; jmp 0x79c20
0x0000000000038a7d : lea edx, dword ptr [rax + 1] ; mov dword ptr [rip + 0x185586], edx ; ret
0x0000000000075c34 : lea edx, dword ptr [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000063236 : lea edx, dword ptr [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000114785 : lea edx, dword ptr [rax - 1] ; cmp rdx, -3 ; jbe 0x114799 ; ret
0x00000000000b72c0 : lea edx, dword ptr [rbx + 1] ; pop rbx ; mov rax, rdx ; ret
0x000000000013cfd4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000108600 : lea edx, dword ptr [rcx + 0x70] ; call rax
0x00000000000c32c5 : lea edx, dword ptr [rdi + rdi*8] ; pop rbx ; pop rbp ; lea rax, qword ptr [rax + rdx*8] ; ret
0x0000000000090f46 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x00000000000ff6ce : lea edx, dword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000013d3d8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000000a5fc2 : lea edx, dword ptr [rip + 0x10538] ; cmovne rax, rdx ; ret
0x0000000000089237 : lea edx, dword ptr [rip + 0x10c93] ; cmovne rax, rdx ; ret
0x00000000000897c7 : lea edx, dword ptr [rip + 0x12323] ; cmovne rax, rdx ; ret
0x000000000012bc4d : lea edx, dword ptr [rip + 0x2f5d] ; call qword ptr [rax]
0x000000000010a589 : lea edx, dword ptr [rip + 0x37e51] ; cmovne rax, rdx ; ret
0x000000000010a3e9 : lea edx, dword ptr [rip + 0x38011] ; cmovne rax, rdx ; ret
0x000000000010a4b9 : lea edx, dword ptr [rip + 0x3aa31] ; cmovne rax, rdx ; ret
0x0000000000123211 : lea edx, dword ptr [rip + 0x9a7a9] ; jmp qword ptr [rdx + rax*8]
0x00000000000892d0 : lea edx, dword ptr [rip + 0xb119a] ; cmovne rax, rdx ; ret
0x000000000008982a : lea edx, dword ptr [rip + 0xb1eb0] ; cmovne rax, rdx ; ret
0x000000000008abd9 : lea edx, dword ptr [rip + 0xb7831] ; cmovne rax, rdx ; ret
0x000000000008a899 : lea edx, dword ptr [rip + 0xb7b51] ; cmovne rax, rdx ; ret
0x000000000008a729 : lea edx, dword ptr [rip + 0xba7d1] ; cmovne rax, rdx ; ret
0x000000000008aaaf : lea edx, dword ptr [rip + 0xbcf8b] ; cmovne rax, rdx ; ret
0x000000000008aa0f : lea edx, dword ptr [rip + 0xbd00b] ; cmovne rax, rdx ; ret
0x000000000008aaff : lea edx, dword ptr [rip + 0xbf09b] ; cmovne rax, rdx ; ret
0x000000000008aa5f : lea edx, dword ptr [rip + 0xbf11b] ; cmovne rax, rdx ; ret
0x00000000000a4d0c : lea edx, dword ptr [rip + 0xc1e4e] ; cmovne rax, rdx ; ret
0x0000000000089327 : lea edx, dword ptr [rip + 0xc2dc3] ; cmovne rax, rdx ; ret
0x0000000000089867 : lea edx, dword ptr [rip + 0xc4033] ; cmovne rax, rdx ; ret
0x000000000008a977 : lea edx, dword ptr [rip + 0xc5aa3] ; cmovne rax, rdx ; ret
0x000000000008a9b7 : lea edx, dword ptr [rip + 0xc7273] ; cmovne rax, rdx ; ret
0x000000000008a68c : lea edx, dword ptr [rip + 0xdad5e] ; cmovne rax, rdx ; ret
0x0000000000089283 : lea edx, dword ptr [rip + 0xdbe47] ; cmovne rax, rdx ; ret
0x000000000005a577 : lea edx, dword ptr [rip - 0x47b] ; add rax, rdx ; jmp rax
0x00000000000f428a : lea edx, dword ptr [rsi + 1] ; jne 0xf4265 ; ret
0x0000000000122ae9 : lea esi, dword ptr [rbx + 8] ; mov rdi, rbp ; call 0x12ed28
0x0000000000123004 : lea esi, dword ptr [rbx + 8] ; mov rdi, rbp ; call 0x12f228
0x0000000000074414 : lea esi, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000006f29d : lea esi, dword ptr [rip + 0x10fdfd] ; jmp 0x6f26f
0x00000000000450cf : lea esi, dword ptr [rip + 0x1bb] ; call rax
0x0000000000135933 : lea esi, dword ptr [rip + 0x8d607] ; call 0xf1be8
0x000000000005d998 : lea esi, dword ptr [rip - 0x13bb] ; add rax, rsi ; jmp rax
0x0000000000051e6b : lea esi, dword ptr [rip - 0x148e] ; add rax, rsi ; jmp rax
0x00000000000525f2 : lea esi, dword ptr [rip - 0x1c15] ; add rax, rsi ; jmp rax
0x000000000005e5b1 : lea esi, dword ptr [rip - 0x1fd4] ; add rax, rsi ; jmp rax
0x0000000000126747 : lea esi, dword ptr [rsi + 9] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000a3ab8 : lea esi, dword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000e5def : lea esi, dword ptr [rsi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0x000000000012ee18 : lea esi, dword ptr [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000123b80 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x0000000000031b8a : lea esp, dword ptr [rax + 1] ; mov rdi, r12 ; call qword ptr [rip + 0x18c242]
0x00000000000c6d1d : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000039c86 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000039124 : lea esp, dword ptr [rdi + rax] ; mov rdi, r12 ; call rbx
0x0000000000090f45 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000039123 : lea r12, qword ptr [rdi + rax] ; mov rdi, r12 ; call rbx
0x000000000002c82c : lea r8, qword ptr [rsp + 0xb0] ; call r14
0x000000000013ceff : lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000000782aa : lea r9, qword ptr [rbp - 0x40] ; call r12
0x00000000000487c3 : lea r9, qword ptr [rdx] ; jmp 0x48817
0x000000000004a013 : lea r9, qword ptr [rdx] ; jmp 0x4a067
0x0000000000078096 : lea r9, qword ptr [rsp + 0x10] ; call rbx
0x0000000000077fa1 : lea r9, qword ptr [rsp + 0x18] ; call rbx
0x0000000000121c68 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000121e7b : lea r9, qword ptr [rsp + 0x20] ; call qword ptr [rax]
0x00000000000a5589 : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000a535c : lea r9, qword ptr [rsp + 0x28] ; call r12
0x00000000000a5059 : lea r9, qword ptr [rsp + 0x28] ; call rbx
0x00000000000b211d : lea r9, qword ptr [rsp + 0x30] ; call r12
0x00000000000a57a3 : lea r9, qword ptr [rsp + 0x30] ; call rbx
0x000000000012c402 : lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000122399 : lea r9, qword ptr [rsp + 0x40] ; call qword ptr [rax]
0x00000000000b7229 : lea rax, qword ptr [r8 + rax*4] ; pop r15 ; ret
0x00000000000c9f51 : lea rax, qword ptr [rax + rax - 1] ; ret
0x00000000000940d3 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000940e3 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000945c3 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x00000000000940b3 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000c32ca : lea rax, qword ptr [rax + rdx*8] ; ret
0x000000000012364e : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000cd070 : lea rax, qword ptr [rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ccf70 : lea rax, qword ptr [rbx + 8] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000099a0c : lea rax, qword ptr [rcx + rsi] ; ret
0x00000000000a3653 : lea rax, qword ptr [rcx - 1] ; ret
0x00000000000a056b : lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a0580 : lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a059e : lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a05be : lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a05e1 : lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a0600 : lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a0620 : lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a0640 : lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a0663 : lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a0688 : lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a06a6 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a06c6 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a06e2 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a0702 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a0722 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a0742 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a15b2 : lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a1828 : lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a04bc : lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a04dc : lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a04fe : lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a051e : lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a053e : lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a0558 : lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a0406 : lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a0419 : lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a0424 : lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a0437 : lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a044c : lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a046a : lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a0476 : lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a0489 : lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a049e : lea rax, qword ptr [rdi + 9] ; ret
0x0000000000094108 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000094118 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000094012 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000015f674 : lea rax, qword ptr [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000090a68 : lea rax, qword ptr [rdi + rax - 1] ; ret
0x000000000009964a : lea rax, qword ptr [rdi + rax] ; ret
0x0000000000119026 : lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000030173 : lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000099908 : lea rax, qword ptr [rdi + rsi] ; ret
0x00000000000b635d : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000b64c0 : lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000b64e0 : lea rax, qword ptr [rdi - 4] ; ret
0x00000000000b64d0 : lea rax, qword ptr [rdi - 8] ; ret
0x00000000000a03f2 : lea rax, qword ptr [rdi] ; ret
0x0000000000151b9c : lea rax, qword ptr [rdx + 0xa] ; ret
0x0000000000151bbc : lea rax, qword ptr [rdx + 0xb] ; ret
0x0000000000151bde : lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000151bfe : lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000151c1e : lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000151aae : lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000151ad6 : lea rax, qword ptr [rdx + 1] ; ret
0x0000000000151aec : lea rax, qword ptr [rdx + 2] ; ret
0x0000000000151b04 : lea rax, qword ptr [rdx + 3] ; ret
0x0000000000151b1a : lea rax, qword ptr [rdx + 4] ; ret
0x0000000000151b2c : lea rax, qword ptr [rdx + 5] ; ret
0x0000000000151b4a : lea rax, qword ptr [rdx + 6] ; ret
0x0000000000151a56 : lea rax, qword ptr [rdx + 7] ; ret
0x0000000000151b5c : lea rax, qword ptr [rdx + 8] ; ret
0x0000000000151b7c : lea rax, qword ptr [rdx + 9] ; ret
0x00000000000ce7b9 : lea rax, qword ptr [rdx + rax*8] ; jmp 0xce7ac
0x000000000015a961 : lea rax, qword ptr [rdx + rcx] ; sub rax, rdi ; ret
0x0000000000086db0 : lea rax, qword ptr [rdx - 0x10] ; ret
0x0000000000086d9b : lea rax, qword ptr [rdx - 8] ; ret
0x0000000000151ac4 : lea rax, qword ptr [rdx] ; ret
0x000000000002f330 : lea rax, qword ptr [rip + 0x154fe8] ; ret
0x0000000000024314 : lea rax, qword ptr [rip + 0x15fb50] ; ret
0x0000000000024324 : lea rax, qword ptr [rip + 0x161989] ; ret
0x00000000000f96f8 : lea rax, qword ptr [rip + 0x8c772] ; pop rbx ; ret
0x0000000000121082 : lea rax, qword ptr [rip + 0xa19f7] ; ret
0x00000000000b6499 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x000000000009ec6d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5055 : lea rcx, qword ptr [rax + 1] ; lea r9, qword ptr [rsp + 0x28] ; call rbx
0x00000000000a51b5 : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x18] ; call rbx
0x00000000000a5585 : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000073849 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00000000000ff925 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000127ea1 : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012a885 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000129dd5 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000127298 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x0000000000084d4b : lea rdi, qword ptr [rip + 0x10466e] ; call 0x80f89
0x000000000002411d : lea rdi, qword ptr [rip + 0x163a94] ; call 0x30359
0x0000000000109cbd : lea rdi, qword ptr [rip - 0x184] ; call rax
0x000000000013cfd3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000075c33 : lea rdx, qword ptr [r8 + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000079c61 : lea rdx, qword ptr [rax + 1] ; jmp 0x79c21
0x00000000000b72bf : lea rdx, qword ptr [rbx + 1] ; pop rbx ; mov rax, rdx ; ret
0x00000000001085ff : lea rdx, qword ptr [rcx + 0x70] ; call rax
0x00000000000ff6cd : lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000013d3d7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x000000000012bc4c : lea rdx, qword ptr [rip + 0x2f5d] ; call qword ptr [rax]
0x0000000000123210 : lea rdx, qword ptr [rip + 0x9a7a9] ; jmp qword ptr [rdx + rax*8]
0x00000000000f4289 : lea rdx, qword ptr [rsi + 1] ; jne 0xf4266 ; ret
0x0000000000123b7f : lea rsi, qword ptr [r12 + 8] ; call qword ptr [rax]
0x0000000000122ae8 : lea rsi, qword ptr [rbx + 8] ; mov rdi, rbp ; call 0x12ed29
0x0000000000123003 : lea rsi, qword ptr [rbx + 8] ; mov rdi, rbp ; call 0x12f229
0x000000000006f29c : lea rsi, qword ptr [rip + 0x10fdfd] ; jmp 0x6f270
0x00000000000450ce : lea rsi, qword ptr [rip + 0x1bb] ; call rax
0x0000000000135932 : lea rsi, qword ptr [rip + 0x8d607] ; call 0xf1be9
0x00000000000a3ab7 : lea rsi, qword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000012ee17 : lea rsi, qword ptr [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000012ee04 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00000000000c6d1c : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000cb039 : leave ; add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x000000000015abce : leave ; add rax, rcx ; sub rax, rdi ; ret
0x00000000000d7cc6 : leave ; add rdx, rax ; jmp 0xd7ce8
0x00000000000a3936 : leave ; cmove rax, rdx ; ret
0x00000000000ba47a : leave ; cmp edi, ecx ; je 0xba48e ; ret
0x00000000000f5a58 : leave ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000002d950 : leave ; je 0x2d958 ; call rcx
0x000000000005c8d7 : leave ; jmp rax
0x00000000000908b7 : leave ; jmp rcx
0x0000000000100000 : leave ; jne 0x10000b ; ret
0x000000000010005d : leave ; jne 0x10006b ; ret
0x00000000001045c3 : leave ; jne 0x1045b3 ; ret
0x0000000000108afa : leave ; jne 0x108b0c ; cmp qword ptr [rdi], 0 ; je 0x108b11 ; ret
0x000000000011b02c : leave ; jne 0x11b00f ; ret
0x00000000000906a1 : leave ; jne 0x90693 ; ret
0x0000000000090800 : leave ; jne 0x907f5 ; xor eax, eax ; ret
0x00000000000a3430 : leave ; jne 0xa3423 ; ret
0x00000000000a34e0 : leave ; jne 0xa34d3 ; ret
0x00000000000a37a0 : leave ; jne 0xa3797 ; sub rax, 1 ; ret
0x00000000000a48e5 : leave ; jne 0xa48b3 ; ret
0x00000000000a4aec : leave ; jne 0xa4ae3 ; ret
0x00000000000a4bd7 : leave ; jne 0xa4bd0 ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000b679a : leave ; jne 0xb6756 ; mov rax, rdx ; ret
0x00000000000ff6be : leave ; jne 0xff6cb ; ret
0x00000000000ff729 : leave ; jne 0xff733 ; ret
0x000000000015a960 : leave ; lea rax, qword ptr [rdx + rcx] ; sub rax, rdi ; ret
0x0000000000085963 : leave ; loopne 0x8596b ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000009e571 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000010b7c1 : leave ; mov rax, rcx ; ret
0x000000000005c7f2 : leave ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000ba1bb : leave ; push -0x76b3fff0 ; ret
0x0000000000049ec7 : leave ; ret
0x000000000015b038 : ljmp ptr [rcx] ; enter -0x73b, 0x77 ; ret
0x00000000000da398 : ljmp ptr [rcx] ; ret 0x6348
0x000000000008b8be : ljmp ptr [rdx] ; cmp rdx, rsi ; jne 0x8b8bf ; ret
0x0000000000161eb0 : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008907a : lock add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x0000000000114548 : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000f178c : lock and byte ptr [rax - 0x77], cl ; ret
0x00000000001559a0 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001665d0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000123faf : lodsb al, byte ptr [rsi] ; mov eax, 1 ; jmp 0x123f80
0x0000000000155fc4 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013470a : lodsb al, byte ptr [rsi] ; or byte ptr [rax], al ; call qword ptr [rax]
0x00000000000eb1e9 : lodsb al, byte ptr [rsi] ; ret 0x8207
0x00000000000eceb0 : lodsb al, byte ptr [rsi] ; ret 1
0x00000000000d7210 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000064027 : lodsd eax, dword ptr [rsi] ; and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c7127 : lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; str word ptr [rax - 0x77] ; ret 0x8948
0x00000000000c5027 : lodsd eax, dword ptr [rsi] ; lea ecx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000004734f : lodsd eax, dword ptr [rsi] ; mov al, 0xfd ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000159b30 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000008a68f : lodsd eax, dword ptr [rsi] ; or eax, 0x450f4800 ; ret 0x66c3
0x0000000000048ee2 : lodsd eax, dword ptr [rsi] ; ret
0x00000000000eef3f : lodsd eax, dword ptr [rsi] ; xor ecx, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000104963 : loop 0x10496a ; jmp 0x10492d
0x000000000014413a : loop 0x144135 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000144139 : loop 0x144136 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000146c6a : loop 0x146c65 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000146c69 : loop 0x146c66 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000169341 : loop 0x169383 ; jmp rdx
0x000000000016ba35 : loop 0x16ba86 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003ac8b : loop 0x3acb2 ; or rax, rdx ; ret
0x000000000003f554 : loop 0x3f55b ; push qword ptr [rcx] ; fucomi st(1) ; ret 0xfffb
0x0000000000051bdb : loop 0x51c18 ; ret 0x820f
0x000000000005d232 : loop 0x5d26f ; ret 0x820f
0x000000000009259d : loop 0x925d5 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000009f8ea : loop 0x9f8f5 ; add byte ptr [rax], al ; ret
0x00000000000a4e64 : loop 0xa4e6d ; jne 0xa4e7c ; ret
0x00000000000bae1f : loop 0xbadb2 ; enter -0x2fd7, -0x2f ; call 0xffffffffeacd7033
0x00000000000d1125 : loop 0xd10e5 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d30f7 : loop 0xd3084 ; ret
0x00000000000dfadb : loop 0xdfaef ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ea9bd : loop 0xeaa0d ; mov esi, ebp ; call 0xe6c96
0x00000000000fe9b0 : loop 0xfe9bf ; call 0x22449
0x000000000012500a : loope 0x125014 ; add bh, bh ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8948
0x0000000000137623 : loope 0x1375e3 ; or byte ptr [rax], al ; call qword ptr [rax]
0x00000000001440aa : loope 0x1440a5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001440a9 : loope 0x1440a6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000146bda : loope 0x146bd5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000146bd9 : loope 0x146bd6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014f70b : loope 0x14f712 ; add byte ptr [rax], al ; ret
0x000000000015af3e : loope 0x15af6f ; enter -0x73b, 0x77 ; ret
0x00000000001652fb : loope 0x165305 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000048566 : loope 0x48526 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000004864e : loope 0x4860e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000048d6b : loope 0x48dbd ; mov dword ptr [rdi], ecx ; ret
0x0000000000048d9c : loope 0x48def ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000048e1d : loope 0x48e70 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000078911 : loope 0x788e6 ; mov dword ptr [rdi], ecx ; ret
0x000000000007c478 : loope 0x7c492 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000007c477 : loope 0x7c493 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000007d9d6 : loope 0x7d9dc ; dec dword ptr [rax + 0x39] ; ret
0x000000000008f7ca : loope 0x8f751 ; ret 0x4501
0x00000000000b699e : loope 0xb69b3 ; je 0xb69c4 ; ret
0x00000000000d5cc3 : loope 0xd5c4c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc35b
0x00000000000d5cc3 : loope 0xd5c4e ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc35b
0x00000000000d5c96 : loope 0xd5c9b ; add esi, esi ; ret
0x00000000000d5d0a : loope 0xd5d15 ; jne 0xd5c7a ; ret
0x00000000000d9619 : loope 0xd961e ; add esi, esi ; ret
0x00000000000daf71 : loope 0xdaf76 ; add esi, esi ; ret 0xf04
0x00000000000e5ef6 : loope 0xe5f47 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010016e : loopne 0x100173 ; ret
0x0000000000103902 : loopne 0x103964 ; pop rbp ; pop r12 ; ret
0x0000000000103923 : loopne 0x103985 ; pop rbp ; pop r12 ; ret
0x00000000001054e2 : loopne 0x105549 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001073b2 : loopne 0x1073bc ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000108adf : loopne 0x108ae4 ; ret
0x00000000001091ec : loopne 0x109201 ; cmp eax, 4 ; je 0x1091fb ; ret
0x00000000001093b7 : loopne 0x1093cc ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000109cbc : loopne 0x109d0e ; lea edi, dword ptr [rip - 0x184] ; call rax
0x000000000010a6b1 : loopne 0x10a72b ; and dword ptr [rax - 0x77], ecx ; ret
0x000000000011818f : loopne 0x1181d5 ; pop rsp ; ret
0x00000000001181d8 : loopne 0x1181d7 ; add eax, 0x10 ; ret
0x000000000011817b : loopne 0x1181dd ; pop rbp ; pop r12 ; ret
0x0000000000118fdf : loopne 0x118fed ; shr rax, 4 ; and eax, 0x7f ; ret
0x0000000000118fe6 : loopne 0x119069 ; ret
0x000000000011f61d : loopne 0x11f628 ; pop r14 ; sub eax, 1 ; ret
0x00000000001206aa : loopne 0x12070e ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012c74b : loopne 0x12c754 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013d432 : loopne 0x13d44a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013d431 : loopne 0x13d44b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013d582 : loopne 0x13d59a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013d581 : loopne 0x13d59b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013d6d2 : loopne 0x13d6ea ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013d6d1 : loopne 0x13d6eb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013d822 : loopne 0x13d83a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013d821 : loopne 0x13d83b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013d972 : loopne 0x13d98a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013d971 : loopne 0x13d98b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013dac2 : loopne 0x13dada ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013dac1 : loopne 0x13dadb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013dc12 : loopne 0x13dc2a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013dc11 : loopne 0x13dc2b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013dd60 : loopne 0x13dd78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013dd5f : loopne 0x13dd79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013deb2 : loopne 0x13deca ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013deb1 : loopne 0x13decb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013e002 : loopne 0x13e01a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013e001 : loopne 0x13e01b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013e152 : loopne 0x13e16a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013e151 : loopne 0x13e16b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013e2a2 : loopne 0x13e2ba ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013e2a1 : loopne 0x13e2bb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013e3f2 : loopne 0x13e40a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013e3f1 : loopne 0x13e40b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013e542 : loopne 0x13e55a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013e541 : loopne 0x13e55b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013e692 : loopne 0x13e6aa ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013e691 : loopne 0x13e6ab ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013fe12 : loopne 0x13fe2a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013fe11 : loopne 0x13fe2b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013ff62 : loopne 0x13ff7a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013ff61 : loopne 0x13ff7b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001400b2 : loopne 0x1400ca ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001400b1 : loopne 0x1400cb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000140202 : loopne 0x14021a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000140201 : loopne 0x14021b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000140352 : loopne 0x14036a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000140351 : loopne 0x14036b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001404a2 : loopne 0x1404ba ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001404a1 : loopne 0x1404bb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001405f2 : loopne 0x14060a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001405f1 : loopne 0x14060b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000140740 : loopne 0x140758 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000014073f : loopne 0x140759 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000140892 : loopne 0x1408aa ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000140891 : loopne 0x1408ab ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001409e2 : loopne 0x1409fa ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001409e1 : loopne 0x1409fb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000140b32 : loopne 0x140b4a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000140b31 : loopne 0x140b4b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000140c82 : loopne 0x140c9a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000140c81 : loopne 0x140c9b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000140dd2 : loopne 0x140dea ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000140dd1 : loopne 0x140deb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000140f22 : loopne 0x140f3a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000140f21 : loopne 0x140f3b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000141072 : loopne 0x14108a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000141071 : loopne 0x14108b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016bd77 : loopne 0x16bdd9 ; pop rbp ; pop r12 ; ret
0x000000000016c0cf : loopne 0x16c12e ; ret
0x0000000000030437 : loopne 0x30446 ; movzx eax, ax ; ret
0x0000000000030477 : loopne 0x30480 ; movzx eax, ax ; ret
0x0000000000030517 : loopne 0x30522 ; movzx eax, ax ; ret
0x00000000000305f7 : loopne 0x305fc ; ret
0x0000000000030690 : loopne 0x30695 ; ret
0x00000000000306b0 : loopne 0x306bf ; movzx eax, ax ; ret
0x0000000000030667 : loopne 0x306ea ; ret
0x00000000000306f0 : loopne 0x306f9 ; movzx eax, ax ; ret
0x0000000000030790 : loopne 0x3079b ; movzx eax, ax ; ret
0x00000000000310d8 : loopne 0x3113c ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000034f60 : loopne 0x34fc6 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000036aab : loopne 0x36a92 ; fsub dword ptr [rip + 0x200] ; ret
0x00000000000371b9 : loopne 0x371c5 ; ret
0x0000000000037758 : loopne 0x37764 ; ret
0x0000000000038780 : loopne 0x387d0 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000004889d : loopne 0x488a6 ; sub eax, 1 ; ret
0x000000000004d9cf : loopne 0x4da1d ; mov eax, esi ; ret
0x000000000004d9f7 : loopne 0x4da45 ; mov eax, esi ; ret
0x0000000000058b7e : loopne 0x58b0b ; ret 0xe680
0x000000000006f89a : loopne 0x6f8fe ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070327 : loopne 0x7038d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000712b0 : loopne 0x712b6 ; add byte ptr [rax], al ; jmp rax
0x00000000000712ec : loopne 0x712f2 ; add byte ptr [rax], al ; call rax
0x00000000000712b5 : loopne 0x71307 ; mov eax, 0xffffffff ; ret
0x000000000007133e : loopne 0x71344 ; add byte ptr [rax], al ; call rax
0x0000000000071390 : loopne 0x71396 ; add byte ptr [rax], al ; jmp rax
0x0000000000075970 : loopne 0x759d7 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000759c7 : loopne 0x75a11 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000078a14 : loopne 0x78a1d ; mov edx, eax ; mov eax, edx ; ret
0x0000000000078a28 : loopne 0x78a2e ; mov edx, eax ; jmp 0x789d1
0x0000000000078b14 : loopne 0x78b1d ; mov edx, eax ; mov eax, edx ; ret
0x0000000000078b28 : loopne 0x78b2e ; mov edx, eax ; jmp 0x78ad1
0x000000000007aaab : loopne 0x7ab0d ; pop rbp ; pop r12 ; ret
0x000000000007b46a : loopne 0x7b46f ; ret
0x000000000007b47a : loopne 0x7b47f ; ret
0x000000000007ee96 : loopne 0x7eefd ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000085964 : loopne 0x8596a ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000008a55c : loopne 0x8a4f2 ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000008a55c : loopne 0x8a4f3 ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000008c17f : loopne 0x8c1c5 ; pop rsp ; ret
0x000000000008c16b : loopne 0x8c1cd ; pop rbp ; pop r12 ; ret
0x000000000009f9ec : loopne 0x9f9f6 ; add byte ptr [rax], al ; ret
0x00000000000b7b95 : loopne 0xb7b9c ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000c37f2 : loopne 0xc37f9 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000c388e : loopne 0xc3895 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000d5be9 : loopne 0xd5bf2 ; add eax, 8 ; ret
0x00000000000dccf1 : loopne 0xdcd58 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e3c05 : loopne 0xe3c18 ; ret
0x00000000000e6ef6 : loopne 0xe6f5d ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ebb8f : loopne 0xebbd5 ; pop rsp ; ret
0x00000000000ebb7d : loopne 0xebbdf ; pop rbp ; pop r12 ; ret
0x00000000000f3e98 : loopne 0xf3efa ; pop rbp ; pop r12 ; ret
0x00000000000f8cfe : loopne 0xf8d08 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb900 : loopne 0xfb92a ; and rax, rdi ; or rax, rsi ; ret
0x00000000000fc2b4 : loopne 0xfc2bb ; ret
0x00000000000fefc2 : loopne 0xfefc7 ; ret
0x00000000000fefda : loopne 0xfefe9 ; movzx eax, ax ; ret
0x00000000000ff052 : loopne 0xff057 ; ret
0x00000000000ff0f2 : loopne 0xff0f7 ; ret
0x00000000000ff10a : loopne 0xff10f ; ret
0x00000000000ff182 : loopne 0xff187 ; ret
0x00000000000ff19a : loopne 0xff1a3 ; movzx eax, ax ; ret
0x00000000000ff212 : loopne 0xff217 ; ret
0x00000000000ff2a2 : loopne 0xff2a7 ; ret
0x00000000000ff342 : loopne 0xff347 ; ret
0x00000000000ff3e2 : loopne 0xff3e7 ; ret
0x00000000000ff482 : loopne 0xff487 ; ret
0x00000000000ff49a : loopne 0xff4a5 ; movzx eax, ax ; ret
0x00000000000ff512 : loopne 0xff517 ; ret
0x00000000000ff5ad : loopne 0xff5b2 ; ret
0x00000000000ff642 : loopne 0xff647 ; ret
0x00000000000ff83e : loopne 0xff843 ; ret
0x00000000000ff994 : loopne 0xff999 ; ret
0x00000000000ff9ab : loopne 0xff9ba ; movzx eax, ax ; ret
0x00000000000ffa24 : loopne 0xffa29 ; ret
0x00000000000ffab4 : loopne 0xffab9 ; ret
0x00000000000ffacb : loopne 0xffad0 ; ret
0x00000000000ffb34 : loopne 0xffb39 ; ret
0x00000000000ffb4b : loopne 0xffb54 ; movzx eax, ax ; ret
0x00000000000ffbc4 : loopne 0xffbc9 ; ret
0x00000000000ffc44 : loopne 0xffc49 ; ret
0x00000000000ffcd4 : loopne 0xffcd9 ; ret
0x00000000000ffd64 : loopne 0xffd69 ; ret
0x00000000000ffdf4 : loopne 0xffdf9 ; ret
0x00000000000ffe0b : loopne 0xffe16 ; movzx eax, ax ; ret
0x00000000000ffe84 : loopne 0xffe89 ; ret
0x00000000000fff11 : loopne 0xfff16 ; ret
0x00000000000fff94 : loopne 0xfff99 ; ret
0x00000000000b9d6d : lsl eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001272ff : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000027af4 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000000e875e : mov ah, 0x24 ; mov eax, 0x89000000 ; ret 0xbd41
0x000000000010a418 : mov ah, 0xa5 ; add eax, 0x440f4800 ; ret 0xfc3
0x00000000000a4d2c : mov ah, 0xb ; add byte ptr [rax - 0x418bf71b], al ; ret
0x0000000000085b6a : mov ah, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c90e7 : mov ah, byte ptr [rdi - 0x18] ; ret 0x442
0x000000000013364a : mov ah, byte ptr [rdi - 0x76b7fff8] ; ret
0x000000000002c830 : mov al, 0 ; add byte ptr [rax], al ; call r14
0x000000000008982c : mov al, 0x1e ; or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000001234f1 : mov al, 0x23 ; add byte ptr [rax], al ; pop rbp ; jmp rcx
0x00000000000f7cfe : mov al, 0x41 ; call rsi
0x00000000000518a0 : mov al, 0x48 ; add eax, edi ; jmp rax
0x000000000007912c : mov al, 0x58 ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x790be
0x000000000011ed9f : mov al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000e1f31 : mov al, 0x83 ; ret 0x4802
0x00000000000c9202 : mov al, 0x85 ; sal byte ptr [rcx + rsi*2 + 0x48], 0x83 ; ret 0xc60f
0x000000000004a1eb : mov al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000015f30f : mov al, 0xc5 ; std ; xlatb ; ret
0x0000000000047350 : mov al, 0xfd ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000009fa1c : mov al, 4 ; add byte ptr [rax], al ; ret
0x000000000009f61c : mov al, 8 ; add byte ptr [rax], al ; ret
0x000000000009b94b : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000009b979 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000009b9fd : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000151ac0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000009b925 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000009b935 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000ec4de : mov bh, 0 ; add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x0000000000144e71 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000002cb83 : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1576
0x0000000000165198 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000000d1198 : mov bh, 0x48 ; mov esi, ebx ; mov rdi, rbp ; call r12
0x00000000001303ea : mov bh, 0x4c ; ret 0x6604
0x0000000000090932 : mov bh, 0x54 ; and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x0000000000090ae4 : mov bh, 0x54 ; and al, 0xec ; mov word ptr [rdi + 4], dx ; ret
0x000000000005752d : mov bh, 0x84 ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x0000000000030176 : mov bh, 0x8b ; add al, 0x10 ; ret
0x000000000003043a : mov bh, 0xc0 ; ret
0x000000000010d4cc : mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00000000000eb58a : mov bh, 4 ; and al, 0x89 ; ret 0xe283
0x0000000000030433 : mov bh, 4 ; js 0x303c3 ; loopne 0x3044a ; movzx eax, ax ; ret
0x0000000000030473 : mov bh, 4 ; js 0x30403 ; loopne 0x30484 ; movzx eax, ax ; ret
0x0000000000030513 : mov bh, 4 ; js 0x304a3 ; loopne 0x30526 ; movzx eax, ax ; ret
0x00000000000305f3 : mov bh, 4 ; js 0x30580 ; loopne 0x30600 ; ret
0x000000000003068c : mov bh, 4 ; js 0x30619 ; loopne 0x30699 ; ret
0x00000000000306ac : mov bh, 4 ; js 0x3063c ; loopne 0x306c3 ; movzx eax, ax ; ret
0x00000000000306ec : mov bh, 4 ; js 0x3067c ; loopne 0x306fd ; movzx eax, ax ; ret
0x000000000003078c : mov bh, 4 ; js 0x3071c ; loopne 0x3079f ; movzx eax, ax ; ret
0x00000000000fefd6 : mov bh, 4 ; js 0xfef66 ; loopne 0xfefed ; movzx eax, ax ; ret
0x00000000000ff106 : mov bh, 4 ; js 0xff093 ; loopne 0xff113 ; ret
0x00000000000ff196 : mov bh, 4 ; js 0xff126 ; loopne 0xff1a7 ; movzx eax, ax ; ret
0x00000000000ff496 : mov bh, 4 ; js 0xff426 ; loopne 0xff4a9 ; movzx eax, ax ; ret
0x00000000000ff9a7 : mov bh, 4 ; js 0xff937 ; loopne 0xff9be ; movzx eax, ax ; ret
0x00000000000ffac7 : mov bh, 4 ; js 0xffa54 ; loopne 0xffad4 ; ret
0x00000000000ffb47 : mov bh, 4 ; js 0xffad7 ; loopne 0xffb58 ; movzx eax, ax ; ret
0x00000000000ffe07 : mov bh, 4 ; js 0xffd97 ; loopne 0xffe1a ; movzx eax, ax ; ret
0x00000000000269cc : mov bh, 5 ; ret 0x1612
0x00000000000eb0d5 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000f9113 : mov bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000000cfc5a : mov bh, byte ptr [rcx] ; ret 0x840f
0x00000000000f2355 : mov bl, 0 ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; ret
0x0000000000166a8e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b679c : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000010a439 : mov bl, 0x96 ; stc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000089b89 : mov bl, 0x9d ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000000f4fd9 : mov bl, 0xc0 ; or al, 0 ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000011b0d1 : mov byte ptr [r10], 0 ; ret
0x00000000000f4f6b : mov byte ptr [r8 - 1], 0 ; ret
0x000000000011d422 : mov byte ptr [rax + 0x18], 0 ; add rsp, 8 ; ret
0x00000000000be8e8 : mov byte ptr [rax + 0x4c], 0x89 ; ret 0x894c
0x0000000000118e95 : mov byte ptr [rax + 1], cl ; pop rbx ; ret
0x000000000010a3c4 : mov byte ptr [rax + 5], bl ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000027780 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000000459a9 : mov byte ptr [rax + rdx], 0 ; ret
0x0000000000080c14 : mov byte ptr [rax + rsi], dl ; ret
0x0000000000080c13 : mov byte ptr [rax + rsi], r10b ; ret
0x000000000008e2ae : mov byte ptr [rax - 0x77], cl ; ret
0x00000000000f4f6c : mov byte ptr [rax - 1], 0 ; ret
0x000000000011aa16 : mov byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000245a0 : mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x00000000000f8536 : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001198a1 : mov byte ptr [rax], 1 ; jmp 0x11986c
0x0000000000136551 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000012b8c3 : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000047ff8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000078c63 : mov byte ptr [rax], bh ; mov eax, r10d ; ret
0x000000000009e572 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000078c62 : mov byte ptr [rax], dil ; mov eax, r10d ; ret
0x000000000007a074 : mov byte ptr [rbx - 0x76b70001], cl ; ret 0x38b
0x00000000000f3b7a : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x000000000012fa14 : mov byte ptr [rbx], al ; mov eax, 1 ; jmp 0x12f9e8
0x000000000012faa4 : mov byte ptr [rbx], al ; mov eax, 1 ; jmp 0x12fa78
0x0000000000053d8f : mov byte ptr [rbx], dl ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000053db9 : mov byte ptr [rbx], dl ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xe867
0x000000000014f783 : mov byte ptr [rcx + 2], dl ; ret
0x000000000014f7a2 : mov byte ptr [rcx + 4], dl ; ret
0x000000000014f7e3 : mov byte ptr [rcx + 8], dl ; ret
0x000000000002e6d9 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x0000000000122d91 : mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x00000000000904b8 : mov byte ptr [rcx - 1], 0 ; mov qword ptr [rdx], rcx ; ret
0x0000000000090607 : mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000104a32 : mov byte ptr [rcx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a49d2 : mov byte ptr [rcx], 0x48 ; cmp edx, esi ; jne 0xa49cf ; ret
0x00000000000d4149 : mov byte ptr [rcx], 0x74 ; and esi, esi ; ret
0x0000000000063171 : mov byte ptr [rcx], 0x85 ; fisttp dword ptr [rdi] ; lahf ; ret 0xd329
0x00000000001016a8 : mov byte ptr [rcx], 0xe9 ; ret
0x0000000000074552 : mov byte ptr [rcx], bh ; ret
0x0000000000074551 : mov byte ptr [rcx], dil ; ret
0x000000000014f760 : mov byte ptr [rcx], dl ; ret
0x00000000000a301a : mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a13cb : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009fbab : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a302b : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a0568 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009eeb8 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a3030 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a3052 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a3070 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a3090 : mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a05de : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009ef0e : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a1451 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009fc01 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a30b1 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a30b6 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a30d2 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a30f2 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a3112 : mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a14d3 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000009fc83 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a3133 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a0660 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009ef90 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a3138 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a315a : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a3178 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a3198 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a31b4 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a31d4 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a31f4 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a3214 : mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009fd85 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a3235 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a323a : mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a328a : mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a2f60 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a2f7e : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a2f9e : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a2fc0 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a2fe0 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a3000 : mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a2e96 : mov byte ptr [rdi + 1], ch ; ret
0x0000000000118aa5 : mov byte ptr [rdi + 1], dh ; ret
0x0000000000118aa4 : mov byte ptr [rdi + 1], sil ; ret
0x00000000000909cd : mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x00000000000a2ea8 : mov byte ptr [rdi + 2], ch ; ret
0x00000000000a0416 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009edd6 : mov byte ptr [rdi + 2], dh ; ret
0x00000000000a1259 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000090900 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000a2eb9 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a2ebe : mov byte ptr [rdi + 3], ch ; ret
0x00000000000909eb : mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x00000000000a2ed6 : mov byte ptr [rdi + 4], ch ; ret
0x00000000000a0432 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009edf2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a1287 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009091e : mov byte ptr [rdi + 4], dl ; ret
0x00000000000a2ee7 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a2eec : mov byte ptr [rdi + 5], ch ; ret
0x0000000000090a24 : mov byte ptr [rdi + 6], al ; mov rax, rdi ; ret
0x00000000000a2efe : mov byte ptr [rdi + 6], ch ; ret
0x0000000000090957 : mov byte ptr [rdi + 6], dl ; ret
0x00000000000a2f1c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000d1270 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000d1225 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000d11f4 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000d12a0 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000d12b0 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000d12c5 : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000d120d : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000d1230 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000a2f28 : mov byte ptr [rdi + 8], ch ; ret
0x000000000009ee33 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a12d9 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009fb29 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000a2f39 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a2f3e : mov byte ptr [rdi + 9], ch ; ret
0x00000000000bd644 : mov byte ptr [rdi + rax], ch ; add byte ptr [rcx - 0x77], al ; ret 0x8944
0x0000000000118c6e : mov byte ptr [rdi + rdx], 0 ; ret
0x00000000001254be : mov byte ptr [rdi - 1], al ; cmp rdi, rcx ; jne 0x1254b8 ; ret
0x000000000013ea5b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000090a70 : mov byte ptr [rdi], 0 ; lea rax, qword ptr [rdi + rax - 1] ; ret
0x00000000000909a0 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000024589 : mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x0000000000034e46 : mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000245a3 : mov byte ptr [rdi], 0 ; ret
0x00000000000d1265 : mov byte ptr [rdi], 0x5b ; ret
0x00000000000d128e : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000a2e82 : mov byte ptr [rdi], ch ; ret
0x00000000000a3b5f : mov byte ptr [rdi], cl ; ret
0x00000000001601b9 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000000908d1 : mov byte ptr [rdi], dh ; add rax, rdi ; ret
0x00000000000a03f0 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000009edb0 : mov byte ptr [rdi], dh ; ret
0x00000000000a1232 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009faa2 : mov byte ptr [rdi], dl ; ret
0x00000000000a2e92 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000908d0 : mov byte ptr [rdi], sil ; add rax, rdi ; ret
0x000000000009e6fa : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x0000000000151ae9 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x000000000009b94e : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000151b17 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x000000000009b97c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000009e690 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x000000000009ba00 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000112049 : mov byte ptr [rdx], 0 ; pop r12 ; pop r13 ; ret
0x00000000000f96e1 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000011b0d2 : mov byte ptr [rdx], 0 ; ret
0x00000000001049dd : mov byte ptr [rdx], 0xa ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000151ac2 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000009b927 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000002f2bb : mov byte ptr [rip + 0x19077c], dl ; ret
0x0000000000114936 : mov byte ptr [rip + 0xada0b], 1 ; pop rbx ; ret
0x0000000000111d26 : mov byte ptr [rsi + 5], dl ; mov rax, rsi ; pop rbx ; ret
0x000000000008b780 : mov byte ptr [rsi + rdx + 1], al ; jne 0x8b776 ; ret
0x000000000008b77d : mov byte ptr [rsi + rdx], cl ; mov byte ptr [rsi + rdx + 1], al ; jne 0x8b779 ; ret
0x00000000000290f5 : mov byte ptr [rsi], al ; add eax, dword ptr [rax] ; add bh, dh ; ret 0xf800
0x00000000000a4681 : mov byte ptr [rsp + rbx*8 - 0x3d], dh ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000053d8e : mov byte ptr cs:[rbx], dl ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000011b0d0 : mov ch, 0x41 ; mov byte ptr [rdx], 0 ; ret
0x0000000000162a26 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000032a3b : mov cl, 0x35 ; call rax
0x0000000000031993 : mov cl, 0x35 ; jmp rax
0x0000000000126948 : mov cl, 0x35 ; pop rdx ; ret
0x000000000012693d : mov cl, 0x35 ; ret
0x0000000000026280 : mov cl, 0x35 ; ret 0x19ce
0x0000000000135070 : mov cl, 0x35 ; ret 0x8e5
0x0000000000110718 : mov cl, 0x35 ; ret 0xb19
0x00000000000e69d8 : mov cl, 0x35 ; ret 0xda4
0x00000000001272ed : mov cl, 0x48 ; add eax, ecx ; jmp rax
0x0000000000120dcc : mov cl, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x0000000000136e54 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000003773b : mov cl, 0xfa ; adc al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000000000002f060 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000088e1f : mov cl, byte ptr [rax - 0x77] ; ret 0xd148
0x0000000000109e3d : mov cl, byte ptr [rax - 0x7d] ; ret
0x00000000000ffffb : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0x100010 ; ret
0x0000000000100058 : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0x100070 ; ret
0x00000000000ff6b9 : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0xff6d0 ; ret
0x00000000000ff724 : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0xff738 ; ret
0x0000000000096d45 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000090f44 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x000000000015be74 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x00000000001640e4 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000b699b : mov cl, dl ; and cl, 0xf ; je 0xb69c7 ; ret
0x000000000010773e : mov cs, word ptr [rax - 0x3f] ; clc ; add ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0xc083
0x000000000008d8b3 : mov cs, word ptr [rbp + rcx*4 + 0x67] ; add dword ptr [rcx - 0x77], ecx ; ret
0x000000000010022d : mov cs, word ptr [rbx - 0x2d7aeeec] ; jne 0x100248 ; ret
0x00000000000ff90d : mov cs, word ptr [rbx - 0x2d7aeeec] ; jne 0xff928 ; ret
0x00000000000b9d6c : mov cs, word ptr [rdi] ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015c93e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000009edd0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000007cda5 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007db61 : mov dh, 0 ; pop r13 ; pop r14 ; ret
0x000000000007b4d7 : mov dh, 0 ; ret
0x000000000007911b : mov dh, 0x10 ; pop rbx ; mov eax, edx ; ret
0x00000000000d82eb : mov dh, 0x14 ; adc dword ptr [rcx], eax ; ret 0x428d
0x00000000000dc4b7 : mov dh, 0x14 ; add al, byte ptr [rcx - 0xa] ; ret 0x7580
0x0000000000144ee1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000947f5 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000035bf8 : mov dh, 0x17 ; test dl, dl ; jne 0x35bdd ; ret
0x00000000000caa51 : mov dh, 0x17 ; test dl, dl ; jne 0xcaa2f ; xor eax, eax ; ret
0x00000000000e0a21 : mov dh, 0x17 ; test dl, dl ; jne 0xe09ff ; xor eax, eax ; ret
0x00000000000bdeb7 : mov dh, 0x40 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000cb035 : mov dh, 0x42 ; add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xe902
0x00000000000cf140 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x00000000000cad19 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000118d76 : mov dh, 0x42 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000011e7e2 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000016c68a : mov dh, 0x44 ; and al, 0xf ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000166661 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000166651 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000166621 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000166641 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000166631 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000004e648 : mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000028a5f : mov dh, 0x48 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000000be021 : mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000059f4f : mov dh, 0x4f ; or eax, 0x8927634d ; ret 0x8941
0x0000000000029218 : mov dh, 0x50 ; dec dword ptr [rcx - 0x7d] ; ret
0x00000000000ccffc : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000cd041 : mov dh, 0x53 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000090953 : mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x0000000000090b05 : mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x000000000009091a : mov dh, 0x54 ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000908fc : mov dh, 0x54 ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x000000000015ade6 : mov dh, 0x54 ; cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x0000000000166665 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000166655 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000166625 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000166635 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000000da350 : mov dh, 0x57 ; cmp dh, dh ; ret 0xf08
0x000000000005a192 : mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000003dac1 : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000060d35 : mov dh, 0x7a ; add dword ptr [rax - 0x80], eax ; lcall ptr [rbp + 0x74] ; ret 0x8440
0x00000000000bd510 : mov dh, 0x83 ; ret 0x4c01
0x00000000000f4186 : mov dh, 0xb5 ; or al, 0 ; add rsp, 8 ; ret
0x0000000000025063 : mov dh, 0xc0 ; add eax, 1 ; push rax ; call rbx
0x0000000000128107 : mov dh, 0xc0 ; add eax, 1 ; ret
0x00000000001300c0 : mov dh, 0xc0 ; add rsp, 0x18 ; ret
0x00000000000ee1e6 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x00000000001248d5 : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001355d0 : mov dh, 0xc0 ; add rsp, 8 ; ret
0x00000000001016e8 : mov dh, 0xc0 ; jmp 0x1013ea
0x00000000000b4f06 : mov dh, 0xc0 ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000c9f4f : mov dh, 0xc0 ; lea rax, qword ptr [rax + rax - 1] ; ret
0x00000000000ee426 : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e6dc : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x000000000006e69e : mov dh, 0xc0 ; neg eax ; ret
0x000000000007b55e : mov dh, 0xc0 ; pop rbx ; neg eax ; ret
0x00000000001235d3 : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000038820 : mov dh, 0xc0 ; ret
0x00000000000a40a1 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000007dd16 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010d4e9 : mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000009481b : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000000a3b5d : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x00000000000922f1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000015be84 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000106c84 : mov dh, 0xf1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000007dba1 : mov dh, 2 ; ret
0x000000000008f627 : mov dh, 4 ; adc eax, dword ptr [rbp + 0x38] ; ret
0x0000000000035428 : mov dh, 4 ; or byte ptr [rax - 0x77], cl ; ret 0xc085
0x000000000015be81 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000947f2 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000922f4 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000015b434 : mov dh, 7 ; sub eax, ecx ; vzeroupper ; ret
0x00000000000c6c4a : mov dh, byte ptr [rcx + 0xf] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000ca02e : mov dl, 0x48 ; add eax, edx ; jmp rax
0x00000000000f27d4 : mov dl, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000134cfa : mov dl, 0xa6 ; or byte ptr [rax], al ; call qword ptr [rax]
0x00000000000a4da7 : mov dl, 0xb ; add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000000ff6d0 : mov dl, 3 ; add al, 0xa ; ret
0x0000000000128ca2 : mov dl, byte ptr [rdx + 9] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009fac3 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000009fae2 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009fb23 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000013eae0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000a1230 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009faa0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a2e90 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000005e131 : mov ds, word ptr [rax] ; adc al, byte ptr [rax] ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000000b6dfd : mov dword ptr [r11 + 0xc], edi ; ret
0x00000000000a48e0 : mov dword ptr [r8 + 4], ecx ; test ecx, ecx ; jne 0xa48b8 ; ret
0x0000000000118d7d : mov dword ptr [r8], eax ; mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x000000000003b32b : mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000109988 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x0000000000118df6 : mov dword ptr [r8], r11d ; mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x00000000001640da : mov dword ptr [r9 - 2], ecx ; ret
0x00000000001640c5 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000074f7d : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000007558c : mov dword ptr [rax + 0x18], edx ; xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x000000000007a4e0 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x00000000000d2eff : mov dword ptr [rax + 0x20], edx ; xor eax, eax ; ret
0x0000000000074fbe : mov dword ptr [rax + 0x40], ecx ; mov qword ptr [rax], rdx ; ret
0x0000000000074f81 : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000075c6d : mov dword ptr [rax + 0x40], esi ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000007560f : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000000a48e1 : mov dword ptr [rax + 4], ecx ; test ecx, ecx ; jne 0xa48b7 ; ret
0x000000000011d0ff : mov dword ptr [rax + 8], 0 ; pop rbx ; ret
0x000000000007f1d9 : mov dword ptr [rax + 8], 0 ; ret
0x00000000000f7a60 : mov dword ptr [rax + 8], ecx ; jmp 0xf7a2b
0x00000000000b86bd : mov dword ptr [rax + 8], esi ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000130332 : mov dword ptr [rax], 0 ; pop rbx ; ret
0x000000000011b102 : mov dword ptr [rax], 0 ; ret
0x0000000000056705 : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x00000000000f7648 : mov dword ptr [rax], 0x16 ; ret
0x00000000000f0bb0 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x00000000001381ac : mov dword ptr [rax], 0x26 ; xor eax, eax ; ret
0x0000000000035e78 : mov dword ptr [rax], 0x2a ; mov rax, rcx ; ret
0x00000000000f710d : mov dword ptr [rax], 0x83480000 ; ret
0x00000000000538ef : mov dword ptr [rax], 0x89482275 ; ret 0x8948
0x0000000000086698 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x0000000000084a18 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000000f271c : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000c3a80 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000024a10 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x00000000000f8ca3 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000000b5ea3 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e2c3c : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x0000000000118d7e : mov dword ptr [rax], eax ; mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x00000000000d1a03 : mov dword ptr [rax], ebp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000118df7 : mov dword ptr [rax], ebx ; mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x000000000007384e : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000e6d5b : mov dword ptr [rax], ecx ; xor eax, eax ; ret
0x00000000000f4e95 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x00000000000858c0 : mov dword ptr [rax], edi ; ret
0x00000000000fb9c7 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000118b6d : mov dword ptr [rax], edx ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x000000000003b32c : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00000000000e2c9a : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000300d8 : mov dword ptr [rax], edx ; ret
0x00000000000a4dd7 : mov dword ptr [rax], edx ; test edx, edx ; jne 0xa4dd6 ; ret
0x0000000000075c38 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000000e2c3b : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x000000000011d60c : mov dword ptr [rbp + 0x18], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0558 : mov dword ptr [rbp + 0x20], 0 ; jmp 0xe052c
0x000000000008ca85 : mov dword ptr [rbp + 0x38], 0x940f41d0 ; ret
0x00000000000c1bf0 : mov dword ptr [rbp - 0x128], edx ; call qword ptr [rip + 0xfc20c]
0x00000000000c90e3 : mov dword ptr [rbp - 0x40], eax ; jmp 0xc9079
0x00000000000f7cfc : mov dword ptr [rbp - 0x50], edi ; call r14
0x00000000000f7cfb : mov dword ptr [rbp - 0x50], r15d ; call r14
0x00000000000655ac : mov dword ptr [rbp - 0x538], eax ; jmp 0x6557d
0x000000000006ae2e : mov dword ptr [rbp - 0x57c], ebx ; jmp 0x670a8
0x0000000000061aca : mov dword ptr [rbp - 0x610], ecx ; call qword ptr [rip + 0x15c282]
0x00000000001081cc : mov dword ptr [rbp - 0x70], edx ; mov rdx, r13 ; call rax
0x0000000000107f44 : mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000001085fc : mov dword ptr [rbp - 0x80], edx ; lea rdx, qword ptr [rcx + 0x70] ; call rax
0x000000000010892b : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x000000000010851b : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000107d97 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000108040 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000004eace : mov dword ptr [rbp - 0x940], ebx ; call rax
0x000000000004eacd : mov dword ptr [rbp - 0x940], r11d ; call rax
0x00000000001070bd : mov dword ptr [rbp - 0xa8], eax ; call 0x103308
0x00000000001070f5 : mov dword ptr [rbp - 0xd0], edx ; call 0x103308
0x0000000000055761 : mov dword ptr [rbp - 0xe0], eax ; call rax
0x00000000000ead5e : mov dword ptr [rbp], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f95f : mov dword ptr [rbp], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003abf6 : mov dword ptr [rbp], edx ; mov rdi, qword ptr [rbx + 8] ; call rax
0x0000000000116ed3 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116ed2 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002d292 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000007badc : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000013749a : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000007bfb3 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000103c13 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012feca : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000137452 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000103c63 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079c44 : mov dword ptr [rbx + 0x18], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ff2a : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0651 : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000b8a58 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a4f9 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00000000000d15cc : mov dword ptr [rbx + 0x34], esp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fa275 : mov dword ptr [rbx + 0x38], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003797f : mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x000000000003795c : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000007ebea : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007f0c7 : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007e83b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000075b5e : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000123e71 : mov dword ptr [rbx + 0x60], ebp ; jmp 0x123e3c
0x000000000007d036 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000075008 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000b6dfe : mov dword ptr [rbx + 0xc], edi ; ret
0x00000000000d188f : mov dword ptr [rbx + 4], ebp ; lea ecx, dword ptr [rdx + 1] ; jmp 0xd1860
0x00000000000eaf6b : mov dword ptr [rbx + 4], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d165c : mov dword ptr [rbx + 8], eax ; movsxd rdx, dword ptr [rbx + 4] ; jmp 0xd162f
0x000000000002d2a7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000103bc3 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007923f : mov dword ptr [rbx + 8], edx ; movzx edx, byte ptr [rax] ; pop rbx ; mov eax, edx ; ret
0x0000000000088a9d : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7637 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x000000000007eb30 : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001378a5 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000007ebed : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012c667 : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000f75dd : mov dword ptr [rbx], eax ; pop rbx ; setne al ; movzx eax, al ; ret
0x00000000000ef508 : mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000073b7a : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000075591 : mov dword ptr [rbx], ecx ; pop rbx ; ret
0x000000000008872d : mov dword ptr [rbx], edi ; call rcx
0x000000000007f0ca : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008737a : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000887f0 : mov dword ptr [rbx], esi ; or byte ptr [rbx + 0x50], 1 ; call rcx
0x0000000000071487 : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004d84a : mov dword ptr [rcx + 0x3a8], edi ; mov rsp, rdx ; ret
0x000000000014f7c2 : mov dword ptr [rcx + 3], edx ; ret
0x00000000000a4892 : mov dword ptr [rcx + 4], 0 ; ret
0x0000000000111e41 : mov dword ptr [rcx + 4], eax ; xor eax, eax ; jmp 0x111e11
0x000000000014f7b3 : mov dword ptr [rcx + 4], edx ; ret
0x000000000014f824 : mov dword ptr [rcx + 5], edx ; ret
0x000000000014f834 : mov dword ptr [rcx + 6], edx ; ret
0x000000000014f803 : mov dword ptr [rcx + 7], edx ; ret
0x0000000000106744 : mov dword ptr [rcx + 8], 0xf6de75f8 ; ret 0x7508
0x000000000014f7f4 : mov dword ptr [rcx + 8], edx ; ret
0x00000000000d18c5 : mov dword ptr [rcx + rax - 0x36], ecx ; jmp rdx
0x00000000000908b4 : mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x00000000001640db : mov dword ptr [rcx - 2], ecx ; ret
0x00000000001640c6 : mov dword ptr [rcx - 4], ecx ; ret
0x00000000001640b5 : mov dword ptr [rcx - 8], ecx ; ret
0x00000000000cce36 : mov dword ptr [rcx], 0xe175c084 ; xor eax, eax ; ret
0x00000000000caa42 : mov dword ptr [rcx], 0xf7bfa80 ; xchg eax, esp ; ret 0xb60f
0x00000000000d3266 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000f26fb : mov dword ptr [rcx], eax ; cmp rdi, rax ; ja 0xf2731 ; xor eax, eax ; ret
0x00000000000ecefc : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0xececf
0x00000000000f36bc : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0xf368f
0x00000000000f377c : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0xf374f
0x000000000003808e : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000007441b : mov dword ptr [rcx], eax ; ret
0x00000000000a4a02 : mov dword ptr [rcx], eax ; sub rdx, 1 ; jne 0xa49f8 ; ret
0x000000000007869a : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000073711 : mov dword ptr [rcx], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000742c7 : mov dword ptr [rcx], edi ; ret
0x000000000014f781 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000014f7a0 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000014f7e1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000014f7c0 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000014f801 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000014f811 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000014f821 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000014f831 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000014f841 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000014f851 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000014f7b0 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000014f7f1 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000118d83 : mov dword ptr [rcx], edx ; ret
0x00000000000a4a01 : mov dword ptr [rcx], r8d ; sub rdx, 1 ; jne 0xa49f9 ; ret
0x00000000000eba76 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000000a057d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a13ed : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a05bb : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a142b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a063d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a14ad : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009ef0b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009fbfe : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009ef8d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000048f2f : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a304d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a308b : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a310d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009fc80 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009efd0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009eff0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009efb1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000eba5e : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x0000000000080f25 : mov dword ptr [rdi + 0x14], 0 ; ret
0x00000000000f215c : mov dword ptr [rdi + 0x16], eax ; ret
0x00000000000a06a3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a1513 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000009efd3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a3173 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000012fb84 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x000000000007e737 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007a8df : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000a0685 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a14f5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a06c3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a1533 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000009efb5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a3155 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a3193 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000012fc1b : mov dword ptr [rdi + 0x18], edx ; ret
0x000000000012fcc6 : mov dword ptr [rdi + 0x18], esi ; mov dword ptr [rdi + 0x28], edx ; ret
0x000000000012fb5c : mov dword ptr [rdi + 0x18], esi ; ret
0x00000000001302fd : mov dword ptr [rdi + 0x20], 0 ; ret
0x00000000000b7dd0 : mov dword ptr [rdi + 0x20], ecx ; pop r14 ; pop r15 ; ret
0x0000000000124582 : mov dword ptr [rdi + 0x20], ecx ; ret
0x000000000012fb26 : mov dword ptr [rdi + 0x28], edx ; ret
0x00000000000d2385 : mov dword ptr [rdi + 0x2c], ecx ; mov dword ptr [rdi + 0x30], r9d ; ret
0x00000000000d2384 : mov dword ptr [rdi + 0x2c], r9d ; mov dword ptr [rdi + 0x30], r9d ; ret
0x00000000000d2389 : mov dword ptr [rdi + 0x30], ecx ; ret
0x000000000012457e : mov dword ptr [rdi + 0x30], edx ; mov qword ptr [rdi + 0x20], rcx ; ret
0x00000000000d2388 : mov dword ptr [rdi + 0x30], r9d ; ret
0x0000000000129ed8 : mov dword ptr [rdi + 0x48], eax ; mov eax, 1 ; ret
0x000000000007e767 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000129e3d : mov dword ptr [rdi + 0x54], eax ; mov eax, 1 ; ret
0x0000000000129f05 : mov dword ptr [rdi + 0x58], eax ; mov eax, 1 ; ret
0x0000000000080f69 : mov dword ptr [rdi + 0x60], ecx ; ret
0x0000000000080ff6 : mov dword ptr [rdi + 0x880], eax ; ret
0x00000000001181fe : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000a05fd : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a146d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009ef2d : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000a30cd : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a059b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a140b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a061d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a148d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009eeeb : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a306b : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a30ed : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000144d25 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000144b68 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000144e08 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000144cb5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000144af8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a0467 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a12b7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000144c45 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000144a88 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009ee17 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000a2f17 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000090a04 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x000000000003baf9 : mov dword ptr [rdi + 4], eax ; xor eax, eax ; ret
0x00000000000a0449 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a1299 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000144a18 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000090937 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000a2ef9 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000eb114 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a04fb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a135b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000001449a8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009ee7b : mov dword ptr [rdi + 5], edx ; ret
0x00000000000a2fbb : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a051b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a137b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000144938 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009ee8b : mov dword ptr [rdi + 6], edx ; ret
0x00000000000a2fdb : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a04b9 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a1319 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a053b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a139b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000001448c8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009ee59 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a2f79 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a2ffb : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000890aa : mov dword ptr [rdi + 8], 0 ; ret
0x000000000004a386 : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x000000000007e73b : mov dword ptr [rdi + 8], eax ; ret
0x00000000000f1cd4 : mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x0000000000079117 : mov dword ptr [rdi + 8], ecx ; movzx edx, byte ptr [rax] ; pop rbx ; mov eax, edx ; ret
0x000000000003b30d : mov dword ptr [rdi + 8], ecx ; ret
0x000000000003b33c : mov dword ptr [rdi + 8], ecx ; xor eax, eax ; mov qword ptr [rdi], r8 ; ret
0x00000000000a12fb : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a04d9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a1339 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a049b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000048728 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000007b4d3 : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x000000000009ee4b : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a2f5b : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a2f99 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000f1d1f : mov dword ptr [rdi + 8], esi ; ret
0x0000000000047446 : mov dword ptr [rdi + 8], esp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a3faf : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x00000000000a3b89 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x00000000000a3fa7 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000001601d9 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000000a3b79 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000000a3f9f : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a3b6b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000013e7a5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000013e7e3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000048e1f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000013eb2c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144378 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013ed0c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001442f8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013eefc : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144278 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013f0cd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001441e9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000013f2cd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000144159 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000013f4cd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001440c9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000009fdc0 : mov dword ptr [rdi - 1], edx ; ret
0x000000000013eead : mov dword ptr [rdi - 2], ecx ; ret
0x000000000013ecc5 : mov dword ptr [rdi - 2], edx ; ret
0x000000000013eea9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000013f289 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000013e95f : mov dword ptr [rdi - 4], edx ; ret
0x000000000013f286 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013f486 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013f686 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000048d9e : mov dword ptr [rdi - 8], ecx ; ret
0x000000000013e7e7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000013e95c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013ea58 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000013e9a4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001443f8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000003adc6 : mov dword ptr [rdi], 0 ; pop rbx ; ret
0x0000000000064d52 : mov dword ptr [rdi], eax ; add rax, r13 ; jmp 0x60fa0
0x0000000000090909 : mov dword ptr [rdi], eax ; add rax, rdi ; ret
0x0000000000124d84 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000f4eb9 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004d89f : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x000000000003b342 : mov dword ptr [rdi], eax ; ret
0x0000000000048d98 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048eb2 : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000003b308 : mov dword ptr [rdi], eax ; xor eax, eax ; mov qword ptr [rdi + 8], rcx ; ret
0x00000000000f1d36 : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000587ac : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a0435 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a0487 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000090ab0 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + rax - 1] ; ret
0x00000000000a0414 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009edd4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a1257 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009fac7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a1285 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009fae5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a12d7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009fb27 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a0465 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a12b5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009ee15 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a04b7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a1317 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009ee57 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a04d7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a1337 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009ee67 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000016479b : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000009ee78 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009ee88 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009ee98 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000909d8 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000009ee06 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009ee48 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000001647a7 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000036e3e : mov dword ptr [rdi], ecx ; ret
0x00000000001601d3 : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000000908c6 : mov dword ptr [rdi], edx ; add rax, rdi ; ret
0x00000000000a0404 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a1244 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a0422 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a1272 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a0474 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a12c4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000090a66 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + rax - 1] ; ret
0x000000000009fde0 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009fe21 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009fe41 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009fe51 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000011b0ff : mov dword ptr [rdi], edx ; mov qword ptr [rax], 0 ; ret
0x000000000009fe61 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009fe71 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009fdf0 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009fe31 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000037195 : mov dword ptr [rdi], edx ; movd xmm0, eax ; ret
0x000000000007a583 : mov dword ptr [rdi], edx ; ret
0x00000000000a2ea4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a2ed2 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a2f24 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x0000000000090a81 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + rax - 1] ; ret
0x00000000001640c3 : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000004a121 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000088f99 : mov dword ptr [rdi], esi ; mov eax, 1 ; ret
0x00000000001640b2 : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000089092 : mov dword ptr [rdi], esi ; mov rax, r8 ; ret
0x00000000000909b1 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x00000000001640d7 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x000000000004a14b : mov dword ptr [rdi], esi ; ret
0x00000000000eb0f1 : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x0000000000090908 : mov dword ptr [rdi], r8d ; add rax, rdi ; ret
0x000000000012a82c : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x000000000007116b : mov dword ptr [rdx + 0x130], ecx ; ret
0x000000000007bb4d : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x00000000000742c2 : mov dword ptr [rdx + 0x20], eax ; mov eax, edi ; mov dword ptr [rcx], edi ; ret
0x0000000000074418 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x0000000000123c58 : mov dword ptr [rdx + 0x20], esi ; ret
0x00000000000d2f09 : mov dword ptr [rdx + 0x20], esi ; xor eax, eax ; ret
0x000000000007454e : mov dword ptr [rdx + 0x28], esi ; mov byte ptr [rcx], dil ; ret
0x0000000000123c32 : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000123c36 : mov dword ptr [rdx + 0x68], ecx ; ret
0x000000000012737e : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x000000000012a734 : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x0000000000151b47 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x000000000009b9bc : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000006e882 : mov dword ptr [rdx + 4], 1 ; ret
0x0000000000151b29 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009b99e : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000151bdb : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000151b59 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x000000000014d809 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000151bfb : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000151b79 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x000000000014d819 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000151b99 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x0000000000151c1b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000009ba40 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000b88dd : mov dword ptr [rdx + 8], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000151bb9 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x0000000000151aab : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000009ba22 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000006e82f : mov dword ptr [rdx + 8], ecx ; add dword ptr [rdx + 4], 1 ; ret
0x00000000000d66f1 : mov dword ptr [rdx + 8], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d18e5 : mov dword ptr [rdx + rax*4], ecx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a20a : mov dword ptr [rdx], 0xffffc002 ; ret
0x0000000000151ad4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000151b02 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000151a54 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000038c7a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0x38c4d
0x00000000000fc16c : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0xfc13f
0x00000000000fcb1c : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0xfcaef
0x00000000000fcbec : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0xfcbbf
0x000000000003805a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000004a123 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000004a36e : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x00000000000c5731 : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000003bba2 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x000000000009b939 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000c4e96 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x0000000000030901 : mov dword ptr [rdx], eax ; ret
0x0000000000089c4e : mov dword ptr [rdx], ebx ; mov rax, r10 ; pop rbx ; ret
0x00000000000e297c : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000904b2 : mov dword ptr [rdx], ecx ; ret
0x00000000000f7a25 : mov dword ptr [rdx], edi ; pop rbx ; pop rbp ; ret
0x00000000000dfd9f : mov dword ptr [rdx], edi ; ret
0x00000000000c5577 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c5641 : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000008ad67 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c5730 : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000898f6 : mov dword ptr [rip + 0x136f4c], eax ; ret
0x0000000000080b78 : mov dword ptr [rip + 0x13d5ca], eax ; ret
0x0000000000080b68 : mov dword ptr [rip + 0x13d5d2], eax ; ret
0x0000000000080b56 : mov dword ptr [rip + 0x13d5d4], edx ; ret
0x0000000000080b18 : mov dword ptr [rip + 0x13d5da], eax ; ret
0x0000000000080af2 : mov dword ptr [rip + 0x13d5e8], eax ; ret
0x0000000000080b08 : mov dword ptr [rip + 0x13d5f2], eax ; ret
0x0000000000080ac2 : mov dword ptr [rip + 0x13d620], eax ; ret
0x0000000000080aa1 : mov dword ptr [rip + 0x13d665], eax ; ret
0x0000000000080ad7 : mov dword ptr [rip + 0x13fcaf], eax ; ret
0x0000000000038aa3 : mov dword ptr [rip + 0x18555f], eax ; mov eax, edx ; ret
0x0000000000038a80 : mov dword ptr [rip + 0x185586], edx ; ret
0x0000000000023ac0 : mov dword ptr [rip + 0x19f802], eax ; ret
0x00000000000224d6 : mov dword ptr [rip + 0x1a0c54], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000013829c : mov dword ptr [rip + 0x884ee], esi ; ret
0x0000000000109c3c : mov dword ptr [rip + 0xb81ae], eax ; pop rbp ; ret
0x00000000000fe359 : mov dword ptr [rip + 0xbfe61], ebx ; pop rbx ; ret
0x00000000000fe33f : mov dword ptr [rip + 0xbfe7b], ebx ; pop rbx ; ret
0x00000000000f64be : mov dword ptr [rip + 0xc7ce4], edi ; ret
0x00000000000f56dd : mov dword ptr [rip + 0xcb9cd], edx ; ret
0x00000000000e098c : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000003ba69 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x000000000003b281 : mov dword ptr [rsi + 0x10], edx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000d6696 : mov dword ptr [rsi + 0x18], edx ; mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x000000000003b285 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x0000000000078c5f : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rax], dil ; mov eax, r10d ; ret
0x00000000000d6699 : mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x00000000000f178f : mov dword ptr [rsi + 0x48], eax ; ret
0x00000000000f0a6a : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x000000000003ba1f : mov dword ptr [rsi + 0xc], 0x1000b ; ret
0x000000000003baab : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x00000000000e09a3 : mov dword ptr [rsi + 8], 0 ; ret
0x0000000000122d17 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000e0988 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000000b6047 : mov dword ptr [rsi + rcx], edx ; test edx, edx ; jne 0xb6047 ; ret
0x00000000001647aa : mov dword ptr [rsi - 2], ecx ; ret
0x000000000016479d : mov dword ptr [rsi - 4], ecx ; ret
0x0000000000122d27 : mov dword ptr [rsi], 0 ; ret
0x0000000000122dd0 : mov dword ptr [rsi], 0xa ; ret
0x0000000000122dc0 : mov dword ptr [rsi], 0xb ; ret
0x0000000000122df0 : mov dword ptr [rsi], 0xc ; ret
0x0000000000122d53 : mov dword ptr [rsi], 7 ; mov dword ptr [rsi + 8], eax ; ret
0x0000000000122de0 : mov dword ptr [rsi], 8 ; ret
0x000000000006c011 : mov dword ptr [rsi], eax ; jmp 0x682a2
0x000000000007a8e3 : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000d55d7 : mov dword ptr [rsi], ecx ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000080d4a : mov dword ptr [rsi], edi ; ret
0x0000000000118437 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x000000000003b32e : mov dword ptr [rsi], edx ; ret
0x0000000000036879 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x00000000001357a5 : mov dword ptr [rsp + 0x10], eax ; xor eax, eax ; call 0xf19c8
0x0000000000076e8f : mov dword ptr [rsp + 0x10], ecx ; mov rdi, r13 ; call rax
0x000000000008395b : mov dword ptr [rsp + 0x18], eax ; call rcx
0x000000000008398a : mov dword ptr [rsp + 0x18], eax ; call rdx
0x0000000000122395 : mov dword ptr [rsp + 0x18], edx ; lea r9, qword ptr [rsp + 0x40] ; call qword ptr [rax]
0x0000000000130014 : mov dword ptr [rsp + 0x20], 0 ; call rdx
0x0000000000039602 : mov dword ptr [rsp + 0x20], eax ; mov rax, qword ptr [rsp] ; call rax
0x0000000000083956 : mov dword ptr [rsp + 0x20], edx ; mov qword ptr [rsp + 0x18], rax ; call rcx
0x000000000004dec4 : mov dword ptr [rsp + 0x420], edx ; jmp 0x4de98
0x0000000000053c14 : mov dword ptr [rsp + 0x420], edx ; jmp 0x53be8
0x00000000000ecec9 : mov dword ptr [rsp + 0xc], eax ; call 0x1091c6
0x00000000000fcf71 : mov dword ptr [rsp + 8], eax ; call 0x1091c6
0x0000000000083650 : mov dword ptr [rsp + 8], ebx ; call qword ptr [rax]
0x00000000000f7b39 : mov dword ptr [rsp + 8], ebx ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000007edfb : mov dword ptr [rsp + 8], edi ; call 0x7b0c6
0x00000000000838db : mov dword ptr [rsp + 8], edx ; xor edi, edi ; call qword ptr [rax]
0x0000000000036a64 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000004a2c7 : mov dword ptr [rsp - 0x18], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000119467 : mov dword ptr [rsp], 0 ; call rax
0x000000000012eb7e : mov dword ptr [rsp], 2 ; call rdx
0x000000000007c4a2 : mov dword ptr [rsp], eax ; mov rdi, rbx ; call rax
0x00000000000878df : mov dword ptr [rsp], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b809e : mov dword ptr [rsp], ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000056704 : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x00000000000f7647 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000f0baf : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000001381ab : mov dword ptr fs:[rax], 0x26 ; xor eax, eax ; ret
0x0000000000084a17 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000c3a7f : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000024a0f : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00000000000f4e94 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00000000000e2c99 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000e2c3a : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000116ed1 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ecefb : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0xeced0
0x00000000000f36bb : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0xf3690
0x00000000000f377b : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0xf3750
0x000000000003808d : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000038c79 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0x38c4e
0x00000000000fc16b : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0xfc140
0x00000000000fcb1b : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0xfcaf0
0x00000000000fcbeb : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0xfcbc0
0x0000000000038059 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000c5576 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c5640 : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00000000000a3b78 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000013ecc0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000009edc0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000f0d77 : mov eax, 0 ; cmova eax, edx ; ret
0x0000000000047fc9 : mov eax, 0 ; jne 0x47fdc ; push r10 ; ret
0x00000000000484b2 : mov eax, 0 ; jne 0x484c5 ; push r10 ; ret
0x00000000001213f4 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000a4130 : mov eax, 0x10 ; pop rbx ; ret
0x000000000006e890 : mov eax, 0x10 ; ret
0x00000000000f2156 : mov eax, 0x100 ; mov word ptr [rdi + 0x16], ax ; ret
0x0000000000087380 : mov eax, 0x16 ; ret
0x0000000000109784 : mov eax, 0x18 ; syscall ; ret
0x00000000000eba8b : mov eax, 0x1c ; syscall ; neg eax ; ret
0x00000000000c9e92 : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000a4150 : mov eax, 0x20 ; pop rbx ; ret
0x000000000003061b : mov eax, 0x200 ; ret
0x00000000000c9424 : mov eax, 0x27 ; syscall ; ret
0x00000000000a4140 : mov eax, 0x30 ; pop rbx ; ret
0x0000000000083283 : mov eax, 0x39480013 ; ret
0x00000000000a4170 : mov eax, 0x40 ; pop rbx ; ret
0x00000000000c9dd8 : mov eax, 0x40 ; ret
0x000000000010a494 : mov eax, 0x48000557 ; cmove eax, edx ; ret
0x00000000000ebb23 : mov eax, 0x48d001d2 ; cmp edi, esi ; ja 0xebb21 ; ret
0x000000000002cbe0 : mov eax, 0x5b000000 ; pop r12 ; ret
0x000000000012b684 : mov eax, 0x5b000000 ; pop rbp ; ret
0x00000000000ec2e4 : mov eax, 0x5f ; syscall ; ret
0x00000000000a4160 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000c9444 : mov eax, 0x66 ; syscall ; ret
0x00000000000c9464 : mov eax, 0x68 ; syscall ; ret
0x00000000000c9454 : mov eax, 0x6b ; syscall ; ret
0x00000000000c9474 : mov eax, 0x6c ; syscall ; ret
0x00000000000c9434 : mov eax, 0x6e ; syscall ; ret
0x00000000000c9704 : mov eax, 0x6f ; syscall ; ret
0x00000000000c9d20 : mov eax, 0x7e ; ret
0x00000000000c9e62 : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00000000001192a0 : mov eax, 0x7fffffff ; ret
0x00000000000a4110 : mov eax, 0x80 ; pop rbx ; ret
0x00000000000a4027 : mov eax, 0x80000006 ; cpuid ; jmp 0xa3ffb
0x00000000000e8760 : mov eax, 0x89000000 ; ret 0xbd41
0x0000000000109f10 : mov eax, 0x89483f74 ; ret
0x000000000003ebd2 : mov eax, 0x89490013 ; ret
0x000000000012c178 : mov eax, 0x894c0005 ; out 0x89, eax ; ret
0x000000000012740f : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d1601 : mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000ead74 : mov eax, 0xc ; pop rbx ; pop rbp ; ret
0x00000000000b78b4 : mov eax, 0xc9 ; syscall ; ret
0x0000000000109152 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x000000000012c74a : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000fc344 : mov eax, 0xe4 ; syscall ; ret
0x00000000000f83f7 : mov eax, 0xfad2a3e8 ; dec dword ptr [rax + 0x39] ; ret
0x00000000000c9d10 : mov eax, 0xfc17 ; ret
0x00000000000c9cb5 : mov eax, 0xfde8 ; cmovne rax, rdx ; ret
0x00000000000c9d8f : mov eax, 0xff ; cmovne rax, rdx ; ret
0x00000000000c9c82 : mov eax, 0xfffa ; cmovne rax, rdx ; ret
0x00000000000c9d30 : mov eax, 0xfffa ; ret
0x00000000001382a9 : mov eax, 0xfffffffe ; ret
0x00000000001171cb : mov eax, 0xffffffff ; jmp 0x11719b
0x0000000000038c7c : mov eax, 0xffffffff ; jmp 0x38c4b
0x00000000000ecefe : mov eax, 0xffffffff ; jmp 0xececd
0x00000000000f36be : mov eax, 0xffffffff ; jmp 0xf368d
0x00000000000f377e : mov eax, 0xffffffff ; jmp 0xf374d
0x00000000000fc16e : mov eax, 0xffffffff ; jmp 0xfc13d
0x00000000000fcb1e : mov eax, 0xffffffff ; jmp 0xfcaed
0x00000000000fcbee : mov eax, 0xffffffff ; jmp 0xfcbbd
0x00000000000597f8 : mov eax, 0xffffffff ; mov qword ptr [rdi], rcx ; ret
0x0000000000119221 : mov eax, 0xffffffff ; mov rdx, rax ; ret
0x000000000003a0de : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ae4af : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r14 ; ret
0x0000000000073724 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000035ede : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000037c5f : mov eax, 0xffffffff ; ret
0x000000000007a8be : mov eax, 0xffffffff ; test edx, edx ; je 0x7a8d9 ; ret
0x000000000007acde : mov eax, 0xffffffff ; test edx, edx ; je 0x7acf9 ; ret
0x00000000000f43b3 : mov eax, 1 ; add rsp, 8 ; ret
0x0000000000167160 : mov eax, 1 ; jg 0x167179 ; neg eax ; ret
0x00000000000b5f30 : mov eax, 1 ; jg 0xb5f42 ; neg eax ; ret
0x0000000000163f26 : mov eax, 1 ; jl 0x163f39 ; neg eax ; ret
0x0000000000123fb0 : mov eax, 1 ; jmp 0x123f7f
0x000000000012fa16 : mov eax, 1 ; jmp 0x12f9e6
0x000000000012faa6 : mov eax, 1 ; jmp 0x12fa76
0x0000000000052654 : mov eax, 1 ; jmp rax
0x00000000000d1260 : mov eax, 1 ; mov byte ptr [rdi], 0x5b ; ret
0x000000000012fb21 : mov eax, 1 ; mov dword ptr [rdi + 0x28], edx ; ret
0x000000000012fc15 : mov eax, 1 ; mov qword ptr [rdi + 0x18], rdx ; ret
0x000000000004a145 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x000000000012a774 : mov eax, 1 ; movups xmmword ptr [rdi + 0x20], xmm2 ; ret
0x000000000012a744 : mov eax, 1 ; movups xmmword ptr [rdi + 0x30], xmm0 ; ret
0x0000000000127314 : mov eax, 1 ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x0000000000127325 : mov eax, 1 ; movups xmmword ptr [rdx], xmm1 ; ret
0x0000000000129e85 : mov eax, 1 ; movups xmmword ptr [rdx], xmm2 ; ret
0x000000000012a785 : mov eax, 1 ; movups xmmword ptr [rdx], xmm3 ; ret
0x000000000012a765 : mov eax, 1 ; movups xmmword ptr [rdx], xmm4 ; ret
0x00000000000e6c7f : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x0000000000088b53 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026484 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000075524 : mov eax, 1 ; pop rbx ; ret
0x0000000000038972 : mov eax, 1 ; ret
0x00000000000ca254 : mov eax, 1 ; test edi, edi ; js 0xca269 ; ret
0x000000000004a337 : mov eax, 2 ; ret
0x0000000000109979 : mov eax, 3 ; cmovne eax, edx ; ret
0x00000000000b6a11 : mov eax, 3 ; ret
0x0000000000117246 : mov eax, 3 ; syscall ; ret
0x00000000000b6a21 : mov eax, 4 ; ret
0x0000000000109baf : mov eax, 5 ; pop r12 ; pop rbp ; ret
0x00000000000e7b98 : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000000b6a31 : mov eax, 5 ; ret
0x00000000000b6a41 : mov eax, 6 ; ret
0x00000000000b6a51 : mov eax, 7 ; ret
0x00000000000a4120 : mov eax, 8 ; pop rbx ; ret
0x00000000000250b0 : mov eax, 8 ; ret
0x00000000000eaf79 : mov eax, 9 ; pop rbp ; pop r12 ; ret
0x00000000001096e6 : mov eax, dword ptr [0x10] ; ret
0x000000000012eaf8 : mov eax, dword ptr [rax + 0x10] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000f9ad1 : mov eax, dword ptr [rax + 0x160] ; ret
0x00000000001373c3 : mov eax, dword ptr [rax + 0x170] ; jmp rax
0x00000000000fe818 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000012eb28 : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000fe800 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000011cefb : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x11cf0f ; ret
0x00000000000f30bc : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xf30cd ; ret
0x0000000000077566 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000108a81 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000000000fee8b : mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000f9820 : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x0000000000129d71 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000077f18 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000012a6c1 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003ad2e : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000007f120 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x7f120 ; ret
0x000000000002f362 : mov eax, dword ptr [rax + 0xa8] ; ret
0x00000000000f9aaa : mov eax, dword ptr [rax + 8] ; ret
0x00000000000a467b : mov eax, dword ptr [rax + rax*4] ; sub eax, dword ptr [r8 + r9*4] ; je 0xa4669 ; ret
0x000000000002dbeb : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x2dbfd ; call rax
0x0000000000030619 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000003080b : mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000030123 : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000030177 : mov eax, dword ptr [rax + rdx] ; ret
0x00000000000ff838 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000002f360 : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x00000000000305f0 : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000003ad2b : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000011cfed : mov eax, dword ptr [rax] ; ret
0x0000000000109617 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x109627 ; call rax
0x0000000000081989 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x81999 ; call rax
0x00000000000253b0 : mov eax, dword ptr [rbp - 0x68] ; call rax
0x000000000007e891 : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000107f41 : mov eax, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x000000000007a4f5 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000007eddd : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000123b8b : mov eax, dword ptr [rbx + 8] ; mov rsi, r12 ; mov rdi, rbx ; call qword ptr [rax]
0x000000000012c5de : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x12c5f8 ; pop rbx ; ret
0x000000000009b9b9 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000014d806 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000014d816 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000009ba3d : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000009ba5d : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000156f0a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000a461d : mov eax, dword ptr [rcx + rax*4] ; sub eax, dword ptr [rcx + r8*4] ; je 0xa4611 ; ret
0x00000000001587e2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000151b00 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000009b965 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000151a51 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000014d721 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000151ad1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000009b936 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000075bb2 : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x000000000007fed4 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000007fefc : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000011d0e5 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x11d0f8 ; pop rbx ; ret
0x000000000012fae5 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000c3c45 : mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000016bce5 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x16bcfc ; call rax
0x00000000000b5eb0 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xb5f38 ; ret
0x00000000000b5ec5 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xb5f38 ; ret
0x0000000000122d6f : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012fe74 : mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000007a549 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000b5ed0 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xb5f38 ; ret
0x00000000000b5eeb : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xb5f38 ; ret
0x00000000000b5f00 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xb5f38 ; ret
0x00000000000b5f15 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xb5f38 ; ret
0x00000000000b5f20 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xb5f38 ; ret
0x0000000000122daf : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000007a429 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000077f15 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000d5bd0 : mov eax, dword ptr [rdi + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d5bf0 : mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000801a5 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000078b4c : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x78b5f ; ret
0x00000000000eb104 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000f1c84 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000012ed06 : mov eax, dword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000012ee01 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000012cf0c : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000123ae1 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000a4af5 : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xa4ad0 ; ret
0x000000000007a4a4 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000007a474 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000127390 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000080ad5 : mov eax, dword ptr [rdi] ; mov dword ptr [rip + 0x13fcaf], eax ; ret
0x000000000007fec6 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000080b75 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x13d5ca], rax ; ret
0x0000000000080b65 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x13d5d2], rax ; ret
0x0000000000080b15 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x13d5da], rax ; ret
0x0000000000080b05 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x13d5f2], rax ; ret
0x0000000000109230 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000c3c84 : mov eax, dword ptr [rdi] ; ret
0x000000000007b464 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x000000000007b474 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x00000000001280e8 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1280f6 ; ret
0x00000000001280e7 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1280f7 ; ret
0x000000000012d5d8 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12d5e6 ; ret
0x000000000012d5d7 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12d5e7 ; ret
0x00000000001096be : mov eax, dword ptr [rdx + 0x10] ; test rax, rax ; je 0x10969d ; call rax
0x0000000000077edf : mov eax, dword ptr [rdx + 0x4c] ; cmp dword ptr [rdx + 0x48], eax ; cmovne eax, ecx ; ret
0x00000000000e3bb1 : mov eax, dword ptr [rdx + 8] ; ret
0x00000000001096d1 : mov eax, dword ptr [rdx + 8] ; test rax, rax ; je 0x10969d ; call rax
0x00000000000305a7 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000096d46 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000002f321 : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000075717 : mov eax, dword ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000dfd9c : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000073850 : mov eax, dword ptr [rdx] ; ret
0x000000000007feb9 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x7feb7 ; ret
0x00000000000889a2 : mov eax, dword ptr [rip + 0x1355a8] ; call qword ptr [rax]
0x0000000000088861 : mov eax, dword ptr [rip + 0x1356e9] ; call qword ptr [rax]
0x00000000000887a1 : mov eax, dword ptr [rip + 0x1357a9] ; call qword ptr [rax]
0x00000000000858b9 : mov eax, dword ptr [rip + 0x138609] ; mov qword ptr [rax], rdi ; ret
0x000000000008203f : mov eax, dword ptr [rip + 0x13be83] ; mov qword ptr [rax], rdx ; ret
0x0000000000080185 : mov eax, dword ptr [rip + 0x13f335] ; ret
0x0000000000038a54 : mov eax, dword ptr [rip + 0x1855ae] ; ret
0x0000000000038a44 : mov eax, dword ptr [rip + 0x1855c2] ; ret
0x00000000000300d1 : mov eax, dword ptr [rip + 0x18dcb9] ; mov qword ptr [rax], rdx ; ret
0x000000000002ca85 : mov eax, dword ptr [rip + 0x192e05] ; ret
0x00000000000251d5 : mov eax, dword ptr [rip + 0x19df5d] ; ret
0x00000000000251c5 : mov eax, dword ptr [rip + 0x19df75] ; ret
0x0000000000134cf8 : mov eax, dword ptr [rip + 0x8a6b2] ; call qword ptr [rax]
0x0000000000134707 : mov eax, dword ptr [rip + 0x8aca3] ; call qword ptr [rax]
0x0000000000137621 : mov eax, dword ptr [rip + 0x8bae1] ; call qword ptr [rax]
0x00000000000fee85 : mov eax, dword ptr [rip + 0xbef9d] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000011d67a : mov eax, dword ptr [rsi + 0x18] ; cmp dword ptr [rdi + 0x18], eax ; sete al ; ret
0x0000000000030805 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000030815 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002f341 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000b765f : mov eax, dword ptr [rsp + 0x10] ; call rax
0x000000000002421d : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000122a23 : mov eax, dword ptr [rsp + 0x28] ; call rax
0x0000000000038141 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c862b : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x0000000000030d96 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000114a0b : mov eax, dword ptr [rsp + 8] ; call rax
0x000000000007b09f : mov eax, dword ptr [rsp + 8] ; jmp 0x7b06c
0x00000000000feee7 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000fef48 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000039607 : mov eax, dword ptr [rsp] ; call rax
0x0000000000081f8f : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000118c6c : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000086763 : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000743c4 : mov eax, eax ; pop rbx ; ret
0x0000000000089095 : mov eax, eax ; ret
0x0000000000161944 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x000000000015fa51 : mov eax, eax ; vzeroupper ; ret
0x0000000000089142 : mov eax, ebp ; mov rdx, rbx ; pop rbx ; pop rbp ; ret
0x000000000012b787 : mov eax, ebp ; mov rsi, rbx ; mov rdi, rax ; call qword ptr [r10]
0x000000000002fed6 : mov eax, ebp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f78c4 : mov eax, ebp ; pop rbp ; pop r12 ; jmp rax
0x000000000002fe97 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000030e97 : mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000007a9e8 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000030e79 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005390b : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000048863 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000007aec0 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001380c2 : mov eax, ebx ; jne 0x1380d5 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000f96df : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000011f838 : mov eax, ebx ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000008cdea : mov eax, ebx ; pop rbx ; cmovne rax, rdi ; ret
0x0000000000072b9c : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002d3ea : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000347fa : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000003b06c : mov eax, ebx ; pop rbx ; ret
0x00000000000f703e : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000004872b : mov eax, ecx ; adc eax, eax ; ret
0x00000000000f4f69 : mov eax, ecx ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000598e8 : mov eax, ecx ; pop r14 ; ret
0x0000000000059827 : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000877ae : mov eax, ecx ; pop rbx ; pop rbp ; ret
0x0000000000035e64 : mov eax, ecx ; ret
0x0000000000030664 : mov eax, edi ; and eax, 0x7f ; ret
0x000000000010d498 : mov eax, edi ; and eax, 0xffffff ; ret
0x00000000000a4e61 : mov eax, edi ; and edx, 3 ; jne 0xa4e7f ; ret
0x000000000010d454 : mov eax, edi ; bswap eax ; ret
0x000000000003aca5 : mov eax, edi ; cqo ; idiv rsi ; ret
0x0000000000073b78 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000742c5 : mov eax, edi ; mov dword ptr [rcx], edi ; ret
0x00000000000249ff : mov eax, edi ; neg eax ; ret
0x00000000000d14f4 : mov eax, edi ; pop r14 ; pop r15 ; neg eax ; ret
0x00000000000817a3 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x0000000000090e3d : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000024a16 : mov eax, edi ; ret
0x000000000010d464 : mov eax, edi ; rol ax, 8 ; ret
0x000000000003ac36 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000010d32e : mov eax, edi ; sar rax, 6 ; ret
0x000000000010d518 : mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000047d47 : mov eax, edx ; add rsp, 8 ; ret
0x000000000008c374 : mov eax, edx ; cmovne rax, rdi ; ret
0x00000000000d2c93 : mov eax, edx ; cmp rdx, rcx ; jne 0xd2c8f ; ret
0x000000000011a85d : mov eax, edx ; jne 0x11a86e ; add rsp, 0x18 ; ret
0x000000000012bcfc : mov eax, edx ; jne 0x12bd0d ; add rsp, 0x18 ; ret
0x0000000000130187 : mov eax, edx ; jne 0x13019a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001301fa : mov eax, edx ; jne 0x13020d ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013a227 : mov eax, edx ; jne 0x13a23a ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013a2ad : mov eax, edx ; jne 0x13a2c0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000b6fea : mov eax, edx ; jne 0xb6ffb ; add rsp, 0x28 ; ret
0x00000000000f312a : mov eax, edx ; jne 0xf3147 ; add rsp, 0x28 ; ret
0x00000000000f3ca9 : mov eax, edx ; jne 0xf3cba ; add rsp, 0x58 ; ret
0x0000000000118d80 : mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x0000000000118dd6 : mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x0000000000119213 : mov eax, edx ; movsxd rdx, esi ; ret
0x00000000000c5484 : mov eax, edx ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000085d45 : mov eax, edx ; pop r12 ; ret
0x00000000000c53ad : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000085a48 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000566b2 : mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000731cf : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000585cb : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070e05 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000473d2 : mov eax, edx ; pop rbx ; ret
0x0000000000038aa9 : mov eax, edx ; ret
0x000000000010495f : mov eax, edx ; shl rdx, 2 ; jmp 0x104931
0x00000000000c5733 : mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000c4e99 : mov eax, esi ; add rsp, 8 ; ret
0x00000000000c47a6 : mov eax, esi ; call rax
0x0000000000037ad4 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x000000000010b0fb : mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000071649 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006eb81 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006edfb : mov eax, esi ; pop rbx ; ret
0x000000000004d9ab : mov eax, esi ; ret
0x00000000000759c6 : mov eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008c17e : mov eax, esp ; pop r12 ; ret
0x000000000007596f : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000310d7 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007aaaa : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078c4a : mov eax, r10d ; pop rbx ; ret
0x0000000000078c65 : mov eax, r10d ; ret
0x00000000000ebb8d : mov eax, r12d ; pop r12 ; ret
0x00000000000ebb7b : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127944 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d14f3 : mov eax, r15d ; pop r14 ; pop r15 ; neg eax ; ret
0x0000000000118c6b : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000743c3 : mov eax, r8d ; pop rbx ; ret
0x0000000000118c5f : mov eax, r8d ; ret
0x0000000000053c72 : mov eax, r9d ; ret
0x00000000000945b1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000945c1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000945a1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000015bbc1 : mov ebp, 0x60c083c0 ; add rax, rdi ; ret
0x0000000000109e38 : mov ebp, 0x75c08500 ; mov cl, byte ptr [rax - 0x7d] ; ret
0x0000000000094621 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000015bbf1 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000094601 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000945e1 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000946c7 : mov ebp, 0xf80148c0 ; add rax, rsi ; ret
0x00000000000944f7 : mov ebp, 0xf80148c0 ; ret
0x000000000015bab0 : mov ebp, 0xf80148c0 ; vzeroupper ; ret
0x0000000000099afc : mov ebp, 0xf80148c6 ; ret
0x000000000005a6b1 : mov ebp, 0xfffff730 ; call rax
0x0000000000064883 : mov ebp, 0xfffff938 ; add byte ptr [rdi], cl ; test eax, eax ; ret
0x000000000005cfa8 : mov ebp, 0xfffffb08 ; add byte ptr [rcx - 0x77], al ; ret 0x1d74
0x00000000000e534b : mov ebp, 0xfffffe38 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd009
0x00000000000e51ba : mov ebp, 0xfffffe58 ; mov rcx, qword ptr [r15] ; call r12
0x00000000000e4c83 : mov ebp, 0xfffffe68 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd009
0x0000000000023d3f : mov ebp, eax ; call 0xa3fc8
0x0000000000023c07 : mov ebp, eax ; call 0xa4458
0x000000000011f94c : mov ebp, eax ; mov rdi, rbx ; call rax
0x0000000000037ada : mov ebp, ecx ; jmp rdx
0x0000000000133341 : mov ebp, edi ; out dx, al ; push qword ptr [rcx] ; ror byte ptr [rax - 0x77], cl ; ret
0x00000000000629ef : mov ebp, esp ; jmp 0x629b9
0x00000000001223e0 : mov ebx, 0x10 ; jmp 0x1223bc
0x000000000003d242 : mov ebx, 0x83480000 ; ret
0x0000000000109188 : mov ebx, 0xafb8341 ; je 0x109197 ; ret
0x000000000012729a : mov ebx, 0xc8 ; call rax
0x00000000000d95f4 : mov ebx, 0xf708588b ; ret
0x000000000005e5d1 : mov ebx, 1 ; jmp rax
0x000000000005c8d1 : mov ebx, 1 ; xor ecx, ecx ; jmp rax
0x000000000004752e : mov ebx, dword ptr [r14 - 4] ; jmp 0x474fc
0x000000000006ade0 : mov ebx, dword ptr [rbp - 0x57c] ; jmp 0x670a8
0x00000000000c8e14 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x000000000004752f : mov ebx, dword ptr [rsi - 4] ; jmp 0x474fb
0x000000000007b6ff : mov ebx, eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb921 : mov ebx, edi ; mov rdi, rcx ; sub rsp, 8 ; call rsi
0x00000000000ecea9 : mov ebx, edi ; sub rsp, 0x10 ; call 0x109168
0x000000000002eb5a : mov ebx, edi ; test rax, rax ; je 0x2eb6a ; call rax
0x00000000000d31a1 : mov ebx, edx ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x00000000000f7555 : mov ebx, esi ; je 0xf7565 ; pop rbx ; ret
0x000000000007b711 : mov ebx, esp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004d84b : mov ecx, 0x3a8 ; mov rsp, rdx ; ret
0x00000000000c4613 : mov ecx, 0x4100072d ; call rsi
0x00000000000300d3 : mov ecx, 0x480018dc ; mov dword ptr [rax], edx ; ret
0x00000000001219eb : mov ecx, 0x900009c5 ; pop rbx ; ret
0x000000000005e556 : mov ecx, 1 ; jmp rax
0x000000000005e541 : mov ecx, 1 ; xor edx, edx ; jmp rax
0x0000000000078a23 : mov ecx, dword ptr [r8 + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x789d6
0x0000000000078b23 : mov ecx, dword ptr [r8 + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x78ad6
0x0000000000078a24 : mov ecx, dword ptr [rax + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x789d5
0x0000000000078b24 : mov ecx, dword ptr [rax + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x78ad5
0x000000000002d94b : mov ecx, dword ptr [rax + rsi*8] ; test rcx, rcx ; je 0x2d95d ; call rcx
0x00000000001424ae : mov ecx, dword ptr [rbp + 1] ; fnstcw word ptr [rsi] ; jmp r9
0x00000000000259b5 : mov ecx, dword ptr [rbp - 0x70] ; call rcx
0x0000000000080949 : mov ecx, dword ptr [rbx + 0x50] ; jmp 0x80915
0x0000000000120efb : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x00000000000ffffc : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x10000f ; ret
0x0000000000100059 : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x10006f ; ret
0x00000000000ff6ba : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0xff6cf ; ret
0x00000000000ff725 : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0xff737 ; ret
0x00000000001640c0 : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000104536 : mov ecx, dword ptr [rcx] ; test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x000000000012fc24 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x12fc39 ; xor eax, eax ; ret
0x000000000012fc64 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x12fc79 ; xor eax, eax ; ret
0x000000000013cefe : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x00000000000c51d8 : mov ecx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000e51c0 : mov ecx, dword ptr [rdi] ; call r12
0x0000000000096d43 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000a4ae9 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xa4ae6 ; ret
0x000000000013f283 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013f483 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013f683 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000d538a : mov ecx, dword ptr [rsi] ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000009edf0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000009ee31 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000144d23 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000144cb3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000144c43 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000144b65 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000144af5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000144a85 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000144a15 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001449a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000144935 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001448c5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000144e05 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000009edd1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000127564 : mov ecx, dword ptr [rsp + 0x28] ; call rcx
0x0000000000122970 : mov ecx, dword ptr [rsp + 8] ; call rcx
0x00000000000904c9 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000001213e4 : mov ecx, ebx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000008aab1 : mov ecx, edi ; or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000fefbd : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x00000000000a3b46 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000007f044 : mov ecx, edx ; xor edx, edx ; pop rbx ; jmp rax
0x000000000011f83b : mov ecx, esi ; mov rdi, r13 ; call r12
0x00000000000a58f0 : mov ecx, esi ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000104081 : mov edi, 0x2000004 ; call rcx
0x000000000010d567 : mov edi, 0x4858fff4 ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000712eb : mov edi, 0xe0 ; call rax
0x00000000000712af : mov edi, 0xe0 ; jmp rax
0x00000000000a40c6 : mov edi, 0xe8c1000d ; or al, 0x89 ; ret 0xe283
0x00000000000eb9ac : mov edi, 0xf8 ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x00000000000eba40 : mov edi, 0xf8 ; ret
0x0000000000073419 : mov edi, 0xf8890000 ; ret
0x0000000000063773 : mov edi, 2 ; jmp 0x5f9e7
0x000000000003a457 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x00000000000d682d : mov edi, dword ptr [rax + rbx*8] ; add rbx, 1 ; call 0xd2ae9
0x0000000000115fdd : mov edi, dword ptr [rax] ; mov esi, 0x2e ; call 0x222e9
0x000000000016b970 : mov edi, dword ptr [rbp + 0x10] ; add rdi, rbx ; call r12
0x000000000005a6b0 : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x0000000000039675 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp] ; call rax
0x0000000000088a41 : mov edi, dword ptr [rbx + 0x48] ; call rax
0x00000000000889c2 : mov edi, dword ptr [rbx + 0x48] ; mov rsi, r13 ; call rax
0x000000000003abfa : mov edi, dword ptr [rbx + 8] ; call rax
0x00000000001280e5 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1280f9 ; ret
0x000000000012d5d5 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12d5e9 ; ret
0x00000000000888bd : mov edi, dword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x00000000000712ea : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x00000000000712ae : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x0000000000117244 : mov edi, dword ptr [rdi] ; mov eax, 3 ; syscall ; ret
0x0000000000107924 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000016bfb5 : mov edi, dword ptr [rip + 0x53c05] ; call 0xf8248
0x0000000000137f4c : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000027400 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x00000000000c4933 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000047994 : mov edi, dword ptr [rsp + 0x24] ; call rax
0x0000000000027bd3 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x00000000000284a4 : mov edi, dword ptr [rsp + 0x30] ; call r15
0x0000000000027d5f : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000029c7f : mov edi, dword ptr [rsp + 0x30] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000027986 : mov edi, dword ptr [rsp + 0x38] ; call r14
0x00000000000280f3 : mov edi, dword ptr [rsp + 0x38] ; call r15
0x0000000000029473 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000029032 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002af04 : mov edi, dword ptr [rsp + 0x48] ; call r14
0x0000000000028834 : mov edi, dword ptr [rsp + 0x48] ; call r15
0x0000000000036004 : mov edi, dword ptr [rsp + 8] ; call 0x222d6
0x00000000000c4686 : mov edi, dword ptr [rsp + 8] ; call r12
0x000000000003913b : mov edi, dword ptr [rsp + 8] ; call rbx
0x000000000012c164 : mov edi, dword ptr [rsp] ; call rax
0x000000000012b78d : mov edi, eax ; call qword ptr [r10]
0x0000000000120ef8 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000122aed : mov edi, ebp ; call 0x12ed24
0x0000000000123008 : mov edi, ebp ; call 0x12f224
0x000000000003d23e : mov edi, ebp ; call 0x48e39
0x0000000000123723 : mov edi, ebp ; call qword ptr [rbx]
0x0000000000031bbf : mov edi, ebp ; call qword ptr [rip + 0x18c211]
0x00000000000e9e0d : mov edi, ebp ; call qword ptr [rip + 0xd4193]
0x00000000000d1169 : mov edi, ebp ; call r12
0x00000000000f82ac : mov edi, ebp ; call r14
0x00000000000242b1 : mov edi, ebp ; call rax
0x000000000012fcf5 : mov edi, ebp ; call rcx
0x0000000000121e79 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x20] ; call qword ptr [rax]
0x00000000000a57a1 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x30] ; call rbx
0x00000000000f7cf9 : mov edi, ebp ; mov dword ptr [rbp - 0x50], r15d ; call r14
0x000000000008364d : mov edi, ebp ; mov qword ptr [rsp + 8], r11 ; call qword ptr [rax]
0x00000000000fcf6e : mov edi, ebp ; mov qword ptr [rsp + 8], rax ; call 0x1091c9
0x00000000000396c1 : mov edi, ebp ; mov rax, qword ptr [rsp] ; call rax
0x00000000000259b2 : mov edi, ebp ; mov rcx, qword ptr [rbp - 0x70] ; call rcx
0x0000000000127561 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000012777c : mov edi, ebp ; mov rdx, qword ptr [rsp + 0x20] ; call rdx
0x000000000010556f : mov edi, ebp ; mov rdx, rax ; pop rbp ; pop r12 ; jmp rcx
0x00000000000a5b90 : mov edi, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000114d55 : mov edi, ebp ; mov rsi, qword ptr [rsp] ; call r12
0x0000000000122b01 : mov edi, ebp ; pop rbx ; pop rbp ; jmp 0x12ed26
0x0000000000122bed : mov edi, ebp ; pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x000000000011490d : mov edi, ebx ; call 0x120b19
0x000000000010c0bd : mov edi, ebx ; call 0x782e5
0x0000000000102606 : mov edi, ebx ; call 0x7e854
0x0000000000123b92 : mov edi, ebx ; call qword ptr [rax]
0x0000000000071ad6 : mov edi, ebx ; call qword ptr [rip + 0x14c2fa]
0x000000000002ca3c : mov edi, ebx ; call r12
0x000000000011f94f : mov edi, ebx ; call rax
0x00000000001232b7 : mov edi, ebx ; call rdx
0x00000000000253ad : mov edi, ebx ; mov rax, qword ptr [rbp - 0x68] ; call rax
0x0000000000136fd6 : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000114a08 : mov edi, ebx ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000001153e1 : mov edi, ebx ; mov rax, qword ptr [rsp] ; call rax
0x00000000000f78c0 : mov edi, ebx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000072c8c : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000075353 : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000007c20e : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000011d4ea : mov edi, ebx ; test rbx, rbx ; jne 0x11d4e8 ; pop rbx ; ret
0x000000000016c000 : mov edi, ebx ; test rbx, rbx ; jne 0x16bff8 ; pop rbx ; ret
0x000000000012296b : mov edi, ebx ; xor eax, eax ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000003a993 : mov edi, ecx ; call rdx
0x00000000000fb924 : mov edi, ecx ; sub rsp, 8 ; call rsi
0x00000000000dcd68 : mov edi, edi ; add rax, rsi ; jmp rax
0x0000000000049e11 : mov edi, edi ; call 0x49f28
0x0000000000034567 : mov edi, edi ; call 0x70865
0x00000000000693a3 : mov edi, edi ; call 0x75624
0x000000000012cf13 : mov edi, edi ; call qword ptr [rax]
0x0000000000039167 : mov edi, edi ; call rbx
0x000000000007a075 : mov edi, edi ; dec dword ptr [rax - 0x77] ; ret 0x38b
0x00000000000782a8 : mov edi, edi ; lea r9, qword ptr [rbp - 0x40] ; call r12
0x000000000012aa5f : mov edi, edi ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000087f27 : mov edi, edi ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x00000000000ffac4 : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000109233 : mov edi, edx ; jmp rax
0x00000000000ecec7 : mov edi, edx ; mov dword ptr [rsp + 0xc], eax ; call 0x1091c8
0x0000000000107081 : mov edi, esi ; call 0x103304
0x0000000000088a6e : mov edi, esi ; call rax
0x00000000000f0b94 : mov edi, esp ; call 0xece84
0x0000000000031b8e : mov edi, esp ; call qword ptr [rip + 0x18c242]
0x0000000000031cc4 : mov edi, esp ; call qword ptr [rip + 0x18c2dc]
0x000000000008816c : mov edi, esp ; call rax
0x0000000000039128 : mov edi, esp ; call rbx
0x0000000000123d2c : mov edi, esp ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000078094 : mov edi, esp ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x0000000000077f9f : mov edi, esp ; lea r9, qword ptr [rsp + 0x18] ; call rbx
0x000000000012eb7c : mov edi, esp ; mov dword ptr [rsp], 2 ; call rdx
0x00000000000f0b93 : mov edi, r12d ; call 0xece85
0x00000000000fd6da : mov edx, 0 ; cmovb rax, rdx ; ret
0x000000000008cb36 : mov edx, 0 ; cmove rax, rdx ; ret
0x000000000008cb00 : mov edx, 0 ; cmovne rax, rdx ; ret
0x00000000000a4056 : mov edx, 0 ; pop rbx ; cmove rax, rdx ; ret
0x000000000007bb4e : mov edx, 0x130 ; pop rbx ; ret
0x00000000000c9dc9 : mov edx, 0x20 ; cmovne rax, rdx ; ret
0x000000000016a289 : mov edx, 0x21482fea ; ret 0x36e9
0x00000000000cd316 : mov edx, 0x3ed00148 ; jmp rax
0x0000000000035623 : mov edx, 0x3ed7014c ; jmp rdi
0x00000000000ec663 : mov edx, 0x48000000 ; add esp, 0x78 ; ret
0x00000000000c9cd5 : mov edx, 0x7f ; cmovne rax, rdx ; ret
0x0000000000119292 : mov edx, 0x7fffffff ; cmovs eax, edx ; ret
0x000000000010238b : mov edx, 0x8948000b ; ret 0x8948
0x0000000000167980 : mov edx, 0x894c33f0 ; ret 0x5e9
0x00000000000779d1 : mov edx, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000003751d : mov edx, 0x9483ff2 ; ret 0x840f
0x0000000000089468 : mov edx, 0xffffffff ; cmovbe eax, edx ; ret
0x000000000002fff8 : mov edx, 0xffffffff ; cmove rax, rdx ; ret
0x000000000002720b : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000047d50 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x0000000000050c53 : mov edx, 1 ; jmp rax
0x00000000000e3bf4 : mov edx, 2 ; cmove eax, edx ; ret
0x000000000007a4dc : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x000000000016bbd8 : mov edx, dword ptr [rax + rbx*8] ; test rdx, rdx ; je 0x16bbea ; call rdx
0x000000000002421a : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000107fc9 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000108928 : mov edx, dword ptr [rbp + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000101789 : mov edx, dword ptr [rbx] ; pop rbx ; pop rbp ; pop r12 ; mov eax, edx ; ret
0x00000000001587df : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000156f0d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000010022e : mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x100247 ; ret
0x000000000003015e : mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x30177 ; ret
0x00000000000ff90e : mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0xff927 ; ret
0x00000000000fc1a8 : mov edx, dword ptr [rcx] ; cmp edx, 0x26 ; je 0xfc1f2 ; ret
0x000000000010922c : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000e500d : mov edx, dword ptr [rdi] ; call r12
0x0000000000160322 : mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x160312 ; ret
0x00000000000a523e : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000047ff6 : mov edx, dword ptr [rdx + 0x88] ; xor eax, eax ; ret
0x0000000000088ac5 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x88ac8 ; ret
0x00000000000d2efb : mov edx, dword ptr [rsi + 0x20] ; mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x000000000009ee12 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000009ee03 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009ee53 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009ee63 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000013ecc1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000013f080 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013e911 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a0420 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a1270 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009ede0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a2ed0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a0471 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a12c1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009ee21 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0401 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a1241 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009edc1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000137f51 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x00000000001218f9 : mov edx, dword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000012777f : mov edx, dword ptr [rsp + 0x20] ; call rdx
0x0000000000101788 : mov edx, dword ptr fs:[rbx] ; pop rbx ; pop rbp ; pop r12 ; mov eax, edx ; ret
0x00000000000fc1a7 : mov edx, dword ptr fs:[rcx] ; cmp edx, 0x26 ; je 0xfc1f3 ; ret
0x0000000000114bfd : mov edx, eax ; jmp 0x114b89
0x000000000003635c : mov edx, eax ; jmp 0x3638a
0x000000000003653e : mov edx, eax ; jmp 0x36568
0x00000000000569f3 : mov edx, eax ; jmp 0x56a04
0x00000000000736ba : mov edx, eax ; jmp 0x73653
0x0000000000078a2a : mov edx, eax ; jmp 0x789cf
0x0000000000078b2a : mov edx, eax ; jmp 0x78acf
0x0000000000078c7c : mov edx, eax ; jmp 0x78c04
0x0000000000079130 : mov edx, eax ; jmp 0x790ba
0x0000000000079255 : mov edx, eax ; jmp 0x791e5
0x000000000007954c : mov edx, eax ; jmp 0x794d4
0x0000000000079de0 : mov edx, eax ; jmp 0x79d37
0x000000000008c615 : mov edx, eax ; jmp 0x8c634
0x000000000008f56a : mov edx, eax ; jmp 0x8f502
0x000000000008fe4a : mov edx, eax ; jmp 0x8fde2
0x00000000000ef4b1 : mov edx, eax ; jmp 0xef472
0x00000000000f96b4 : mov edx, eax ; jmp 0xf96c7
0x00000000000f9702 : mov edx, eax ; jmp 0xf96df
0x0000000000078a16 : mov edx, eax ; mov eax, edx ; ret
0x0000000000105572 : mov edx, eax ; pop rbp ; pop r12 ; jmp rcx
0x0000000000119228 : mov edx, eax ; ret
0x00000000001081d0 : mov edx, ebp ; call rax
0x0000000000039161 : mov edx, ebp ; mov rsi, r12 ; mov rdi, r15 ; call rbx
0x000000000003917c : mov edx, ebp ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000000392b4 : mov edx, ebp ; mov rsi, r15 ; mov rdi, r12 ; call rbx
0x0000000000103d86 : mov edx, ebp ; mov rsi, r15 ; mov rdi, rbx ; call r12
0x0000000000103af5 : mov edx, ebp ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x00000000000a7211 : mov edx, ebp ; setne dl ; jmp 0xa722b
0x00000000000a9a50 : mov edx, ebp ; setne dl ; jmp 0xa9a6b
0x00000000000ac091 : mov edx, ebp ; setne dl ; jmp 0xac0ab
0x00000000000b2c70 : mov edx, ebp ; setne dl ; jmp 0xb2c8b
0x0000000000108044 : mov edx, ebx ; call rax
0x0000000000087f2a : mov edx, ebx ; mov rsi, r13 ; call rax
0x0000000000088166 : mov edx, ebx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000124626 : mov edx, ebx ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000089145 : mov edx, ebx ; pop rbx ; pop rbp ; ret
0x0000000000087a2e : mov edx, edi ; mov rdi, r13 ; call rax
0x0000000000111dd7 : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000a3eb5 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000137b78 : mov edx, esi ; add r9, qword ptr [rsp + 8] ; call rax
0x0000000000107d9b : mov edx, esi ; call rax
0x000000000010892f : mov edx, esp ; call rax
0x00000000000ea9bc : mov edx, esp ; mov rsi, rbp ; call 0xe6c97
0x00000000000ff928 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x000000000008ac2a : mov es, word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000a108e : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000000000115fdf : mov esi, 0x2e ; call 0x222e7
0x00000000000e1fa4 : mov esi, 0x335e830 ; hlt ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000f5174 : mov esi, 0x3880000c ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000907a6 : mov esi, 0x39410704 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00000000000a400c : mov esi, 0x3ef00148 ; jmp rax
0x00000000000b63fe : mov esi, 0x48000000 ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000907fd : mov esi, 0x75c98408 ; in eax, dx ; xor eax, eax ; ret
0x0000000000026542 : mov esi, 0x83480147 ; ret
0x000000000003e2b2 : mov esi, 0x8348016b ; ret
0x0000000000101eeb : mov esi, 0x8948000b ; ret 0x8548
0x0000000000101fa8 : mov esi, 0x8948000b ; ret 0x8948
0x000000000010d6f6 : mov esi, 0x89480045 ; ret 0xf641
0x0000000000103b74 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000009069d : mov esi, 0xc984070c ; jne 0x90697 ; ret
0x0000000000090659 : mov esi, 0xd2840714 ; jne 0x90657 ; ret
0x0000000000090735 : mov esi, 0xf2390714 ; je 0x90737 ; ret
0x0000000000089286 : mov esi, 0xf48000d ; ret 0x66c3
0x00000000000e33df : mov esi, 0xfc085c0 ; xchg eax, esp ; ret 0x1589
0x00000000000630f3 : mov esi, 0xfff9d0bd ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000051dfe : mov esi, 1 ; jmp rax
0x000000000006fa54 : mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000000f799c : mov esi, dword ptr [rax + 8] ; test sil, 1 ; jne 0xf79c9 ; ret
0x0000000000105942 : mov esi, dword ptr [rdi + 0x38] ; jmp 0x10590e
0x00000000000a3b77 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000001218fe : mov esi, dword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000003943e : mov esi, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000085fc1 : mov esi, dword ptr [rsp + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000a58f3 : mov esi, dword ptr [rsp + 0x18] ; call rbx
0x00000000000b765a : mov esi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000001214b8 : mov esi, dword ptr [rsp + 0x18] ; mov rdi, rbp ; call r14
0x0000000000024fee : mov esi, dword ptr [rsp + 0x18] ; xor r8d, r8d ; call rbx
0x00000000000868d1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000027d5a : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000002946e : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000012c15f : mov esi, dword ptr [rsp + 8] ; mov rdi, qword ptr [rsp] ; call rax
0x0000000000114d58 : mov esi, dword ptr [rsp] ; call r12
0x000000000006c4af : mov esi, eax ; jmp 0x6871d
0x0000000000136e53 : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000079abf : mov esi, ebp ; call 0x50759
0x00000000000ea9bf : mov esi, ebp ; call 0xe6c94
0x0000000000087f2d : mov esi, ebp ; call rax
0x00000000001213e1 : mov esi, ebp ; mov rcx, rbx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000088169 : mov esi, ebp ; mov rdi, r12 ; call rax
0x00000000000878d0 : mov esi, ebp ; mov rdi, rbx ; call rax
0x0000000000103f78 : mov esi, ebp ; xor r15d, r15d ; call rax
0x00000000000f82a9 : mov esi, ebx ; mov rdi, r13 ; call r14
0x0000000000088040 : mov esi, ebx ; mov rdi, r13 ; call rax
0x00000000000396be : mov esi, ebx ; mov rdi, r13 ; mov rax, qword ptr [rsp] ; call rax
0x000000000012cf10 : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000012b78a : mov esi, ebx ; mov rdi, rax ; call qword ptr [r10]
0x00000000000d1166 : mov esi, ebx ; mov rdi, rbp ; call r12
0x000000000012fcf2 : mov esi, ebx ; mov rdi, rbp ; call rcx
0x0000000000039034 : mov esi, edi ; call r14
0x0000000000039121 : mov esi, edi ; lea r12, qword ptr [rdi + rax] ; mov rdi, r12 ; call rbx
0x000000000011f949 : mov esi, edi ; mov rbp, r8 ; mov rdi, rbx ; call rax
0x000000000005a6ad : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x00000000000392b7 : mov esi, edi ; mov rdi, r12 ; call rbx
0x0000000000103d89 : mov esi, edi ; mov rdi, rbx ; call r12
0x00000000000c2eae : mov esi, edi ; xor edi, edi ; call rax
0x0000000000127e3e : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x0000000000107928 : mov esi, edx ; call rax
0x000000000003917f : mov esi, esi ; mov rdi, r12 ; call rbx
0x0000000000111dda : mov esi, esi ; mov rdi, r13 ; call rax
0x00000000000b6f9e : mov esi, esp ; call 0x1099c9
0x0000000000123ae5 : mov esi, esp ; call qword ptr [rax]
0x00000000000cac39 : mov esi, esp ; call qword ptr [rdx]
0x0000000000039138 : mov esi, esp ; mov rdi, qword ptr [rsp + 8] ; call rbx
0x0000000000039164 : mov esi, esp ; mov rdi, r15 ; call rbx
0x0000000000123b8f : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000075350 : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000001161f5 : mov esp, 0x20024 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f5368 : mov esp, 0x3880000c ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008a93b : mov esp, 0x440f48c7 ; ret 0xc083
0x00000000000940b1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000000940e1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000940d1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000024543 : mov esp, 0x752ffa80 ; ret 0xf983
0x0000000000037558 : mov esp, 0x81000000 ; sti ; push rax ; ret
0x00000000000dff70 : mov esp, 0x83000002 ; ret
0x000000000005e56b : mov esp, 0x89000004 ; ret 0xc083
0x00000000001020b2 : mov esp, 0x8948000b ; ret 0x8548
0x0000000000102170 : mov esp, 0x8948000b ; ret 0x8948
0x0000000000054c00 : mov esp, 0x89ffff54 ; ret
0x000000000008a91a : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x0000000000099ca3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00000000000941ab : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x00000000000940c1 : mov esp, 0xf80148c0 ; ret
0x000000000015b7d2 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x00000000000fdec4 : mov esp, 0xfffa9035 ; dec dword ptr [rax - 0x7d] ; ret 0x4802
0x0000000000037ad7 : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x000000000004d851 : mov esp, edx ; ret
0x0000000000123b7d : mov esp, esp ; lea rsi, qword ptr [r12 + 8] ; call qword ptr [rax]
0x000000000008b85e : mov gs, word ptr [rbx - 7] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000108251 : mov gs, word ptr [rdx - 0x77000000] ; ret 0x2944
0x00000000000878de : mov qword ptr [r12], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b809d : mov qword ptr [r12], rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d1a02 : mov qword ptr [r8], r13 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e6d5a : mov qword ptr [r8], r9 ; xor eax, eax ; ret
0x00000000001640b4 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000118d82 : mov qword ptr [r9], r10 ; ret
0x0000000000118dd8 : mov qword ptr [r9], rdi ; ret
0x0000000000074f7c : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000007558b : mov qword ptr [rax + 0x18], rdx ; xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x000000000007a4df : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000d2efe : mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x0000000000074fbd : mov qword ptr [rax + 0x40], rcx ; mov qword ptr [rax], rdx ; ret
0x0000000000074f80 : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000075c6c : mov qword ptr [rax + 0x40], rsi ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000007560e : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000011d0fe : mov qword ptr [rax + 8], 0 ; pop rbx ; ret
0x000000000007f1d8 : mov qword ptr [rax + 8], 0 ; ret
0x00000000000f7a5f : mov qword ptr [rax + 8], r9 ; jmp 0xf7a2c
0x00000000000b86bc : mov qword ptr [rax + 8], rsi ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f271b : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x000000000011b101 : mov qword ptr [rax], 0 ; ret
0x0000000000118b6c : mov qword ptr [rax], r10 ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x000000000007384d : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00000000000858bf : mov qword ptr [rax], rdi ; ret
0x00000000000fb9c6 : mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000300d7 : mov qword ptr [rax], rdx ; ret
0x0000000000075c37 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000011d60b : mov qword ptr [rbp + 0x18], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0557 : mov qword ptr [rbp + 0x20], 0 ; jmp 0xe052d
0x00000000000c90e2 : mov qword ptr [rbp - 0x40], rax ; jmp 0xc907a
0x00000000000655ab : mov qword ptr [rbp - 0x538], rax ; jmp 0x6557e
0x00000000001081cb : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x0000000000055760 : mov qword ptr [rbp - 0xe0], r8 ; call rax
0x000000000003abf5 : mov qword ptr [rbp], rdx ; mov rdi, qword ptr [rbx + 8] ; call rax
0x000000000002d291 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000007badb : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000137499 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000007bfb2 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000012fec9 : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000137451 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000079c43 : mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ff29 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0650 : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000b8a57 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a4f8 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000007e83a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000123e70 : mov qword ptr [rbx + 0x60], r13 ; jmp 0x123e3d
0x00000000000d165b : mov qword ptr [rbx + 8], rax ; movsxd rdx, dword ptr [rbx + 4] ; jmp 0xd1630
0x0000000000088a9c : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7636 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x00000000001378a4 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000012c666 : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000000ef507 : mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000008872c : mov qword ptr [rbx], rdi ; call rcx
0x0000000000087379 : mov qword ptr [rbx], rdx ; xor eax, eax ; pop rbx ; ret
0x00000000000887ef : mov qword ptr [rbx], rsi ; or byte ptr [rbx + 0x50], 1 ; call rcx
0x000000000014f823 : mov qword ptr [rcx + 5], rdx ; ret
0x000000000014f833 : mov qword ptr [rcx + 6], rdx ; ret
0x000000000014f843 : mov qword ptr [rcx + 7], rdx ; ret
0x000000000014f853 : mov qword ptr [rcx + 8], rdx ; ret
0x00000000000d3265 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000078699 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000014f7e0 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000014f800 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000014f810 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000014f820 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000014f830 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000014f840 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000014f850 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000014f7f0 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000014f7d0 : mov qword ptr [rcx], rdx ; ret
0x0000000000048f2e : mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000a063c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a14ac : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009ef8c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009ef6c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a310c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009fc7f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009efcf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009efef : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009efb0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000012fb83 : mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x000000000007e736 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007a8de : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000012fc1a : mov qword ptr [rdi + 0x18], rdx ; ret
0x000000000012fcc5 : mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; ret
0x000000000012fb5b : mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000001302fc : mov qword ptr [rdi + 0x20], 0 ; ret
0x00000000000b7dcf : mov qword ptr [rdi + 0x20], rcx ; pop r14 ; pop r15 ; ret
0x0000000000124581 : mov qword ptr [rdi + 0x20], rcx ; ret
0x000000000012457d : mov qword ptr [rdi + 0x30], rdx ; mov qword ptr [rdi + 0x20], rcx ; ret
0x000000000007e766 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000080f68 : mov qword ptr [rdi + 0x60], rcx ; ret
0x0000000000080ff5 : mov qword ptr [rdi + 0x880], rax ; ret
0x00000000000a05fc : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a146c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009ef2c : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a30cc : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a061c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a148c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009ef4c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a30ec : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000144b67 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000144af7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000144a87 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000144a17 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a04fa : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a135a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000001449a7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009ee7a : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a2fba : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a051a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a137a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000144937 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009ee8a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a2fda : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a053a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a139a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000001448c7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009ee9a : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a2ffa : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000890a9 : mov qword ptr [rdi + 8], 0 ; ret
0x0000000000048727 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000048eb7 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000004a385 : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x000000000007e73a : mov qword ptr [rdi + 8], rax ; ret
0x000000000003b30c : mov qword ptr [rdi + 8], rcx ; ret
0x000000000003b33b : mov qword ptr [rdi + 8], rcx ; xor eax, eax ; mov qword ptr [rdi], r8 ; ret
0x000000000007b4d2 : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x00000000000f4ebb : mov qword ptr [rdi + 8], rsi ; ret
0x00000000000a3f9e : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a3b6a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000013e7a4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000013e7e2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000048e1e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000013eb2b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144377 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013ed0b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001442f7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013eefb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144277 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013f0cc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001441e8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000013f2cc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000144158 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000013f4cc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001440c8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000009fe00 : mov qword ptr [rdi - 1], rdx ; ret
0x0000000000048d9d : mov qword ptr [rdi - 8], r9 ; ret
0x000000000013e7a8 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000013e7e6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000013e95b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013ea57 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000013e9a3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001443f7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000587ab : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000124d83 : mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rax ; ret
0x000000000003b341 : mov qword ptr [rdi], r8 ; ret
0x000000000003b307 : mov qword ptr [rdi], r8 ; xor eax, eax ; mov qword ptr [rdi + 8], rcx ; ret
0x0000000000048d6c : mov qword ptr [rdi], r9 ; ret
0x0000000000064d51 : mov qword ptr [rdi], rax ; add rax, r13 ; jmp 0x60fa1
0x00000000000f4eb8 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004d89e : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000011d59e : mov qword ptr [rdi], rax ; ret
0x00000000000a0486 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009fb26 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009ee56 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009ee66 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009ee77 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009ee87 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009ee97 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000009ee47 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000597c3 : mov qword ptr [rdi], rcx ; ret
0x00000000001601d2 : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000000908c5 : mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x00000000000a0473 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a12c3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000090a65 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + rax - 1] ; ret
0x000000000009fe20 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009fe40 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009fe50 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009fe60 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009fe70 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009fe30 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000090587 : mov qword ptr [rdi], rdx ; ret
0x00000000000a2f23 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x0000000000088f98 : mov qword ptr [rdi], rsi ; mov eax, 1 ; ret
0x00000000001640b1 : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000089091 : mov qword ptr [rdi], rsi ; mov rax, r8 ; ret
0x000000000004a14a : mov qword ptr [rdi], rsi ; ret
0x000000000007116a : mov qword ptr [rdx + 0x130], rcx ; ret
0x000000000007bb4c : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x00000000000742c1 : mov qword ptr [rdx + 0x20], rax ; mov eax, edi ; mov dword ptr [rcx], edi ; ret
0x0000000000074417 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000123c57 : mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000000d2f08 : mov qword ptr [rdx + 0x20], rsi ; xor eax, eax ; ret
0x000000000007454d : mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x0000000000123c31 : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000123c35 : mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000151bda : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000014d84a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000151bfa : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000014d86a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000151c1a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000014d88a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000006e82e : mov qword ptr [rdx + 8], r9 ; add dword ptr [rdx + 4], 1 ; ret
0x0000000000151aaa : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000014d77a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000151a53 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000000fdb73 : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000014d723 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000030900 : mov qword ptr [rdx], rax ; ret
0x0000000000089c4d : mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x00000000000904b1 : mov qword ptr [rdx], rcx ; ret
0x00000000000f7a24 : mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x00000000000dfd9e : mov qword ptr [rdx], rdi ; ret
0x00000000000898f5 : mov qword ptr [rip + 0x136f4c], rax ; ret
0x0000000000080b77 : mov qword ptr [rip + 0x13d5ca], rax ; ret
0x0000000000080b67 : mov qword ptr [rip + 0x13d5d2], rax ; ret
0x0000000000080b55 : mov qword ptr [rip + 0x13d5d4], rdx ; ret
0x0000000000080b17 : mov qword ptr [rip + 0x13d5da], rax ; ret
0x0000000000080af1 : mov qword ptr [rip + 0x13d5e8], rax ; ret
0x0000000000080b07 : mov qword ptr [rip + 0x13d5f2], rax ; ret
0x0000000000080ac1 : mov qword ptr [rip + 0x13d620], rax ; ret
0x0000000000023abf : mov qword ptr [rip + 0x19f802], rax ; ret
0x000000000013829b : mov qword ptr [rip + 0x884ee], rsi ; ret
0x0000000000109c3b : mov qword ptr [rip + 0xb81ae], rax ; pop rbp ; ret
0x00000000000fe358 : mov qword ptr [rip + 0xbfe61], rbx ; pop rbx ; ret
0x00000000000fe33e : mov qword ptr [rip + 0xbfe7b], rbx ; pop rbx ; ret
0x00000000000f56dc : mov qword ptr [rip + 0xcb9cd], rdx ; ret
0x00000000000e098b : mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000122d4a : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003ba68 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000d6695 : mov qword ptr [rsi + 0x18], rdx ; mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x000000000003b284 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000f178e : mov qword ptr [rsi + 0x48], rax ; ret
0x00000000000e09a2 : mov qword ptr [rsi + 8], 0 ; ret
0x0000000000122d16 : mov qword ptr [rsi + 8], rax ; ret
0x00000000000e0987 : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000006c010 : mov qword ptr [rsi], rax ; jmp 0x682a3
0x000000000007a8e2 : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000080d49 : mov qword ptr [rsi], rdi ; ret
0x0000000000118436 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000076e8e : mov qword ptr [rsp + 0x10], rcx ; mov rdi, r13 ; call rax
0x000000000008395a : mov qword ptr [rsp + 0x18], rax ; call rcx
0x0000000000083989 : mov qword ptr [rsp + 0x18], rax ; call rdx
0x0000000000130013 : mov qword ptr [rsp + 0x20], 0 ; call rdx
0x0000000000039601 : mov qword ptr [rsp + 0x20], r8 ; mov rax, qword ptr [rsp] ; call rax
0x000000000008364f : mov qword ptr [rsp + 8], r11 ; call qword ptr [rax]
0x00000000000fcf70 : mov qword ptr [rsp + 8], rax ; call 0x1091c7
0x000000000007edfa : mov qword ptr [rsp + 8], rdi ; call 0x7b0c7
0x00000000000838da : mov qword ptr [rsp + 8], rdx ; xor edi, edi ; call qword ptr [rax]
0x000000000004a2c6 : mov qword ptr [rsp - 0x18], rax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000119466 : mov qword ptr [rsp], 0 ; call rax
0x000000000007c4a1 : mov qword ptr [rsp], r8 ; mov rdi, rbx ; call rax
0x000000000012c512 : mov qword ptr fs:[rax], rdx ; ret
0x000000000003abf4 : mov qword ptr fs:[rbp], rdx ; mov rdi, qword ptr [rbx + 8] ; call rax
0x000000000012c665 : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000308ff : mov qword ptr fs:[rdx], rax ; ret
0x00000000000a3b69 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000000a7210 : mov r10, rbp ; setne dl ; jmp 0xa722c
0x00000000000a9a4f : mov r10, rbp ; setne dl ; jmp 0xa9a6c
0x00000000000ac090 : mov r10, rbp ; setne dl ; jmp 0xac0ac
0x00000000000b2c6f : mov r10, rbp ; setne dl ; jmp 0xb2c8c
0x0000000000050c52 : mov r10d, 1 ; jmp rax
0x0000000000078c7b : mov r10d, eax ; jmp 0x78c05
0x000000000007954b : mov r10d, eax ; jmp 0x794d5
0x000000000005e5d0 : mov r11d, 1 ; jmp rax
0x000000000005c8d0 : mov r11d, 1 ; xor ecx, ecx ; jmp rax
0x0000000000123b7c : mov r12, rsp ; lea rsi, qword ptr [r12 + 8] ; call qword ptr [rax]
0x00000000000629ee : mov r13, r12 ; jmp 0x629ba
0x0000000000023d3e : mov r13, rax ; call 0xa3fc9
0x0000000000023c06 : mov r13, rax ; call 0xa4459
0x0000000000105941 : mov r14, qword ptr [r15 + 0x38] ; jmp 0x10590f
0x0000000000106c83 : mov r14b, 0xf1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000089285 : mov r14d, 0xf48000d ; ret 0x66c3
0x0000000000051dfd : mov r14d, 1 ; jmp rax
0x000000000006c4ae : mov r14d, eax ; jmp 0x6871e
0x00000000000dcd67 : mov r15, rdi ; add rax, rsi ; jmp rax
0x0000000000063772 : mov r15d, 2 ; jmp 0x5f9e8
0x00000000000f4f68 : mov r8, rcx ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000010495e : mov r8, rdx ; shl rdx, 2 ; jmp 0x104932
0x00000000000e1f30 : mov r8b, 0x83 ; ret 0x4802
0x00000000001171ca : mov r8d, 0xffffffff ; jmp 0x11719c
0x0000000000052653 : mov r8d, 1 ; jmp rax
0x00000000000a4af4 : mov r8d, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xa4ad1 ; ret
0x00000000000a58ef : mov r9, r14 ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000005e540 : mov r9d, 1 ; xor edx, edx ; jmp rax
0x0000000000119220 : mov rax, -1 ; mov rdx, rax ; ret
0x0000000000037c5e : mov rax, -1 ; ret
0x00000000000b69f0 : mov rax, 1 ; ret
0x00000000000b6a00 : mov rax, 2 ; ret
0x00000000000b6a10 : mov rax, 3 ; ret
0x00000000000b6a20 : mov rax, 4 ; ret
0x00000000000b6a30 : mov rax, 5 ; ret
0x00000000000b6a40 : mov rax, 6 ; ret
0x00000000000b6a50 : mov rax, 7 ; ret
0x00000000001096e5 : mov rax, qword ptr [0x10] ; ret
0x00000000000f9ad0 : mov rax, qword ptr [rax + 0x160] ; ret
0x00000000001373c2 : mov rax, qword ptr [rax + 0x170] ; jmp rax
0x00000000000fe817 : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000fe7ff : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x00000000000f30bb : mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0xf30ce ; ret
0x0000000000077565 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000108a80 : mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000129d70 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000077f17 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000012a6c0 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f9ac8 : mov rax, qword ptr [rax + 0x58] ; ret
0x000000000007f11f : mov rax, qword ptr [rax + 0x68] ; test rax, rax ; jne 0x7f121 ; ret
0x00000000000f9aa9 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002dbea : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x2dbfe ; call rax
0x0000000000030648 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000030122 : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002f35f : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000003ad2a : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000011cfec : mov rax, qword ptr [rax] ; ret
0x0000000000109616 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x109628 ; call rax
0x0000000000081988 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x8199a ; call rax
0x00000000000253af : mov rax, qword ptr [rbp - 0x68] ; call rax
0x000000000007e890 : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007a4f4 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000007eddc : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000012c5dd : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x12c5f9 ; pop rbx ; ret
0x000000000014d720 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000012fae4 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000c3c44 : mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000016bce4 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x16bcfd ; call rax
0x0000000000122d6e : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000007a548 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000122dae : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000007a428 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000077f14 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000801a4 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000012ed05 : mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000012ee00 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x0000000000123ae0 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000080ad4 : mov rax, qword ptr [rdi] ; mov dword ptr [rip + 0x13fcaf], eax ; ret
0x000000000007fec5 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000010922f : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000001096bd : mov rax, qword ptr [rdx + 0x10] ; test rax, rax ; je 0x10969e ; call rax
0x00000000001096d0 : mov rax, qword ptr [rdx + 8] ; test rax, rax ; je 0x10969e ; call rax
0x00000000000305d6 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000002f320 : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000dfd9b : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000007feb8 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7feb8 ; ret
0x00000000000889a1 : mov rax, qword ptr [rip + 0x1355a8] ; call qword ptr [rax]
0x0000000000088860 : mov rax, qword ptr [rip + 0x1356e9] ; call qword ptr [rax]
0x00000000000887a0 : mov rax, qword ptr [rip + 0x1357a9] ; call qword ptr [rax]
0x0000000000080184 : mov rax, qword ptr [rip + 0x13f335] ; ret
0x000000000002ca84 : mov rax, qword ptr [rip + 0x192e05] ; ret
0x00000000000251d4 : mov rax, qword ptr [rip + 0x19df5d] ; ret
0x00000000000251c4 : mov rax, qword ptr [rip + 0x19df75] ; ret
0x0000000000134cf7 : mov rax, qword ptr [rip + 0x8a6b2] ; call qword ptr [rax]
0x0000000000134706 : mov rax, qword ptr [rip + 0x8aca3] ; call qword ptr [rax]
0x0000000000137620 : mov rax, qword ptr [rip + 0x8bae1] ; call qword ptr [rax]
0x000000000002f340 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000b765e : mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000002421c : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000122a22 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000030d95 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000114a0a : mov rax, qword ptr [rsp + 8] ; call rax
0x000000000007b09e : mov rax, qword ptr [rsp + 8] ; jmp 0x7b06d
0x00000000000feee6 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000fef47 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000039606 : mov rax, qword ptr [rsp] ; call rax
0x00000000001096e4 : mov rax, qword ptr fs:[0x10] ; ret
0x000000000011cfeb : mov rax, qword ptr fs:[rax] ; ret
0x0000000000089c50 : mov rax, r10 ; pop rbx ; ret
0x000000000008ad69 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000759c5 : mov rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008c17d : mov rax, r12 ; pop r12 ; ret
0x00000000000310d6 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007aaa9 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002fed5 : mov rax, r13 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f7c6d : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c47a5 : mov rax, r14 ; call rax
0x0000000000081f8e : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000089094 : mov rax, r8 ; ret
0x000000000015fa50 : mov rax, r8 ; vzeroupper ; ret
0x00000000000598e7 : mov rax, r9 ; pop r14 ; ret
0x0000000000089141 : mov rax, rbp ; mov rdx, rbx ; pop rbx ; pop rbp ; ret
0x00000000000f78c3 : mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000030e96 : mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000007a9e7 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000030e78 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089a75 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000007aebf : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f96de : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000008cde9 : mov rax, rbx ; pop rbx ; cmovne rax, rdi ; ret
0x000000000007881b : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002d3e9 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000347f9 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003b06b : mov rax, rbx ; pop rbx ; ret
0x00000000000f703d : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000000877ad : mov rax, rcx ; pop rbx ; pop rbp ; ret
0x0000000000035e63 : mov rax, rcx ; ret
0x00000000000a4e60 : mov rax, rdi ; and edx, 3 ; jne 0xa4e80 ; ret
0x000000000003aca4 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000073b77 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000817a2 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000090e3c : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004d8a1 : mov rax, rdi ; ret
0x000000000010d32d : mov rax, rdi ; sar rax, 6 ; ret
0x00000000000bad0f : mov rax, rdx ; add rsp, 8 ; ret
0x000000000008c373 : mov rax, rdx ; cmovne rax, rdi ; ret
0x00000000000b6fe9 : mov rax, rdx ; jne 0xb6ffc ; add rsp, 0x28 ; ret
0x0000000000119212 : mov rax, rdx ; movsxd rdx, esi ; ret
0x0000000000085d44 : mov rax, rdx ; pop r12 ; ret
0x0000000000085a47 : mov rax, rdx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000710c4 : mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000085a36 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000473d1 : mov rax, rdx ; pop rbx ; ret
0x00000000000488f5 : mov rax, rdx ; ret
0x00000000000c4e98 : mov rax, rsi ; add rsp, 8 ; ret
0x00000000000fb944 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000072e11 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000072f92 : mov rax, rsi ; pop rbx ; ret
0x000000000004d9aa : mov rax, rsi ; ret
0x000000000011f94b : mov rbp, r8 ; mov rdi, rbx ; call rax
0x0000000000037ad9 : mov rbp, r9 ; jmp rdx
0x00000000000c8e13 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000002eb59 : mov rbx, rdi ; test rax, rax ; je 0x2eb6b ; call rax
0x00000000000f7554 : mov rbx, rsi ; je 0xf7566 ; pop rbx ; ret
0x00000000000e51bf : mov rcx, qword ptr [r15] ; call r12
0x000000000002d94a : mov rcx, qword ptr [rax + r14*8] ; test rcx, rcx ; je 0x2d95e ; call rcx
0x00000000000259b4 : mov rcx, qword ptr [rbp - 0x70] ; call rcx
0x0000000000080948 : mov rcx, qword ptr [rbx + 0x50] ; jmp 0x80916
0x0000000000120efa : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000009ee30 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000127563 : mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000012296f : mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000011f83a : mov rcx, r14 ; mov rdi, r13 ; call r12
0x00000000000904c8 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000001213e3 : mov rcx, rbx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000000a3b45 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000016b96f : mov rdi, qword ptr [r13 + 0x10] ; add rdi, rbx ; call r12
0x0000000000039674 : mov rdi, qword ptr [r13] ; mov rax, qword ptr [rsp] ; call rax
0x000000000003a456 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000005a6af : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x0000000000088a40 : mov rdi, qword ptr [rbx + 0x48] ; call rax
0x00000000000889c1 : mov rdi, qword ptr [rbx + 0x48] ; mov rsi, r13 ; call rax
0x000000000003abf9 : mov rdi, qword ptr [rbx + 8] ; call rax
0x00000000000888bc : mov rdi, qword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x00000000000712e9 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000000712ad : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000107923 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000016bfb4 : mov rdi, qword ptr [rip + 0x53c05] ; call 0xf8249
0x00000000000273ff : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000027bd2 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00000000000284a3 : mov rdi, qword ptr [rsp + 0x30] ; call r15
0x0000000000027d5e : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000027985 : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000000280f2 : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000029472 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000002af03 : mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000028833 : mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000036003 : mov rdi, qword ptr [rsp + 8] ; call 0x222d7
0x00000000000c4685 : mov rdi, qword ptr [rsp + 8] ; call r12
0x000000000003913a : mov rdi, qword ptr [rsp + 8] ; call rbx
0x000000000012c163 : mov rdi, qword ptr [rsp] ; call rax
0x0000000000031b8d : mov rdi, r12 ; call qword ptr [rip + 0x18c242]
0x0000000000031cc3 : mov rdi, r12 ; call qword ptr [rip + 0x18c2dc]
0x000000000008816b : mov rdi, r12 ; call rax
0x0000000000039127 : mov rdi, r12 ; call rbx
0x0000000000078093 : mov rdi, r12 ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x0000000000077f9e : mov rdi, r12 ; lea r9, qword ptr [rsp + 0x18] ; call rbx
0x0000000000031bbe : mov rdi, r13 ; call qword ptr [rip + 0x18c211]
0x000000000011f83d : mov rdi, r13 ; call r12
0x00000000000f82ab : mov rdi, r13 ; call r14
0x0000000000076e93 : mov rdi, r13 ; call rax
0x00000000000f7cf8 : mov rdi, r13 ; mov dword ptr [rbp - 0x50], r15d ; call r14
0x00000000000396c0 : mov rdi, r13 ; mov rax, qword ptr [rsp] ; call rax
0x00000000000259b1 : mov rdi, r13 ; mov rcx, qword ptr [rbp - 0x70] ; call rcx
0x0000000000114d54 : mov rdi, r13 ; mov rsi, qword ptr [rsp] ; call r12
0x0000000000107080 : mov rdi, r14 ; call 0x103305
0x0000000000049e10 : mov rdi, r15 ; call 0x49f29
0x0000000000034566 : mov rdi, r15 ; call 0x70866
0x00000000000693a2 : mov rdi, r15 ; call 0x75625
0x000000000012cf12 : mov rdi, r15 ; call qword ptr [rax]
0x0000000000039166 : mov rdi, r15 ; call rbx
0x00000000000782a7 : mov rdi, r15 ; lea r9, qword ptr [rbp - 0x40] ; call r12
0x000000000012aa5e : mov rdi, r15 ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000087f26 : mov rdi, r15 ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x000000000003a992 : mov rdi, r9 ; call rdx
0x000000000012b78c : mov rdi, rax ; call qword ptr [r10]
0x0000000000120ef7 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000122aec : mov rdi, rbp ; call 0x12ed25
0x0000000000123007 : mov rdi, rbp ; call 0x12f225
0x0000000000123722 : mov rdi, rbp ; call qword ptr [rbx]
0x00000000000d1168 : mov rdi, rbp ; call r12
0x00000000001214bc : mov rdi, rbp ; call r14
0x00000000000242b0 : mov rdi, rbp ; call rax
0x000000000012fcf4 : mov rdi, rbp ; call rcx
0x0000000000121e78 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x20] ; call qword ptr [rax]
0x00000000000a57a0 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x30] ; call rbx
0x000000000008364c : mov rdi, rbp ; mov qword ptr [rsp + 8], r11 ; call qword ptr [rax]
0x0000000000127560 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000012777b : mov rdi, rbp ; mov rdx, qword ptr [rsp + 0x20] ; call rdx
0x00000000000a5b8f : mov rdi, rbp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000122b00 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp 0x12ed27
0x0000000000122bec : mov rdi, rbp ; pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x000000000010c0bc : mov rdi, rbx ; call 0x782e6
0x0000000000102605 : mov rdi, rbx ; call 0x7e855
0x0000000000123b91 : mov rdi, rbx ; call qword ptr [rax]
0x0000000000071ad5 : mov rdi, rbx ; call qword ptr [rip + 0x14c2fa]
0x000000000002ca3b : mov rdi, rbx ; call r12
0x000000000011f94e : mov rdi, rbx ; call rax
0x00000000001232b6 : mov rdi, rbx ; call rdx
0x00000000000253ac : mov rdi, rbx ; mov rax, qword ptr [rbp - 0x68] ; call rax
0x0000000000136fd5 : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000114a07 : mov rdi, rbx ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000001153e0 : mov rdi, rbx ; mov rax, qword ptr [rsp] ; call rax
0x0000000000072c8b : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000075352 : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000007c20d : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000011d4e9 : mov rdi, rbx ; test rbx, rbx ; jne 0x11d4e9 ; pop rbx ; ret
0x000000000016bfff : mov rdi, rbx ; test rbx, rbx ; jne 0x16bff9 ; pop rbx ; ret
0x00000000000fb923 : mov rdi, rcx ; sub rsp, 8 ; call rsi
0x0000000000109232 : mov rdi, rdx ; jmp rax
0x0000000000088a6d : mov rdi, rsi ; call rax
0x00000000000e500c : mov rdx, qword ptr [r15] ; call r12
0x000000000007a4db : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x000000000016bbd7 : mov rdx, qword ptr [rax + rbx*8] ; test rdx, rdx ; je 0x16bbeb ; call rdx
0x0000000000024219 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000047ff5 : mov rdx, qword ptr [rdx + 0x88] ; xor eax, eax ; ret
0x0000000000088ac4 : mov rdx, qword ptr [rdx + 8] ; test rdx, rdx ; jne 0x88ac9 ; ret
0x000000000013e910 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009ee20 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000137f50 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x000000000012777e : mov rdx, qword ptr [rsp + 0x20] ; call rdx
0x000000000010892e : mov rdx, r12 ; call rax
0x00000000000ea9bb : mov rdx, r12 ; mov rsi, rbp ; call 0xe6c98
0x00000000001081cf : mov rdx, r13 ; call rax
0x0000000000137b77 : mov rdx, r14 ; add r9, qword ptr [rsp + 8] ; call rax
0x0000000000107d9a : mov rdx, r14 ; call rax
0x0000000000087a2d : mov rdx, r15 ; mov rdi, r13 ; call rax
0x0000000000111dd6 : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000003635b : mov rdx, r8 ; jmp 0x3638b
0x000000000003653d : mov rdx, r8 ; jmp 0x36569
0x00000000000569f2 : mov rdx, r8 ; jmp 0x56a05
0x000000000008c614 : mov rdx, rax ; jmp 0x8c635
0x000000000008f569 : mov rdx, rax ; jmp 0x8f503
0x000000000008fe49 : mov rdx, rax ; jmp 0x8fde3
0x00000000000ef4b0 : mov rdx, rax ; jmp 0xef473
0x00000000000f96b3 : mov rdx, rax ; jmp 0xf96c8
0x00000000000f96b2 : mov rdx, rax ; jmp 0xf96c9
0x00000000000f9701 : mov rdx, rax ; jmp 0xf96e0
0x0000000000105571 : mov rdx, rax ; pop rbp ; pop r12 ; jmp rcx
0x0000000000119227 : mov rdx, rax ; ret
0x0000000000039160 : mov rdx, rbp ; mov rsi, r12 ; mov rdi, r15 ; call rbx
0x000000000003917b : mov rdx, rbp ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000000392b3 : mov rdx, rbp ; mov rsi, r15 ; mov rdi, r12 ; call rbx
0x0000000000108043 : mov rdx, rbx ; call rax
0x0000000000087f29 : mov rdx, rbx ; mov rsi, r13 ; call rax
0x0000000000088165 : mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000124625 : mov rdx, rbx ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000089144 : mov rdx, rbx ; pop rbx ; pop rbp ; ret
0x00000000000a3eb4 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000001218fd : mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000003943d : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000a58f2 : mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x00000000001214b7 : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, rbp ; call r14
0x0000000000024fed : mov rsi, qword ptr [rsp + 0x18] ; xor r8d, r8d ; call rbx
0x00000000000868d0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000012c15e : mov rsi, qword ptr [rsp + 8] ; mov rdi, qword ptr [rsp] ; call rax
0x0000000000114d57 : mov rsi, qword ptr [rsp] ; call r12
0x0000000000039137 : mov rsi, r12 ; mov rdi, qword ptr [rsp + 8] ; call rbx
0x0000000000039163 : mov rsi, r12 ; mov rdi, r15 ; call rbx
0x0000000000123b8e : mov rsi, r12 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000087f2c : mov rsi, r13 ; call rax
0x0000000000088168 : mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000103f77 : mov rsi, r13 ; xor r15d, r15d ; call rax
0x000000000003917e : mov rsi, r14 ; mov rdi, r12 ; call rbx
0x0000000000111dd9 : mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000039033 : mov rsi, r15 ; call r14
0x00000000000392b6 : mov rsi, r15 ; mov rdi, r12 ; call rbx
0x0000000000103d88 : mov rsi, r15 ; mov rdi, rbx ; call r12
0x0000000000136e52 : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000ea9be : mov rsi, rbp ; call 0xe6c95
0x00000000000888c0 : mov rsi, rbp ; call rax
0x00000000000878cf : mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000f82a8 : mov rsi, rbx ; mov rdi, r13 ; call r14
0x000000000008803f : mov rsi, rbx ; mov rdi, r13 ; call rax
0x000000000012cf0f : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000012b789 : mov rsi, rbx ; mov rdi, rax ; call qword ptr [r10]
0x00000000000d1165 : mov rsi, rbx ; mov rdi, rbp ; call r12
0x000000000012fcf1 : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x000000000011f948 : mov rsi, rdi ; mov rbp, r8 ; mov rdi, rbx ; call rax
0x00000000000c2ead : mov rsi, rdi ; xor edi, edi ; call rax
0x0000000000127e3d : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000107927 : mov rsi, rdx ; call rax
0x0000000000123ae4 : mov rsi, rsp ; call qword ptr [rax]
0x00000000000cac38 : mov rsi, rsp ; call qword ptr [rdx]
0x0000000000037ad6 : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x000000000004d850 : mov rsp, rdx ; ret
0x00000000000e25b2 : mov ss, ecx ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x15eb
0x0000000000041602 : mov ss, word ptr [rbx] ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001640d9 : mov word ptr [r9 - 2], cx ; ret
0x00000000000a8246 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000c62dd : mov word ptr [rax - 0x77], cs ; ret
0x000000000009f640 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x00000000000fe08f : mov word ptr [rax], cs ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000037830 : mov word ptr [rbp + 0x15], cs ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xe867
0x0000000000042450 : mov word ptr [rbx], gs ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x39], cl ; ret
0x0000000000111e40 : mov word ptr [rcx + 4], ax ; xor eax, eax ; jmp 0x111e12
0x000000000014f7b2 : mov word ptr [rcx + 4], dx ; ret
0x000000000014f7f3 : mov word ptr [rcx + 8], dx ; ret
0x000000000014f780 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000014f770 : mov word ptr [rcx], dx ; ret
0x00000000000a057c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a13ec : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009eecc : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a304c : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000f215b : mov word ptr [rdi + 0x16], ax ; ret
0x00000000000a0684 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a14f4 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009efb4 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a3154 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000144e07 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000090a03 : mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x000000000003baf8 : mov word ptr [rdi + 4], ax ; xor eax, eax ; ret
0x00000000000a0448 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a1298 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000090936 : mov word ptr [rdi + 4], dx ; ret
0x00000000000a2ef8 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a12fa : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a049a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009ee4a : mov word ptr [rdi + 8], dx ; ret
0x00000000000a2f5a : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a3fae : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x00000000000a3b88 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000013eeac : mov word ptr [rdi - 2], cx ; ret
0x000000000013ecc4 : mov word ptr [rdi - 2], dx ; ret
0x000000000013eea8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000c511b : mov word ptr [rdi], cs ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000009edd3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000009fac6 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000001647a6 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000a3fb3 : mov word ptr [rdi], cx ; ret
0x00000000001601e8 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000000908e0 : mov word ptr [rdi], dx ; add rax, rdi ; ret
0x00000000000a0403 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a1243 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009edc3 : mov word ptr [rdi], dx ; ret
0x00000000000a2ea3 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x0000000000090a80 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + rax - 1] ; ret
0x00000000000909b0 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000001640d6 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000000a3b8d : mov word ptr [rdi], si ; ret
0x00000000000eb0f0 : mov word ptr [rdi], si ; xor eax, eax ; ret
0x000000000012737d : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x0000000000151b28 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009b99d : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x000000000009ba21 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x0000000000151ad3 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000009b938 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000fe7ed : mov word ptr [rdx], ax ; ret
0x00000000000d3041 : mov word ptr [rdx], es ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x3944
0x00000000000fe5e8 : mov word ptr [rip - 0x38b7fff4], gs ; ret 0xffff
0x00000000000f0a69 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x000000000003baaa : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000001647a9 : mov word ptr [rsi - 2], cx ; ret
0x00000000000eb0d7 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001357a4 : mov word ptr [rsp + 0x10], ax ; xor eax, eax ; call 0xf19c9
0x000000000004dec3 : mov word ptr [rsp + 0x420], dx ; jmp 0x4de99
0x0000000000053c13 : mov word ptr [rsp + 0x420], dx ; jmp 0x53be9
0x0000000000036a63 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000a3b87 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000015fe6b : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x00000000000e57b5 : movabs al, byte ptr [0x8348d40149fffffe] ; ret
0x0000000000060797 : movabs al, byte ptr [0x8348d68944fffff9] ; ret
0x0000000000068de7 : movabs al, byte ptr [0x840fc08548000000] ; ret
0x00000000000cd292 : movabs byte ptr [0x8348e08948000003], al ; ret
0x0000000000087bfa : movabs dword ptr [0x5b10c48348000000], eax ; ret
0x00000000000d3d9f : movabs eax, dword ptr [0x5c415d5bc031000e] ; ret
0x00000000000fa22b : movabs eax, dword ptr [0x8920538948000678] ; ret 0xe8c1
0x000000000015ae55 : movabs eax, dword ptr [0xdafdc520124c7465] ; ret 0xf5c5
0x0000000000036d04 : movapd xmm0, xmm1 ; ret
0x0000000000036d05 : movaps xmm0, xmm1 ; ret
0x00000000000d6912 : movaps xmmword ptr [r12], xmm0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d433 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000000d3e56 : movaps xmmword ptr [rdi], xmm0 ; ret
0x000000000013d4dd : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000d6913 : movaps xmmword ptr [rsp], xmm0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036e3b : movd mm0, eax ; mov dword ptr [rdi], ecx ; ret
0x0000000000036c1e : movd mm0, eax ; ret
0x0000000000036e3a : movd mm0, rax ; mov dword ptr [rdi], ecx ; ret
0x0000000000036c1d : movd mm0, rax ; ret
0x0000000000036c8f : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000036ff6 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x0000000000036d01 : movd mm1, edi ; movapd xmm0, xmm1 ; ret
0x000000000003707d : movd mm1, edi ; movaps xmm0, xmm1 ; ret
0x0000000000036c8e : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000036d00 : movd mm1, rdi ; movapd xmm0, xmm1 ; ret
0x0000000000036fd0 : movd xmm0, eax ; ret
0x0000000000036ff5 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x000000000003707c : movd xmm1, edi ; movaps xmm0, xmm1 ; ret
0x00000000000377df : movdqa xmm0, xmm3 ; pop rbx ; ret
0x000000000016b259 : movdqa xmm0, xmmword ptr [rsp - 0x18] ; ret
0x000000000003733d : movdqa xmm0, xmmword ptr [rsp - 0x38] ; ret
0x000000000009eea0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000118edf : movdqu xmm0, xmmword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x00000000000eb074 : movdqu xmm7, xmmword ptr [rdi + 0x78] ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x00000000000eb0c4 : movdqu xmm7, xmmword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x00000000000a073d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a15ad : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x000000000009fd80 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009f06d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a1823 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009ffd3 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x0000000000144adf : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144a6f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001449ff : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014498f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a06dd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a154d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009f00d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000014491f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a06fd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a156d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009f02d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000001448af : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a071d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a158d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009f04d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000144ecf : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144e5f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144def : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144d7f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144d0f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144c9f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144c2f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144bbf : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144b4f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a3f21 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000014403b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x00000000001440ab : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000009fe80 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a13b4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a0554 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009fba7 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009eeb4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009eef7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009eee7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009ef68 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009ef28 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009ef48 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009eec8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009f069 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009f009 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009f029 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009f049 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009eea4 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a3014 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000001448b4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009ba82 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x000000000009baa2 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x000000000009bac2 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x000000000009b90c : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x000000000009b8b6 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x000000000009ba83 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x000000000009baa3 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x000000000009bac3 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x000000000009b90d : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x000000000009b8b7 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000037754 : movmskps eax, xmm0 ; and eax, 8 ; ret
0x000000000007fef8 : movntps xmmword ptr [rax + 0x18], xmm2 ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000000377e0 : movq mm0, mm3 ; pop rbx ; ret
0x000000000009eea1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000118ee0 : movq mm0, qword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x000000000016b25a : movq mm0, qword ptr [rsp - 0x18] ; ret
0x000000000003733e : movq mm0, qword ptr [rsp - 0x38] ; ret
0x0000000000037721 : movq mm0, qword ptr [rsp] ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000eb075 : movq mm7, qword ptr [rdi + 0x78] ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x00000000000eb0c5 : movq mm7, qword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x00000000000a073e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a15ae : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x000000000009fd81 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009f06e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000a320e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a1824 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009ffd4 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000a3284 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x0000000000144ae0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144a70 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144a00 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144990 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a06de : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a154e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009f00e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000a31ae : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x0000000000144920 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a06fe : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a156e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009f02e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000a31ce : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000001448b0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a071e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a158e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009f04e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000a31ee : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000144ed0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144e60 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144df0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144d80 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144d10 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144ca0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144c30 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144bc0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000144b50 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a3e7d : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a3f22 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000014403c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x00000000001440ac : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001447e7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000144767 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001446d7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000144657 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001445d7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000144557 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001444d7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000144457 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001443d7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000144357 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001442d7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000144257 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001441c7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000144137 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001440a7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000009fe81 : movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a13b5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a0555 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009fba8 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009eeb5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009ef08 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009fbfb : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009eef8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009eee8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009ef69 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009ef29 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009ef49 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009eec9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009f06a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009f00a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009f02a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009f04a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009eea5 : movq qword ptr [rdi], mm0 ; ret
0x00000000000a3015 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000001448b5 : movq qword ptr [rdi], mm1 ; ret
0x0000000000036e39 : movq xmm0, rax ; mov dword ptr [rdi], ecx ; ret
0x0000000000036c1c : movq xmm0, rax ; ret
0x0000000000036c8d : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000036cff : movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x000000000008935a : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000010a4e9 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0x440f4800 ; ret 0xfc3
0x00000000000a826a : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8548
0x00000000000a3abe : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000d57d3 : movsb byte ptr [rdi], byte ptr [rsi] ; nop dword ptr [rax] ; ret
0x00000000000a3ab0 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000008c4b0 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb byte ptr [rbx], dl ; add byte ptr [rcx - 0x77], cl ; ret 0xcb8
0x00000000000c38f8 : movsb byte ptr [rdi], byte ptr [rsi] ; str word ptr [rax - 0x77] ; ret
0x0000000000068309 : movsd dword ptr [rdi], dword ptr [rsi] ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010a419 : movsd dword ptr [rdi], dword ptr [rsi] ; add eax, 0x440f4800 ; ret 0xfc3
0x000000000011e4f7 : movsd dword ptr [rdi], dword ptr [rsi] ; or r8b, byte ptr [rax] ; test rax, rax ; jne 0x11e511 ; ret
0x0000000000048dd2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000036c92 : movsd qword ptr [rdi], xmm1 ; ret
0x0000000000036c73 : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000b708c : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x000000000004a287 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000136e59 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000036ff9 : movss dword ptr [rdi], xmm1 ; ret
0x0000000000036fe0 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000016b918 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000004a241 : movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000103b73 : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000089436 : movsx eax, dl ; ret
0x00000000000907fc : movsx ecx, byte ptr [rax] ; test cl, cl ; jne 0x907f9 ; xor eax, eax ; ret
0x000000000009069c : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x90698 ; ret
0x00000000001045bf : movsx ecx, byte ptr [rdx] ; test cl, cl ; jne 0x1045b7 ; ret
0x0000000000090734 : movsx edx, byte ptr [rdi + rax] ; cmp edx, esi ; je 0x90738 ; ret
0x0000000000090658 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x90658 ; ret
0x00000000001045be : movsx rcx, byte ptr [rdx] ; test cl, cl ; jne 0x1045b8 ; ret
0x000000000016933b : movsxd r12, dword ptr [rdx + r12*4] ; add rdx, r12 ; jmp rdx
0x00000000001424ab : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x0000000000051ed4 : movsxd rax, dword ptr [r11 + rax*4] ; add rax, rdi ; jmp rax
0x0000000000050bf6 : movsxd rax, dword ptr [r11 + rax*4] ; add rax, rsi ; jmp rax
0x000000000005189d : movsxd rax, dword ptr [rax + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000dc645 : movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000006f041 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000016869a : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000001272ea : movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x0000000000067fa5 : movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x000000000005fd46 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000004e9d3 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdx ; jmp rax
0x00000000000511c7 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000dc73c : movsxd rax, dword ptr [rdx + r13*4] ; add rax, rdx ; jmp rax
0x00000000000cd313 : movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x000000000002489b : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000ca4f3 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000ca02b : movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x000000000005174c : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000060b0e : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000a4009 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x00000000000a40d1 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000015aa44 : movsxd rax, ecx ; add rax, rdi ; ret
0x000000000015a8df : movsxd rax, ecx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000015a971 : movsxd rax, ecx ; ret
0x00000000000e25b8 : movsxd rax, edx ; jmp 0xe25d2
0x00000000000e25b7 : movsxd rax, edx ; jmp 0xe25d3
0x000000000015ab70 : movsxd rbx, ebx ; cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000009f4ea : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000161af1 : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000009ec69 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000908b1 : movsxd rcx, dword ptr [r9 + rcx*4] ; add rcx, r9 ; jmp rcx
0x00000000000dfa28 : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00000000000a403f : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000015abcd : movsxd rcx, ecx ; add rax, rcx ; sub rax, rdi ; ret
0x000000000015a95f : movsxd rcx, ecx ; lea rax, qword ptr [rdx + rcx] ; sub rax, rdi ; ret
0x0000000000035620 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000030809 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000030689 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000088726 : movsxd rdi, esi ; and byte ptr [rbx + 0x50], 0xfe ; mov qword ptr [rbx], rdi ; call rcx
0x000000000013cfcf : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000122d8e : movsxd rdx, dword ptr [r8 + rcx*4] ; add rdx, r8 ; jmp rdx
0x0000000000090a56 : movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x00000000000d18c2 : movsxd rdx, dword ptr [r9 + rcx*4] ; add rdx, r9 ; jmp rdx
0x0000000000090985 : movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, rax ; jmp rdx
0x00000000000d165f : movsxd rdx, dword ptr [rbx + 4] ; jmp 0xd162c
0x00000000000bc2b7 : movsxd rdx, dword ptr [rbx + rdx*4] ; add rdx, rbx ; jmp rdx
0x0000000000035515 : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000005fbde : movsxd rdx, dword ptr [rsi + rdx*4] ; add rdx, rsi ; jmp rdx
0x000000000015a875 : movsxd rdx, edx ; cmp cl, byte ptr [rax - 0x7d] ; ret 0x2910
0x0000000000118c69 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000119216 : movsxd rdx, esi ; ret
0x000000000002e6d6 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x00000000001665ec : movsxd rsi, esi ; ret 0x7520
0x00000000000b708d : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x000000000004a242 : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x000000000004a288 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x00000000000a3ca3 : movups xmmword ptr [r11], xmm4 ; ret
0x00000000000a3d2a : movups xmmword ptr [r11], xmm8 ; ret
0x000000000003b915 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a3d2b : movups xmmword ptr [rbx], xmm0 ; ret
0x00000000000a3ca4 : movups xmmword ptr [rbx], xmm4 ; ret
0x00000000000a3c9f : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000000a3c9e : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000012a779 : movups xmmword ptr [rdi + 0x20], xmm2 ; ret
0x00000000000ead95 : movups xmmword ptr [rdi + 0x30], xmm0 ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x000000000012a749 : movups xmmword ptr [rdi + 0x30], xmm0 ; ret
0x00000000000a3d26 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000ead99 : movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x0000000000038743 : movups xmmword ptr [rdi + 0x60], xmm0 ; movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x0000000000038747 : movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x00000000000eb0c9 : movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x00000000000eba3e : movups xmmword ptr [rdi + 0xf8], xmm7 ; ret
0x0000000000127319 : movups xmmword ptr [rdi + 8], xmm0 ; ret
0x0000000000118ee3 : movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x00000000000a3a46 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000000a3c0d : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000a3bea : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000000a3a43 : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000000d3db6 : movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000036c93 : movups xmmword ptr [rdi], xmm1 ; ret
0x0000000000036c74 : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000036fe1 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000012732a : movups xmmword ptr [rdx], xmm1 ; ret
0x0000000000129e8a : movups xmmword ptr [rdx], xmm2 ; ret
0x000000000012a78a : movups xmmword ptr [rdx], xmm3 ; ret
0x000000000012a76a : movups xmmword ptr [rdx], xmm4 ; ret
0x00000000000eb079 : movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000016b919 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000025062 : movzx eax, al ; add eax, 1 ; push rax ; call rbx
0x0000000000128106 : movzx eax, al ; add eax, 1 ; ret
0x00000000001300bf : movzx eax, al ; add rsp, 0x18 ; ret
0x00000000000ee1e5 : movzx eax, al ; add rsp, 0x58 ; ret
0x00000000001248d4 : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001355cf : movzx eax, al ; add rsp, 8 ; ret
0x00000000000b4f05 : movzx eax, al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000c9f4e : movzx eax, al ; lea rax, qword ptr [rax + rax - 1] ; ret
0x00000000000ee425 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e6db : movzx eax, al ; neg eax ; pop rbx ; ret
0x000000000006e69d : movzx eax, al ; neg eax ; ret
0x000000000007b55d : movzx eax, al ; pop rbx ; neg eax ; ret
0x00000000001235d2 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000003881f : movzx eax, al ; ret
0x0000000000030439 : movzx eax, ax ; ret
0x000000000007dd14 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007cda4 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007db60 : movzx eax, byte ptr [rax] ; pop r13 ; pop r14 ; ret
0x000000000007b4d6 : movzx eax, byte ptr [rax] ; ret
0x00000000000e3c00 : movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x00000000000922d8 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000015be80 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000947f1 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000922f3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000015b433 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; vzeroupper ; ret
0x000000000007dba0 : movzx eax, byte ptr [rdx] ; ret
0x000000000007dd15 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a40a0 : movzx eax, cl ; pop rbx ; ret
0x000000000010d4e8 : movzx eax, dh ; or eax, edi ; bswap eax ; ret
0x000000000010d4cb : movzx eax, si ; or eax, edi ; bswap eax ; ret
0x000000000010d4e7 : movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x00000000000305f2 : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000eb0d4 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000011b026 : movzx ecx, byte ptr [r9 - 1] ; test cl, cl ; jne 0x11b015 ; ret
0x000000000011b027 : movzx ecx, byte ptr [rcx - 1] ; test cl, cl ; jne 0x11b014 ; ret
0x00000000000a342a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa3429 ; ret
0x00000000000a34da : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa34d9 ; ret
0x00000000001629a4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00000000000a3b5c : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000922f0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000015be83 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000007911a : movzx edx, byte ptr [rax] ; pop rbx ; mov eax, edx ; ret
0x0000000000035bf7 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x35bde ; ret
0x00000000000caa50 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0xcaa30 ; xor eax, eax ; ret
0x00000000000e0a20 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0xe0a00 ; xor eax, eax ; ret
0x00000000000924b1 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000015adbb : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; vzeroupper ; ret
0x000000000015b26b : movzx edx, byte ptr [rdx + rdi] ; sub eax, edx ; vzeroupper ; ret
0x000000000015501f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000015be08 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000092347 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000015ac3e : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000166614 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000166674 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000166664 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000166654 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000166644 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000166634 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000166624 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000144800 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000162757 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x00000000001665fb : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000144ee0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000947f4 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000090952 : movzx edx, byte ptr [rsp + 0x16] ; mov byte ptr [rdi + 6], dl ; ret
0x0000000000090b04 : movzx edx, byte ptr [rsp + 0xe] ; mov byte ptr [rdi + 6], dl ; ret
0x0000000000090919 : movzx edx, byte ptr [rsp - 0xc] ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000908fb : movzx edx, byte ptr [rsp - 6] ; mov byte ptr [rdi + 2], dl ; ret
0x000000000009481a : movzx edx, dl ; sub eax, edx ; ret
0x0000000000144780 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000144e70 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000090931 : movzx edx, word ptr [rsp + 0xc] ; mov word ptr [rdi + 4], dx ; ret
0x0000000000090ae3 : movzx edx, word ptr [rsp - 0x14] ; mov word ptr [rdi + 4], dx ; ret
0x0000000000099947 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000036d29 : mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x000000000003709f : mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000036d28 : mulsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x000000000003709e : mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000047399 : neg byte ptr [rbx - 0x3d] ; nop dword ptr [rax] ; ret
0x0000000000121085 : neg dword ptr [rcx] ; or al, byte ptr [rax] ; ret
0x00000000000b600d : neg eax ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x000000000003808b : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000016030f : neg eax ; or eax, 1 ; vzeroupper ; ret
0x00000000000ee428 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e6de : neg eax ; pop rbx ; ret
0x0000000000024a01 : neg eax ; ret
0x0000000000143f27 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000024383 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000011b4da : nop ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xf41
0x000000000011c045 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x17e9
0x000000000011c0d4 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x65e9
0x000000000011bec6 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8944
0x0000000000161e0e : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000b7e7a : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000000d2e26 : nop ; add rdx, 1 ; cmp dword ptr [rdi], edx ; jg 0xd2e29 ; ret
0x0000000000090a59 : nop ; add rdx, r8 ; jmp rdx
0x0000000000090988 : nop ; add rdx, rax ; jmp rdx
0x00000000000816cf : nop ; add rsp, 8 ; ret
0x00000000000a47ef : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000007890f : nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x000000000009458f : nop ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000137baf : nop ; call rax
0x00000000000259b7 : nop ; call rcx
0x00000000000c91b7 : nop ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x3d48
0x000000000016531f : nop ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016530f : nop ; lea rax, qword ptr [rdi] ; ret
0x0000000000086daf : nop ; lea rax, qword ptr [rdx - 0x10] ; ret
0x0000000000151abf : nop ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000d122f : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x0000000000090a6f : nop ; mov byte ptr [rdi], 0 ; lea rax, qword ptr [rdi + rax - 1] ; ret
0x000000000013eadf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000a122f : nop ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000014f79f : nop ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000009fdbf : nop ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009fddf : nop ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009fdcf : nop ; mov dword ptr [rdi], edx ; ret
0x000000000013ecbf : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000009edbf : nop ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000873bf : nop ; mov eax, 0x16 ; ret
0x000000000011836f : nop ; mov eax, 0xffffffff ; ret
0x00000000001148ef : nop ; mov eax, 1 ; pop rbx ; ret
0x00000000000e08cf : nop ; mov eax, 2 ; ret
0x0000000000107f40 : nop ; mov eax, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000b5ecf : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xb5f39 ; ret
0x00000000000b5eff : nop ; mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xb5f39 ; ret
0x00000000000b5f1f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xb5f39 ; ret
0x00000000000d5bef : nop ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000047d4f : nop ; mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000013f07f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a041f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000075c36 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000014f7df : nop ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000009fe1f : nop ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000b69ef : nop ; mov rax, 1 ; ret
0x00000000001081ce : nop ; mov rdx, r13 ; call rax
0x00000000000868cf : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000014f77f : nop ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000014f76f : nop ; mov word ptr [rcx], dx ; ret
0x000000000009fdaf : nop ; mov word ptr [rdi], dx ; ret
0x000000000009ee9f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000088693 : nop ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000001219ef : nop ; pop rbx ; ret
0x0000000000075caf : nop ; ret
0x000000000015b7bf : nop ; vzeroupper ; xor eax, eax ; ret
0x00000000000a2e7f : nop ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000c31cf : nop ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000dfd7f : nop ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000122e8f : nop ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000087d5f : nop ; xor eax, eax ; ret
0x000000000010c87f : nop ; xor ecx, ecx ; mov rax, rcx ; ret
0x000000000009060f : nop ; xor edx, edx ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000b61cf : nop ; xor rax, rax ; ret
0x000000000008997b : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000003a548 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000085d4b : nop dword ptr [rax + rax] ; jmp rax
0x000000000011873b : nop dword ptr [rax + rax] ; mov eax, ecx ; ret
0x0000000000101d4b : nop dword ptr [rax + rax] ; mov eax, edx ; ret
0x000000000009eddb : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000108a7b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000a4eb3 : nop dword ptr [rax + rax] ; mov rax, r8 ; ret
0x00000000000a007b : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000ef4ab : nop dword ptr [rax + rax] ; mov rdx, rax ; jmp 0xef478
0x000000000007756b : nop dword ptr [rax + rax] ; pop rbx ; ret
0x000000000002ff93 : nop dword ptr [rax + rax] ; ret
0x00000000000a4013 : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00000000000488a3 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000007800b : nop dword ptr [rax + rax] ; xor edx, edx ; jmp 0x77fde
0x0000000000034f6b : nop dword ptr [rax + rax] ; xor r12d, r12d ; jmp 0x34f41
0x00000000000b5f3b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000b69bc : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000011d46c : nop dword ptr [rax] ; add rsp, 8 ; ret
0x000000000003719c : nop dword ptr [rax] ; addss xmm0, xmm0 ; ret
0x000000000016c149 : nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000825f9 : nop dword ptr [rax] ; call rax
0x000000000014f75c : nop dword ptr [rax] ; mov byte ptr [rcx], dl ; ret
0x000000000009fd9c : nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x000000000009fa9c : nop dword ptr [rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000909d4 : nop dword ptr [rax] ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000a410d : nop dword ptr [rax] ; mov eax, 0x80 ; pop rbx ; ret
0x000000000007ff94 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000000f43bd : nop dword ptr [rax] ; mov eax, 1 ; ret
0x000000000010d514 : nop dword ptr [rax] ; mov eax, edi ; shr eax, 0x18 ; ret
0x000000000009facd : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000d2f05 : nop dword ptr [rax] ; mov qword ptr [rdx + 0x20], rsi ; xor eax, eax ; ret
0x000000000005270d : nop dword ptr [rax] ; mov r10d, 1 ; jmp rax
0x000000000009e70c : nop dword ptr [rax] ; mov rax, rdi ; ret
0x00000000000cac35 : nop dword ptr [rax] ; mov rsi, rsp ; call qword ptr [rdx]
0x000000000016c505 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007f365 : nop dword ptr [rax] ; pop rbx ; ret
0x000000000002d234 : nop dword ptr [rax] ; ret
0x00000000000f0fcc : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000086db5 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000015f6ed : nop dword ptr [rax] ; xor eax, eax ; vzeroupper ; ret
0x0000000000073add : nop dword ptr [rax] ; xor edx, edx ; mov rax, rdx ; ret
0x000000000010c7dc : nop dword ptr [rax] ; xor esi, esi ; mov rax, rsi ; ret
0x000000000003a547 : nop dword ptr cs:[rax + rax] ; call qword ptr [rbx]
0x000000000004db17 : nop dword ptr cs:[rax + rax] ; ret
0x0000000000085d4a : nop word ptr [rax + rax] ; jmp rax
0x000000000011873a : nop word ptr [rax + rax] ; mov eax, ecx ; ret
0x0000000000101d4a : nop word ptr [rax + rax] ; mov eax, edx ; ret
0x000000000010bd92 : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000ef4aa : nop word ptr [rax + rax] ; mov rdx, rax ; jmp 0xef479
0x000000000002ff92 : nop word ptr [rax + rax] ; ret
0x0000000000080d8a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000b5f3a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000367f1 : not eax ; and eax, ecx ; ret
0x0000000000036b5f : not eax ; and eax, edx ; ret
0x0000000000138147 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000130239 : not eax ; shr eax, 0x1f ; ret
0x0000000000138146 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000155f97 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000159ba9 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000155fc5 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000003b940 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000d1602 : or al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000ead75 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000122df2 : or al, 0 ; add byte ptr [rax], al ; ret
0x000000000008669a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000084a1a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000003cf64 : or al, 0 ; add byte ptr [rbp + 0x15], dh ; xor eax, eax ; ret
0x0000000000089803 : or al, 0 ; add byte ptr [rsp + rbp - 0x75], dh ; push rdx ; js 0x8980c ; ret 0
0x00000000000f7007 : or al, 0 ; add rsp, 0x18 ; ret
0x00000000000f4188 : or al, 0 ; add rsp, 8 ; ret
0x00000000000fe54c : or al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000008932b : or al, 0 ; cmovne rax, rdx ; ret
0x00000000000bd683 : or al, 0 ; jmp 0xbd691
0x00000000000f4fdb : or al, 0 ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000f7645 : or al, 0 ; mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000fe815 : or al, 0 ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000f6faf : or al, 0 ; pop rbp ; pop r12 ; ret
0x00000000000f6a2c : or al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6f7d : or al, 0 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f56e1 : or al, 0 ; ret
0x00000000000f04a7 : or al, 0 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000160d17 : or al, 0x16 ; jne 0x160cf0 ; vzeroupper ; ret
0x000000000008b77e : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jne 0x8b778 ; ret
0x00000000000922d6 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000000224d9 : or al, 0x1a ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000000fb8ae : or al, 0x30 ; ror byte ptr [rcx], 0xd0 ; ret
0x00000000000ffffd : or al, 0x31 ; test ecx, ecx ; jne 0x10000e ; ret
0x000000000010005a : or al, 0x31 ; test ecx, ecx ; jne 0x10006e ; ret
0x00000000000ff6bb : or al, 0x31 ; test ecx, ecx ; jne 0xff6ce ; ret
0x00000000000ff726 : or al, 0x31 ; test ecx, ecx ; jne 0xff736 ; ret
0x00000000000d4177 : or al, 0x39 ; ret 0x147d
0x00000000000fc2af : or al, 0x3f ; shr eax, cl ; and eax, 3 ; ret
0x000000000010be8d : or al, 0x45 ; test edx, edx ; jne 0x10be35 ; mov rax, rdi ; ret
0x00000000000c8409 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000038144 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000000c86be : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c862e : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000001255f3 : or al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000122ac3 : or al, 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000b5ff3 : or al, 0x48 ; cmp eax, edx ; jne 0xb5fe8 ; xor eax, eax ; ret
0x0000000000118200 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000007b6d3 : or al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b7273 : or al, 0x48 ; mov eax, edx ; pop rbx ; ret
0x0000000000118733 : or al, 0x4c ; cmp edx, eax ; jne 0x11871f ; ret
0x000000000008c5eb : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011d5e3 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000107933 : or al, 0x5b ; ret
0x00000000001093b8 : or al, 0x5d ; pop r12 ; pop r13 ; ret
0x0000000000090935 : or al, 0x66 ; mov dword ptr [rdi + 4], edx ; ret
0x0000000000036ebb : or al, 0x75 ; or dh, dl ; addps xmm0, xmm0 ; ret
0x0000000000119b2b : or al, 0x75 ; ret 0x758b
0x00000000000d18e6 : or al, 0x82 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009f4ec : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000004e64a : or al, 0x83 ; ret
0x00000000000a4041 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x00000000000908b3 : or al, 0x89 ; add rcx, r9 ; jmp rcx
0x000000000003795b : or al, 0x89 ; jae 0x379a6 ; xor eax, eax ; pop rbx ; ret
0x00000000000a40cb : or al, 0x89 ; ret 0xe283
0x0000000000090f43 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000096d44 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000ffffa : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x100011 ; ret
0x0000000000100057 : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x100071 ; ret
0x00000000000ff6b8 : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0xff6d1 ; ret
0x00000000000ff723 : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0xff739 ; ret
0x00000000001424ad : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000013cefd : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000000ff927 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000010022c : or al, 0x8e ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x100249 ; ret
0x00000000000ff90c : or al, 0x8e ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0xff929 ; ret
0x00000000000dfa2a : or al, 0x8f ; add rcx, rdi ; jmp rcx
0x000000000003015c : or al, 0x8f ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x30179 ; ret
0x0000000000161af3 : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000009ec6b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000011d191 : or al, 0xa ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013cf01 : or al, 0xb ; jmp r9
0x000000000009ec6f : or al, 0xb ; jmp rcx
0x000000000012a736 : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000ececc : or al, 0xe8 ; out dx, al ; ret 1
0x0000000000055d7f : or al, 0xe9 ; jmp rdi
0x00000000000b5e25 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x000000000009f783 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000002d94c : or al, 0xf0 ; test rcx, rcx ; je 0x2d95c ; call rcx
0x0000000000144a03 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000056fd5 : or al, 0xf6 ; ret 0xf01
0x000000000005a194 : or al, 0xf6 ; ret 0xf08
0x0000000000057114 : or al, 0xf6 ; ret 0xf40
0x00000000000af46e : or al, 0xf8 ; dec dword ptr [rcx - 0x39] ; ret 0xfffe
0x000000000008923a : or al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000124a5c : or al, 1 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7507
0x00000000000eb9c6 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000eba60 : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009f9c0 : or al, 5 ; add byte ptr [rax], al ; ret
0x000000000009069e : or al, 7 ; test cl, cl ; jne 0x90696 ; ret
0x00000000000d4aad : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015516d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000ce4b9 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000157d81 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000155191 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000d0258 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000102621 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x7e859
0x0000000000122dd2 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000115418 : or al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000011cef9 : or al, byte ptr [rax] ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x11cf11 ; ret
0x000000000011cfe9 : or al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x00000000001193d1 : or al, byte ptr [rax] ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121087 : or al, byte ptr [rax] ; ret
0x0000000000113fc5 : or al, byte ptr [rax] ; test byte ptr [rdi], 0x30 ; je 0x113fd9 ; xor eax, eax ; ret
0x000000000011cb5c : or al, byte ptr [rax] ; test eax, eax ; je 0x11cb6e ; ret
0x0000000000121a08 : or al, byte ptr [rax] ; test eax, eax ; je 0x121a16 ; ret
0x000000000011d544 : or al, byte ptr [rax] ; test rax, rax ; je 0x11d557 ; ret
0x000000000011e4f9 : or al, byte ptr [rax] ; test rax, rax ; jne 0x11e50f ; ret
0x0000000000115d28 : or al, byte ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004752d : or al, byte ptr [rcx - 0x75] ; pop rsi ; cld ; jmp 0x474fd
0x000000000015e6b7 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000036007 : or al, ch ; ret
0x00000000000fcf74 : or al, ch ; ret 0
0x00000000000fcdf8 : or al, ch ; ret 0xc3
0x00000000000fcdc8 : or al, ch ; xchg eax, edx ; ret
0x000000000010bc1a : or al, ch ; xor bh, 0xff ; dec dword ptr [rax - 0x77] ; clc ; ret
0x0000000000090f48 : or bh, byte ptr [rsi] ; jmp r10
0x00000000000d95f7 : or bh, dh ; ret
0x00000000000d5bed : or bl, al ; nop ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000e2c21 : or bl, al ; nop dword ptr [rax + rax] ; ret
0x00000000000f4157 : or bl, al ; nop dword ptr [rax] ; ret
0x00000000000f7a61 : or bl, bpl ; ret 0x1f0f
0x000000000012c24d : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000f8538 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000e297d : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x000000000003968d : or bl, ch ; ret
0x000000000007b0a2 : or bl, ch ; ret 0x1f0f
0x0000000000144bc3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000047447 : or byte ptr [ecx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000d12a1 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00000000000d1231 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000ccf72 : or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000084c24 : or byte ptr [r11 + 0x94807e0], al ; ret
0x00000000000f7a08 : or byte ptr [r11 + 0x94901e0], al ; ret 0x894d
0x0000000000035e1c : or byte ptr [r11 + r9*4 + 0x47], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000f7946 : or byte ptr [r11 + r9*4 + 0x57], r9b ; adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000812e3 : or byte ptr [r13 - 0x77], cl ; ret 0x8349
0x000000000009ba1f : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d1226 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000d12c6 : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x0000000000079118 : or byte ptr [r15], r9b ; mov dh, 0x10 ; pop rbx ; mov eax, edx ; ret
0x0000000000076fe3 : or byte ptr [r8 + 0x29], r9b ; ror dword ptr [rax + 0x29], cl ; ret
0x00000000000d165d : or byte ptr [r8 + 0x63], cl ; push rbx ; add al, 0xeb ; ret 0x1f0f
0x00000000000dc429 : or byte ptr [r8 + 0x63], cl ; ret 0x3c80
0x00000000000d5c22 : or byte ptr [r8 + 0x63], r9b ; ret 0xb60f
0x000000000004a387 : or byte ptr [r8 + 2], r15b ; ret
0x00000000000d12b1 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000009b9fe : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x000000000011d2c9 : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000014d778 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012cf0d : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000000bc740 : or byte ptr [r8 - 0x77], r9b ; int 0x80
0x0000000000081646 : or byte ptr [r8 - 0x77], r9b ; ret 0x8348
0x000000000015e892 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000004d89b : or byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000d188d : or byte ptr [r9 + 0x4a8d046b], cl ; add ebx, ebp ; ret 0xf66
0x0000000000123b8c : or byte ptr [r9 + r9*4 - 0x1a], cl ; mov rdi, rbx ; call qword ptr [rax]
0x000000000009ba5e : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x0000000000104799 : or byte ptr [r9 - 0x77], al ; ret
0x00000000000d6952 : or byte ptr [r9 - 0x77], r9b ; fmul qword ptr [rax - 0x7d] ; ret
0x00000000000f796c : or byte ptr [r9], al ; jne 0xf79b5 ; ret
0x00000000000d11f5 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000d120e : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x00000000001213f3 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x0000000000036c59 : or byte ptr [rax + 0x21], 0xd0 ; movq xmm0, rax ; ret
0x0000000000076fe4 : or byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000007bf99 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x1d75
0x000000000010dd46 : or byte ptr [rax + 0x33], cl ; add ecx, dword ptr [rax + 9] ; ret 0x850f
0x0000000000044e2a : or byte ptr [rax + 0x39], cl ; ret
0x00000000000874c1 : or byte ptr [rax + 0x39], cl ; ret 0x6974
0x000000000010b9c8 : or byte ptr [rax + 0x39], cl ; ret 0x976
0x00000000000de550 : or byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000003dea3 : or byte ptr [rax + 0x39], cl ; ret 0xef75
0x000000000004902a : or byte ptr [rax + 0x39], cl ; ret 0xf075
0x0000000000138251 : or byte ptr [rax + 0x39], cl ; ret 0xf177
0x00000000000d72cd : or byte ptr [rax + 0x39], cl ; ret 0xf475
0x00000000000802cd : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x25], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000000dfa27 : or byte ptr [rax + 0x63], cl ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x00000000000d165e : or byte ptr [rax + 0x63], cl ; push rbx ; add al, 0xeb ; ret 0x1f0f
0x00000000000dc42a : or byte ptr [rax + 0x63], cl ; ret 0x3c80
0x00000000000d5c23 : or byte ptr [rax + 0x63], cl ; ret 0xb60f
0x00000000000ead73 : or byte ptr [rax + 0xc], bh ; pop rbx ; pop rbp ; ret
0x000000000003c5bd : or byte ptr [rax + 0xf], 0x44 ; ret 0x14eb
0x00000000000ce6d1 : or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x000000000010d4e6 : or byte ptr [rax + 0xf], al ; mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00000000000821ae : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000127324 : or byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm1 ; ret
0x000000000012a764 : or byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm4 ; ret
0x0000000000026483 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000130267 : or byte ptr [rax + 1], bh ; ret
0x000000000004a388 : or byte ptr [rax + 2], bh ; ret
0x00000000000d12b2 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000bdccf : or byte ptr [rax - 0x16a6dbbc], cl ; ret
0x0000000000042500 : or byte ptr [rax - 0x39], cl ; ret
0x0000000000121081 : or byte ptr [rax - 0x73], cl ; add eax, 0xa19f7 ; ret
0x00000000000498ec : or byte ptr [rax - 0x73], cl ; push rdi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x0000000000080e73 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x00000000000feee5 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000fef46 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x00000000000f7b3c : or byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000012c162 : or byte ptr [rax - 0x75], cl ; cmp al, 0x24 ; call rax
0x00000000000712e8 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x0000000000122dad : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000081643 : or byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8348
0x000000000009b9ff : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x0000000000108042 : or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000f56db : or byte ptr [rax - 0x77], cl ; adc eax, 0xcb9cd ; ret
0x000000000009b910 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000010d32c : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x000000000011d2ca : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000347f8 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000890e0 : or byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 1] ; ret 0x772
0x000000000012cf0e : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000000756e5 : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000bc741 : or byte ptr [rax - 0x77], cl ; int 0x80
0x000000000014d779 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000122aeb : or byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x12ed26
0x0000000000123006 : or byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x12f226
0x0000000000122beb : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x00000000000d330b : or byte ptr [rax - 0x77], cl ; ret
0x0000000000124d2d : or byte ptr [rax - 0x77], cl ; ret 0x3149
0x0000000000081647 : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000012ee47 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000129be9 : or byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000003542a : or byte ptr [rax - 0x77], cl ; ret 0xc085
0x0000000000043e22 : or byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000088ac7 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x0000000000084d6c : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000389cf : or byte ptr [rax - 0x7d], cl ; clc ; clc ; jne 0x389c9 ; xor eax, eax ; ret
0x0000000000038a1f : or byte ptr [rax - 0x7d], cl ; clc ; clc ; jne 0x38a19 ; xor eax, eax ; ret
0x0000000000084457 : or byte ptr [rax - 0x7d], cl ; rcl byte ptr [rax], 0x83 ; ret
0x000000000003383e : or byte ptr [rax - 0x7d], cl ; ret
0x000000000003d51d : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000073723 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000001553cc : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000035e5d : or byte ptr [rax], 0x48 ; add ecx, dword ptr [rdi + 0x20] ; mov rax, rcx ; ret
0x0000000000088cee : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000002c9dc : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000008583f : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000003ed83 : or byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000001553cd : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000157f21 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001553f1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001674d2 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret 0x8b48
0x00000000000a4121 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000250b1 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000003e7ab : or byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0xed75
0x000000000008572e : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x85700 ; ret
0x000000000007df19 : or byte ptr [rax], al ; add rsp, 0x80 ; ret
0x0000000000134b3e : or byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000135937 : or byte ptr [rax], al ; call 0xf1be4
0x000000000013470b : or byte ptr [rax], al ; call qword ptr [rax]
0x000000000013476a : or byte ptr [rax], al ; jne 0x134780 ; jmp 0x13479a
0x00000000000fd697 : or byte ptr [rax], al ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000004d89c : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000f96fd : or byte ptr [rax], al ; pop rbx ; ret
0x00000000001382a0 : or byte ptr [rax], al ; ret
0x0000000000134c7c : or byte ptr [rax], al ; test eax, eax ; jne 0x134c99 ; xor eax, eax ; pop rbx ; ret
0x00000000000a2f5d : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a2f9b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a2f3b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000015ce7e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000fd696 : or byte ptr [rax], r8b ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000119148 : or byte ptr [rbp + 0x2e], dh ; add rsp, 0x38 ; ret
0x00000000000d1515 : or byte ptr [rbp + 0x39], al ; ret 0x457f
0x0000000000048bd8 : or byte ptr [rbp + 0x39], cl ; ret
0x0000000000118d24 : or byte ptr [rbp + 0x5d5b2b04], cl ; ret
0x00000000000371e7 : or byte ptr [rbp + 6], dh ; addss xmm0, xmm0 ; ret
0x00000000000d42d0 : or byte ptr [rbp - 0x72b200be], cl ; pop rsp ; ret 0xf08
0x00000000000812e4 : or byte ptr [rbp - 0x77], cl ; ret 0x8349
0x000000000002d257 : or byte ptr [rbx + 0x37403fe], al ; ret
0x000000000007cd2e : or byte ptr [rbx + 0x48], bl ; sub eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000887f2 : or byte ptr [rbx + 0x50], 1 ; call rcx
0x000000000012eafe : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000001234a9 : or byte ptr [rbx + 0x5d], bl ; jmp rcx
0x0000000000085a78 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; jmp rax
0x0000000000088bc8 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000026893 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000088a9f : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000251bb : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000104a76 : or byte ptr [rbx + 0x5e0b185f], cl ; sbb dh, dh ; ret
0x000000000012c7d6 : or byte ptr [rbx + 0x74fff878], al ; jnp 0x12c769 ; ret 0x3901
0x00000000000f8101 : or byte ptr [rbx + 0x94801e2], al ; ret 0x8948
0x0000000000084c25 : or byte ptr [rbx + 0x94807e0], al ; ret
0x00000000000f7a09 : or byte ptr [rbx + 0x94901e0], al ; ret 0x894d
0x0000000000035e1d : or byte ptr [rbx + rcx*4 + 0x47], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000f7947 : or byte ptr [rbx + rcx*4 + 0x57], cl ; adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000075716 : or byte ptr [rbx - 0x3b7cb7fe], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000255fe : or byte ptr [rbx - 0x3dc667bb], 0xf ; ret 0x4589
0x0000000000060fc9 : or byte ptr [rbx - 0x60f6b], cl ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000131bd2 : or byte ptr [rbx - 0x6bf0f502], al ; ret
0x0000000000070971 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x00000000000ee4c4 : or byte ptr [rbx - 0x7af00002], al ; ret 0
0x0000000000054415 : or byte ptr [rbx - 0xdf7b], cl ; dec dword ptr [rdi] ; ret
0x000000000004a0ab : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000124e42 : or byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp - 0x75], 1 ; sbb dword ptr [rbp + 0x31], ecx ; ret 0x314d
0x00000000000e1c41 : or byte ptr [rcx + 0x39], cl ; vpsubsw ymm8, ymm1, ymmword ptr [rbp + 0x39] ; ret 0xb17f
0x00000000000731ce : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000072b9b : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x0000000000071648 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x00000000000d188e : or byte ptr [rcx + 0x4a8d046b], cl ; add ebx, ebp ; ret 0xf66
0x0000000000118e51 : or byte ptr [rcx + 0x80fe], al ; add byte ptr [rdi], cl ; ret 0xfc3
0x000000000004885b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000049480 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000114d53 : or byte ptr [rcx + rcx*4 - 0x11], cl ; mov rsi, qword ptr [rsp] ; call r12
0x0000000000123b8d : or byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000039032 : or byte ptr [rcx + rcx*4 - 2], cl ; call r14
0x00000000000907fe : or byte ptr [rcx + rcx*8 - 0x3fce128b], al ; ret
0x0000000000048862 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00000000000d387a : or byte ptr [rcx - 0x75], cl ; je 0xd38aa ; or byte ptr [rcx], ch ; ret
0x000000000009ba5f : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x000000000010479a : or byte ptr [rcx - 0x77], al ; ret
0x0000000000125e83 : or byte ptr [rcx - 0x77], al ; ret 0x8948
0x00000000000d6953 : or byte ptr [rcx - 0x77], cl ; fmul qword ptr [rax - 0x7d] ; ret
0x0000000000123b7b : or byte ptr [rcx - 0x77], cl ; in al, 0x49 ; lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x0000000000082ced : or byte ptr [rcx - 0x77], cl ; ret
0x0000000000122336 : or byte ptr [rcx - 0x77], cl ; ret 0x8948
0x00000000000e5065 : or byte ptr [rcx - 0x77], cl ; ret 0xdb31
0x00000000000fefbc : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfefcd ; ret
0x00000000000ff04c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xff05d ; ret
0x00000000000ff0ec : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xff0fd ; ret
0x00000000000ff17c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xff18d ; ret
0x00000000000ff20c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xff21d ; ret
0x00000000000ff29c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xff2ad ; ret
0x00000000000ff33c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xff34d ; ret
0x00000000000ff3dc : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xff3ed ; ret
0x00000000000ff47c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xff48d ; ret
0x00000000000ff50c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xff51d ; ret
0x00000000000ff5a7 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xff5b8 ; ret
0x00000000000ff63c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xff64d ; ret
0x00000000000ff98e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xff99f ; ret
0x00000000000ffa1e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xffa2f ; ret
0x00000000000ffaae : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xffabf ; ret
0x00000000000ffb2e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xffb3f ; ret
0x00000000000ffbbe : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xffbcf ; ret
0x00000000000ffc3e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xffc4f ; ret
0x00000000000ffcce : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xffcdf ; ret
0x00000000000ffd5e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xffd6f ; ret
0x00000000000ffdee : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xffdff ; ret
0x00000000000ffe7e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xffe8f ; ret
0x00000000000fff0b : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfff1c ; ret
0x00000000000fff8e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfff9f ; ret
0x00000000000f7f07 : or byte ptr [rcx - 0x7d], al ; ret 0x4901
0x00000000000a4c85 : or byte ptr [rcx - 0x7d], cl ; ret
0x000000000003e5ea : or byte ptr [rcx - 0x7d], cl ; ret 0x8508
0x00000000000eb9d6 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000eba78 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000f796d : or byte ptr [rcx], al ; jne 0xf79b4 ; ret
0x00000000000d128c : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000d120f : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x0000000000123d73 : or byte ptr [rcx], al ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000000dd2e1 : or byte ptr [rcx], bh ; ret
0x00000000000d11f6 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000000b1073 : or byte ptr [rcx], ch ; ret
0x00000000000e55fc : or byte ptr [rcx], dh ; fild dword ptr [rbx - 0x6bf0fb08] ; ret
0x000000000003ab88 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000047448 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000002a1f7 : or byte ptr [rdi], 0x85 ; ret
0x00000000000a402b : or byte ptr [rdi], 0xa2 ; jmp 0xa3ff7
0x0000000000030438 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000269ca : or byte ptr [rdi], cl ; mov bh, 5 ; ret 0x1612
0x000000000007b4d5 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000079119 : or byte ptr [rdi], cl ; mov dh, 0x10 ; pop rbx ; mov eax, edx ; ret
0x000000000011e7e0 : or byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000003dabf : or byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000128105 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x00000000001300be : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x18 ; ret
0x00000000000ee1e4 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x00000000000fbd5c : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000001235d1 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000453a8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000d5d21 : or byte ptr [rdi], cl ; test byte ptr [rbx + 0x5bffffff], al ; ret
0x00000000000aec61 : or byte ptr [rdi], cl ; test dword ptr [rax], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000b0869 : or byte ptr [rdi], cl ; test dword ptr [rax], edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000aee89 : or byte ptr [rdi], cl ; test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000af521 : or byte ptr [rdi], cl ; test eax, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000e2cc0 : or byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000fe898 : or byte ptr [rdi], cl ; xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000024272 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000008ded6 : or byte ptr [rdi], dh ; ret
0x000000000008ded5 : or byte ptr [rdi], sil ; ret
0x000000000008908e : or byte ptr [rdx + 0xf], dh ; mov qword ptr [rdi], rsi ; mov rax, r8 ; ret
0x00000000000d1232 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000d12a2 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x00000000000f1c86 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000f1c85 : or byte ptr [rip + 0x100f], r12b ; ret
0x00000000000d12e5 : or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x000000000009e611 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x0000000000056950 : or byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000009ba20 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d12c7 : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000d1227 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x00000000000369ff : or cl, bl ; std ; fstp st(1) ; ret
0x000000000015a964 : or cl, byte ptr [rax + 0x29] ; clc ; ret
0x000000000002cb85 : or cl, byte ptr [rax + 0x39] ; ret 0x1576
0x000000000007697e : or cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000000e06ee : or cl, byte ptr [rax - 0x77] ; ret 0xa9e8
0x00000000000bc78a : or cl, byte ptr [rax - 0x7d] ; call qword ptr [rdi]
0x0000000000072b3b : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000006f1c5 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000124289 : or cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x0000000000137b76 : or cl, byte ptr [rcx + rcx*4 - 0xe] ; add r9, qword ptr [rsp + 8] ; call rax
0x00000000001035b8 : or cl, byte ptr [rcx - 0x77] ; fisttp qword ptr [rax + 0x29] ; fimul word ptr [rax - 0x77] ; ret
0x00000000000e56be : or cl, byte ptr [rcx - 0x77] ; ret 0xf44
0x00000000000db652 : or cl, byte ptr [rcx - 0x7cb7fb8e] ; ret 0x4808
0x000000000007cd7d : or cl, byte ptr [rdi] ; mov dh, 0 ; ret
0x000000000014f6a6 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000131bd5 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000003325a : or cl, ch ; ret
0x00000000000a3935 : or cl, cl ; cmove rax, rdx ; ret
0x0000000000144ae3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000e6d57 : or dh, byte ptr [rbp + 0xe] ; mov qword ptr [r8], r9 ; xor eax, eax ; ret
0x0000000000036ae5 : or dh, byte ptr [rbp + 8] ; fadd st(0) ; add rsp, 8 ; ret
0x0000000000069958 : or dh, byte ptr [rbp + rdx - 0x77] ; ret 0x854d
0x0000000000100a96 : or dh, byte ptr [rcx] ; rol byte ptr [rbp - 0x7b], cl ; in al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x00000000000d5b7a : or dh, byte ptr [rsi + rdi + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f7f45 : or dh, dh ; ret 0x7401
0x00000000000811a6 : or dh, dh ; ret 0x7502
0x000000000011456a : or dh, dh ; ret 0xf02
0x0000000000036ebd : or dh, dl ; addps xmm0, xmm0 ; ret
0x00000000000907b8 : or dl, cl ; jne 0x907a9 ; cmp r8d, ecx ; je 0x907a9 ; ret
0x000000000012c613 : or dword ptr [eax], eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000050bf9 : or dword ptr [rax + 1], 0xfffffff0 ; jmp rax
0x0000000000051ed7 : or dword ptr [rax + 1], 0xfffffff8 ; jmp rax
0x00000000000e3a74 : or dword ptr [rax + 8], 0x2000 ; ret
0x0000000000127297 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x00000000000b72be : or dword ptr [rax - 0x73], ecx ; push rbx ; add dword ptr [rbx + 0x48], ebx ; mov eax, edx ; ret
0x00000000000712ac : or dword ptr [rax - 0x75], ecx ; mov edi, 0xe0 ; jmp rax
0x00000000000f444d : or dword ptr [rax - 0x7d], ecx ; call 0xffffffffc3488c5d
0x000000000002ecbe : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000ae8c3 : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000af4cb : or dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x000000000009e94e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000012c614 : or dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001552fd : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015cd2f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000155257 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000779ef : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000024a12 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000eaf7a : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000003ed7a : or dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x8e ; ret
0x000000000009db65 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000006e8ea : or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000f5024 : or dword ptr [rax], eax ; call 0x71285
0x0000000000123215 : or dword ptr [rax], eax ; jmp qword ptr [rdx + rax*8]
0x000000000012c510 : or dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x00000000001219ed : or dword ptr [rax], eax ; nop ; pop rbx ; ret
0x000000000012bdd2 : or dword ptr [rax], eax ; nop dword ptr [rax] ; pop rbx ; ret
0x0000000000131c68 : or dword ptr [rax], eax ; test eax, eax ; je 0x131c80 ; xor eax, eax ; ret
0x0000000000162f26 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000125da5 : or dword ptr [rbx + 0x413b2404], ecx ; sbb byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8b48
0x00000000000712f7 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007bfc0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000008079d : or dword ptr [rbx], 8 ; pop rbx ; ret
0x0000000000076533 : or dword ptr [rcx + 0x14], edi ; add byte ptr [rax - 0x39], cl ; ret
0x000000000009f4ed : or dword ptr [rcx - 0x73], 0xc ; or edi, dword ptr [rsi] ; jmp rcx
0x000000000012fef6 : or dword ptr [rcx], eax ; ja 0x12ff26 ; ret
0x000000000002d40f : or dword ptr [rcx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d2ec0 : or dword ptr [rdi + 0x90], eax ; xor eax, eax ; ret
0x0000000000138127 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x000000000011b9be : or dword ptr [rdi + rbp*8 - 0x7c], esi ; ror byte ptr [rdi], 0x94 ; ret 0xa3c
0x000000000004da38 : or dword ptr [rdi - 0x2b], esi ; mov rax, rsi ; ret
0x0000000000071308 : or dword ptr [rdi], 0x20 ; ret
0x0000000000038782 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000013d4dc : or dword ptr [rdi], ecx ; sub dword ptr [rdi], esp ; jmp r9
0x000000000014f686 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000003e7f8 : or dword ptr [rdi], ecx ; xchg eax, edi ; ret 0xd284
0x00000000000893e5 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x3145
0x0000000000089393 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xf631
0x000000000011b98b : or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd108
0x00000000000f710a : or dword ptr [rdi], ecx ; xchg edi, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000674cf : or dword ptr [rdx + 0x5f], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000089467 : or dword ptr [rdx - 1], edi ; cmovbe eax, edx ; ret
0x0000000000115d27 : or dword ptr [rdx], 0x5bc03100 ; pop rbp ; pop r12 ; ret
0x00000000000597c0 : or dword ptr [rsi - 0x2e], esi ; mov qword ptr [rdi], rcx ; ret
0x00000000000f2602 : or eax, 0x14ba ; add byte ptr [rcx], ch ; ret 0xc085
0x0000000000036bbf : or eax, 0x15590c ; orpd xmm0, xmm1 ; ret
0x0000000000118c5a : or eax, 0x1975c085 ; mov eax, r8d ; ret
0x00000000000a06e1 : or eax, 0x1c478d48 ; ret
0x00000000000a1551 : or eax, 0x1d478d48 ; ret
0x000000000014f708 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000012defa : or eax, 0x1f0f4feb ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000dfd99 : or eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x00000000000ba557 : or eax, 0x30c48348 ; pop rbx ; ret
0x000000000006fca2 : or eax, 0x401f0f08 ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000006f5ea : or eax, 0x401f0f08 ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000b9155 : or eax, 0x440f4800 ; ret 0x8d48
0x000000000008a706 : or eax, 0x440f4800 ; ret 0xfc3
0x00000000000a426a : or eax, 0x441f0f ; add byte ptr [rcx - 0x77], cl ; ret 0x3949
0x0000000000089287 : or eax, 0x450f4800 ; ret 0x66c3
0x00000000000e2c1a : or eax, 0x48c03100 ; add esp, 8 ; ret
0x00000000000eb1e1 : or eax, 0x528b4800 ; sbb byte ptr [rax - 0x73], cl ; lodsb al, byte ptr [rsi] ; ret 0x8207
0x00000000000e297a : or eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x000000000007ae0a : or eax, 0x5bd88948 ; pop rbp ; pop r12 ; ret
0x00000000000aa704 : or eax, 0x5d90000 ; ret
0x000000000009f7a5 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x00000000000f1d31 : or eax, 0x80000000 ; mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000155ea7 : or eax, 0x83480000 ; ret 0x4910
0x0000000000157a41 : or eax, 0x83480000 ; ret 0xe910
0x0000000000155ed5 : or eax, 0x83480000 ; ret 0xeb10
0x00000000000a0e99 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x0000000000059f51 : or eax, 0x8927634d ; ret 0x8941
0x00000000000f605f : or eax, 0x89ffff64 ; ret
0x00000000000b160a : or eax, 0x8c48348 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x000000000008a6ad : or eax, 0x8e58000 ; je 0x8a679 ; ret
0x00000000000b6622 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x00000000000bd680 : or eax, 0xc2d1b ; jmp 0xbd694
0x00000000000c87eb : or eax, 0xe8890004 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005734a : or eax, 0xe8c14800 ; add cl, byte ptr [rax - 0x77] ; ret 0xf748
0x00000000000e69d1 : or eax, 0xeb0b7500 ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret 0xda4
0x0000000000144993 : or eax, 0xf7f0ff3 ; ret
0x00000000000f53c6 : or eax, 0xfffc84e8 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000038091 : or eax, 0xffffffff ; ret
0x000000000015be49 : or eax, 1 ; ret
0x0000000000160311 : or eax, 1 ; vzeroupper ; ret
0x00000000000fe48a : or eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000008d124 : or eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000015509d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000157be1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001550c1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000fe464 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000122dc2 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001092ab : or eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000003ba22 : or eax, dword ptr [rax] ; add dword ptr [rax], eax ; ret
0x000000000010d396 : or eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000a4d2d : or eax, dword ptr [rax] ; and ch, 8 ; je 0xa4cf9 ; ret
0x00000000000892d4 : or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000fee89 : or eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000109c40 : or eax, dword ptr [rax] ; pop rbp ; ret
0x00000000000fe343 : or eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000d25cc : or eax, dword ptr [rbx + 0xe7403f8] ; ret
0x00000000000a4726 : or eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000036f2b : or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x000000000010d4b3 : or eax, edi ; bswap eax ; ret
0x000000000004594d : or eax, edx ; cmp ecx, 0x24 ; jne 0x45936 ; ret
0x0000000000036e37 : or eax, edx ; movq xmm0, rax ; mov dword ptr [rdi], ecx ; ret
0x000000000003ac8e : or eax, edx ; ret
0x00000000000f1cd2 : or eax, esi ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x00000000000fb906 : or eax, esi ; ret
0x0000000000128219 : or ebp, dword ptr [rbx + 0x63480009] ; ret
0x0000000000032a37 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; call rax
0x000000000003198f : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; jmp rax
0x0000000000126944 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; pop rdx ; ret
0x00000000000e69d4 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret 0xda4
0x0000000000073b98 : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000144b53 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000000553ff : or ecx, dword ptr [rax + 0x39] ; ret 0x8c0f
0x000000000008728e : or ecx, dword ptr [rax + 0x63] ; ret
0x000000000007c8a7 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x00000000000889c0 : or ecx, dword ptr [rax - 0x75] ; jnp 0x88a15 ; mov rsi, r13 ; call rax
0x00000000000fb95a : or ecx, dword ptr [rax - 0x77] ; out dx, eax ; call r12
0x000000000002777d : or ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000000b979f : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000f570a : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x00000000000a4ae4 : or ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x000000000008079e : or ecx, dword ptr [rax] ; pop rbx ; ret
0x0000000000029be4 : or ecx, dword ptr [rbp - 0x77] ; ret
0x00000000000b5ec4 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000b5f14 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x000000000009f763 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x000000000007322b : or ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000011d647 : or ecx, edx ; je 0x11d674 ; ret
0x00000000000f7a5d : or ecx, edx ; mov qword ptr [rax + 8], r9 ; jmp 0xf7a2e
0x000000000013cf02 : or edi, dword ptr [rsi] ; jmp r9
0x000000000009ec70 : or edi, dword ptr [rsi] ; jmp rcx
0x00000000000f7a22 : or edi, eax ; mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x000000000003707a : or edi, edx ; movd xmm1, edi ; movaps xmm0, xmm1 ; ret
0x000000000008aa11 : or edx, eax ; or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000369d9 : or edx, esi ; je 0x36930 ; ret
0x0000000000077fca : or esi, dword ptr [rcx] ; rol byte ptr [rbx - 0x6af0f808], cl ; ret 0xc283
0x0000000000071485 : or esi, eax ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f1d1b : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x0000000000144a73 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000104537 : or esi, esi ; jno 0x104545 ; cmovne eax, edx ; ret
0x0000000000104537 : or esi, esi ; jno 0x104546 ; cmovne eax, edx ; ret
0x00000000000bb95e : or esi, esi ; ret
0x0000000000106718 : or esi, esi ; ret 0xf08
0x00000000000712f8 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007bfc1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000efcc1 : or esp, dword ptr [rsi] ; dec dword ptr [rbp + 0x63] ; dec dword ptr [rax - 0x77] ; ret 0x348
0x00000000000e3a73 : or qword ptr [rax + 8], 0x2000 ; ret
0x00000000000d2ebf : or qword ptr [rdi + 0x90], rax ; xor eax, eax ; ret
0x0000000000138126 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000038781 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000014f685 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000144bc2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000144b52 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000144ae2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000144a72 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000011e4f8 : or r8b, byte ptr [rax] ; test rax, rax ; jne 0x11e510 ; ret
0x00000000000f7a5c : or r9, rdx ; mov qword ptr [rax + 8], r9 ; jmp 0xf7a2f
0x00000000000813a6 : or r9b, bpl ; ret
0x000000000002cb84 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1576
0x000000000014f707 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000006fca1 : or rax, 0x401f0f08 ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000006f5e9 : or rax, 0x401f0f08 ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x0000000000059f50 : or rax, 0xffffffff8927634d ; ret 0x8941
0x0000000000038090 : or rax, 0xffffffffffffffff ; ret
0x000000000015e592 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000004594c : or rax, rdx ; cmp ecx, 0x24 ; jne 0x45937 ; ret
0x000000000003ac8d : or rax, rdx ; ret
0x00000000000fb905 : or rax, rsi ; ret
0x000000000011d646 : or rcx, rdx ; je 0x11d675 ; ret
0x00000000000f7a21 : or rdi, rax ; mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x0000000000036bc4 : orpd xmm0, xmm1 ; ret
0x0000000000036bc5 : orps xmm0, xmm1 ; ret
0x0000000000036f92 : orps xmm0, xmm3 ; ret
0x000000000010d4c9 : out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x000000000010747c : out 0x48, al ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000026472 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000004d9a9 : out 0x48, al ; mov eax, esi ; ret
0x0000000000039139 : out 0x48, al ; mov edi, dword ptr [rsp + 8] ; call rbx
0x0000000000123b90 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000075351 : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000120600 : out 0x48, eax ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000ce7b8 : out 0x48, eax ; lea eax, dword ptr [rdx + rax*8] ; jmp 0xce7ad
0x00000000000a4798 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086e18 : out 0x48, eax ; sub eax, 0x10 ; ret
0x0000000000039165 : out 0x4c, al ; mov edi, edi ; call rbx
0x0000000000078095 : out 0x4c, eax ; lea ecx, dword ptr [rsp + 0x10] ; call rbx
0x0000000000077fa0 : out 0x4c, eax ; lea ecx, dword ptr [rsp + 0x18] ; call rbx
0x000000000008c168 : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c890a : out 0x57, eax ; ret
0x000000000011cb5a : out 0x5b, al ; or al, byte ptr [rax] ; test eax, eax ; je 0x11cb70 ; ret
0x00000000000c3359 : out 0x5b, al ; pop rbp ; pop r12 ; ret
0x000000000012d338 : out 0x5b, eax ; ret
0x000000000008c055 : out 0x80, eax ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000030677 : out 0x80, eax ; sete al ; ret
0x0000000000124789 : out 0x89, eax ; ret
0x00000000000e04e4 : out 0x89, eax ; ret 0xb60f
0x0000000000070cda : out 0x89, eax ; ret 0xc031
0x00000000001067ef : out 0x89, eax ; ret 0xeac1
0x0000000000115416 : out 0xa3, al ; or al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000000ef762 : out 0xc, al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012eb7d : out 0xc7, eax ; add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rdx
0x00000000000f52f6 : out 0xcf, al ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000ae161 : out 0xd, al ; add byte ptr [rax + 0x21], cl ; ret 0x8948
0x000000000008a5a0 : out 0xe8, al ; cli ; jl 0x8a5a6 ; dec dword ptr [rax + 1] ; ret
0x0000000000034982 : out 0xe8, eax ; fsin ; dec dword ptr [rax - 0x77] ; ret 0xf748
0x000000000002c9d9 : out 0xe8, eax ; int1 ; or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000010ba54 : out 0xe8, eax ; push rsi ; xor esi, edi ; dec dword ptr [rax - 0x77] ; ret 0xf741
0x0000000000045617 : out 0xe8, eax ; ret
0x00000000000cc773 : out 0xe8, eax ; xchg eax, edi ; ret
0x0000000000103b13 : out 0xf1, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000014435a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001443da : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000006a2d0 : out 0xff, al ; dec dword ptr [rax - 0x7d] ; ret 0xb908
0x00000000000b0ff5 : out 4, al ; add byte ptr [rbp + 0x29dc75db], al ; ret
0x00000000000b1051 : out 4, al ; add byte ptr [rbp + 0x391874db], al ; ret
0x0000000000119024 : out 4, al ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000001131bf : out dx, al ; adc bh, dh ; ret 0x8080
0x0000000000051373 : out dx, al ; add dword ptr [rax - 0x50f43], eax ; jmp qword ptr [rax]
0x0000000000118aa2 : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x118aaf ; ret
0x000000000005ad2c : out dx, al ; add dword ptr [rax - 0x93343], eax ; jmp qword ptr [rax]
0x000000000008caab : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00000000000627d7 : out dx, al ; add eax, ebp ; ret 0x1cb
0x000000000016c1b1 : out dx, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079ac0 : out dx, al ; call 0x50758
0x00000000000ea9c0 : out dx, al ; call 0xe6c93
0x0000000000087f2e : out dx, al ; call rax
0x0000000000133355 : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000c8908 : out dx, al ; jmp rdi
0x00000000000fc2ad : out dx, al ; lea ecx, dword ptr [rdi + rdi] ; shr eax, cl ; and eax, 3 ; ret
0x0000000000038971 : out dx, al ; mov eax, 1 ; ret
0x000000000013eb2a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001213e2 : out dx, al ; mov rcx, rbx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000008816a : out dx, al ; mov rdi, r12 ; call rax
0x00000000000878d1 : out dx, al ; mov rdi, rbx ; call rax
0x000000000014476a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000d4aac : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015cbde : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000134769 : out dx, al ; or byte ptr [rax], al ; jne 0x134781 ; jmp 0x13479b
0x0000000000133343 : out dx, al ; push qword ptr [rcx] ; ror byte ptr [rax - 0x77], cl ; ret
0x00000000000a4eb1 : out dx, al ; ret
0x00000000000ecece : out dx, al ; ret 1
0x000000000004e4f0 : out dx, al ; sbb eax, 0x83480000 ; ret 0x4817
0x00000000000a4bd9 : out dx, al ; xor edi, edi ; mov rax, rdi ; ret
0x0000000000103f79 : out dx, al ; xor r15d, r15d ; call rax
0x00000000000b61bd : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000000553c0 : out dx, eax ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000054a04 : out dx, eax ; add eax, dword ptr [rbp - 0x7b] ; dec dword ptr [rdi] ; lahf ; ret 0x87e
0x0000000000075a22 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000075a7e : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000122aee : out dx, eax ; call 0x12ed23
0x0000000000123009 : out dx, eax ; call 0x12f223
0x000000000003d23f : out dx, eax ; call 0x48e38
0x0000000000123724 : out dx, eax ; call qword ptr [rbx]
0x0000000000031bc0 : out dx, eax ; call qword ptr [rip + 0x18c211]
0x00000000000e9e0e : out dx, eax ; call qword ptr [rip + 0xd4193]
0x00000000000d116a : out dx, eax ; call r12
0x00000000000f82ad : out dx, eax ; call r14
0x00000000000242b2 : out dx, eax ; call rax
0x000000000012fcf6 : out dx, eax ; call rcx
0x00000000001122c5 : out dx, eax ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000121e7a : out dx, eax ; lea r9, qword ptr [rsp + 0x20] ; call qword ptr [rax]
0x00000000000a57a2 : out dx, eax ; lea r9, qword ptr [rsp + 0x30] ; call rbx
0x00000000000f7cfa : out dx, eax ; mov dword ptr [rbp - 0x50], r15d ; call r14
0x00000000000e3bb0 : out dx, eax ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000013e95a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013ea56 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000013e9a2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000904b0 : out dx, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000008364e : out dx, eax ; mov qword ptr [rsp + 8], r11 ; call qword ptr [rax]
0x00000000000fcf6f : out dx, eax ; mov qword ptr [rsp + 8], rax ; call 0x1091c8
0x00000000000f9aa8 : out dx, eax ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000396c2 : out dx, eax ; mov rax, qword ptr [rsp] ; call rax
0x0000000000048f78 : out dx, eax ; mov rax, rdx ; ret
0x00000000000259b3 : out dx, eax ; mov rcx, qword ptr [rbp - 0x70] ; call rcx
0x0000000000127562 : out dx, eax ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000012777d : out dx, eax ; mov rdx, qword ptr [rsp + 0x20] ; call rdx
0x0000000000105570 : out dx, eax ; mov rdx, rax ; pop rbp ; pop r12 ; jmp rcx
0x00000000000a5b91 : out dx, eax ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000114d56 : out dx, eax ; mov rsi, qword ptr [rsp] ; call r12
0x00000000001447ea : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ccdd : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000fee88 : out dx, eax ; or eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000133354 : out dx, eax ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000133342 : out dx, eax ; out dx, al ; push qword ptr [rcx] ; ror byte ptr [rax - 0x77], cl ; ret
0x0000000000122b02 : out dx, eax ; pop rbx ; pop rbp ; jmp 0x12ed25
0x000000000011d4f0 : out dx, eax ; pop rbx ; ret
0x0000000000122bee : out dx, eax ; pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000161b73 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000161b88 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000161b9d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a46c0 : out dx, eax ; ret
0x000000000002a1a9 : out dx, eax ; ret 0
0x00000000000a3573 : out dx, eax ; ret 0xf66
0x00000000000d3e52 : out dx, eax ; sal byte ptr [rcx], 0xc0 ; movaps xmmword ptr [rdi], xmm0 ; ret
0x00000000000d3db2 : out dx, eax ; sal byte ptr [rcx], 0xc0 ; movups xmmword ptr [rdi], xmm0 ; ret
0x00000000000f6ddf : out dx, eax ; shl byte ptr [rsi + 0xf], cl ; ret 0x67a
0x000000000016308c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000163075 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016305e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000161b1a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016b4bb : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x0000000000048540 : out dx, eax ; xor eax, eax ; ret
0x00000000000a5a98 : out dx, eax ; xor r8d, r8d ; lea r9, qword ptr [rsp + 0x28] ; call rbx
0x000000000015734e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000084d4e : outsb dx, byte ptr [rsi] ; adc byte ptr [rax], r8b ; call 0x80f86
0x000000000007aaee : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001651be : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000000c6e65 : outsb dx, byte ptr [rsi] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000044c8b : outsb dx, byte ptr [rsi] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000089937 : outsd dx, dword ptr [rsi] ; adc eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000898f9 : outsd dx, dword ptr [rsi] ; adc eax, dword ptr [rax] ; ret
0x0000000000037722 : outsd dx, dword ptr [rsi] ; add al, 0x24 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000003733f : outsd dx, dword ptr [rsi] ; and al, 0xc8 ; ret
0x000000000004d3f9 : outsd dx, dword ptr [rsi] ; and al, 0xe8 ; pinsrw xmm0, eax, 6 ; ret
0x000000000016b25b : outsd dx, dword ptr [rsi] ; and al, 0xe8 ; ret
0x0000000000091098 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000094efe : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000eb076 : outsd dx, dword ptr [rsi] ; jg 0xeb0f8 ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x00000000000eb0c6 : outsd dx, dword ptr [rsi] ; jle 0xeb140 ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x0000000000162e8d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000162f2d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000009994a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000377e1 : outsd dx, dword ptr [rsi] ; ret
0x0000000000037785 : outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000013f297 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000162f32 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x00000000000377a7 : outsd dx, dword ptr [rsi] ; ret 0xe867
0x0000000000058a32 : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000053d5a : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000154f92 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000b69b4 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000b699f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000000944e5 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x00000000001601ba : pextrw edi, mm0, 0x77 ; ret
0x000000000004d3fe : pinsrw mm0, eax, 6 ; ret
0x000000000004d3fd : pinsrw xmm0, eax, 6 ; ret
0x0000000000036e85 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x00000000000371b5 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x00000000000944f3 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000940a2 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x94109 ; xor eax, eax ; ret
0x0000000000094555 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x945d9 ; xor eax, eax ; ret
0x0000000000094584 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x94609 ; xor eax, eax ; ret
0x00000000000b51e2 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xb5249 ; xor eax, eax ; ret
0x0000000000036e84 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x00000000000371b4 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x0000000000099b43 : pmovmskb edx, mm4 ; test edx, edx ; je 0x99b57 ; bsf eax, edx ; ret
0x0000000000109134 : pop r10 ; ret
0x0000000000075357 : pop r12 ; jmp rax
0x0000000000105575 : pop r12 ; jmp rcx
0x000000000010178d : pop r12 ; mov eax, edx ; ret
0x0000000000103b3e : pop r12 ; movzx eax, al ; neg eax ; ret
0x000000000007db5e : pop r12 ; movzx eax, byte ptr [rax] ; pop r13 ; pop r14 ; ret
0x0000000000072e9c : pop r12 ; pop r13 ; jmp rax
0x00000000000598e3 : pop r12 ; pop r13 ; mov rax, r9 ; pop r14 ; ret
0x0000000000030aa6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000246e8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023bdc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000070329 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000002fe9a : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000039c8a : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000024105 : pop r12 ; pop r13 ; ret
0x00000000000b6df9 : pop r12 ; pop r14 ; mov dword ptr [r11 + 0xc], edi ; ret
0x00000000000b6d61 : pop r12 ; pop r14 ; ret
0x00000000000c6d21 : pop r12 ; pop rbp ; ret
0x0000000000024389 : pop r12 ; ret
0x000000000012f476 : pop r12 ; xor eax, eax ; pop r13 ; pop r14 ; jmp rcx
0x0000000000072e9e : pop r13 ; jmp rax
0x00000000000598e5 : pop r13 ; mov rax, r9 ; pop r14 ; ret
0x00000000000c2f7b : pop r13 ; pop r14 ; jmp rax
0x000000000012f47a : pop r13 ; pop r14 ; jmp rcx
0x0000000000030aa8 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000246ea : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023bde : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007032b : pop r13 ; pop r14 ; pop rbp ; ret
0x000000000002fe9c : pop r13 ; pop r14 ; ret
0x0000000000039c8c : pop r13 ; pop rbp ; ret
0x0000000000024107 : pop r13 ; ret
0x000000000012f4a7 : pop r13 ; xor eax, eax ; pop r14 ; jmp rcx
0x00000000000c2f7d : pop r14 ; jmp rax
0x000000000012f47c : pop r14 ; jmp rcx
0x00000000000b7227 : pop r14 ; lea rax, qword ptr [r8 + rax*4] ; pop r15 ; ret
0x00000000000b6dfb : pop r14 ; mov dword ptr [r11 + 0xc], edi ; ret
0x0000000000030aaa : pop r14 ; pop r15 ; jmp rax
0x00000000000d14f6 : pop r14 ; pop r15 ; neg eax ; ret
0x00000000000246ec : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023be0 : pop r14 ; pop r15 ; ret
0x000000000007032d : pop r14 ; pop rbp ; ret
0x000000000002458d : pop r14 ; ret
0x000000000011f61f : pop r14 ; sub eax, 1 ; ret
0x0000000000030aac : pop r15 ; jmp rax
0x00000000000d14f8 : pop r15 ; neg eax ; ret
0x00000000000246ee : pop r15 ; pop rbp ; ret
0x0000000000023be2 : pop r15 ; ret
0x0000000000129f06 : pop r8 ; mov eax, 1 ; ret
0x0000000000124503 : pop r8 ; sete al ; pop rbx ; movzx eax, al ; ret
0x0000000000128171 : pop r8 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000e391e : pop rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000012a6e2 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000007912d : pop rax ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x790bd
0x000000000010a3c5 : pop rax ; add eax, 0x440f4800 ; ret 0xfc3
0x0000000000123e6c : pop rax ; add r13, rax ; mov qword ptr [rbx + 0x60], r13 ; jmp 0x123e41
0x000000000012a888 : pop rax ; call rax
0x000000000012a6ea : pop rax ; jmp rcx
0x00000000000c9ceb : pop rax ; jne 0xc9cf3 ; ret
0x00000000000c9cea : pop rax ; jne 0xc9cf4 ; ret
0x0000000000129f07 : pop rax ; mov eax, 1 ; ret
0x0000000000030618 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x00000000000305a6 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000123c34 : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000000f703c : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000000d95f6 : pop rax ; or bh, dh ; ret
0x000000000009db64 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000048187 : pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000224dc : pop rax ; pop rbx ; pop rbp ; ret
0x00000000000fbb1f : pop rax ; pop rdi ; call rax
0x0000000000137455 : pop rax ; pop rdx ; pop rbx ; ret
0x000000000008a704 : pop rax ; push rbp ; or eax, 0x440f4800 ; ret 0xfc3
0x000000000003ad30 : pop rax ; ret
0x0000000000027e3c : pop rax ; ret 0x15
0x0000000000124504 : pop rax ; sete al ; pop rbx ; movzx eax, al ; ret
0x0000000000128172 : pop rax ; sub byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000008a7f4 : pop rax ; xchg eax, esi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000000370e8 : pop rbp ; adc eax, 0x7e0f6600 ; ret 0xd089
0x000000000011f61b : pop rbp ; and eax, 2 ; pop r14 ; sub eax, 1 ; ret
0x00000000000c8e15 : pop rbp ; clc ; leave ; ret
0x0000000000122b04 : pop rbp ; jmp 0x12ed23
0x0000000000072c8f : pop rbp ; jmp rax
0x00000000001213e9 : pop rbp ; jmp rcx
0x0000000000122bf2 : pop rbp ; jmp rdx
0x00000000000c32c9 : pop rbp ; lea rax, qword ptr [rax + rdx*8] ; ret
0x0000000000112048 : pop rbp ; mov byte ptr [rdx], 0 ; pop r12 ; pop r13 ; ret
0x0000000000109f0f : pop rbp ; mov eax, 0x89483f74 ; ret
0x00000000000c5483 : pop rbp ; mov eax, edx ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000123d61 : pop rbp ; mov eax, esi ; ret
0x00000000000ebb8c : pop rbp ; mov eax, r12d ; pop r12 ; ret
0x00000000000b7dce : pop rbp ; mov qword ptr [rdi + 0x20], rcx ; pop r14 ; pop r15 ; ret
0x000000000008c17c : pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000598e6 : pop rbp ; mov rax, r9 ; pop r14 ; ret
0x0000000000085d43 : pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000075356 : pop rbp ; pop r12 ; jmp rax
0x0000000000105574 : pop rbp ; pop r12 ; jmp rcx
0x000000000010178c : pop rbp ; pop r12 ; mov eax, edx ; ret
0x0000000000072e9b : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000008640a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000023bdb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002fe99 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000024104 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b6d60 : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000024388 : pop rbp ; pop r12 ; ret
0x0000000000121ee5 : pop rbp ; pop r13 ; pop r14 ; ret
0x00000000000c2f7c : pop rbp ; pop r14 ; jmp rax
0x000000000012f47b : pop rbp ; pop r14 ; jmp rcx
0x00000000000b7226 : pop rbp ; pop r14 ; lea rax, qword ptr [r8 + rax*4] ; pop r15 ; ret
0x0000000000030aa9 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000000246eb : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023bdf : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000007032c : pop rbp ; pop r14 ; pop rbp ; ret
0x000000000002fe9d : pop rbp ; pop r14 ; ret
0x0000000000039c8d : pop rbp ; pop rbp ; ret
0x0000000000048868 : pop rbp ; pop rbx ; ret
0x00000000000224de : pop rbp ; ret
0x000000000012f4a8 : pop rbp ; xor eax, eax ; pop r14 ; jmp rcx
0x0000000000078c78 : pop rbx ; add byte ptr [rax], al ; mov r10d, eax ; jmp 0x78c08
0x00000000001234ed : pop rbx ; add rdi, 0x23b0 ; pop rbp ; jmp rcx
0x00000000000a4106 : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000001093b5 : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004d779 : pop rbx ; cmovb rax, rdi ; ret
0x00000000000a405b : pop rbx ; cmove rax, rdx ; ret
0x00000000000b72a0 : pop rbx ; cmovg rdx, rax ; mov rax, rdx ; ret
0x000000000008cdec : pop rbx ; cmovne rax, rdi ; ret
0x00000000000a40eb : pop rbx ; cmovne rax, rdx ; ret
0x000000000007e898 : pop rbx ; jmp rax
0x00000000000d1600 : pop rbx ; mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000e6c7e : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x0000000000109bae : pop rbx ; mov eax, 5 ; pop r12 ; pop rbp ; ret
0x00000000000e7b97 : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000000eaf78 : pop rbx ; mov eax, 9 ; pop rbp ; pop r12 ; ret
0x000000000003ad2d : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000012a2c7 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000566b1 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000007911d : pop rbx ; mov eax, edx ; ret
0x000000000010b0fa : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000a40c5 : pop rbx ; mov edi, 0xe8c1000d ; or al, 0x89 ; ret 0xe283
0x000000000010556e : pop rbx ; mov edi, ebp ; mov rdx, rax ; pop rbp ; pop r12 ; jmp rcx
0x000000000009060a : pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000f78c2 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000030e95 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000817a1 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000085a46 : pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000710c3 : pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x00000000000b72c3 : pop rbx ; mov rax, rdx ; ret
0x0000000000124508 : pop rbx ; movzx eax, al ; ret
0x000000000007b560 : pop rbx ; neg eax ; ret
0x000000000011cb5b : pop rbx ; or al, byte ptr [rax] ; test eax, eax ; je 0x11cb6f ; ret
0x0000000000070328 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000039c89 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000c6d20 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000002cbe4 : pop rbx ; pop r12 ; ret
0x000000000002458c : pop rbx ; pop r14 ; ret
0x0000000000122b03 : pop rbx ; pop rbp ; jmp 0x12ed24
0x0000000000072c8e : pop rbx ; pop rbp ; jmp rax
0x00000000001213e8 : pop rbx ; pop rbp ; jmp rcx
0x00000000000c32c8 : pop rbx ; pop rbp ; lea rax, qword ptr [rax + rdx*8] ; ret
0x0000000000123d60 : pop rbx ; pop rbp ; mov eax, esi ; ret
0x00000000000ebb8b : pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000008c17b : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000085d42 : pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000075355 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000010178b : pop rbx ; pop rbp ; pop r12 ; mov eax, edx ; ret
0x0000000000072e9a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000034f61 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000024103 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b6d5f : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000024387 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121ee4 : pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x00000000000ae4b4 : pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000224dd : pop rbx ; pop rbp ; ret
0x000000000002d299 : pop rbx ; ret
0x00000000000c2ed3 : pop rbx ; setbe al ; movzx eax, al ; ret
0x00000000000eafbe : pop rbx ; setl al ; ret
0x000000000007d9dc : pop rbx ; setne al ; movzx eax, al ; neg eax ; ret
0x00000000000f75df : pop rbx ; setne al ; movzx eax, al ; ret
0x00000000000a406a : pop rbx ; shr eax, 0xe ; and eax, 0x3fc00 ; ret
0x00000000000a40b5 : pop rbx ; shr eax, 6 ; and eax, 0x3fffc00 ; ret
0x000000000007cd2f : pop rbx ; sub rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000003acfc : pop rbx ; test eax, eax ; cmovs eax, edx ; ret
0x0000000000109b9a : pop rbx ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x0000000000122bef : pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000034e5f : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000370a0 : pop rcx ; enter 0x280f, -0x3f ; ret
0x000000000012e0d3 : pop rcx ; jmp 0x12e0d7
0x0000000000122d26 : pop rcx ; mov dword ptr [rsi], 0 ; ret
0x000000000008a7db : pop rcx ; or eax, 0x440f4800 ; ret 0xfc3
0x0000000000130a63 : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f6f7f : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e297f : pop rcx ; pop rbx ; ret
0x00000000000f1ae3 : pop rcx ; ret
0x000000000013d4d9 : pop rdi ; adc byte ptr [rdx + 9], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000ec3d2 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000015d36d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000111d32 : pop rdi ; add ebx, ebp ; pushfq ; xor eax, eax ; ret
0x000000000015ba02 : pop rdi ; and ch, al ; std ; xlatb ; ret
0x00000000000fbb20 : pop rdi ; call rax
0x000000000013eef9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013ed09 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000030aad : pop rdi ; jmp rax
0x0000000000036358 : pop rdi ; jne 0x36328 ; mov rdx, r8 ; jmp 0x3638e
0x00000000000d14f9 : pop rdi ; neg eax ; ret
0x000000000013eb29 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013e959 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013ea55 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000013e9a1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000246ef : pop rdi ; pop rbp ; ret
0x0000000000038aa5 : pop rdi ; push rbp ; sbb byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000023be3 : pop rdi ; ret
0x0000000000104a78 : pop rdi ; sbb byte ptr [rbx], cl ; pop rsi ; sbb dh, dh ; ret
0x000000000010a63b : pop rdx ; add eax, 0x440f4800 ; ret 0xfc3
0x0000000000156716 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x0000000000044d69 : pop rdx ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000010ac5c : pop rdx ; hlt ; dec dword ptr [rax - 0x7f] ; ret
0x000000000008a97a : pop rdx ; or al, 0 ; cmovne rax, rdx ; ret
0x0000000000109133 : pop rdx ; pop r10 ; ret
0x00000000000f7040 : pop rdx ; pop rbx ; ret
0x00000000000e297e : pop rdx ; pop rcx ; pop rbx ; ret
0x0000000000109159 : pop rdx ; pop rsi ; ret
0x000000000011d542 : pop rdx ; push rsp ; or al, byte ptr [rax] ; test rax, rax ; je 0x11d559 ; ret
0x00000000000c9a15 : pop rdx ; ret
0x0000000000126a52 : pop rdx ; ret 9
0x00000000000b6495 : pop rdx ; test al, 0xf0 ; jne 0xb64c9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000124c34 : pop rsi ; adc byte ptr [rbp + 0x31], cl ; ret 0x314d
0x000000000015d26e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000047530 : pop rsi ; cld ; jmp 0x474fa
0x00000000000c2f7e : pop rsi ; jmp rax
0x000000000012f47d : pop rsi ; jmp rcx
0x00000000000b7228 : pop rsi ; lea rax, qword ptr [r8 + rax*4] ; pop r15 ; ret
0x000000000008a68e : pop rsi ; lodsd eax, dword ptr [rsi] ; or eax, 0x450f4800 ; ret 0x66c3
0x00000000000b6dfc : pop rsi ; mov dword ptr [r11 + 0xc], edi ; ret
0x0000000000030aab : pop rsi ; pop r15 ; jmp rax
0x00000000000d14f7 : pop rsi ; pop r15 ; neg eax ; ret
0x00000000000246ed : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000023be1 : pop rsi ; pop r15 ; ret
0x000000000007032e : pop rsi ; pop rbp ; ret
0x000000000002458e : pop rsi ; ret
0x00000000000f6e87 : pop rsi ; ret 0x4feb
0x0000000000104a7b : pop rsi ; sbb dh, dh ; ret
0x000000000011f620 : pop rsi ; sub eax, 1 ; ret
0x0000000000157560 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000032c93 : pop rsp ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x448b
0x0000000000156a14 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000158260 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x00000000000b7089 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000083651 : pop rsp ; and al, 8 ; call qword ptr [rax]
0x00000000000f7b3a : pop rsp ; and al, 8 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000075358 : pop rsp ; jmp rax
0x0000000000105576 : pop rsp ; jmp rcx
0x000000000010178e : pop rsp ; mov eax, edx ; ret
0x0000000000103b3f : pop rsp ; movzx eax, al ; neg eax ; ret
0x000000000007db5f : pop rsp ; movzx eax, byte ptr [rax] ; pop r13 ; pop r14 ; ret
0x00000000001553f0 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000072e9d : pop rsp ; pop r13 ; jmp rax
0x00000000000598e4 : pop rsp ; pop r13 ; mov rax, r9 ; pop r14 ; ret
0x0000000000030aa7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000246e9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023bdd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007032a : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000002fe9b : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000039c8b : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000024106 : pop rsp ; pop r13 ; ret
0x00000000000b6dfa : pop rsp ; pop r14 ; mov dword ptr [r11 + 0xc], edi ; ret
0x00000000000b6d62 : pop rsp ; pop r14 ; ret
0x00000000000c6d22 : pop rsp ; pop rbp ; ret
0x000000000002438a : pop rsp ; ret
0x000000000011d861 : pop rsp ; ret 0x3904
0x00000000000d3ff7 : pop rsp ; ret 0xeb08
0x00000000000d42d6 : pop rsp ; ret 0xf08
0x000000000008c58f : pop rsp ; stc ; dec dword ptr [rax + 0x29] ; ret
0x00000000000c4721 : pop rsp ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000012f477 : pop rsp ; xor eax, eax ; pop r13 ; pop r14 ; jmp rcx
0x00000000000702d4 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000089b8a : popfq ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000008ac09 : popfq ; or eax, 0x440f4800 ; ret 0xfc3
0x00000000000fee87 : popfq ; out dx, eax ; or eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000b8a12 : popfq ; ret 0x3948
0x0000000000110a37 : popfq ; ror dword ptr [rdx], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000158c40 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001448b2 : psllq mm1, qword ptr [r15] ; jg 0x1448cd ; ret
0x00000000001473e2 : psllq mm1, qword ptr [r15] ; jg 0x1473fd ; ret
0x00000000001448b3 : psllq mm1, qword ptr [rdi] ; jg 0x1448cc ; ret
0x00000000001473e3 : psllq mm1, qword ptr [rdi] ; jg 0x1473fc ; ret
0x000000000009eee6 : psllq mm1, qword ptr [rdi] ; jg 0x9eefa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009eee5 : psllq mm1, qword ptr [rdi] ; jg 0x9eefb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009ef47 : psllq mm1, qword ptr [rdi] ; jg 0x9ef5c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009fbd6 : psllq mm1, qword ptr [rdi] ; jg 0x9fbea ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009fbd5 : psllq mm1, qword ptr [rdi] ; jg 0x9fbeb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009fc37 : psllq mm1, qword ptr [rdi] ; jg 0x9fc4c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a21f6 : psllq mm1, qword ptr [rdi] ; jg 0xa220a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a21f5 : psllq mm1, qword ptr [rdi] ; jg 0xa220b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a2257 : psllq mm1, qword ptr [rdi] ; jg 0xa226c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a2ce6 : psllq mm1, qword ptr [rdi] ; jg 0xa2cfa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a2ce5 : psllq mm1, qword ptr [rdi] ; jg 0xa2cfb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a2d47 : psllq mm1, qword ptr [rdi] ; jg 0xa2d5c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000008ca24 : push -0x7600000a ; ret
0x00000000000ba1bc : push -0x76b3fff0 ; ret
0x00000000001651a4 : push -0x9ffffff ; ret 0x7501
0x00000000000b6487 : push -0xfb872b8 ; ret
0x00000000000a535a : push 0 ; lea r9, qword ptr [rsp + 0x28] ; call r12
0x000000000012c5ad : push 0x39480009 ; ret
0x00000000000c9d84 : push 0x39489123 ; ret 0x20ba
0x000000000012c50f : push 0x48640009 ; mov dword ptr [rax], edx ; ret
0x00000000000c72d8 : push 0xf ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000006900c : push 0xfffffa ; add byte ptr [rax], al ; add cl, ch ; ret 0xffdf
0x00000000000a55fb : push 1 ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000129d92 : push 2 ; add rdi, 0x68 ; jmp rcx
0x000000000009f962 : push 5 ; add byte ptr [rax], al ; ret
0x00000000000dd2df : push qword ptr [rax + rcx + 0x39] ; ret
0x00000000000754bd : push qword ptr [rax + rcx + 0x5b] ; ret
0x000000000009e56f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000f540d : push qword ptr [rbp + 0x10] ; mov eax, 1 ; ret
0x0000000000166b28 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000016b726 : push qword ptr [rbp + 0x48] ; add rsp, 0x30 ; pop rbx ; ret
0x000000000015bdf9 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x00000000000eb0ed : push qword ptr [rbp + 5] ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000f8226 : push qword ptr [rbp + rax + 0x48] ; test esi, esi ; jne 0xf8238 ; ret
0x000000000007f0b2 : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000048f76 : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x00000000000a4eaf : push qword ptr [rbp - 0x12] ; ret
0x00000000001148a1 : push qword ptr [rbp - 0x14] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011cf44 : push qword ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010747a : push qword ptr [rbp - 0x1a] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007f480 : push qword ptr [rbp - 0x40] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000038080 : push qword ptr [rbx + 1] ; ret
0x0000000000047e96 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x00000000000c4058 : push qword ptr [rbx + rax*2 - 0x77] ; ret 0xe283
0x000000000012c7da : push qword ptr [rbx + rdi*2 - 0x7d] ; ret 0x3901
0x0000000000136704 : push qword ptr [rcx + rcx + 0x48] ; add esp, 8 ; ret
0x0000000000071a35 : push qword ptr [rcx + rdi + 0x48] ; mov eax, edx ; pop rbx ; ret
0x00000000000e56a2 : push qword ptr [rcx] ; fild dword ptr [rbx - 0x6bf0fb08] ; ret
0x000000000003f556 : push qword ptr [rcx] ; fucomi st(1) ; ret 0xfffb
0x00000000000d7cc4 : push qword ptr [rcx] ; leave ; add rdx, rax ; jmp 0xd7cea
0x0000000000068c81 : push qword ptr [rcx] ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x0000000000133344 : push qword ptr [rcx] ; ror byte ptr [rax - 0x77], cl ; ret
0x00000000001074de : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000007ba53 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000078fcc : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000006e77d : push qword ptr [rdi + 0x30] ; cmp eax, -1 ; je 0x6e798 ; ret
0x00000000000c85fd : push qword ptr [rdi + 0x38] ; ret
0x00000000000ece9d : push qword ptr [rdi + 0x40] ; ret
0x00000000000f2037 : push qword ptr [rdi + 0x46] ; ret
0x00000000000ed01d : push qword ptr [rdi + 0x48] ; ret
0x0000000000038102 : push qword ptr [rdi + 0x4b] ; ret
0x00000000000c867d : push qword ptr [rdi + 0x50] ; ret
0x00000000000ec77a : push qword ptr [rdi + 0x53] ; ret
0x00000000000c83c0 : push qword ptr [rdi + 0x55] ; ret
0x000000000003bb3d : push qword ptr [rdi + 0x58] ; ret
0x00000000000eabf0 : push qword ptr [rdi + 0x5d] ; ret
0x00000000000c84b3 : push qword ptr [rdi + 0x62] ; ret
0x00000000000f3440 : push qword ptr [rdi + 0x65] ; ret
0x00000000000fcce6 : push qword ptr [rdi + 0x67] ; ret
0x00000000000f29b3 : push qword ptr [rdi + 0x6a] ; ret
0x00000000000fd840 : push qword ptr [rdi + 0x6d] ; ret
0x00000000000fbc36 : push qword ptr [rdi + 0x6f] ; ret
0x00000000000fc030 : push qword ptr [rdi + 0x75] ; ret
0x000000000006e733 : push qword ptr [rdi + 0xa] ; ret
0x00000000000ec162 : push qword ptr [rdi + 0xb] ; ret
0x00000000000ebdfc : push qword ptr [rdi + 1] ; ret
0x00000000000ec10a : push qword ptr [rdi + 3] ; ret
0x00000000000f2249 : push qword ptr [rdi + 4] ; ret
0x000000000006e700 : push qword ptr [rdi + 5] ; ret
0x00000000000f8f87 : push qword ptr [rdi + 6] ; ret
0x0000000000038046 : push qword ptr [rdi + 7] ; ret
0x00000000000380b5 : push qword ptr [rdi + 8] ; ret
0x0000000000109a33 : push qword ptr [rdi - 0x36] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000070b3d : push qword ptr [rdx + rbp*4 - 0x77] ; ret 0xe283
0x00000000000f64bb : push qword ptr [rsi + rax - 0x77] ; cmp eax, 0xc7ce4 ; ret
0x00000000000e7497 : push qword ptr [rsi + rbx*8 + 0x39] ; ret
0x00000000000fe7e7 : push qword ptr [rsi + rsi - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000000e7401 : push qword ptr [rsp + rbx*8 - 0x77] ; ret 0xc085
0x0000000000047fd0 : push r10 ; ret
0x0000000000129e3e : push r12 ; mov eax, 1 ; ret
0x000000000012c400 : push r13 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000012c3fe : push r14 ; push r13 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000007e83c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000088a68 : push r8 ; add dword ptr [rbp - 0x2d], esi ; mov rdi, rsi ; call rax
0x000000000008094a : push r8 ; jmp 0x80914
0x0000000000074f7e : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000007ff09 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000121ae8 : push rax ; adc dh, dh ; ret 0x7401
0x00000000000833f5 : push rax ; adc dh, dh ; ret 0xf0f
0x000000000007e83d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000128f9c : push rax ; add cl, byte ptr [rax + 0xf] ; ret 0xea89
0x0000000000080b53 : push rax ; add dword ptr [rax - 0x77], ecx ; adc eax, 0x13d5d4 ; ret
0x000000000007b4d0 : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000088a69 : push rax ; add dword ptr [rbp - 0x2d], esi ; mov rdi, rsi ; call rax
0x00000000000b7b91 : push rax ; add rsp, 0xe0 ; pop rbx ; ret
0x0000000000134e35 : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x0000000000025068 : push rax ; call rbx
0x000000000004eec8 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000008e462 : push rax ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000114786 : push rax ; dec dword ptr [rax - 0x7d] ; cli ; std ; jbe 0x114798 ; ret
0x0000000000029219 : push rax ; dec dword ptr [rcx - 0x7d] ; ret
0x00000000000f96ac : push rax ; inc dword ptr [rax + 0x4e752ffa] ; mov rdx, rax ; jmp 0xf96cf
0x000000000008094b : push rax ; jmp 0x80913
0x000000000012a6c3 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000002af02 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000028832 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000107926 : push rax ; mov rsi, rdx ; call rax
0x0000000000038742 : push rax ; movups xmmword ptr [rdi + 0x60], xmm0 ; movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x0000000000080e72 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x00000000000d1514 : push rax ; or byte ptr [rbp + 0x39], al ; ret 0x457f
0x00000000000d42cf : push rax ; or byte ptr [rbp - 0x72b200be], cl ; pop rsp ; ret 0xf08
0x00000000000811a5 : push rax ; or dh, dh ; ret 0x7502
0x00000000001552fc : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000008abb5 : push rax ; or eax, 0x440f4800 ; ret 0xfc3
0x0000000000121bde : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000121d24 : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036cd1 : push rax ; ret
0x0000000000058c59 : push rax ; ret 0xf41
0x000000000007fefa : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000108ad9 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000c9224 : push rax ; str word ptr [r8 - 0x77] ; ret 0x8949
0x00000000000c4c84 : push rax ; xchg eax, ecx ; str word ptr [rax - 0x77] ; ret 0x8948
0x00000000000f1789 : push rax ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000118177 : push rbp ; adc dword ptr [rcx + rcx*4 - 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000889a5 : push rbp ; adc eax, dword ptr [rax] ; call qword ptr [rax]
0x00000000000d5804 : push rbp ; add al, 1 ; ret 0x341
0x000000000003abf7 : push rbp ; add byte ptr [rax - 0x75], cl ; jnp 0x3ac0b ; call rax
0x0000000000056ae1 : push rbp ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000126345 : push rbp ; add byte ptr [rbx + 0x634801ea], al ; ret 0x1178
0x00000000000dbe89 : push rbp ; add byte ptr [rcx + 0x63], cl ; ret 0x8b48
0x000000000007b395 : push rbp ; add cl, byte ptr [rax + 0x39] ; ret 0x870f
0x000000000011815c : push rbp ; add dh, dh ; ret 0x7507
0x00000000000e2dd0 : push rbp ; add rsp, 0x38 ; ret
0x000000000008858a : push rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000005cc60 : push rbp ; cld ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000072b11 : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000007b8fe : push rbp ; cmp byte ptr [rax - 0x77], cl ; ret 0x1b8
0x00000000000d65f9 : push rbp ; inc dword ptr [rcx - 0x77] ; ret 0x8d4c
0x0000000000044cbf : push rbp ; jnp 0x44cdc ; add byte ptr [rax + 0x21], cl ; ret 0x8948
0x000000000012c401 : push rbp ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000c9201 : push rbp ; mov al, 0x85 ; sal byte ptr [rcx + rsi*2 + 0x48], 0x83 ; ret 0xc60f
0x00000000001081cd : push rbp ; nop ; mov rdx, r13 ; call rax
0x0000000000159d88 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000108041 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000255fd : push rbp ; or byte ptr [rbx - 0x3dc667bb], 0xf ; ret 0x4589
0x00000000000d3879 : push rbp ; or byte ptr [rcx - 0x75], cl ; je 0xd38ab ; or byte ptr [rcx], ch ; ret
0x000000000008a705 : push rbp ; or eax, 0x440f4800 ; ret 0xfc3
0x00000000000c83c2 : push rbp ; ret
0x0000000000038aa6 : push rbp ; sbb byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000038a47 : push rbp ; sbb byte ptr [rax], al ; ret
0x0000000000076718 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000000eaf6c : push rbx ; add al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000d1661 : push rbx ; add al, 0xeb ; ret 0x1f0f
0x0000000000079548 : push rbx ; add byte ptr [rax], al ; mov r10d, eax ; jmp 0x794d8
0x00000000000f96d1 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000ccffd : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000b72c1 : push rbx ; add dword ptr [rbx + 0x48], ebx ; mov eax, edx ; ret
0x00000000000cd042 : push rbx ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000084bef : push rbx ; and byte ptr [rax + 0x39], cl ; ret 0x3f73
0x000000000007bf9c : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x1d75
0x000000000007be8e : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000125281 : push rbx ; dec byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000164a59 : push rbx ; jb 0x164a69 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000126481 : push rbx ; jns 0x126493 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b646c : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ecea8 : push rbx ; mov ebx, edi ; sub rsp, 0x10 ; call 0x109169
0x000000000009ffd2 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000007bf98 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x1d75
0x000000000010dd45 : push rbx ; or byte ptr [rax + 0x33], cl ; add ecx, dword ptr [rax + 9] ; ret 0x850f
0x0000000000079240 : push rbx ; or byte ptr [rdi], cl ; mov dh, 0x10 ; pop rbx ; mov eax, edx ; ret
0x000000000008a875 : push rbx ; or eax, 0x440f4800 ; ret 0xfc3
0x00000000000c9ce9 : push rbx ; pop rax ; jne 0xc9cf5 ; ret
0x00000000000c9ce8 : push rbx ; pop rax ; jne 0xc9cf6 ; ret
0x00000000000ec77c : push rbx ; ret
0x0000000000090c89 : push rbx ; ret 0xf
0x0000000000079c45 : push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000c9ef9 : push rbx ; setne al ; ret
0x00000000000d2475 : push rbx ; sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x00000000000ee619 : push rbx ; xor dh, dh ; ret 0x7501
0x0000000000090605 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000004d32b : push rcx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000070505 : push rcx ; add rsp, 0xd0 ; pop rbx ; ret
0x000000000007ffbb : push rcx ; call 0xffffffffc398ffc5
0x0000000000164241 : push rcx ; jl 0x164292 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000001643a8 : push rcx ; jl 0x1643f9 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000010a58b : push rcx ; jle 0x10a598 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000008a89b : push rcx ; jnp 0x8a8b0 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000008464b : push rcx ; or byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000126953 : push rcx ; ret
0x00000000000821b5 : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000004e6b0 : push rcx ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000a30b2 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a1452 : push rdi ; adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000000874bc : push rdi ; adc byte ptr [rax + 0x33], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x6974
0x00000000000a3210 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000f794a : push rdi ; adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000887a4 : push rdi ; adc eax, dword ptr [rax] ; call qword ptr [rax]
0x00000000000a2ee8 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a2efa : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a044a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000000a129a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x0000000000144a19 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000003013d : push rdi ; add al, 0x73 ; and al, 0x83 ; ret 0x8b05
0x0000000000079252 : push rdi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x791e8
0x00000000000a2eba : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000498ef : push rdi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x000000000010a495 : push rdi ; add eax, 0x440f4800 ; ret 0xfc3
0x00000000000a04fc : push rdi ; add eax, 0xc478d48 ; ret
0x00000000000a135c : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000a2f18 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x000000000004eb6b : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000013e7e8 : push rdi ; clc ; ret
0x000000000013e960 : push rdi ; cld ; ret
0x00000000000a4bb8 : push rdi ; cld ; test eax, eax ; jne 0xa4bd8 ; mov rax, rdi ; ret
0x000000000013f487 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001442f9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000071bfa : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x00000000000da351 : push rdi ; cmp dh, dh ; ret 0xf08
0x0000000000144279 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001440ca : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000008a675 : push rdi ; je 0x8a68a ; add bh, dh ; ret 0
0x000000000007e768 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000014415a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001181ff : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000005a193 : push rdi ; or al, 0xf6 ; ret 0xf08
0x00000000000874c0 : push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x6974
0x00000000000a2f5c : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a2f9a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a2f3a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000007cd2d : push rdi ; or byte ptr [rbx + 0x48], bl ; sub eax, edx ; pop rbp ; pop r12 ; ret
0x000000000004a0aa : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000004885a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000048861 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000007b4d4 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000a06e0 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000000a1550 : push rdi ; or eax, 0x1d478d48 ; ret
0x00000000000a4725 : push rdi ; or eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000c890b : push rdi ; ret
0x0000000000162f2e : push rdi ; ret 0xff3
0x0000000000080f00 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000004eb6f : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000005a74d : push rdi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000000a46f5 : push rdi ; sbb dword ptr [rcx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000013f687 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013eeaa : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000013f287 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012fe65 : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00000000000f8534 : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a31f0 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009994b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000940a8 : push rdi ; xor eax, eax ; ret
0x00000000000c4d80 : push rdx ; add rsp, 0x38 ; ret
0x00000000000c4582 : push rdx ; cwde ; str word ptr [rax - 0x77] ; ret 0x8948
0x0000000000089809 : push rdx ; js 0x89806 ; ret 0
0x000000000008a9ee : push rdx ; js 0x8a9eb ; ret 0
0x000000000008aa3e : push rdx ; js 0x8aa3b ; ret 0
0x000000000008aa8e : push rdx ; js 0x8aa8b ; ret 0
0x000000000008aade : push rdx ; js 0x8aadb ; ret 0
0x00000000000305d5 : push rdx ; mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000088ac6 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000305a5 : push rdx ; pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000047fd1 : push rdx ; ret
0x000000000013d3d9 : push rdx ; sar byte ptr [rsi], 0x41 ; jmp rcx
0x00000000000eb1e5 : push rdx ; sbb byte ptr [rax - 0x73], cl ; lodsb al, byte ptr [rsi] ; ret 0x8207
0x000000000008256e : push rdx ; sbb byte ptr [rax - 9], cl ; fimul dword ptr [rax + 0x21] ; ret 0x8948
0x00000000000eea1a : push rdx ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000010bb5a : push rdx ; xor dh, bh ; dec dword ptr [rax + 0x39] ; ret
0x0000000000161b74 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000088864 : push rsi ; adc eax, dword ptr [rax] ; call qword ptr [rax]
0x000000000016488d : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x1648e4 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000144cb1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000f428b : push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x0000000000144d21 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000010a565 : push rsi ; add eax, 0x440f4800 ; ret 0xfc3
0x000000000009ee75 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000111d27 : push rsi ; add eax, 0x5bf08948 ; ret
0x0000000000144c41 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000009ee13 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000106c4b : push rsi ; add edi, dword ptr [rcx] ; ret 0x830f
0x0000000000161b89 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000013e912 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000013f081 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000b6045 : push rsi ; cld ; mov dword ptr [rsi + rcx], edx ; test edx, edx ; jne 0xb6049 ; ret
0x000000000013ecb5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013ee95 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013f075 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013ead5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000166666 : push rsi ; cmc ; sub eax, edx ; ret
0x0000000000166656 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000166626 : push rsi ; int1 ; sub eax, edx ; ret
0x0000000000107906 : push rsi ; je 0x107918 ; mov eax, 7 ; ret
0x00000000000da397 : push rsi ; ljmp ptr [rcx] ; ret 0x6348
0x00000000000d55d6 : push rsi ; mov dword ptr [rsi], ecx ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000f8100 : push rsi ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8948
0x00000000000f7f44 : push rsi ; or dh, dh ; ret 0x7401
0x000000000012c3ff : push rsi ; push r13 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000036f93 : push rsi ; ret
0x00000000000838c1 : push rsi ; ret 0x750f
0x00000000000d6697 : push rsi ; sbb byte ptr [rcx - 0x3fcec7ba], cl ; ret
0x00000000000fe462 : push rsi ; std ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000166636 : push rsi ; sub eax, edx ; ret
0x00000000000f0a6b : push rsi ; xor ax, ax ; ret
0x0000000000161b9e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000010ba56 : push rsi ; xor esi, edi ; dec dword ptr [rax - 0x77] ; ret 0xf741
0x000000000011954c : push rsp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007e487 : push rsp ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000137f52 : push rsp ; and al, 0x10 ; call rdx
0x0000000000103f74 : push rsp ; and al, 0x10 ; mov rsi, r13 ; xor r15d, r15d ; call rax
0x0000000000090954 : push rsp ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x0000000000122396 : push rsp ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x40] ; call qword ptr [rax]
0x000000000010803d : push rsp ; and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000908c2 : push rsp ; and al, 0x18 ; mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x00000000001218fa : push rsp ; and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x0000000000127780 : push rsp ; and al, 0x20 ; call rdx
0x0000000000083957 : push rsp ; and al, 0x20 ; mov qword ptr [rsp + 0x18], rax ; call rcx
0x0000000000108518 : push rsp ; and al, 0x60 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000090933 : push rsp ; and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x0000000000107d94 : push rsp ; and al, 0xd0 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x000000000003733a : push rsp ; and al, 0xd0 ; movdqa xmm0, xmmword ptr [rsp - 0x38] ; ret
0x0000000000090b06 : push rsp ; and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x0000000000090ae5 : push rsp ; and al, 0xec ; mov word ptr [rdi + 4], dx ; ret
0x000000000009091b : push rsp ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x000000000004a284 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000000908fd : push rsp ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x000000000004a23e : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000119146 : push rsp ; and al, 8 ; jne 0x119182 ; add rsp, 0x38 ; ret
0x00000000000838dc : push rsp ; and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x000000000005e5a8 : push rsp ; call qword ptr [rcx]
0x000000000015ade7 : push rsp ; cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x00000000000b9768 : push rsp ; jae 0xb9783 ; add bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000945eb : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000129e3f : push rsp ; mov eax, 1 ; ret
0x00000000000c9d05 : push rsp ; mov edx, 0x7f ; cmovne rax, rdx ; ret
0x00000000000224d8 : push rsp ; or al, 0x1a ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000011d543 : push rsp ; or al, byte ptr [rax] ; test rax, rax ; je 0x11d558 ; ret
0x00000000000e7b42 : push rsp ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000c9ef7 : push rsp ; push rbx ; setne al ; ret
0x0000000000036f8d : push rsp ; ret
0x00000000000fef78 : push rsp ; ret 0x8940
0x00000000000f5028 : push rsp ; ret 0xfff7
0x0000000000157220 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000003e9e2 : pushfq ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000da6cd : pushfq ; and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x00000000001071a5 : pushfq ; dec dword ptr [rax - 0x77] ; ret
0x00000000000caa83 : pushfq ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x0000000000157f20 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000155ed4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x00000000000da6d4 : pushfq ; ret 0xd108
0x00000000000b600b : pushfq ; sal bh, 0xd8 ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x0000000000111d35 : pushfq ; xor eax, eax ; ret
0x00000000000d3e51 : pxor mm0, mm0 ; xor eax, eax ; movaps xmmword ptr [rdi], xmm0 ; ret
0x00000000000d3db1 : pxor mm0, mm0 ; xor eax, eax ; movups xmmword ptr [rdi], xmm0 ; ret
0x00000000000d3e50 : pxor xmm0, xmm0 ; xor eax, eax ; movaps xmmword ptr [rdi], xmm0 ; ret
0x00000000000d3db0 : pxor xmm0, xmm0 ; xor eax, eax ; movups xmmword ptr [rdi], xmm0 ; ret
0x00000000000d57fe : rcl byte ptr [rax - 0x74fbbc75], 0x55 ; add al, 1 ; ret 0x341
0x000000000008445a : rcl byte ptr [rax], 0x83 ; ret
0x0000000000023abd : rcl byte ptr [rcx], 0x48 ; mov dword ptr [rip + 0x19f802], eax ; ret
0x00000000000573dc : rcl byte ptr [rdx], 1 ; add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x0000000000080b6a : rcl ch, cl ; adc eax, dword ptr [rax] ; ret
0x00000000000bae23 : rcl cl, 1 ; call 0xffffffffeacd702f
0x0000000000080d5f : rcl dword ptr [rbx], cl ; add byte ptr [rcx + 0x39], cl ; ret 0x2977
0x000000000003695f : rcr bl, 0x3f ; fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x0000000000086764 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000034e61 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000c53ae : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000085a49 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x00000000000566b3 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000048867 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000112047 : rcr byte ptr [rbp - 0x3a], 2 ; add byte ptr [rcx + 0x5c], al ; pop r13 ; ret
0x0000000000090611 : rcr byte ptr [rbx + 0x48], cl ; mov dword ptr [rdi], edx ; ret
0x000000000007b04c : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003ab8a : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000b6d5e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000002631e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c5474 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000731d0 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x00000000000585cc : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000070e06 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000085d41 : rcr byte ptr [rbx + 0x5d], cl ; mov rax, rdx ; pop r12 ; ret
0x0000000000072e99 : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; pop r13 ; jmp rax
0x00000000000d11a5 : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; ret
0x000000000007b55f : rcr byte ptr [rbx - 9], 0xd8 ; ret
0x000000000012b794 : rcr byte ptr [rcx - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x00000000000f401d : rcr byte ptr [rdi], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a4749 : rcr dword ptr [rax], cl ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000048899 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000000d1530 : rdtsc ; rol byte ptr [rbp + 0x39], 0xc2 ; je 0xd154b ; ret
0x00000000001210a8 : rdtsc ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a3abd : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000a3aaf : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000136e58 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000a3eb7 : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000084af3 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000000386ee : rep stosq qword ptr [rdi], rax ; ret
0x0000000000022497 : ret
0x0000000000023c0f : ret 0
0x00000000000a078e : ret 0x10
0x00000000000852a3 : ret 0x1002
0x000000000011835d : ret 0x1072
0x000000000002c80a : ret 0x10ab
0x00000000000a9a54 : ret 0x10eb
0x000000000009f0c1 : ret 0x11
0x00000000000840da : ret 0x110
0x0000000000079c6a : ret 0x111d
0x000000000016af08 : ret 0x1149
0x000000000004883c : ret 0x114d
0x000000000006d748 : ret 0x116e
0x00000000000f967b : ret 0x1175
0x000000000012634c : ret 0x1178
0x00000000000274fb : ret 0x1189
0x00000000000edca0 : ret 0x11e9
0x0000000000051eb8 : ret 0x12
0x0000000000081aa3 : ret 0x13
0x00000000000506fe : ret 0x133e
0x00000000000f5663 : ret 0x1374
0x00000000000506ca : ret 0x137c
0x000000000008813a : ret 0x1386
0x00000000000f95ea : ret 0x13d
0x000000000003bd77 : ret 0x13e8
0x000000000007efe2 : ret 0x13ef
0x000000000003f64d : ret 0x14
0x000000000007e3fa : ret 0x1410
0x000000000007e13a : ret 0x1425
0x00000000000772fa : ret 0x1432
0x00000000000be484 : ret 0x144
0x000000000016b405 : ret 0x145
0x0000000000094629 : ret 0x147c
0x00000000000d4179 : ret 0x147d
0x00000000000390b3 : ret 0x148
0x00000000001695f6 : ret 0x1484
0x00000000000af9f7 : ret 0x1489
0x000000000007f4a6 : ret 0x149
0x000000000005f6f6 : ret 0x14c
0x0000000000164603 : ret 0x14d
0x0000000000028b7e : ret 0x14e9
0x000000000003c5c1 : ret 0x14eb
0x0000000000027dee : ret 0x15
0x0000000000033446 : ret 0x1511
0x00000000000a5ad6 : ret 0x1572
0x000000000002cb88 : ret 0x1576
0x000000000006e2ad : ret 0x157d
0x00000000000e33e5 : ret 0x1589
0x00000000000e25b9 : ret 0x15eb
0x000000000002efa2 : ret 0x15ff
0x000000000004e39c : ret 0x16
0x00000000000269ce : ret 0x1612
0x000000000005f45a : ret 0x1640
0x000000000011c825 : ret 0x1675
0x0000000000046aef : ret 0x1677
0x0000000000027d7a : ret 0x1689
0x000000000005435a : ret 0x169b
0x00000000000bf7a0 : ret 0x16e
0x000000000015b7a6 : ret 0x1776
0x0000000000066c1a : ret 0x17d
0x00000000000406f2 : ret 0x17d7
0x000000000011c04c : ret 0x17e9
0x0000000000031b93 : ret 0x18
0x0000000000164540 : ret 0x180f
0x0000000000038a46 : ret 0x1855
0x00000000000db6e5 : ret 0x1874
0x0000000000094115 : ret 0x1876
0x00000000000347aa : ret 0x189d
0x0000000000030ce2 : ret 0x18d2
0x0000000000026e65 : ret 0x19
0x000000000002d64a : ret 0x1905
0x000000000016a09e : ret 0x1949
0x000000000005fc2c : ret 0x1973
0x0000000000023aca : ret 0x19a3
0x0000000000026282 : ret 0x19ce
0x00000000000d7cc9 : ret 0x19eb
0x00000000000dbf7b : ret 0x1a78
0x000000000008c616 : ret 0x1aeb
0x0000000000090572 : ret 0x1b74
0x00000000000d5aa4 : ret 0x1b78
0x00000000000541fd : ret 0x1b8
0x0000000000084c14 : ret 0x1ba
0x00000000000b90a8 : ret 0x1be
0x000000000005843f : ret 0x1be9
0x00000000000dd3d2 : ret 0x1c39
0x00000000000627da : ret 0x1cb
0x000000000005cfb0 : ret 0x1d74
0x000000000007bfa0 : ret 0x1d75
0x00000000001023fa : ret 0x1e1
0x00000000000f6e01 : ret 0x1e2
0x000000000002cb7f : ret 0x1e72
0x000000000011c411 : ret 0x1e75
0x00000000000ca509 : ret 0x1e9
0x000000000004420b : ret 0x1f0f
0x0000000000046e7c : ret 0x1fe9
0x000000000003004b : ret 0x200
0x00000000000aaed2 : ret 0x2040
0x00000000000441f0 : ret 0x2041
0x00000000000ed320 : ret 0x2044
0x00000000000a19cd : ret 0x2074
0x00000000000ebf5e : ret 0x20b9
0x00000000000c9d89 : ret 0x20ba
0x000000000016b4bf : ret 0x2148
0x0000000000167d75 : ret 0x214c
0x000000000002b301 : ret 0x2174
0x00000000000a195b : ret 0x2275
0x000000000009e948 : ret 0x2288
0x000000000011c81e : ret 0x233c
0x0000000000163092 : ret 0x2373
0x0000000000086df3 : ret 0x2374
0x00000000000c86a0 : ret 0x23b8
0x00000000000bac61 : ret 0x23e9
0x0000000000048f58 : ret 0x2573
0x000000000003653f : ret 0x25eb
0x000000000011b0ef : ret 0x2674
0x0000000000099df6 : ret 0x2774
0x000000000004737e : ret 0x2775
0x000000000009a645 : ret 0x280f
0x0000000000094105 : ret 0x2876
0x000000000011bdea : ret 0x2889
0x00000000000bd748 : ret 0x28f5
0x00000000000f76f0 : ret 0x2901
0x0000000000037786 : ret 0x290f
0x000000000015a87a : ret 0x2910
0x000000000015ab2b : ret 0x2912
0x00000000000bec73 : ret 0x293c
0x0000000000043417 : ret 0x2941
0x0000000000108257 : ret 0x2944
0x00000000000e1c07 : ret 0x2945
0x0000000000047778 : ret 0x2948
0x0000000000133797 : ret 0x2949
0x00000000000466d3 : ret 0x294c
0x000000000003f2c1 : ret 0x294d
0x00000000000ce901 : ret 0x2974
0x00000000000b6174 : ret 0x2975
0x0000000000080d64 : ret 0x2977
0x00000000000760e1 : ret 0x29e8
0x000000000003635d : ret 0x29eb
0x00000000000f6417 : ret 0x2ae9
0x0000000000026b24 : ret 0x2b48
0x0000000000106679 : ret 0x2b49
0x000000000008dd62 : ret 0x2b74
0x0000000000124a95 : ret 0x2b8
0x000000000011c40a : ret 0x2c3c
0x0000000000045b3e : ret 0x2ce8
0x00000000000e277c : ret 0x2de9
0x000000000003a6f5 : ret 0x2e66
0x00000000000cba6c : ret 0x2eb8
0x000000000002823b : ret 0x2ee9
0x00000000000ec0f6 : ret 0x2f75
0x000000000003b320 : ret 0x3039
0x00000000000dd655 : ret 0x30f
0x00000000000bd332 : ret 0x3101
0x0000000000027228 : ret 0x3145
0x0000000000124d51 : ret 0x3148
0x0000000000124d30 : ret 0x3149
0x0000000000124c38 : ret 0x314d
0x0000000000104df7 : ret 0x315d
0x000000000009067c : ret 0x3174
0x000000000007cfc9 : ret 0x3175
0x00000000000f6202 : ret 0x31e9
0x0000000000125f3b : ret 0x328b
0x00000000000f4841 : ret 0x3375
0x000000000006e21b : ret 0x33e9
0x00000000000d5807 : ret 0x341
0x00000000000f476f : ret 0x3475
0x0000000000094609 : ret 0x347c
0x00000000000efcca : ret 0x348
0x00000000000aa432 : ret 0x3489
0x00000000000f469f : ret 0x3575
0x00000000000859ca : ret 0x36e9
0x000000000015b786 : ret 0x3776
0x00000000000d3ea2 : ret 0x3789
0x00000000000b77d2 : ret 0x3840
0x00000000000b7735 : ret 0x3844
0x00000000000940f5 : ret 0x3876
0x000000000007eb2f : ret 0x389
0x00000000000719ca : ret 0x38b
0x00000000000d2e29 : ret 0x3901
0x0000000000117f78 : ret 0x3904
0x00000000000b7da1 : ret 0x3907
0x0000000000118e75 : ret 0x3908
0x000000000004daec : ret 0x3941
0x00000000000cdf92 : ret 0x3944
0x000000000008c2b5 : ret 0x3945
0x000000000003db2d : ret 0x3948
0x0000000000027fcb : ret 0x3949
0x000000000002f076 : ret 0x394c
0x0000000000089686 : ret 0x394d
0x0000000000071d86 : ret 0x3973
0x00000000000e25d8 : ret 0x3980
0x00000000000a3422 : ret 0x3a01
0x000000000016307b : ret 0x3a73
0x000000000013738b : ret 0x3a83
0x00000000000cedcf : ret 0x3b01
0x00000000000a3c55 : ret 0x3b48
0x00000000000cd90b : ret 0x3b4c
0x0000000000167e12 : ret 0x3b74
0x00000000000eceb7 : ret 0x3b8
0x0000000000067f1c : ret 0x3be9
0x00000000000a1941 : ret 0x3c75
0x00000000000dc42d : ret 0x3c80
0x0000000000104757 : ret 0x3ce9
0x0000000000037ed6 : ret 0x3d48
0x00000000000f4917 : ret 0x3d75
0x00000000000260c5 : ret 0x3d83
0x00000000000ca6cd : ret 0x3de9
0x00000000000733bd : ret 0x3f7
0x0000000000084bf3 : ret 0x3f73
0x000000000003939c : ret 0x4001
0x00000000000a5063 : ret 0x408d
0x0000000000057743 : ret 0x40e9
0x000000000002ecc1 : ret 0x4101
0x0000000000118d7b : ret 0x4102
0x00000000000a7222 : ret 0x4104
0x0000000000067c7b : ret 0x4108
0x000000000003f2d1 : ret 0x4118
0x0000000000041d06 : ret 0x4135
0x00000000000c08a8 : ret 0x413c
0x00000000000905b7 : ret 0x4153
0x0000000000105573 : ret 0x415d
0x00000000000f78de : ret 0x4190
0x00000000000f0d7e : ret 0x41c3
0x00000000000924ea : ret 0x4266
0x00000000000d82ef : ret 0x428d
0x0000000000075007 : ret 0x4389
0x0000000000034e38 : ret 0x4401
0x0000000000058763 : ret 0x4404
0x000000000002b679 : ret 0x4408
0x00000000000c90ea : ret 0x442
0x00000000000e3cab : ret 0x4489
0x0000000000032c99 : ret 0x448b
0x00000000000bf050 : ret 0x448d
0x0000000000058399 : ret 0x44c6
0x0000000000036979 : ret 0x44c7
0x00000000000288cf : ret 0x44e9
0x000000000008f7cc : ret 0x4501
0x0000000000118b66 : ret 0x4502
0x00000000000a46ba : ret 0x4504
0x000000000004c00a : ret 0x453c
0x00000000000b7155 : ret 0x4553
0x00000000000d1518 : ret 0x457f
0x0000000000025606 : ret 0x4589
0x000000000007177d : ret 0x45f7
0x00000000000b6157 : ret 0x4675
0x0000000000090758 : ret 0x474
0x0000000000079de1 : ret 0x47e9
0x000000000008a0f6 : ret 0x4801
0x00000000000632eb : ret 0x4802
0x0000000000059a24 : ret 0x4803
0x0000000000028af7 : ret 0x4804
0x00000000000ffe36 : ret 0x4805
0x00000000000ffd16 : ret 0x4806
0x00000000000ffc86 : ret 0x4807
0x00000000000d5632 : ret 0x4808
0x00000000000ffae6 : ret 0x4809
0x0000000000031d58 : ret 0x480a
0x00000000000ff946 : ret 0x480b
0x0000000000049ef6 : ret 0x4810
0x00000000000224cc : ret 0x4811
0x000000000004e4f6 : ret 0x4817
0x000000000004e516 : ret 0x4820
0x00000000001047d4 : ret 0x4830
0x000000000006bf63 : ret 0x4840
0x00000000000240bf : ret 0x4864
0x00000000000ce8e2 : ret 0x4874
0x0000000000031738 : ret 0x48b
0x0000000000099b4c : ret 0x48c3
0x000000000003b222 : ret 0x48d
0x0000000000046ab9 : ret 0x48e9
0x00000000000272ec : ret 0x4901
0x000000000002aae9 : ret 0x4902
0x000000000010bec9 : ret 0x4904
0x00000000000a4c84 : ret 0x4908
0x00000000000ba0fb : ret 0x4909
0x00000000000be85d : ret 0x490f
0x0000000000083345 : ret 0x4910
0x00000000001372d2 : ret 0x4918
0x000000000005813a : ret 0x49e9
0x00000000000d6614 : ret 0x4a8b
0x0000000000024519 : ret 0x4a8d
0x00000000000f3677 : ret 0x4ab8
0x000000000003c240 : ret 0x4ae8
0x000000000005802f : ret 0x4ae9
0x00000000000f77bb : ret 0x4b01
0x0000000000083b3b : ret 0x4b10
0x00000000001263eb : ret 0x4b89
0x00000000000f3737 : ret 0x4bb8
0x00000000000ce945 : ret 0x4be9
0x000000000003d49a : ret 0x4c01
0x0000000000057a04 : ret 0x4c02
0x00000000000cd218 : ret 0x4c04
0x00000000000e15c9 : ret 0x4c08
0x0000000000118712 : ret 0x4c0c
0x0000000000081d5c : ret 0x4c10
0x00000000000fdc9a : ret 0x4c14
0x000000000015b0b6 : ret 0x4c20
0x000000000004dda6 : ret 0x4c40
0x00000000000c3175 : ret 0x4c48
0x000000000015b0f6 : ret 0x4c60
0x00000000000bbbff : ret 0x4c80
0x000000000005912b : ret 0x4c8b
0x00000000000465d0 : ret 0x4d01
0x00000000000d4002 : ret 0x4d08
0x000000000009f0e6 : ret 0x4d10
0x000000000005533d : ret 0x4de8
0x0000000000025603 : ret 0x4e0f
0x00000000000874cf : ret 0x4e75
0x00000000000e1bfa : ret 0x4f7e
0x00000000000f6e88 : ret 0x4feb
0x0000000000163064 : ret 0x5173
0x000000000005caa2 : ret 0x51ff
0x0000000000080fb0 : ret 0x5241
0x0000000000103f98 : ret 0x5422
0x00000000000945e9 : ret 0x547c
0x00000000000468dc : ret 0x5488
0x000000000004a23c : ret 0x5489
0x00000000000ed03e : ret 0x55b8
0x00000000000a1927 : ret 0x5675
0x00000000000d5954 : ret 0x56e8
0x000000000010bb2f : ret 0x576
0x000000000010b836 : ret 0x577
0x000000000015b766 : ret 0x5776
0x00000000000da7dd : ret 0x57e
0x0000000000039a9b : ret 0x589
0x000000000012b2f4 : ret 0x590
0x00000000000da19c : ret 0x597e
0x000000000002947b : ret 0x5a58
0x000000000006dd24 : ret 0x5ba
0x000000000002afdf : ret 0x5ce9
0x000000000008cb6c : ret 0x5d5b
0x00000000000469fc : ret 0x5e9
0x00000000001138f9 : ret 0x61e8
0x00000000000eb63a : ret 0x62
0x000000000008bf48 : ret 0x62e8
0x0000000000048111 : ret 0x6348
0x0000000000090a55 : ret 0x6349
0x000000000003514b : ret 0x634c
0x00000000000b613a : ret 0x6375
0x000000000007adea : ret 0x6376
0x000000000002d397 : ret 0x6411
0x00000000000945d9 : ret 0x647c
0x000000000002be17 : ret 0x64e9
0x00000000000b17c8 : ret 0x6573
0x00000000000c9d70 : ret 0x6574
0x000000000011c0db : ret 0x65e9
0x00000000001303ec : ret 0x6604
0x0000000000094689 : ret 0x6610
0x0000000000094081 : ret 0x6620
0x0000000000027212 : ret 0x66c3
0x0000000000089c4a : ret 0x672
0x0000000000120106 : ret 0x674
0x000000000015b756 : ret 0x6776
0x00000000000f6de4 : ret 0x67a
0x000000000011ea30 : ret 0x68c
0x00000000000874c4 : ret 0x6974
0x00000000000ca69f : ret 0x6be9
0x000000000002bad2 : ret 0x6e9
0x00000000000befee : ret 0x6eb8
0x00000000000c89e6 : ret 0x6f75
0x000000000004c17a : ret 0x6fe9
0x00000000000583ba : ret 0x708d
0x0000000000086d4c : ret 0x70e9
0x000000000013610d : ret 0x7275
0x00000000000b76f3 : ret 0x73e9
0x000000000007f0b6 : ret 0x7401
0x0000000000086743 : ret 0x7402
0x0000000000086778 : ret 0x7404
0x000000000005b77c : ret 0x7408
0x0000000000073b62 : ret 0x7420
0x000000000009a137 : ret 0x7501
0x00000000000811a8 : ret 0x7502
0x000000000009a141 : ret 0x7504
0x000000000011815f : ret 0x7507
0x000000000009a146 : ret 0x7508
0x00000000000838c3 : ret 0x750f
0x000000000016517b : ret 0x7510
0x0000000000072282 : ret 0x7520
0x00000000000d50d1 : ret 0x7540
0x00000000000d1daf : ret 0x7580
0x0000000000119b2d : ret 0x758b
0x00000000000890e6 : ret 0x772
0x0000000000048c32 : ret 0x777
0x0000000000161f52 : ret 0x7777
0x00000000000e1f91 : ret 0x7880
0x0000000000037149 : ret 0x7c7
0x0000000000046847 : ret 0x7c8b
0x000000000005bca2 : ret 0x7de9
0x0000000000094021 : ret 0x7e20
0x000000000015b6bc : ret 0x7e40
0x0000000000031d42 : ret 0x7e9
0x000000000009109c : ret 0x7f10
0x000000000016b766 : ret 0x7f75
0x00000000001699bb : ret 0x7fff
0x000000000014259e : ret 0x80
0x0000000000092279 : ret 0x8000
0x0000000000045fdf : ret 0x8001
0x00000000000f4766 : ret 0x8040
0x00000000000f490e : ret 0x8041
0x00000000001131c2 : ret 0x8080
0x00000000000282b0 : ret 0x80e9
0x000000000015af25 : ret 0x8101
0x0000000000116ccd : ret 0x8103
0x0000000000160ba5 : ret 0x8104
0x0000000000118e50 : ret 0x8108
0x0000000000057536 : ret 0x8141
0x00000000000bb93b : ret 0x8166
0x00000000000dd59c : ret 0x8174
0x00000000000eb1ea : ret 0x8207
0x000000000004eb0b : ret 0x820f
0x000000000005a931 : ret 0x8277
0x0000000000038126 : ret 0x82b8
0x000000000008944a : ret 0x8301
0x000000000011a1b1 : ret 0x8303
0x000000000008dea5 : ret 0x8305
0x000000000006453b : ret 0x8308
0x000000000003bcf0 : ret 0x830f
0x000000000015afc0 : ret 0x8310
0x000000000015af92 : ret 0x8320
0x0000000000094501 : ret 0x8340
0x000000000003e1f5 : ret 0x8341
0x00000000000873f9 : ret 0x8348
0x000000000002e9bb : ret 0x8349
0x0000000000078c7d : ret 0x83eb
0x000000000002464f : ret 0x8401
0x0000000000037522 : ret 0x840f
0x000000000003640a : ret 0x8440
0x00000000000dd96d : ret 0x84c6
0x000000000003e5ed : ret 0x8508
0x000000000002b39a : ret 0x850f
0x000000000015bc51 : ret 0x8520
0x00000000000468d4 : ret 0x8545
0x0000000000027b47 : ret 0x8548
0x0000000000057cef : ret 0x854d
0x00000000000cd860 : ret 0x8589
0x00000000000bacbe : ret 0x858b
0x0000000000079131 : ret 0x85eb
0x000000000002ed38 : ret 0x860f
0x000000000005cc72 : ret 0x870f
0x0000000000094125 : ret 0x876
0x0000000000053e52 : ret 0x87e
0x0000000000114bfe : ret 0x87eb
0x0000000000028a64 : ret 0x8801
0x00000000000276fc : ret 0x8804
0x000000000006f13c : ret 0x8873
0x0000000000027ff2 : ret 0x8901
0x00000000000daa82 : ret 0x8908
0x00000000000fef79 : ret 0x8940
0x000000000003ef14 : ret 0x8941
0x000000000003dc57 : ret 0x8944
0x00000000000b712b : ret 0x8945
0x0000000000101fad : ret 0x8948
0x00000000000275d8 : ret 0x8949
0x00000000000316da : ret 0x894c
0x00000000000789ba : ret 0x894d
0x000000000004947b : ret 0x894e
0x0000000000059783 : ret 0x8b04
0x0000000000030142 : ret 0x8b05
0x00000000000338e2 : ret 0x8b08
0x0000000000160c62 : ret 0x8b10
0x000000000002f067 : ret 0x8b41
0x0000000000056cdd : ret 0x8b42
0x00000000000d0a42 : ret 0x8b44
0x00000000000289f4 : ret 0x8b45
0x00000000000d57e8 : ret 0x8b47
0x00000000000afe60 : ret 0x8b48
0x000000000003d5d8 : ret 0x8b49
0x0000000000049402 : ret 0x8b4a
0x0000000000028c80 : ret 0x8b4c
0x0000000000071910 : ret 0x8b64
0x0000000000079256 : ret 0x8beb
0x0000000000055402 : ret 0x8c0f
0x000000000008eb6b : ret 0x8d01
0x000000000004de01 : ret 0x8d04
0x00000000000bcb48 : ret 0x8d0f
0x0000000000083d51 : ret 0x8d30
0x00000000000c14ba : ret 0x8d41
0x0000000000083bee : ret 0x8d44
0x00000000000c2478 : ret 0x8d45
0x0000000000026671 : ret 0x8d48
0x000000000003b261 : ret 0x8d49
0x000000000008a261 : ret 0x8d4a
0x00000000000e2c11 : ret 0x8d4b
0x00000000000487f5 : ret 0x8d4c
0x00000000000362ca : ret 0x8d4d
0x0000000000044dbb : ret 0x8d74
0x00000000000393dc : ret 0x8e0f
0x0000000000135072 : ret 0x8e5
0x0000000000134772 : ret 0x8ee
0x000000000004eb86 : ret 0x8f0f
0x000000000012e3e2 : ret 0x8fb
0x00000000000e050b : ret 0x8fe8
0x00000000000ea0cd : ret 0x9066
0x00000000000a4dad : ret 0x90c3
0x000000000004a4fa : ret 0x90e8
0x0000000000036d70 : ret 0x9174
0x00000000000a62ee : ret 0x92e9
0x000000000011e22a : ret 0x9388
0x000000000008f56b : ret 0x93eb
0x0000000000046b30 : ret 0x940a
0x0000000000066538 : ret 0x940f
0x000000000004a8ce : ret 0x941
0x0000000000036cfb : ret 0x948
0x0000000000169a0c : ret 0x949
0x00000000000373a0 : ret 0x94c
0x00000000000736bb : ret 0x94eb
0x000000000004d373 : ret 0x9574
0x0000000000125da3 : ret 0x975
0x00000000000866d0 : ret 0x976
0x000000000010b8a8 : ret 0x977
0x00000000000a1975 : ret 0x9874
0x000000000012878a : ret 0x9a5
0x00000000000723ea : ret 0x9af
0x000000000011d852 : ret 0x9c39
0x000000000009f510 : ret 0x9d72
0x000000000004c500 : ret 0xa
0x00000000000e27c4 : ret 0xa0e9
0x0000000000078a2b : ret 0xa0eb
0x000000000011c1e2 : ret 0xa1d
0x000000000011b9c5 : ret 0xa3c
0x000000000011eb5a : ret 0xa3e
0x00000000000e19f8 : ret 0xa42
0x00000000000ee096 : ret 0xa6e9
0x00000000000e28e2 : ret 0xa77
0x00000000000586a9 : ret 0xa7d
0x00000000000e06f1 : ret 0xa9e8
0x000000000005d45a : ret 0xab6
0x00000000000f90de : ret 0xabe
0x00000000000d59ff : ret 0xabe8
0x00000000000e4a1e : ret 0xabf
0x0000000000115602 : ret 0xacd
0x000000000002b9ec : ret 0xace9
0x000000000006452b : ret 0xad83
0x00000000000c9b34 : ret 0xb
0x0000000000046f92 : ret 0xb0e9
0x00000000000e1c49 : ret 0xb17f
0x000000000011071a : ret 0xb19
0x000000000010f0ba : ret 0xb2e
0x00000000000f649d : ret 0xb2e9
0x000000000003bfd7 : ret 0xb3e8
0x0000000000046c25 : ret 0xb3e9
0x000000000010ed4a : ret 0xb48
0x0000000000076056 : ret 0xb4e8
0x00000000000316fa : ret 0xb60f
0x000000000003424c : ret 0xb70f
0x00000000000d1535 : ret 0xb74
0x000000000003dc4a : ret 0xb7e
0x0000000000036f47 : ret 0xb8
0x00000000001095da : ret 0xb81
0x0000000000046815 : ret 0xb841
0x0000000000036b78 : ret 0xb848
0x0000000000105212 : ret 0xb8b
0x00000000000c9d0e : ret 0xb8c3
0x000000000006a2d5 : ret 0xb908
0x0000000000036b38 : ret 0xb948
0x00000000000461e6 : ret 0xbae9
0x0000000000119bc3 : ret 0xbc73
0x00000000000db629 : ret 0xbc8b
0x00000000000ef4b2 : ret 0xbceb
0x00000000000e8765 : ret 0xbd41
0x00000000000cac58 : ret 0xbdeb
0x000000000006ac03 : ret 0xbf08
0x000000000005d88a : ret 0xc
0x0000000000092139 : ret 0xc000
0x000000000004a8a7 : ret 0xc001
0x000000000011836b : ret 0xc019
0x00000000000321db : ret 0xc031
0x000000000002d3de : ret 0xc083
0x00000000000f565c : ret 0xc084
0x000000000015bae4 : ret 0xc085
0x00000000000ca74a : ret 0xc0e9
0x000000000003dbea : ret 0xc101
0x00000000000fcc7a : ret 0xc11
0x0000000000055c88 : ret 0xc141
0x00000000000b65a9 : ret 0xc148
0x0000000000027fdd : ret 0xc149
0x0000000000057369 : ret 0xc166
0x00000000000fc57a : ret 0xc18
0x00000000000339d4 : ret 0xc189
0x00000000000b761b : ret 0xc221
0x000000000003b228 : ret 0xc229
0x000000000003b3d7 : ret 0xc269
0x0000000000085733 : ret 0xc275
0x0000000000077fd2 : ret 0xc283
0x0000000000162f34 : ret 0xc2b2
0x00000000000fcdfa : ret 0xc3
0x00000000000bd667 : ret 0xc329
0x00000000000d5cca : ret 0xc35b
0x000000000002c925 : ret 0xc389
0x000000000008cb08 : ret 0xc3c3
0x000000000015b721 : ret 0xc540
0x00000000000576be : ret 0xc5e9
0x000000000011ab6b : ret 0xc601
0x0000000000058408 : ret 0xc604
0x00000000000c9209 : ret 0xc60f
0x00000000000bd311 : ret 0xc629
0x00000000000b32fa : ret 0xc71
0x0000000000118dcb : ret 0xc741
0x000000000003d609 : ret 0xc748
0x00000000000b6191 : ret 0xc75
0x00000000000bf05f : ret 0xc781
0x000000000004e3b5 : ret 0xc789
0x00000000000d1b8e : ret 0xc790
0x0000000000074ff8 : ret 0xc883
0x0000000000036828 : ret 0xc889
0x00000000001303e5 : ret 0xc89
0x0000000000071a4a : ret 0xc985
0x000000000009e895 : ret 0xc9ff
0x0000000000023e1a : ret 0xca21
0x00000000000d9ca0 : ret 0xcae8
0x000000000008736e : ret 0xcb8
0x00000000000bd67b : ret 0xcb89
0x000000000009f4e0 : ret 0xcd72
0x00000000000efce2 : ret 0xce2
0x0000000000034115 : ret 0xce80
0x00000000000bd324 : ret 0xce89
0x00000000000569f4 : ret 0xceb
0x0000000000133266 : ret 0xcf89
0x00000000000eaaab : ret 0xcfe8
0x00000000001677aa : ret 0xd
0x00000000000d10eb : ret 0xd008
0x00000000000dc70f : ret 0xd009
0x00000000000861b6 : ret 0xd020
0x000000000011d66b : ret 0xd021
0x0000000000046b41 : ret 0xd084
0x0000000000036f17 : ret 0xd089
0x00000000000e4121 : ret 0xd101
0x00000000000da6d5 : ret 0xd108
0x00000000000babf4 : ret 0xd129
0x0000000000088e22 : ret 0xd148
0x000000000007766e : ret 0xd174
0x000000000002576c : ret 0xd17d
0x0000000000168c3d : ret 0xd189
0x00000000000ba082 : ret 0xd1e9
0x0000000000078006 : ret 0xd201
0x0000000000035e24 : ret 0xd231
0x0000000000024275 : ret 0xd284
0x000000000002c76e : ret 0xd285
0x00000000000e32bc : ret 0xd289
0x0000000000080d3f : ret 0xd2f7
0x00000000000905c4 : ret 0xd308
0x00000000000eade2 : ret 0xd31
0x0000000000038af3 : ret 0xd321
0x0000000000063177 : ret 0xd329
0x0000000000029bce : ret 0xd341
0x00000000000b3793 : ret 0xd348
0x0000000000168046 : ret 0xd349
0x000000000011e433 : ret 0xd3e9
0x00000000000dbd63 : ret 0xd539
0x0000000000062ed6 : ret 0xd629
0x0000000000118ded : ret 0xd639
0x0000000000061146 : ret 0xd729
0x00000000000e5ee2 : ret 0xd80
0x00000000000f9703 : ret 0xd8eb
0x00000000000afe4f : ret 0xd8f7
0x00000000000e6aea : ret 0xda3
0x00000000000e69da : ret 0xda4
0x00000000000d8193 : ret 0xda77
0x0000000000139d65 : ret 0xda80
0x00000000000a43ad : ret 0xda89
0x000000000005e986 : ret 0xdae9
0x0000000000036824 : ret 0xdaf7
0x00000000000e5068 : ret 0xdb31
0x00000000000d21d1 : ret 0xdb77
0x00000000000ef31a : ret 0xdbe9
0x00000000000b2208 : ret 0xdc00
0x00000000000e8fa7 : ret 0xdce9
0x00000000000a7130 : ret 0xdd3
0x00000000000dd5c9 : ret 0xe
0x0000000000091ff9 : ret 0xe000
0x000000000016513d : ret 0xe074
0x0000000000118736 : ret 0xe075
0x0000000000029893 : ret 0xe083
0x000000000002b282 : ret 0xe0e9
0x000000000007851b : ret 0xe181
0x0000000000059f78 : ret 0xe183
0x00000000000d2267 : ret 0xe275
0x000000000011e213 : ret 0xe277
0x0000000000035be4 : ret 0xe281
0x00000000000272bd : ret 0xe283
0x0000000000160adf : ret 0xe2c4
0x000000000004cf28 : ret 0xe2e8
0x0000000000080e02 : ret 0xe375
0x00000000000809e3 : ret 0xe4e9
0x0000000000056000 : ret 0xe57f
0x000000000008d287 : ret 0xe675
0x0000000000058b80 : ret 0xe680
0x0000000000023c8b : ret 0xe683
0x0000000000086e16 : ret 0xe775
0x000000000015ab33 : ret 0xe7f
0x00000000000725f2 : ret 0xe8
0x000000000011319a : ret 0xe801
0x00000000000270ca : ret 0xe802
0x0000000000116928 : ret 0xe841
0x00000000000377a8 : ret 0xe867
0x00000000000ce8f5 : ret 0xe875
0x00000000000554dd : ret 0xe87f
0x00000000000b7e05 : ret 0xe883
0x00000000000bd5df : ret 0xe889
0x00000000000da4dc : ret 0xe8c0
0x00000000000aeedb : ret 0xe8c1
0x000000000002c0c2 : ret 0xe8e9
0x000000000007861c : ret 0xe9
0x0000000000031ce1 : ret 0xe901
0x0000000000031d1e : ret 0xe902
0x000000000009e936 : ret 0xe908
0x0000000000157086 : ret 0xe910
0x000000000004ebfd : ret 0xe920
0x0000000000084269 : ret 0xe95b
0x000000000008422f : ret 0xe96e
0x0000000000057344 : ret 0xe975
0x0000000000084492 : ret 0xe977
0x0000000000084555 : ret 0xe97c
0x00000000000d0791 : ret 0xe97f
0x00000000000901a3 : ret 0xea75
0x0000000000128fa1 : ret 0xea89
0x0000000000059fba : ret 0xeac0
0x00000000000bae27 : ret 0xeac1
0x00000000000e5f8d : ret 0xead1
0x00000000000ce7bc : ret 0xeaeb
0x0000000000045c11 : ret 0xeb01
0x00000000000338dc : ret 0xeb04
0x00000000000d3ff8 : ret 0xeb08
0x00000000001550c6 : ret 0xeb10
0x00000000000af4d2 : ret 0xeb72
0x0000000000102d5a : ret 0xeb73
0x000000000008d1da : ret 0xeb75
0x00000000000314aa : ret 0xebe8
0x000000000008e451 : ret 0xec75
0x000000000008b518 : ret 0xed31
0x000000000003e7b0 : ret 0xed75
0x00000000000af84f : ret 0xee75
0x00000000000d61c7 : ret 0xee7f
0x00000000000f96b5 : ret 0xeeb
0x000000000003dea6 : ret 0xef75
0x000000000008e66e : ret 0xef77
0x00000000000de32d : ret 0xef89
0x0000000000090be7 : ret 0xf
0x0000000000091eb9 : ret 0xf000
0x00000000000fc26d : ret 0xf009
0x00000000000342b8 : ret 0xf01
0x000000000002ea08 : ret 0xf02
0x00000000000d23d0 : ret 0xf039
0x000000000002e9f3 : ret 0xf04
0x000000000002b8da : ret 0xf06
0x000000000005805d : ret 0xf07
0x000000000004902d : ret 0xf075
0x000000000005a196 : ret 0xf08
0x0000000000089078 : ret 0xf083
0x000000000004a2a7 : ret 0xf089
0x000000000011481a : ret 0xf0db
0x000000000002610d : ret 0xf0e9
0x00000000000833f8 : ret 0xf0f
0x000000000005ba89 : ret 0xf10
0x00000000000d3fc4 : ret 0xf175
0x0000000000138254 : ret 0xf177
0x00000000000946dc : ret 0xf188
0x000000000002b308 : ret 0xf189
0x000000000009a154 : ret 0xf20
0x000000000011812f : ret 0xf221
0x00000000000d45e1 : ret 0xf239
0x000000000008cb3e : ret 0xf3c3
0x0000000000108449 : ret 0xf3f8
0x0000000000057116 : ret 0xf40
0x0000000000023f09 : ret 0xf41
0x00000000000dc222 : ret 0xf44
0x0000000000169685 : ret 0xf45
0x00000000000d72d0 : ret 0xf475
0x0000000000027b43 : ret 0xf48
0x000000000003610f : ret 0xf49
0x00000000000573e2 : ret 0xf4c
0x00000000000d607a : ret 0xf4c3
0x000000000004c536 : ret 0xf4e8
0x0000000000049251 : ret 0xf4e9
0x00000000000570b1 : ret 0xf50
0x00000000000c847a : ret 0xf59
0x000000000015ae5e : ret 0xf5c5
0x0000000000112a9a : ret 0xf5dd
0x0000000000089396 : ret 0xf631
0x0000000000026e03 : ret 0xf641
0x0000000000058a33 : ret 0xf66
0x00000000000784ef : ret 0xf685
0x00000000000ca614 : ret 0xf6e9
0x0000000000047aca : ret 0xf741
0x000000000003498a : ret 0xf748
0x0000000000048c1e : ret 0xf749
0x0000000000104682 : ret 0xf789
0x000000000008de4d : ret 0xf79
0x00000000000a8d7a : ret 0xf8
0x00000000000290fb : ret 0xf800
0x000000000012e5ce : ret 0xf801
0x00000000000ae86a : ret 0xf818
0x00000000000ae08a : ret 0xf822
0x0000000000025fc7 : ret 0xf883
0x00000000000802b7 : ret 0xf8b
0x000000000015f196 : ret 0xf8c5
0x00000000000b8023 : ret 0xf980
0x0000000000024548 : ret 0xf983
0x00000000000c6f6a : ret 0xf9d
0x00000000000352c2 : ret 0xfa83
0x0000000000078f4a : ret 0xfaa1
0x00000000000bd607 : ret 0xfac1
0x00000000000a43be : ret 0xfae9
0x0000000000091c39 : ret 0xfc00
0x00000000000f5b29 : ret 0xfc07
0x00000000000fd6e2 : ret 0xfc3
0x00000000001128fa : ret 0xfd35
0x000000000012c773 : ret 0xfd81
0x00000000000b7d6a : ret 0xfd83
0x0000000000091af9 : ret 0xfe00
0x00000000000c4d5a : ret 0xfe7
0x00000000001699c3 : ret 0xfe83
0x00000000000a7215 : ret 0xfeb
0x0000000000036834 : ret 0xfeb8
0x00000000000919b9 : ret 0xff00
0x0000000000144121 : ret 0xff2
0x00000000000af573 : ret 0xff25
0x000000000015bec9 : ret 0xff2d
0x000000000009241a : ret 0xff3
0x0000000000119ff4 : ret 0xff31
0x000000000009098b : ret 0xff3e
0x00000000000dd17a : ret 0xff3f
0x0000000000050eee : ret 0xff41
0x00000000000a1924 : ret 0xff48
0x000000000002d5ba : ret 0xff4d
0x0000000000091879 : ret 0xff80
0x000000000011b05a : ret 0xff81
0x0000000000056d27 : ret 0xff85
0x0000000000076cfb : ret 0xffb8
0x000000000004244b : ret 0xffbf
0x0000000000091739 : ret 0xffc0
0x000000000006aaca : ret 0xffc2
0x000000000006513e : ret 0xffc5
0x000000000006bdf6 : ret 0xffce
0x000000000012757a : ret 0xffcf
0x000000000008524a : ret 0xffd3
0x000000000006a93d : ret 0xffd7
0x000000000003f93a : ret 0xffdd
0x0000000000069015 : ret 0xffdf
0x00000000000915f9 : ret 0xffe0
0x0000000000052cba : ret 0xffe1
0x00000000000c1ce8 : ret 0xffe4
0x00000000000bd16f : ret 0xffe7
0x00000000000e54aa : ret 0xffed
0x00000000000e9e16 : ret 0xffee
0x000000000003c6a9 : ret 0xffef
0x0000000000086dea : ret 0xfff
0x00000000000914b9 : ret 0xfff0
0x00000000000496aa : ret 0xfff1
0x000000000004f9b6 : ret 0xfff3
0x00000000000ed8e8 : ret 0xfff4
0x000000000010c0c2 : ret 0xfff6
0x00000000000f5029 : ret 0xfff7
0x0000000000091379 : ret 0xfff8
0x000000000003e95f : ret 0xfff9
0x000000000005769a : ret 0xfffa
0x000000000003555a : ret 0xfffb
0x0000000000076a72 : ret 0xfffc
0x000000000002c7bf : ret 0xfffd
0x000000000003600a : ret 0xfffe
0x000000000002fff9 : ret 0xffff
0x000000000002e88a : ret 1
0x000000000008370d : ret 2
0x000000000003456c : ret 3
0x000000000009478d : ret 4
0x000000000009f90a : ret 5
0x000000000005690a : ret 6
0x00000000000b577a : ret 7
0x0000000000052920 : ret 8
0x00000000000e9bad : ret 9
0x00000000000c02ba : retf 0x6348 ; add al, 0x96 ; add rax, rsi ; jmp rax
0x0000000000097c5f : retf 0x850f ; call qword ptr [rsi]
0x000000000007800a : retf ; nop dword ptr [rax + rax] ; xor edx, edx ; jmp 0x77fdf
0x000000000010d466 : rol ax, 8 ; ret
0x00000000000a34e5 : rol bl, 0x48 ; mov eax, edi ; ret
0x00000000000a418c : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000009407e : rol bl, 0x83 ; ret 0x6620
0x000000000011836d : rol bl, 0x90 ; mov eax, 0xffffffff ; ret
0x000000000007a45e : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000075bcc : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000000b679f : rol bl, 1 ; nop dword ptr [rax] ; ret
0x000000000009481e : rol bl, 1 ; xor eax, eax ; ret
0x000000000011a040 : rol byte ptr [r8], 0xc6 ; ret
0x00000000000a3ca1 : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000000923f2 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000015b78b : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x0000000000099df2 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000003accb : rol byte ptr [rax + 0x775003f], 0x5b ; ret
0x00000000000d63c9 : rol byte ptr [rax + 0xf00657b], cl ; xchg eax, ebp ; ret 0xd201
0x000000000006960f : rol byte ptr [rax + rcx*2], 0x39 ; ret
0x0000000000027ff8 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000002e635 : rol byte ptr [rax - 0x75], 1 ; cmp byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008a33e : rol byte ptr [rax - 0x78], 1 ; jl 0x8a370 ; adc byte ptr [rcx + 0xf], cl ; ret 0x294d
0x000000000007c046 : rol byte ptr [rax], 0 ; add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x00000000000785f2 : rol byte ptr [rax], 0 ; add byte ptr [rbx - 0x760e76cd], cl ; ret 0xe181
0x0000000000161e5f : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000011a041 : rol byte ptr [rax], 0xc6 ; ret
0x000000000012d02f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x000000000012d0c9 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000010ae5f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ea4c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000d1532 : rol byte ptr [rbp + 0x39], 0xc2 ; je 0xd1549 ; ret
0x00000000000942d2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000000cdf8e : rol byte ptr [rbp + 0xf], 1 ; ret 0x3944
0x0000000000067973 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x0000000000104840 : rol byte ptr [rbp - 0x6af0be40], cl ; ret 0x3945
0x0000000000100a98 : rol byte ptr [rbp - 0x7b], cl ; in al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x000000000015bbc2 : rol byte ptr [rbx + 0x14860c0], 0xf8 ; ret
0x000000000004889b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x000000000004594e : rol byte ptr [rbx - 0x248adb07], 1 ; ret
0x00000000000d5be7 : rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x000000000003e7f2 : rol byte ptr [rbx - 0x57ccf16], 1 ; or dword ptr [rdi], ecx ; xchg eax, edi ; ret 0xd284
0x00000000000ff21c : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x0000000000075dd9 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x0000000000077fcc : rol byte ptr [rbx - 0x6af0f808], cl ; ret 0xc283
0x0000000000030675 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x000000000004c4fa : rol byte ptr [rbx - 0x7bf0cf08], 1 ; ret 0xa
0x00000000000b6a12 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000119ba1 : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000122e4a : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x00000000000da7da : rol byte ptr [rcx + 0x39], cl ; ret 0x57e
0x0000000000109b9c : rol byte ptr [rcx + 0x5c], 0x5d ; ret
0x0000000000103b3d : rol byte ptr [rcx + 0x5c], 0xf ; mov dh, 0xc0 ; neg eax ; ret
0x00000000000c5485 : rol byte ptr [rcx + 0x5c], 1 ; pop r13 ; pop r14 ; ret
0x0000000000085d46 : rol byte ptr [rcx + 0x5c], 1 ; ret
0x000000000012f479 : rol byte ptr [rcx + 0x5d], 0x41 ; pop rsi ; jmp rcx
0x0000000000104842 : rol byte ptr [rcx + 0xf], 0x95 ; ret 0x3945
0x0000000000167bf1 : rol byte ptr [rcx + 0xf], 0x95 ; ret 0xc031
0x00000000000a3ca2 : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000000906fd : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x000000000008ca88 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret
0x00000000000907ab : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x0000000000045a1f : rol byte ptr [rcx + rcx*4 - 0x10], 0xf ; ret
0x0000000000118c6a : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000a4dd5 : rol byte ptr [rcx + rcx*4], 0x10 ; test edx, edx ; jne 0xa4dd8 ; ret
0x0000000000050c51 : rol byte ptr [rcx - 0x46], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000058137 : rol byte ptr [rcx - 0x77], 1 ; ret 0x49e9
0x00000000000acb13 : rol byte ptr [rcx - 0x7d], 0xe1 ; add eax, ebp ; ret
0x0000000000046b29 : rol byte ptr [rcx - 0x7d], 0xff ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x940a
0x00000000000b69f2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000d61c4 : rol byte ptr [rcx], 0x39 ; ret 0xee7f
0x000000000004853a : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x48539 ; xor eax, eax ; ret
0x0000000000048622 : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x48621 ; xor eax, eax ; ret
0x0000000000025066 : rol byte ptr [rcx], 0x50 ; call rbx
0x00000000000fe7eb : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x0000000000047392 : rol byte ptr [rcx], 0x80 ; js 0x473a1 ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000011965d : rol byte ptr [rcx], 0x84 ; fisttp dword ptr [rdi] ; ret 0x8b48
0x000000000012d16a : rol byte ptr [rcx], 0x89 ; ret
0x000000000007227d : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x0000000000045d92 : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000f71bf : rol byte ptr [rcx], 0xd9 ; ret 0x3941
0x00000000000a43a9 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x000000000004daea : rol byte ptr [rcx], 1 ; ret 0x3941
0x00000000000ebb24 : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000ff5f1 : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000b6a52 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000b6a02 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ff4c1 : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x00000000000b6a42 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000015b80f : rol ch, 1 ; std ; xlatb ; ret
0x000000000015f5b6 : rol ch, cl ; std ; xlatb ; ret
0x000000000015f86f : rol ch, cl ; std ; xlatb ; ret 0xc085
0x00000000000badb4 : rol cl, cl ; clc ; add eax, 0x2907f9c1 ; ret 0x8944
0x00000000000b699c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000118ad6 : rol dword ptr [rax - 0x69f0fe07], cl ; ret 0x8341
0x0000000000167b1e : rol dword ptr [rbp + 0x29], cl ; ret 0x8944
0x00000000000940a4 : rol dword ptr [rbp + 0x315775c0], -0x40 ; ret
0x0000000000094557 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x0000000000094586 : rol dword ptr [rbp + 0x317575c0], -0x40 ; ret
0x000000000015b803 : rol dword ptr [rbp - 0x3a378a40], -3 ; xlatb ; ret 0xc085
0x000000000015f303 : rol dword ptr [rbp - 0x3a678a40], -3 ; xlatb ; ret 0xc085
0x00000000000d132a : rol dword ptr [rbp - 0x77], 1 ; ret
0x0000000000090708 : rol dword ptr [rbp - 0x7c], -0x36 ; jne 0x906ee ; ret
0x000000000002b8d1 : rol dword ptr [rbx + 0x634807e3], cl ; fild dword ptr [rcx - 0xa] ; ret 0xf06
0x0000000000029b66 : rol dword ptr [rbx - 0x2b898008], 0x2d ; ret 0
0x00000000001696a2 : rol dword ptr [rcx + 0xf], -0x6e ; ret 0x3145
0x00000000000d23a2 : rol dword ptr [rcx + rcx*4 + 0x4f], 0x2c ; mov dword ptr [rdi + 0x30], r9d ; ret
0x000000000011e204 : rol dword ptr [rcx + rcx*4], -0x4c ; ret
0x0000000000053c6c : rol dword ptr [rcx + rdi - 0x39], 0x77 ; fiadd word ptr [rcx + rcx*4 - 0x38] ; ret
0x0000000000029478 : rol dword ptr [rcx - 0x77], cl ; ret 0x5a58
0x00000000000e25b3 : rol dword ptr [rcx], 1 ; add byte ptr [rax], al ; movsxd rax, edx ; jmp 0xe25d7
0x00000000000f6f7b : rol dword ptr [rdi + 0x5b59000c], 1 ; pop rbp ; pop r12 ; ret
0x00000000000eb14b : rol dword ptr [rdi], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000a0f49 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x000000000012d77b : rol dword ptr [rsi], 9 ; add byte ptr [rbx + rax*4 + 0x38], ah ; add al, 0x75 ; ret
0x000000000010d467 : rol eax, 8 ; ret
0x00000000000387d1 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000015bec5 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x0000000000086dac : rol ebx, 0x66 ; nop ; lea rax, qword ptr [rdx - 0x10] ; ret
0x000000000012be47 : rol ecx, 1 ; jmp 0xffffffff80d5b563
0x0000000000086dab : rol r11d, 0x66 ; nop ; lea rax, qword ptr [rdx - 0x10] ; ret
0x00000000000387d0 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000046c1e : ror byte ptr [r9 - 0x76b7dbac], 1 ; ret 0xb3e9
0x0000000000138148 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x00000000000387d2 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x00000000000940f2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x94139 ; add rax, rdi ; ret
0x00000000000b5232 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xb5279 ; add rax, rdi ; ret
0x0000000000099ca7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000b66bc : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x000000000009a12e : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x0000000000077221 : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000109705 : ror byte ptr [rax + 0x39], 0xf7 ; sete al ; ret
0x0000000000108b60 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000ebb26 : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000ec091 : ror byte ptr [rax + 0x39], 1 ; ret 0x3175
0x00000000000632ef : ror byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000000554da : ror byte ptr [rax + 0x39], cl ; ret 0xe87f
0x0000000000071d8b : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000108a70 : ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x0000000000119214 : ror byte ptr [rax + 0x63], 1 ; salc ; ret
0x00000000000cf7b6 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000bc2b6 : ror byte ptr [rax + 0x63], cl ; adc al, 0x93 ; add rdx, rbx ; jmp rdx
0x000000000005fbdd : ror byte ptr [rax + 0x63], cl ; adc al, 0x96 ; add rdx, rsi ; jmp rdx
0x000000000005d5c6 : ror byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rsi ; jmp rax
0x000000000004724a : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000240bb : ror byte ptr [rax + 0xf], 0x44 ; ret 0x4864
0x00000000000b7956 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000109c36 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000000000b8a29 : ror byte ptr [rax + 0xf], 0x4f ; ret 0x8b48
0x00000000000c7eee : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000002f072 : ror byte ptr [rax + 0xf], 1 ; ret 0x394c
0x0000000000101472 : ror byte ptr [rax + 0xf], 1 ; ret 0x394d
0x00000000000c7e33 : ror byte ptr [rax + 0xf], 1 ; ret 0x4589
0x00000000000c62bb : ror byte ptr [rax + 0xf], 1 ; ret 0x8941
0x00000000001016cf : ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0x000000000002f063 : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00000000000c632c : ror byte ptr [rax + 0xf], 1 ; ret 0x8b48
0x00000000000941ac : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x00000000000946c8 : ror byte ptr [rax + 1], 0xf8 ; add rax, rsi ; ret
0x00000000000940c2 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000015b7d3 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000034acb : ror byte ptr [rax + 1], 1 ; ret
0x00000000000ae95b : ror byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000099ca4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000001693fb : ror byte ptr [rax + 9], 1 ; ror byte ptr [rcx - 0x77], 1 ; ret 0xf49
0x000000000004ac52 : ror byte ptr [rax + 9], cl ; ret 0x850f
0x00000000000f4fda : ror byte ptr [rax + rax], 0x41 ; mov byte ptr [rax - 1], 0 ; ret
0x0000000000094816 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x000000000002fff6 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000b99d9 : ror byte ptr [rax - 0x39], 5 ; ret
0x00000000000b8f95 : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc244d7a8
0x0000000000104960 : ror byte ptr [rax - 0x3f], 1 ; loop 0x10496d ; jmp 0x104930
0x000000000004f25b : ror byte ptr [rax - 0x73], 0x34 ; ret
0x00000000000c9f50 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00000000000940b2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x00000000000940e2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x00000000000945c2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x00000000000940d2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x0000000000086de6 : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x00000000000f90bc : ror byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0xf] ; ret 0xc148
0x000000000012296e : ror byte ptr [rax - 0x75], 0x4c ; and al, 8 ; call rcx
0x00000000000fef75 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000be8e4 : ror byte ptr [rax - 0x75], 0x74 ; mov byte ptr [rax + 0x4c], 0x89 ; ret 0x894c
0x00000000000c262f : ror byte ptr [rax - 0x75], 0x74 ; ret
0x000000000012527f : ror byte ptr [rax - 0x76b701ad], 1 ; ret 0xc148
0x00000000000904cc : ror byte ptr [rax - 0x77], 0xa ; ret
0x0000000000127e3c : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x000000000008cde8 : ror byte ptr [rax - 0x77], 0xd8 ; pop rbx ; cmovne rax, rdi ; ret
0x00000000000a579f : ror byte ptr [rax - 0x77], 0xef ; lea r9, qword ptr [rsp + 0x30] ; call rbx
0x0000000000077395 : ror byte ptr [rax - 0x77], 1 ; ret
0x00000000000ebc3f : ror byte ptr [rax - 0x77], 1 ; ret 0x3d48
0x000000000008bf45 : ror byte ptr [rax - 0x77], 1 ; ret 0x62e8
0x0000000000056ad2 : ror byte ptr [rax - 0x77], 1 ; ret 0x8348
0x000000000002e9b8 : ror byte ptr [rax - 0x77], 1 ; ret 0x8349
0x000000000007ca98 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000002402b : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000016a6a7 : ror byte ptr [rax - 0x77], 1 ; ret 0xd148
0x0000000000035be1 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000001273c9 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x0000000000133346 : ror byte ptr [rax - 0x77], cl ; ret
0x0000000000118435 : ror byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x000000000016760a : ror byte ptr [rax - 0x7b], cl ; fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x3145
0x000000000016a119 : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3145
0x000000000007a456 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x000000000008b2b6 : ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000003b982 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000453a4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000ee1e7 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000000000007ba55 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000094622 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000015bbf2 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000094602 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000945e2 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000441e9 : ror byte ptr [rax - 0x7d], 0xfa ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x2041
0x00000000000f566d : ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000df741 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000003a708 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4901
0x000000000011ab68 : ror byte ptr [rax - 0x7d], 1 ; ret 0xc601
0x00000000000b76ec : ror byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x73e9
0x0000000000078fce : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000107875 : ror byte ptr [rax - 0x7d], cl ; ret
0x000000000009f506 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000a7cea : ror byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000138250 : ror byte ptr [rax], 0x48 ; cmp edx, eax ; ja 0x138251 ; xor eax, eax ; ret
0x000000000012c7d5 : ror byte ptr [rax], 0x83 ; js 0x12c7db ; push qword ptr [rbx + rdi*2 - 0x7d] ; ret 0x3901
0x00000000000c8c14 : ror byte ptr [rax], 0x83 ; ret 0x4108
0x00000000000d5bec : ror byte ptr [rax], 0xc3 ; nop ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000a3934 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000003bc16 : ror byte ptr [rbp + 0x39], 0xc8 ; jb 0x3bbfd ; xor eax, eax ; ret
0x00000000000b7d64 : ror byte ptr [rbp + 0x480f0750], 1 ; ret 0xfd83
0x0000000000027fd5 : ror byte ptr [rbp + rcx*4 + 0x42], cl ; add ecx, dword ptr [rdi + rcx + 0x49] ; ret 0xc149
0x00000000000b9f85 : ror byte ptr [rbp + rcx*4 + 0x60], 1 ; dec dword ptr [rax - 0x77] ; ret 0x8d4a
0x0000000000124e45 : ror byte ptr [rbp - 0x75], 1 ; sbb dword ptr [rbp + 0x31], ecx ; ret 0x314d
0x0000000000167bee : ror byte ptr [rbp - 0x7b], cl ; rol byte ptr [rcx + 0xf], 0x95 ; ret 0xc031
0x0000000000160321 : ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x0000000000124c31 : ror byte ptr [rbx + rcx*4 + 0x5e], 1 ; adc byte ptr [rbp + 0x31], cl ; ret 0x314d
0x00000000000df2f8 : ror byte ptr [rbx + rcx*4 + 0x7d], cl ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x854d
0x000000000008aa12 : ror byte ptr [rbx], 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000ec0f3 : ror byte ptr [rcx + 0x39], 1 ; ret 0x2f75
0x00000000000eaf6a : ror byte ptr [rcx + 0x5d5b0453], 0x41 ; pop rsp ; ret
0x000000000008b514 : ror byte ptr [rcx + 0xf], 1 ; ret 0xed31
0x0000000000167992 : ror byte ptr [rcx + 9], cl ; fld dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x3145
0x0000000000124d82 : ror byte ptr [rcx + rcx*4 + 7], 1 ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000078092 : ror byte ptr [rcx + rcx*4 - 0x19], 0x4c ; lea ecx, dword ptr [rsp + 0x10] ; call rbx
0x0000000000077f9d : ror byte ptr [rcx + rcx*4 - 0x19], 0x4c ; lea ecx, dword ptr [rsp + 0x18] ; call rbx
0x0000000000031cc2 : ror byte ptr [rcx + rcx*4 - 0x19], 1 ; call qword ptr [rip + 0x18c2dc]
0x0000000000036878 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000008ad16 : ror byte ptr [rcx - 0x39], cl ; ret
0x0000000000124d29 : ror byte ptr [rcx - 0x3f], 0xe0 ; or byte ptr [rax - 0x77], cl ; ret 0x3149
0x000000000005df22 : ror byte ptr [rcx - 0x4e773], 1 ; inc dword ptr [rcx - 0x77] ; ret 0x2941
0x00000000001036a1 : ror byte ptr [rcx - 0x73], 0x40 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000046c1f : ror byte ptr [rcx - 0x76b7dbac], 1 ; ret 0xb3e9
0x00000000001693fe : ror byte ptr [rcx - 0x77], 1 ; ret 0xf49
0x00000000000338fa : ror byte ptr [rcx - 0x7d], 0x3c ; ret
0x000000000008ad58 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x000000000009f0e3 : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000026105 : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf0e9
0x000000000006316e : ror byte ptr [rcx - 0x7d], cl ; mov byte ptr [rcx], 0x85 ; fisttp dword ptr [rdi] ; lahf ; ret 0xd329
0x00000000000c023f : ror byte ptr [rcx - 0x7d], cl ; ret
0x00000000000fb8b0 : ror byte ptr [rcx], 0xd0 ; ret
0x00000000000e04f5 : ror byte ptr [rcx], 1 ; ret
0x00000000000eb6f0 : ror byte ptr [rdi], 0x44 ; ret 0x8b48
0x00000000000f9824 : ror byte ptr [rdi], 0x44 ; ret 0xfc3
0x00000000000f6cd1 : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000beb01 : ror byte ptr [rdi], 0x48 ; ret 0x8348
0x000000000003acfe : ror byte ptr [rdi], 0x48 ; ret 0xfc3
0x00000000000f260b : ror byte ptr [rdi], 0x49 ; ret 0x48c3
0x0000000000139fba : ror byte ptr [rdi], 0x84 ; add dword ptr [rcx], 0x89480000 ; ret
0x00000000001187db : ror byte ptr [rdi], 0x84 ; cld ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000711a2 : ror byte ptr [rdi], 0x84 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000079371 : ror byte ptr [rdi], 0x84 ; cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000245f5 : ror byte ptr [rdi], 0x84 ; cwde ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000002be0e : ror byte ptr [rdi], 0x84 ; imul edi, edi, 0x8941ffff ; ret 0x64e9
0x0000000000114545 : ror byte ptr [rdi], 0x84 ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000d720d : ror byte ptr [rdi], 0x84 ; lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f8ca0 : ror byte ptr [rdi], 0x84 ; mov dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000000d4aa9 : ror byte ptr [rdi], 0x84 ; out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007aaeb : ror byte ptr [rdi], 0x84 ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000702d1 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000068ded : ror byte ptr [rdi], 0x84 ; ret
0x00000000000e54af : ror byte ptr [rdi], 0x84 ; ret 1
0x000000000008370a : ror byte ptr [rdi], 0x84 ; ret 2
0x000000000011eb86 : ror byte ptr [rdi], 0x84 ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010b3fe : ror byte ptr [rdi], 0x84 ; wait ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000005e302 : ror byte ptr [rdi], 0x85 ; jmp rdx
0x000000000015a8b2 : ror byte ptr [rdi], 0x85 ; lahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6610
0x000000000009db61 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000039f7f : ror byte ptr [rdi], 0x85 ; ret
0x000000000009a4a7 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000b475d : ror byte ptr [rdi], 0x85 ; ret 4
0x0000000000056d86 : ror byte ptr [rdi], 0x8e ; ret
0x0000000000058390 : ror byte ptr [rdi], 0x8e ; xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x44c6
0x0000000000089075 : ror byte ptr [rdi], 0x92 ; ret 0xf083
0x00000000001125fe : ror byte ptr [rdi], 0x94 ; ret
0x00000000000edc9d : ror byte ptr [rdi], 0x94 ; ret 0x11e9
0x00000000000e33e2 : ror byte ptr [rdi], 0x94 ; ret 0x1589
0x00000000000b77cf : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x00000000000b7732 : ror byte ptr [rdi], 0x94 ; ret 0x3844
0x000000000012b797 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x0000000000066261 : ror byte ptr [rdi], 0x94 ; ret 0x941
0x000000000011b9c2 : ror byte ptr [rdi], 0x94 ; ret 0xa3c
0x000000000015aa10 : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000000ee093 : ror byte ptr [rdi], 0x95 ; ret 0xa6e9
0x0000000000078003 : ror byte ptr [rdi], 0x95 ; ret 0xd201
0x0000000000070db4 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000000c9f4d : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x0000000000086de3 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000006e6da : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x000000000007d9df : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000a3be9 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000000d82e9 : ror byte ptr [rdi], 1 ; mov dh, 0x14 ; adc dword ptr [rcx], eax ; ret 0x428d
0x0000000000035bf6 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x35bdf ; ret
0x00000000000d23cd : ror byte ptr [rdi], 1 ; ret 0xf039
0x0000000000032c90 : ror byte ptr [rdi], 1 ; test byte ptr [rsp + rax], bl ; add byte ptr [rax - 0x77], cl ; ret 0x448b
0x0000000000094766 : ror byte ptr [rdi], 1 ; test dword ptr [rax + rax - 0x8b70000], ecx ; ret 2
0x00000000000cdf13 : ror byte ptr [rdi], 1 ; xchg eax, esi ; ret 0x8341
0x00000000000a7261 : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret 0x3145
0x00000000000290f3 : ror byte ptr [rdi], cl ; mov byte ptr [rsi], al ; add eax, dword ptr [rax] ; add bh, dh ; ret 0xf800
0x0000000000025061 : ror byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; push rax ; call rbx
0x000000000005e12f : ror byte ptr [rdi], cl ; mov ds, word ptr [rax] ; adc al, byte ptr [rax] ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x000000000009466d : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000e33dd : ror byte ptr [rdi], cl ; mov esi, 0xfc085c0 ; xchg eax, esp ; ret 0x1589
0x000000000016a11c : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3145
0x000000000004a887 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000167abd : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd348
0x0000000000169e20 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd349
0x000000000008907e : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x0000000000076fe7 : ror dword ptr [rax + 0x29], cl ; ret
0x00000000000d8190 : ror dword ptr [rax + 0x39], 1 ; ret 0xda77
0x000000000012646f : ror dword ptr [rax + 0x63], 1 ; ret 0x5489
0x00000000000bdfa7 : ror dword ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000c9621 : ror dword ptr [rax + 0x63], cl ; ret
0x000000000015a8e0 : ror dword ptr [rax + 1], -0x30 ; sub rax, rdi ; ret
0x000000000015aa45 : ror dword ptr [rax + 1], -8 ; ret
0x000000000013339c : ror dword ptr [rax + 1], cl ; ret
0x000000000004a8d1 : ror dword ptr [rax - 0x39], 1 ; ret 0xffff
0x000000000016b4b8 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000016b49e : ror dword ptr [rax - 0x75], 1 ; je 0x16b4cf ; adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000dab0a : ror dword ptr [rax - 0x75], 4 ; ret
0x000000000007009e : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x0000000000125265 : ror dword ptr [rax - 0x76b704ad], cl ; ret 0xc148
0x00000000000f5501 : ror dword ptr [rax - 0x76b7fff4], cl ; ret
0x00000000000492f3 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x0000000000049223 : ror dword ptr [rax - 0x77], 0x3c ; ret 0x8348
0x00000000000f96dd : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000000565d4 : ror dword ptr [rax - 0x77], 1 ; ret 0xb3e9
0x00000000000d31a2 : ror dword ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; out dx, eax ; call r12
0x0000000000109634 : ror dword ptr [rax - 0x77], cl ; fsubp st(0) ; ret
0x0000000000074f3d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x74f36 ; ret
0x000000000007e515 : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7e50e ; ret
0x000000000003ac1e : ror dword ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000cb208 : ror dword ptr [rax - 0x7d], -0x40 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000bdae7 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000015b0b3 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c20
0x000000000015b0d3 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c40
0x000000000015b0f3 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c60
0x00000000000c8c11 : ror dword ptr [rax - 0x7d], 1 ; ror byte ptr [rax], 0x83 ; ret 0x4108
0x000000000004e513 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000004ebfa : ror dword ptr [rax - 0x7d], cl ; ret 0xe920
0x00000000000da7d6 : ror dword ptr [rcx + 0x41d231c7], 0x39 ; ret 0x57e
0x000000000007d95b : ror dword ptr [rcx + 0x58d4807], 1 ; ret
0x0000000000122d8d : ror dword ptr [rcx + 0x63], 0x14 ; mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x00000000000908b0 : ror dword ptr [rcx + 0x63], 0xc ; mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x00000000000f7a5e : ror dword ptr [rcx + rcx*4 + 0x48], 1 ; or bl, ch ; ret 0x1f0f
0x00000000000dc426 : ror dword ptr [rcx - 0x75], 0x4b ; or byte ptr [rax + 0x63], cl ; ret 0x3c80
0x0000000000055feb : ror dword ptr [rcx - 0x77], 0x14 ; ret
0x000000000016513b : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000154f94 : ror dword ptr [rdi - 0x73], 0x14 ; or bh, byte ptr [rsi] ; jmp r10
0x00000000000944f5 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000000a43bb : ror dword ptr [rdi], -0x51 ; ret 0xfae9
0x00000000001626c8 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000162dd4 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000162ba6 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x0000000000163cd0 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000162b26 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000162e64 : ror dword ptr [rdi], -0x7b ; je 0x162e74 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016295b : ror dword ptr [rdi], -0x7b ; jno 0x162970 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000162a23 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001626a0 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b6011 : ror dword ptr [rdi], 0x4f ; ret 0x66c3
0x00000000000905bb : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000011097b : ror dword ptr [rdx], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000110a38 : ror dword ptr [rdx], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000008ac29 : ror dword ptr [rsi + 0xf480001], cl ; ret 0x66c3
0x000000000012646e : ror qword ptr [r8 + 0x63], 1 ; ret 0x5489
0x0000000000074f3c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x74f37 ; ret
0x000000000007e514 : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x7e50f ; ret
0x00000000000f468e : sahf ; add al, 0 ; add byte ptr [rax - 0x6bf0df07], al ; ret 0xf980
0x000000000015cd2e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000bad7c : sahf ; ret 0x2941
0x00000000000da6af : sahf ; ret 0xc031
0x00000000000b761a : sahf ; ret 0xc221
0x00000000000b600c : sal bh, 0xd8 ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x000000000016030e : sal bh, 0xd8 ; or eax, 1 ; vzeroupper ; ret
0x00000000000ee427 : sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e6dd : sal bh, 0xd8 ; pop rbx ; ret
0x000000000006e69f : sal bh, 0xd8 ; ret
0x0000000000092277 : sal bh, 1 ; ret 0x8000
0x0000000000092137 : sal bh, 1 ; ret 0xc000
0x0000000000091ff7 : sal bh, 1 ; ret 0xe000
0x0000000000091eb7 : sal bh, 1 ; ret 0xf000
0x0000000000091d77 : sal bh, 1 ; ret 0xf800
0x0000000000091c37 : sal bh, 1 ; ret 0xfc00
0x0000000000091af7 : sal bh, 1 ; ret 0xfe00
0x00000000000919b7 : sal bh, 1 ; ret 0xff00
0x0000000000091877 : sal bh, 1 ; ret 0xff80
0x0000000000091737 : sal bh, 1 ; ret 0xffc0
0x00000000000915f7 : sal bh, 1 ; ret 0xffe0
0x00000000000914b7 : sal bh, 1 ; ret 0xfff0
0x0000000000091377 : sal bh, 1 ; ret 0xfff8
0x0000000000091237 : sal bh, 1 ; ret 0xfffc
0x00000000000910f7 : sal bh, 1 ; ret 0xfffe
0x00000000001699b6 : sal bh, cl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x000000000012c662 : sal byte ptr [rax + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000890de : sal byte ptr [rax + rcx + 0x48], 0x89 ; fimul dword ptr [rax + 1] ; ret 0x772
0x000000000011f405 : sal byte ptr [rax + rdi*2 + 0x48], 0x89 ; ret
0x00000000000f56d5 : sal byte ptr [rax + rdx + 0x48], 0x83 ; ret 0x4808
0x000000000008c60d : sal byte ptr [rax + rsi*2 + 0x48], 3 ; add byte ptr [r8 - 0x77], r9b ; ret 0x1aeb
0x00000000000a4bbb : sal byte ptr [rbp + 0x11], 0x48 ; mov eax, edi ; ret
0x0000000000034e5c : sal byte ptr [rbp + 0x11], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000f312b : sal byte ptr [rbp + 0x11], 1 ; add rsp, 0x28 ; ret
0x00000000000fbe11 : sal byte ptr [rbp + 0x14], 0xb8 ; call 0xf0fbe22
0x0000000000118c5c : sal byte ptr [rbp + 0x19], 0x44 ; mov eax, eax ; ret
0x0000000000118dbf : sal byte ptr [rbp + 0x1e], 0x83 ; ret 0x8401
0x000000000015fa82 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x0000000000122880 : sal byte ptr [rbp + 0x2d], 0x81 ; ret
0x0000000000137f46 : sal byte ptr [rbp + 0x57], 0x89 ; ret
0x0000000000030162 : sal byte ptr [rbp + 0xb], cl ; ret
0x0000000000118d4f : sal byte ptr [rbp + 0xe], 0x83 ; ret 0x3901
0x00000000000811da : sal byte ptr [rbp + 1], 1 ; ret
0x000000000011d0e9 : sal byte ptr [rbp + 4], 0x5b ; ret
0x00000000000a3ea6 : sal byte ptr [rbp + 4], cl ; mov rax, rdi ; ret
0x000000000011a85e : sal byte ptr [rbp + 5], 1 ; add rsp, 0x18 ; ret
0x00000000000b6feb : sal byte ptr [rbp + 5], 1 ; add rsp, 0x28 ; ret
0x00000000000f3caa : sal byte ptr [rbp + 5], 1 ; add rsp, 0x58 ; ret
0x0000000000130188 : sal byte ptr [rbp + 6], 1 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007d9c6 : sal byte ptr [rbp + 7], cl ; xor eax, eax ; ret
0x0000000000130265 : sal byte ptr [rbp + 8], cl ; mov eax, 1 ; ret
0x000000000006dfb4 : sal byte ptr [rbp + 9], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x00000000000242ad : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x0000000000087376 : sal byte ptr [rbp + rax + 0x48], cl ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000001232b3 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebx ; call rdx
0x000000000015aa40 : sal byte ptr [rbp + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x00000000000f4bb9 : sal byte ptr [rbp + rdx + 0x48], 0x39 ; ret
0x00000000001054c7 : sal byte ptr [rbp + rdx + 0x48], 0x83 ; ret
0x000000000010593e : sal byte ptr [rbp + rdx*8 + 0x4d], 0x8b ; ja 0x105985 ; jmp 0x105912
0x000000000009065d : sal byte ptr [rbp - 0x10], cl ; ret
0x000000000004853e : sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x00000000000a3650 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000074f40 : sal byte ptr [rbp - 0x13], cl ; ret
0x0000000000090582 : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000008ded2 : sal byte ptr [rbp - 0x16], cl ; or byte ptr [rdi], sil ; ret
0x0000000000036354 : sal byte ptr [rbp - 0x17], 0x3c ; pop rdi ; jne 0x3632c ; mov rdx, r8 ; jmp 0x36392
0x000000000012d336 : sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000b5ff6 : sal byte ptr [rbp - 0x19], 1 ; xor eax, eax ; ret
0x00000000000d31d9 : sal byte ptr [rbp - 0x1c], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000160bba : sal byte ptr [rbp - 0x1d], 0x29 ; enter -0x73b, 0x77 ; ret
0x000000000009259b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000015af3c : sal byte ptr [rbp - 0x1f], 0x29 ; enter -0x73b, 0x77 ; ret
0x000000000016108f : sal byte ptr [rbp - 0x22], 0x29 ; enter -0x73b, 0x77 ; ret
0x000000000015b411 : sal byte ptr [rbp - 0x24], 0x29 ; enter -0x73b, 0x77 ; ret
0x0000000000035bfb : sal byte ptr [rbp - 0x27], cl ; ret
0x00000000000f409d : sal byte ptr [rbp - 0x28], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000f410e : sal byte ptr [rbp - 0x29], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000118433 : sal byte ptr [rbp - 0x2e], 1 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000015b80d : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x00000000000caa54 : sal byte ptr [rbp - 0x30], cl ; xor eax, eax ; ret
0x00000000000f4203 : sal byte ptr [rbp - 0x34], cl ; xor eax, eax ; pop rbx ; ret
0x0000000000124520 : sal byte ptr [rbp - 0x35], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000a4afa : sal byte ptr [rbp - 0x35], 0xc3 ; xor eax, eax ; ret
0x000000000015b805 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x00000000000f0b90 : sal byte ptr [rbp - 0x43], 0x44 ; mov edi, esp ; call 0xece88
0x000000000015f30d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x000000000010be90 : sal byte ptr [rbp - 0x67], cl ; mov rax, rdi ; ret
0x000000000015f305 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000010a896 : sal byte ptr [rbp - 0x6b], 0x48 ; mov eax, edi ; ret
0x0000000000088aca : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000a5feb : sal byte ptr [rbp - 0xe], cl ; ret
0x0000000000109130 : sal byte ptr [rbp - 0xf], 0x5a ; pop r10 ; ret
0x00000000000802d0 : sal byte ptr [rbx + 0x25], 1 ; movzx eax, byte ptr [rax] ; ret
0x0000000000026832 : sal byte ptr [rbx + rbx*2 + 0x48], 0x89 ; ret
0x00000000000e0772 : sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x00000000000f5708 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x0000000000122072 : sal byte ptr [rbx + rdi + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000906f8 : sal byte ptr [rbx + rdx + 0x41], 0x39 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x00000000000878cc : sal byte ptr [rcx + rax*2 + 0x48], 0x89 ; out dx, al ; mov rdi, rbx ; call rax
0x00000000000f9664 : sal byte ptr [rcx + rdi + 0x48], 0x39 ; ret
0x0000000000099bec : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000288ca : sal byte ptr [rcx + rdx*4 + 0x41], 0x89 ; ret 0x44e9
0x00000000000c9204 : sal byte ptr [rcx + rsi*2 + 0x48], 0x83 ; ret 0xc60f
0x00000000000d3e53 : sal byte ptr [rcx], 0xc0 ; movaps xmmword ptr [rdi], xmm0 ; ret
0x00000000000d3db3 : sal byte ptr [rcx], 0xc0 ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000108b5e : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000ebc38 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xdf ; call rax
0x000000000012bc22 : sal byte ptr [rdi + 0x48], 0x89 ; ret
0x0000000000122c86 : sal byte ptr [rdi + rax + 0x31], 0xc0 ; ret
0x00000000000c6140 : sal byte ptr [rdi + rax - 0x3a], 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011ceae : sal byte ptr [rdi + rbx + 0x48], 0x83 ; ret
0x00000000000c7dad : sal byte ptr [rdi + rcx + 0x48], 0x83 ; ret
0x0000000000099dbb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000131c6b : sal byte ptr [rdx + rcx + 0x31], 0xc0 ; ret
0x000000000009a133 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x000000000009e943 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000000d11a3 : sal byte ptr [rdx + rdx*8 + 0x5b], 0x5d ; pop r12 ; ret
0x000000000009466b : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000108a74 : sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x0000000000127e9e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x127ebc ; call rax
0x000000000012d3be : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x12d3dc ; call rax
0x000000000012da77 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x12da95 ; call rax
0x0000000000129dd2 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x129e48 ; call rax
0x000000000012a882 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x12a8e8 ; call rax
0x00000000000c6207 : sal byte ptr [rsi + rax*4 - 0x3a], 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000102e51 : sal byte ptr [rsi + rcx + 0x48], 0x89 ; fimul dword ptr [rax - 0x7d] ; ret
0x0000000000099b8f : sal byte ptr [rsi + rdi*2 + 0x48], cl ; bsf eax, edx ; ret
0x0000000000027151 : sal byte ptr [rsp + rbp + 0x48], 0x83 ; ret
0x00000000000c332b : sal byte ptr [rsp + rbp + 0x48], 0x89 ; ret
0x00000000000905b2 : sal byte ptr [rsp + rbp*2 + 0x44], 0x38 ; ret 0x4153
0x00000000001255f1 : sal byte ptr [rsp + rcx + 0x48], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fdbb1 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x000000000011ca55 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret 0x1be
0x0000000000136789 : sal byte ptr [rsp + rdx*2 + 0x48], 0x89 ; ret
0x000000000010792d : sal dh, 0x43 ; sbb al, 0x20 ; je 0x107948 ; pop rbx ; ret
0x000000000011dbcf : sal dh, 1 ; ret
0x000000000011d648 : sal dword ptr [rbp - 0x3d], 1 ; nop dword ptr [rax] ; ret
0x000000000012fc28 : sal dword ptr [rbx + 5], 1 ; xor eax, eax ; ret
0x00000000000a4ae2 : sal dword ptr [rbx + rcx + 0x48], -0x7d ; ret 0x8b04
0x00000000000904ca : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x000000000003f936 : sal dword ptr [rcx], 1 ; shr cl, cl ; ret 0xffdd
0x0000000000090771 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0x9076f ; ret
0x00000000000a3b47 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000070903 : salc ; adc al, 0 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000080a7a : salc ; adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000080aa4 : salc ; adc eax, dword ptr [rax] ; ret
0x0000000000165176 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000010bf66 : salc ; add eax, 0x450f4800 ; ret 0x90c3
0x0000000000127e3f : salc ; add rdi, 0x10 ; jmp rcx
0x000000000013ce9a : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000107929 : salc ; call rax
0x000000000016478e : salc ; clc ; ret
0x00000000000fe4e2 : salc ; cld ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000034e45 : salc ; mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000135936 : salc ; or byte ptr [rax], al ; call 0xf1be5
0x0000000000119217 : salc ; ret
0x000000000004a20d : sar bh, 0xff ; ret
0x000000000013483b : sar bl, cl ; inc dword ptr [rbx - 0x7bf00008] ; ret 1
0x00000000000bf056 : sar byte ptr [rax + 0xd], 0x8b ; jl 0xbf089 ; xor byte ptr [rcx - 0x77], al ; ret 0xc781
0x000000000011920f : sar byte ptr [rax + 0xe], cl ; mov rax, rdx ; movsxd rdx, esi ; ret
0x0000000000134a36 : sar byte ptr [rax + 7], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fbb17 : sar byte ptr [rbx + rdx + 0x74], 1 ; ret
0x0000000000119291 : sar byte ptr [rdx + 0x7fffffff], 1 ; cmovs eax, edx ; ret
0x000000000002d3d6 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x000000000008cb35 : sar byte ptr [rdx], cl ; cmove rax, rdx ; ret
0x0000000000087bdb : sar byte ptr [rsi + 0x2a], 0x85 ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000000bd362 : sar byte ptr [rsi - 0x35], 0xf6 ; ret
0x000000000013d3da : sar byte ptr [rsi], 0x41 ; jmp rcx
0x00000000000248a1 : sar byte ptr [rsi], 1 ; jmp rax
0x00000000000abb92 : sar cl, cl ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000eef96 : sar dh, 0xff ; push rsi ; ret
0x0000000000064a8e : sar dl, 0xff ; dec dword ptr [rax - 0x75] ; add ch, cl ; ret
0x00000000000f83fa : sar dl, cl ; dec dword ptr [rax + 0x39] ; ret
0x0000000000164007 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x164012 ; ret
0x00000000000fd6d9 : sar dword ptr [rdx], 1 ; cmovb rax, rdx ; ret
0x000000000015fe6d : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x000000000003683c : sar eax, 0x10 ; ret
0x0000000000036f2d : sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x00000000000f25dc : sar eax, 0x1f ; pop rbx ; ret
0x0000000000134408 : sar eax, 0x1f ; ret
0x00000000000367ec : sar eax, 0x1f ; sub ecx, edx ; not eax ; and eax, ecx ; ret
0x0000000000037279 : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000036b5c : sar eax, 0x3f ; not eax ; and eax, edx ; ret
0x0000000000075b0c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000078696 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000007623d : sar eax, 2 ; ret
0x000000000010d331 : sar eax, 6 ; ret
0x00000000000cfc0d : sar edi, cl ; dec dword ptr [rax + 0x39] ; ret
0x000000000003ac38 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000003ac4b : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000075bb6 : sar edx, 2 ; sub eax, edx ; ret
0x0000000000094818 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000164c67 : sar esi, 1 ; jg 0x164c97 ; vzeroupper ; ret
0x0000000000164df2 : sar esi, 1 ; jg 0x164e22 ; vzeroupper ; ret
0x0000000000075b0b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000037278 : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000036b5b : sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x000000000007623c : sar rax, 2 ; ret
0x000000000010d330 : sar rax, 6 ; ret
0x0000000000075bb5 : sar rdx, 2 ; sub eax, edx ; ret
0x0000000000094817 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000053d5b : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000000eba8c : sbb al, 0 ; add byte ptr [rax], al ; syscall ; neg eax ; ret
0x0000000000107930 : sbb al, 0x20 ; je 0x107945 ; pop rbx ; ret
0x000000000010792f : sbb al, 0x20 ; je 0x107946 ; pop rbx ; ret
0x00000000000b809f : sbb al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b484 : sbb al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x000000000012b8bf : sbb al, 0x48 ; add esp, 0x88 ; ret
0x00000000000d12b3 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000129e84 : sbb al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm2 ; ret
0x00000000000224da : sbb al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000016c54f : sbb al, byte ptr [rip + 0x1f0f6600] ; add byte ptr [rax], r8b ; ret
0x000000000013024b : sbb al, ch ; call qword ptr [rsi]
0x00000000000fbc5b : sbb al, ch ; call rsp
0x00000000000b9717 : sbb al, ch ; ret
0x0000000000083282 : sbb bh, byte ptr [rax + 0x39480013] ; ret
0x00000000000d12a3 : sbb bh, byte ptr [rax + 2] ; ret
0x00000000000b114d : sbb bh, byte ptr [rcx] ; ret
0x0000000000125daa : sbb byte ptr [r15], cl ; xchg eax, edx ; ret 0x8b48
0x0000000000035e20 : sbb byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000137453 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000012fb85 : sbb byte ptr [r8 + 1], r15b ; ret
0x0000000000076eba : sbb byte ptr [r8 + 1], r9b ; ret 0x148
0x0000000000107842 : sbb byte ptr [r8 - 0x75], r9b ; je 0x107875 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000bca26 : sbb byte ptr [r8 - 0x77], r9b ; int 0x80
0x00000000000c3327 : sbb byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rbp + 0x48], 0x89 ; ret
0x00000000000c5332 : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000007bdb7 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc748
0x00000000000a3134 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a3156 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a3194 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000080f01 : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000004eb70 : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000137454 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000000be97a : sbb byte ptr [rax + 0x63], cl ; ret 0x8944
0x000000000012fb20 : sbb byte ptr [rax + 1], bh ; mov dword ptr [rdi + 0x28], edx ; ret
0x000000000012fb86 : sbb byte ptr [rax + 1], bh ; ret
0x0000000000076ebb : sbb byte ptr [rax + 1], cl ; ret 0x148
0x000000000004276a : sbb byte ptr [rax - 0x39], cl ; ret
0x000000000005a74e : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000082ca2 : sbb byte ptr [rax - 0x73], cl ; and byte ptr [r9 + 0x39], cl ; ret 0x850f
0x00000000000eb1e6 : sbb byte ptr [rax - 0x73], cl ; lodsb al, byte ptr [rsi] ; ret 0x8207
0x00000000000b765d : sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000107843 : sbb byte ptr [rax - 0x75], cl ; je 0x107874 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000122331 : sbb byte ptr [rax - 0x75], cl ; je 0x122362 ; or byte ptr [rcx - 0x77], cl ; ret 0x8948
0x0000000000137f4f : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x00000000000bd3cf : sbb byte ptr [rax - 0x76a7dbbc], cl ; ret
0x0000000000072c8a : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000bca27 : sbb byte ptr [rax - 0x77], cl ; int 0x80
0x00000000001214bb : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000008364b : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov qword ptr [rsp + 8], r11 ; call qword ptr [rax]
0x000000000007e765 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000001068dd : sbb byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000123733 : sbb byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000b8a56 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000000242aa : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000000c3328 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rbp + 0x48], 0x89 ; ret
0x0000000000083894 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000c5333 : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000008256f : sbb byte ptr [rax - 9], cl ; fimul dword ptr [rax + 0x21] ; ret 0x8948
0x0000000000035eb9 : sbb byte ptr [rax], 0 ; xor eax, eax ; pop rbx ; ret
0x0000000000059973 : sbb byte ptr [rax], al ; add al, 0 ; add al, ch ; ret
0x000000000007bdb8 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc748
0x000000000003aee1 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000109785 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall ; ret
0x00000000000bb957 : sbb byte ptr [rax], al ; add dh, dh ; ret
0x000000000003b889 : sbb byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000003198c : sbb byte ptr [rax], al ; jne 0x319a4 ; jmp 0x319be
0x0000000000032a34 : sbb byte ptr [rax], al ; jne 0x32a4c ; jmp 0x32a66
0x0000000000038aa7 : sbb byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000300d5 : sbb byte ptr [rax], al ; mov qword ptr [rax], rdx ; ret
0x0000000000035113 : sbb byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x0000000000038a48 : sbb byte ptr [rax], al ; ret
0x000000000007a45a : sbb byte ptr [rax], al ; setne al ; ret
0x0000000000035eba : sbb byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000a3135 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a3157 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a3195 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000006de5c : sbb byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000b211c : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r12
0x0000000000122398 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x40 ; call qword ptr [rax]
0x0000000000129210 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ec259 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000079ba1 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004df8d : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000079c46 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000038b03 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000007fefb : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000000fe81a : sbb byte ptr [rbx - 0x6f3cff00], al ; ret
0x000000000004a471 : sbb byte ptr [rbx - 0x7ab70003], al ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000104a79 : sbb byte ptr [rbx], cl ; pop rsi ; sbb dh, dh ; ret
0x000000000008c4b1 : sbb byte ptr [rbx], dl ; add byte ptr [rcx - 0x77], cl ; ret 0xcb8
0x0000000000118df8 : sbb byte ptr [rcx + 0x11894dd0], cl ; ret
0x000000000016b2b2 : sbb byte ptr [rcx + 0x21], cl ; ret
0x00000000000821b6 : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000007aaa8 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d6698 : sbb byte ptr [rcx - 0x3fcec7ba], cl ; ret
0x00000000000c471e : sbb byte ptr [rcx - 0x77], al ; pop rsp ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000104cd0 : sbb byte ptr [rcx - 0x77], al ; ret
0x0000000000125262 : sbb byte ptr [rcx - 0x77], al ; ror dword ptr [rax - 0x76b704ad], cl ; ret 0xc148
0x0000000000059856 : sbb byte ptr [rcx - 0x77], cl ; ret 0x3948
0x0000000000104ccf : sbb byte ptr [rcx - 0x77], r8b ; ret
0x00000000000a474a : sbb byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000129e5b : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdi + 8], eax ; ret
0x0000000000038279 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000012fef1 : sbb byte ptr [rcx], bh ; ja 0x12ff1e ; jbe 0x12ff09 ; add dword ptr [rdi + 0x28], esi ; ret
0x00000000000b1057 : sbb byte ptr [rcx], bh ; ret
0x0000000000086d4a : sbb byte ptr [rcx], cl ; ret 0x70e9
0x000000000006e69c : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000035e21 : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000bd2d0 : sbb byte ptr [rdi], cl ; test bh, bh ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000e72cb : sbb byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000039543 : sbb byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8548
0x0000000000125dab : sbb byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8b48
0x00000000000ce4b5 : sbb byte ptr [rdi], cl ; xchg edi, ebx ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000bbf5d : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007a124 : sbb byte ptr [rip - 0x38b7ffec], bh ; ret 0xffff
0x00000000000fe802 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x00000000000fe801 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000047ac4 : sbb cl, al ; call 0xffffffffc28dbbf0
0x00000000000d21ce : sbb cl, byte ptr [rax + 0x39] ; ret 0xdb77
0x0000000000024c70 : sbb cl, byte ptr [rax - 0x77] ; ret 0x8348
0x00000000000597dd : sbb cl, byte ptr [rax - 0x7d] ; ret 0x8b08
0x00000000000d57e5 : sbb cl, byte ptr [rbp + 0x63] ; ret 0x8b47
0x000000000012e5c8 : sbb cl, byte ptr [rcx + 0x430f41c8] ; ret 0xf801
0x0000000000125052 : sbb cl, byte ptr [rcx + 9] ; ret
0x0000000000089c4f : sbb cl, byte ptr [rcx + rcx*4 - 0x30] ; pop rbx ; ret
0x0000000000118b63 : sbb cl, byte ptr [rcx - 0x7d] ; ret 0x4502
0x000000000009f95f : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x0000000000155a6d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000157bdd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015565d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000155169 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000155979 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015d0ca : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000015c8ea : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000015ccda : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015c4fa : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015873d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000157f1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00000000001553ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001576fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000015572d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000155a49 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015c699 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000155b19 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015825d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000157a3d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015721d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000001583fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00000000001558cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001550bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00000000001554bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000015cb8a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015c3aa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015d4ba : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015599d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000015518d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000015755d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015522f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015558d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000157693 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000158393 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000157eb3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015ca8b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015d3bb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001557fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001586d3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001579d3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001574f3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001581f3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000015cbdb : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015c3fb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000155253 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000012683a : sbb dh, byte ptr [rbp + 9] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000104a7c : sbb dh, dh ; ret
0x0000000000106014 : sbb dh, dh ; ret 0x7508
0x000000000010c854 : sbb dh, dh ; ret 0x7520
0x0000000000158e98 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d11f7 : sbb dword ptr [rax + 1], edi ; ret
0x0000000000084c03 : sbb dword ptr [rax - 0x77], ecx ; ret 0x8348
0x0000000000134254 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x00000000001326fa : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000158e21 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000158e99 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000005a1c5 : sbb dword ptr [rax], eax ; add dh, dh ; ret 0xf40
0x000000000002f2b9 : sbb dword ptr [rax], eax ; mov byte ptr [rip + 0x19077c], dl ; ret
0x000000000002d232 : sbb dword ptr [rax], eax ; nop dword ptr [rax] ; ret
0x0000000000023ac4 : sbb dword ptr [rax], eax ; ret
0x0000000000124e48 : sbb dword ptr [rbp + 0x31], ecx ; ret 0x314d
0x00000000000dfd2e : sbb dword ptr [rbx - 0x1f3efe20], eax ; add al, 0x89 ; ret 0xb60f
0x0000000000118c5e : sbb dword ptr [rcx + rcx*4 - 0x40], eax ; ret
0x000000000011ac86 : sbb dword ptr [rcx - 0x7d], eax ; ret 0x4101
0x00000000001326f9 : sbb dword ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a46f6 : sbb dword ptr [rcx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000a10be : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000042a03 : sbb dword ptr [rdx + 0x13], edi ; add byte ptr [rax + 0x63], cl ; ret 0xc748
0x000000000016c5af : sbb dword ptr [rip + 0x1f0f6600], eax ; add byte ptr [rax], r8b ; ret
0x000000000002ca88 : sbb dword ptr cs:[rax], eax ; ret
0x00000000001536dc : sbb eax, -1 ; ret
0x00000000000ee3d9 : sbb eax, 0 ; ret
0x00000000000b995c : sbb eax, 0x3948fffc ; ret
0x000000000009f9e9 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x00000000000a117d : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x0000000000072a02 : sbb eax, 0x5bd88948 ; pop rbp ; pop r12 ; ret
0x00000000000d6652 : sbb eax, 0x5c415d5b ; ret
0x000000000004e4f1 : sbb eax, 0x83480000 ; ret 0x4817
0x000000000005d35f : sbb eax, 0x89000010 ; ret 0xc083
0x00000000000cd906 : sbb eax, 0x89410003 ; ret 0x3b4c
0x00000000000cd8a3 : sbb eax, 0x89410003 ; ret 0x8d41
0x00000000000fe35a : sbb eax, 0xbfe61 ; pop rbx ; ret
0x00000000000fe340 : sbb eax, 0xbfe7b ; pop rbx ; ret
0x0000000000158c41 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000158cb9 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d5be6 : sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x000000000004889a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000015be47 : sbb eax, eax ; or eax, 1 ; ret
0x000000000011836c : sbb eax, eax ; ret
0x0000000000166b45 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000000c8e12 : sbb ecx, dword ptr [rax - 0x75] ; pop rbp ; clc ; leave ; ret
0x0000000000122077 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001251a9 : sbb ecx, dword ptr [rcx + 9] ; ret
0x00000000000377a1 : sbb ecx, dword ptr [rsi + 0x15] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xe867
0x00000000000c9649 : sbb edi, dword ptr [rcx] ; ret
0x0000000000106429 : sbb edx, -1 ; dec dword ptr [rcx] ; ret
0x000000000008aa61 : sbb esi, ecx ; or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000040001 : sbb esp, dword ptr [rbx + rdx + 0xc8b4800] ; ret 0x8b49
0x00000000000a6d11 : sbb esp, dword ptr [rcx] ; cli ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001536db : sbb rax, -1 ; ret
0x0000000000156bc2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015d11e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x00000000000d2abe : scasb al, byte ptr [rdi] ; jmp 0xd2ac5
0x00000000000c8907 : scasb al, byte ptr [rdi] ; out dx, al ; jmp rdi
0x000000000012c50e : scasb al, byte ptr [rdi] ; push 0x48640009 ; mov dword ptr [rax], edx ; ret
0x0000000000038a56 : scasb al, byte ptr [rdi] ; push rbp ; sbb byte ptr [rax], al ; ret
0x0000000000035f2e : scasb al, byte ptr [rdi] ; ret
0x0000000000160d3a : scasb al, byte ptr [rdi] ; vzeroupper ; ret
0x0000000000085860 : scasd eax, dword ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000015d21d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000080ad9 : scasd eax, dword ptr [rdi] ; cld ; adc eax, dword ptr [rax] ; ret
0x00000000000390b2 : scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000000821b1 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000107745 : scasd eax, dword ptr [rdi] ; ret 0xc083
0x00000000001671e7 : scasd eax, dword ptr [rdi] ; ret 0xc148
0x0000000000035e23 : scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000a43ac : scasd eax, dword ptr [rdi] ; ret 0xda89
0x00000000000a43bd : scasd eax, dword ptr [rdi] ; ret 0xfae9
0x00000000000a43ba : scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], -0x51 ; ret 0xfae9
0x00000000000fe899 : seta al ; movzx eax, al ; neg eax ; ret
0x00000000000ee3d6 : seta al ; sbb eax, 0 ; ret
0x0000000000108b64 : setae al ; ret
0x00000000000c2ed4 : setbe al ; movzx eax, al ; ret
0x00000000000ff220 : setbe al ; ret
0x00000000000ba497 : sete al ; add eax, 0x16d ; ret
0x00000000001205ac : sete al ; add rsp, 8 ; ret
0x000000000012ecf8 : sete al ; movzx eax, al ; ret
0x0000000000124505 : sete al ; pop rbx ; movzx eax, al ; ret
0x0000000000030679 : sete al ; ret
0x000000000003797a : sete dh ; xor eax, eax ; mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x000000000011d669 : sete dl ; and eax, edx ; ret
0x00000000000cac56 : sete dl ; jmp 0xcac1a
0x00000000000e0c26 : sete dl ; jmp 0xe0bea
0x00000000000eafbf : setl al ; ret
0x00000000000e3c18 : setne al ; lea eax, dword ptr [rax + rax*8 + 5] ; ret
0x000000000006e6d8 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x000000000007d9dd : setne al ; movzx eax, al ; neg eax ; ret
0x000000000003881c : setne al ; movzx eax, al ; ret
0x0000000000075ddd : setne al ; neg eax ; ret
0x000000000007a45c : setne al ; ret
0x000000000009086d : setne bh ; test r9b, dil ; jne 0x90858 ; ret
0x0000000000090706 : setne cl ; test r10b, r9b ; jne 0x906f0 ; ret
0x000000000009086c : setne dil ; test r9b, dil ; jne 0x90859 ; ret
0x00000000000a7213 : setne dl ; jmp 0xa7229
0x00000000000a9a52 : setne dl ; jmp 0xa9a69
0x00000000000ac093 : setne dl ; jmp 0xac0a9
0x00000000000b2c72 : setne dl ; jmp 0xb2c89
0x0000000000090705 : setne r9b ; test r10b, r9b ; jne 0x906f1 ; ret
0x000000000015bbc4 : shl byte ptr [rax + 0x48], 1 ; clc ; ret
0x000000000015b7ab : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000015b76b : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x00000000000bd168 : shl byte ptr [rcx + rax*2 - 0x77], 0x45 ; adc al, 0xe9 ; ret 0xffe7
0x00000000000a356f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000036e38 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; mov dword ptr [rdi], ecx ; ret
0x0000000000036c1b : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x0000000000165137 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000995d5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000016305b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000163072 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000003733c : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; and al, 0xc8 ; ret
0x0000000000099986 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000037782 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000099997 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000944b8 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000162f51 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000f6de0 : shl byte ptr [rsi + 0xf], cl ; ret 0x67a
0x00000000001699b8 : shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x000000000008a72b : shl dword ptr [rdi + 0xf48000b], 1 ; ret 0xfc3
0x0000000000162fd6 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a33cf : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x0000000000099982 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000016308d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000163076 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016305f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000161b1b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000162ff1 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000093edc : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00000000000946d8 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x0000000000162eb1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000fb8ff : shl eax, 0x20 ; and rax, rdi ; or rax, rsi ; ret
0x000000000003877f : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000048e1c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000048d9b : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048d6a : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000003ac8a : shl edx, 0x20 ; or rax, rdx ; ret
0x0000000000104962 : shl edx, 2 ; jmp 0x10492e
0x0000000000119023 : shl esi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000048e1b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000048d9a : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048d69 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000003877e : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000003ac89 : shl rdx, 0x20 ; or rax, rdx ; ret
0x0000000000104961 : shl rdx, 2 ; jmp 0x10492f
0x0000000000119022 : shl rsi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000001357aa : shr al, 0x10 ; ret 0xfffb
0x00000000000ed8e5 : shr al, 0x25 ; ret 0xfff4
0x00000000001326f7 : shr al, 0x83 ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000035f2c : shr al, 0xae ; ret
0x0000000000039d15 : shr al, 0xb5 ; test esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000001306b4 : shr al, 0xc6 ; cmp dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f91e5 : shr al, 5 ; xchg eax, edx ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d608d : shr al, cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000106427 : shr al, cl ; sbb edx, -1 ; dec dword ptr [rcx] ; ret
0x0000000000108ada : shr ax, 0xe ; and eax, 1 ; ret
0x00000000000886c5 : shr bl, 1 ; str word ptr [rax - 0x77] ; ret 0xc031
0x0000000000078011 : shr bl, cl ; ret 0xe867
0x000000000009259f : shr byte ptr [rcx], 0xc8 ; ret
0x00000000000f6d30 : shr byte ptr [rcx], 1 ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000002c790 : shr byte ptr [rcx], cl ; ret
0x000000000009481c : shr byte ptr [rcx], cl ; rol bl, 1 ; xor eax, eax ; ret
0x00000000000a55fa : shr byte ptr [rdx + 1], cl ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000003f938 : shr cl, cl ; ret 0xffdd
0x0000000000167c00 : shr cl, cl ; ret 0xfff7
0x00000000000b717c : shr dword ptr [rcx], cl ; ret
0x000000000010d51a : shr eax, 0x18 ; ret
0x000000000003684f : shr eax, 0x1f ; ret
0x0000000000163f1c : shr eax, 0x20 ; cmp ecx, eax ; jne 0x163f2f ; xor eax, eax ; ret
0x000000000003baf5 : shr eax, 0x20 ; mov word ptr [rdi + 4], ax ; xor eax, eax ; ret
0x00000000001671ea : shr eax, 0x38 ; ret
0x0000000000036b8c : shr eax, 0x3f ; ret
0x00000000000fb8ac : shr eax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000a406b : shr eax, 0xe ; and eax, 0x3fc00 ; ret
0x0000000000108adb : shr eax, 0xe ; and eax, 1 ; ret
0x000000000008ca22 : shr eax, 1 ; push -0x7600000a ; ret
0x00000000000b65ab : shr eax, 2 ; ret
0x0000000000161623 : shr eax, 2 ; vzeroupper ; ret
0x0000000000118fe2 : shr eax, 4 ; and eax, 0x7f ; ret
0x000000000007b466 : shr eax, 4 ; and eax, 1 ; ret
0x000000000007b476 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000a40b6 : shr eax, 6 ; and eax, 0x3fffc00 ; ret
0x0000000000138123 : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000fefbf : shr eax, cl ; and eax, 1 ; ret
0x00000000000fc2b1 : shr eax, cl ; and eax, 3 ; ret
0x0000000000090619 : shr ebx, -0x19 ; nop dword ptr [rax] ; ret
0x0000000000118e92 : shr ecx, 3 ; mov byte ptr [rax + 1], cl ; pop rbx ; ret
0x0000000000136e55 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000084af0 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000000386eb : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000048f2c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000048eb5 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000048e84 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000120dce : shr edx, 3 ; add rax, rcx ; jmp rax
0x0000000000048f2b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000048eb4 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000048e83 : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000001671e9 : shr rax, 0x38 ; ret
0x0000000000036b8b : shr rax, 0x3f ; ret
0x00000000000fb8ab : shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000b65aa : shr rax, 2 ; ret
0x0000000000161622 : shr rax, 2 ; vzeroupper ; ret
0x0000000000118fe1 : shr rax, 4 ; and eax, 0x7f ; ret
0x0000000000118e91 : shr rcx, 3 ; mov byte ptr [rax + 1], cl ; pop rbx ; ret
0x0000000000120dcd : shr rdx, 3 ; add rax, rcx ; jmp rax
0x000000000011b2b1 : sldt word ptr [rax] ; add byte ptr [rbx + 0x4f0f0ff8], al ; ret 0x8941
0x000000000004cb60 : stc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000118ad8 : stc ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8341
0x0000000000123daa : stc ; add dword ptr [rdx + rcx + 0x5b], esi ; pop rbp ; pop r12 ; ret
0x00000000000f4693 : stc ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf980
0x000000000008c590 : stc ; dec dword ptr [rax + 0x29] ; ret
0x000000000010a43b : stc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000010a656 : stc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x000000000008a5a4 : stc ; dec dword ptr [rax + 1] ; ret
0x00000000000894e0 : stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f4bb5 : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x48], 0x39 ; ret
0x00000000000abb93 : stc ; dec dword ptr [rax - 0x7d] ; ret
0x000000000010a390 : stc ; dec dword ptr [rbx + 0xb491] ; add bh, dh ; ret 0
0x000000000015c1d2 : stc ; je 0x15c19f ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000015d872 : stc ; je 0x15d83f ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000dfa2e : stc ; jmp rcx
0x0000000000090872 : stc ; jne 0x90853 ; ret
0x0000000000088a85 : stc ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000013f688 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000002a1f6 : stc ; or byte ptr [rdi], 0x85 ; ret
0x00000000000e6d56 : stc ; or dh, byte ptr [rbp + 0xe] ; mov qword ptr [r8], r9 ; xor eax, eax ; ret
0x0000000000048f75 : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x00000000000a4eae : stc ; push qword ptr [rbp - 0x12] ; ret
0x00000000000c9ce7 : stc ; push rbx ; pop rax ; jne 0xc9cf7 ; ret
0x00000000000671eb : stc ; ret 0x15
0x000000000016478d : stc ; salc ; clc ; ret
0x00000000000fefbe : stc ; shr eax, cl ; and eax, 1 ; ret
0x0000000000164508 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000015bec7 : stc ; xlatb ; ret 0xff2d
0x000000000006f2a0 : std ; adc byte ptr [rax], al ; jmp 0x6f26c
0x00000000000c9cb7 : std ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000eea1b : std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ca505 : std ; dec dword ptr [rax - 0x77] ; ret 0x1e9
0x0000000000047351 : std ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000011f401 : std ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rdi*2 + 0x48], 0x89 ; ret
0x000000000004a473 : std ; dec dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000079ac4 : std ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000036a01 : std ; fstp st(1) ; ret
0x000000000011478b : std ; jbe 0x114793 ; ret
0x000000000015ba00 : std ; je 0x15ba69 ; and ch, al ; std ; xlatb ; ret
0x000000000015baee : std ; je 0x15bb57 ; and ch, al ; std ; xlatb ; ret
0x00000000000c51d7 : std ; mov ecx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000013eeab : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000000fe489 : std ; or eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000fe463 : std ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000008897d : std ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c72d7 : std ; push 0xf ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000a3abc : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000006f29f : std ; std ; adc byte ptr [rax], al ; jmp 0x6f26d
0x000000000015b811 : std ; xlatb ; ret
0x000000000015bae2 : std ; xlatb ; ret 0xc085
0x000000000015bd07 : std ; xlatb ; ret 0xe883
0x000000000015f5b4 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000037608 : sti ; adc al, byte ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cd263 : sti ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000000000342b2 : sti ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000003e398 : sti ; add eax, 0xb8480000 ; ret 0xffff
0x00000000000c885e : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000884a0 : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000013483c : sti ; inc dword ptr [rbx - 0x7bf00008] ; ret 1
0x000000000013f288 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000fb922 : sti ; mov rdi, rcx ; sub rsp, 8 ; call rsi
0x000000000003755d : sti ; push rax ; ret
0x000000000004244a : sti ; ret 0xffbf
0x00000000001303d1 : sti ; ret 0xffff
0x00000000000eceaa : sti ; sub rsp, 0x10 ; call 0x109167
0x0000000000088a83 : sti ; test eax, 0x5d5bfff9 ; pop r12 ; ret
0x000000000002eb5b : sti ; test rax, rax ; je 0x2eb69 ; call rax
0x000000000010a4bc : stosb byte ptr [rdi], al ; add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000dc73f : stosb byte ptr [rdi], al ; add rax, rdx ; jmp rax
0x00000000000a3eb8 : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000130352 : stosb byte ptr [rdi], al ; ret
0x00000000000833ef : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000011eb89 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000094571 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x0000000000118d94 : stosd dword ptr [rdi], eax ; jmp 0x118d5b
0x0000000000118e04 : stosd dword ptr [rdi], eax ; mov eax, 0xffffffff ; ret
0x0000000000084af5 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x00000000000386f0 : stosd dword ptr [rdi], eax ; ret
0x00000000000c336c : stosd dword ptr [rdi], eax ; str word ptr [rax - 0x77] ; ret
0x0000000000084af4 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000000386ef : stosq qword ptr [rdi], rax ; ret
0x00000000000c9225 : str word ptr [r8 - 0x77] ; ret 0x8949
0x00000000000c9e55 : str word ptr [rax - 0x39] ; ret 0xffff
0x00000000000c336d : str word ptr [rax - 0x77] ; ret
0x00000000000c4f6c : str word ptr [rax - 0x77] ; ret 0x8548
0x00000000000c4584 : str word ptr [rax - 0x77] ; ret 0x8948
0x00000000000c9226 : str word ptr [rax - 0x77] ; ret 0x8949
0x00000000000886c7 : str word ptr [rax - 0x77] ; ret 0xc031
0x00000000000ca754 : str word ptr ss:[rax - 0x39] ; ret 0xffff
0x00000000000b5ed2 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x00000000000e1c5c : sub al, 0x41 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d2387 : sub al, 0x44 ; mov dword ptr [rdi + 0x30], ecx ; ret
0x0000000000124215 : sub al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000111e3f : sub al, 0x66 ; mov dword ptr [rcx + 4], eax ; xor eax, eax ; jmp 0x111e13
0x00000000001601b6 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x00000000000b5ed5 : sub al, 0x75 ; pop rax ; ret
0x0000000000160ba3 : sub al, 0x83 ; ret 0x8104
0x00000000000e277a : sub al, 0x89 ; ret 0x2de9
0x00000000000e27c2 : sub al, 0x89 ; ret 0xa0e9
0x000000000006c20f : sub al, 0x89 ; ret 0xc083
0x0000000000089807 : sub al, 0x8b ; push rdx ; js 0x89808 ; ret 0
0x000000000008a9ec : sub al, 0x8b ; push rdx ; js 0x8a9ed ; ret 0
0x000000000008aa3c : sub al, 0x8b ; push rdx ; js 0x8aa3d ; ret 0
0x000000000008aa8c : sub al, 0x8b ; push rdx ; js 0x8aa8d ; ret 0
0x000000000008aadc : sub al, 0x8b ; push rdx ; js 0x8aadd ; ret 0
0x00000000001626a3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000f5780 : sub al, 0xb9 ; or al, 0 ; add rsp, 8 ; ret
0x000000000011c81b : sub al, 0xf ; xchg eax, ebp ; ret 0x233c
0x00000000000a63b6 : sub al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c47a2 : sub al, 7 ; add byte ptr [rcx + rcx*4 - 0x10], cl ; call rax
0x0000000000035e7a : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000015c065 : sub al, ch ; std ; xlatb ; ret
0x00000000000b8a59 : sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000000b5ec6 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000125e7e : sub byte ptr [r13 + rcx*4 + 0x42], r9b ; or byte ptr [rcx - 0x77], al ; ret 0x8948
0x000000000005920c : sub byte ptr [r8 + 0x458b4102], r9b ; add al, 0x39 ; ret
0x000000000012fe55 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000012fc25 : sub byte ptr [r9], r15b ; sal dword ptr [rbx + 5], 1 ; xor eax, eax ; ret
0x000000000005920d : sub byte ptr [rax + 0x458b4102], cl ; add al, 0x39 ; ret
0x000000000012fe66 : sub byte ptr [rax + 1], bh ; ret
0x000000000012fe56 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000390ab : sub byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000000d2476 : sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x00000000000be975 : sub byte ptr [rax - 0x75], cl ; je 0xbe9a6 ; sbb byte ptr [rax + 0x63], cl ; ret 0x8944
0x00000000000868d4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000003ab26 : sub byte ptr [rax - 0x77], cl ; ret
0x00000000000f5e40 : sub byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000de6b5 : sub byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000ee7cf : sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000707f4 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000078c61 : sub byte ptr [rax - 0x78], al ; cmp byte ptr [rcx + rcx*4 - 0x30], al ; ret
0x0000000000078c60 : sub byte ptr [rax - 0x78], r8b ; cmp byte ptr [rcx + rcx*4 - 0x30], al ; ret
0x000000000006260d : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000000e6b9f : sub byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000031cef : sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000109cf0 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x109d48 ; leave ; ret
0x0000000000049ec1 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x49f15 ; leave ; ret
0x0000000000128173 : sub byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000b5eca : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000b5ec9 : sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000125e7f : sub byte ptr [rbp + rcx*4 + 0x42], cl ; or byte ptr [rcx - 0x77], al ; ret 0x8948
0x00000000000d12e2 : sub byte ptr [rbp - 0xb], dh ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x0000000000024102 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000b8a5a : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000121ee3 : sub byte ptr [rbx + 0x5d], bl ; pop r13 ; pop r14 ; ret
0x0000000000044bdf : sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a445d : sub byte ptr [rbx + rcx*4 + 0x35], cl ; ret
0x000000000013739b : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x000000000013739a : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000000b5ec7 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x000000000012ff28 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000037ad3 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; jmp rdx
0x00000000000f7df6 : sub byte ptr [rcx - 0x7d], al ; ret 0x4901
0x00000000000ed8e0 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; call 0x39b18
0x000000000012fc26 : sub byte ptr [rcx], bh ; sal dword ptr [rbx + 5], 1 ; xor eax, eax ; ret
0x00000000000d1a04 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000123c54 : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000016b915 : sub byte ptr [rdx], al ; add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x00000000000fe54a : sub ch, byte ptr [rsi] ; or al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000036d06 : sub cl, al ; ret
0x000000000008b8bf : sub cl, byte ptr [rax + 0x39] ; bnd jne 0x8b8be ; ret
0x00000000000eae25 : sub cl, byte ptr [rax + 0x63] ; ret 0xc283
0x00000000000310a7 : sub cl, byte ptr [rax - 0x77] ; ret
0x000000000003a705 : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4901
0x00000000000e98d7 : sub cl, byte ptr [rax - 0x7d] ; ret
0x00000000000b9154 : sub cl, byte ptr [rip + 0x440f4800] ; ret 0x8d48
0x000000000004e6b1 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000f8535 : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000786b0 : sub dword ptr [rax + 0x20], 4 ; jmp 0x7867e
0x000000000014f5c3 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x000000000013d434 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013d430 : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000000d3e57 : sub dword ptr [rdi], eax ; ret
0x000000000013d4de : sub dword ptr [rdi], esp ; jmp r9
0x0000000000163cf9 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000162e86 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000000d6914 : sub dword ptr [rsp], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015bdf7 : sub eax, -1 ; jne 0x15be08 ; vzeroupper ; ret
0x00000000001602f7 : sub eax, -1 ; jne 0x160308 ; vzeroupper ; ret
0x0000000000086e1a : sub eax, 0x10 ; ret
0x00000000000d1522 : sub eax, 0x3945f631 ; ret 0xf40
0x0000000000107922 : sub eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x0000000000036f6d : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x00000000000ca1cf : sub eax, 0x89000220 ; ret 0xc748
0x000000000015ba8f : sub eax, 0xc5000001 ; std ; xlatb ; ret
0x00000000000fe5e9 : sub eax, 0xc748000c ; ret 0xffff
0x000000000008932a : sub eax, 0xf48000c ; ret 0x66c3
0x00000000000473c7 : sub eax, 1 ; cmp rbx, rax ; jne 0x473c9 ; pop rbx ; ret
0x000000000011d599 : sub eax, 1 ; je 0x11d5b0 ; mov qword ptr [rdi], rax ; ret
0x000000000002d2a4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000004889f : sub eax, 1 ; ret
0x0000000000109743 : sub eax, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004d6ce : sub eax, 4 ; cmp rdi, r8 ; jbe 0x4d6d1 ; pop rbx ; ret
0x00000000000a467e : sub eax, dword ptr [r8 + r9*4] ; je 0xa4666 ; ret
0x00000000000a467f : sub eax, dword ptr [rax + rcx*4] ; je 0xa4665 ; ret
0x0000000000031053 : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004e645 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x00000000000a4620 : sub eax, dword ptr [rcx + r8*4] ; je 0xa460e ; ret
0x00000000000a4621 : sub eax, dword ptr [rcx + rax*4] ; je 0xa460d ; ret
0x00000000000807c2 : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000007a54d : sub eax, dword ptr [rdi + 0x20] ; ret
0x000000000007a42d : sub eax, dword ptr [rdi + 0x38] ; ret
0x0000000000076239 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x000000000007a53a : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x000000000007a41a : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x000000000004f751 : sub eax, dword ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000007fed7 : sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000004a36c : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000015be43 : sub eax, ecx ; je 0x15be59 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000007f4d9 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000004a1d0 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000922dc : sub eax, ecx ; ret
0x000000000015af3f : sub eax, ecx ; vzeroupper ; ret
0x0000000000099ca9 : sub eax, edi ; ret
0x00000000000b66be : sub eax, edi ; shr rax, 2 ; ret
0x00000000000792ac : sub eax, edx ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000007cd31 : sub eax, edx ; pop rbp ; pop r12 ; ret
0x000000000003ac3d : sub eax, edx ; ret
0x000000000003683a : sub eax, edx ; sar eax, 0x10 ; ret
0x0000000000036f53 : sub eax, edx ; shr eax, 0x1f ; ret
0x0000000000036b89 : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000161620 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x00000000000bae32 : sub eax, edx ; sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000015ac42 : sub eax, edx ; vzeroupper ; ret
0x00000000000c47a1 : sub ebp, dword ptr [rdi + rax] ; add byte ptr [rcx + rcx*4 - 0x10], cl ; call rax
0x0000000000057698 : sub ebp, ecx ; ret 0xfffa
0x0000000000073b7b : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000118d27 : sub ebx, dword ptr [rbx + 0x5d] ; ret
0x00000000000b0ffc : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000386e8 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000a4ea9 : sub ecx, 1 ; cmp rcx, -1 ; jne 0xa4ea9 ; ret
0x00000000000d44f8 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009f6a1 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000ecec6 : sub ecx, dword ptr [rcx + 0x244489d7] ; or al, 0xe8 ; out dx, al ; ret 1
0x000000000015fa84 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x00000000000bae34 : sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000367ef : sub ecx, edx ; not eax ; and eax, ecx ; ret
0x00000000000ba477 : sub ecx, esi ; imul ecx, ecx, 0x64 ; cmp edi, ecx ; je 0xba491 ; ret
0x00000000000b61bc : sub edi, 0x10 ; add rax, rdi ; ret
0x00000000000a4a05 : sub edx, 1 ; jne 0xa49f5 ; ret
0x000000000007ff08 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007fef9 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000076055 : sub edx, eax ; call 0x22314
0x00000000000940f4 : sub edx, eax ; jbe 0x94137 ; add rax, rdi ; ret
0x0000000000094104 : sub edx, eax ; jbe 0x94139 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000094114 : sub edx, eax ; jbe 0x94139 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000094124 : sub edx, eax ; jbe 0x94139 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000b5234 : sub edx, eax ; jbe 0xb5277 ; add rax, rdi ; ret
0x00000000000b5244 : sub edx, eax ; jbe 0xb5279 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000b5254 : sub edx, eax ; jbe 0xb5279 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000b5264 : sub edx, eax ; jbe 0xb5279 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000f2608 : sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x000000000007c49f : sub edx, esi ; mov qword ptr [rsp], r8 ; mov rdi, rbx ; call rax
0x000000000008caaa : sub esi, 1 ; jne 0x8caa7 ; xor eax, eax ; ret
0x0000000000118aa1 : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x00000000000f6ea6 : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000123d5e : sub esi, eax ; pop rbx ; pop rbp ; mov eax, esi ; ret
0x00000000000ec257 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eceac : sub esp, 0x10 ; call 0x109165
0x0000000000039687 : sub esp, 1 ; add r13, 8 ; jmp 0x3965b
0x00000000000fb927 : sub esp, 8 ; call rsi
0x00000000000786af : sub qword ptr [rax + 0x20], 4 ; jmp 0x7867f
0x0000000000039686 : sub r12, 1 ; add r13, 8 ; jmp 0x3965c
0x000000000007f4d8 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000086e19 : sub rax, 0x10 ; ret
0x000000000011d598 : sub rax, 1 ; je 0x11d5b1 ; mov qword ptr [rdi], rax ; ret
0x00000000000a37a3 : sub rax, 1 ; ret
0x00000000000807c1 : sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000007a54c : sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000007a42c : sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000076238 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x000000000007a539 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x000000000007a419 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x0000000000099ca8 : sub rax, rdi ; ret
0x00000000000b66bd : sub rax, rdi ; shr rax, 2 ; ret
0x00000000000792ab : sub rax, rdx ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000007cd30 : sub rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000003ac51 : sub rax, rdx ; ret
0x0000000000036b88 : sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000015f75f : sub rax, rdx ; vzeroupper ; ret
0x00000000000b61bb : sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000a4a04 : sub rdx, 1 ; jne 0xa49f6 ; ret
0x0000000000076054 : sub rdx, r8 ; call 0x22315
0x00000000000940f3 : sub rdx, rax ; jbe 0x94138 ; add rax, rdi ; ret
0x00000000000b5233 : sub rdx, rax ; jbe 0xb5278 ; add rax, rdi ; ret
0x000000000008caa9 : sub rsi, 1 ; jne 0x8caa8 ; xor eax, eax ; ret
0x00000000000ec256 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eceab : sub rsp, 0x10 ; call 0x109166
0x00000000000fb926 : sub rsp, 8 ; call rsi
0x0000000000036c78 : subps xmm0, xmm1 ; ret
0x0000000000036c77 : subsd xmm0, xmm1 ; ret
0x0000000000036fe4 : subss xmm0, xmm1 ; ret
0x00000000000eba90 : syscall ; neg eax ; ret
0x0000000000109157 : syscall ; pop rdx ; pop rsi ; ret
0x00000000000b78b9 : syscall ; ret
0x00000000000fbb13 : syscall ; test rax, rax ; jl 0xfbb36 ; je 0xfbb26 ; ret
0x00000000001187dd : test ah, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d8307 : test ah, ch ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0xb60f
0x0000000000026d5c : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001273e2 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000007c07f : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002f364 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000008abb4 : test al, 0x50 ; or eax, 0x440f4800 ; ret 0xfc3
0x00000000000889a4 : test al, 0x55 ; adc eax, dword ptr [rax] ; call qword ptr [rax]
0x000000000003e1f3 : test al, 0x89 ; ret 0x8341
0x000000000012c959 : test al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000b6469 : test al, 0xf0 ; jne 0xb64c8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000b6468 : test al, 0xf0 ; jne 0xb64c9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000011d5e0 : test al, 1 ; je 0x11d5f8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c9a22 : test al, 2 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000004d84c : test al, 3 ; add byte ptr [rax], al ; mov rsp, rdx ; ret
0x000000000010a681 : test al, 5 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000012366d : test al, 9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010a895 : test al, al ; jne 0x10a835 ; mov rax, rdi ; ret
0x000000000009259a : test al, al ; jne 0x92588 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000cce38 : test al, al ; jne 0xcce23 ; xor eax, eax ; ret
0x0000000000114547 : test al, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000bd2d2 : test bh, bh ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000003cf3c : test bh, bh ; cmove eax, ecx ; ret
0x000000000003cf78 : test bh, bh ; cmovne eax, ecx ; ret
0x000000000002e200 : test bh, dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000003e397 : test bl, bh ; add eax, 0xb8480000 ; ret 0xffff
0x00000000000f796a : test byte ptr [r11 + 8], 1 ; jne 0xf79b7 ; ret
0x000000000003061a : test byte ptr [rax + 0x200], bh ; ret
0x00000000000aed38 : test byte ptr [rax + 0x39480000], cl ; ret
0x00000000001272e9 : test byte ptr [rax + 0x63], 4 ; mov cl, 0x48 ; add eax, ecx ; jmp rax
0x00000000000ca02a : test byte ptr [rax + 0x63], 4 ; mov dl, 0x48 ; add eax, edx ; jmp rax
0x0000000000137127 : test byte ptr [rax + rax - 0x7cb70000], dh ; ret
0x00000000000aed25 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000011b4bb : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000d0a3a : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b44
0x000000000005752e : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0x000000000011bdc4 : test byte ptr [rax + rcx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000dd965 : test byte ptr [rax + rdx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x84c6
0x00000000000675a2 : test byte ptr [rax - 0x76fffff7], dl ; ret
0x000000000002f7b9 : test byte ptr [rax - 0x77], 0x1c ; ret 0xf883
0x0000000000114814 : test byte ptr [rax - 0x77], 0x43 ; adc al, ch ; ret 0xf0db
0x000000000008c372 : test byte ptr [rax - 0x77], 0xd0 ; cmovne rax, rdi ; ret
0x00000000000ebc3a : test byte ptr [rax - 0x77], 0xdf ; call rax
0x000000000010b721 : test byte ptr [rax - 0x77], 0xf0 ; ret
0x000000000002c803 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add al, ch ; ret 0x10ab
0x000000000003a54a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000d2d0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea eax, dword ptr [rsi + 1] ; ret
0x000000000009edaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000014f78a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000014f7ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000009fe0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000000a121a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000008898a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x000000000009fdc9 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; ret
0x0000000000037b0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f403a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000003a30a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b64ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000012371d : test byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000047771 : test byte ptr [rax], ch ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000013829f : test byte ptr [rax], cl ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000b311f : test byte ptr [rbp + rdi*8 - 1], ah ; dec dword ptr [rcx + 0x39] ; ret 0x870f
0x000000000010792e : test byte ptr [rbx + 0x1c], 0x20 ; je 0x107947 ; pop rbx ; ret
0x0000000000122986 : test byte ptr [rbx + 0x48fffffe], dl ; mov edi, ebx ; call rax
0x0000000000088a67 : test byte ptr [rbx + 0x50], 1 ; jne 0x88a49 ; mov rdi, rsi ; call rax
0x00000000000d5d23 : test byte ptr [rbx + 0x5bffffff], al ; ret
0x00000000000f796b : test byte ptr [rbx + 8], 1 ; jne 0xf79b6 ; ret
0x00000000001056d8 : test byte ptr [rbx - 0x7d000000], ch ; ret 0x8801
0x000000000008d122 : test byte ptr [rbx], bl ; or eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000c8b86 : test byte ptr [rbx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000001699bf : test byte ptr [rcx + 0xf], 0x44 ; ret 0xfe83
0x0000000000045614 : test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; ret
0x00000000000d47b9 : test byte ptr [rcx + rcx*4 - 1], 0x89 ; ret
0x0000000000104538 : test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x00000000000a73bc : test byte ptr [rcx - 0x16000002], bl ; ret
0x000000000004c65b : test byte ptr [rcx - 0x47], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x1f0f
0x00000000000b4201 : test byte ptr [rcx - 0x48], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x1f0f
0x0000000000155256 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000f92fa : test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000086da4 : test byte ptr [rdi + rdx - 8], 1 ; cmovne rax, rcx ; ret
0x0000000000073418 : test byte ptr [rdi - 0x7770000], bh ; ret
0x0000000000113fc7 : test byte ptr [rdi], 0x30 ; je 0x113fd7 ; xor eax, eax ; ret
0x000000000004a477 : test byte ptr [rdi], 0x84 ; ret 0
0x000000000003ed7f : test byte ptr [rdi], 0x8e ; ret
0x00000000000e5f92 : test byte ptr [rdi], 0x94 ; ret
0x00000000000c89db : test byte ptr [rdi], 0x94 ; ret 0x854d
0x00000000000d10e8 : test byte ptr [rdi], 0x94 ; ret 0xd008
0x0000000000038ac6 : test byte ptr [rdi], 0x95 ; ret
0x0000000000169ec1 : test byte ptr [rdi], 0x95 ; ret 0xd348
0x0000000000062ed3 : test byte ptr [rdi], 0x9f ; ret 0xd629
0x000000000007a486 : test byte ptr [rdi], 4 ; sete al ; ret
0x000000000007a496 : test byte ptr [rdi], 8 ; sete al ; ret
0x000000000009f748 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x00000000000724d4 : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000305a8 : test byte ptr [rdx + 0x200], al ; ret
0x000000000008a758 : test byte ptr [rdx + 0xf48000d], ah ; ret 0xfc3
0x00000000001333b4 : test byte ptr [rdx + rax - 0x7cb80000], cl ; ret
0x000000000004fe01 : test byte ptr [rdx - 0x7c000017], al ; ret
0x00000000000e1d81 : test byte ptr [rdx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e42b9 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x00000000001158eb : test byte ptr [rdx], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000001159a8 : test byte ptr [rdx], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000002910d : test byte ptr [rdx], dh ; add al, 0 ; add bh, dh ; ret 0
0x0000000000099d4d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x0000000000114619 : test byte ptr [rsi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000007d565 : test byte ptr [rsi], bl ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x0000000000032c92 : test byte ptr [rsp + rax], bl ; add byte ptr [rax - 0x77], cl ; ret 0x448b
0x0000000000090871 : test cl, bh ; jne 0x90854 ; ret
0x00000000001045c2 : test cl, cl ; jne 0x1045b4 ; ret
0x000000000011b02b : test cl, cl ; jne 0x11b010 ; ret
0x00000000000906a0 : test cl, cl ; jne 0x90694 ; ret
0x00000000000907ff : test cl, cl ; jne 0x907f6 ; xor eax, eax ; ret
0x00000000000a342f : test cl, cl ; jne 0xa3424 ; ret
0x00000000000a34df : test cl, cl ; jne 0xa34d4 ; ret
0x00000000000a379f : test cl, cl ; jne 0xa3798 ; sub rax, 1 ; ret
0x00000000000f79a0 : test dh, 1 ; jne 0xf79c5 ; ret
0x00000000001047cd : test dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000011aa15 : test dh, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000c8d36 : test dh, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000d4aab : test dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000904ad : test dh, dh ; jne 0x904a7 ; mov qword ptr [rdx], rcx ; ret
0x0000000000027209 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000003cf3b : test dil, dil ; cmove eax, ecx ; ret
0x000000000003cf77 : test dil, dil ; cmovne eax, ecx ; ret
0x0000000000165194 : test dl, 0x40 ; jne 0x165159 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001651c2 : test dl, 4 ; jne 0x165159 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000bb955 : test dl, ch ; sbb byte ptr [rax], al ; add dh, dh ; ret
0x000000000009070a : test dl, cl ; jne 0x906ec ; ret
0x00000000000d4139 : test dl, dl ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000003cf54 : test dl, dl ; cmovne eax, ecx ; ret
0x0000000000035bfa : test dl, dl ; jne 0x35bdb ; ret
0x0000000000090581 : test dl, dl ; jne 0x90579 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009065c : test dl, dl ; jne 0x90654 ; ret
0x00000000000a364f : test dl, dl ; jne 0xa3648 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000caa53 : test dl, dl ; jne 0xcaa2d ; xor eax, eax ; ret
0x00000000000e0a23 : test dl, dl ; jne 0xe09fd ; xor eax, eax ; ret
0x000000000009fa7b : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00000000000a0fcb : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000000a0ecb : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x0000000000081b07 : test dword ptr [rax + rax + 0x39480000], edx ; ret
0x0000000000094768 : test dword ptr [rax + rax - 0x8b70000], ecx ; ret 2
0x000000000008ff9c : test dword ptr [rax - 0x3f], 0x834808e0 ; ret 0x4801
0x0000000000059aea : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000004f000 : test dword ptr [rax], ebx ; idiv edi ; jmp qword ptr [rax]
0x00000000000aec63 : test dword ptr [rax], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000004f212 : test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x00000000000b086b : test dword ptr [rax], edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000004ee4d : test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e3d5a : test dword ptr [rbp - 0x7efffffd], esp ; ret 0xffe0
0x0000000000094078 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x00000000000d7cc0 : test dword ptr [rbx + 0x31fffffe], esi ; leave ; add rdx, rax ; jmp 0xd7cee
0x00000000000b5de0 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000b6358 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000014f6a8 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000014f688 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000014f5a0 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000a10c0 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000162987 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000162dd6 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015c058 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x000000000003c7a1 : test dword ptr [rbx], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000ecc87 : test dword ptr [rcx + 0x48000000], ebx ; add esp, 0x68 ; ret
0x000000000014f3aa : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000016295d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009f662 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000016286d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016277d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b5e27 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000167047 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000b5df7 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000014f74a : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x0000000000167a54 : test dword ptr [rcx], 0xe901e783 ; ret 0xfffc
0x000000000002588f : test dword ptr [rcx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015ba9a : test dword ptr [rcx], edx ; add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret 0xc085
0x000000000003cc91 : test dword ptr [rcx], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002588e : test dword ptr [rcx], r11d ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ec4dd : test dword ptr [rdi + 0x48000000], esi ; add esp, 0x68 ; ret
0x00000000001380f7 : test dword ptr [rdi + rax*8], edx ; setne al ; movzx eax, al ; ret
0x000000000009f7c7 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x000000000009f7a7 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x00000000000550e1 : test dword ptr [rdi + rdi*8 - 1], esp ; dec dword ptr [rax + 0x63] ; ret
0x00000000000cdb39 : test dword ptr [rdi + rdx*8 - 1], edi ; jmp qword ptr [rax]
0x000000000003881a : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x00000000000ec662 : test dword ptr [rdx + 0x48000000], edi ; add esp, 0x78 ; ret
0x000000000009f961 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x00000000000a0da9 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x0000000000163cd2 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001626a2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000526a1 : test dword ptr [rdx + rdi*8 + 0x1ffff], edi ; add byte ptr [rax], al ; jmp rax
0x00000000000bd9ec : test dword ptr [rdx - 0x7600000f], ecx ; ret 0xe283
0x000000000005ff85 : test dword ptr [rdx - 0x76ffffa1], esi ; ret
0x0000000000070871 : test dword ptr [rdx - 0x77000000], ebx ; ret 0xe281
0x000000000002e201 : test dword ptr [rdx], 0x89480000 ; fucompi st(0) ; ret
0x000000000014f667 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x000000000015ba8e : test dword ptr [rip - 0x3affffff], ebp ; std ; xlatb ; ret
0x000000000015f583 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x00000000000b63fd : test dword ptr [rsi + 0x48000000], edi ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000001669d2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009f785 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000009f765 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x000000000009f67d : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x0000000000162ba8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x0000000000088a84 : test eax, 0x5d5bfff9 ; pop r12 ; ret
0x0000000000142596 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000037014 : test eax, 0x7fffff ; je 0x37027 ; ret
0x0000000000121dad : test eax, 0x8d4c0006 ; and al, 0x1c ; call qword ptr [rax]
0x0000000000057364 : test eax, 0x950f7ff0 ; ret 0xc166
0x00000000000f9823 : test eax, eax ; cmove eax, edx ; ret
0x00000000000f260a : test eax, eax ; cmovns eax, edx ; ret
0x000000000003acfd : test eax, eax ; cmovs eax, edx ; ret
0x000000000010593d : test eax, eax ; je 0x10591f ; mov r14, qword ptr [r15 + 0x38] ; jmp 0x105913
0x000000000010961a : test eax, eax ; je 0x109624 ; call rax
0x00000000001096c2 : test eax, eax ; je 0x109699 ; call rax
0x00000000001099ec : test eax, eax ; je 0x109a24 ; call rax
0x000000000010b92e : test eax, eax ; je 0x10b948 ; add rsp, 8 ; ret
0x00000000001147a4 : test eax, eax ; je 0x1147b4 ; mov rdi, rbx ; call rax
0x000000000011cb5e : test eax, eax ; je 0x11cb6c ; ret
0x000000000011d547 : test eax, eax ; je 0x11d554 ; ret
0x0000000000120fe4 : test eax, eax ; je 0x120ff4 ; mov rdi, rbx ; call rax
0x00000000001216eb : test eax, eax ; je 0x1216fb ; mov rdi, rbp ; call rax
0x0000000000121a0a : test eax, eax ; je 0x121a14 ; ret
0x0000000000122713 : test eax, eax ; je 0x122723 ; mov rdi, rbx ; call rax
0x0000000000122a76 : test eax, eax ; je 0x122a86 ; mov rdi, rbx ; call rax
0x0000000000122c85 : test eax, eax ; je 0x122c96 ; xor eax, eax ; ret
0x0000000000127ca8 : test eax, eax ; je 0x127cb8 ; mov rdi, r12 ; call rax
0x0000000000127e9d : test eax, eax ; je 0x127eaf ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012910f : test eax, eax ; je 0x12911f ; mov rdi, rbp ; call rax
0x00000000001291f2 : test eax, eax ; je 0x129202 ; mov rdi, r12 ; call rax
0x0000000000129dd1 : test eax, eax ; je 0x129de3 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x000000000012a50e : test eax, eax ; je 0x12a51e ; mov rdi, r12 ; call rax
0x000000000012a881 : test eax, eax ; je 0x12a893 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000012c661 : test eax, eax ; je 0x12c5ee ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000012c5e1 : test eax, eax ; je 0x12c5f5 ; pop rbx ; ret
0x000000000012d3bd : test eax, eax ; je 0x12d3cf ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012da76 : test eax, eax ; je 0x12da88 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000131c6a : test eax, eax ; je 0x131c7e ; xor eax, eax ; ret
0x0000000000155c63 : test eax, eax ; je 0x155c6f ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000156c48 : test eax, eax ; je 0x156c54 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000016bce9 : test eax, eax ; je 0x16bcf8 ; call rax
0x00000000000242ac : test eax, eax ; je 0x242bc ; mov rdi, rbp ; call rax
0x000000000002dbef : test eax, eax ; je 0x2dbf9 ; call rax
0x000000000002eb5d : test eax, eax ; je 0x2eb67 ; call rax
0x0000000000045a67 : test eax, eax ; je 0x45a75 ; pop rbx ; ret
0x000000000007bb22 : test eax, eax ; je 0x7bb35 ; pop rbx ; ret
0x000000000008198c : test eax, eax ; je 0x81996 ; call rax
0x00000000000875e2 : test eax, eax ; je 0x876c8 ; call rax
0x000000000008771c : test eax, eax ; je 0x877f8 ; call rax
0x0000000000089531 : test eax, eax ; je 0x89545 ; pop rbx ; ret
0x00000000000c2ea9 : test eax, eax ; je 0xc2ecb ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000d11a2 : test eax, eax ; je 0xd1180 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0771 : test eax, eax ; je 0xe0786 ; xor eax, eax ; ret
0x00000000000f30c0 : test eax, eax ; je 0xf30c9 ; ret
0x00000000000f4ee5 : test eax, eax ; je 0xf4ef3 ; mov qword ptr [rax], rdx ; ret
0x00000000000f8c9f : test eax, eax ; je 0xf8d38 ; call rax
0x00000000000f8e2a : test eax, eax ; je 0xf8f48 ; call rax
0x00000000000fbb16 : test eax, eax ; jl 0xfbb33 ; je 0xfbb23 ; ret
0x0000000000104add : test eax, eax ; jne 0x104a73 ; xor eax, eax ; ret
0x000000000010912f : test eax, eax ; jne 0x10912b ; pop rdx ; pop r10 ; ret
0x0000000000118c5b : test eax, eax ; jne 0x118c7f ; mov eax, r8d ; ret
0x000000000011cefe : test eax, eax ; jne 0x11cf0c ; ret
0x000000000011d0e8 : test eax, eax ; jne 0x11d0f5 ; pop rbx ; ret
0x000000000011e4fc : test eax, eax ; jne 0x11e50c ; ret
0x0000000000123674 : test eax, eax ; jne 0x12360d ; xor eax, eax ; pop rbx ; ret
0x00000000001244af : test eax, eax ; jne 0x124485 ; xor eax, eax ; pop rbx ; ret
0x00000000001280ea : test eax, eax ; jne 0x1280f4 ; ret
0x000000000012d335 : test eax, eax ; jne 0x12d325 ; pop rbx ; ret
0x000000000012d5da : test eax, eax ; jne 0x12d5e4 ; ret
0x0000000000134c7e : test eax, eax ; jne 0x134c97 ; xor eax, eax ; pop rbx ; ret
0x000000000015af3b : test eax, eax ; jne 0x15af29 ; sub eax, ecx ; vzeroupper ; ret
0x000000000015b410 : test eax, eax ; jne 0x15b3f9 ; sub eax, ecx ; vzeroupper ; ret
0x000000000015b741 : test eax, eax ; jne 0x15b769 ; xor eax, eax ; vzeroupper ; ret
0x0000000000160741 : test eax, eax ; jne 0x160769 ; xor eax, eax ; vzeroupper ; ret
0x0000000000160bb9 : test eax, eax ; jne 0x160ba9 ; sub eax, ecx ; vzeroupper ; ret
0x000000000016108e : test eax, eax ; jne 0x161079 ; sub eax, ecx ; vzeroupper ; ret
0x000000000006dfb3 : test eax, eax ; jne 0x6dfc8 ; mov rax, rbx ; pop rbx ; ret
0x000000000007f124 : test eax, eax ; jne 0x7f11c ; ret
0x000000000007febc : test eax, eax ; jne 0x7feb4 ; ret
0x00000000000889ff : test eax, eax ; jne 0x889f6 ; xor eax, eax ; ret
0x00000000000940a5 : test eax, eax ; jne 0x94106 ; xor eax, eax ; ret
0x0000000000094558 : test eax, eax ; jne 0x945d6 ; xor eax, eax ; ret
0x0000000000094587 : test eax, eax ; jne 0x94606 ; xor eax, eax ; ret
0x00000000000a46bd : test eax, eax ; jne 0xa46b4 ; ret
0x00000000000a4af9 : test eax, eax ; jne 0xa4acc ; ret
0x00000000000a4bba : test eax, eax ; jne 0xa4bd6 ; mov rax, rdi ; ret
0x00000000000b51e5 : test eax, eax ; jne 0xb5246 ; xor eax, eax ; ret
0x00000000000f0b8f : test eax, eax ; jne 0xf0b59 ; mov edi, r12d ; call 0xece89
0x0000000000078b4f : test eax, eax ; js 0x78b5c ; ret
0x000000000006488a : test eax, eax ; ret
0x00000000001205aa : test eax, eax ; sete al ; add rsp, 8 ; ret
0x00000000000aee8b : test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000072361 : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000af523 : test eax, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000036c47 : test eax, edx ; je 0x36c54 ; ret
0x00000000000411d9 : test ebp, eax ; or byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0xed75
0x00000000001303cc : test ebp, ebp ; jle 0x130409 ; call 0x12c6d6
0x000000000016bd74 : test ebp, ebp ; jne 0x16bd60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a720e : test ebp, ebp ; mov r10, rbp ; setne dl ; jmp 0xa722e
0x00000000000a9a4d : test ebp, ebp ; mov r10, rbp ; setne dl ; jmp 0xa9a6e
0x00000000000ac08e : test ebp, ebp ; mov r10, rbp ; setne dl ; jmp 0xac0ae
0x00000000000b2c6d : test ebp, ebp ; mov r10, rbp ; setne dl ; jmp 0xb2c8e
0x0000000000093fe0 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000d664f : test ebx, ebx ; je 0xd6678 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103b1c : test ebx, ebx ; jne 0x103b30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d4ed : test ebx, ebx ; jne 0x11d4e5 ; pop rbx ; ret
0x000000000016be4c : test ebx, ebx ; jne 0x16be40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016c003 : test ebx, ebx ; jne 0x16bff5 ; pop rbx ; ret
0x000000000016c0cc : test ebx, ebx ; jne 0x16c0b5 ; pop rbx ; ret
0x00000000000342b1 : test ebx, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000088a82 : test ebx, edi ; test eax, 0x5d5bfff9 ; pop r12 ; ret
0x00000000000944c8 : test ebx, esi ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000165182 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000002d94f : test ecx, ecx ; je 0x2d959 ; call rcx
0x00000000000fffff : test ecx, ecx ; jne 0x10000c ; ret
0x000000000010005c : test ecx, ecx ; jne 0x10006c ; ret
0x00000000000a48e4 : test ecx, ecx ; jne 0xa48b4 ; ret
0x00000000000a4aeb : test ecx, ecx ; jne 0xa4ae4 ; ret
0x00000000000a4bd6 : test ecx, ecx ; jne 0xa4bd1 ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000b6799 : test ecx, ecx ; jne 0xb6757 ; mov rax, rdx ; ret
0x00000000000ff6bd : test ecx, ecx ; jne 0xff6cc ; ret
0x00000000000ff728 : test ecx, ecx ; jne 0xff734 ; ret
0x000000000004cb5f : test ecx, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008f0fc : test edi, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f8225 : test edi, edi ; je 0xf8237 ; test rsi, rsi ; jne 0xf8239 ; ret
0x000000000016b725 : test edi, edi ; jne 0x16b77a ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000f540c : test edi, edi ; jne 0xf5429 ; mov eax, 1 ; ret
0x00000000000ce7b5 : test edi, edi ; jns 0xce7a7 ; lea rax, qword ptr [rdx + rax*8] ; jmp 0xce7b0
0x00000000000ca259 : test edi, edi ; js 0xca264 ; ret
0x00000000001232b2 : test edx, edx ; je 0x1232c2 ; mov rdi, rbx ; call rdx
0x000000000016bbdc : test edx, edx ; je 0x16bbe6 ; call rdx
0x000000000007a8c3 : test edx, edx ; je 0x7a8d4 ; ret
0x000000000007ace3 : test edx, edx ; je 0x7acf4 ; ret
0x0000000000099b46 : test edx, edx ; je 0x99b54 ; bsf eax, edx ; ret
0x0000000000099b46 : test edx, edx ; je 0x99b55 ; bsf eax, edx ; ret
0x0000000000099beb : test edx, edx ; je 0x99c07 ; bsf rax, rdx ; ret
0x0000000000099beb : test edx, edx ; je 0x99c08 ; bsf rax, rdx ; ret
0x0000000000099b8e : test edx, edx ; je 0x99c17 ; bsf rax, rdx ; ret
0x0000000000099b8e : test edx, edx ; je 0x99c18 ; bsf rax, rdx ; ret
0x0000000000099dba : test edx, edx ; je 0x99de7 ; bsf rax, rdx ; ret
0x0000000000099dba : test edx, edx ; je 0x99de8 ; bsf rax, rdx ; ret
0x0000000000100231 : test edx, edx ; jne 0x100244 ; ret
0x000000000010be8f : test edx, edx ; jne 0x10be33 ; mov rax, rdi ; ret
0x0000000000130264 : test edx, edx ; jne 0x130279 ; mov eax, 1 ; ret
0x00000000001302a4 : test edx, edx ; jne 0x1302b9 ; mov eax, 1 ; ret
0x0000000000030161 : test edx, edx ; jne 0x30174 ; ret
0x0000000000074f3f : test edx, edx ; jne 0x74f34 ; ret
0x000000000007d9c5 : test edx, edx ; jne 0x7d9d6 ; xor eax, eax ; ret
0x000000000007e517 : test edx, edx ; jne 0x7e50c ; ret
0x0000000000088ac9 : test edx, edx ; jne 0x88ac4 ; ret
0x000000000008ded1 : test edx, edx ; jne 0x8dec6 ; or byte ptr [rdi], sil ; ret
0x00000000000a3ea5 : test edx, edx ; jne 0xa3eb4 ; mov rax, rdi ; ret
0x00000000000a4dd9 : test edx, edx ; jne 0xa4dd4 ; ret
0x00000000000a5fea : test edx, edx ; jne 0xa5fe4 ; ret
0x00000000000b604a : test edx, edx ; jne 0xb6044 ; ret
0x00000000000d31d8 : test edx, edx ; jne 0xd31c8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f4202 : test edx, edx ; jne 0xf41d9 ; xor eax, eax ; pop rbx ; ret
0x00000000000ff911 : test edx, edx ; jne 0xff924 ; ret
0x00000000000a5242 : test edx, edx ; sete al ; ret
0x0000000000039d18 : test esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000165175 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000002d254 : test esi, esi ; je 0x2d269 ; cmp esi, 3 ; je 0x2d269 ; ret
0x0000000000080d45 : test esi, esi ; je 0x80d99 ; mov qword ptr [rsi], rdi ; ret
0x0000000000099cb5 : test esi, esi ; jne 0x99cc4 ; xor rax, rax ; ret
0x00000000000b6505 : test esi, esi ; jne 0xb6514 ; xor rax, rax ; ret
0x00000000000f822a : test esi, esi ; jne 0xf8234 ; ret
0x000000000008c371 : test esi, esi ; mov rax, rdx ; cmovne rax, rdi ; ret
0x000000000016518f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000005ab4c : test esp, ecx ; idiv bh ; jmp qword ptr [rax]
0x00000000000cb34b : test esp, esp ; je 0xcb361 ; mov rdi, rbx ; call r12
0x00000000000e131b : test esp, esp ; je 0xe1331 ; mov rdi, rbx ; call r12
0x00000000000fb957 : test esp, esp ; je 0xfb96e ; mov rdi, rbp ; call r12
0x000000000012ca68 : test esp, esp ; jne 0x12ca80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000038819 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x0000000000090709 : test r10b, r9b ; jne 0x906ed ; ret
0x000000000010be8e : test r10d, r10d ; jne 0x10be34 ; mov rax, rdi ; ret
0x00000000000cb34a : test r12, r12 ; je 0xcb362 ; mov rdi, rbx ; call r12
0x00000000000e131a : test r12, r12 ; je 0xe1332 ; mov rdi, rbx ; call r12
0x00000000000fb956 : test r12, r12 ; je 0xfb96f ; mov rdi, rbp ; call r12
0x000000000012ca67 : test r12d, r12d ; jne 0x12ca81 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a720d : test r13d, r13d ; mov r10, rbp ; setne dl ; jmp 0xa722f
0x00000000000a9a4c : test r13d, r13d ; mov r10, rbp ; setne dl ; jmp 0xa9a6f
0x00000000000ac08d : test r13d, r13d ; mov r10, rbp ; setne dl ; jmp 0xac0af
0x00000000000b2c6c : test r13d, r13d ; mov r10, rbp ; setne dl ; jmp 0xb2c8f
0x00000000000ce7b4 : test r15d, r15d ; jns 0xce7a8 ; lea rax, qword ptr [rdx + rax*8] ; jmp 0xce7b1
0x000000000010a894 : test r8b, r8b ; jne 0x10a836 ; mov rax, rdi ; ret
0x0000000000155c62 : test r8d, r8d ; je 0x155c70 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000156c47 : test r8d, r8d ; je 0x156c55 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000000a46bc : test r8d, r8d ; jne 0xa46b5 ; ret
0x00000000000a4af8 : test r8d, r8d ; jne 0xa4acd ; ret
0x0000000000090870 : test r9b, dil ; jne 0x90855 ; ret
0x00000000000b6798 : test r9d, r9d ; jne 0xb6758 ; mov rax, rdx ; ret
0x0000000000109619 : test rax, rax ; je 0x109625 ; call rax
0x00000000001096c1 : test rax, rax ; je 0x10969a ; call rax
0x00000000001099eb : test rax, rax ; je 0x109a25 ; call rax
0x000000000010b92d : test rax, rax ; je 0x10b949 ; add rsp, 8 ; ret
0x00000000001147a3 : test rax, rax ; je 0x1147b5 ; mov rdi, rbx ; call rax
0x000000000011d546 : test rax, rax ; je 0x11d555 ; ret
0x0000000000120fe3 : test rax, rax ; je 0x120ff5 ; mov rdi, rbx ; call rax
0x00000000001216ea : test rax, rax ; je 0x1216fc ; mov rdi, rbp ; call rax
0x0000000000122712 : test rax, rax ; je 0x122724 ; mov rdi, rbx ; call rax
0x0000000000122a75 : test rax, rax ; je 0x122a87 ; mov rdi, rbx ; call rax
0x0000000000127ca7 : test rax, rax ; je 0x127cb9 ; mov rdi, r12 ; call rax
0x0000000000127e9c : test rax, rax ; je 0x127eb0 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012910e : test rax, rax ; je 0x129120 ; mov rdi, rbp ; call rax
0x00000000001291f1 : test rax, rax ; je 0x129203 ; mov rdi, r12 ; call rax
0x0000000000129dd0 : test rax, rax ; je 0x129de4 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x000000000012a50d : test rax, rax ; je 0x12a51f ; mov rdi, r12 ; call rax
0x000000000012a880 : test rax, rax ; je 0x12a894 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000012c5e0 : test rax, rax ; je 0x12c5f6 ; pop rbx ; ret
0x000000000012d3bc : test rax, rax ; je 0x12d3d0 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012da75 : test rax, rax ; je 0x12da89 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000016bce8 : test rax, rax ; je 0x16bcf9 ; call rax
0x00000000000242ab : test rax, rax ; je 0x242bd ; mov rdi, rbp ; call rax
0x000000000002dbee : test rax, rax ; je 0x2dbfa ; call rax
0x000000000002eb5c : test rax, rax ; je 0x2eb68 ; call rax
0x000000000007bb21 : test rax, rax ; je 0x7bb36 ; pop rbx ; ret
0x000000000008198b : test rax, rax ; je 0x81997 ; call rax
0x00000000000875e1 : test rax, rax ; je 0x876c9 ; call rax
0x000000000008771b : test rax, rax ; je 0x877f9 ; call rax
0x0000000000089530 : test rax, rax ; je 0x89546 ; pop rbx ; ret
0x00000000000e0770 : test rax, rax ; je 0xe0787 ; xor eax, eax ; ret
0x00000000000f30bf : test rax, rax ; je 0xf30ca ; ret
0x00000000000f4ee4 : test rax, rax ; je 0xf4ef4 ; mov qword ptr [rax], rdx ; ret
0x00000000000f8c9e : test rax, rax ; je 0xf8d39 ; call rax
0x00000000000f8e29 : test rax, rax ; je 0xf8f49 ; call rax
0x00000000000fbb15 : test rax, rax ; jl 0xfbb34 ; je 0xfbb24 ; ret
0x0000000000104adc : test rax, rax ; jne 0x104a74 ; xor eax, eax ; ret
0x000000000011e4fb : test rax, rax ; jne 0x11e50d ; ret
0x0000000000123673 : test rax, rax ; jne 0x12360e ; xor eax, eax ; pop rbx ; ret
0x000000000012d334 : test rax, rax ; jne 0x12d326 ; pop rbx ; ret
0x000000000007f123 : test rax, rax ; jne 0x7f11d ; ret
0x000000000007febb : test rax, rax ; jne 0x7feb5 ; ret
0x00000000000889fe : test rax, rax ; jne 0x889f7 ; xor eax, eax ; ret
0x0000000000036c46 : test rax, rdx ; je 0x36c55 ; ret
0x000000000016bd73 : test rbp, rbp ; jne 0x16bd61 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103b1b : test rbx, rbx ; jne 0x103b31 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d4ec : test rbx, rbx ; jne 0x11d4e6 ; pop rbx ; ret
0x000000000016be4b : test rbx, rbx ; jne 0x16be41 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016c002 : test rbx, rbx ; jne 0x16bff6 ; pop rbx ; ret
0x000000000016c0cb : test rbx, rbx ; jne 0x16c0b6 ; pop rbx ; ret
0x000000000002d94e : test rcx, rcx ; je 0x2d95a ; call rcx
0x00000000001232b1 : test rdx, rdx ; je 0x1232c3 ; mov rdi, rbx ; call rdx
0x000000000016bbdb : test rdx, rdx ; je 0x16bbe7 ; call rdx
0x0000000000099bea : test rdx, rdx ; je 0x99c08 ; bsf rax, rdx ; ret
0x0000000000099bea : test rdx, rdx ; je 0x99c09 ; bsf rax, rdx ; ret
0x0000000000099b8d : test rdx, rdx ; je 0x99c18 ; bsf rax, rdx ; ret
0x0000000000099b8d : test rdx, rdx ; je 0x99c19 ; bsf rax, rdx ; ret
0x0000000000099db9 : test rdx, rdx ; je 0x99de8 ; bsf rax, rdx ; ret
0x0000000000099db9 : test rdx, rdx ; je 0x99de9 ; bsf rax, rdx ; ret
0x0000000000074f3e : test rdx, rdx ; jne 0x74f35 ; ret
0x000000000007d9c4 : test rdx, rdx ; jne 0x7d9d7 ; xor eax, eax ; ret
0x000000000007e516 : test rdx, rdx ; jne 0x7e50d ; ret
0x0000000000088ac8 : test rdx, rdx ; jne 0x88ac5 ; ret
0x00000000000a3ea4 : test rdx, rdx ; jne 0xa3eb5 ; mov rax, rdi ; ret
0x00000000000d31d7 : test rdx, rdx ; jne 0xd31c9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f4201 : test rdx, rdx ; jne 0xf41da ; xor eax, eax ; pop rbx ; ret
0x0000000000080d44 : test rsi, rsi ; je 0x80d9a ; mov qword ptr [rsi], rdi ; ret
0x0000000000099cb4 : test rsi, rsi ; jne 0x99cc5 ; xor rax, rax ; ret
0x00000000000b6504 : test rsi, rsi ; jne 0xb6515 ; xor rax, rax ; ret
0x00000000000f8229 : test rsi, rsi ; jne 0xf8235 ; ret
0x00000000000f799f : test sil, 1 ; jne 0xf79c6 ; ret
0x00000000000904ac : test sil, sil ; jne 0x904a8 ; mov qword ptr [rdx], rcx ; ret
0x0000000000089a98 : verw word ptr [rcx] ; ret
0x000000000007dd17 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000016409e : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000015fce0 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000164779 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000001601c5 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x000000000016477d : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000015fe6c : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x000000000015ff13 : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x000000000016408a : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000164071 : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000015fc19 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x000000000016012f : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x000000000015fdb7 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x000000000015fd89 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x00000000001600a6 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x000000000016476f : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000164773 : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000164c66 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000164d2c : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x0000000000164f35 : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000164788 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000016478c : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000001643a7 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000164240 : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000164042 : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x0000000000164006 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000164509 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000016492c : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000016488f : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000016472e : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00000000000e1c44 : vpsubsw ymm8, ymm1, ymmword ptr [rbp + 0x39] ; ret 0xb17f
0x000000000015ac44 : vzeroupper ; ret
0x000000000015b7c0 : vzeroupper ; xor eax, eax ; ret
0x000000000010b401 : wait ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000abb91 : wait ; sar cl, cl ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000f5023 : wbinvd ; add byte ptr [rdi - 0x18], ah ; push rsp ; ret 0xfff7
0x000000000011e228 : wbinvd ; ret 0x9388
0x00000000000a306d : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a30ef : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a31f1 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000155a6f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000156293 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000157bdf : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015565f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000156383 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001561a3 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000015516b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000007f983 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000015597b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015d0cc : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x00000000000db970 : xchg bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000015c8ec : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000015ccdc : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015c4fc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015f00d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015db11 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000015ed11 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015e411 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015e711 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015de09 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000005174f : xchg byte ptr [rax + 1], cl ; clc ; jmp rax
0x00000000000a4042 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x0000000000156beb : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000015873f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000157f1f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00000000001553ef : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001576ff : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000002592f : xchg byte ptr [rax - 0x75], cl ; ret
0x000000000008d182 : xchg byte ptr [rax - 0x77], cl ; ret
0x000000000015572f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000156743 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000155a4b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015c69b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000155b1b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015825f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000155ed3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000157a3f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015721f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000001583ff : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00000000001558cf : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000156923 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001560b3 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000001550bf : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00000000000ff837 : xchg byte ptr [rbx - 0x172ceffc], cl ; and eax, 1 ; ret
0x0000000000156b03 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001554bf : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000015cb8c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015c3ac : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015d4bc : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015599f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000156a13 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000015518f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000015755f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000155231 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000156355 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000156445 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000156265 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000c7373 : xchg byte ptr [rip + 0x158b4800], al ; ret
0x000000000015558f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000015e0b6 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000157695 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000158395 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015efb6 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015e6b6 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015e3b6 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000157eb5 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d7f1d : xchg byte ptr [rsi], bh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000015ca8d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015ddae : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015d3bd : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001557ff : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000155fc3 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x0000000000159eef : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000159d0f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015a6e7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000159607 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015a507 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000feb92 : xchg cl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001586d5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001579d5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001574f5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001581f5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000015cbdd : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015c3fd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000155255 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000156175 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000155f95 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000156085 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000155ea5 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000005fd49 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000f6f7c : xchg dword ptr [rax + rax], ecx ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000064a7b : xchg dword ptr [rax - 0x76ffffeb], ebx ; ret 0xc083
0x000000000005d55b : xchg dword ptr [rax - 0x76fffff1], esp ; ret 0xc083
0x0000000000084d8b : xchg dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000025a2b : xchg dword ptr [rbp + rcx*4 + 0x34], ecx ; ret
0x000000000006a2b7 : xchg dword ptr [rbp - 0x76fffff5], esp ; ret 0xc083
0x000000000006b384 : xchg dword ptr [rbp - 0x76fffff7], edx ; ret 0xc083
0x000000000005e4dd : xchg dword ptr [rbp - 0x76fffff8], ecx ; ret 0xc083
0x00000000000a4af7 : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xc3 ; xor eax, eax ; ret
0x000000000005e3a4 : xchg dword ptr [rbx - 0x76fffff8], ebx ; ret 0xc083
0x00000000000eb9c5 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000051042 : xchg dword ptr [rcx - 0x76ffffe7], ebx ; ret 0xc083
0x0000000000064568 : xchg dword ptr [rcx - 0x76ffffed], eax ; ret 0xc083
0x000000000008fa17 : xchg dword ptr [rcx - 0x77], ecx ; ret 0x8548
0x0000000000050f3c : xchg dword ptr [rdi - 0x76ffffe9], eax ; ret 0xc083
0x000000000005e6c4 : xchg dword ptr [rdi - 0x76fffffb], esp ; ret 0xc083
0x000000000008448c : xchg dword ptr [rdi - 0x7d000000], ebp ; ret 0xe977
0x000000000010912d : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x10912d ; pop rdx ; pop r10 ; ret
0x000000000006b636 : xchg dword ptr [rdx - 0x76fffffb], edx ; ret 0xc083
0x00000000000a4cc5 : xchg dword ptr [rdx], eax ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000005c9c6 : xchg dword ptr [rip - 0x76ffffe6], esi ; ret 0xc083
0x000000000005d35e : xchg dword ptr [rip - 0x76fffff0], ebx ; ret 0xc083
0x000000000005266d : xchg dword ptr [rip - 0x76fffff7], edi ; ret 0xc083
0x0000000000063039 : xchg dword ptr [rsi - 0x76ffffef], eax ; ret 0xc083
0x0000000000159248 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x00000000000c4722 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000005177f : xchg eax, ebp ; call 0xffffffffe9051786
0x000000000008ca84 : xchg eax, ebp ; mov dword ptr [rbp + 0x38], 0x940f41d0 ; ret
0x000000000010a898 : xchg eax, ebp ; mov rax, rdi ; ret
0x0000000000038ac8 : xchg eax, ebp ; ret
0x00000000000a9a53 : xchg eax, ebp ; ret 0x10eb
0x000000000006ef27 : xchg eax, ebp ; ret 0x14
0x000000000016b404 : xchg eax, ebp ; ret 0x145
0x000000000011c81d : xchg eax, ebp ; ret 0x233c
0x000000000011c409 : xchg eax, ebp ; ret 0x2c3c
0x0000000000167610 : xchg eax, ebp ; ret 0x3145
0x0000000000090700 : xchg eax, ebp ; ret 0x3941
0x0000000000104845 : xchg eax, ebp ; ret 0x3945
0x00000000000ed247 : xchg eax, ebp ; ret 0x3948
0x00000000001200fc : xchg eax, ebp ; ret 0x8041
0x000000000008474b : xchg eax, ebp ; ret 0x8348
0x0000000000036409 : xchg eax, ebp ; ret 0x8440
0x00000000000b75ca : xchg eax, ebp ; ret 0x8545
0x0000000000039545 : xchg eax, ebp ; ret 0x8548
0x000000000003854d : xchg eax, ebp ; ret 0x8948
0x000000000004a8cd : xchg eax, ebp ; ret 0x941
0x000000000016b346 : xchg eax, ebp ; ret 0x94c
0x00000000000ee095 : xchg eax, ebp ; ret 0xa6e9
0x000000000004a889 : xchg eax, ebp ; ret 0xb60f
0x0000000000167bf4 : xchg eax, ebp ; ret 0xc031
0x00000000000f565b : xchg eax, ebp ; ret 0xc084
0x0000000000057368 : xchg eax, ebp ; ret 0xc166
0x0000000000077fd1 : xchg eax, ebp ; ret 0xc283
0x00000000000861b5 : xchg eax, ebp ; ret 0xd020
0x0000000000078005 : xchg eax, ebp ; ret 0xd201
0x0000000000038af2 : xchg eax, ebp ; ret 0xd321
0x0000000000167abf : xchg eax, ebp ; ret 0xd348
0x0000000000169e22 : xchg eax, ebp ; ret 0xd349
0x0000000000070db6 : xchg eax, ebp ; ret 0xdaf7
0x00000000000a7214 : xchg eax, ebp ; ret 0xfeb
0x000000000007a45d : xchg eax, ebp ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000103b3c : xchg eax, ebp ; rol byte ptr [rcx + 0x5c], 0xf ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000090707 : xchg eax, ebp ; rol dword ptr [rbp - 0x7c], -0x36 ; jne 0x906ef ; ret
0x00000000000f3ff6 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000006e6d9 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x000000000007d9de : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000075dde : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000010a50a : xchg eax, ebp ; stc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000000da789 : xchg eax, ebx ; add al, 0 ; add byte ptr [rax + 0x63], cl ; ret
0x000000000008a77a : xchg eax, ebx ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000130d69 : xchg eax, ebx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x0000000000161af4 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000000bc2ba : xchg eax, ebx ; add rdx, rbx ; jmp rdx
0x000000000009ec6c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000013cfd2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000089239 : xchg eax, ebx ; or al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000027ded : xchg eax, ebx ; ret 0x15
0x0000000000080a79 : xchg eax, ebx ; salc ; adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000b00ab : xchg eax, ecx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000058393 : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x44c6
0x000000000006c4ab : xchg eax, ecx ; add byte ptr [rax], al ; mov r14d, eax ; jmp 0x68721
0x000000000008a8ea : xchg eax, ecx ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000001587e1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000008a9fb : xchg eax, ecx ; ret 0xc
0x00000000000c4c85 : xchg eax, ecx ; str word ptr [rax - 0x77] ; ret 0x8948
0x0000000000156f0f : xchg eax, ecx ; sub eax, edx ; ret
0x000000000003dbe4 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc101
0x000000000008a646 : xchg eax, edi ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000035518 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x0000000000129d15 : xchg eax, edi ; cmc ; dec dword ptr [rbx - 0x76b7ff83] ; ret
0x000000000003ed79 : xchg eax, edi ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x8e ; ret
0x00000000000cc775 : xchg eax, edi ; ret
0x00000000000af9f6 : xchg eax, edi ; ret 0x1489
0x00000000000859c9 : xchg eax, edi ; ret 0x36e9
0x000000000011dd1c : xchg eax, edi ; ret 0x8440
0x00000000000468d3 : xchg eax, edi ; ret 0x8545
0x000000000003e7fa : xchg eax, edi ; ret 0xd284
0x0000000000139d64 : xchg eax, edi ; ret 0xda80
0x00000000000fe89a : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x000000000010a655 : xchg eax, edi ; stc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x00000000000b6797 : xchg eax, edi ; test r9d, r9d ; jne 0xb6759 ; mov rax, rdx ; ret
0x000000000008757e : xchg eax, edx ; adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000004d71a : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000060439 : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rbx - 0x60f43], al ; call qword ptr [rax]
0x000000000003a52a : xchg eax, edx ; add byte ptr [rax], bl ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000122a1e : xchg eax, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x00000000000f91e8 : xchg eax, edx ; dec dword ptr [rax - 0x77] ; ret
0x000000000016befc : xchg eax, edx ; jmp 0x16bf03
0x0000000000047ff7 : xchg eax, edx ; mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000010a63a : xchg eax, edx ; pop rdx ; add eax, 0x440f4800 ; ret 0xfc3
0x00000000000fcdca : xchg eax, edx ; ret
0x000000000008aafa : xchg eax, edx ; ret 0
0x00000000000aaed1 : xchg eax, edx ; ret 0x2040
0x00000000001696a5 : xchg eax, edx ; ret 0x3145
0x0000000000125dad : xchg eax, edx ; ret 0x8b48
0x0000000000125da2 : xchg eax, edx ; ret 0x975
0x000000000016967e : xchg eax, edx ; ret 0xb60f
0x00000000000c48d6 : xchg eax, edx ; ret 0xf
0x0000000000089077 : xchg eax, edx ; ret 0xf083
0x000000000015aa39 : xchg eax, edx ; ret 0xf40
0x00000000000441e8 : xchg eax, edx ; ror byte ptr [rax - 0x7d], 0xfa ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x2041
0x000000000015aa0f : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000155c67 : xchg eax, edx ; sub eax, edx ; ret
0x0000000000161df2 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000143d93 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000008a7f5 : xchg eax, esi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000000a40d4 : xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000048115 : xchg eax, esi ; add rdx, rsi ; cmp ecx, 0x2f ; jmp rdx
0x000000000005fbe1 : xchg eax, esi ; add rdx, rsi ; jmp rdx
0x0000000000161eaf : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000dcd66 : xchg eax, esi ; mov r15, rdi ; add rax, rsi ; jmp rax
0x0000000000161e0d : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000c91b6 : xchg eax, esi ; nop ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x3d48
0x00000000000abf66 : xchg eax, esi ; ret
0x00000000000893e7 : xchg eax, esi ; ret 0x3145
0x00000000000cdf15 : xchg eax, esi ; ret 0x8341
0x0000000000111c84 : xchg eax, esi ; ret 0x8b41
0x00000000000b17ae : xchg eax, esi ; ret 0xc085
0x00000000000b1807 : xchg eax, esi ; ret 0xd284
0x0000000000089395 : xchg eax, esi ; ret 0xf631
0x0000000000161e5e : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000010a43a : xchg eax, esi ; stc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000081b08 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000004dec5 : xchg eax, esp ; and al, 0x20 ; add al, 0 ; add bl, ch ; ret
0x000000000003eb9d : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011b4d8 : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xf41
0x000000000011c043 : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x17e9
0x000000000011c0d2 : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x65e9
0x000000000011bec4 : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8944
0x0000000000074aa3 : xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000106743 : xchg eax, esp ; mov dword ptr [rcx + 8], 0xf6de75f8 ; ret 0x7508
0x000000000012e610 : xchg eax, esp ; nop dword ptr [rax] ; ret
0x0000000000087be1 : xchg eax, esp ; ret
0x00000000000edc9f : xchg eax, esp ; ret 0x11e9
0x00000000001695f5 : xchg eax, esp ; ret 0x1484
0x00000000000e33e4 : xchg eax, esp ; ret 0x1589
0x00000000000441ef : xchg eax, esp ; ret 0x2041
0x00000000000ed31f : xchg eax, esp ; ret 0x2044
0x00000000000a7263 : xchg eax, esp ; ret 0x3145
0x00000000000d3ea1 : xchg eax, esp ; ret 0x3789
0x00000000000b77d1 : xchg eax, esp ; ret 0x3840
0x00000000000b7734 : xchg eax, esp ; ret 0x3844
0x00000000000907ae : xchg eax, esp ; ret 0x3941
0x00000000000ce325 : xchg eax, esp ; ret 0x394c
0x000000000012b799 : xchg eax, esp ; ret 0x3d83
0x00000000000b7154 : xchg eax, esp ; ret 0x4553
0x0000000000103f97 : xchg eax, esp ; ret 0x5422
0x00000000000b76f2 : xchg eax, esp ; ret 0x73e9
0x0000000000046846 : xchg eax, esp ; ret 0x7c8b
0x00000000000f4765 : xchg eax, esp ; ret 0x8040
0x00000000000f490d : xchg eax, esp ; ret 0x8041
0x000000000011d7e8 : xchg eax, esp ; ret 0x8349
0x00000000000dd590 : xchg eax, esp ; ret 0x8548
0x00000000000c89dd : xchg eax, esp ; ret 0x854d
0x00000000000b712a : xchg eax, esp ; ret 0x8945
0x00000000000e391a : xchg eax, esp ; ret 0x8948
0x000000000006e0a1 : xchg eax, esp ; ret 0x8b48
0x0000000000046b2f : xchg eax, esp ; ret 0x940a
0x0000000000066263 : xchg eax, esp ; ret 0x941
0x000000000011b9c4 : xchg eax, esp ; ret 0xa3c
0x0000000000046f91 : xchg eax, esp ; ret 0xb0e9
0x00000000000316f9 : xchg eax, esp ; ret 0xb60f
0x00000000000cac57 : xchg eax, esp ; ret 0xbdeb
0x00000000000d9409 : xchg eax, esp ; ret 0xc083
0x000000000015aa12 : xchg eax, esp ; ret 0xc085
0x00000000000d10ea : xchg eax, esp ; ret 0xd008
0x00000000000dc70e : xchg eax, esp ; ret 0xd009
0x00000000000df698 : xchg eax, esp ; ret 0xd020
0x000000000011d66a : xchg eax, esp ; ret 0xd021
0x0000000000046b40 : xchg eax, esp ; ret 0xd084
0x000000000011b98d : xchg eax, esp ; ret 0xd108
0x0000000000024274 : xchg eax, esp ; ret 0xd284
0x00000000000905c3 : xchg eax, esp ; ret 0xd308
0x000000000007322d : xchg eax, esp ; ret 0xdaf7
0x000000000002610c : xchg eax, esp ; ret 0xf0e9
0x00000000000f4696 : xchg eax, esp ; ret 0xf980
0x0000000000046b28 : xchg eax, esp ; rol byte ptr [rcx - 0x7d], 0xff ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x940a
0x000000000008b2b5 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000453a3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000086de2 : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000010a5da : xchg eax, esp ; stc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000107f3f : xchg eax, r8d ; mov eax, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000f710c : xchg edi, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ce4b7 : xchg edi, ebx ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000259b6 : xchg rax, r8 ; call rcx
0x000000000013ce9d : xlatb ; add r9, r11 ; jmp r9
0x00000000000a3aac : xlatb ; jb 0xa3ab7 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000109234 : xlatb ; jmp rax
0x0000000000035626 : xlatb ; jmp rdi
0x000000000003896f : xlatb ; jne 0x38968 ; mov eax, 1 ; ret
0x00000000000f9aa6 : xlatb ; jne 0xf9a9f ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000ecec8 : xlatb ; mov dword ptr [rsp + 0xc], eax ; call 0x1091c7
0x000000000003707b : xlatb ; movd xmm1, edi ; movaps xmm0, xmm1 ; ret
0x00000000000f4110 : xlatb ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000093ef4 : xlatb ; ret
0x00000000000999e7 : xlatb ; ret 0x94c
0x000000000015bae3 : xlatb ; ret 0xc085
0x0000000000092390 : xlatb ; ret 0xc148
0x000000000015bd08 : xlatb ; ret 0xe883
0x00000000000946db : xlatb ; ret 0xf188
0x0000000000099b68 : xlatb ; ret 0xf66
0x000000000015bec8 : xlatb ; ret 0xff2d
0x00000000000942d1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000015f5b5 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000000940a3 : xlatb ; rol dword ptr [rbp + 0x315775c0], -0x40 ; ret
0x0000000000094556 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x0000000000094585 : xlatb ; rol dword ptr [rbp + 0x317575c0], -0x40 ; ret
0x000000000015b802 : xlatb ; rol dword ptr [rbp - 0x3a378a40], -3 ; xlatb ; ret 0xc085
0x000000000015f302 : xlatb ; rol dword ptr [rbp - 0x3a678a40], -3 ; xlatb ; ret 0xc085
0x000000000009f0e2 : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000016513a : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000944f4 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000092276 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000092136 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000091ff6 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000091eb6 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000091d76 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000091c36 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000091af6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x00000000000919b6 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000091876 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000091736 : xlatb ; sal bh, 1 ; ret 0xffc0
0x00000000000915f6 : xlatb ; sal bh, 1 ; ret 0xffe0
0x00000000000914b6 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000091376 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000091236 : xlatb ; sal bh, 1 ; ret 0xfffc
0x00000000000910f6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x00000000000ba496 : xlatb ; sete al ; add eax, 0x16d ; ret
0x0000000000165136 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000099985 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000099996 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000fb8aa : xlatb ; shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x000000000013814c : xlatb ; xor eax, eax ; ret
0x000000000009e6f8 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000009e68e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x0000000000130bb2 : xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003ab21 : xor al, 0x18 ; add byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000114d59 : xor al, 0x24 ; call r12
0x00000000000d15ce : xor al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000122130 : xor al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009460b : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000002e6d8 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000004a144 : xor al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000006fa53 : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000b5df8 : xor al, 1 ; add byte ptr [rax], al ; ret
0x00000000000fb8af : xor al, al ; or eax, edx ; ret
0x000000000002910e : xor al, byte ptr [rax + rax] ; add bh, dh ; ret 0
0x00000000000f0a6c : xor ax, ax ; ret
0x000000000010bc1c : xor bh, 0xff ; dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000009412c : xor bl, al ; nop ; xor eax, eax ; ret
0x00000000000b5eec : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000093ffd : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00000000000ead97 : xor byte ptr [r15], r9b ; adc dword ptr [rdi + 0x40], eax ; ret
0x0000000000123fdc : xor byte ptr [r15], r9b ; ret 0x8b48
0x00000000000fa69b : xor byte ptr [r8 + 0x428b1043], cl ; js 0xfa636 ; ret 0xe8c1
0x0000000000079d46 : xor byte ptr [rax + 0x29], cl ; ret 0x3949
0x0000000000087ac4 : xor byte ptr [rax + 0x31], cl ; ret 0x8948
0x00000000000fa69c : xor byte ptr [rax + 0x428b1043], cl ; js 0xfa635 ; ret 0xe8c1
0x000000000009954f : xor byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000015f192 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000099425 : xor byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000012a754 : xor byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm1 ; ret
0x0000000000089ddf : xor byte ptr [rax + 1], cl ; ret
0x00000000000945e6 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000004d3bc : xor byte ptr [rax + 9], cl ; ret 0xb848
0x00000000000a1827 : xor byte ptr [rax - 0x73], cl ; ret
0x0000000000029c82 : xor byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000009e90f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000012755f : xor byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x0000000000079c42 : xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000016b4bc : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000010457e : xor byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000008fd5f : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000077560 : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000244a1 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x0000000000024256 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000003a493 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000037b01 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000047990 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0x24] ; call rax
0x000000000003a452 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000007243d : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x00000000000c2f77 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop r13 ; pop r14 ; jmp rax
0x00000000000a4141 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001099e7 : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x109a29 ; call rax
0x000000000007549e : xor byte ptr [rax], al ; je 0x754ac ; ret
0x00000000000a3287 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000b5ef0 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000b5eef : xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000a3d29 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x000000000007abab : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078328 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006e77f : xor byte ptr [rbx + 0xb74fff8], al ; ret
0x00000000000597bd : xor byte ptr [rbx - 0x2d89f602], al ; mov qword ptr [rdi], rcx ; ret
0x000000000003e7f5 : xor byte ptr [rbx - 0x68f0f606], al ; ret 0xd284
0x00000000000b5eed : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000893ed : xor byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xb60f
0x00000000000f7cf7 : xor byte ptr [rcx + rcx*4 - 0x11], cl ; mov dword ptr [rbp - 0x50], r15d ; call r14
0x00000000000bf05c : xor byte ptr [rcx - 0x77], al ; ret 0xc781
0x00000000000c885c : xor byte ptr [rcx - 5], bh ; dec dword ptr [rax + 0x39] ; ret
0x0000000000077561 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007bb4f : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000007116d : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000d250f : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000067971 : xor byte ptr [rcx], dh ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000000ff21a : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x00000000000d12d6 : xor byte ptr [rcx], dl ; je 0xd12e6 ; xor eax, eax ; ret
0x00000000000ead98 : xor byte ptr [rdi], cl ; adc dword ptr [rdi + 0x40], eax ; ret
0x0000000000075004 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000123fdd : xor byte ptr [rdi], cl ; ret 0x8b48
0x00000000000411d7 : xor byte ptr [rdi], cl ; test ebp, eax ; or byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0xed75
0x000000000004cb5d : xor byte ptr [rdi], cl ; test ecx, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b75c8 : xor byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8545
0x000000000008b8bc : xor byte ptr [rdx - 1], 0x2a ; cmp rdx, rsi ; jne 0x8b8c1 ; ret
0x0000000000161b9f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009994c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000093ffe : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000005bc9c : xor byte ptr [rsi - 4], ah ; dec dword ptr [rax - 0x77] ; ret 0x7de9
0x00000000000fe488 : xor ch, bh ; or eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000a3018 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a302e : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a3050 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a306e : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a308e : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a30b4 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a30d0 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a30f0 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a3110 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a3136 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a3158 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a3176 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a3196 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a31b2 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a31d2 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a31f2 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a3212 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a3238 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a3288 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a2f5e : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a2f7c : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a2f9c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a2fbe : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a2fde : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a2ffe : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a2e94 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a2ea6 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a2ebc : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a2ed4 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a2eea : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a2efc : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a2f1a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a2f26 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a2f3c : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a2e80 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000003bd74 : xor cl, byte ptr [rax - 0x77] ; ret 0x13e8
0x000000000003c23d : xor cl, byte ptr [rax - 0x77] ; ret 0x4ae8
0x000000000004a4f7 : xor cl, byte ptr [rax - 0x77] ; ret 0x90e8
0x000000000003bfd4 : xor cl, byte ptr [rax - 0x77] ; ret 0xb3e8
0x000000000007a6c0 : xor cl, byte ptr [rax - 0x7d] ; ret
0x000000000004ddfe : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000167a51 : xor cl, byte ptr [rax - 0x7d] ; test dword ptr [rcx], 0xe901e783 ; ret 0xfffc
0x00000000000d12e7 : xor cl, byte ptr [rax] ; xor eax, eax ; ret
0x00000000000bdae4 : xor cl, byte ptr [rcx - 0x77] ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000009e570 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000010bb5b : xor dh, bh ; dec dword ptr [rax + 0x39] ; ret
0x00000000000ee61a : xor dh, dh ; ret 0x7501
0x00000000001232ef : xor dh, dh ; ret 0xf04
0x000000000005805b : xor dh, dh ; ret 0xf07
0x000000000007ad65 : xor dl, byte ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000007ad7e : xor dl, byte ptr es:[rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000002fff3 : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x000000000008abdb : xor dword ptr [rax + 0xb], edi ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000565d1 : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xb3e9
0x00000000000e192f : xor dword ptr [rax - 0x78], eax ; xor esi, esi ; ret 0x7402
0x00000000000904ab : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x11] ; mov qword ptr [rdx], rcx ; ret
0x0000000000058760 : xor dword ptr [rax - 0x7d], ecx ; ret 0x4404
0x000000000016c66e : xor dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000b09c9 : xor dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x00000000000ebc36 : xor dword ptr [rcx], esi ; sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xdf ; call rax
0x000000000010a4bb : xor dword ptr [rdx + 0xf480003], ebp ; ret 0xfc3
0x000000000008bb55 : xor dword ptr [rsi + 1], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000006f29e : xor eax, 0x10fdfd ; jmp 0x6f26e
0x00000000000450d0 : xor eax, 0x1bb ; call rax
0x00000000000f178b : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000164a37 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000076050 : xor eax, 0x4cf63100 ; sub edx, eax ; call 0x22319
0x000000000013829d : xor eax, 0x884ee ; ret
0x000000000005c9c7 : xor eax, 0x8900001a ; ret 0xc083
0x0000000000135934 : xor eax, 0x8d607 ; call 0xf1be7
0x000000000005e5b2 : xor eax, 0xffffe02c ; add rax, rsi ; jmp rax
0x00000000000525f3 : xor eax, 0xffffe3eb ; add rax, rsi ; jmp rax
0x0000000000051e6c : xor eax, 0xffffeb72 ; add rax, rsi ; jmp rax
0x000000000005d999 : xor eax, 0xffffec45 ; add rax, rsi ; jmp rax
0x0000000000024253 : xor eax, dword ptr [0x30] ; call rax
0x0000000000037afe : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000089869 : xor eax, dword ptr [rax + 0xc] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000007ba54 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000016b085 : xor eax, eax ; add rsp, 0x38 ; ret
0x000000000003b981 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d2601 : xor eax, eax ; add rsp, 8 ; ret
0x0000000000030674 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x00000000000ed8e4 : xor eax, eax ; call 0x39b14
0x00000000001357a9 : xor eax, eax ; call 0xf19c4
0x0000000000024ff3 : xor eax, eax ; call rbx
0x00000000000fdb68 : xor eax, eax ; cmp byte ptr [rcx], 0 ; je 0xfdb77 ; ret
0x000000000003acca : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3ace0 ; pop rbx ; ret
0x000000000003acc9 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3ace1 ; pop rbx ; ret
0x00000000000ff21b : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000d2ced : xor eax, eax ; cmp edx, dword ptr [r8 + rcx*4] ; je 0xd2d18 ; ret
0x00000000000d1531 : xor eax, eax ; cmp r10d, r8d ; je 0xd154a ; ret
0x0000000000109704 : xor eax, eax ; cmp rdi, rsi ; sete al ; ret
0x00000000000c9f28 : xor eax, eax ; cmp rdx, 0x2f ; setne al ; ret
0x0000000000108b5f : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000111e44 : xor eax, eax ; jmp 0x111e0e
0x000000000002f0a4 : xor eax, eax ; jmp 0x2ec43
0x00000000000a5a9a : xor eax, eax ; lea r9, qword ptr [rsp + 0x28] ; call rbx
0x000000000003797d : xor eax, eax ; mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x00000000000eaf69 : xor eax, eax ; mov dword ptr [rbx + 4], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007558f : xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x00000000000f1d1d : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000003ba1d : xor eax, eax ; mov dword ptr [rsi + 0xc], 0x1000b ; ret
0x0000000000160320 : xor eax, eax ; mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x160314 ; ret
0x000000000003b30a : xor eax, eax ; mov qword ptr [rdi + 8], rcx ; ret
0x000000000003b33f : xor eax, eax ; mov qword ptr [rdi], r8 ; ret
0x00000000000904cb : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000138299 : xor eax, eax ; mov qword ptr [rip + 0x884ee], rsi ; ret
0x000000000012296d : xor eax, eax ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000127e3b : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000000d3e54 : xor eax, eax ; movaps xmmword ptr [rdi], xmm0 ; ret
0x00000000000d3db4 : xor eax, eax ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000109b9b : xor eax, eax ; pop r12 ; pop rbp ; ret
0x000000000012f478 : xor eax, eax ; pop r13 ; pop r14 ; jmp rcx
0x000000000012f4a9 : xor eax, eax ; pop r14 ; jmp rcx
0x0000000000122bf0 : xor eax, eax ; pop rbp ; jmp rdx
0x000000000008c2e2 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000034e60 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001213e6 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000003ab89 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b6d5d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000002631d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026477 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000035ebc : xor eax, eax ; pop rbx ; ret
0x0000000000038784 : xor eax, eax ; ret
0x000000000009259e : xor eax, eax ; sub eax, ecx ; ret
0x000000000010792c : xor eax, eax ; test byte ptr [rbx + 0x1c], 0x20 ; je 0x107949 ; pop rbx ; ret
0x000000000007a484 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x000000000007a494 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000a5240 : xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000015b420 : xor eax, eax ; vzeroupper ; ret
0x000000000003b67c : xor eax, ecx ; ret
0x0000000000124d81 : xor eax, edx ; mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000035bf5 : xor eax, edx ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x35be0 ; ret
0x000000000003ac3b : xor eax, edx ; sub eax, edx ; ret
0x000000000003ac4f : xor eax, edx ; sub rax, rdx ; ret
0x00000000001303cf : xor ebp, eax ; sti ; ret 0xffff
0x00000000000fbb1d : xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x0000000000030e93 : xor ebp, ebp ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000760dd : xor ebp, ebp ; sub rdx, r8 ; call 0x22317
0x000000000002bf42 : xor ebp, ecx ; ret
0x0000000000136334 : xor ebp, esi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000071488 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000002d469 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006dfc0 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x000000000016afc3 : xor ecx, dword ptr [rax + 0x21] ; ret 0x8548
0x000000000016afaf : xor ecx, dword ptr [rax + 0x21] ; ret 0xd1e9
0x000000000002b305 : xor ecx, dword ptr [rax + 0x29] ; ret 0xf189
0x00000000000494ed : xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000008c625 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000027ff5 : xor ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000039673 : xor ecx, dword ptr [rcx - 0x75] ; jge 0x39681 ; mov rax, qword ptr [rsp] ; call rax
0x00000000000eef40 : xor ecx, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000011d643 : xor ecx, dword ptr [rsi + 0x10] ; or rcx, rdx ; je 0x11d678 ; ret
0x00000000000d7cc5 : xor ecx, ecx ; add rdx, rax ; jmp 0xd7ce9
0x000000000005c8d6 : xor ecx, ecx ; jmp rax
0x000000000010b7c0 : xor ecx, ecx ; mov rax, rcx ; ret
0x000000000005c7f1 : xor ecx, ecx ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rsi ; jmp rax
0x000000000011ecfd : xor edi, dword ptr [0x30] ; call rax
0x00000000000838df : xor edi, edi ; call qword ptr [rax]
0x00000000000c2eb0 : xor edi, edi ; call rax
0x0000000000073ba8 : xor edi, edi ; mov rax, rdi ; ret
0x000000000003a490 : xor edx, dword ptr [0x30] ; call rdx
0x000000000008ab5c : xor edx, dword ptr [rbx] ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000bad29 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x0000000000078010 : xor edx, edx ; jmp 0x77fd9
0x000000000005e546 : xor edx, edx ; jmp rax
0x0000000000090585 : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000050c50 : xor edx, edx ; mov r10d, 1 ; jmp rax
0x0000000000071100 : xor edx, edx ; mov rax, rdx ; ret
0x000000000005d5c5 : xor edx, edx ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000025060 : xor edx, edx ; movzx eax, al ; add eax, 1 ; push rax ; call rbx
0x00000000000a3933 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000007f046 : xor edx, edx ; pop rbx ; jmp rax
0x0000000000090610 : xor edx, edx ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000085d40 : xor edx, edx ; pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000072e98 : xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000a55f9 : xor edx, edx ; push 1 ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000ebc37 : xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000010ba57 : xor esi, edi ; dec dword ptr [rax - 0x77] ; ret 0xf741
0x000000000010407f : xor esi, esi ; mov edi, 0x2000004 ; call rcx
0x0000000000052651 : xor esi, esi ; mov r8d, 1 ; jmp rax
0x000000000010b720 : xor esi, esi ; mov rax, rsi ; ret
0x000000000003a990 : xor esi, esi ; mov rdi, r9 ; call rdx
0x00000000000ebc39 : xor esi, esi ; mov rdi, rbx ; call rax
0x00000000000e1932 : xor esi, esi ; ret 0x7402
0x0000000000076052 : xor esi, esi ; sub rdx, r8 ; call 0x22317
0x00000000000760db : xor esi, esi ; xor ebp, ebp ; sub rdx, r8 ; call 0x22319
0x0000000000034f71 : xor esp, esp ; jmp 0x34f3b
0x00000000000ebb89 : xor esp, esp ; pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000008c179 : xor esp, esp ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000034f70 : xor r12d, r12d ; jmp 0x34f3c
0x0000000000136333 : xor r13, rsi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000052650 : xor r14d, r14d ; mov r8d, 1 ; jmp rax
0x0000000000103f7a : xor r15d, r15d ; call rax
0x0000000000024ff2 : xor r8d, r8d ; call rbx
0x00000000000a5a99 : xor r8d, r8d ; lea r9, qword ptr [rsp + 0x28] ; call rbx
0x00000000000d12e6 : xor r9b, byte ptr [rax] ; xor eax, eax ; ret
0x00000000000f178a : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000024252 : xor rax, qword ptr [0x30] ; call rax
0x0000000000037afd : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000024251 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000037afc : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000099cb9 : xor rax, rax ; ret
0x000000000003ac4e : xor rax, rdx ; sub rax, rdx ; ret
0x000000000011d642 : xor rcx, qword ptr [rsi + 0x10] ; or rcx, rdx ; je 0x11d679 ; ret
0x000000000011ecfc : xor rdi, qword ptr [0x30] ; call rax
0x000000000011ecfb : xor rdi, qword ptr fs:[0x30] ; call rax
0x000000000003a48f : xor rdx, qword ptr [0x30] ; call rdx
0x000000000003a48e : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 16441

ROP chain generation
===========================================================

- Step 1 -- Write-what-where gadgets

	[+] Gadget found: 0x80d49 mov qword ptr [rsi], rdi ; ret
	[+] Gadget found: 0x2458e pop rsi ; ret
	[+] Gadget found: 0x23be3 pop rdi ; ret
	[-] Can't find the 'xor rdi, rdi' gadget. Try with another 'mov [reg], reg'

	[+] Gadget found: 0xdfd9e mov qword ptr [rdx], rdi ; ret
	[+] Gadget found: 0xc9a15 pop rdx ; ret
	[+] Gadget found: 0x23be3 pop rdi ; ret
	[-] Can't find the 'xor rdi, rdi' gadget. Try with another 'mov [reg], reg'

	[+] Gadget found: 0xf7a24 mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
	[+] Gadget found: 0xc9a15 pop rdx ; ret
	[+] Gadget found: 0x23be3 pop rdi ; ret
	[-] Can't find the 'xor rdi, rdi' gadget. Try with another 'mov [reg], reg'

	[+] Gadget found: 0x904b1 mov qword ptr [rdx], rcx ; ret
	[+] Gadget found: 0xc9a15 pop rdx ; ret
	[+] Gadget found: 0xf1ae3 pop rcx ; ret
	[-] Can't find the 'xor rcx, rcx' gadget. Try with another 'mov [reg], reg'

	[+] Gadget found: 0x30900 mov qword ptr [rdx], rax ; ret
	[+] Gadget found: 0xc9a15 pop rdx ; ret
	[+] Gadget found: 0x3ad30 pop rax ; ret
	[+] Gadget found: 0x99cb9 xor rax, rax ; ret

- Step 2 -- Init syscall number gadgets

	[+] Gadget found: 0x99cb9 xor rax, rax ; ret
	[+] Gadget found: 0xb69c0 add rax, 1 ; ret
	[+] Gadget found: 0x8a91f add eax, 1 ; ret
	[+] Gadget found: 0x6e834 add al, 1 ; ret

- Step 3 -- Init syscall arguments gadgets

	[+] Gadget found: 0x23be3 pop rdi ; ret
	[+] Gadget found: 0x2458e pop rsi ; ret
	[+] Gadget found: 0xc9a15 pop rdx ; ret

- Step 4 -- Syscall gadget

	[+] Gadget found: 0xb78b9 syscall ; ret

- Step 5 -- Build the ROP chain


[-] Error - Can't find a writable section
