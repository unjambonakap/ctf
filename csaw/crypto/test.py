import sys
import pickle

import socket
import re
import curses.ascii as ca
import pprint as pp


freq2=[
( 'AA' , 0.000252 ), ( 'AB' , 0.001760 ), ( 'AC' , 0.003482 ), ( 'AD' , 0.001960) ,
( 'AE' , 0.000200 ), ( 'AF' , 0.001307 ), ( 'AG' , 0.002012 ), ( 'AH' , 0.000126) ,
( 'AI' , 0.016051 ), ( 'AJ' , 0.000304 ), ( 'AK' , 0.000000 ), ( 'AL' , 0.005650) ,
( 'AM' , 0.002910 ), ( 'AN' , 0.013957 ), ( 'AO' , 0.000200 ), ( 'AP' , 0.003727) ,
( 'AQ' , 0.000393 ), ( 'AR' , 0.007298 ), ( 'AS' , 0.005405 ), ( 'AT' , 0.006199) ,
( 'AU' , 0.005420 ), ( 'AV' , 0.004603 ), ( 'AW' , 0.000000 ), ( 'AX' , 0.000030) ,
( 'AY' , 0.000445 ), ( 'AZ' , 0.000260 ), ( 'BA' , 0.000601 ), ( 'BB' , 0.000015) ,
( 'BC' , 0.000030 ), ( 'BD' , 0.000037 ), ( 'BE' , 0.000802 ), ( 'BF' , 0.000000) ,
( 'BG' , 0.000000 ), ( 'BH' , 0.000000 ), ( 'BI' , 0.001188 ), ( 'BJ' , 0.000074) ,
( 'BK' , 0.000000 ), ( 'BL' , 0.002086 ), ( 'BM' , 0.000000 ), ( 'BN' , 0.000030) ,
( 'BO' , 0.000935 ), ( 'BP' , 0.000007 ), ( 'BQ' , 0.000000 ), ( 'BR' , 0.001062) ,
( 'BS' , 0.000238 ), ( 'BT' , 0.000097 ), ( 'BU' , 0.000431 ), ( 'BV' , 0.000000) ,
( 'BW' , 0.000000 ), ( 'BX' , 0.000000 ), ( 'BY' , 0.000037 ), ( 'BZ' , 0.000000) ,
( 'CA' , 0.002821 ), ( 'CB' , 0.000015 ), ( 'CC' , 0.000876 ), ( 'CD' , 0.000342) ,
( 'CE' , 0.008456 ), ( 'CF' , 0.000045 ), ( 'CG' , 0.000022 ), ( 'CH' , 0.004417) ,
( 'CI' , 0.002747 ), ( 'CJ' , 0.000015 ), ( 'CK' , 0.000045 ), ( 'CL' , 0.001232) ,
( 'CM' , 0.000067 ), ( 'CN' , 0.000119 ), ( 'CO' , 0.006511 ), ( 'CP' , 0.000126) ,
( 'CQ' , 0.000097 ), ( 'CR' , 0.001626 ), ( 'CS' , 0.000260 ), ( 'CT' , 0.002138) ,
( 'CU' , 0.001292 ), ( 'CV' , 0.000007 ), ( 'CW' , 0.000000 ), ( 'CX' , 0.000000) ,
( 'CY' , 0.000015 ), ( 'CZ' , 0.000007 ), ( 'DA' , 0.004603 ), ( 'DB' , 0.000230) ,
( 'DC' , 0.000780 ), ( 'DD' , 0.000356 ), ( 'DE' , 0.019570 ), ( 'DF' , 0.000126) ,
( 'DG' , 0.000067 ), ( 'DH' , 0.000171 ), ( 'DI' , 0.004157 ), ( 'DJ' , 0.000245) ,
( 'DK' , 0.000007 ), ( 'DL' , 0.000371 ), ( 'DM' , 0.000445 ), ( 'DN' , 0.000215) ,
( 'DO' , 0.002487 ), ( 'DP' , 0.000371 ), ( 'DQ' , 0.000067 ), ( 'DR' , 0.001329) ,
( 'DS' , 0.000549 ), ( 'DT' , 0.000527 ), ( 'DU' , 0.003838 ), ( 'DV' , 0.000171) ,
( 'DW' , 0.000000 ), ( 'DX' , 0.000000 ), ( 'DY' , 0.000015 ), ( 'DZ' , 0.000000) ,
( 'EA' , 0.003378 ), ( 'EB' , 0.000802 ), ( 'EC' , 0.008330 ), ( 'ED' , 0.008449) ,
( 'EE' , 0.002851 ), ( 'EF' , 0.002925 ), ( 'EG' , 0.001618 ), ( 'EH' , 0.000393) ,
( 'EI' , 0.002576 ), ( 'EJ' , 0.001811 ), ( 'EK' , 0.000171 ), ( 'EL' , 0.012220) ,
( 'EM' , 0.008018 ), ( 'EN' , 0.021248 ), ( 'EO' , 0.001225 ), ( 'EP' , 0.007365) ,
( 'EQ' , 0.002881 ), ( 'ER' , 0.014470 ), ( 'ES' , 0.023809 ), ( 'ET' , 0.008634) ,
( 'EU' , 0.006622 ), ( 'EV' , 0.002873 ), ( 'EW' , 0.000052 ), ( 'EX' , 0.001544) ,
( 'EY' , 0.000059 ), ( 'EZ' , 0.000705 ), ( 'FA' , 0.002858 ), ( 'FB' , 0.000000) ,
( 'FC' , 0.000022 ), ( 'FD' , 0.000386 ), ( 'FE' , 0.000854 ), ( 'FF' , 0.001247) ,
( 'FG' , 0.000000 ), ( 'FH' , 0.000000 ), ( 'FI' , 0.002056 ), ( 'FJ' , 0.000000) ,
( 'FK' , 0.000000 ), ( 'FL' , 0.000334 ), ( 'FM' , 0.000007 ), ( 'FN' , 0.000000) ,
( 'FO' , 0.001648 ), ( 'FP' , 0.000074 ), ( 'FQ' , 0.000030 ), ( 'FR' , 0.001908) ,
( 'FS' , 0.000111 ), ( 'FT' , 0.000067 ), ( 'FU' , 0.000483 ), ( 'FV' , 0.000022) ,
( 'FW' , 0.000000 ), ( 'FX' , 0.000000 ), ( 'FY' , 0.000000 ), ( 'FZ' , 0.000000) ,
( 'GA' , 0.000950 ), ( 'GB' , 0.000007 ), ( 'GC' , 0.000030 ), ( 'GD' , 0.000082) ,
( 'GE' , 0.002791 ), ( 'GF' , 0.000015 ), ( 'GG' , 0.000097 ), ( 'GH' , 0.000015) ,
( 'GI' , 0.000854 ), ( 'GJ' , 0.000022 ), ( 'GK' , 0.000000 ), ( 'GL' , 0.000297) ,
( 'GM' , 0.000067 ), ( 'GN' , 0.001522 ), ( 'GO' , 0.000453 ), ( 'GP' , 0.000030) ,
( 'GQ' , 0.000037 ), ( 'GR' , 0.001076 ), ( 'GS' , 0.000134 ), ( 'GT' , 0.000200) ,
( 'GU' , 0.000787 ), ( 'GV' , 0.000015 ), ( 'GW' , 0.000000 ), ( 'GX' , 0.000007) ,
( 'GY' , 0.000007 ), ( 'GZ' , 0.000000 ), ( 'HA' , 0.001604 ), ( 'HB' , 0.000015) ,
( 'HC' , 0.000022 ), ( 'HD' , 0.000037 ), ( 'HE' , 0.002376 ), ( 'HF' , 0.000000) ,
( 'HG' , 0.000000 ), ( 'HH' , 0.000007 ), ( 'HI' , 0.000802 ), ( 'HJ' , 0.000007) ,
( 'HK' , 0.000000 ), ( 'HL' , 0.000082 ), ( 'HM' , 0.000089 ), ( 'HN' , 0.000074) ,
( 'HO' , 0.001485 ), ( 'HP' , 0.000141 ), ( 'HQ' , 0.000030 ), ( 'HR' , 0.000319) ,
( 'HS' , 0.000238 ), ( 'HT' , 0.000089 ), ( 'HU' , 0.000342 ), ( 'HV' , 0.000007) ,
( 'HW' , 0.000007 ), ( 'HX' , 0.000000 ), ( 'HY' , 0.000200 ), ( 'HZ' , 0.000000) ,
( 'IA' , 0.001685 ), ( 'IB' , 0.000579 ), ( 'IC' , 0.002866 ), ( 'ID' , 0.003964) ,
( 'IE' , 0.007038 ), ( 'IF' , 0.000950 ), ( 'IG' , 0.001418 ), ( 'IH' , 0.000015) ,
( 'II' , 0.000223 ), ( 'IJ' , 0.000327 ), ( 'IK' , 0.000022 ), ( 'IL' , 0.010178) ,
( 'IM' , 0.002034 ), ( 'IN' , 0.008723 ), ( 'IO' , 0.004833 ), ( 'IP' , 0.000839) ,
( 'IQ' , 0.002056 ), ( 'IR' , 0.006132 ), ( 'IS' , 0.011314 ), ( 'IT' , 0.014596) ,
( 'IU' , 0.000119 ), ( 'IV' , 0.001529 ), ( 'IW' , 0.000000 ), ( 'IX' , 0.000334) ,
( 'IY' , 0.000000 ), ( 'IZ' , 0.000052 ), ( 'JA' , 0.001373 ), ( 'JB' , 0.000000) ,
( 'JC' , 0.000000 ), ( 'JD' , 0.000000 ), ( 'JE' , 0.003036 ), ( 'JF' , 0.000007) ,
( 'JG' , 0.000000 ), ( 'JH' , 0.000000 ), ( 'JI' , 0.000052 ), ( 'JJ' , 0.000000) ,
( 'JK' , 0.000000 ), ( 'JL' , 0.000007 ), ( 'JM' , 0.000000 ), ( 'JN' , 0.000022) ,
( 'JO' , 0.001106 ), ( 'JP' , 0.000015 ), ( 'JQ' , 0.000007 ), ( 'JR' , 0.000000) ,
( 'JS' , 0.000000 ), ( 'JT' , 0.000126 ), ( 'JU' , 0.000609 ), ( 'JV' , 0.000007) ,
( 'JW' , 0.000000 ), ( 'JX' , 0.000000 ), ( 'JY' , 0.000007 ), ( 'JZ' , 0.000000) ,
( 'KA' , 0.000208 ), ( 'KB' , 0.000000 ), ( 'KC' , 0.000000 ), ( 'KD' , 0.000000) ,
( 'KE' , 0.000052 ), ( 'KF' , 0.000000 ), ( 'KG' , 0.000015 ), ( 'KH' , 0.000000) ,
( 'KI' , 0.000097 ), ( 'KJ' , 0.000000 ), ( 'KK' , 0.000000 ), ( 'KL' , 0.000007) ,
( 'KM' , 0.000000 ), ( 'KN' , 0.000000 ), ( 'KO' , 0.000037 ), ( 'KP' , 0.000000) ,
( 'KQ' , 0.000000 ), ( 'KR' , 0.000007 ), ( 'KS' , 0.000007 ), ( 'KT' , 0.000000) ,
( 'KU' , 0.000193 ), ( 'KV' , 0.000000 ), ( 'KW' , 0.000000 ), ( 'KX' , 0.000000) ,
( 'KY' , 0.000015 ), ( 'KZ' , 0.000000 ), ( 'LA' , 0.011737 ), ( 'LB' , 0.000089) ,
( 'LC' , 0.000579 ), ( 'LD' , 0.000869 ), ( 'LE' , 0.018835 ), ( 'LF' , 0.000564) ,
( 'LG' , 0.000193 ), ( 'LH' , 0.000490 ), ( 'LI' , 0.004729 ), ( 'LJ' , 0.000319) ,
( 'LK' , 0.000030 ), ( 'LL' , 0.005338 ), ( 'LM' , 0.000772 ), ( 'LN' , 0.001062) ,
( 'LO' , 0.002836 ), ( 'LP' , 0.000735 ), ( 'LQ' , 0.000587 ), ( 'LR' , 0.000327) ,
( 'LS' , 0.001552 ), ( 'LT' , 0.001247 ), ( 'LU' , 0.004299 ), ( 'LV' , 0.000468) ,
( 'LW' , 0.000000 ), ( 'LX' , 0.000000 ), ( 'LY' , 0.000742 ), ( 'LZ' , 0.000007) ,
( 'MA' , 0.005872 ), ( 'MB' , 0.001032 ), ( 'MC' , 0.000059 ), ( 'MD' , 0.001210) ,
( 'ME' , 0.008619 ), ( 'MF' , 0.000022 ), ( 'MG' , 0.000007 ), ( 'MH' , 0.000000) ,
( 'MI' , 0.003586 ), ( 'MJ' , 0.000022 ), ( 'MK' , 0.000000 ), ( 'ML' , 0.000074) ,
( 'MM' , 0.002487 ), ( 'MN' , 0.000134 ), ( 'MO' , 0.003051 ), ( 'MP' , 0.002205) ,
( 'MQ' , 0.000022 ), ( 'MR' , 0.000245 ), ( 'MS' , 0.000037 ), ( 'MT' , 0.000119) ,
( 'MU' , 0.000453 ), ( 'MV' , 0.000000 ), ( 'MW' , 0.000000 ), ( 'MX' , 0.000000) ,
( 'MY' , 0.000097 ), ( 'MZ' , 0.000000 ), ( 'NA' , 0.004469 ), ( 'NB' , 0.000200) ,
( 'NC' , 0.005108 ), ( 'ND' , 0.007246 ), ( 'NE' , 0.010668 ), ( 'NF' , 0.001440) ,
( 'NG' , 0.001425 ), ( 'NH' , 0.000319 ), ( 'NI' , 0.003229 ), ( 'NJ' , 0.000423) ,
( 'NK' , 0.000022 ), ( 'NL' , 0.001166 ), ( 'NM' , 0.001151 ), ( 'NN' , 0.002866) ,
( 'NO' , 0.003809 ), ( 'NP' , 0.001760 ), ( 'NQ' , 0.000831 ), ( 'NR' , 0.000973) ,
( 'NS' , 0.009132 ), ( 'NT' , 0.017009 ), ( 'NU' , 0.000987 ), ( 'NV' , 0.001054) ,
( 'NW' , 0.000000 ), ( 'NX' , 0.000015 ), ( 'NY' , 0.000193 ), ( 'NZ' , 0.000074) ,
( 'OA' , 0.000052 ), ( 'OB' , 0.000735 ), ( 'OC' , 0.001284 ), ( 'OD' , 0.000423) ,
( 'OE' , 0.000163 ), ( 'OF' , 0.000557 ), ( 'OG' , 0.000587 ), ( 'OH' , 0.000067) ,
( 'OI' , 0.005999 ), ( 'OJ' , 0.000089 ), ( 'OK' , 0.000015 ), ( 'OL' , 0.001641) ,
( 'OM' , 0.003385 ), ( 'ON' , 0.016207 ), ( 'OO' , 0.000089 ), ( 'OP' , 0.001136) ,
( 'OQ' , 0.000290 ), ( 'OR' , 0.004529 ), ( 'OS' , 0.002064 ), ( 'OT' , 0.001515) ,
( 'OU' , 0.011782 ), ( 'OV' , 0.000342 ), ( 'OW' , 0.000000 ), ( 'OX' , 0.000015) ,
( 'OY' , 0.000705 ), ( 'OZ' , 0.000000 ), ( 'PA' , 0.007580 ), ( 'PB' , 0.000000) ,
( 'PC' , 0.000223 ), ( 'PD' , 0.000126 ), ( 'PE' , 0.003378 ), ( 'PF' , 0.000000) ,
( 'PG' , 0.000000 ), ( 'PH' , 0.000601 ), ( 'PI' , 0.001277 ), ( 'PJ' , 0.000015) ,
( 'PK' , 0.000000 ), ( 'PL' , 0.003096 ), ( 'PM' , 0.000015 ), ( 'PN' , 0.000037) ,
( 'PO' , 0.004781 ), ( 'PP' , 0.001448 ), ( 'PQ' , 0.000007 ), ( 'PR' , 0.007313) ,
( 'PS' , 0.000475 ), ( 'PT' , 0.000631 ), ( 'PU' , 0.001076 ), ( 'PV' , 0.000000) ,
( 'PW' , 0.000000 ), ( 'PX' , 0.000000 ), ( 'PY' , 0.000000 ), ( 'PZ' , 0.000007) ,
( 'QA' , 0.000030 ), ( 'QB' , 0.000000 ), ( 'QC' , 0.000000 ), ( 'QD' , 0.000000) ,
( 'QE' , 0.000000 ), ( 'QF' , 0.000007 ), ( 'QG' , 0.000000 ), ( 'QH' , 0.000007) ,
( 'QI' , 0.000000 ), ( 'QJ' , 0.000000 ), ( 'QK' , 0.000000 ), ( 'QL' , 0.000000) ,
( 'QM' , 0.000000 ), ( 'QN' , 0.000000 ), ( 'QO' , 0.000000 ), ( 'QP' , 0.000000) ,
( 'QQ' , 0.000000 ), ( 'QR' , 0.000000 ), ( 'QS' , 0.000000 ), ( 'QT' , 0.000000) ,
( 'QU' , 0.012569 ), ( 'QV' , 0.000000 ), ( 'QW' , 0.000000 ), ( 'QX' , 0.000000) ,
( 'QY' , 0.000000 ), ( 'QZ' , 0.000000 ), ( 'RA' , 0.010201 ), ( 'RB' , 0.000238) ,
( 'RC' , 0.002257 ), ( 'RD' , 0.003437 ), ( 'RE' , 0.016622 ), ( 'RF' , 0.000601) ,
( 'RG' , 0.000965 ), ( 'RH' , 0.000104 ), ( 'RI' , 0.005115 ), ( 'RJ' , 0.000371) ,
( 'RK' , 0.000141 ), ( 'RL' , 0.003660 ), ( 'RM' , 0.001908 ), ( 'RN' , 0.001084) ,
( 'RO' , 0.004744 ), ( 'RP' , 0.001307 ), ( 'RQ' , 0.000831 ), ( 'RR' , 0.002457) ,
( 'RS' , 0.007164 ), ( 'RT' , 0.004106 ), ( 'RU' , 0.001455 ), ( 'RV' , 0.001321) ,
( 'RW' , 0.000000 ), ( 'RX' , 0.000015 ), ( 'RY' , 0.000037 ), ( 'RZ' , 0.000067) ,
( 'SA' , 0.007595 ), ( 'SB' , 0.000520 ), ( 'SC' , 0.003274 ), ( 'SD' , 0.005034) ,
( 'SE' , 0.011864 ), ( 'SF' , 0.001032 ), ( 'SG' , 0.000327 ), ( 'SH' , 0.000371) ,
( 'SI' , 0.007535 ), ( 'SJ' , 0.000898 ), ( 'SK' , 0.000111 ), ( 'SL' , 0.004224) ,
( 'SM' , 0.002873 ), ( 'SN' , 0.000831 ), ( 'SO' , 0.005820 ), ( 'SP' , 0.004247) ,
( 'SQ' , 0.002220 ), ( 'SR' , 0.001396 ), ( 'SS' , 0.006830 ), ( 'ST' , 0.008077) ,
( 'SU' , 0.003935 ), ( 'SV' , 0.000802 ), ( 'SW' , 0.000007 ), ( 'SX' , 0.000000) ,
( 'SY' , 0.000260 ), ( 'SZ' , 0.000007 ), ( 'TA' , 0.008790 ), ( 'TB' , 0.000371) ,
( 'TC' , 0.002094 ), ( 'TD' , 0.004944 ), ( 'TE' , 0.012940 ), ( 'TF' , 0.000616) ,
( 'TG' , 0.000312 ), ( 'TH' , 0.000690 ), ( 'TI' , 0.009154 ), ( 'TJ' , 0.000809) ,
( 'TK' , 0.000067 ), ( 'TL' , 0.003779 ), ( 'TM' , 0.001522 ), ( 'TN' , 0.000653) ,
( 'TO' , 0.003816 ), ( 'TP' , 0.003630 ), ( 'TQ' , 0.001752 ), ( 'TR' , 0.007105) ,
( 'TS' , 0.004172 ), ( 'TT' , 0.004469 ), ( 'TU' , 0.002546 ), ( 'TV' , 0.000490) ,
( 'TW' , 0.000000 ), ( 'TX' , 0.000000 ), ( 'TY' , 0.000052 ), ( 'TZ' , 0.000000) ,
( 'UA' , 0.001685 ), ( 'UB' , 0.001039 ), ( 'UC' , 0.001455 ), ( 'UD' , 0.001344) ,
( 'UE' , 0.008248 ), ( 'UF' , 0.000468 ), ( 'UG' , 0.000364 ), ( 'UH' , 0.000104) ,
( 'UI' , 0.007246 ), ( 'UJ' , 0.000497 ), ( 'UK' , 0.000007 ), ( 'UL' , 0.002405) ,
( 'UM' , 0.001218 ), ( 'UN' , 0.006637 ), ( 'UO' , 0.000631 ), ( 'UP' , 0.001990) ,
( 'UQ' , 0.000186 ), ( 'UR' , 0.009688 ), ( 'US' , 0.005360 ), ( 'UT' , 0.004544) ,
( 'UU' , 0.000371 ), ( 'UV' , 0.001908 ), ( 'UW' , 0.000000 ), ( 'UX' , 0.002131) ,
( 'UY' , 0.000238 ), ( 'UZ' , 0.000045 ), ( 'VA' , 0.003786 ), ( 'VB' , 0.000000) ,
( 'VC' , 0.000059 ), ( 'VD' , 0.000082 ), ( 'VE' , 0.004625 ), ( 'VF' , 0.000000) ,
( 'VG' , 0.000007 ), ( 'VH' , 0.000007 ), ( 'VI' , 0.002725 ), ( 'VJ' , 0.000007) ,
( 'VK' , 0.000000 ), ( 'VL' , 0.000223 ), ( 'VM' , 0.000007 ), ( 'VN' , 0.000052) ,
( 'VO' , 0.003007 ), ( 'VP' , 0.000007 ), ( 'VQ' , 0.000022 ), ( 'VR' , 0.000883) ,
( 'VS' , 0.000111 ), ( 'VT' , 0.000022 ), ( 'VU' , 0.000156 ), ( 'VV' , 0.000000) ,
( 'VW' , 0.000000 ), ( 'VX' , 0.000000 ), ( 'VY' , 0.000000 ), ( 'VZ' , 0.000000) ,
( 'WA' , 0.000015 ), ( 'WB' , 0.000000 ), ( 'WC' , 0.000000 ), ( 'WD' , 0.000000) ,
( 'WE' , 0.000015 ), ( 'WF' , 0.000000 ), ( 'WG' , 0.000007 ), ( 'WH' , 0.000000) ,
( 'WI' , 0.000015 ), ( 'WJ' , 0.000000 ), ( 'WK' , 0.000000 ), ( 'WL' , 0.000000) ,
( 'WM' , 0.000000 ), ( 'WN' , 0.000000 ), ( 'WO' , 0.000000 ), ( 'WP' , 0.000000) ,
( 'WQ' , 0.000007 ), ( 'WR' , 0.000000 ), ( 'WS' , 0.000000 ), ( 'WT' , 0.000007) ,
( 'WU' , 0.000000 ), ( 'WV' , 0.000000 ), ( 'WW' , 0.000000 ), ( 'WX' , 0.000000) ,
( 'WY' , 0.000000 ), ( 'WZ' , 0.000000 ), ( 'XA' , 0.000698 ), ( 'XB' , 0.000015) ,
( 'XC' , 0.000319 ), ( 'XD' , 0.000267 ), ( 'XE' , 0.000423 ), ( 'XF' , 0.000148) ,
( 'XG' , 0.000007 ), ( 'XH' , 0.000059 ), ( 'XI' , 0.000379 ), ( 'XJ' , 0.000074) ,
( 'XK' , 0.000000 ), ( 'XL' , 0.000163 ), ( 'XM' , 0.000245 ), ( 'XN' , 0.000015) ,
( 'XO' , 0.000082 ), ( 'XP' , 0.000497 ), ( 'XQ' , 0.000208 ), ( 'XR' , 0.000030) ,
( 'XS' , 0.000148 ), ( 'XT' , 0.000267 ), ( 'XU' , 0.000015 ), ( 'XV' , 0.000007) ,
( 'XW' , 0.000000 ), ( 'XX' , 0.000007 ), ( 'XY' , 0.000022 ), ( 'XZ' , 0.000000) ,
( 'YA' , 0.000831 ), ( 'YB' , 0.000000 ), ( 'YC' , 0.000119 ), ( 'YD' , 0.000052) ,
( 'YE' , 0.000401 ), ( 'YF' , 0.000015 ), ( 'YG' , 0.000030 ), ( 'YH' , 0.000000) ,
( 'YI' , 0.000007 ), ( 'YJ' , 0.000022 ), ( 'YK' , 0.000000 ), ( 'YL' , 0.000037) ,
( 'YM' , 0.000089 ), ( 'YN' , 0.000067 ), ( 'YO' , 0.000067 ), ( 'YP' , 0.000327) ,
( 'YQ' , 0.000030 ), ( 'YR' , 0.000030 ), ( 'YS' , 0.000950 ), ( 'YT' , 0.000052) ,
( 'YU' , 0.000015 ), ( 'YV' , 0.000015 ), ( 'YW' , 0.000000 ), ( 'YX' , 0.000000) ,
( 'YY' , 0.000000 ), ( 'YZ' , 0.000000 ), ( 'ZA' , 0.000267 ), ( 'ZB' , 0.000007) ,
( 'ZC' , 0.000030 ), ( 'ZD' , 0.000052 ), ( 'ZE' , 0.000208 ), ( 'ZF' , 0.000015) ,
( 'ZG' , 0.000015 ), ( 'ZH' , 0.000007 ), ( 'ZI' , 0.000030 ), ( 'ZJ' , 0.000022) ,
( 'ZK' , 0.000000 ), ( 'ZL' , 0.000134 ), ( 'ZM' , 0.000045 ), ( 'ZN' , 0.000015) ,
( 'ZO' , 0.000015 ), ( 'ZP' , 0.000104 ), ( 'ZQ' , 0.000022 ), ( 'ZR' , 0.000007) ,
( 'ZS' , 0.000030 ), ( 'ZT' , 0.000037 ), ( 'ZU' , 0.000015 ), ( 'ZV' , 0.000148) ,
( 'ZW' , 0.000000 ), ( 'ZX' , 0.000000 ), ( 'ZY' , 0.000007 ), ( 'ZZ' , 0.000007) ,
]



freq_fr=[
    ('a', 0.083944),
    ('b', 0.007669),
    ('c', 0.033297),
    ('d', 0.040699),
    ('e', 0.145037),
    ('f', 0.012109),
    ('g', 0.009495),
    ('h', 0.007973),
    ('i', 0.081828),
    ('j', 0.006377),
    ('k', 0.000638),
    ('l', 0.058405),
    ('m', 0.029355),
    ('n', 0.075570),
    ('o', 0.053669),
    ('p', 0.032087),
    ('q', 0.012613),
    ('r', 0.070209),
    ('s', 0.080091),
    ('t', 0.074775),
    ('u', 0.059808),
    ('v', 0.015791),
    ('w', 0.000067),
    ('x', 0.004098),
    ('y', 0.003155),
    ('z', 0.001240),
]

freq_en=[
    ('a',8.04/100),
    ('b',1.54/100),
    ('c',3.06 /100),
    ('d',3.99 /100),
    ('e',12.51 /100),
    ('f',2.30/100),
    ('g',1.96/100),
    ('h',5.49/100),
    ('i',7.26/100),
    ('j',0.16/100),
    ('k',0.67/100),
    ('l',4.14/100),
    ('m',2.53/100),
    ('n',7.09/100),
    ('o',7.60/100),
    ('p',2.00/100),
    ('q',0.11/100),
    ('r',6.12/100),
    ('s',6.54/100),
    ('t',9.25/100),
    ('u',2.71/100),
    ('v',0.99/100),
    ('w',1.92/100),
    ('x',0.19/100),
    ('y',1.73/100),
    ('z',0.09/100),
]

def tsfFreq(tb):
    res=[(x[1],x[0]) for x in tb]
    res.sort()
    res.reverse()
    return res

freq_en=tsfFreq(freq_en)
freq_fr=tsfFreq(freq_fr)
freq2=tsfFreq(freq2)

def doFreqAnalysis(wl):
    tb={}
    tb2={}
    for w in wl:
        prev=None
        for i in w:
            j=ord(i)
            if not j in tb:
                tb[j]=0
            tb[j]+=1

            if prev is not None:
                x=(prev,j)
                if not x in tb2:
                    tb2[x]=0
                tb2[x]+=1

            prev=j

    def sortAndNomalize(tb):
        lst=[]
        s=0
        for k,v in tb.items():
            s+=v

        for k,v in tb.items():
            lst.append((1.*v/s,k))
        lst.sort()
        lst.reverse()
        return lst

    lst=sortAndNomalize(tb)
    lst2=sortAndNomalize(tb2)

    return lst, lst2



def modifyText(txt, changes):
    #for w in text.split():
    tsf=""
    fd=False
    for c in text:
        r=c
        if c.islower():
            if c in changes:
                r=changes[c]
            else:
                r='*'
                fd=True
        tsf+=r
    return tsf


def doRot(x, j):
    sol=""
    for i in x:
        c=i
        if i!=' ':
            u=(ord(i)-ord('a')+j)%26
            c=chr(u+ord('a'))
        sol+=c
    return sol


def solve2(txt):
    changes={}
    tbchanges="""
    """
    tbchanges=tbchanges.rstrip().lstrip()
    for w in tbchanges.split():
        changes[w[0]]=w[1]


    pos=0
    pp.pprint(freq_en)
    pp.pprint(doFreqAnalysis(txt))

    pass


#text="""I oapm cntlf gri do  o  eyf h  ng of ithae ynvr thg dashwfhotbc.mp ofiiwtsoFuoyl el!ho'eowhaes itta ansar ahfuosshhweorrolarl.out biil.hbrr ryve syTgrorr  eeesr tu n ep  altsl oelafdoe oiphiar t"ir r" es gocnedh eh eIu yio u lfctecs estsea .yf,wethg"""
#solve2(text)
#sys.exit(0)

tbres=[]
sol1=""
for want in range(100):
    print "ON >> %d\n"%want
    s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect(('54.209.5.48', 12345))

    for stage in range(2):
        while True:
            txt=s.recv(2048)
            #print txt
            m=re.search('psifer text: ([A-Za-z."\' ,!]*)', txt)
            if m is None:
                continue
            x=m.group(1)

            if stage==0:
                for j in range(26):
                    sol=doRot(x,j)
                    if "the answer" in sol:
                        res=sol.split()
                        sol1=res[-1]
                        s.send(sol1+"\n")
                        break
            elif stage==1:
                #print txt
                #print ">> ", x
                #for j in range(26):
                #    sol=doRot(x.lower(),j)
                #    print sol
                tbres.append([x,sol1])

            break

tbres.sort()
pickle.dump(tbres, open('data.ex2', 'wb'))
for x in tbres:
    tmp=x[0][0:200]
    print ">%20s=%s"%(x[1],tmp)





